{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "# What problem does a \"packspec\" solve? \r\n\r\nThe problem needs to be worth solving. https://github.com/neovim/packspec/issues/41 proposes to limit the scope to: \r\n\r\n1. Defining a dependency tree, in a distributed/federated mannger (no central package registry), using only URLs and versions.\r\n    - Enables [plugin managers](https://github.com/folke/lazy.nvim) to install plugin dependencies without explicit instruction by the end-user.\r\n    - Enables package \"aggregators\" ([example](https://neovimcraft.com/)) to partially discover plugins by walking the dependency tree, which reduces maintenance and increases quality of the list.\r\n3. (TBD) Defining ecosystem-defined hooks for pre-install, post-install etc.\r\n\r\nAnything else? Is this problem worth solving? Does #41 solve it?\r\n\r\n\r\n## Elevator pitch\r\n\r\npackspec (or whatever \"wild west half-baked dependencies declaration format\") is merely a high-leverage, ultra-low-effort way to start formally connecting the _existing web_ of vim/nvim dependencies. It doesn't preclude a LuaRocks or other centralized solution later, it simply formalizes what already exists.\r\n\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "3. Explicitly stating \"engine\" compatibility (Vim 8.2+, Neovim 0.9+) as a stronger contract than a too-easily-overlooked line in a README (and possibly as a replacement for a bunch of homegrown `has('foo')` and `executable('bar')` boilerplate).",
            "created_at": "2023-07-03T15:09:03Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-1618582367",
            "id": 1618582367,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM5geZtf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/1618582367/reactions"
            },
            "updated_at": "2023-07-03T15:09:03Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/1618582367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Via https://twitter.com/oilsforunix/status/1680957458431213569 : \r\n\r\n> I have been lightly working on almost exactly this, many notes on [https://oilshell.zulipchat.com](https://t.co/qk22EV4Iri) (please join). Working name is \"Silo\" for dumb artifacts; \"medo\"/meadow for git-versioned trees.  It's a \"meta\" package manager because it invokes containerized apt, pip, etc.\r\n>\r\n> ... No format yet, right now it's shell scripts making the on-disk format, dealing with root/non-root issues.  It's focused on data too big for git as well.  \r\n>\r\n> ... say you want to build something like a VSCode remote server image for neovim, and add say a whole Pandas stack - more coarse-grained composition.  It can invoke any packager manager including a neovim one, but also pip etc.\r\n\r\nThis oilshell effort sounds more like a \"package manager-manager\" (like how cmake is a \"build script generator\").",
            "created_at": "2023-07-26T15:26:57Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-1652040094",
            "id": 1652040094,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM5ieCGe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/1652040094/reactions"
            },
            "updated_at": "2023-07-26T15:26:57Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/1652040094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is this also intended to be used by plugin managers to generate users' config dependencies?",
            "created_at": "2025-02-14T20:16:48Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2660186015",
            "id": 2660186015,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6ejzef",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2660186015/reactions"
            },
            "updated_at": "2025-02-16T21:49:53Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2660186015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42828375?v=4",
                "events_url": "https://api.github.com/users/sarmong/events{/privacy}",
                "followers_url": "https://api.github.com/users/sarmong/followers",
                "following_url": "https://api.github.com/users/sarmong/following{/other_user}",
                "gists_url": "https://api.github.com/users/sarmong/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sarmong",
                "id": 42828375,
                "login": "sarmong",
                "node_id": "MDQ6VXNlcjQyODI4Mzc1",
                "organizations_url": "https://api.github.com/users/sarmong/orgs",
                "received_events_url": "https://api.github.com/users/sarmong/received_events",
                "repos_url": "https://api.github.com/users/sarmong/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sarmong/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sarmong/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sarmong",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It is intended to calculate dependencies. I don't understand your question.",
            "created_at": "2025-02-16T20:04:35Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2661594078",
            "id": 2661594078,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6epLPe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2661594078/reactions"
            },
            "updated_at": "2025-02-16T21:49:56Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2661594078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "From all the discussions I see, the conversation is about transitive dependencies.\nIf a user wants to install `telescope.nvim`, they wouldn't need to specify `plenary.nvim`, because telescope would have a `pkg.json` in their repo which would specify that it needs plenary and package manager would see it and install the dependencies needed.\nIs my understanding correct?\n \nMy question is about whether it should play a role of `lazy-lock.json`, `deps-snap.lua`, `rocks.toml`(from rocks.nvim) - i.e. not dependencies of a plugin, but dependencies of a user's configuration.\n\nIf yes, then I have following questions.\n\nIn an ideal world, when all plugins have properly defined `pkg.json` and use version tags, the current spec probably fits well.\nHowever, it is impossible to go from 0 to 100 immediately. So users would have to specify configuration themselves for the plugins they use. \nThis would include:\n\n1. Directory to install to (e.g. `catpuccin/nvim` would need to be changed to a valid name)\n2. Branch to track. User may have commit hash as a revision, but commit can be part of history of multiple branches. So if they run `update` with their package manager, what branch should it pull?\n3. Local version (I see that `version` field can use `file://`, however I don't understand the point of it. Rather, the key of the dependency should allow `file://`, which is now \"Only support commit-id, tags, and HEAD\"\n4. Install to `start` or `opt` \n5. Hooks (#23)\n6. Probably some other properties of `plugin_spec` implemented by current package manages?",
            "created_at": "2025-02-16T20:56:14Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2661614326",
            "id": 2661614326,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6epQL2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2661614326/reactions"
            },
            "updated_at": "2025-02-16T21:50:14Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2661614326",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42828375?v=4",
                "events_url": "https://api.github.com/users/sarmong/events{/privacy}",
                "followers_url": "https://api.github.com/users/sarmong/followers",
                "following_url": "https://api.github.com/users/sarmong/following{/other_user}",
                "gists_url": "https://api.github.com/users/sarmong/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sarmong",
                "id": 42828375,
                "login": "sarmong",
                "node_id": "MDQ6VXNlcjQyODI4Mzc1",
                "organizations_url": "https://api.github.com/users/sarmong/orgs",
                "received_events_url": "https://api.github.com/users/sarmong/received_events",
                "repos_url": "https://api.github.com/users/sarmong/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sarmong/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sarmong/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sarmong",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> i.e. not dependencies of a plugin, but dependencies of a user's configuration.\n\nYes. Users can specify their plugins in a local `pkg.json`.\n\n> whether it should play a role of `lazy-lock.json`\n\nLockfile is tracked in https://github.com/neovim/packspec/issues/47\n\n> users would have to specify ...\n> 1\\. Directory to install\n\nThis is defined by the plugin manager. Intentionally not part of the spec, because it's target-dependent. Do you see a problem with that?\n\n> 2\\. Branch to track.\n\nI believe any git ref can be expressed in the version, though this is basically the one thing blocking this project: I need to decide whether we should deviate from NPM's version spec (which is pretty nasty).\n\nI think probably the answer is \"yes, deviate\".\n\n> 3\\. Local version (I see that `version` field can use `file://`, however I don't understand the point of it. Rather, the key of the dependency should allow `file://`, which is now \"Only support commit-id, tags, and HEAD\"\n\nThat might be something inherited from NPM. May need to revisit (see above).\n\n> 4\\. Install to `start` or `opt`\n\nI think the conclusion by the vim/nvim ecosystem is \"neither\" or \"doesn't matter\". It's out of scope for packspac. Nvim/Vim plugin managers need to manage 'runtimepath' (and maybe 'packpath').\n\n> 5\\. Hooks ([Post-install hook #23](https://github.com/neovim/packspec/issues/23))\n\nNPM has a spec around this. `scripts`, `pre*`, `post*`.\n\n> 6\\. Probably some other properties of `plugin_spec` implemented by current package manages?\n\nPart of the work of packspec is to leave target-dependent decisions up to the target. The goal here is, narrowly, to allow dependencies + versions to be specified; everything beyond that is out of scope.",
            "created_at": "2025-02-16T21:49:05Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2661633463",
            "id": 2661633463,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6epU23",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2661633463/reactions"
            },
            "updated_at": "2025-02-16T21:49:05Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2661633463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am asking all of this because I see flaws in all current plugin managers, as they don't have easy access to all plugin specs from the start.\n\n- Lazy - has access to all plugin specs on load, but takes control over user's config entirely, which is a big downside for me\n- Mini.deps - benefit that user can have flat config with no magic and take control over plugin loading with `.use`. However, since the plugin manager doesn't know about all plugins ahead, this causes plugins to install synchronously one by one.\n- Pckr (and mini.deps can be used like this too) - have all plugin definitions in one place separate from their configs. Downside - it is lua code, so it cannot be modified programmatically. \n\nI am currently exploring a solution wherein user can call `Install` command, which will write plugin spec to json file and then gives control to loading of the plugin back to the user (for opt).\n\nSo, in my opinion, this may fix my dissatisfaction with current plugin managers - no magic, flat config, programmatically writable spec file and asynchronous installs.\n\nNot sure if the issues I touched upon even matter to anyone, but I came to explore packspec to see if my solution can be made in a standardized manner, to not create another snapshot/dependencies/lockfile specification used only by me.\n\n",
            "created_at": "2025-02-17T23:44:55Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2664238755",
            "id": 2664238755,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6ezQ6j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2664238755/reactions"
            },
            "updated_at": "2025-02-17T23:44:55Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2664238755",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42828375?v=4",
                "events_url": "https://api.github.com/users/sarmong/events{/privacy}",
                "followers_url": "https://api.github.com/users/sarmong/followers",
                "following_url": "https://api.github.com/users/sarmong/following{/other_user}",
                "gists_url": "https://api.github.com/users/sarmong/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sarmong",
                "id": 42828375,
                "login": "sarmong",
                "node_id": "MDQ6VXNlcjQyODI4Mzc1",
                "organizations_url": "https://api.github.com/users/sarmong/orgs",
                "received_events_url": "https://api.github.com/users/sarmong/received_events",
                "repos_url": "https://api.github.com/users/sarmong/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sarmong/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sarmong/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sarmong",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I am asking all of this because I see flaws in all current plugin managers, as they don't have easy access to all plugin specs from the start.\n\nIt means you need spec repository like Emacs MELPA?\nhttps://melpa.org/\n\nCertainly, having a central repository would be convenient for users to search and install plugins, but there are several issues:\n\n* Who will register and update the plugins?\n* Who will set up and maintain the repository?\n\nNote: In the case of MELPA, the approval process seems to be manual.",
            "created_at": "2025-02-18T01:51:42Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2664428833",
            "id": 2664428833,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6ez_Uh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2664428833/reactions"
            },
            "updated_at": "2025-02-18T01:51:42Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2664428833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "No, I didn't mean central repository, although this seems like an interesting idea.\n\nI meant json file in user's config that holds user-defined plugin spec (commit/tag, branch, dir, hooks, opt/start, etc.). \nBasically the same thing that current plugin managers' plugin specs hold, just in a centralized json file over lua files in users' configs. Benefit is that it is programmatically writable and plugin managers can see full specs from the start.",
            "created_at": "2025-02-18T12:53:34Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2665634118",
            "id": 2665634118,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6e4llG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2665634118/reactions"
            },
            "updated_at": "2025-02-18T12:53:34Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2665634118",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42828375?v=4",
                "events_url": "https://api.github.com/users/sarmong/events{/privacy}",
                "followers_url": "https://api.github.com/users/sarmong/followers",
                "following_url": "https://api.github.com/users/sarmong/following{/other_user}",
                "gists_url": "https://api.github.com/users/sarmong/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sarmong",
                "id": 42828375,
                "login": "sarmong",
                "node_id": "MDQ6VXNlcjQyODI4Mzc1",
                "organizations_url": "https://api.github.com/users/sarmong/orgs",
                "received_events_url": "https://api.github.com/users/sarmong/received_events",
                "repos_url": "https://api.github.com/users/sarmong/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sarmong/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sarmong/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sarmong",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not to hijack the thread but there is IMO a pretty successful POC based on rockspecs (the format used by luarocks) with luarocks.org holding probably > 400 neovim plugins (https://github.com/nvim-neorocks/nurr uploads 350 by itself). With https://github.com/nvim-neorocks/rocks.nvim you can `Rocks install <PLUGIN>` and it magically installs dependencies. This is also used in [nixpkgs](https://github.com/NixOS/nixpkgs/blob/1ab9b7f2e746eb143afcfa3decbb6d5d0f9dd8ad/pkgs/applications/editors/vim/plugins/overrides.nix#L4021) to automatically deduce dependencies.\n\nMy petpeeve and my main frustration with the plugin ecosystem now is that all plugins mandate some sort of setup when there shouldn't be any ! Many plugins require empty `require'freaking-plugin'.setup()` calls to even work ! So I've got this wonderful UI where I can install/remove at will plugins but it's of no use since afterwards I've got to add some silly configuration. One of neovim goal was is to make vim more approachable and work out of the box and this trend is counter to that. \n\nSo packspecs might do more but a lot could be accomplished first by the usage of vim builtins (autoload and so on).",
            "created_at": "2025-02-18T18:27:33Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2666549002",
            "id": 2666549002,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6e8E8K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2666549002/reactions"
            },
            "updated_at": "2025-02-18T18:27:33Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2666549002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> My petpeeve and my main frustration with the plugin ecosystem now is that all plugins mandate some sort of setup when there shouldn't be any ! Many plugins require empty require'freaking-plugin'.setup() calls to even work ! So I've got this wonderful UI where I can install/remove at will plugins but it's of no use since afterwards I've got to add some silly configuration. One of neovim goal was is to make vim more approachable and work out of the box and this trend is counter to that.\n\nI don't think this is absurd. The fact that plugins work when users write configurations aligns with my philosophy that \"users should handle all settings\". If plugins were to work automatically upon installation, there is a risk that users wouldn't be able to tell which plugins are active just by looking at the configuration files.",
            "created_at": "2025-02-19T00:20:20Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2667215160",
            "id": 2667215160,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6e-nk4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2667215160/reactions"
            },
            "updated_at": "2025-02-19T18:04:27Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2667215160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just to make things clear, I dont contest that some plugins require configuration but 80% could happily work without a config out of the box.\n\n>  If plugins were to work automatically upon installation, there is a risk that users wouldn't be able to tell which plugins are active just by looking at the configuration files.\n\nIf you dont use the plugin, dont install it ?! or install it in packpath's `opt/`. \nAlso my beef with `setup` is that it's a `require\"plugin\".setup()` so once you uninstalled the plugin it triggers an error. Much better is to have the config in `vim.g.MYPLUGIN_config`. While I am less active on the main neovim repo, I test out lots of plugins for packaging purposes/help and having to constantly add/remove setup lines is irritating. https://github.com/nvim-neorocks/rocks-config.nvim/ alleviates this a bit but I can't always use it.",
            "created_at": "2025-02-19T09:51:28Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2668098310",
            "id": 2668098310,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6fB_MG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2668098310/reactions"
            },
            "updated_at": "2025-02-19T09:51:28Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2668098310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> If plugins were to work automatically upon installation, there is a risk that users wouldn't be able to tell which plugins are active just by looking at the configuration files.\n\nI think people rarely need that, the only use case I can think of is debugging, but if I need to, I would rather use a comand that is a wrapper of\n```lua\nprint(table.concat(vim.api.nvim_list_runtime_paths(), '\\n'))\n```\n\nAn alternative choice to disable a plugin for a session would be just comment out part of the config code that declare the plugin.",
            "created_at": "2025-02-28T15:01:44Z",
            "html_url": "https://github.com/neovim/packspec/issues/42#issuecomment-2690865114",
            "id": 2690865114,
            "issue_url": "https://api.github.com/repos/neovim/packspec/issues/42",
            "node_id": "IC_kwDOGzG0uM6gY1fa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2690865114/reactions"
            },
            "updated_at": "2025-03-01T14:58:23Z",
            "url": "https://api.github.com/repos/neovim/packspec/issues/comments/2690865114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/packspec/issues/42/comments",
    "created_at": "2023-07-03T15:04:05Z",
    "events_url": "https://api.github.com/repos/neovim/packspec/issues/42/events",
    "html_url": "https://github.com/neovim/packspec/issues/42",
    "id": 1786357649,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/packspec/issues/42/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOGzG0uM5qeaeR",
    "number": 42,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/packspec/issues/42/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/packspec",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/packspec/issues/42/timeline",
    "title": "What problem does this solve?",
    "updated_at": "2025-03-01T14:58:23Z",
    "url": "https://api.github.com/repos/neovim/packspec/issues/42",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}