{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33189/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33189/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33189"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33189"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33189/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/f0f7b61b2a3cd26e7324648216d121d660f3bfad"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6015,
            "forks_count": 6015,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1915,
            "open_issues_count": 1915,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-04-15T00:58:00Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 317153,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 88635,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-04-15T02:31:15Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 88635,
            "watchers_count": 88635,
            "web_commit_signoff_required": false
        },
        "sha": "ee143aaf65a0e662c42c636aa4a959682858b3e7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: missing bold style of border\r\n\r\nSolution: add 'bold' style\r\n\r\nFix #33178",
    "closed_at": "2025-03-31T13:39:50Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2020180931"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020180931"
                }
            },
            "author_association": "MEMBER",
            "body": "Do we really need 100 lines of test code for this? Now I'm wondering how much other test code exists for the other variations. \r\n\r\nWe only need 1 or 2 tests that test all the variations. And then the rest of the variations can be *exercised* with 1 line of test code, and maybe 1 or 2 assertions, but they don't need 100 lines of screen test code.",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-30T15:09:56Z",
            "diff_hunk": "@@ -10160,6 +10160,72 @@ describe('float window', function()\n       command('fclose!')\n       -- it is currently not supported.\n       eq('Vim(set):E474: Invalid argument: winborder=custom', pcall_err(command, 'set winborder=custom'))\n+\n+      command('set winborder=bold')",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2020180931",
            "id": 2020180931,
            "line": 9687,
            "node_id": "PRRC_kwDOAPphoM54aYPD",
            "original_commit_id": "2dce21099364d10ccf07c4a0191afeba32883cfd",
            "original_line": 9687,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 554,
            "pull_request_review_id": 2727929050,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020180931/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-30T15:10:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020180931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2020494355"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020494355"
                }
            },
            "author_association": "MEMBER",
            "body": "I have cleaned up some",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T06:58:32Z",
            "diff_hunk": "@@ -10160,6 +10160,72 @@ describe('float window', function()\n       command('fclose!')\n       -- it is currently not supported.\n       eq('Vim(set):E474: Invalid argument: winborder=custom', pcall_err(command, 'set winborder=custom'))\n+\n+      command('set winborder=bold')",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2020494355",
            "id": 2020494355,
            "in_reply_to_id": 2020180931,
            "line": 9687,
            "node_id": "PRRC_kwDOAPphoM54bkwT",
            "original_commit_id": "2dce21099364d10ccf07c4a0191afeba32883cfd",
            "original_line": 9687,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 554,
            "pull_request_review_id": 2728375027,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020494355/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-31T06:58:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020494355",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021040947"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021040947"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• 'winborder' add \"bold\" style.\r\n```",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:23:25Z",
            "diff_hunk": "@@ -135,6 +135,8 @@ OPTIONS\n • 'completefuzzycollect' enables fuzzy collection of candidates for (some)\n   |ins-completion| modes.\n \n+• 'winborder' add bold style.",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021040947",
            "id": 2021040947,
            "line": 138,
            "node_id": "PRRC_kwDOAPphoM54dqMz",
            "original_commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "original_line": 138,
            "original_position": 4,
            "original_start_line": 137,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 2729286368,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021040947/reactions"
            },
            "side": "RIGHT",
            "start_line": 137,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-31T13:23:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021040947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021041928"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021041928"
                }
            },
            "author_association": "MEMBER",
            "body": "sort",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:23:55Z",
            "diff_hunk": "@@ -10257,7 +10257,7 @@ local options = {\n     },\n     {\n       defaults = { if_true = '' },\n-      values = { '', 'double', 'single', 'shadow', 'rounded', 'solid', 'none' },\n+      values = { '', 'double', 'single', 'shadow', 'rounded', 'solid', 'bold', 'none' },",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021041928",
            "id": 2021041928,
            "line": 10260,
            "node_id": "PRRC_kwDOAPphoM54dqcI",
            "original_commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "original_line": 10260,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 5,
            "pull_request_review_id": 2729288845,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021041928/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-31T13:23:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021041928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021042897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021042897"
                }
            },
            "author_association": "MEMBER",
            "body": "let's sort these alphabetically ?",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:24:27Z",
            "diff_hunk": "@@ -10267,6 +10267,7 @@ local options = {\n         - \"rounded\": Like \"single\", but with rounded corners (\"╭\" etc.).\n         - \"solid\": Adds padding by a single whitespace cell.\n         - \"shadow\": A drop shadow effect by blending with the background.\n+        - \"bold\": A bold line box.",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021042897",
            "id": 2021042897,
            "line": 10270,
            "node_id": "PRRC_kwDOAPphoM54dqrR",
            "original_commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "original_line": 10270,
            "original_position": 13,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 13,
            "pull_request_review_id": 2729291469,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021042897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-31T13:24:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021042897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021044879"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021044879"
                }
            },
            "author_association": "MEMBER",
            "body": "single quotes.\r\n\r\nfloat_spec is currently ignored by lint: https://github.com/neovim/neovim/blob/ee143aaf65a0e662c42c636aa4a959682858b3e7/.styluaignore#L8\r\n\r\nwe should probably un-ignore it by now (not in this PR though)",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:25:37Z",
            "diff_hunk": "@@ -1745,286 +1745,29 @@ describe('float window', function()\n       api.nvim_buf_set_lines(buf, 0, -1, true, {' halloj! ',\n                                              ' BORDAA  '})\n       local win = api.nvim_open_win(buf, false, {relative='editor', width=9, height=2, row=2, col=5, border=\"double\"})\n-\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:╔═════════╗}|\n-          {5:║}{1: halloj! }{5:║}|\n-          {5:║}{1: BORDAA  }{5:║}|\n-          {5:╚═════════╝}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        },\n-        win_viewport_margins={\n-          [2] = {win = 1000, top = 0, bottom = 0, left = 0, right = 0};\n-          [4] = {win = 1001, top = 1, bottom = 1, left = 1, right = 1};\n-        }\n-      }\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:╔═════════╗}{0:                        }|\n-          {0:~    }{5:║}{1: halloj! }{5:║}{0:                        }|\n-          {0:~    }{5:║}{1: BORDAA  }{5:║}{0:                        }|\n-          {0:~    }{5:╚═════════╝}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('╔', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"single\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:┌─────────┐}|\n-          {5:│}{1: halloj! }{5:│}|\n-          {5:│}{1: BORDAA  }{5:│}|\n-          {5:└─────────┘}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:┌─────────┐}{0:                        }|\n-          {0:~    }{5:│}{1: halloj! }{5:│}{0:                        }|\n-          {0:~    }{5:│}{1: BORDAA  }{5:│}{0:                        }|\n-          {0:~    }{5:└─────────┘}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('┌', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"rounded\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:╭─────────╮}|\n-          {5:│}{1: halloj! }{5:│}|\n-          {5:│}{1: BORDAA  }{5:│}|\n-          {5:╰─────────╯}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:╭─────────╮}{0:                        }|\n-          {0:~    }{5:│}{1: halloj! }{5:│}{0:                        }|\n-          {0:~    }{5:│}{1: BORDAA  }{5:│}{0:                        }|\n-          {0:~    }{5:╰─────────╯}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('╭', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"solid\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:           }|\n-          {5: }{1: halloj! }{5: }|\n-          {5: }{1: BORDAA  }{5: }|\n-          {5:           }|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:           }{0:                        }|\n-          {0:~    }{5: }{1: halloj! }{5: }{0:                        }|\n-          {0:~    }{5: }{1: BORDAA  }{5: }{0:                        }|\n-          {0:~    }{5:           }{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq(' ', api.nvim_win_get_config(win).border[1])\n \n       -- support: ascii char, UTF-8 char, composed char, highlight per char\n       api.nvim_win_set_config(win, {border={\"x\", {\"å\", \"ErrorMsg\"}, {\"\\\\\"}, {\"n̈̊\", \"Search\"}}})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:x}{7:ååååååååå}{5:\\}|\n-          {17:n̈̊}{1: halloj! }{17:n̈̊}|\n-          {17:n̈̊}{1: BORDAA  }{17:n̈̊}|\n-          {5:\\}{7:ååååååååå}{5:x}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:x}{7:ååååååååå}{5:\\}{0:                        }|\n-          {0:~    }{17:n̈̊}{1: halloj! }{17:n̈̊}{0:                        }|\n-          {0:~    }{17:n̈̊}{1: BORDAA  }{17:n̈̊}{0:                        }|\n-          {0:~    }{5:\\}{7:ååååååååå}{5:x}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq({\"x\", {\"å\", \"ErrorMsg\"}, \"\\\\\", {\"n̈̊\", \"Search\"}, \"x\", {\"å\", \"ErrorMsg\"}, \"\\\\\", {\"n̈̊\", \"Search\"}}, api.nvim_win_get_config(win).border)",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021044879",
            "id": 2021044879,
            "line": 1761,
            "node_id": "PRRC_kwDOAPphoM54drKP",
            "original_commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "original_line": 1761,
            "original_position": 183,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 183,
            "pull_request_review_id": 2729294657,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021044879/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-31T13:25:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021044879",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021047185"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021047185"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks good, but did you remove _all_ the screen tests for 'winborder'? We should have at least _one_ screen test for it. We just don't need screen tests for _every_ different value.",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:27:05Z",
            "diff_hunk": "@@ -10160,6 +10160,72 @@ describe('float window', function()\n       command('fclose!')\n       -- it is currently not supported.\n       eq('Vim(set):E474: Invalid argument: winborder=custom', pcall_err(command, 'set winborder=custom'))\n+\n+      command('set winborder=bold')",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021047185",
            "id": 2021047185,
            "in_reply_to_id": 2020180931,
            "line": 9687,
            "node_id": "PRRC_kwDOAPphoM54druR",
            "original_commit_id": "2dce21099364d10ccf07c4a0191afeba32883cfd",
            "original_line": 9687,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 554,
            "pull_request_review_id": 2729298572,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021047185/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-31T13:27:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021047185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021062035"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021062035"
                }
            },
            "author_association": "MEMBER",
            "body": "There are several border screen tests in before test `can have border` block . essentially they are the same thing.",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:36:28Z",
            "diff_hunk": "@@ -10160,6 +10160,72 @@ describe('float window', function()\n       command('fclose!')\n       -- it is currently not supported.\n       eq('Vim(set):E474: Invalid argument: winborder=custom', pcall_err(command, 'set winborder=custom'))\n+\n+      command('set winborder=bold')",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021062035",
            "id": 2021062035,
            "in_reply_to_id": 2020180931,
            "line": 9687,
            "node_id": "PRRC_kwDOAPphoM54dvWT",
            "original_commit_id": "2dce21099364d10ccf07c4a0191afeba32883cfd",
            "original_line": 9687,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 554,
            "pull_request_review_id": 2729324151,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 1,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021062035/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-31T13:36:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021062035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021066515"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021066515"
                }
            },
            "author_association": "MEMBER",
            "body": "I just pasted in the previous test code using double ",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:39:26Z",
            "diff_hunk": "@@ -1745,286 +1745,29 @@ describe('float window', function()\n       api.nvim_buf_set_lines(buf, 0, -1, true, {' halloj! ',\n                                              ' BORDAA  '})\n       local win = api.nvim_open_win(buf, false, {relative='editor', width=9, height=2, row=2, col=5, border=\"double\"})\n-\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:╔═════════╗}|\n-          {5:║}{1: halloj! }{5:║}|\n-          {5:║}{1: BORDAA  }{5:║}|\n-          {5:╚═════════╝}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        },\n-        win_viewport_margins={\n-          [2] = {win = 1000, top = 0, bottom = 0, left = 0, right = 0};\n-          [4] = {win = 1001, top = 1, bottom = 1, left = 1, right = 1};\n-        }\n-      }\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:╔═════════╗}{0:                        }|\n-          {0:~    }{5:║}{1: halloj! }{5:║}{0:                        }|\n-          {0:~    }{5:║}{1: BORDAA  }{5:║}{0:                        }|\n-          {0:~    }{5:╚═════════╝}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('╔', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"single\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:┌─────────┐}|\n-          {5:│}{1: halloj! }{5:│}|\n-          {5:│}{1: BORDAA  }{5:│}|\n-          {5:└─────────┘}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:┌─────────┐}{0:                        }|\n-          {0:~    }{5:│}{1: halloj! }{5:│}{0:                        }|\n-          {0:~    }{5:│}{1: BORDAA  }{5:│}{0:                        }|\n-          {0:~    }{5:└─────────┘}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('┌', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"rounded\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:╭─────────╮}|\n-          {5:│}{1: halloj! }{5:│}|\n-          {5:│}{1: BORDAA  }{5:│}|\n-          {5:╰─────────╯}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:╭─────────╮}{0:                        }|\n-          {0:~    }{5:│}{1: halloj! }{5:│}{0:                        }|\n-          {0:~    }{5:│}{1: BORDAA  }{5:│}{0:                        }|\n-          {0:~    }{5:╰─────────╯}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('╭', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"solid\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:           }|\n-          {5: }{1: halloj! }{5: }|\n-          {5: }{1: BORDAA  }{5: }|\n-          {5:           }|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:           }{0:                        }|\n-          {0:~    }{5: }{1: halloj! }{5: }{0:                        }|\n-          {0:~    }{5: }{1: BORDAA  }{5: }{0:                        }|\n-          {0:~    }{5:           }{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq(' ', api.nvim_win_get_config(win).border[1])\n \n       -- support: ascii char, UTF-8 char, composed char, highlight per char\n       api.nvim_win_set_config(win, {border={\"x\", {\"å\", \"ErrorMsg\"}, {\"\\\\\"}, {\"n̈̊\", \"Search\"}}})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:x}{7:ååååååååå}{5:\\}|\n-          {17:n̈̊}{1: halloj! }{17:n̈̊}|\n-          {17:n̈̊}{1: BORDAA  }{17:n̈̊}|\n-          {5:\\}{7:ååååååååå}{5:x}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:x}{7:ååååååååå}{5:\\}{0:                        }|\n-          {0:~    }{17:n̈̊}{1: halloj! }{17:n̈̊}{0:                        }|\n-          {0:~    }{17:n̈̊}{1: BORDAA  }{17:n̈̊}{0:                        }|\n-          {0:~    }{5:\\}{7:ååååååååå}{5:x}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq({\"x\", {\"å\", \"ErrorMsg\"}, \"\\\\\", {\"n̈̊\", \"Search\"}, \"x\", {\"å\", \"ErrorMsg\"}, \"\\\\\", {\"n̈̊\", \"Search\"}}, api.nvim_win_get_config(win).border)",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021066515",
            "id": 2021066515,
            "in_reply_to_id": 2021044879,
            "line": 1761,
            "node_id": "PRRC_kwDOAPphoM54dwcT",
            "original_commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "original_line": 1761,
            "original_position": 183,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 183,
            "pull_request_review_id": 2729332510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021066515/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-31T13:39:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021066515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021066771"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021066771"
                }
            },
            "author_association": "MEMBER",
            "body": "Please keep this one. No previous screen tests use composed chars.",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:39:34Z",
            "diff_hunk": "@@ -1745,286 +1745,29 @@ describe('float window', function()\n       api.nvim_buf_set_lines(buf, 0, -1, true, {' halloj! ',\n                                              ' BORDAA  '})\n       local win = api.nvim_open_win(buf, false, {relative='editor', width=9, height=2, row=2, col=5, border=\"double\"})\n-\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:╔═════════╗}|\n-          {5:║}{1: halloj! }{5:║}|\n-          {5:║}{1: BORDAA  }{5:║}|\n-          {5:╚═════════╝}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        },\n-        win_viewport_margins={\n-          [2] = {win = 1000, top = 0, bottom = 0, left = 0, right = 0};\n-          [4] = {win = 1001, top = 1, bottom = 1, left = 1, right = 1};\n-        }\n-      }\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:╔═════════╗}{0:                        }|\n-          {0:~    }{5:║}{1: halloj! }{5:║}{0:                        }|\n-          {0:~    }{5:║}{1: BORDAA  }{5:║}{0:                        }|\n-          {0:~    }{5:╚═════════╝}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('╔', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"single\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:┌─────────┐}|\n-          {5:│}{1: halloj! }{5:│}|\n-          {5:│}{1: BORDAA  }{5:│}|\n-          {5:└─────────┘}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:┌─────────┐}{0:                        }|\n-          {0:~    }{5:│}{1: halloj! }{5:│}{0:                        }|\n-          {0:~    }{5:│}{1: BORDAA  }{5:│}{0:                        }|\n-          {0:~    }{5:└─────────┘}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('┌', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"rounded\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:╭─────────╮}|\n-          {5:│}{1: halloj! }{5:│}|\n-          {5:│}{1: BORDAA  }{5:│}|\n-          {5:╰─────────╯}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:╭─────────╮}{0:                        }|\n-          {0:~    }{5:│}{1: halloj! }{5:│}{0:                        }|\n-          {0:~    }{5:│}{1: BORDAA  }{5:│}{0:                        }|\n-          {0:~    }{5:╰─────────╯}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('╭', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"solid\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:           }|\n-          {5: }{1: halloj! }{5: }|\n-          {5: }{1: BORDAA  }{5: }|\n-          {5:           }|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:           }{0:                        }|\n-          {0:~    }{5: }{1: halloj! }{5: }{0:                        }|\n-          {0:~    }{5: }{1: BORDAA  }{5: }{0:                        }|\n-          {0:~    }{5:           }{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq(' ', api.nvim_win_get_config(win).border[1])\n \n       -- support: ascii char, UTF-8 char, composed char, highlight per char\n       api.nvim_win_set_config(win, {border={\"x\", {\"å\", \"ErrorMsg\"}, {\"\\\\\"}, {\"n̈̊\", \"Search\"}}})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:x}{7:ååååååååå}{5:\\}|\n-          {17:n̈̊}{1: halloj! }{17:n̈̊}|\n-          {17:n̈̊}{1: BORDAA  }{17:n̈̊}|\n-          {5:\\}{7:ååååååååå}{5:x}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:x}{7:ååååååååå}{5:\\}{0:                        }|\n-          {0:~    }{17:n̈̊}{1: halloj! }{17:n̈̊}{0:                        }|\n-          {0:~    }{17:n̈̊}{1: BORDAA  }{17:n̈̊}{0:                        }|\n-          {0:~    }{5:\\}{7:ååååååååå}{5:x}{0:                        }|\n-                                                  |\n-        ]]}\n-      end",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021066771",
            "id": 2021066771,
            "line": 1922,
            "node_id": "PRRC_kwDOAPphoM54dwgT",
            "original_commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "original_line": 1922,
            "original_position": 182,
            "original_start_line": 1891,
            "path": "test/functional/ui/float_spec.lua",
            "position": 182,
            "pull_request_review_id": 2729333178,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021066771/reactions"
            },
            "side": "LEFT",
            "start_line": 1891,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-03-31T13:40:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021066771",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021069605"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021069605"
                }
            },
            "author_association": "MEMBER",
            "body": "These two should be kept too, otherwise there is no check that the hidden border parts are actually hidden.",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:41:15Z",
            "diff_hunk": "@@ -1745,286 +1745,29 @@ describe('float window', function()\n       api.nvim_buf_set_lines(buf, 0, -1, true, {' halloj! ',\n                                              ' BORDAA  '})\n       local win = api.nvim_open_win(buf, false, {relative='editor', width=9, height=2, row=2, col=5, border=\"double\"})\n-\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:╔═════════╗}|\n-          {5:║}{1: halloj! }{5:║}|\n-          {5:║}{1: BORDAA  }{5:║}|\n-          {5:╚═════════╝}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        },\n-        win_viewport_margins={\n-          [2] = {win = 1000, top = 0, bottom = 0, left = 0, right = 0};\n-          [4] = {win = 1001, top = 1, bottom = 1, left = 1, right = 1};\n-        }\n-      }\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:╔═════════╗}{0:                        }|\n-          {0:~    }{5:║}{1: halloj! }{5:║}{0:                        }|\n-          {0:~    }{5:║}{1: BORDAA  }{5:║}{0:                        }|\n-          {0:~    }{5:╚═════════╝}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('╔', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"single\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:┌─────────┐}|\n-          {5:│}{1: halloj! }{5:│}|\n-          {5:│}{1: BORDAA  }{5:│}|\n-          {5:└─────────┘}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:┌─────────┐}{0:                        }|\n-          {0:~    }{5:│}{1: halloj! }{5:│}{0:                        }|\n-          {0:~    }{5:│}{1: BORDAA  }{5:│}{0:                        }|\n-          {0:~    }{5:└─────────┘}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('┌', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"rounded\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:╭─────────╮}|\n-          {5:│}{1: halloj! }{5:│}|\n-          {5:│}{1: BORDAA  }{5:│}|\n-          {5:╰─────────╯}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:╭─────────╮}{0:                        }|\n-          {0:~    }{5:│}{1: halloj! }{5:│}{0:                        }|\n-          {0:~    }{5:│}{1: BORDAA  }{5:│}{0:                        }|\n-          {0:~    }{5:╰─────────╯}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq('╭', api.nvim_win_get_config(win).border[1])\n \n       api.nvim_win_set_config(win, {border=\"solid\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:           }|\n-          {5: }{1: halloj! }{5: }|\n-          {5: }{1: BORDAA  }{5: }|\n-          {5:           }|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:           }{0:                        }|\n-          {0:~    }{5: }{1: halloj! }{5: }{0:                        }|\n-          {0:~    }{5: }{1: BORDAA  }{5: }{0:                        }|\n-          {0:~    }{5:           }{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq(' ', api.nvim_win_get_config(win).border[1])\n \n       -- support: ascii char, UTF-8 char, composed char, highlight per char\n       api.nvim_win_set_config(win, {border={\"x\", {\"å\", \"ErrorMsg\"}, {\"\\\\\"}, {\"n̈̊\", \"Search\"}}})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:x}{7:ååååååååå}{5:\\}|\n-          {17:n̈̊}{1: halloj! }{17:n̈̊}|\n-          {17:n̈̊}{1: BORDAA  }{17:n̈̊}|\n-          {5:\\}{7:ååååååååå}{5:x}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:x}{7:ååååååååå}{5:\\}{0:                        }|\n-          {0:~    }{17:n̈̊}{1: halloj! }{17:n̈̊}{0:                        }|\n-          {0:~    }{17:n̈̊}{1: BORDAA  }{17:n̈̊}{0:                        }|\n-          {0:~    }{5:\\}{7:ååååååååå}{5:x}{0:                        }|\n-                                                  |\n-        ]]}\n-      end\n+      eq({\"x\", {\"å\", \"ErrorMsg\"}, \"\\\\\", {\"n̈̊\", \"Search\"}, \"x\", {\"å\", \"ErrorMsg\"}, \"\\\\\", {\"n̈̊\", \"Search\"}}, api.nvim_win_get_config(win).border)\n \n       api.nvim_win_set_config(win, {border=\"none\"})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {1: halloj! }|\n-          {1: BORDAA  }|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{1: halloj! }{0:                          }|\n-          {0:~    }{1: BORDAA  }{0:                          }|\n-          {0:~                                       }|*2\n-                                                  |\n-        ]]}\n-      end\n+      eq(nil, api.nvim_win_get_config(win).border)\n \n       api.nvim_win_set_config(win, {border={\"\", \"\", \"\", \">\", \"\", \"\", \"\", \"<\"}})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:<}{1: halloj! }{5:>}|\n-          {5:<}{1: BORDAA  }{5:>}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        },\n-        win_viewport_margins={\n-          [2] = {win = 1000, top = 0, bottom = 0, left = 0, right = 0};\n-          [4] = {win = 1001, top = 0, bottom = 0, left = 1, right = 1};\n-        }\n-      }\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:<}{1: halloj! }{5:>}{0:                        }|\n-          {0:~    }{5:<}{1: BORDAA  }{5:>}{0:                        }|\n-          {0:~                                       }|*2\n-                                                  |\n-        ]]}\n-      end\n+      eq({\"\", \"\", \"\", \">\", \"\", \"\", \"\", \"<\"}, api.nvim_win_get_config(win).border)\n \n       api.nvim_win_set_config(win, {border={\"\", \"_\", \"\", \"\", \"\", \"-\", \"\", \"\"}})\n-      if multigrid then\n-        screen:expect{grid=[[\n-        ## grid 1\n-          [2:----------------------------------------]|*6\n-          [3:----------------------------------------]|\n-        ## grid 2\n-          ^                                        |\n-          {0:~                                       }|*5\n-        ## grid 3\n-                                                  |\n-        ## grid 4\n-          {5:_________}|\n-          {1: halloj! }|\n-          {1: BORDAA  }|\n-          {5:---------}|\n-        ]], float_pos={\n-          [4] = { 1001, \"NW\", 1, 2, 5, true }\n-        }, win_viewport={\n-          [2] = {win = 1000, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 1, sum_scroll_delta = 0};\n-          [4] = {win = 1001, topline = 0, botline = 2, curline = 0, curcol = 0, linecount = 2, sum_scroll_delta = 0};\n-        },\n-        win_viewport_margins={\n-          [2] = {win = 1000, top = 0, bottom = 0, left = 0, right = 0};\n-          [4] = {win = 1001, top = 1, bottom = 1, left = 0, right = 0};\n-        }}\n-      else\n-        screen:expect{grid=[[\n-          ^                                        |\n-          {0:~                                       }|\n-          {0:~    }{5:_________}{0:                          }|\n-          {0:~    }{1: halloj! }{0:                          }|\n-          {0:~    }{1: BORDAA  }{0:                          }|\n-          {0:~    }{5:---------}{0:                          }|\n-                                                  |\n-        ]]}\n-      end\n+      eq({\"\", \"_\", \"\", \"\", \"\", \"-\", \"\", \"\"}, api.nvim_win_get_config(win).border)",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021069605",
            "id": 2021069605,
            "line": 1770,
            "node_id": "PRRC_kwDOAPphoM54dxMl",
            "original_commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "original_line": 1770,
            "original_position": 291,
            "original_start_line": 1956,
            "path": "test/functional/ui/float_spec.lua",
            "position": 291,
            "pull_request_review_id": 2729341337,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021069605/reactions"
            },
            "side": "RIGHT",
            "start_line": 1956,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-03-31T13:41:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021069605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021074201"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021074201"
                }
            },
            "author_association": "MEMBER",
            "body": "No they're not",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:44:00Z",
            "diff_hunk": "@@ -10160,6 +10160,72 @@ describe('float window', function()\n       command('fclose!')\n       -- it is currently not supported.\n       eq('Vim(set):E474: Invalid argument: winborder=custom', pcall_err(command, 'set winborder=custom'))\n+\n+      command('set winborder=bold')",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021074201",
            "id": 2021074201,
            "in_reply_to_id": 2020180931,
            "line": 9687,
            "node_id": "PRRC_kwDOAPphoM54dyUZ",
            "original_commit_id": "2dce21099364d10ccf07c4a0191afeba32883cfd",
            "original_line": 9687,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 554,
            "pull_request_review_id": 2729354455,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021074201/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-31T13:44:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021074201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33189#discussion_r2021086529"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021086529"
                }
            },
            "author_association": "MEMBER",
            "body": "Why only mention `'winborder'`, not `nvim_open_win`?",
            "commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "created_at": "2025-03-31T13:50:10Z",
            "diff_hunk": "@@ -135,6 +135,8 @@ OPTIONS\n • 'completefuzzycollect' enables fuzzy collection of candidates for (some)\n   |ins-completion| modes.\n \n+• 'winborder' add bold style.",
            "html_url": "https://github.com/neovim/neovim/pull/33189#discussion_r2021086529",
            "id": 2021086529,
            "in_reply_to_id": 2021040947,
            "line": 138,
            "node_id": "PRRC_kwDOAPphoM54d1VB",
            "original_commit_id": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
            "original_line": 138,
            "original_position": 4,
            "original_start_line": 137,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 2729376659,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021086529/reactions"
            },
            "side": "RIGHT",
            "start_line": 137,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-31T13:50:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2021086529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I'll make the docs changes.",
            "created_at": "2025-03-31T13:39:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/33189#issuecomment-2766270286",
            "id": 2766270286,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33189",
            "node_id": "IC_kwDOAPphoM6k4e9O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2766270286/reactions"
            },
            "updated_at": "2025-03-31T13:39:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2766270286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Successfully created backport PR for `release-0.11`:\n- #33221",
            "created_at": "2025-03-31T13:40:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/33189#issuecomment-2766271330",
            "id": 2766271330,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33189",
            "node_id": "IC_kwDOAPphoM6k4fNi",
            "performed_via_github_app": {
                "client_id": "Iv23lig4DyAliuVagKSN",
                "created_at": "2024-07-16T09:59:15Z",
                "description": "",
                "events": [],
                "external_url": "https://neovim.io/",
                "html_url": "https://github.com/apps/neovim-backports",
                "id": 946290,
                "name": "neovim backports",
                "node_id": "A_kwHOAGK_Pc4ADnBy",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                    "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                    "followers_url": "https://api.github.com/users/neovim/followers",
                    "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                    "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                    "gravatar_id": "",
                    "html_url": "https://github.com/neovim",
                    "id": 6471485,
                    "login": "neovim",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                    "organizations_url": "https://api.github.com/users/neovim/orgs",
                    "received_events_url": "https://api.github.com/users/neovim/received_events",
                    "repos_url": "https://api.github.com/users/neovim/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                    "type": "Organization",
                    "url": "https://api.github.com/users/neovim",
                    "user_view_type": "public"
                },
                "permissions": {
                    "contents": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                },
                "slug": "neovim-backports",
                "updated_at": "2024-09-11T10:04:42Z"
            },
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2766271330/reactions"
            },
            "updated_at": "2025-03-31T13:40:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2766271330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/946290?v=4",
                "events_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/neovim-backports",
                "id": 175700243,
                "login": "neovim-backports[bot]",
                "node_id": "BOT_kgDOCnj5Ew",
                "organizations_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/neovim-backports%5Bbot%5D",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33189/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33189/commits",
    "created_at": "2025-03-30T11:44:45Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33189.diff",
    "draft": false,
    "head": {
        "label": "glepnir:border_bold",
        "ref": "border_bold",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/glepnir/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/glepnir/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/glepnir/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/glepnir/neovim/branches{/branch}",
            "clone_url": "https://github.com/glepnir/neovim.git",
            "collaborators_url": "https://api.github.com/repos/glepnir/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/glepnir/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/glepnir/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/glepnir/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/glepnir/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/glepnir/neovim/contributors",
            "created_at": "2022-07-17T05:15:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/glepnir/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/glepnir/neovim/downloads",
            "events_url": "https://api.github.com/repos/glepnir/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/glepnir/neovim/forks",
            "full_name": "glepnir/neovim",
            "git_commits_url": "https://api.github.com/repos/glepnir/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/glepnir/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/glepnir/neovim/git/tags{/sha}",
            "git_url": "git://github.com/glepnir/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/glepnir/neovim/hooks",
            "html_url": "https://github.com/glepnir/neovim",
            "id": 514752985,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/glepnir/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/glepnir/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/glepnir/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/glepnir/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/glepnir/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/glepnir/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/glepnir/neovim/merges",
            "milestones_url": "https://api.github.com/repos/glepnir/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHq6B2Q",
            "notifications_url": "https://api.github.com/repos/glepnir/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/glepnir/neovim/pulls{/number}",
            "pushed_at": "2025-04-14T05:12:52Z",
            "releases_url": "https://api.github.com/repos/glepnir/neovim/releases{/id}",
            "size": 311225,
            "ssh_url": "git@github.com:glepnir/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/glepnir/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/glepnir/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/glepnir/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/glepnir/neovim/subscription",
            "svn_url": "https://github.com/glepnir/neovim",
            "tags_url": "https://api.github.com/repos/glepnir/neovim/tags",
            "teams_url": "https://api.github.com/repos/glepnir/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/glepnir/neovim/git/trees{/sha}",
            "updated_at": "2025-04-06T02:34:22Z",
            "url": "https://api.github.com/repos/glepnir/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "f0f7b61b2a3cd26e7324648216d121d660f3bfad",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
            "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
            "followers_url": "https://api.github.com/users/glepnir/followers",
            "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
            "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/glepnir",
            "id": 41671631,
            "login": "glepnir",
            "node_id": "MDQ6VXNlcjQxNjcxNjMx",
            "organizations_url": "https://api.github.com/users/glepnir/orgs",
            "received_events_url": "https://api.github.com/users/glepnir/received_events",
            "repos_url": "https://api.github.com/users/glepnir/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/glepnir",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33189",
    "id": 2427515841,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33189",
    "labels": [
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 8431892071,
            "name": "ci:backport release-0.11",
            "node_id": "LA_kwDOAPphoM8AAAAB9pR2Zw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:backport%20release-0.11"
        }
    ],
    "locked": false,
    "merge_commit_sha": "216cc893bf1b3aa755e1e26243d1f438d5ebb0ca",
    "merged_at": "2025-03-31T13:39:50Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6QsPPB",
    "number": 33189,
    "patch_url": "https://github.com/neovim/neovim/pull/33189.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33189/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/f0f7b61b2a3cd26e7324648216d121d660f3bfad",
    "title": "feat(float): add bold style for border",
    "updated_at": "2025-04-10T01:26:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33189",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
        "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
        "followers_url": "https://api.github.com/users/glepnir/followers",
        "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
        "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glepnir",
        "id": 41671631,
        "login": "glepnir",
        "node_id": "MDQ6VXNlcjQxNjcxNjMx",
        "organizations_url": "https://api.github.com/users/glepnir/orgs",
        "received_events_url": "https://api.github.com/users/glepnir/received_events",
        "repos_url": "https://api.github.com/users/glepnir/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glepnir",
        "user_view_type": "public"
    }
}