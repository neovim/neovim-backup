{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34991/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34991/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34991"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34991"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34991/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34991"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a3cfdcebb9b507e10537c4288047bcc6a6f47f96"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6198,
            "forks_count": 6198,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1970,
            "open_issues_count": 1970,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-07-21T05:18:47Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 334403,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 91287,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-22T03:04:19Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 91287,
            "watchers_count": 91287,
            "web_commit_signoff_required": false
        },
        "sha": "d7050d6e397f8916a38e8610ae8c2d8d75610fe4",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This PR moves `vim.pack` documentation into a separate 'pack.txt' file along with documentation of `packages` tag (as [was suggested](https://github.com/neovim/neovim/pull/34009#discussion_r2178309011)). I've also moved `package-create`, as it is quite connected to `packages`.\r\n\r\nResolve #34766\r\n\r\n---\r\n\r\nQuestions I have to discuss here:\r\n- I think it might be reasonable to also move [`|05.4|\tAdding a package`](https://github.com/neovim/neovim/blob/d7050d6e397f8916a38e8610ae8c2d8d75610fe4/runtime/doc/usr_05.txt#L208-L258) and [`|05.5|\tAdding a plugin`](https://github.com/neovim/neovim/blob/d7050d6e397f8916a38e8610ae8c2d8d75610fe4/runtime/doc/usr_05.txt#L259-L394) into 'pack.txt'. As they also describe how to add/create a plugin/package. But not sure how intrusive this change when Vim compatibility is taken into account. One side effect will be the shifted numeration of `*05.x*` tags in 'doc/usr_05.txt'.\r\n- What section order is more appropriate here? I opted for a more \"textbook\" approach: first describe the thing (`*packages*`) and then how it can be used (`*vim.pack*`).\r\n- The `:h plugin` mentions that \"A plugin is nothing more than a Vim script file that is loaded automatically when Vim starts\". This goes against what is usually meant nowadays, i.e. \"a directory that can contain `plugin/` and other special subdirectories\". In `:h :packadd` there is a distinction between \"plugin file\" (files in 'plugin/') and \"plugin directory\" (parent of 'plugin/'). What is the most reasonable way to address this (if any)?\r\n\r\n    I'd suggest modifying `:h plugin` to have the wording \"A plugin **file** is nothing more than a Vim script that is ...\" and mention somewhere that \"plugin\" can be understood both as \"plugin directory\" and \"plugin file\" depending on context. Does that sound good?",
    "closed_at": "2025-07-18T17:54:14Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34991#discussion_r2216428786"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34991"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2216428786"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "So does it mean `myfoobar/` (that is the parent directory of both `start/` and `opt/`) is a package? Because \"user' archive it in `pack/` directory instead of `start/` or `opt/`. I've always thought the \"package\" definition of Vim is very confusing.",
            "commit_id": "a3cfdcebb9b507e10537c4288047bcc6a6f47f96",
            "created_at": "2025-07-18T16:17:18Z",
            "diff_hunk": "@@ -0,0 +1,393 @@\n+*pack.txt*                            Nvim\n+\n+                            NVIM REFERENCE MANUAL\n+\n+                                Extending Nvim\n+\n+\n+                                       Type |gO| to see the table of contents.\n+\n+==============================================================================\n+Using Vim packages\t\t\t\t\t*packages*\n+\n+A Vim \"package\" is a directory that contains |plugin|s.  Compared to normal\n+plugins, a package can...\n+- be downloaded as an archive and unpacked in its own directory, so the files\n+  are not mixed with files of other plugins.\n+- be a git, mercurial, etc. repository, thus easy to update.\n+- contain multiple plugins that depend on each other.\n+- contain plugins that are automatically loaded on startup (\"start\" packages,\n+  located in \"pack/*/start/*\") and ones that are only loaded when needed with\n+  |:packadd| (\"opt\" packages, located in \"pack/*/opt/*\").\n+\n+\t\t\t\t\t\t\t*runtime-search-path*\n+Nvim searches for |:runtime| files in:\n+\t1. all paths in 'runtimepath'\n+\t2. all \"pack/*/start/*\" dirs\n+\n+Note that the \"pack/*/start/*\" paths are not explicitly included in\n+'runtimepath', so they will not be reported by \":set rtp\" or \"echo &rtp\".\n+Scripts can use |nvim_list_runtime_paths()| to list all used directories, and\n+|nvim_get_runtime_file()| to query for specific files or sub-folders within\n+the runtime path. Example: >\n+\t\" List all runtime dirs and packages with Lua paths.\n+\t:echo nvim_get_runtime_file(\"lua/\", v:true)\n+\n+Using a package and loading automatically ~\n+\n+Let's assume your Nvim files are in \"~/.local/share/nvim/site\" and you want to\n+add a package from a zip archive \"/tmp/foopack.zip\": >\n+\t% mkdir -p ~/.local/share/nvim/site/pack/foo\n+\t% cd ~/.local/share/nvim/site/pack/foo\n+\t% unzip /tmp/foopack.zip\n+\n+The directory name \"foo\" is arbitrary, you can pick anything you like.\n+\n+You would now have these files under ~/.local/share/nvim/site:\n+\tpack/foo/README.txt\n+\tpack/foo/start/foobar/plugin/foo.vim\n+\tpack/foo/start/foobar/syntax/some.vim\n+\tpack/foo/opt/foodebug/plugin/debugger.vim\n+\n+On startup after processing your |config|, Nvim scans all directories in\n+'packpath' for plugins in \"pack/*/start/*\", then loads the plugins.\n+\n+To allow for calling into package functionality while parsing your |vimrc|,\n+|:colorscheme| and |autoload| will both automatically search under 'packpath'\n+as well in addition to 'runtimepath'.  See the documentation for each for\n+details.\n+\n+In the example Nvim will find \"pack/foo/start/foobar/plugin/foo.vim\" and load\n+it.\n+\n+If the \"foobar\" plugin kicks in and sets the 'filetype' to \"some\", Nvim will\n+find the syntax/some.vim file, because its directory is in the runtime search\n+path.\n+\n+Nvim will also load ftdetect files, if there are any.\n+\n+Note that the files under \"pack/foo/opt\" are not loaded automatically, only the\n+ones under \"pack/foo/start\".  See |pack-add| below for how the \"opt\" directory\n+is used.\n+\n+Loading packages automatically will not happen if loading plugins is disabled,\n+see |load-plugins|.\n+\n+To load packages earlier, so that plugin/ files are sourced:\n+\t:packloadall\n+This also works when loading plugins is disabled.  The automatic loading will\n+only happen once.\n+\n+If the package has an \"after\" directory, that directory is added to the end of\n+'runtimepath', so that anything there will be loaded later.\n+\n+\n+Using a single plugin and loading it automatically ~\n+\n+If you don't have a package but a single plugin, you need to create the extra\n+directory level: >\n+\t% mkdir -p ~/.local/share/nvim/site/pack/foo/start/foobar\n+\t% cd ~/.local/share/nvim/site/pack/foo/start/foobar\n+\t% unzip /tmp/someplugin.zip\n+\n+You would now have these files:\n+\tpack/foo/start/foobar/plugin/foo.vim\n+\tpack/foo/start/foobar/syntax/some.vim\n+\n+From here it works like above.\n+\n+\n+Optional plugins ~\n+\t\t\t\t\t\t\t*pack-add*\n+To load an optional plugin from a pack use the `:packadd` command: >\n+\t:packadd foodebug\n+This searches for \"pack/*/opt/foodebug\" in 'packpath' and will find\n+~/.local/share/nvim/site/pack/foo/opt/foodebug/plugin/debugger.vim and source\n+it.\n+\n+This could be done if some conditions are met.  For example, depending on\n+whether Nvim supports a feature or a dependency is missing.\n+\n+You can also load an optional plugin at startup, by putting this command in\n+your |config|: >\n+\t:packadd! foodebug\n+The extra \"!\" is so that the plugin isn't loaded if Nvim was started with\n+|--noplugin|.\n+\n+It is perfectly normal for a package to only have files in the \"opt\"\n+directory.  You then need to load each plugin when you want to use it.\n+\n+\n+Where to put what ~\n+\n+Since color schemes, loaded with `:colorscheme`, are found below\n+\"pack/*/start\" and \"pack/*/opt\", you could put them anywhere.  We recommend\n+you put them below \"pack/*/opt\", for example\n+\"~/.config/nvim/pack/mycolors/opt/dark/colors/very_dark.vim\".\n+\n+Filetype plugins should go under \"pack/*/start\", so that they are always\n+found.  Unless you have more than one plugin for a file type and want to\n+select which one to load with `:packadd`.  E.g. depending on the compiler\n+version: >\n+\tif foo_compiler_version > 34\n+\t  packadd foo_new\n+\telse\n+\t  packadd foo_old\n+\tendif\n+\n+The \"after\" directory is most likely not useful in a package.  It's not\n+disallowed though.\n+\n+==============================================================================\n+Creating Vim packages\t\t\t\t\t*package-create*\n+\n+This assumes you write one or more plugins that you distribute as a package.\n+\n+If you have two unrelated plugins you would use two packages, so that Vim\n+users can choose what they include or not.  Or you can decide to use one\n+package with optional plugins, and tell the user to add the preferred ones with\n+`:packadd`.\n+\n+Decide how you want to distribute the package.  You can create an archive or\n+you could use a repository.  An archive can be used by more users, but is a\n+bit harder to update to a new version.  A repository can usually be kept\n+up-to-date easily, but it requires a program like \"git\" to be available.\n+You can do both, github can automatically create an archive for a release.\n+\n+Your directory layout would be like this:\n+   start/foobar/plugin/foo.vim\t\t\" always loaded, defines commands\n+   start/foobar/plugin/bar.vim\t\t\" always loaded, defines commands\n+   start/foobar/autoload/foo.vim\t\" loaded when foo command used\n+   start/foobar/doc/foo.txt\t\t\" help for foo.vim\n+   start/foobar/doc/tags\t\t\" help tags\n+   opt/fooextra/plugin/extra.vim\t\" optional plugin, defines commands\n+   opt/fooextra/autoload/extra.vim\t\" loaded when extra command used\n+   opt/fooextra/doc/extra.txt\t\t\" help for extra.vim\n+   opt/fooextra/doc/tags\t\t\" help tags\n+\n+This allows for the user to do: >\n+\tmkdir ~/.local/share/nvim/site/pack\n+\tcd ~/.local/share/nvim/site/pack\n+\tgit clone https://github.com/you/foobar.git myfoobar",
            "html_url": "https://github.com/neovim/neovim/pull/34991#discussion_r2216428786",
            "id": 2216428786,
            "line": 171,
            "node_id": "PRRC_kwDOAPphoM6EHATy",
            "original_commit_id": "a3cfdcebb9b507e10537c4288047bcc6a6f47f96",
            "original_line": 171,
            "original_position": 171,
            "original_start_line": 157,
            "path": "runtime/doc/pack.txt",
            "position": 171,
            "pull_request_review_id": 3034112465,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34991",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2216428786/reactions"
            },
            "side": "RIGHT",
            "start_line": 157,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-18T17:55:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2216428786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34991#discussion_r2216470569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34991"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2216470569"
                }
            },
            "author_association": "MEMBER",
            "body": "> So does it mean `myfoobar/` (that is the parent directory of both `start/` and `opt/`) is a package?\r\n\r\nYes, a \"package\" is a subdirectory of any 'pack' directory. It can contain 'start/' and/or 'opt/' subdirectories each grouping plugin directories by how they are loaded.",
            "commit_id": "a3cfdcebb9b507e10537c4288047bcc6a6f47f96",
            "created_at": "2025-07-18T16:42:30Z",
            "diff_hunk": "@@ -0,0 +1,393 @@\n+*pack.txt*                            Nvim\n+\n+                            NVIM REFERENCE MANUAL\n+\n+                                Extending Nvim\n+\n+\n+                                       Type |gO| to see the table of contents.\n+\n+==============================================================================\n+Using Vim packages\t\t\t\t\t*packages*\n+\n+A Vim \"package\" is a directory that contains |plugin|s.  Compared to normal\n+plugins, a package can...\n+- be downloaded as an archive and unpacked in its own directory, so the files\n+  are not mixed with files of other plugins.\n+- be a git, mercurial, etc. repository, thus easy to update.\n+- contain multiple plugins that depend on each other.\n+- contain plugins that are automatically loaded on startup (\"start\" packages,\n+  located in \"pack/*/start/*\") and ones that are only loaded when needed with\n+  |:packadd| (\"opt\" packages, located in \"pack/*/opt/*\").\n+\n+\t\t\t\t\t\t\t*runtime-search-path*\n+Nvim searches for |:runtime| files in:\n+\t1. all paths in 'runtimepath'\n+\t2. all \"pack/*/start/*\" dirs\n+\n+Note that the \"pack/*/start/*\" paths are not explicitly included in\n+'runtimepath', so they will not be reported by \":set rtp\" or \"echo &rtp\".\n+Scripts can use |nvim_list_runtime_paths()| to list all used directories, and\n+|nvim_get_runtime_file()| to query for specific files or sub-folders within\n+the runtime path. Example: >\n+\t\" List all runtime dirs and packages with Lua paths.\n+\t:echo nvim_get_runtime_file(\"lua/\", v:true)\n+\n+Using a package and loading automatically ~\n+\n+Let's assume your Nvim files are in \"~/.local/share/nvim/site\" and you want to\n+add a package from a zip archive \"/tmp/foopack.zip\": >\n+\t% mkdir -p ~/.local/share/nvim/site/pack/foo\n+\t% cd ~/.local/share/nvim/site/pack/foo\n+\t% unzip /tmp/foopack.zip\n+\n+The directory name \"foo\" is arbitrary, you can pick anything you like.\n+\n+You would now have these files under ~/.local/share/nvim/site:\n+\tpack/foo/README.txt\n+\tpack/foo/start/foobar/plugin/foo.vim\n+\tpack/foo/start/foobar/syntax/some.vim\n+\tpack/foo/opt/foodebug/plugin/debugger.vim\n+\n+On startup after processing your |config|, Nvim scans all directories in\n+'packpath' for plugins in \"pack/*/start/*\", then loads the plugins.\n+\n+To allow for calling into package functionality while parsing your |vimrc|,\n+|:colorscheme| and |autoload| will both automatically search under 'packpath'\n+as well in addition to 'runtimepath'.  See the documentation for each for\n+details.\n+\n+In the example Nvim will find \"pack/foo/start/foobar/plugin/foo.vim\" and load\n+it.\n+\n+If the \"foobar\" plugin kicks in and sets the 'filetype' to \"some\", Nvim will\n+find the syntax/some.vim file, because its directory is in the runtime search\n+path.\n+\n+Nvim will also load ftdetect files, if there are any.\n+\n+Note that the files under \"pack/foo/opt\" are not loaded automatically, only the\n+ones under \"pack/foo/start\".  See |pack-add| below for how the \"opt\" directory\n+is used.\n+\n+Loading packages automatically will not happen if loading plugins is disabled,\n+see |load-plugins|.\n+\n+To load packages earlier, so that plugin/ files are sourced:\n+\t:packloadall\n+This also works when loading plugins is disabled.  The automatic loading will\n+only happen once.\n+\n+If the package has an \"after\" directory, that directory is added to the end of\n+'runtimepath', so that anything there will be loaded later.\n+\n+\n+Using a single plugin and loading it automatically ~\n+\n+If you don't have a package but a single plugin, you need to create the extra\n+directory level: >\n+\t% mkdir -p ~/.local/share/nvim/site/pack/foo/start/foobar\n+\t% cd ~/.local/share/nvim/site/pack/foo/start/foobar\n+\t% unzip /tmp/someplugin.zip\n+\n+You would now have these files:\n+\tpack/foo/start/foobar/plugin/foo.vim\n+\tpack/foo/start/foobar/syntax/some.vim\n+\n+From here it works like above.\n+\n+\n+Optional plugins ~\n+\t\t\t\t\t\t\t*pack-add*\n+To load an optional plugin from a pack use the `:packadd` command: >\n+\t:packadd foodebug\n+This searches for \"pack/*/opt/foodebug\" in 'packpath' and will find\n+~/.local/share/nvim/site/pack/foo/opt/foodebug/plugin/debugger.vim and source\n+it.\n+\n+This could be done if some conditions are met.  For example, depending on\n+whether Nvim supports a feature or a dependency is missing.\n+\n+You can also load an optional plugin at startup, by putting this command in\n+your |config|: >\n+\t:packadd! foodebug\n+The extra \"!\" is so that the plugin isn't loaded if Nvim was started with\n+|--noplugin|.\n+\n+It is perfectly normal for a package to only have files in the \"opt\"\n+directory.  You then need to load each plugin when you want to use it.\n+\n+\n+Where to put what ~\n+\n+Since color schemes, loaded with `:colorscheme`, are found below\n+\"pack/*/start\" and \"pack/*/opt\", you could put them anywhere.  We recommend\n+you put them below \"pack/*/opt\", for example\n+\"~/.config/nvim/pack/mycolors/opt/dark/colors/very_dark.vim\".\n+\n+Filetype plugins should go under \"pack/*/start\", so that they are always\n+found.  Unless you have more than one plugin for a file type and want to\n+select which one to load with `:packadd`.  E.g. depending on the compiler\n+version: >\n+\tif foo_compiler_version > 34\n+\t  packadd foo_new\n+\telse\n+\t  packadd foo_old\n+\tendif\n+\n+The \"after\" directory is most likely not useful in a package.  It's not\n+disallowed though.\n+\n+==============================================================================\n+Creating Vim packages\t\t\t\t\t*package-create*\n+\n+This assumes you write one or more plugins that you distribute as a package.\n+\n+If you have two unrelated plugins you would use two packages, so that Vim\n+users can choose what they include or not.  Or you can decide to use one\n+package with optional plugins, and tell the user to add the preferred ones with\n+`:packadd`.\n+\n+Decide how you want to distribute the package.  You can create an archive or\n+you could use a repository.  An archive can be used by more users, but is a\n+bit harder to update to a new version.  A repository can usually be kept\n+up-to-date easily, but it requires a program like \"git\" to be available.\n+You can do both, github can automatically create an archive for a release.\n+\n+Your directory layout would be like this:\n+   start/foobar/plugin/foo.vim\t\t\" always loaded, defines commands\n+   start/foobar/plugin/bar.vim\t\t\" always loaded, defines commands\n+   start/foobar/autoload/foo.vim\t\" loaded when foo command used\n+   start/foobar/doc/foo.txt\t\t\" help for foo.vim\n+   start/foobar/doc/tags\t\t\" help tags\n+   opt/fooextra/plugin/extra.vim\t\" optional plugin, defines commands\n+   opt/fooextra/autoload/extra.vim\t\" loaded when extra command used\n+   opt/fooextra/doc/extra.txt\t\t\" help for extra.vim\n+   opt/fooextra/doc/tags\t\t\" help tags\n+\n+This allows for the user to do: >\n+\tmkdir ~/.local/share/nvim/site/pack\n+\tcd ~/.local/share/nvim/site/pack\n+\tgit clone https://github.com/you/foobar.git myfoobar",
            "html_url": "https://github.com/neovim/neovim/pull/34991#discussion_r2216470569",
            "id": 2216470569,
            "in_reply_to_id": 2216428786,
            "line": 171,
            "node_id": "PRRC_kwDOAPphoM6EHKgp",
            "original_commit_id": "a3cfdcebb9b507e10537c4288047bcc6a6f47f96",
            "original_line": 171,
            "original_position": 171,
            "original_start_line": 157,
            "path": "runtime/doc/pack.txt",
            "position": 171,
            "pull_request_review_id": 3034173641,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34991",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2216470569/reactions"
            },
            "side": "RIGHT",
            "start_line": 157,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-18T16:42:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2216470569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> I'd suggest modifying `:h plugin` to have the wording \"A plugin **file** is nothing more than a Vim script that is ...\"\r\n\r\nI want to continue to emphasize that plugins are just files that are auto-discovered on 'runtimepath'. The main idea is to make sure that users understand they can create a plugin by creating 1 file, they don't need a \"starter pack\" or a template or whatever. \r\n\r\nI don't think the other questions need to be answered right now, we can keep iterating on this.",
            "created_at": "2025-07-18T17:53:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/34991#issuecomment-3090235493",
            "id": 3090235493,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34991",
            "node_id": "IC_kwDOAPphoM64MUBl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3090235493/reactions"
            },
            "updated_at": "2025-07-18T17:53:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3090235493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I want to continue to emphasize that plugins are just files that are auto-discovered on 'runtimepath'. The main idea is to make sure that users understand they can create a plugin by creating 1 file, they don't need a \"starter pack\" or a template or whatever.\r\n\r\nSure, I get that. It's just that there are different wordings when it comes to what is meant by \"plugin\". The `vim.pack` only adds to it by being a plugin manager, but it installs plugin *directories* not plugin *files*. It's this ambiguity that I think is worth addressing somewhere closer to the `*packages*`, `*plugin*`, or `*vim.pack*`.",
            "created_at": "2025-07-18T18:06:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/34991#issuecomment-3090263811",
            "id": 3090263811,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34991",
            "node_id": "IC_kwDOAPphoM64Ma8D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3090263811/reactions"
            },
            "updated_at": "2025-07-18T18:06:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3090263811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34991/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34991/commits",
    "created_at": "2025-07-18T15:08:43Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34991.diff",
    "draft": false,
    "head": {
        "label": "echasnovski:pack-separate-doc",
        "ref": "pack-separate-doc",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/echasnovski/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/echasnovski/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/echasnovski/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/echasnovski/neovim/branches{/branch}",
            "clone_url": "https://github.com/echasnovski/neovim.git",
            "collaborators_url": "https://api.github.com/repos/echasnovski/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/echasnovski/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/echasnovski/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/echasnovski/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/echasnovski/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/echasnovski/neovim/contributors",
            "created_at": "2021-12-02T09:43:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/echasnovski/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/echasnovski/neovim/downloads",
            "events_url": "https://api.github.com/repos/echasnovski/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/echasnovski/neovim/forks",
            "full_name": "echasnovski/neovim",
            "git_commits_url": "https://api.github.com/repos/echasnovski/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/echasnovski/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/echasnovski/neovim/git/tags{/sha}",
            "git_url": "git://github.com/echasnovski/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/echasnovski/neovim/hooks",
            "html_url": "https://github.com/echasnovski/neovim",
            "id": 434162461,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/echasnovski/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/echasnovski/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/echasnovski/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/echasnovski/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/echasnovski/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/echasnovski/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/echasnovski/neovim/merges",
            "milestones_url": "https://api.github.com/repos/echasnovski/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGeDLHQ",
            "notifications_url": "https://api.github.com/repos/echasnovski/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/echasnovski/neovim/pulls{/number}",
            "pushed_at": "2025-07-20T15:00:10Z",
            "releases_url": "https://api.github.com/repos/echasnovski/neovim/releases{/id}",
            "size": 325649,
            "ssh_url": "git@github.com:echasnovski/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/echasnovski/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/echasnovski/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/echasnovski/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/echasnovski/neovim/subscription",
            "svn_url": "https://github.com/echasnovski/neovim",
            "tags_url": "https://api.github.com/repos/echasnovski/neovim/tags",
            "teams_url": "https://api.github.com/repos/echasnovski/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/echasnovski/neovim/git/trees{/sha}",
            "updated_at": "2025-07-20T15:00:16Z",
            "url": "https://api.github.com/repos/echasnovski/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a3cfdcebb9b507e10537c4288047bcc6a6f47f96",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34991",
    "id": 2677523504,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34991",
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "locked": false,
    "merge_commit_sha": "26bbeadda3f1110713c2a766f930686d05eae05b",
    "merged_at": "2025-07-18T17:54:14Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6fl8Qw",
    "number": 34991,
    "patch_url": "https://github.com/neovim/neovim/pull/34991.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34991/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a3cfdcebb9b507e10537c4288047bcc6a6f47f96",
    "title": "Make separate `vim.pack` help file",
    "updated_at": "2025-07-18T18:06:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34991",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}