{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31790/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31790/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31790"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31790"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31790/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d3a7893d681ff0a62aef572c674b07d21d1267b6"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5811,
            "forks_count": 5811,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1839,
            "open_issues_count": 1839,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T23:17:24Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 303311,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85218,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-14T02:06:03Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85218,
            "watchers_count": 85218,
            "web_commit_signoff_required": false
        },
        "sha": "a119aae4d3deebea453ccd7c2dea814aed2c9f21",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This is needed to replace the nvim-lspconfig function is_descendant that\nsome lspconfg configurations still use.\n",
    "closed_at": "2025-01-13T12:14:52Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1899738612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899738612"
                }
            },
            "author_association": "MEMBER",
            "body": "This is an interesting impl, maybe we should try it? But make sure that `cmd` ends with a slash, before `gsub` :P \r\n\r\nWould be very nice if we can delegate all the heavy lifting to `normalize`, for as many purposes as possible.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-30T19:04:28Z",
            "diff_hunk": "@@ -22,13 +22,6 @@ local M = {\n   paths = Paths,\n }\n \n---- @param p string\n---- @return string\n-local function relpath(p)\n-  p = vim.fs.normalize(p)\n-  return (p:gsub('^' .. uv.cwd, ''))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1899738612",
            "id": 1899738612,
            "line": 29,
            "node_id": "PRRC_kwDOAPphoM5xO7X0",
            "original_commit_id": "8bdf93296fb0c6657d61e667a2cb3674f20a4d4d",
            "original_line": 29,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/testutil.lua",
            "position": 8,
            "pull_request_review_id": 2525901406,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899738612/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-30T19:05:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899738612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1899739573"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899739573"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm pretty sure I wrote that and I really doubt it works tbh. I half-assed it when I wrote it because we weren't using it anyway (it's currently gated behind a check that is set to false).",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-30T19:06:45Z",
            "diff_hunk": "@@ -22,13 +22,6 @@ local M = {\n   paths = Paths,\n }\n \n---- @param p string\n---- @return string\n-local function relpath(p)\n-  p = vim.fs.normalize(p)\n-  return (p:gsub('^' .. uv.cwd, ''))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1899739573",
            "id": 1899739573,
            "in_reply_to_id": 1899738612,
            "line": 29,
            "node_id": "PRRC_kwDOAPphoM5xO7m1",
            "original_commit_id": "8bdf93296fb0c6657d61e667a2cb3674f20a4d4d",
            "original_line": 29,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/testutil.lua",
            "position": 8,
            "pull_request_review_id": 2525902962,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899739573/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-30T19:08:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899739573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1899741805"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899741805"
                }
            },
            "author_association": "MEMBER",
            "body": "The tests will tell us :)\r\n\r\nMay also need `normalize(uv.cwd)`. \r\n\r\nAnd technically un-normalize the result, but that's a simple matter of counting slashes. But maybe that isn't worth the trouble; supporting weird things like `./././foo` would be annoying.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-30T19:11:12Z",
            "diff_hunk": "@@ -22,13 +22,6 @@ local M = {\n   paths = Paths,\n }\n \n---- @param p string\n---- @return string\n-local function relpath(p)\n-  p = vim.fs.normalize(p)\n-  return (p:gsub('^' .. uv.cwd, ''))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1899741805",
            "id": 1899741805,
            "in_reply_to_id": 1899738612,
            "line": 29,
            "node_id": "PRRC_kwDOAPphoM5xO8Jt",
            "original_commit_id": "8bdf93296fb0c6657d61e667a2cb3674f20a4d4d",
            "original_line": 29,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/testutil.lua",
            "position": 8,
            "pull_request_review_id": 2525906499,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899741805/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-30T19:12:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899741805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1899741972"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899741972"
                }
            },
            "author_association": "MEMBER",
            "body": "> Would be very nice if we can delegate all the heavy lifting to normalize, for as many purposes as possible.\r\n\r\nSure, if possible we should do that.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-30T19:11:37Z",
            "diff_hunk": "@@ -22,13 +22,6 @@ local M = {\n   paths = Paths,\n }\n \n---- @param p string\n---- @return string\n-local function relpath(p)\n-  p = vim.fs.normalize(p)\n-  return (p:gsub('^' .. uv.cwd, ''))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1899741972",
            "id": 1899741972,
            "in_reply_to_id": 1899738612,
            "line": 29,
            "node_id": "PRRC_kwDOAPphoM5xO8MU",
            "original_commit_id": "8bdf93296fb0c6657d61e667a2cb3674f20a4d4d",
            "original_line": 29,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/testutil.lua",
            "position": 8,
            "pull_request_review_id": 2525906740,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899741972/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-30T19:12:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899741972",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1899742222"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899742222"
                }
            },
            "author_association": "MEMBER",
            "body": "That's basically [this comment](https://github.com/neovim/neovim/pull/31790#issuecomment-2565799250) and has the drawbacks of not working for path outside of target directory.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-30T19:12:09Z",
            "diff_hunk": "@@ -22,13 +22,6 @@ local M = {\n   paths = Paths,\n }\n \n---- @param p string\n---- @return string\n-local function relpath(p)\n-  p = vim.fs.normalize(p)\n-  return (p:gsub('^' .. uv.cwd, ''))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1899742222",
            "id": 1899742222,
            "in_reply_to_id": 1899738612,
            "line": 29,
            "node_id": "PRRC_kwDOAPphoM5xO8QO",
            "original_commit_id": "8bdf93296fb0c6657d61e667a2cb3674f20a4d4d",
            "original_line": 29,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/testutil.lua",
            "position": 8,
            "pull_request_review_id": 2525907113,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899742222/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-30T19:12:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899742222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1899762835"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899762835"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe needs wrapping with `vim.pesc()` for good measure since cwd may contain `.`.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-30T19:57:10Z",
            "diff_hunk": "@@ -22,13 +22,6 @@ local M = {\n   paths = Paths,\n }\n \n---- @param p string\n---- @return string\n-local function relpath(p)\n-  p = vim.fs.normalize(p)\n-  return (p:gsub('^' .. uv.cwd, ''))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1899762835",
            "id": 1899762835,
            "in_reply_to_id": 1899738612,
            "line": 29,
            "node_id": "PRRC_kwDOAPphoM5xPBST",
            "original_commit_id": "8bdf93296fb0c6657d61e667a2cb3674f20a4d4d",
            "original_line": 29,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/testutil.lua",
            "position": 8,
            "pull_request_review_id": 2525938308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899762835/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-30T19:57:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1899762835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900156737"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900156737"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.\r\n---\r\n--- Example:\r\n---\r\n--- ```lua\r\n--- vim.fs.relpath('/var', '/var/lib') -- 'lib'\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-31T15:10:49Z",
            "diff_hunk": "@@ -732,4 +732,28 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Return relative path from directory `base` to `target`. Note that `base` must be an ancestor to\n+--- `target`, meaning relative paths starting with `../` are not supported.\n+--- Example:\n+---\n+--- ```lua\n+--- vim.fs.relpath('/var', '/var/lib') -- lib",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900156737",
            "id": 1900156737,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xQhdB",
            "original_commit_id": "39d4c959ab2fd30d40bae00418b645840d9e7f35",
            "original_line": 740,
            "original_position": 9,
            "original_start_line": 735,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2526540748,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900156737/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-12-31T15:10:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900156737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900157426"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900157426"
                }
            },
            "author_association": "MEMBER",
            "body": "Not clear what `paths starting with ../ are not supported` means. `abspath()` would handle such inputs.\r\n\r\nLess confusing not to mention this.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-31T15:12:29Z",
            "diff_hunk": "@@ -732,4 +732,28 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Return relative path from directory `base` to `target`. Note that `base` must be an ancestor to\n+--- `target`, meaning relative paths starting with `../` are not supported.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900157426",
            "id": 1900157426,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xQhny",
            "original_commit_id": "39d4c959ab2fd30d40bae00418b645840d9e7f35",
            "original_line": 736,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2526541840,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900157426/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-31T15:12:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900157426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900157841"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900157841"
                }
            },
            "author_association": "MEMBER",
            "body": "Should this be `'.'`  ?",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-31T15:13:37Z",
            "diff_hunk": "@@ -732,4 +732,28 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Return relative path from directory `base` to `target`. Note that `base` must be an ancestor to\n+--- `target`, meaning relative paths starting with `../` are not supported.\n+--- Example:\n+---\n+--- ```lua\n+--- vim.fs.relpath('/var', '/var/lib') -- lib\n+--- ```\n+---\n+--- @param base string\n+--- @param target string\n+--- @return string|nil\n+function M.relpath(base, target)\n+  vim.validate('base', base, 'string')\n+  vim.validate('target', target, 'string')\n+\n+  base = vim.fs.normalize(vim.fs.abspath(base))\n+  target = vim.fs.normalize(vim.fs.abspath(target))\n+  if base == target then\n+    return ''",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900157841",
            "id": 1900157841,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xQhuR",
            "original_commit_id": "39d4c959ab2fd30d40bae00418b645840d9e7f35",
            "original_line": 753,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2526542575,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900157841/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-31T15:13:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900157841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900166345"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900166345"
                }
            },
            "author_association": "MEMBER",
            "body": "I guess we have to since `vim.fs.joinpath` doesn't support empty strings to denote current directory.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2024-12-31T15:34:34Z",
            "diff_hunk": "@@ -732,4 +732,28 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Return relative path from directory `base` to `target`. Note that `base` must be an ancestor to\n+--- `target`, meaning relative paths starting with `../` are not supported.\n+--- Example:\n+---\n+--- ```lua\n+--- vim.fs.relpath('/var', '/var/lib') -- lib\n+--- ```\n+---\n+--- @param base string\n+--- @param target string\n+--- @return string|nil\n+function M.relpath(base, target)\n+  vim.validate('base', base, 'string')\n+  vim.validate('target', target, 'string')\n+\n+  base = vim.fs.normalize(vim.fs.abspath(base))\n+  target = vim.fs.normalize(vim.fs.abspath(target))\n+  if base == target then\n+    return ''",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900166345",
            "id": 1900166345,
            "in_reply_to_id": 1900157841,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xQjzJ",
            "original_commit_id": "39d4c959ab2fd30d40bae00418b645840d9e7f35",
            "original_line": 753,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2526556139,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900166345/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-31T15:34:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900166345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900880630"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900880630"
                }
            },
            "author_association": "MEMBER",
            "body": "\r\ntest for relative case, plus some weird inputs?\r\n\r\nmaybe some whitespace and redundant slashes too...\r\n\r\n```suggestion\r\n      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\r\n      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\r\n      eq(nil, vim.fs.relpath('/var/lib', './bin'))\r\n      -- ?\r\n      eq(nil, vim.fs.relpath('/var/lib', '././'))\r\n      -- ?\r\n      eq(nil, vim.fs.relpath('/var/lib', '../'))\r\n      -- ?\r\n      eq(nil, vim.fs.relpath('/var/lib', '/'))\r\n      -- ?\r\n      eq(nil, vim.fs.relpath('/var/lib', '//'))\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-02T13:30:39Z",
            "diff_hunk": "@@ -503,4 +503,27 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900880630",
            "id": 1900880630,
            "line": 536,
            "node_id": "PRRC_kwDOAPphoM5xTSL2",
            "original_commit_id": "bddf9950fd685604c2fdc8067d49013f137d7b59",
            "original_line": 536,
            "original_position": 30,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 33,
            "pull_request_review_id": 2527574392,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900880630/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T13:34:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900880630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900882111"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900882111"
                }
            },
            "author_association": "MEMBER",
            "body": "more cases\r\n\r\n```\r\neq(?, vim.fs.relpath('c:/aaaa/', '/aaaa/cccc'))\r\neq(?, vim.fs.relpath('c:/aaaa/', './aaaa/cccc'))\r\neq(?, vim.fs.relpath('c:/aaaa/', 'aaaa/cccc'))\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-02T13:32:22Z",
            "diff_hunk": "@@ -503,4 +503,27 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/bbbb', 'c:/aaaa'))\n+        eq('cccc', vim.fs.relpath('c:/aaaa/', 'c:/aaaa/cccc'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900882111",
            "id": 1900882111,
            "line": 571,
            "node_id": "PRRC_kwDOAPphoM5xTSi_",
            "original_commit_id": "bddf9950fd685604c2fdc8067d49013f137d7b59",
            "original_line": 571,
            "original_position": 39,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 68,
            "pull_request_review_id": 2527574392,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900882111/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T13:34:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900882111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900883389"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900883389"
                }
            },
            "author_association": "MEMBER",
            "body": "test case insensitive, redundant slashes?\r\n\r\n```suggestion\r\n        eq('bar/package.json', vim.fs.relpath([[C:\\foo\\test]], [[C:\\fOo\\\\tEst\\bar\\\\\\\\package.json]]))\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-02T13:34:02Z",
            "diff_hunk": "@@ -503,4 +503,27 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/bbbb', 'c:/aaaa'))\n+        eq('cccc', vim.fs.relpath('c:/aaaa/', 'c:/aaaa/cccc'))\n+        eq('aaaa/bbbb', vim.fs.relpath('c:/', 'c:\\\\aaaa\\\\bbbb'))\n+        eq('bar/package.json', vim.fs.relpath('C:\\\\foo\\\\test', 'C:\\\\foo\\\\test\\\\bar\\\\package.json'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900883389",
            "id": 1900883389,
            "line": 573,
            "node_id": "PRRC_kwDOAPphoM5xTS29",
            "original_commit_id": "bddf9950fd685604c2fdc8067d49013f137d7b59",
            "original_line": 573,
            "original_position": 41,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 70,
            "pull_request_review_id": 2527574392,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900883389/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T13:34:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900883389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900899515"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900899515"
                }
            },
            "author_association": "MEMBER",
            "body": "Nothing in `vim.fs` checks for case insensitiveness though. If anything I'd assume `normalize()` to take care of that.\r\n\r\nAlso heads up: it's possible to set case-insensitiveness for a specific directory only on windows, which can break this assumptions at times: https://github.com/dart-lang/core/issues/529",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-02T13:52:30Z",
            "diff_hunk": "@@ -503,4 +503,27 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/bbbb', 'c:/aaaa'))\n+        eq('cccc', vim.fs.relpath('c:/aaaa/', 'c:/aaaa/cccc'))\n+        eq('aaaa/bbbb', vim.fs.relpath('c:/', 'c:\\\\aaaa\\\\bbbb'))\n+        eq('bar/package.json', vim.fs.relpath('C:\\\\foo\\\\test', 'C:\\\\foo\\\\test\\\\bar\\\\package.json'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900899515",
            "id": 1900899515,
            "in_reply_to_id": 1900883389,
            "line": 573,
            "node_id": "PRRC_kwDOAPphoM5xTWy7",
            "original_commit_id": "bddf9950fd685604c2fdc8067d49013f137d7b59",
            "original_line": 573,
            "original_position": 41,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 70,
            "pull_request_review_id": 2527607839,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900899515/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T13:52:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900899515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900903857"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900903857"
                }
            },
            "author_association": "MEMBER",
            "body": "1 line of coverage for that gives us some sort of signal in CI, why not?",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-02T13:57:37Z",
            "diff_hunk": "@@ -503,4 +503,27 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/bbbb', 'c:/aaaa'))\n+        eq('cccc', vim.fs.relpath('c:/aaaa/', 'c:/aaaa/cccc'))\n+        eq('aaaa/bbbb', vim.fs.relpath('c:/', 'c:\\\\aaaa\\\\bbbb'))\n+        eq('bar/package.json', vim.fs.relpath('C:\\\\foo\\\\test', 'C:\\\\foo\\\\test\\\\bar\\\\package.json'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900903857",
            "id": 1900903857,
            "in_reply_to_id": 1900883389,
            "line": 573,
            "node_id": "PRRC_kwDOAPphoM5xTX2x",
            "original_commit_id": "bddf9950fd685604c2fdc8067d49013f137d7b59",
            "original_line": 573,
            "original_position": 41,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 70,
            "pull_request_review_id": 2527615288,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900903857/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T13:57:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900903857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900969386"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900969386"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't understand what you're saying. I'll make a PR to fix normalize() and we can continue the discussion there.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-02T15:06:55Z",
            "diff_hunk": "@@ -503,4 +503,27 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/bbbb', 'c:/aaaa'))\n+        eq('cccc', vim.fs.relpath('c:/aaaa/', 'c:/aaaa/cccc'))\n+        eq('aaaa/bbbb', vim.fs.relpath('c:/', 'c:\\\\aaaa\\\\bbbb'))\n+        eq('bar/package.json', vim.fs.relpath('C:\\\\foo\\\\test', 'C:\\\\foo\\\\test\\\\bar\\\\package.json'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900969386",
            "id": 1900969386,
            "in_reply_to_id": 1900883389,
            "line": 573,
            "node_id": "PRRC_kwDOAPphoM5xTn2q",
            "original_commit_id": "bddf9950fd685604c2fdc8067d49013f137d7b59",
            "original_line": 573,
            "original_position": 41,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 70,
            "pull_request_review_id": 2527730301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900969386/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T15:19:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900969386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1900991689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900991689"
                }
            },
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/31833",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-02T15:30:06Z",
            "diff_hunk": "@@ -503,4 +503,27 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/bbbb', 'c:/aaaa'))\n+        eq('cccc', vim.fs.relpath('c:/aaaa/', 'c:/aaaa/cccc'))\n+        eq('aaaa/bbbb', vim.fs.relpath('c:/', 'c:\\\\aaaa\\\\bbbb'))\n+        eq('bar/package.json', vim.fs.relpath('C:\\\\foo\\\\test', 'C:\\\\foo\\\\test\\\\bar\\\\package.json'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1900991689",
            "id": 1900991689,
            "in_reply_to_id": 1900883389,
            "line": 573,
            "node_id": "PRRC_kwDOAPphoM5xTtTJ",
            "original_commit_id": "bddf9950fd685604c2fdc8067d49013f137d7b59",
            "original_line": 573,
            "original_position": 41,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 70,
            "pull_request_review_id": 2527769146,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900991689/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T15:30:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900991689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905573148"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905573148"
                }
            },
            "author_association": "MEMBER",
            "body": "Technically, these tests can have false positive fail if tests are run inside '/var/lib' directory. But not sure if it's worth the trouble to come up with something more clever.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T14:52:58Z",
            "diff_hunk": "@@ -529,4 +526,49 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905573148",
            "id": 1905573148,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xlL0c",
            "original_commit_id": "89c4db2311f6c777b0b2f6d692f32813ec1c9f13",
            "original_line": 539,
            "original_position": 46,
            "original_start_line": 536,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 2534542825,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905573148/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-07T15:02:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905573148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905583122"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905583122"
                }
            },
            "author_association": "MEMBER",
            "body": "There is no passing tests when either `base` or `target` are relative. Maybe something like these?\r\n\r\n```lua\r\neq('foo/bar', vim.fs.relpath(vim.uv.cwd(), 'foo/bar'))\r\neq('foo/bar', vim.fs.relpath('.', vim.fs.joinpath(vim.uv.cwd(), 'foo/bar')))\r\neq('bar', vim.fs.relpath('foo', 'foo/bar'))\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T14:59:04Z",
            "diff_hunk": "@@ -529,4 +526,49 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/'))\n+      eq(nil, vim.fs.relpath('/var/lib', '//'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905583122",
            "id": 1905583122,
            "line": 548,
            "node_id": "PRRC_kwDOAPphoM5xlOQS",
            "original_commit_id": "89c4db2311f6c777b0b2f6d692f32813ec1c9f13",
            "original_line": 548,
            "original_position": 54,
            "original_start_line": 544,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 45,
            "pull_request_review_id": 2534542825,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905583122/reactions"
            },
            "side": "RIGHT",
            "start_line": 545,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-07T15:02:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905583122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905588712"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905588712"
                }
            },
            "author_association": "MEMBER",
            "body": "I couldn't find tests for this base normalization. Something like this:\r\n\r\n```lua\r\neq(nil, vim.fs.relpath('/var/lib', '/var/library/foo'))\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T15:02:25Z",
            "diff_hunk": "@@ -741,4 +741,36 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.fs.relpath('/var', '/var/lib') -- 'lib'\n+--- vim.fs.relpath('/var', '/usr/bin') -- nil\n+--- ```\n+---\n+--- @param base string\n+--- @param target string\n+--- @return string|nil\n+function M.relpath(base, target)\n+  vim.validate('base', base, 'string')\n+  vim.validate('target', target, 'string')\n+\n+  base = vim.fs.normalize(vim.fs.abspath(base))\n+  target = vim.fs.normalize(vim.fs.abspath(target))\n+  if base == target then\n+    return '.'\n+  end\n+\n+  local prefix = ''\n+  if iswin then\n+    prefix, base = split_windows_path(base)\n+  end\n+  base = base .. (base ~= '/' and '/' or '')",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905588712",
            "id": 1905588712,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xlPno",
            "original_commit_id": "89c4db2311f6c777b0b2f6d692f32813ec1c9f13",
            "original_line": 770,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2534542825,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905588712/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T15:02:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905588712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905595458"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905595458"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  base = prefix .. base .. (base ~= '/' and '/' or '')\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T15:07:19Z",
            "diff_hunk": "@@ -741,4 +741,36 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.fs.relpath('/var', '/var/lib') -- 'lib'\n+--- vim.fs.relpath('/var', '/usr/bin') -- nil\n+--- ```\n+---\n+--- @param base string\n+--- @param target string\n+--- @return string|nil\n+function M.relpath(base, target)\n+  vim.validate('base', base, 'string')\n+  vim.validate('target', target, 'string')\n+\n+  base = vim.fs.normalize(vim.fs.abspath(base))\n+  target = vim.fs.normalize(vim.fs.abspath(target))\n+  if base == target then\n+    return '.'\n+  end\n+\n+  local prefix = ''\n+  if iswin then\n+    prefix, base = split_windows_path(base)\n+  end\n+  base = base .. (base ~= '/' and '/' or '')\n+  base = prefix .. base",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905595458",
            "id": 1905595458,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xlRRC",
            "original_commit_id": "89c4db2311f6c777b0b2f6d692f32813ec1c9f13",
            "original_line": 771,
            "original_position": 31,
            "original_start_line": 770,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2534581271,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905595458/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-07T15:07:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905595458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905756467"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905756467"
                }
            },
            "author_association": "MEMBER",
            "body": "Wait, you're right. Should we just remove them for the time being?",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T16:36:54Z",
            "diff_hunk": "@@ -529,4 +526,49 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905756467",
            "id": 1905756467,
            "in_reply_to_id": 1905573148,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xl4kz",
            "original_commit_id": "89c4db2311f6c777b0b2f6d692f32813ec1c9f13",
            "original_line": 539,
            "original_position": 46,
            "original_start_line": 536,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 2534882092,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905756467/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-07T16:36:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905756467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905830922"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905830922"
                }
            },
            "author_association": "MEMBER",
            "body": "Of use construct some directory that is guaranteed to not be ancestor for any of the four cases. Something like `vim.fs.joinpath(vim.uv.cwd(), 'foo')` should work.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T17:36:57Z",
            "diff_hunk": "@@ -529,4 +526,49 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905830922",
            "id": 1905830922,
            "in_reply_to_id": 1905573148,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xmKwK",
            "original_commit_id": "89c4db2311f6c777b0b2f6d692f32813ec1c9f13",
            "original_line": 539,
            "original_position": 46,
            "original_start_line": 536,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 2535008204,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905830922/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-07T17:36:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905830922",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905861241"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905861241"
                }
            },
            "author_association": "MEMBER",
            "body": "Not a blocker, but I don't see why this should be different on Windows. 'var' is already relative, thus it should return `cwd_rel_root .. '/var'` or `./var` or something.\r\n\r\nAnd besides that, Vim usually treats `/` on Windows as \"root of the current drive\".\r\n\r\nIs there a 1-line comment that can explain the rationale here?",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T18:05:10Z",
            "diff_hunk": "@@ -529,4 +526,53 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/'))\n+      eq(nil, vim.fs.relpath('/var/lib', '//'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+      eq('foo/bar', vim.fs.relpath(cwd, 'foo/bar'))\n+      eq('foo/bar', vim.fs.relpath('.', vim.fs.joinpath(cwd, 'foo/bar')))\n+      eq('bar', vim.fs.relpath('foo', 'foo/bar'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/var/library/foo'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('/', ' '))\n+        eq(nil, vim.fs.relpath('/', 'var'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905861241",
            "id": 1905861241,
            "line": 556,
            "node_id": "PRRC_kwDOAPphoM5xmSJ5",
            "original_commit_id": "8f11cb753b8a200749dc4ffa25b1afe0f758b5cf",
            "original_line": 556,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 53,
            "pull_request_review_id": 2535059739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905861241/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T18:05:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905861241",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905862447"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905862447"
                }
            },
            "author_association": "MEMBER",
            "body": "would be good to have a case where everything matches up except the drive letter\r\n\r\n```lua\r\n        eq(nil, vim.fs.relpath('c:/games', 'd:/games'))\r\n        eq(nil, vim.fs.relpath('c:/games', 'd:/games/foo'))\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T18:06:32Z",
            "diff_hunk": "@@ -529,4 +526,53 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/'))\n+      eq(nil, vim.fs.relpath('/var/lib', '//'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+      eq('foo/bar', vim.fs.relpath(cwd, 'foo/bar'))\n+      eq('foo/bar', vim.fs.relpath('.', vim.fs.joinpath(cwd, 'foo/bar')))\n+      eq('bar', vim.fs.relpath('foo', 'foo/bar'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/var/library/foo'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('/', ' '))\n+        eq(nil, vim.fs.relpath('/', 'var'))\n+      else\n+        local cwd_rel_root = cwd:sub(2)\n+        eq(cwd_rel_root .. '/ ', vim.fs.relpath('/', ' '))\n+        eq(cwd_rel_root .. '/var', vim.fs.relpath('/', 'var'))\n+      end\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/aaaa/', '/aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/', './aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/', 'aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905862447",
            "id": 1905862447,
            "line": 567,
            "node_id": "PRRC_kwDOAPphoM5xmScv",
            "original_commit_id": "8f11cb753b8a200749dc4ffa25b1afe0f758b5cf",
            "original_line": 567,
            "original_position": 73,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 64,
            "pull_request_review_id": 2535062035,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905862447/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T18:06:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905862447",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905863497"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905863497"
                }
            },
            "author_association": "MEMBER",
            "body": "use mixed casing to emphasize that drive-letter casing is ignored\r\n```suggestion\r\n        eq('aaaa/bbbb', vim.fs.relpath('C:/', 'c:\\\\aaaa\\\\bbbb'))\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T18:07:39Z",
            "diff_hunk": "@@ -529,4 +526,53 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/'))\n+      eq(nil, vim.fs.relpath('/var/lib', '//'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+      eq('foo/bar', vim.fs.relpath(cwd, 'foo/bar'))\n+      eq('foo/bar', vim.fs.relpath('.', vim.fs.joinpath(cwd, 'foo/bar')))\n+      eq('bar', vim.fs.relpath('foo', 'foo/bar'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/var/library/foo'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('/', ' '))\n+        eq(nil, vim.fs.relpath('/', 'var'))\n+      else\n+        local cwd_rel_root = cwd:sub(2)\n+        eq(cwd_rel_root .. '/ ', vim.fs.relpath('/', ' '))\n+        eq(cwd_rel_root .. '/var', vim.fs.relpath('/', 'var'))\n+      end\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/aaaa/', '/aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/', './aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/', 'aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/bbbb', 'c:/aaaa'))\n+        eq('cccc', vim.fs.relpath('c:/aaaa/', 'c:/aaaa/cccc'))\n+        eq('aaaa/bbbb', vim.fs.relpath('c:/', 'c:\\\\aaaa\\\\bbbb'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905863497",
            "id": 1905863497,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xmStJ",
            "original_commit_id": "8f11cb753b8a200749dc4ffa25b1afe0f758b5cf",
            "original_line": 571,
            "original_position": 76,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 2535064189,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905863497/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T18:07:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905863497",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1905865521"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905865521"
                }
            },
            "author_association": "MEMBER",
            "body": "add  mixed-case coverage\r\n\r\n        eq(nil, vim.fs.relpath('C:\\\\foo\\\\test', 'C:\\\\foo\\\\Test\\\\bar\\\\package.json'))\r\n",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T18:09:40Z",
            "diff_hunk": "@@ -529,4 +526,53 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/'))\n+      eq(nil, vim.fs.relpath('/var/lib', '//'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+      eq('foo/bar', vim.fs.relpath(cwd, 'foo/bar'))\n+      eq('foo/bar', vim.fs.relpath('.', vim.fs.joinpath(cwd, 'foo/bar')))\n+      eq('bar', vim.fs.relpath('foo', 'foo/bar'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/var/library/foo'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('/', ' '))\n+        eq(nil, vim.fs.relpath('/', 'var'))\n+      else\n+        local cwd_rel_root = cwd:sub(2)\n+        eq(cwd_rel_root .. '/ ', vim.fs.relpath('/', ' '))\n+        eq(cwd_rel_root .. '/var', vim.fs.relpath('/', 'var'))\n+      end\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('c:/aaaa/', '/aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/', './aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/', 'aaaa/cccc'))\n+        eq(nil, vim.fs.relpath('c:/blah\\\\blah', 'd:/games'))\n+        eq(nil, vim.fs.relpath('c:/aaaa/bbbb', 'c:/aaaa'))\n+        eq('cccc', vim.fs.relpath('c:/aaaa/', 'c:/aaaa/cccc'))\n+        eq('aaaa/bbbb', vim.fs.relpath('c:/', 'c:\\\\aaaa\\\\bbbb'))\n+        eq('bar/package.json', vim.fs.relpath('C:\\\\foo\\\\test', 'C:\\\\foo\\\\test\\\\bar\\\\package.json'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1905865521",
            "id": 1905865521,
            "line": 573,
            "node_id": "PRRC_kwDOAPphoM5xmTMx",
            "original_commit_id": "8f11cb753b8a200749dc4ffa25b1afe0f758b5cf",
            "original_line": 573,
            "original_position": 77,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 70,
            "pull_request_review_id": 2535068400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905865521/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T18:09:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905865521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1906021641"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906021641"
                }
            },
            "author_association": "MEMBER",
            "body": "> And besides that, Vim usually treats `/` on Windows as \"root of the current drive\".\r\n\r\nWe could start doing that but to my knowledge there is no precedence for that currently in `vim.fs`. Shouldn't `normalize` or `abspath` be taking care of this in that case?",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T20:48:31Z",
            "diff_hunk": "@@ -529,4 +526,53 @@ describe('vim.fs', function()\n       end)\n     end\n   end)\n+\n+  describe('relpath()', function()\n+    it('works', function()\n+      local cwd = assert(t.fix_slashes(assert(vim.uv.cwd())))\n+\n+      eq(nil, vim.fs.relpath('/var/lib', '/var'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', 'bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', './bin'))\n+      eq(nil, vim.fs.relpath('/var/lib', '././'))\n+      eq(nil, vim.fs.relpath('/var/lib', '../'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/'))\n+      eq(nil, vim.fs.relpath('/var/lib', '//'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq(nil, vim.fs.relpath(' ', '/var'))\n+      eq('.', vim.fs.relpath('/var/lib', '/var/lib'))\n+      eq('lib', vim.fs.relpath('/var/', '/var/lib'))\n+      eq('var/lib', vim.fs.relpath('/', '/var/lib'))\n+      eq('bar/package.json', vim.fs.relpath('/foo/test', '/foo/test/bar/package.json'))\n+      eq('foo/bar', vim.fs.relpath(cwd, 'foo/bar'))\n+      eq('foo/bar', vim.fs.relpath('.', vim.fs.joinpath(cwd, 'foo/bar')))\n+      eq('bar', vim.fs.relpath('foo', 'foo/bar'))\n+      eq(nil, vim.fs.relpath('/var/lib', '/var/library/foo'))\n+\n+      if is_os('win') then\n+        eq(nil, vim.fs.relpath('/', ' '))\n+        eq(nil, vim.fs.relpath('/', 'var'))",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1906021641",
            "id": 1906021641,
            "in_reply_to_id": 1905861241,
            "line": 556,
            "node_id": "PRRC_kwDOAPphoM5xm5UJ",
            "original_commit_id": "8f11cb753b8a200749dc4ffa25b1afe0f758b5cf",
            "original_line": 556,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": 53,
            "pull_request_review_id": 2535336992,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906021641/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T20:48:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906021641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1906084185"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906084185"
                }
            },
            "author_association": "MEMBER",
            "body": "> or `nil` if `base` is not an ancestor.\r\n\r\nWhat's the main motivation behind this design? Wouldn't `base=\"/var/lib\", target=\"/var/foo\"` => `relpath = \"../foo\"` also make sense (`relpath` in other programming languages implements such a behavior)?",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T21:52:11Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1906084185",
            "id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5xnIlZ",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2535443555,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906084185/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T22:04:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906084185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1906086824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906086824"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry for a duplicate comment, I missed the previous discussion. But I'm still worried about potential breaking changes in the future and the design of the API.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T21:55:15Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1906086824",
            "id": 1906086824,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5xnJOo",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2535447800,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906086824/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T21:55:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906086824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1906096601"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906096601"
                }
            },
            "author_association": "MEMBER",
            "body": "See https://github.com/neovim/neovim/pull/31790#issuecomment-2565837243\r\n\r\nThe current behavior allows `relpath()` to also provide \"is relative to\" functionality.\r\n\r\n> Wouldn't `base=\"/var/lib\", target=\"/var/foo\"` => `relpath = \"../foo\"` also make sense\r\n\r\nWe can get that in the future if it's wanted, by adding a `opts` flag. I think it's uncommon. It also complicates the logic. So if people want it, we can add it later.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T22:06:14Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1906096601",
            "id": 1906096601,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5xnLnZ",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2535464623,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906096601/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T22:07:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906096601",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1906115049"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906115049"
                }
            },
            "author_association": "MEMBER",
            "body": "I agree with we can avoid a complication for uncommon scenario, but as a low-level stdlib I believe the correct and reasonable default behavior is to make it behave the same and consistentyl as the common `relpath` and other programming languages (including python's `os.path.relpath`).\r\n\r\nI believe eventually we will implement the remaining case (\"*walk_up*\") sometime in the future, or at least some people will find the behavior of API surprising (arguably). If the function would work correctly only under a certain `opt`, that would sound weird in my humble opinion.\r\n\r\nIf the main purpose of adding this low-level vim.fs API is to implement `is_descendant` (with being performant), why don't we add a dedicated API instead?\r\n\r\nSo please consider requiring an explicit option such as `opt = {walk_up = False}` to achieve the (current) behavior, where the default option for the API (`{ walk_up = true }`) could remain yet-to-be implemented for the time being.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T22:29:27Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1906115049",
            "id": 1906115049,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5xnQHp",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2535500022,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906115049/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T22:29:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906115049",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1906130442"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906130442"
                }
            },
            "author_association": "MEMBER",
            "body": "I guess we could do that, although adding an option for an unimplemented feature sounds a bit odd. I'm fine with either option, I guess you'd need to convince @justinmk and @echasnovski though.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-07T22:51:02Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1906130442",
            "id": 1906130442,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5xnT4K",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2535523040,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906130442/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T22:51:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906130442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1906172110"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906172110"
                }
            },
            "author_association": "MEMBER",
            "body": "> I believe the correct and reasonable default behavior is to make it behave the same and consistentyl as the common `relpath` and other programming languages (including python's `os.path.relpath`).\r\n\r\nI didn't think about that. Though I can see that it would be useful for *sibling* files. But I have never needed that... \r\n\r\nThe common use-case for wanting a relative path is for a target that you *know* is descendant, and you want to avoid an absolute path (e.g. \"workspace roots\" for LSP or other project-like resolution). \r\n\r\nDo you have some real-world examples where a \"sibling\" relative path is wanted?",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-08T00:00:14Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1906172110",
            "id": 1906172110,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5xneDO",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2535586420,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906172110/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-08T00:00:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906172110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1911963764"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911963764"
                }
            },
            "author_association": "MEMBER",
            "body": "@wookayin I'd prefer not to delay with this for much longer. If you have any examples in mind let us know, otherwise I'll go ahead and merge this soon.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-11T10:52:26Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1911963764",
            "id": 1911963764,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5x9kB0",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2544634586,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911963764/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-11T10:52:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911963764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1911964375"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911964375"
                }
            },
            "author_association": "MEMBER",
            "body": "> If you have any examples in mind let us know, otherwise I'll go ahead and merge this soon.\r\n\r\nMight be worth adding a third `opts` argument for future use and explicitly say that it is \"reserved for future use\". Not mandatory, since adding it later seems to follow the API contract for Lua stdlib.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-11T10:56:37Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1911964375",
            "id": 1911964375,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5x9kLX",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2544635068,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911964375/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-11T10:56:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911964375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1912101315"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912101315"
                }
            },
            "author_association": "MEMBER",
            "body": "OK, add an `opts` argument",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-11T17:20:52Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1912101315",
            "id": 1912101315,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5x-FnD",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2545119157,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912101315/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-11T17:20:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912101315",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1912121786"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912121786"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  vim.validate('opts', opts, 'table', true)\r\n```",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-11T17:51:12Z",
            "diff_hunk": "@@ -741,4 +741,38 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.fs.relpath('/var', '/var/lib') -- 'lib'\n+--- vim.fs.relpath('/var', '/usr/bin') -- nil\n+--- ```\n+---\n+--- @param base string\n+--- @param target string\n+--- @param opts table? Reserved for future use\n+--- @return string|nil\n+function M.relpath(base, target, opts)\n+  vim.validate('base', base, 'string')\n+  vim.validate('target', target, 'string')\n+  vim.validate('opts', target, 'table', true)",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1912121786",
            "id": 1912121786,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x-Km6",
            "original_commit_id": "ffc4fd733db6aee08d38a8a1888a9ba4b18fed6a",
            "original_line": 760,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2545123232,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912121786/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-11T17:51:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912121786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31790#discussion_r1913096697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31790"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913096697"
                }
            },
            "author_association": "MEMBER",
            "body": "I'll merge this, we can change the signature before release if it turns out doing the other way is more useful.",
            "commit_id": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
            "created_at": "2025-01-13T12:14:34Z",
            "diff_hunk": "@@ -741,4 +741,35 @@ function M.abspath(path)\n   return M.joinpath(cwd, path)\n end\n \n+--- Gets `target` path relative to `base`, or `nil` if `base` is not an ancestor.",
            "html_url": "https://github.com/neovim/neovim/pull/31790#discussion_r1913096697",
            "id": 1913096697,
            "in_reply_to_id": 1906084185,
            "line": 744,
            "node_id": "PRRC_kwDOAPphoM5yB4n5",
            "original_commit_id": "5ca0bf4f4fe668dcba405ff6b3acdcae0a5cfd13",
            "original_line": 744,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 4,
            "pull_request_review_id": 2546449704,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913096697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T12:14:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913096697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Alternative to https://github.com/neovim/neovim/pull/31702",
            "created_at": "2024-12-30T16:35:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/31790#issuecomment-2565694525",
            "id": 2565694525,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31790",
            "node_id": "IC_kwDOAPphoM6Y7WQ9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565694525/reactions"
            },
            "updated_at": "2024-12-30T16:35:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565694525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@neovim/core: there's been some discussion in matrix chat without clear resolution whether this should work for target paths outside of the base directory. In other words, whether `vim.fs.relpath(\"/var/lib\", \"/var/apache\")` should return `../apache` or `nil`. I think `../apache` is technically more correct but that returning `nil` would make the implementation easier. Other than that I'm not entirely decided. Input welcome if anyone has ideas.\r\n\r\nFor reference:\r\ngolang, zig, java, D, R, dart and `realpath` tool: returns `../apache`\r\npython: returns an error by default, but has an optional flag that allows outside paths in which case it would return `../apache`\r\nhaskell: does not allow this case (so I guess an error?)\r\nrust: does not have relative path functionality",
            "created_at": "2024-12-30T18:18:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/31790#issuecomment-2565786328",
            "id": 2565786328,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31790",
            "node_id": "IC_kwDOAPphoM6Y7srY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565786328/reactions"
            },
            "updated_at": "2024-12-31T13:13:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565786328",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think `../apache` is technically more correct but that returning `nil` would make the implementation easier.\r\n\r\nReturning '../apache' definitely makes `relpath()` more versatile. My personal opinion is that it comes at somewhat high cost of (significantly) improved complexity of the function itself and the inability to use it to decide whether a path is a descendant of the base (thus requiring a separate function for that). Plus I don't think I can get a good enough practical use case for supporting returning '../apache' like output.\r\n\r\nIf the requirement is dropped, then implementation is fairly straightforward and allows `vim.fs.relpath(path, dir) == nil` be used to check whether `path` is descendant of `dir`:\r\n\r\n```lua\r\nvim.fs.relpath = function(from, to)\r\n  from, to = vim.fs.normalize(vim.fs.abspath(from)), vim.fs.normalize(vim.fs.abspath(to))\r\n  to = to .. (to ~= '/' and '/' or '')\r\n  return vim.startswith(from, to) and from:sub(#to + 1) or nil\r\nend\r\n```\r\n\r\n> For reference, the relative path function for golang, zig, java, D and dart would return `../apache`.\r\n\r\nResorting for what is commonly used in other languages might indeed be the way to go here. You can also add [one of R's popular file system library](https://fs.r-lib.org/reference/path_math.html) to the list of \"... would return `../apache`\".",
            "created_at": "2024-12-30T18:34:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/31790#issuecomment-2565799250",
            "id": 2565799250,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31790",
            "node_id": "IC_kwDOAPphoM6Y7v1S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565799250/reactions"
            },
            "updated_at": "2024-12-30T18:34:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565799250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I was somewhat hesitant to mention how other languages implements this as there's risk of cargo culting involved in these cases. I can remove it if it's not useful/detrimental to the discussion.\r\n\r\nIf I'm being honest I'm don't see a super strong reason for allowing outside paths at the moment either other than \"it is more correct\", but unsure how good that reasoning is. I will lurk around in python code/issues to check why they decided to add this functionality in 3.12, presumably there was a need for this.\r\n\r\nEdit (ngl, can't say it helped answer many questions):\r\nhttps://github.com/python/cpython/issues/84538\r\nhttps://github.com/python/cpython/pull/19813\r\nhttps://discuss.python.org/t/how-to-go-on-with-a-tiny-improvement-idea-for-pathlib/12472",
            "created_at": "2024-12-30T18:41:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/31790#issuecomment-2565804572",
            "id": 2565804572,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31790",
            "node_id": "IC_kwDOAPphoM6Y7xIc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565804572/reactions"
            },
            "updated_at": "2024-12-30T19:01:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565804572",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The `realpath` tool also returns `../apache`:\r\n\r\n```\r\n$ realpath --relative-to /var/lib /var/apache\r\n../apache\r\n```",
            "created_at": "2024-12-30T19:20:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/31790#issuecomment-2565836049",
            "id": 2565836049,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31790",
            "node_id": "IC_kwDOAPphoM6Y740R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565836049/reactions"
            },
            "updated_at": "2024-12-30T19:20:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565836049",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If the requirement is dropped, then implementation is fairly straightforward and allows `vim.fs.relpath(path, dir) == nil` be used to check whether `path` is descendant of `dir`:\r\n\r\nLet's do that way then. We can add support for the \"outside of target directory\" case as a optional flag, later, if anyone actually requests it. But the default behavior should allow us to avoid `is_relative_to`.",
            "created_at": "2024-12-30T19:21:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/31790#issuecomment-2565837243",
            "id": 2565837243,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31790",
            "node_id": "IC_kwDOAPphoM6Y75G7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565837243/reactions"
            },
            "updated_at": "2024-12-30T19:21:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565837243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31790/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31790/commits",
    "created_at": "2024-12-30T16:35:27Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31790.diff",
    "draft": false,
    "head": {
        "label": "dundargoc:feat/vim.fs.relpath",
        "ref": "feat/vim.fs.relpath",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dundargoc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dundargoc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dundargoc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dundargoc/neovim/branches{/branch}",
            "clone_url": "https://github.com/dundargoc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dundargoc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dundargoc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dundargoc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dundargoc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dundargoc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dundargoc/neovim/contributors",
            "created_at": "2021-06-20T10:14:48Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dundargoc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dundargoc/neovim/downloads",
            "events_url": "https://api.github.com/repos/dundargoc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dundargoc/neovim/forks",
            "full_name": "dundargoc/neovim",
            "git_commits_url": "https://api.github.com/repos/dundargoc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dundargoc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dundargoc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dundargoc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dundargoc/neovim/hooks",
            "html_url": "https://github.com/dundargoc/neovim",
            "id": 378614899,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dundargoc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dundargoc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dundargoc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dundargoc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dundargoc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/dundargoc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dundargoc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dundargoc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzg2MTQ4OTk=",
            "notifications_url": "https://api.github.com/repos/dundargoc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dundargoc/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T19:37:48Z",
            "releases_url": "https://api.github.com/repos/dundargoc/neovim/releases{/id}",
            "size": 298941,
            "ssh_url": "git@github.com:dundargoc/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/dundargoc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dundargoc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dundargoc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dundargoc/neovim/subscription",
            "svn_url": "https://github.com/dundargoc/neovim",
            "tags_url": "https://api.github.com/repos/dundargoc/neovim/tags",
            "teams_url": "https://api.github.com/repos/dundargoc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dundargoc/neovim/git/trees{/sha}",
            "updated_at": "2025-01-13T14:47:59Z",
            "url": "https://api.github.com/repos/dundargoc/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "d3a7893d681ff0a62aef572c674b07d21d1267b6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
            "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
            "followers_url": "https://api.github.com/users/dundargoc/followers",
            "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dundargoc",
            "id": 33953936,
            "login": "dundargoc",
            "node_id": "MDQ6VXNlcjMzOTUzOTM2",
            "organizations_url": "https://api.github.com/users/dundargoc/orgs",
            "received_events_url": "https://api.github.com/users/dundargoc/received_events",
            "repos_url": "https://api.github.com/users/dundargoc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dundargoc",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31790",
    "id": 2255638034,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31790",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "locked": false,
    "merge_commit_sha": "0631492f9c8044a378dc2a17ea257badfbda6d15",
    "merged_at": "2025-01-13T12:14:52Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6Gck4S",
    "number": 31790,
    "patch_url": "https://github.com/neovim/neovim/pull/31790.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31790/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d3a7893d681ff0a62aef572c674b07d21d1267b6",
    "title": "feat: add vim.fs.relpath",
    "updated_at": "2025-01-13T12:15:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31790",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
        "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/dundargoc/followers",
        "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dundargoc",
        "id": 33953936,
        "login": "dundargoc",
        "node_id": "MDQ6VXNlcjMzOTUzOTM2",
        "organizations_url": "https://api.github.com/users/dundargoc/orgs",
        "received_events_url": "https://api.github.com/users/dundargoc/received_events",
        "repos_url": "https://api.github.com/users/dundargoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dundargoc",
        "user_view_type": "public"
    }
}