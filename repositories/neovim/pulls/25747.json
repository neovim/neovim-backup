{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25747/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25747/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25747"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25747"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25747/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2980dcd33c9028a2aaad56494e00786fdb439e2f"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5926,
            "forks_count": 5926,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1872,
            "open_issues_count": 1872,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-03-11T01:51:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 311541,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 87036,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-03-11T02:33:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 87036,
            "watchers_count": 87036,
            "web_commit_signoff_required": false
        },
        "sha": "bc850ba2a090a9a4733a82a7555a5a70264ce1ac",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Instead of using diagnostics from the entire cursor line to find\navailable code actions, only consider diagnostics whose range overlaps\nthe current cursor position.\n\nThis will also code actions for diagnostics that span multiple lines.\n\nFixes: https://github.com/neovim/neovim/issues/21985\n",
    "closed_at": "2025-03-04T14:59:53Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367925930"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367925930"
                }
            },
            "author_association": "MEMBER",
            "body": "I think the `col` here needs to be converted considering the offset encoding of the client/server. If it's utf-16 or utf-32, the comparsion below could include or exclude the wrong diagnostics.\r\n\r\nSomewhat related: It would probably be more efficient to fetch the diagnostic in vim-format, filter on them, and only afterwards convert to lsp diagnostic format, to do fewer conversions.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T15:37:57Z",
            "diff_hunk": "@@ -745,8 +745,20 @@ function M.code_action(options)\n     context.triggerKind = vim.lsp.protocol.CodeActionTriggerKind.Invoked\n   end\n   if not context.diagnostics then\n-    local bufnr = api.nvim_get_current_buf()\n-    context.diagnostics = vim.lsp.diagnostic.get_line_diagnostics(bufnr)\n+    context.diagnostics = {}\n+    local diagnostics = vim.lsp.diagnostic._get(0)\n+    local cursor = api.nvim_win_get_cursor(0)\n+    local row, col = cursor[1] - 1, cursor[2]",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367925930",
            "id": 1367925930,
            "line": 751,
            "node_id": "PRRC_kwDOAPphoM5RiOSq",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 751,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 9,
            "pull_request_review_id": 1691453447,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367925930/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T15:39:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367925930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367957719"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367957719"
                }
            },
            "author_association": "MEMBER",
            "body": "I think that we should make the deprecation its own commit.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T19:29:32Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367957719",
            "id": 1367957719,
            "line": 369,
            "node_id": "PRRC_kwDOAPphoM5RiWDX",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 369,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 16,
            "pull_request_review_id": 1691481099,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367957719/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T19:30:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367957719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367958278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367958278"
                }
            },
            "author_association": "MEMBER",
            "body": "This function is the only way to get diagnostics as defined in LSP instead of vim diagnostics, and there are no public utilities to convert between them. Thoughts on exposing a way to convert between the different diagnostic formats?",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T19:33:20Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367958278",
            "id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RiWMG",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691481485,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367958278/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T19:33:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367958278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367968604"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367968604"
                }
            },
            "author_association": "MEMBER",
            "body": "The function is already private, so the deprecation doesn’t have any user facing effect. ",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T20:58:25Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367968604",
            "id": 1367968604,
            "in_reply_to_id": 1367957719,
            "line": 369,
            "node_id": "PRRC_kwDOAPphoM5RiYtc",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 369,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 16,
            "pull_request_review_id": 1691489855,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367968604/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T20:58:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367968604",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367968921"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367968921"
                }
            },
            "author_association": "MEMBER",
            "body": "@gpanders it does. `vim.deprecate` prints to `messages` (which isn't the case today).",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T21:00:54Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367968921",
            "id": 1367968921,
            "in_reply_to_id": 1367957719,
            "line": 369,
            "node_id": "PRRC_kwDOAPphoM5RiYyZ",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 369,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 16,
            "pull_request_review_id": 1691490122,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367968921/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T21:00:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367968921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367969259"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367969259"
                }
            },
            "author_association": "MEMBER",
            "body": "Is there a use case? This function has been private/undocumented since `vim.diagnostic` was released so nothing is changing here.\r\n\r\nIn general I think that if users need to interface with “diagnostics” they should do so through `vim.diagnostic`. `vim.lsp.diagnostic` is only for dealing with “LSP diagnostics”, which is a separate and narrowly scoped thing, and only used by the LSP client implementation.\r\n\r\nExposing a public interface for both `vim.diagnostic` *and* LSP diagnostics seems like a leaky abstraction. But without an actual use case to consider it’s hard to know for sure.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T21:03:13Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367969259",
            "id": 1367969259,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RiY3r",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691490371,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367969259/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T21:03:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367969259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367969520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367969520"
                }
            },
            "author_association": "MEMBER",
            "body": "In that case I’d prefer to remove the `vim.deprecate` message completely. It’s a private function so plugins/users use it at their own peril. ",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T21:05:10Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367969520",
            "id": 1367969520,
            "in_reply_to_id": 1367957719,
            "line": 369,
            "node_id": "PRRC_kwDOAPphoM5RiY7w",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 369,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 16,
            "pull_request_review_id": 1691490579,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367969520/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T21:05:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367969520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367971367"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367971367"
                }
            },
            "author_association": "MEMBER",
            "body": "Its usage is mostly relevant for plugins that deal with code actions. I personally [use it in my config](https://github.com/MariaSolOs/dotfiles/blob/40da0d80859b27b33b7d252677c448b74c813d65/.config/nvim/lua/lightbulb.lua#L45) to have a \"VS Code-like lightbulb\". The same is done by [`nvim-lightbulb`](https://github.com/kosayoda/nvim-lightbulb/blob/8f00b89dd1b1dbde16872bee5fbcee2e58c9b8e9/lua/nvim-lightbulb/init.lua#L260) and [`lspsaga`](https://github.com/nvimdev/lspsaga.nvim/blob/28051f1be64c85aaeb9272de072cd9a13dfa5150/lua/lspsaga/codeaction/lightbulb.lua#L59).\r\n\r\nA GitHub search also shows that [`flutter-tools`](https://github.com/akinsho/flutter-tools.nvim/blob/7350750d46fbeb4d2bb4878157b658d435935299/lua/flutter-tools/lsp/code_actions.lua#L13) and [`navigator.nvim`](https://github.com/ray-x/navigator.lua/blob/4d6b1b804f0a0d0aee1de9d38b00bc0d3a2ee4e5/lua/navigator/codeAction.lua#L183) use it as well.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T21:19:57Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367971367",
            "id": 1367971367,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RiZYn",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691492040,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367971367/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T21:20:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367971367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367971767"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367971767"
                }
            },
            "author_association": "MEMBER",
            "body": "But why aren't you using the `vim.diagnostic` API for that (honest question)? That should give you support for _any_ diagnostic, for free?",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T21:24:00Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367971767",
            "id": 1367971767,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RiZe3",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691492421,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367971767/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T21:24:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367971767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1367972629"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367972629"
                }
            },
            "author_association": "MEMBER",
            "body": "@clason because those diagnostics are used in the context parameter for the code action request, and language servers expect LSP diagnostics, not vim ones.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-22T21:31:14Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1367972629",
            "id": 1367972629,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RiZsV",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691493133,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367972629/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-22T21:32:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1367972629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368283384"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368283384"
                }
            },
            "author_association": "MEMBER",
            "body": "So the conversion to vim.diagnostic is lossy in this case? Or is it just about the additional effort of converting back to LSP format?\r\n\r\nWould this (code action integration, e.g., by passing the context optionally or by default) be something that could/should be handled in core completely? Or is there a range of different use cases besides the one in your config?\r\n\r\n(I think adding internal code would be preferable to adding a public API, if(!) we can get away with it.)",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T08:09:40Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368283384",
            "id": 1368283384,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5Rjlj4",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691946144,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368283384/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T08:14:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368283384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368287467"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368287467"
                }
            },
            "author_association": "MEMBER",
            "body": "@clason Not sure what you mean exactly. What I’m trying to say here is that sometimes one might need diagnostics in their LSP format, yet all the functions that provided those got deprecated and `vim.diagnostic.get` is mentioned as the alternative. However that function returns vim diagnostics, and there’s no public API to convert between LSP and vim diagnostics.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T08:13:29Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368287467",
            "id": 1368287467,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5Rjmjr",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691952749,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368287467/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T08:13:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368287467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368289533"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368289533"
                }
            },
            "author_association": "MEMBER",
            "body": "(Don't get me wrong: I think that this is a valid use case; I just want to explore options how to best enable it.)",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T08:15:12Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368289533",
            "id": 1368289533,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RjnD9",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691956145,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368289533/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T08:15:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368289533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368293476"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368293476"
                }
            },
            "author_association": "MEMBER",
            "body": "> there’s no public API to convert between LSP and vim diagnostics\r\n\r\nWhat I'm kinda getting at is asking whether you _need_ an API to convert this, or whether it's feasible to do this by hand. Or whether you can completely encapsulate this so that no API call is needed.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T08:18:35Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368293476",
            "id": 1368293476,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RjoBk",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1691962142,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368293476/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T08:18:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368293476",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368501454"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368501454"
                }
            },
            "author_association": "MEMBER",
            "body": "The function is already listed in `deprecated.txt` so I saw the `@deprecation` and `vim.deprecate` just as following up properly on it.\r\n\r\n",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T11:14:42Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368501454",
            "id": 1368501454,
            "in_reply_to_id": 1367957719,
            "line": 369,
            "node_id": "PRRC_kwDOAPphoM5RkazO",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 369,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 16,
            "pull_request_review_id": 1692279790,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368501454/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T11:14:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368501454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368507523"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368507523"
                }
            },
            "author_association": "MEMBER",
            "body": "I think part of the usages are historic. I use it in nvim-jdtls too because it was written before vim.diagnostic was a thing.\r\n\r\nSome usages can likely be replaced by using `code_action` with the `filter` / `apply` options.\r\n\r\nFor other use-cases I think we have several options:\r\n\r\n- Attach the full lsp.Diagnostic object into the user_data of the vim.diagnostic entries. Avoids conversions but increases memory footprint\r\n- Expose a function to convert between lsp.Diagnostic and vim.Diagnostic\r\n- The `vim.pos` / `Position` story, and conversion from lsp.Position/vim.Position. Then plugin authors still have to convert from vim.Diagnostic to lsp.Diagnostic but at least the position conversion could be easier.\r\n- Do nothing, let them re-implement it.\r\n\r\n---\r\n\r\nOn second thought - I think this is another case where we got the multi-client handling wrong and we send currently all diagnostics to all clients/servers. We'd need to change how code-action interacts with the diagnostic collection.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T11:19:48Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368507523",
            "id": 1368507523,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RkcSD",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1692289599,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368507523/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T11:29:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368507523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368616278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368616278"
                }
            },
            "author_association": "MEMBER",
            "body": ">Attach the full lsp.Diagnostic object into the user_data of the vim.diagnostic entries. Avoids conversions but increases memory footprint\r\n\r\nWhat if we included just the original `range`? That seems like the most difficult field to get back post-conversion, and is also likely the most useful for plugins.\r\n\r\n>Expose a function to convert between lsp.Diagnostic and vim.Diagnostic\r\n\r\nI think this is my least favorite option. If anything I'd prefer to add an API to get LSP diagnostics directly (so the conversion still happens under the hood). My concern with that though is having two APIs for \"getting diagnostics\", which users are likely to conflate (many people still assume that \"diagnostics\" === \"LSP diagnostics\"). So my top preference would still be to find a way to solve this use case through `vim.diagnostic` directly.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T12:53:17Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368616278",
            "id": 1368616278,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5Rk21W",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1692463545,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368616278/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T12:54:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368616278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368872869"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368872869"
                }
            },
            "author_association": "MEMBER",
            "body": "> What if we included just the original range? That seems like the most difficult field to get back post-conversion, and is also likely the most useful for plugins.\r\n\r\nGood idea :+1: \r\n\r\n> I think this is my least favorite option.\r\n\r\nGood points. It's also not my favorite.\r\n\r\nBut expanding on my last point - which likely affects the change in this PR:\r\n\r\nI think we have to ditch the `diagnostics` parameter for vim.lsp.buf.code_action, or change it to a `client -> diagnostics` function and create the code-action request params on a per-client basis. (There is more broken there, . The `make_range_params` call also doesn't set the encoding parameter, all of that needs to be client specific)\r\n\r\nAssuming you've 2 clients connected to the buffer, and 2 diagnostics spanning the cursor position, 1 from each client then each client should only receive their own diagnostics.\r\nAnd we should probably also fetch diagnostics for both pull and push namespaces.\r\n",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T15:27:42Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368872869",
            "id": 1368872869,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5Rl1el",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1692877407,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368872869/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T15:45:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368872869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1368997482"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368997482"
                }
            },
            "author_association": "MEMBER",
            "body": "> Assuming you've 2 clients connected to the buffer, and 2 diagnostics spanning the cursor position, 1 from each client then each client should only receive their own diagnostics.\r\n\r\nThe user will still ultimately call `vim.lsp.buf.code_action()` which needs to aggregate code actions from all clients and display them together. Do you have any idea on how best to do that?\r\n\r\nGiven that multi client support is a non-trivial refactor I propose handling that in a separate PR. Any objection? This PR does not need to do anything to `get_line_diagnostics` except add the `@deprecated` tag (it already does not show up in the docs, so this is just enforcing its status on a documentation level).",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T17:07:40Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1368997482",
            "id": 1368997482,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RmT5q",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1693075950,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368997482/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T17:07:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1368997482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1369004276"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369004276"
                }
            },
            "author_association": "MEMBER",
            "body": "> I think we have to ditch the diagnostics parameter for vim.lsp.buf.code_action\r\n\r\n@mfussenegger do you mean that we should hide it from the public API? Because the LSP request still needs diagnostics in the context parameter. You're saying this should all happen inside the implementation of `vim.lsp.buf.code_action`?",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T17:13:57Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1369004276",
            "id": 1369004276,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RmVj0",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1693086607,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369004276/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T17:13:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369004276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1369007530"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369007530"
                }
            },
            "author_association": "MEMBER",
            "body": "But again, `vim.deprecate` creates a disruptive message that's different from the current experience of only receiving a warning in the code.",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T17:16:21Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1369007530",
            "id": 1369007530,
            "in_reply_to_id": 1367957719,
            "line": 369,
            "node_id": "PRRC_kwDOAPphoM5RmWWq",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 369,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 16,
            "pull_request_review_id": 1693091831,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369007530/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T17:16:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369007530",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1369017948"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369017948"
                }
            },
            "author_association": "MEMBER",
            "body": "> which needs to aggregate code actions from all clients and display them together. Do you have any idea on how best to do that?\r\n\r\nMost of the logic is already setup to handle the aggregated results, it's just the parameter building and the request trigger that needs adaption.\r\n\r\n> Given that multi client support is a non-trivial refactor I propose handling that in a separate PR. Any objection?\r\n\r\nI think it is related due to the offset-encoding that influence the position containment check. We could of course do it wrong first, and fix it in a separate step, but I think then we'll have to adapt the changes in this PR again.\r\n\r\nMaybe to illustrate with some code - completely untested - but it should show what I mean with per client params and why I think it affects the changes here:\r\n\r\n\r\n\r\n```diff\r\ndiff --git a/runtime/lua/vim/lsp/buf.lua b/runtime/lua/vim/lsp/buf.lua\r\nindex 9436fbbf5..f0e969f22 100644\r\n--- a/runtime/lua/vim/lsp/buf.lua\r\n+++ b/runtime/lua/vim/lsp/buf.lua\r\n@@ -692,19 +692,10 @@ local function on_code_action_results(results, ctx, options)\r\n       return title:gsub('\\n', '\\\\n')\r\n     end,\r\n   }, on_user_choice)\r\n end\r\n \r\n---- Requests code actions from all clients and calls the handler exactly once\r\n---- with all aggregated results\r\n-local function code_action_request(params, options)\r\n-  local bufnr = api.nvim_get_current_buf()\r\n-  vim.lsp.buf_request_all(bufnr, ms.textDocument_codeAction, params, function(results)\r\n-    local ctx = { bufnr = bufnr, method = ms.textDocument_codeAction, params = params }\r\n-    on_code_action_results(results, ctx, options)\r\n-  end)\r\n-end\r\n \r\n --- Selects a code action available at the current\r\n --- cursor position.\r\n ---\r\n ---@param options table|nil Optional table which holds the following optional fields:\r\n@@ -738,33 +729,51 @@ function M.code_action(options)\r\n   -- Detect old API call code_action(context) which should now be\r\n   -- code_action({ context = context} )\r\n   if options.diagnostics or options.only then\r\n     options = { options = options }\r\n   end\r\n-  local context = options.context or {}\r\n-  if not context.triggerKind then\r\n-    context.triggerKind = vim.lsp.protocol.CodeActionTriggerKind.Invoked\r\n+  local bufnr = api.nvim_get_current_buf()\r\n+  local clients = vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_codeAction })\r\n+  local remaining = #clients\r\n+  if remaining == 0 then\r\n+    return\r\n   end\r\n-  if not context.diagnostics then\r\n-    local bufnr = api.nvim_get_current_buf()\r\n-    context.diagnostics = vim.lsp.diagnostic.get_line_diagnostics(bufnr)\r\n-  end\r\n-  local params\r\n   local mode = api.nvim_get_mode().mode\r\n-  if options.range then\r\n-    assert(type(options.range) == 'table', 'code_action range must be a table')\r\n-    local start = assert(options.range.start, 'range must have a `start` property')\r\n-    local end_ = assert(options.range['end'], 'range must have a `end` property')\r\n-    params = util.make_given_range_params(start, end_)\r\n-  elseif mode == 'v' or mode == 'V' then\r\n-    local range = range_from_selection(0, mode)\r\n-    params = util.make_given_range_params(range.start, range['end'])\r\n-  else\r\n-    params = util.make_range_params()\r\n+  local win = api.nvim_get_current_win()\r\n+  local results = {}\r\n+  for _, client in ipairs(clients) do\r\n+    local context = options.context and vim.deepcopy(options.context) or {}\r\n+    if not context.triggerKind then\r\n+      context.triggerKind = vim.lsp.protocol.CodeActionTriggerKind.Invoked\r\n+    end\r\n+    -- TODO: needs to use offset_encoding aware positions and client namespaces to filter diagnostics\r\n+    -- context.diagnostics = vim.lsp.diagnostic._get(client)\r\n+    local params\r\n+    if options.range then\r\n+      assert(type(options.range) == 'table', 'code_action range must be a table')\r\n+      local start = assert(options.range.start, 'range must have a `start` property')\r\n+      local end_ = assert(options.range['end'], 'range must have a `end` property')\r\n+      params = util.make_given_range_params(start, end_, bufnr, client.offset_encoding)\r\n+    elseif mode == 'v' or mode == 'V' then\r\n+      local range = range_from_selection(0, mode)\r\n+      params = util.make_given_range_params(range.start, range['end'], bufnr, client.offset_encoding)\r\n+    else\r\n+      params = util.make_range_params(win, client.offset_encoding)\r\n+    end\r\n+    params.context = context\r\n+    client.request(ms.textDocument_codeAction, params, function(err, result)\r\n+      results[client.id] = { error = err, result = result, params = params }\r\n+      remaining = remaining - 1\r\n+      if remaining == 0 then\r\n+        local ctx = {\r\n+          bufnr = bufnr,\r\n+          method = ms.textDocument_codeAction,\r\n+        }\r\n+        on_code_action_results(results, ctx, options)\r\n+      end\r\n+    end, bufnr)\r\n   end\r\n-  params.context = context\r\n-  code_action_request(params, options)\r\n end\r\n \r\n --- Executes an LSP server command.\r\n ---\r\n ---@param command_params table A valid `ExecuteCommandParams` object\r\n ```\r\n",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-23T17:25:17Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1369017948",
            "id": 1369017948,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5RmY5c",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1693108094,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369017948/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-23T17:28:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1369017948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1370434144"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370434144"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm sorry to pile more onto this,  but I think there's one more issue: If the user is in visual mode or supplies a range,  I suspect it should use all diagnostics contained in that range, instead of those spanning the cursor position (?)",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-10-24T15:45:46Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1370434144",
            "id": 1370434144,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5Rrypg",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1695274896,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370434144/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-24T15:45:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370434144",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25747#discussion_r1379800956"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1379800956"
                }
            },
            "author_association": "MEMBER",
            "body": "Created https://github.com/neovim/neovim/pull/25873 to deal with the per-client params (excluding the per-client diagnostic lookup. That could then be done in this PR)",
            "commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "created_at": "2023-11-02T09:17:08Z",
            "diff_hunk": "@@ -365,7 +366,9 @@ end\n ---@return table Table with map of line number to list of diagnostics.\n ---              Structured: { [1] = {...}, [5] = {.... } }\n ---@private\n+---@deprecated\n function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/25747#discussion_r1379800956",
            "id": 1379800956,
            "in_reply_to_id": 1367958278,
            "line": 370,
            "node_id": "PRRC_kwDOAPphoM5SPhd8",
            "original_commit_id": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
            "original_line": 370,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 17,
            "pull_request_review_id": 1709774582,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1379800956/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-02T09:17:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1379800956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "The \"current line\" behavior is arguably a feature imo. Do we actually care about this?",
            "created_at": "2025-03-02T22:22:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/25747#issuecomment-2692938333",
            "id": 2692938333,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25747",
            "node_id": "IC_kwDOAPphoM6ggvpd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2692938333/reactions"
            },
            "updated_at": "2025-03-02T22:22:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2692938333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25747/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25747/commits",
    "created_at": "2023-10-22T14:54:45Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25747.diff",
    "draft": false,
    "head": {
        "label": "gpanders:code-action-cursor",
        "ref": "code-action-cursor",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2025-03-10T20:30:05Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 304204,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2025-01-11T19:57:11Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "2980dcd33c9028a2aaad56494e00786fdb439e2f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25747",
    "id": 1568101160,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25747",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5dd1Mo",
    "number": 25747,
    "patch_url": "https://github.com/neovim/neovim/pull/25747.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25747/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2980dcd33c9028a2aaad56494e00786fdb439e2f",
    "title": "fix(lsp): only consider code actions for diagnostics under cursor",
    "updated_at": "2025-03-04T15:03:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25747",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    }
}