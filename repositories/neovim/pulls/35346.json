{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35346/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35346/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35346"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35346"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35346/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35346"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/162f81cb48e00cd5f37e911abafc2a4d57a71fc1"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6262,
            "forks_count": 6262,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1971,
            "open_issues_count": 1971,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-19T00:45:15Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 338530,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92074,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-19T01:56:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92074,
            "watchers_count": 92074,
            "web_commit_signoff_required": false
        },
        "sha": "013af17ed906179ce1cddf29cfaab078a47f8ea0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This is a workaround to fix #35257 while https://github.com/vim/vim/pull/16662 is not resolved. It finally allows lsp completion to be combined with other sources.\r\n\r\nSomething like this can also be used to fix #32428, but that is somewhat more involved because we need to be smarter about tracking `isIncomplete` and filter/deduplicate items.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35346#discussion_r2280283169"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35346"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280283169"
                }
            },
            "author_association": "MEMBER",
            "body": "Is matches needed here? When both items and matches are present, each item will have a match field. However you don't used it. So only items is needed?",
            "commit_id": "162f81cb48e00cd5f37e911abafc2a4d57a71fc1",
            "created_at": "2025-08-16T07:04:05Z",
            "diff_hunk": "@@ -503,7 +503,7 @@ local function trigger(bufnr, clients, ctx)\n       return\n     end\n \n-    local matches = {}\n+    local matches --[[@type table]] = vim.fn.complete_info({ 'items', 'matches' })['items']",
            "html_url": "https://github.com/neovim/neovim/pull/35346#discussion_r2280283169",
            "id": 2280283169,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H6lwh",
            "original_commit_id": "6e3c0c93d024b29170cc97959ff4251d22faba37",
            "original_line": 506,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 3125716047,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35346",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280283169/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T07:04:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280283169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35346#discussion_r2280315763"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35346"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280315763"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yea, good point, I had played around with #32428 and thought it might be usefull. I'll remove it.",
            "commit_id": "162f81cb48e00cd5f37e911abafc2a4d57a71fc1",
            "created_at": "2025-08-16T08:23:44Z",
            "diff_hunk": "@@ -503,7 +503,7 @@ local function trigger(bufnr, clients, ctx)\n       return\n     end\n \n-    local matches = {}\n+    local matches --[[@type table]] = vim.fn.complete_info({ 'items', 'matches' })['items']",
            "html_url": "https://github.com/neovim/neovim/pull/35346#discussion_r2280315763",
            "id": 2280315763,
            "in_reply_to_id": 2280283169,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H6ttz",
            "original_commit_id": "6e3c0c93d024b29170cc97959ff4251d22faba37",
            "original_line": 506,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 3125746140,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35346",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280315763/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T08:23:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280315763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Works good for me 👍🏻 ",
            "created_at": "2025-08-16T11:55:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/35346#issuecomment-3193618304",
            "id": 3193618304,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35346",
            "node_id": "IC_kwDOAPphoM6-Wr-A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193618304/reactions"
            },
            "updated_at": "2025-08-16T11:55:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193618304",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I experimented with a small patch that allows complete_add to extend the current compl_T linked list.\r\n\r\n<details>\r\n\r\n```diff\r\ndiff --git a/src/nvim/insexpand.c b/src/nvim/insexpand.c\r\nindex 329b17e6f6..8b4dca6041 100644\r\n--- a/src/nvim/insexpand.c\r\n+++ b/src/nvim/insexpand.c\r\n@@ -3379,7 +3379,15 @@ void f_complete(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\r\n /// \"complete_add()\" function\r\n void f_complete_add(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\r\n {\r\n-  rettv->vval.v_number = ins_compl_add_tv(&argvars[0], 0, false);\r\n+  if (pum_visible()) {\r\n+    ins_compl_add_list(argvars[0].vval.v_list);\r\n+    if (compl_match_array) {\r\n+      XFREE_CLEAR(compl_match_array);\r\n+    }\r\n+    ins_compl_show_pum();\r\n+  } else {\r\n+    rettv->vval.v_number = ins_compl_add_tv(&argvars[0], 0, false);\r\n+  }\r\n }\r\n```\r\n\r\nIt works under this script.\r\n```viml\r\nlet g:async = v:false\r\n\r\nfunction! AppendCandidate() abort\r\n  if v:char == 'b'\r\n    if g:async\r\n      call timer_start(100, {-> complete_add([ {'word': 'bool'}, {'word': 'balon'}, {'word': 'foo'} ])})\r\n      return\r\n    endif\r\n    try\r\n      call complete_add([{'word': 'bar'}])\r\n    catch /E1516:/\r\n      let g:got_expected_error = 1\r\n      return\r\n    endtry\r\n  endif\r\nendfunction\r\nset cot=menu,menuone,noinsert\r\n\r\ninoremap <buffer> <F5> <cmd>call complete(1, [\"red\", \"blue\"])<cr>\r\nautocmd InsertCharPre * :call AppendCandidate()\r\n```\r\n</details>\r\n But when I followed the steps in #35257, I realized the problem isn’t what I thought. f_complete calls set_completion, which resets the current compl state. So it’s not possible to keep using complete_add to append to the list there. In this context, complete_add isn’t very useful.  \r\n \r\n \r\n 1. there can add a new paramter in `complete()` to keep the current completion items llist.. something like\r\n \r\n```diff\r\ndiff --git a/runtime/lua/vim/lsp/completion.lua b/runtime/lua/vim/lsp/completion.lua\r\nindex 79a0bb950b..50ecb74e1d 100644\r\n--- a/runtime/lua/vim/lsp/completion.lua\r\n+++ b/runtime/lua/vim/lsp/completion.lua\r\n@@ -503,6 +503,7 @@ local function trigger(bufnr, clients, ctx)\r\n       return\r\n     end\r\n\r\n+    local keep = vim.fn.complete_info({ 'mode' }).mode == 'keyword'\r\n     local matches = {}\r\n     local server_start_boundary --- @type integer?\r\n     for client_id, response in pairs(responses) do\r\n@@ -536,7 +537,7 @@ local function trigger(bufnr, clients, ctx)\r\n     end\r\n     local start_col = (server_start_boundary or word_boundary) + 1\r\n     Context.cursor = { cursor_row, start_col }\r\n-    vim.fn.complete(start_col, matches)\r\n+    vim.fn.complete(start_col, matches, keep)\r\n   end)\r\n\r\n   table.insert(Context.pending_requests, cancel_request)\r\ndiff --git a/src/nvim/eval.lua b/src/nvim/eval.lua\r\nindex d237758e7a..13d1c96f43 100644\r\n--- a/src/nvim/eval.lua\r\n+++ b/src/nvim/eval.lua\r\n@@ -1337,7 +1337,7 @@ M.funcs = {\r\n     signature = 'col({expr} [, {winid}])',\r\n   },\r\n   complete = {\r\n-    args = 2,\r\n+    args = 3,\r\n     base = 2,\r\n     desc = [=[\r\n       Set the matches for Insert mode completion.\r\ndiff --git a/src/nvim/insexpand.c b/src/nvim/insexpand.c\r\nindex 329b17e6f6..b1d1f0f6fa 100644\r\n--- a/src/nvim/insexpand.c\r\n+++ b/src/nvim/insexpand.c\r\n@@ -3285,7 +3285,7 @@ static void restore_orig_extmarks(void)\r\n ///\r\n /// @param startcol  where the matched text starts (1 is first column).\r\n /// @param list      the list of matches.\r\n-static void set_completion(colnr_T startcol, list_T *list)\r\n+static void set_completion(colnr_T startcol, list_T *list, int keep)\r\n {\r\n   int flags = CP_ORIGINAL_TEXT;\r\n   unsigned cur_cot_flags = get_cot_flags();\r\n@@ -3298,7 +3298,9 @@ static void set_completion(colnr_T startcol, list_T *list)\r\n     ins_compl_prep(' ');\r\n   }\r\n   ins_compl_clear();\r\n-  ins_compl_free();\r\n+  if (!keep) {\r\n+    ins_compl_free();\r\n+  }\r\n   compl_get_longest = compl_longest;\r\n\r\n   compl_direction = FORWARD;\r\n@@ -3317,7 +3319,7 @@ static void set_completion(colnr_T startcol, list_T *list)\r\n   }\r\n   if (ins_compl_add(compl_orig_text.data, (int)compl_orig_text.size,\r\n                     NULL, NULL, false, NULL, 0,\r\n-                    flags | CP_FAST, false, NULL, FUZZY_SCORE_NONE) != OK) {\r\n+                    flags | CP_FAST, keep, NULL, FUZZY_SCORE_NONE) != OK) {\r\n     return;\r\n   }\r\n...skipping...\r\n   complete = {\r\n-    args = 2,\r\n+    args = 3,\r\n     base = 2,\r\n     desc = [=[\r\n       Set the matches for Insert mode completion.\r\ndiff --git a/src/nvim/insexpand.c b/src/nvim/insexpand.c\r\nindex 329b17e6f6..b1d1f0f6fa 100644\r\n--- a/src/nvim/insexpand.c\r\n+++ b/src/nvim/insexpand.c\r\n@@ -3285,7 +3285,7 @@ static void restore_orig_extmarks(void)\r\n ///\r\n /// @param startcol  where the matched text starts (1 is first column).\r\n /// @param list      the list of matches.\r\n-static void set_completion(colnr_T startcol, list_T *list)\r\n+static void set_completion(colnr_T startcol, list_T *list, int keep)\r\n {\r\n   int flags = CP_ORIGINAL_TEXT;\r\n   unsigned cur_cot_flags = get_cot_flags();\r\n@@ -3298,7 +3298,9 @@ static void set_completion(colnr_T startcol, list_T *list)\r\n     ins_compl_prep(' ');\r\n   }\r\n   ins_compl_clear();\r\n-  ins_compl_free();\r\n+  if (!keep) {\r\n+    ins_compl_free();\r\n+  }\r\n   compl_get_longest = compl_longest;\r\n\r\n   compl_direction = FORWARD;\r\n@@ -3317,7 +3319,7 @@ static void set_completion(colnr_T startcol, list_T *list)\r\n   }\r\n   if (ins_compl_add(compl_orig_text.data, (int)compl_orig_text.size,\r\n                     NULL, NULL, false, NULL, 0,\r\n-                    flags | CP_FAST, false, NULL, FUZZY_SCORE_NONE) != OK) {\r\n+                    flags | CP_FAST, keep, NULL, FUZZY_SCORE_NONE) != OK) {\r\n     return;\r\n   }\r\n\r\n@@ -3371,7 +3373,7 @@ void f_complete(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\r\n   } else {\r\n     const colnr_T startcol = (colnr_T)tv_get_number_chk(&argvars[0], NULL);\r\n     if (startcol > 0) {\r\n-      set_completion(startcol - 1, argvars[1].vval.v_list);\r\n+      set_completion(startcol - 1, argvars[1].vval.v_list, (int)tv_get_number_chk(&argvars[2]\r\n, NULL));\r\n     }\r\n   }\r\n }\r\n\r\n```\r\n\r\nIt works.. I dont' test with `autocomplete` option.. because i only glanced at the code of it . I'll take a look at the details when I have time.\r\n\r\n<img width=\"1538\" height=\"988\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8f01b438-1c3a-4125-9868-469ddb904941\" />\r\n\r\n\r\ncurrent C implementation cannot merge completion items from multiple sources, especially when those sources are asynchronous. I’ve started working on asynchronous insert-mode completion locally( progress is only **1** percent at the moment 😂). Most of the logic is implemented in lua and using coroutine for async,  `vim._completion` interface to chain multiple sources and custom callbacks.  C side call back into Lua to handle the default insert-mode completion ..\r\n\r\n ",
            "created_at": "2025-08-16T13:18:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/35346#issuecomment-3193665378",
            "id": 3193665378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35346",
            "node_id": "IC_kwDOAPphoM6-W3di",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193665378/reactions"
            },
            "updated_at": "2025-08-16T13:18:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193665378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Really cool, thank you!\n\nSo would you propose to go forward with your patch to `complete`, or with this PR? Of course proper async ins-completion would be huge, but I think we should implement some workaround for this while that is being worked on, just so that builtin completion is fully functional.",
            "created_at": "2025-08-16T14:18:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/35346#issuecomment-3193700687",
            "id": 3193700687,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35346",
            "node_id": "IC_kwDOAPphoM6-XAFP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193700687/reactions"
            },
            "updated_at": "2025-08-16T14:19:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193700687",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "only issue is the memory allocation efficiency when items is large. However, I think it should be acceptable 🤔.  PR make sense :)",
            "created_at": "2025-08-17T06:19:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/35346#issuecomment-3194163591",
            "id": 3194163591,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35346",
            "node_id": "IC_kwDOAPphoM6-YxGH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3194163591/reactions"
            },
            "updated_at": "2025-08-17T06:19:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3194163591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35346/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35346/commits",
    "created_at": "2025-08-15T18:48:18Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35346.diff",
    "draft": false,
    "head": {
        "label": "tbung:lsp-completion-workaround",
        "ref": "lsp-completion-workaround",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tbung/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tbung/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tbung/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tbung/neovim/branches{/branch}",
            "clone_url": "https://github.com/tbung/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tbung/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tbung/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tbung/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tbung/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tbung/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tbung/neovim/contributors",
            "created_at": "2023-09-27T14:45:42Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tbung/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tbung/neovim/downloads",
            "events_url": "https://api.github.com/repos/tbung/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tbung/neovim/forks",
            "full_name": "tbung/neovim",
            "git_commits_url": "https://api.github.com/repos/tbung/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tbung/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tbung/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tbung/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/tbung/neovim/hooks",
            "html_url": "https://github.com/tbung/neovim",
            "id": 697348391,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tbung/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tbung/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tbung/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tbung/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tbung/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/tbung/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tbung/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tbung/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKZCxJw",
            "notifications_url": "https://api.github.com/repos/tbung/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tbung/neovim/pulls{/number}",
            "pushed_at": "2025-08-16T08:28:07Z",
            "releases_url": "https://api.github.com/repos/tbung/neovim/releases{/id}",
            "size": 327507,
            "ssh_url": "git@github.com:tbung/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/tbung/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tbung/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tbung/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tbung/neovim/subscription",
            "svn_url": "https://github.com/tbung/neovim",
            "tags_url": "https://api.github.com/repos/tbung/neovim/tags",
            "teams_url": "https://api.github.com/repos/tbung/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tbung/neovim/git/trees{/sha}",
            "updated_at": "2025-05-13T15:19:28Z",
            "url": "https://api.github.com/repos/tbung/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "162f81cb48e00cd5f37e911abafc2a4d57a71fc1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
            "events_url": "https://api.github.com/users/tbung/events{/privacy}",
            "followers_url": "https://api.github.com/users/tbung/followers",
            "following_url": "https://api.github.com/users/tbung/following{/other_user}",
            "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tbung",
            "id": 4084982,
            "login": "tbung",
            "node_id": "MDQ6VXNlcjQwODQ5ODI=",
            "organizations_url": "https://api.github.com/users/tbung/orgs",
            "received_events_url": "https://api.github.com/users/tbung/received_events",
            "repos_url": "https://api.github.com/users/tbung/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tbung",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35346",
    "id": 2749431825,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35346",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "8bd5eb590f9c179ff916194b2f57348690e6be73",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6j4QAR",
    "number": 35346,
    "patch_url": "https://github.com/neovim/neovim/pull/35346.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35346/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/162f81cb48e00cd5f37e911abafc2a4d57a71fc1",
    "title": "fix: vim.lsp.omnifunc should not throw away other items",
    "updated_at": "2025-08-17T06:19:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35346",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
        "events_url": "https://api.github.com/users/tbung/events{/privacy}",
        "followers_url": "https://api.github.com/users/tbung/followers",
        "following_url": "https://api.github.com/users/tbung/following{/other_user}",
        "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tbung",
        "id": 4084982,
        "login": "tbung",
        "node_id": "MDQ6VXNlcjQwODQ5ODI=",
        "organizations_url": "https://api.github.com/users/tbung/orgs",
        "received_events_url": "https://api.github.com/users/tbung/received_events",
        "repos_url": "https://api.github.com/users/tbung/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tbung",
        "user_view_type": "public"
    }
}