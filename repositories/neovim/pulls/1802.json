{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/1802/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1802/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/1802"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/1802"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1802/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1802"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ee34ba762546ca97e56efe68804e4c3a2896c00f"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6062,
            "forks_count": 6062,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1916,
            "open_issues_count": 1916,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-05-06T02:05:16Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 321796,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89216,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-05-06T02:05:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89216,
            "watchers_count": 89216,
            "web_commit_signoff_required": false
        },
        "sha": "9d4fcec7c6b65ef04fd4416b014e96f33b1f708a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Followup of my comments here: https://github.com/neovim/neovim/issues/1524#issuecomment-64085698 , https://github.com/neovim/neovim/issues/1524#issuecomment-64090515 , https://github.com/neovim/neovim/issues/1524#issuecomment-64097010\r\n\r\nCloses #2063\r\nCloses #5103\r\nref https://github.com/neovim/neovim/issues/2308 https://github.com/neovim/neovim/issues/1755 https://github.com/neovim/neovim/issues/1029\r\nref https://github.com/neovim/neovim/issues/7291\r\nref https://github.com/neovim/neovim/issues/7290\r\nref https://github.com/neovim/neovim/issues/7326\r\n\r\nThis PR implements \"bang\" variants of `:echomsg` ~~and `:echoerr`~~ (**edit:** not going to implement `:echoerr!`; the semantics of `:echoerr` differ greatly from `:echomsg`, and have implications for try/catch--it wouldn't make sense for :echoerr to be \"passive\"). Documented as follows:\r\n\r\n```\r\n+                                                     *:echom!* *:echomsg!* \r\n+           |:echomsg|  followed by [!] creates a\r\n+           \"transient\" message, which will never cause a screen\r\n+           scroll or a |press-enter| prompt, and is _always_\r\n+           added to the |:messages| history (even if |:silent| or\r\n+           |:map-<silent>| are used). This is useful for leaving\r\n+           passive diagnostic messages without disturbing\r\n+           usability.\r\n```\r\n\r\nBesides solving a general usability issue (avoiding the \"Press ENTER\" prompt for non-critical messages), this enables us to be much more consistent and less hesitant about informing the user of possibly-useful context-sensitive discoveries while bootstrapping official plugins, providers (python, clipboard), and general sanity checks (VIMRUNTIME).\r\n\r\nBefore writing tests, I would like feedback on the general approach. I usually advocate against extending vimscript, but after much thought I could not find a reasonable medium-term solution. Some ideas that I rejected:\r\n- extend `histadd()` to allow adding to the `:messages` history.\r\n  - This is icky becaus then we have to also implement `histdel()` _or_ introduce a glaring incongruity.\r\n- expose `:messages` list as a read-write `v:messages` List.\r\n  - Same problem as above: giving plugins the ability to delete from `:messages` is a bad idea.\r\n- create an API-only function for adding to history\r\n  - This is fine, but I suspect that users will really appreciate being able to easily avoid the \"Press ENTER\" prompt.\r\n- add a new flag to `'shortmess'`\r\n  - This is still an option that I think is worth exploring, in addition to providing `:echomsg!` and `:echoerr!`. But it does not solve the use cases mentioned above (providers, sanity checks).\r\n\r\n---\r\n\r\n**`:echomsg!` spec**\r\n- [x] writes to history even with `:silent[!]` and `<silent>`\r\n- [x] no duplicates in history\r\n- [x] long message(s) emmitted from a keymap-triggered script are truncated\r\n  - [x] if 'cmdheight' is N, message fills up to N lines, but no more.\r\n- [x] echom! emmitted from command line :call Foo() invocation are truncated?\r\n- [x] :echom! at user-entered command line should act the same as if from a script\r\n- [x] test regressions: :exe, :echom, :echoerr, :echo, :echohl, printf()\r\n- [ ] behavior with laststatus=0\r\n- [x] test with \":set noshowcmd\"\r\n- [x] test with `set shortmess-=T`\r\n- [x] `v:statusmsg` is set only by `:echom[!]`\r\n- [x] `v:errmsg` is set only by `:echoerr`\r\n- [ ] CTRL-G should overwrite like `:echo`\r\n- [ ] If `cmdheight=2` but there is a 1-line message displayed, `:echom!` should not clear the existing message unless it needs more than 1 line.\r\n\r\n**\"+N :messages\" spec**\r\n- [ ] test overflow (very large number of notifications)\r\n- [ ] displays count after event loop\r\n- [ ] count resets after next user action\r\n- [ ] showcmd blanks out notification area\r\n- [ ] appears after all messages posted (until next user command)\r\n- [ ] appears only if 2 or more non-duplicate messages since last batch\r\n- [ ] appears in correct location\r\n",
    "closed_at": "2025-05-03T19:18:52Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1802#discussion_r22900415"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1802"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/22900415"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "As far as I've seen this is the first instance of the `{;}` pattern, I though we were using just `{}`.\n",
            "commit_id": "ee34ba762546ca97e56efe68804e4c3a2896c00f",
            "created_at": "2015-01-13T22:20:42Z",
            "diff_hunk": "@@ -596,9 +596,7 @@ void free_all_mem(void)\n # endif\n \n   /* message history */\n-  for (;; )\n-    if (delete_first_msg() == FAIL)\n-      break;\n+  while(msg_delete_first()) {;}",
            "html_url": "https://github.com/neovim/neovim/pull/1802#discussion_r22900415",
            "id": 22900415,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTAwNDE1",
            "original_commit_id": "d29142c084be289838796183edd1edf1c948e2a1",
            "original_line": null,
            "original_position": 7,
            "original_start_line": null,
            "path": "src/nvim/memory.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1802",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22900415/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-10-19T10:35:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22900415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1802#discussion_r22903471"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1802"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/22903471"
                }
            },
            "author_association": "MEMBER",
            "body": "Will fix\n",
            "commit_id": "ee34ba762546ca97e56efe68804e4c3a2896c00f",
            "created_at": "2015-01-13T23:04:16Z",
            "diff_hunk": "@@ -596,9 +596,7 @@ void free_all_mem(void)\n # endif\n \n   /* message history */\n-  for (;; )\n-    if (delete_first_msg() == FAIL)\n-      break;\n+  while(msg_delete_first()) {;}",
            "html_url": "https://github.com/neovim/neovim/pull/1802#discussion_r22903471",
            "id": 22903471,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTAzNDcx",
            "original_commit_id": "d29142c084be289838796183edd1edf1c948e2a1",
            "original_line": null,
            "original_position": 7,
            "original_start_line": null,
            "path": "src/nvim/memory.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1802",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22903471/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-10-19T10:35:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22903471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1802#discussion_r24782234"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1802"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782234"
                }
            },
            "author_association": "MEMBER",
            "body": "Tests for new behavior of `:echomsg!` (`:echomsg` with `!` bang). This test group is executed twice for `shortmess-=T` and `shortmess+=T`.\n",
            "commit_id": "ee34ba762546ca97e56efe68804e4c3a2896c00f",
            "created_at": "2015-02-16T23:17:05Z",
            "diff_hunk": "@@ -0,0 +1,494 @@\n+local _h = require('test.functional.helpers')\n+local Screen = require('test.functional.ui.screen')\n+local clear, feed, execute = _h.clear, _h.feed, _h.execute\n+local insert = _h.insert\n+\n+describe('echomsg', function()\n+  local screen\n+\n+  -- Gets the Vim :messages history.\n+  local function get_messages()\n+    -- Gather the :messages lines.\n+    -- Cannot use vim_command_output('messages') because of\n+    --    https://github.com/neovim/neovim/pull/1959\n+    execute('redir => g:foo | silent messages | redir END')\n+    return _h.eval('g:foo')\n+  end\n+\n+  -- Asserts that:\n+  --    - :messages contains `msg` exactly once\n+  --    - no truncated (\"...\") text was written to :messages\n+  local function assert_msg(msg)\n+    assert(msg ~= nil and msg ~= \"\", \"'msg' should not be empty\")\n+    local messages = get_messages()\n+    --Should not have truncated \"...\" messages.\n+    local istart, iend = messages:find('...', 1, true)\n+    assert(istart == nil, ':messages contains a truncated message')\n+\n+    --Should have the exact `msg`.\n+    istart, iend = messages:find(msg, 1, true)\n+    assert(istart ~= nil and istart > 0, ':messages does not have: '..msg)\n+\n+    --Should not have duplicates.\n+    istart, iend = messages:find(msg, iend, true)\n+    assert(istart == nil, ':messages contains a duplicate: '..msg)\n+  end\n+\n+  -- Asserts that :messages is empty.\n+  local function assert_messages_empty()\n+    local messages = get_messages()\n+    assert(messages == '', ':messages should be empty, but it contains: '..messages)\n+  end\n+\n+  before_each(function()\n+    clear()\n+    screen = Screen.new()\n+    screen:attach()\n+    --Some tests will exercise other 'cmdheight' values.\n+    _h.nvim('set_option', 'cmdheight', 1)\n+    --Hide the \"+N :messages\" notification.\n+    _h.nvim('set_option', 'showcmd', false)\n+  end)\n+\n+  after_each(function()\n+    screen:detach()\n+  end)\n+\n+  describe(':echomsg', function()\n+    before_each(function()\n+      execute('set shortmess-=T')\n+    end)\n+\n+    it('one line does not cause scroll', function()\n+      execute('echom \"line1, normal message\"')\n+      screen:expect([[\n+      ^                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      line1, normal message                                |\n+      ]])\n+    end)\n+\n+    it('2x causes 1-line scroll', function()\n+      execute('echom \"line1 line1 line1 line1\" | echom \"line2 line2 line2 line2\"')\n+      screen:expect([[\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      line1 line1 line1 line1                              |\n+      line2 line2 line2 line2                              |\n+      Press ENTER or type command to continue^             |\n+      ]])\n+    end)\n+\n+    it('one very long line causes a scroll', function()\n+      local fullmsg = \"line1.a line1.b line1.c line1.d line1.e line1.f line1.g line1.h line1.i line1.j line1.k line1.l line1.m line1.o line1.p line1.q line1.r line1.s\"\n+      execute('echom \"'..fullmsg..'\"')\n+      screen:expect([[\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      line1.a line1.b line1.c line1.d line1.e line1.f line1|\n+      .g line1.h line1.i line1.j line1.k line1.l line1.m li|\n+      ne1.o line1.p line1.q line1.r line1.s                |\n+      Press ENTER or type command to continue^             |\n+      ]])\n+      assert_msg(fullmsg)\n+    end)\n+\n+    it(':silent, :silent!', function()\n+      local fullmsg = 'line1.a line1.b line1.c line1.d line1.e line1.f line1.g line1.h line1.i line1.j line1.k line1.l line1.m line1.o line1.p line1.q line1.r line1.s'\n+      _h.nvim('set_option', 'cmdheight', 2)\n+      execute('silent  echom \"'..fullmsg..'\"')\n+      execute('silent! echom \"'..fullmsg..'\"')\n+      _h.eval('1') --wait()\n+      screen:expect([[\n+      ^                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+                                                           |\n+                                                           |\n+      ]])\n+      assert_messages_empty()\n+    end)\n+  end)\n+\n+  describe(':echoerr (highlight)', function()\n+    before_each(function()\n+      execute('set shortmess-=T')\n+      --ignore highligting of ~-lines\n+      screen:set_default_attr_ids({\n+        [2] = {foreground = Screen.colors.White, background = Screen.colors.Red},\n+        [3] = {bold=true, foreground = Screen.colors.SeaGreen}\n+      })\n+      screen:set_default_attr_ignore(\n+        {{bold=true, foreground=Screen.colors.Blue}})\n+    end)\n+\n+    it('one line does not cause scroll', function()\n+      execute('echoerr \"line1, normal message\"')\n+      screen:expect([[\n+      ^                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      {2:line1, normal message}                                |\n+      ]])\n+    end)\n+\n+    it('2x causes 1-line scroll', function()\n+      execute('echoerr \"line1 line1 line1 line1\" | echoerr \"line2 line2 line2 line2\"')\n+      screen:expect([[\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      {2:line1 line1 line1 line1}                              |\n+      {2:line2 line2 line2 line2}                              |\n+      {3:Press ENTER or type command to continue}^             |\n+      ]])\n+    end)\n+\n+    it('one very long line causes a scroll', function()\n+      local fullmsg = 'line1.a line1.b line1.c line1.d line1.e line1.f line1.g line1.h line1.i line1.j line1.k line1.l line1.m line1.o line1.p line1.q line1.r line1.s'\n+      execute('echom \"'..fullmsg..'\"')\n+      screen:expect([[\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      line1.a line1.b line1.c line1.d line1.e line1.f line1|\n+      .g line1.h line1.i line1.j line1.k line1.l line1.m li|\n+      ne1.o line1.p line1.q line1.r line1.s                |\n+      {3:Press ENTER or type command to continue}^             |\n+      ]])\n+      assert_msg(fullmsg)\n+    end)\n+  end)\n+\n+\n+  local function echomsg_bang_tests(cmd_under_test)",
            "html_url": "https://github.com/neovim/neovim/pull/1802#discussion_r24782234",
            "id": 24782234,
            "line": 269,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzgyMjM0",
            "original_commit_id": "47616366b9f4b1ce43b5901f8576eb9b16d5dbfd",
            "original_line": null,
            "original_position": 226,
            "original_start_line": null,
            "path": "test/functional/ex_cmds/echomsg_spec.lua",
            "position": 269,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1802",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782234/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-10-19T10:35:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1802#discussion_r24782246"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1802"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782246"
                }
            },
            "author_association": "MEMBER",
            "body": "Regression tests for `:echoerr`.\n",
            "commit_id": "ee34ba762546ca97e56efe68804e4c3a2896c00f",
            "created_at": "2015-02-16T23:17:25Z",
            "diff_hunk": "@@ -0,0 +1,494 @@\n+local _h = require('test.functional.helpers')\n+local Screen = require('test.functional.ui.screen')\n+local clear, feed, execute = _h.clear, _h.feed, _h.execute\n+local insert = _h.insert\n+\n+describe('echomsg', function()\n+  local screen\n+\n+  -- Gets the Vim :messages history.\n+  local function get_messages()\n+    -- Gather the :messages lines.\n+    -- Cannot use vim_command_output('messages') because of\n+    --    https://github.com/neovim/neovim/pull/1959\n+    execute('redir => g:foo | silent messages | redir END')\n+    return _h.eval('g:foo')\n+  end\n+\n+  -- Asserts that:\n+  --    - :messages contains `msg` exactly once\n+  --    - no truncated (\"...\") text was written to :messages\n+  local function assert_msg(msg)\n+    assert(msg ~= nil and msg ~= \"\", \"'msg' should not be empty\")\n+    local messages = get_messages()\n+    --Should not have truncated \"...\" messages.\n+    local istart, iend = messages:find('...', 1, true)\n+    assert(istart == nil, ':messages contains a truncated message')\n+\n+    --Should have the exact `msg`.\n+    istart, iend = messages:find(msg, 1, true)\n+    assert(istart ~= nil and istart > 0, ':messages does not have: '..msg)\n+\n+    --Should not have duplicates.\n+    istart, iend = messages:find(msg, iend, true)\n+    assert(istart == nil, ':messages contains a duplicate: '..msg)\n+  end\n+\n+  -- Asserts that :messages is empty.\n+  local function assert_messages_empty()\n+    local messages = get_messages()\n+    assert(messages == '', ':messages should be empty, but it contains: '..messages)\n+  end\n+\n+  before_each(function()\n+    clear()\n+    screen = Screen.new()\n+    screen:attach()\n+    --Some tests will exercise other 'cmdheight' values.\n+    _h.nvim('set_option', 'cmdheight', 1)\n+    --Hide the \"+N :messages\" notification.\n+    _h.nvim('set_option', 'showcmd', false)\n+  end)\n+\n+  after_each(function()\n+    screen:detach()\n+  end)\n+\n+  describe(':echomsg', function()\n+    before_each(function()\n+      execute('set shortmess-=T')\n+    end)\n+\n+    it('one line does not cause scroll', function()\n+      execute('echom \"line1, normal message\"')\n+      screen:expect([[\n+      ^                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      line1, normal message                                |\n+      ]])\n+    end)\n+\n+    it('2x causes 1-line scroll', function()\n+      execute('echom \"line1 line1 line1 line1\" | echom \"line2 line2 line2 line2\"')\n+      screen:expect([[\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      line1 line1 line1 line1                              |\n+      line2 line2 line2 line2                              |\n+      Press ENTER or type command to continue^             |\n+      ]])\n+    end)\n+\n+    it('one very long line causes a scroll', function()\n+      local fullmsg = \"line1.a line1.b line1.c line1.d line1.e line1.f line1.g line1.h line1.i line1.j line1.k line1.l line1.m line1.o line1.p line1.q line1.r line1.s\"\n+      execute('echom \"'..fullmsg..'\"')\n+      screen:expect([[\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      line1.a line1.b line1.c line1.d line1.e line1.f line1|\n+      .g line1.h line1.i line1.j line1.k line1.l line1.m li|\n+      ne1.o line1.p line1.q line1.r line1.s                |\n+      Press ENTER or type command to continue^             |\n+      ]])\n+      assert_msg(fullmsg)\n+    end)\n+\n+    it(':silent, :silent!', function()\n+      local fullmsg = 'line1.a line1.b line1.c line1.d line1.e line1.f line1.g line1.h line1.i line1.j line1.k line1.l line1.m line1.o line1.p line1.q line1.r line1.s'\n+      _h.nvim('set_option', 'cmdheight', 2)\n+      execute('silent  echom \"'..fullmsg..'\"')\n+      execute('silent! echom \"'..fullmsg..'\"')\n+      _h.eval('1') --wait()\n+      screen:expect([[\n+      ^                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+      ~                                                    |\n+                                                           |\n+                                                           |\n+      ]])\n+      assert_messages_empty()\n+    end)\n+  end)\n+\n+  describe(':echoerr (highlight)', function()",
            "html_url": "https://github.com/neovim/neovim/pull/1802#discussion_r24782246",
            "id": 24782246,
            "line": 186,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzgyMjQ2",
            "original_commit_id": "47616366b9f4b1ce43b5901f8576eb9b16d5dbfd",
            "original_line": null,
            "original_position": 150,
            "original_start_line": null,
            "path": "test/functional/ex_cmds/echomsg_spec.lua",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1802",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782246/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-10-19T10:35:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1802#discussion_r24782257"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1802"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782257"
                }
            },
            "author_association": "MEMBER",
            "body": "Regression tests for `:echomsg`.\n",
            "commit_id": "ee34ba762546ca97e56efe68804e4c3a2896c00f",
            "created_at": "2015-02-16T23:17:40Z",
            "diff_hunk": "@@ -0,0 +1,494 @@\n+local _h = require('test.functional.helpers')\n+local Screen = require('test.functional.ui.screen')\n+local clear, feed, execute = _h.clear, _h.feed, _h.execute\n+local insert = _h.insert\n+\n+describe('echomsg', function()\n+  local screen\n+\n+  -- Gets the Vim :messages history.\n+  local function get_messages()\n+    -- Gather the :messages lines.\n+    -- Cannot use vim_command_output('messages') because of\n+    --    https://github.com/neovim/neovim/pull/1959\n+    execute('redir => g:foo | silent messages | redir END')\n+    return _h.eval('g:foo')\n+  end\n+\n+  -- Asserts that:\n+  --    - :messages contains `msg` exactly once\n+  --    - no truncated (\"...\") text was written to :messages\n+  local function assert_msg(msg)\n+    assert(msg ~= nil and msg ~= \"\", \"'msg' should not be empty\")\n+    local messages = get_messages()\n+    --Should not have truncated \"...\" messages.\n+    local istart, iend = messages:find('...', 1, true)\n+    assert(istart == nil, ':messages contains a truncated message')\n+\n+    --Should have the exact `msg`.\n+    istart, iend = messages:find(msg, 1, true)\n+    assert(istart ~= nil and istart > 0, ':messages does not have: '..msg)\n+\n+    --Should not have duplicates.\n+    istart, iend = messages:find(msg, iend, true)\n+    assert(istart == nil, ':messages contains a duplicate: '..msg)\n+  end\n+\n+  -- Asserts that :messages is empty.\n+  local function assert_messages_empty()\n+    local messages = get_messages()\n+    assert(messages == '', ':messages should be empty, but it contains: '..messages)\n+  end\n+\n+  before_each(function()\n+    clear()\n+    screen = Screen.new()\n+    screen:attach()\n+    --Some tests will exercise other 'cmdheight' values.\n+    _h.nvim('set_option', 'cmdheight', 1)\n+    --Hide the \"+N :messages\" notification.\n+    _h.nvim('set_option', 'showcmd', false)\n+  end)\n+\n+  after_each(function()\n+    screen:detach()\n+  end)\n+\n+  describe(':echomsg', function()",
            "html_url": "https://github.com/neovim/neovim/pull/1802#discussion_r24782257",
            "id": 24782257,
            "line": 82,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzgyMjU3",
            "original_commit_id": "47616366b9f4b1ce43b5901f8576eb9b16d5dbfd",
            "original_line": null,
            "original_position": 57,
            "original_start_line": null,
            "path": "test/functional/ex_cmds/echomsg_spec.lua",
            "position": 82,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1802",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782257/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-10-19T10:35:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782257",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1802#discussion_r24782395"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1802"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782395"
                }
            },
            "author_association": "MEMBER",
            "body": "During test development, if a `screen:expect()` call has too few lines, `expected_row` is nil. So this shows a better error message in that case.\n\nPerhaps we should also do a sanity check for too _many_ expected rows.\n",
            "commit_id": "ee34ba762546ca97e56efe68804e4c3a2896c00f",
            "created_at": "2015-02-16T23:20:44Z",
            "diff_hunk": "@@ -202,9 +202,11 @@ function Screen:expect(expected, attr_ids, attr_ignore)\n     for i = 1, self._height do\n       local expected_row = expected_rows[i]\n       local actual_row = self:_row_repr(self._rows[i], ids, ignore)\n-      if expected_row ~= actual_row then\n-        return 'Row '..tostring(i)..' didnt match.\\nExpected: \"'..\n-               expected_row..'\"\\nActual:   \"'..actual_row..'\"'\n+      if not expected_row then\n+        return 'Screen has more rows than expected.'",
            "html_url": "https://github.com/neovim/neovim/pull/1802#discussion_r24782395",
            "id": 24782395,
            "line": 224,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzgyMzk1",
            "original_commit_id": "47616366b9f4b1ce43b5901f8576eb9b16d5dbfd",
            "original_line": null,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/functional/ui/screen.lua",
            "position": 8,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1802",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782395/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-10-19T10:35:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1802#discussion_r24782412"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1802"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782412"
                }
            },
            "author_association": "MEMBER",
            "body": "Small layout improvement (IMO) for test failure message.\n",
            "commit_id": "ee34ba762546ca97e56efe68804e4c3a2896c00f",
            "created_at": "2015-02-16T23:21:20Z",
            "diff_hunk": "@@ -202,9 +202,11 @@ function Screen:expect(expected, attr_ids, attr_ignore)\n     for i = 1, self._height do\n       local expected_row = expected_rows[i]\n       local actual_row = self:_row_repr(self._rows[i], ids, ignore)\n-      if expected_row ~= actual_row then\n-        return 'Row '..tostring(i)..' didnt match.\\nExpected: \"'..\n-               expected_row..'\"\\nActual:   \"'..actual_row..'\"'\n+      if not expected_row then\n+        return 'Screen has more rows than expected.'\n+      elseif expected_row ~= actual_row then\n+        return 'row '..tostring(i)..':\\n  expected: \"'..\n+               expected_row..'\"\\n  actual:   \"'..actual_row..'\"'",
            "html_url": "https://github.com/neovim/neovim/pull/1802#discussion_r24782412",
            "id": 24782412,
            "line": 227,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzgyNDEy",
            "original_commit_id": "47616366b9f4b1ce43b5901f8576eb9b16d5dbfd",
            "original_line": null,
            "original_position": 11,
            "original_start_line": null,
            "path": "test/functional/ui/screen.lua",
            "position": 11,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1802",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782412/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2016-10-19T10:35:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/24782412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> Before writing tests, I would like feedback on the general approach. I usually advocate against extending vimscript, but after much thought I could not find a reasonable medium-term solution. Some ideas that I rejected:\n\nWhy not simply use the screen verification facility for testing this? [Here's](https://github.com/neovim/neovim/blob/master/test/functional/ui/screen_basic_spec.lua#L203-L221) an example\n",
            "created_at": "2015-01-12T11:03:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-69555041",
            "id": 69555041,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTU1MDQx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69555041/reactions"
            },
            "updated_at": "2015-01-12T11:03:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69555041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk I see that you're including some changes to message.h in this PR, perhaps you could pull https://github.com/Pyrohh/neovim/commit/374d8200bfc2690232917228590862371f5dff13 in as well? I can just submit a PR if it's too far reaching.\n",
            "created_at": "2015-01-29T22:28:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-72117327",
            "id": 72117327,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTE3MzI3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72117327/reactions"
            },
            "updated_at": "2015-01-29T22:28:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72117327",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tarruda After rebasing, I have an unexpected [test](https://github.com/neovim/neovim/pull/1802/files#diff-e0a79ed788f67783cce273283c007e8eR521) failure in this PR:\n\n```\nrow 1:\n  expected: \"^                                                    \"\n  actual:   \"                                                     \"\n```\n\nIf I change the expected `^` in row 1 to a `<space>`, then the result is reversed:\n\n```\nrow 1:\n  expected: \"                                                     \"\n  actual:   \"^                                                    \"\n```\n\nThe test is testing the new `:echomsg!` behavior, so it must be something with how my changes interact with the TUI changes.\n",
            "created_at": "2015-02-18T05:29:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-74814900",
            "id": 74814900,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODE0OTAw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/74814900/reactions"
            },
            "updated_at": "2015-02-18T05:37:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/74814900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk I tested this branch, and it seems you are experiencing a race condition. This patch should fix it:\n\n``` diff\ndiff --git a/test/functional/ex_cmds/echomsg_spec.lua b/test/functional/ex_cmds/echomsg_spec.lua\nindex 0cea285..cf05cba 100644\n--- a/test/functional/ex_cmds/echomsg_spec.lua\n+++ b/test/functional/ex_cmds/echomsg_spec.lua\n@@ -523,6 +523,7 @@ describe('echomsg', function()\n       _h.nvim('set_option', 'cmdheight', 2)\n       execute('nnoremap <silent> foo :silent '..cmd_under_test..' \"'..fullmsg..'\"<cr>')\n       _h.feed('foo')\n+      _h.wait()\n       screen:expect([[\n       ^                                                    |\n       ~\n```\n\n`wait()` It is simply a way of saying: \"Wait until all keys I've sent are fully processed\". This is required because the `_h.nvim('set_option', 'cmdheight', 2)` may set the screen to the state you expect it to be later, and the first redraw notification will succeed, only to be followed by another that fails(sent while `foo` is being processed)\n",
            "created_at": "2015-02-18T20:20:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-74940079",
            "id": 74940079,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTQwMDc5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/74940079/reactions"
            },
            "updated_at": "2015-02-18T20:20:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/74940079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tarruda Thanks for looking into that. I was being paranoid so I didn't want to just add a `wait()` to make it go away, but now that you explain it I suppose there is no reason to expect any particular sequence of redraws until all keys are processed.\n",
            "created_at": "2015-02-18T20:55:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-74945984",
            "id": 74945984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTQ1OTg0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/74945984/reactions"
            },
            "updated_at": "2015-02-18T20:55:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/74945984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Been some time since there's been an update here, just curious if this is still being worked on? I'm getting `No neovim module found for Python 2.7.6. Try installing it with 'pip install neovim' or see ':help nvim-python'.` everytime I open vim probably because vim-plug is running `has('python')` but since it works fince without python and I'm not using any other plugin that requires python it would be nice if I didn't have to hit _ENTER_ everytime I open nvim.\n",
            "created_at": "2015-04-02T07:28:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-88791605",
            "id": 88791605,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4NzkxNjA1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/88791605/reactions"
            },
            "updated_at": "2015-04-02T07:28:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/88791605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19663?v=4",
                "events_url": "https://api.github.com/users/marlun/events{/privacy}",
                "followers_url": "https://api.github.com/users/marlun/followers",
                "following_url": "https://api.github.com/users/marlun/following{/other_user}",
                "gists_url": "https://api.github.com/users/marlun/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/marlun",
                "id": 19663,
                "login": "marlun",
                "node_id": "MDQ6VXNlcjE5NjYz",
                "organizations_url": "https://api.github.com/users/marlun/orgs",
                "received_events_url": "https://api.github.com/users/marlun/received_events",
                "repos_url": "https://api.github.com/users/marlun/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/marlun/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/marlun/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/marlun",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, I need to get this out the door.\n",
            "created_at": "2015-04-02T14:07:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-88918873",
            "id": 88918873,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4OTE4ODcz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/88918873/reactions"
            },
            "updated_at": "2015-04-02T14:07:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/88918873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Any progress in this? #2769 would benefit a lot from this, for example.\n",
            "created_at": "2015-05-30T18:01:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-107072335",
            "id": 107072335,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzA3MjMzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/107072335/reactions"
            },
            "updated_at": "2015-05-30T18:01:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/107072335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@fmoralesc I'm thinking the OS X builds are higher priority, but then this was my next priority. The CI failures are out of control...\n",
            "created_at": "2015-05-30T21:13:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-107086525",
            "id": 107086525,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzA4NjUyNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/107086525/reactions"
            },
            "updated_at": "2015-05-30T21:14:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/107086525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Indeed! Carry on... I was just reminded of this when reviewing #2769, the messages there should probably use something like `silent echomsg!`.\n",
            "created_at": "2015-05-30T21:18:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-107087210",
            "id": 107087210,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzA4NzIxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/107087210/reactions"
            },
            "updated_at": "2015-05-30T21:18:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/107087210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Closing in favor of https://github.com/neovim/neovim/pull/27855",
            "created_at": "2025-05-03T19:18:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/1802#issuecomment-2848768675",
            "id": 2848768675,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
            "node_id": "IC_kwDOAPphoM6pzMKj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2848768675/reactions"
            },
            "updated_at": "2025-05-03T19:18:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2848768675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/1802/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/1802/commits",
    "created_at": "2015-01-12T09:40:50Z",
    "diff_url": "https://github.com/neovim/neovim/pull/1802.diff",
    "draft": false,
    "head": {
        "label": "justinmk:echom_bang",
        "ref": "echom_bang",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/justinmk/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/justinmk/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/justinmk/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/justinmk/neovim/branches{/branch}",
            "clone_url": "https://github.com/justinmk/neovim.git",
            "collaborators_url": "https://api.github.com/repos/justinmk/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/justinmk/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/justinmk/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/justinmk/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/justinmk/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/justinmk/neovim/contributors",
            "created_at": "2014-02-28T23:17:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/justinmk/neovim/deployments",
            "description": "somewhere in todo.txt",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/justinmk/neovim/downloads",
            "events_url": "https://api.github.com/repos/justinmk/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/justinmk/neovim/forks",
            "full_name": "justinmk/neovim",
            "git_commits_url": "https://api.github.com/repos/justinmk/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/justinmk/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/justinmk/neovim/git/tags{/sha}",
            "git_url": "git://github.com/justinmk/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "http://neovim.io",
            "hooks_url": "https://api.github.com/repos/justinmk/neovim/hooks",
            "html_url": "https://github.com/justinmk/neovim",
            "id": 17302877,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/justinmk/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/justinmk/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/justinmk/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/justinmk/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/justinmk/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/justinmk/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/justinmk/neovim/merges",
            "milestones_url": "https://api.github.com/repos/justinmk/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzMwMjg3Nw==",
            "notifications_url": "https://api.github.com/repos/justinmk/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/justinmk/neovim/pulls{/number}",
            "pushed_at": "2025-05-06T01:57:46Z",
            "releases_url": "https://api.github.com/repos/justinmk/neovim/releases{/id}",
            "size": 313546,
            "ssh_url": "git@github.com:justinmk/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/justinmk/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/justinmk/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/justinmk/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/justinmk/neovim/subscription",
            "svn_url": "https://github.com/justinmk/neovim",
            "tags_url": "https://api.github.com/repos/justinmk/neovim/tags",
            "teams_url": "https://api.github.com/repos/justinmk/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/justinmk/neovim/git/trees{/sha}",
            "updated_at": "2025-01-13T16:10:06Z",
            "url": "https://api.github.com/repos/justinmk/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "ee34ba762546ca97e56efe68804e4c3a2896c00f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/1802",
    "id": 27182589,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1802",
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "user experience",
            "id": 151718455,
            "name": "ux",
            "node_id": "MDU6TGFiZWwxNTE3MTg0NTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ux"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 717,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 633,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-05-05T12:58:38Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjcxODI1ODk=",
    "number": 1802,
    "patch_url": "https://github.com/neovim/neovim/pull/1802.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/1802/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ee34ba762546ca97e56efe68804e4c3a2896c00f",
    "title": "implement :echomsg!",
    "updated_at": "2025-05-03T19:18:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/1802",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}