{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35176/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35176/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35176"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35176"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35176/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b8b9f2c03e958ea6dfadb3a7695da9a628c2792e"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6249,
            "forks_count": 6249,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1985,
            "open_issues_count": 1985,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-11T22:39:04Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 336901,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 91885,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-12T02:40:46Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 91885,
            "watchers_count": 91885,
            "web_commit_signoff_required": false
        },
        "sha": "a9a4c271b13fffba2a21567c86b0f40ae4c180a1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\n\r\nDemo\r\n\r\n[Screencast from 2025-08-05 13-42-29.webm](https://github.com/user-attachments/assets/0699aad0-fd7e-4159-953e-6e52d014a610)\r\n",
    "closed_at": "2025-08-06T12:31:03Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35176#discussion_r2255440205"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2255440205"
                }
            },
            "author_association": "MEMBER",
            "body": "Is it not possible that user code writing to `io.stdout` could interfere with Nvim's UI? ",
            "commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "created_at": "2025-08-05T22:05:56Z",
            "diff_hunk": "@@ -667,10 +667,29 @@ LspProgress                                                       *LspProgress*\n     properties, where `params` is the request params sent by the server (see\n     `lsp.ProgressParams`).\n \n-    Example: >vim\n+    Examples:\n+\n+    Redraw the statusline whenever an LSP progress message arrives: >vim\n         autocmd LspProgress * redrawstatus\n <\n \n+    Tell the parent terminal to indicate progress using a native progress\n+    indicator (requires a supporting terminal): >lua\n+\n+        vim.api.nvim_create_autocmd('LspProgress', {\n+          callback = function(ev)\n+            local value = ev.data.params.value\n+            if value.kind == 'begin' then\n+              io.stdout:write('\\027]9;4;1;0\\027\\\\')",
            "html_url": "https://github.com/neovim/neovim/pull/35176#discussion_r2255440205",
            "id": 2255440205,
            "line": 683,
            "node_id": "PRRC_kwDOAPphoM6Gb0lN",
            "original_commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "original_line": 683,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 18,
            "pull_request_review_id": 3089853281,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2255440205/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-05T22:05:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2255440205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35176#discussion_r2255690403"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2255690403"
                }
            },
            "author_association": "MEMBER",
            "body": "We already do this in quite a few places https://github.com/search?q=repo%3Aneovim%2Fneovim%20io.stdout%3Awrite&type=code",
            "commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "created_at": "2025-08-06T02:00:09Z",
            "diff_hunk": "@@ -667,10 +667,29 @@ LspProgress                                                       *LspProgress*\n     properties, where `params` is the request params sent by the server (see\n     `lsp.ProgressParams`).\n \n-    Example: >vim\n+    Examples:\n+\n+    Redraw the statusline whenever an LSP progress message arrives: >vim\n         autocmd LspProgress * redrawstatus\n <\n \n+    Tell the parent terminal to indicate progress using a native progress\n+    indicator (requires a supporting terminal): >lua\n+\n+        vim.api.nvim_create_autocmd('LspProgress', {\n+          callback = function(ev)\n+            local value = ev.data.params.value\n+            if value.kind == 'begin' then\n+              io.stdout:write('\\027]9;4;1;0\\027\\\\')",
            "html_url": "https://github.com/neovim/neovim/pull/35176#discussion_r2255690403",
            "id": 2255690403,
            "in_reply_to_id": 2255440205,
            "line": 683,
            "node_id": "PRRC_kwDOAPphoM6Gcxqj",
            "original_commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "original_line": 683,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 18,
            "pull_request_review_id": 3090205974,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2255690403/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-06T02:00:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2255690403",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35176#discussion_r2258810139"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2258810139"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure but the question still stands. Arbitrarily writing to the same channel that the UI itself uses, seems questionable.",
            "commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "created_at": "2025-08-07T03:16:33Z",
            "diff_hunk": "@@ -667,10 +667,29 @@ LspProgress                                                       *LspProgress*\n     properties, where `params` is the request params sent by the server (see\n     `lsp.ProgressParams`).\n \n-    Example: >vim\n+    Examples:\n+\n+    Redraw the statusline whenever an LSP progress message arrives: >vim\n         autocmd LspProgress * redrawstatus\n <\n \n+    Tell the parent terminal to indicate progress using a native progress\n+    indicator (requires a supporting terminal): >lua\n+\n+        vim.api.nvim_create_autocmd('LspProgress', {\n+          callback = function(ev)\n+            local value = ev.data.params.value\n+            if value.kind == 'begin' then\n+              io.stdout:write('\\027]9;4;1;0\\027\\\\')",
            "html_url": "https://github.com/neovim/neovim/pull/35176#discussion_r2258810139",
            "id": 2258810139,
            "in_reply_to_id": 2255440205,
            "line": 683,
            "node_id": "PRRC_kwDOAPphoM6GorUb",
            "original_commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "original_line": 683,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 18,
            "pull_request_review_id": 3094977415,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2258810139/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-07T03:16:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2258810139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35176#discussion_r2259709988"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2259709988"
                }
            },
            "author_association": "NONE",
            "body": "It might be helpful to mention an example or two of supporting terminals (maybe Alacritty, iTerm2, WezTerm?), or a reference to the OSC mechanism used here so that people can look it up for themselves.\r\n\r\nI just tried this out in [kitty](https://github.com/kovidgoyal/kitty), only to find that it [added OSC 9 support](https://github.com/kovidgoyal/kitty/issues/1474) in 2019, but later [partially removed it](https://github.com/kovidgoyal/kitty/issues/8011#issuecomment-2452009076) in favor of [its own OSC 99 mechanism](https://github.com/kovidgoyal/kitty/blob/master/docs/desktop-notifications.rst).",
            "commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "created_at": "2025-08-07T09:33:40Z",
            "diff_hunk": "@@ -667,10 +667,29 @@ LspProgress                                                       *LspProgress*\n     properties, where `params` is the request params sent by the server (see\n     `lsp.ProgressParams`).\n \n-    Example: >vim\n+    Examples:\n+\n+    Redraw the statusline whenever an LSP progress message arrives: >vim\n         autocmd LspProgress * redrawstatus\n <\n \n+    Tell the parent terminal to indicate progress using a native progress\n+    indicator (requires a supporting terminal): >lua",
            "html_url": "https://github.com/neovim/neovim/pull/35176#discussion_r2259709988",
            "id": 2259709988,
            "line": 677,
            "node_id": "PRRC_kwDOAPphoM6GsHAk",
            "original_commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "original_line": 677,
            "original_position": 12,
            "original_start_line": 676,
            "path": "runtime/doc/lsp.txt",
            "position": 12,
            "pull_request_review_id": 3096252553,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2259709988/reactions"
            },
            "side": "RIGHT",
            "start_line": 676,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-07T09:33:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2259709988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7074?v=4",
                "events_url": "https://api.github.com/users/wincent/events{/privacy}",
                "followers_url": "https://api.github.com/users/wincent/followers",
                "following_url": "https://api.github.com/users/wincent/following{/other_user}",
                "gists_url": "https://api.github.com/users/wincent/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wincent",
                "id": 7074,
                "login": "wincent",
                "node_id": "MDQ6VXNlcjcwNzQ=",
                "organizations_url": "https://api.github.com/users/wincent/orgs",
                "received_events_url": "https://api.github.com/users/wincent/received_events",
                "repos_url": "https://api.github.com/users/wincent/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wincent/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wincent/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wincent",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35176#discussion_r2260388337"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2260388337"
                }
            },
            "author_association": "MEMBER",
            "body": "> Arbitrarily writing to the same channel that the UI itself uses, seems questionable.\r\n\r\nIn the TUI `io.stdout` is the TTY. We're writing control sequences to the terminal, so we have to write to the same channel as the UI.",
            "commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "created_at": "2025-08-07T13:45:02Z",
            "diff_hunk": "@@ -667,10 +667,29 @@ LspProgress                                                       *LspProgress*\n     properties, where `params` is the request params sent by the server (see\n     `lsp.ProgressParams`).\n \n-    Example: >vim\n+    Examples:\n+\n+    Redraw the statusline whenever an LSP progress message arrives: >vim\n         autocmd LspProgress * redrawstatus\n <\n \n+    Tell the parent terminal to indicate progress using a native progress\n+    indicator (requires a supporting terminal): >lua\n+\n+        vim.api.nvim_create_autocmd('LspProgress', {\n+          callback = function(ev)\n+            local value = ev.data.params.value\n+            if value.kind == 'begin' then\n+              io.stdout:write('\\027]9;4;1;0\\027\\\\')",
            "html_url": "https://github.com/neovim/neovim/pull/35176#discussion_r2260388337",
            "id": 2260388337,
            "in_reply_to_id": 2255440205,
            "line": 683,
            "node_id": "PRRC_kwDOAPphoM6Gusnx",
            "original_commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "original_line": 683,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 18,
            "pull_request_review_id": 3097236900,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2260388337/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-07T13:45:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2260388337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35176#discussion_r2260405179"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2260405179"
                }
            },
            "author_association": "MEMBER",
            "body": ">It might be helpful to mention an example or two of supporting terminals (maybe Alacritty, iTerm2, WezTerm?), or a reference to the OSC mechanism used here so that people can look it up for themselves.\r\n\r\nI'm reluctant to add a list of terminals since that list can and will change, but I'll see if I can find a reference we can link to.\r\n\r\nThis looks like the best option https://github.com/MicrosoftDocs/terminal/blob/main/TerminalDocs/tutorials/progress-bar-sequences.md\r\n\r\nTerminals that support this today (that I know of) are Windows Terminal, [GNOME Terminal](https://gitlab.gnome.org/GNOME/vte/-/issues/2845), Ghostty, and Contour. There is a [tracking issue](https://github.com/wezterm/wezterm/issues/6581) for WezTerm.\r\n\r\n>I just tried this out in [kitty](https://github.com/kovidgoyal/kitty), only to find that it https://github.com/kovidgoyal/kitty/issues/1474 in 2019, but later https://github.com/kovidgoyal/kitty/issues/8011#issuecomment-2452009076 in favor of [its own OSC 99 mechanism](https://github.com/kovidgoyal/kitty/blob/master/docs/desktop-notifications.rst).\r\n\r\nOSC 99 is Kitty's mechanism for desktop notifications. The situation is a bit unfortunate because OSC 9 is used for both notifications _and_ this new progress reporting mechanism. The collision is unfortunate, but it's been adopted by systemd and a few other terminals already. The linked issues look related to OSC 9 for desktop notifications. It looks like Kitty just ignores any OSC 9;4 messages so that it doesn't result in notification spam (I don't know if Kitty supports or intends to support the progress indicator protocol).",
            "commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "created_at": "2025-08-07T13:51:17Z",
            "diff_hunk": "@@ -667,10 +667,29 @@ LspProgress                                                       *LspProgress*\n     properties, where `params` is the request params sent by the server (see\n     `lsp.ProgressParams`).\n \n-    Example: >vim\n+    Examples:\n+\n+    Redraw the statusline whenever an LSP progress message arrives: >vim\n         autocmd LspProgress * redrawstatus\n <\n \n+    Tell the parent terminal to indicate progress using a native progress\n+    indicator (requires a supporting terminal): >lua",
            "html_url": "https://github.com/neovim/neovim/pull/35176#discussion_r2260405179",
            "id": 2260405179,
            "in_reply_to_id": 2259709988,
            "line": 677,
            "node_id": "PRRC_kwDOAPphoM6Guwu7",
            "original_commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "original_line": 677,
            "original_position": 12,
            "original_start_line": 676,
            "path": "runtime/doc/lsp.txt",
            "position": 12,
            "pull_request_review_id": 3097261734,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2260405179/reactions"
            },
            "side": "RIGHT",
            "start_line": 676,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-07T13:58:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2260405179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35176#discussion_r2261766270"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261766270"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes. The question is could they overlap/intefere with stuff the TUI itself is doing? Should plugin/user code that emits term sequences be plumbed through the TUI (tui.c) somehow? (E.g. `nvim_ui_write`)\r\n\r\nThe main reason that `:!` writes to a pipe instead of stdout is to avoid \"fighting\" the TUI. I'm wondering if the same principle applies here.",
            "commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "created_at": "2025-08-08T01:49:39Z",
            "diff_hunk": "@@ -667,10 +667,29 @@ LspProgress                                                       *LspProgress*\n     properties, where `params` is the request params sent by the server (see\n     `lsp.ProgressParams`).\n \n-    Example: >vim\n+    Examples:\n+\n+    Redraw the statusline whenever an LSP progress message arrives: >vim\n         autocmd LspProgress * redrawstatus\n <\n \n+    Tell the parent terminal to indicate progress using a native progress\n+    indicator (requires a supporting terminal): >lua\n+\n+        vim.api.nvim_create_autocmd('LspProgress', {\n+          callback = function(ev)\n+            local value = ev.data.params.value\n+            if value.kind == 'begin' then\n+              io.stdout:write('\\027]9;4;1;0\\027\\\\')",
            "html_url": "https://github.com/neovim/neovim/pull/35176#discussion_r2261766270",
            "id": 2261766270,
            "in_reply_to_id": 2255440205,
            "line": 683,
            "node_id": "PRRC_kwDOAPphoM6Gz9B-",
            "original_commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "original_line": 683,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 18,
            "pull_request_review_id": 3099245205,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261766270/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-08T01:52:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261766270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35176#discussion_r2262895642"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2262895642"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah I see your point.\r\n\r\n> Should plugin/user code that emits term sequences be plumbed through the TUI (tui.c) somehow? (E.g. nvim_ui_write)\r\n\r\nI think this makes sense.",
            "commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "created_at": "2025-08-08T12:53:23Z",
            "diff_hunk": "@@ -667,10 +667,29 @@ LspProgress                                                       *LspProgress*\n     properties, where `params` is the request params sent by the server (see\n     `lsp.ProgressParams`).\n \n-    Example: >vim\n+    Examples:\n+\n+    Redraw the statusline whenever an LSP progress message arrives: >vim\n         autocmd LspProgress * redrawstatus\n <\n \n+    Tell the parent terminal to indicate progress using a native progress\n+    indicator (requires a supporting terminal): >lua\n+\n+        vim.api.nvim_create_autocmd('LspProgress', {\n+          callback = function(ev)\n+            local value = ev.data.params.value\n+            if value.kind == 'begin' then\n+              io.stdout:write('\\027]9;4;1;0\\027\\\\')",
            "html_url": "https://github.com/neovim/neovim/pull/35176#discussion_r2262895642",
            "id": 2262895642,
            "in_reply_to_id": 2255440205,
            "line": 683,
            "node_id": "PRRC_kwDOAPphoM6G4Qwa",
            "original_commit_id": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
            "original_line": 683,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 18,
            "pull_request_review_id": 3100716676,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2262895642/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-08T12:53:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2262895642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35176/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35176/commits",
    "created_at": "2025-08-05T18:58:20Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35176.diff",
    "draft": false,
    "head": {
        "label": "gpanders:push-vxouszzzrlnr",
        "ref": "push-vxouszzzrlnr",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2025-08-08T14:59:17Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 306065,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2025-01-11T19:57:11Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35176",
    "id": 2722128439,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35176",
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "851a622806a2e84ed8d53971465f3f5c2fe05d7a",
    "merged_at": "2025-08-06T12:31:03Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6iQGI3",
    "number": 35176,
    "patch_url": "https://github.com/neovim/neovim/pull/35176.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35176/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b8b9f2c03e958ea6dfadb3a7695da9a628c2792e",
    "title": "docs(lsp): include snippet to display progress using native indicator",
    "updated_at": "2025-08-08T12:53:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35176",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    }
}