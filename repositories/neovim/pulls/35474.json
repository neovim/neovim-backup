{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35474/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35474/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35474"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35474"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35474/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35474"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/625476a61bcd2941f3fbde9345cbfb1d39c6fbe5"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6294,
            "forks_count": 6294,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1994,
            "open_issues_count": 1994,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-02T02:10:04Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 340229,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92438,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-02T02:37:13Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92438,
            "watchers_count": 92438,
            "web_commit_signoff_required": false
        },
        "sha": "516363e6baa0329dac4b048526e3deadb0d580d0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: various functions may return incorrect window numbers for unfocusable or hidden windows.\r\n\r\nSolution: fix the checks. Make sure current windows in non-current tabpages have a window number.\r\n\r\nFixes #35453\r\n\r\nSurprisingly fiddly to get this right, so hopefully I didn't screw anything up. :innocent: ",
    "closed_at": "2025-08-26T20:13:06Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35474#discussion_r2297714886"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297714886"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe this should return `[tp, 0]` instead, but that might be odd (and it'd have to be documented).\r\n\r\n(Eh, I guess `getwininfo` does that now anyway, so maybe it should...)",
            "commit_id": "625476a61bcd2941f3fbde9345cbfb1d39c6fbe5",
            "created_at": "2025-08-25T10:19:04Z",
            "diff_hunk": "@@ -899,14 +900,53 @@ describe('float window', function()\n   end)\n \n   it('non-visible/focusable are not assigned a window number', function()\n-    local win = api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, focusable = false })\n+    command('tabnew')\n+    local tp = api.nvim_get_current_tabpage()\n+    local split_win = api.nvim_get_current_win()\n+    local float_buf = api.nvim_create_buf(true, true)\n+    local win = api.nvim_open_win(float_buf, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, focusable = false })\n     api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, hide = true })\n     api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2 })\n+\n     eq(2, fn.winnr('$'))\n     eq(0, fn.win_id2win(win))\n+    eq(0, fn.getwininfo(win)[1].winnr)\n+    eq(2, fn.tabpagewinnr(2, '$'))\n+    eq(0, fn.win_getid(3))\n+    eq(0, fn.win_getid(3, 2))\n+    eq(-1, fn.bufwinnr(float_buf))\n+    eq(win, fn.bufwinid(float_buf)) -- bufwinid unaffected.\n+    eq(nil, fn.winrestcmd():match('3resize'))\n+\n     -- Unless it is the current window.\n     api.nvim_set_current_win(win)\n-    eq({ 3, 3 }, { fn.winnr(), fn.win_id2win(win) })\n+    eq(3, fn.winnr('$'))\n+    eq(3, fn.winnr())\n+    eq(3, fn.win_id2win(win))\n+    eq(3, fn.getwininfo(win)[1].winnr)\n+    eq({ 2, 3 }, fn.win_id2tabwin(win))\n+    eq(3, fn.tabpagewinnr(2, '$'))\n+    eq(3, fn.tabpagewinnr(2))\n+    eq(win, fn.win_getid(3))\n+    eq(win, fn.win_getid(3, 2))\n+    eq(3, fn.bufwinnr(float_buf))\n+    matches('3resize', fn.winrestcmd())\n+\n+    -- When switching tabpages it should still have a winnr, as it's current in the other tabpage.\n+    command('tabfirst')\n+    eq({ 2, 3 }, fn.win_id2tabwin(win))\n+    eq(3, fn.getwininfo(win)[1].winnr)\n+    eq(win, fn.win_getid(3, 2))\n+    eq(3, fn.tabpagewinnr(2, '$'))\n+    eq(3, fn.tabpagewinnr(2))\n+\n+    -- ...but not if it's non-current in that tabpage.\n+    api.nvim_tabpage_set_win(tp, split_win)\n+    eq({ 0, 0 }, fn.win_id2tabwin(win))",
            "html_url": "https://github.com/neovim/neovim/pull/35474#discussion_r2297714886",
            "id": 2297714886,
            "line": 946,
            "node_id": "PRRC_kwDOAPphoM6I9FjG",
            "original_commit_id": "2350dc89b9b0a9fda6c99fc2ae64be4d0231be02",
            "original_line": 946,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 57,
            "pull_request_review_id": 3150811567,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297714886/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T10:40:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297714886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35474#discussion_r2297771879"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297771879"
                }
            },
            "author_association": "MEMBER",
            "body": "Looking at Vim for inspiration, I think this is fine.\r\n  \r\nThey also return `[0, 0]` and can return `#{winnr: 0, tabnr: <non-zero>}` for their popup windows from `win_id2tabwin` and `getwininfo` respectively. (Actually it looks like due to a bug, Vim always gives `tabnr: 0`... vim/vim#18111)",
            "commit_id": "625476a61bcd2941f3fbde9345cbfb1d39c6fbe5",
            "created_at": "2025-08-25T10:47:48Z",
            "diff_hunk": "@@ -899,14 +900,53 @@ describe('float window', function()\n   end)\n \n   it('non-visible/focusable are not assigned a window number', function()\n-    local win = api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, focusable = false })\n+    command('tabnew')\n+    local tp = api.nvim_get_current_tabpage()\n+    local split_win = api.nvim_get_current_win()\n+    local float_buf = api.nvim_create_buf(true, true)\n+    local win = api.nvim_open_win(float_buf, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, focusable = false })\n     api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, hide = true })\n     api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2 })\n+\n     eq(2, fn.winnr('$'))\n     eq(0, fn.win_id2win(win))\n+    eq(0, fn.getwininfo(win)[1].winnr)\n+    eq(2, fn.tabpagewinnr(2, '$'))\n+    eq(0, fn.win_getid(3))\n+    eq(0, fn.win_getid(3, 2))\n+    eq(-1, fn.bufwinnr(float_buf))\n+    eq(win, fn.bufwinid(float_buf)) -- bufwinid unaffected.\n+    eq(nil, fn.winrestcmd():match('3resize'))\n+\n     -- Unless it is the current window.\n     api.nvim_set_current_win(win)\n-    eq({ 3, 3 }, { fn.winnr(), fn.win_id2win(win) })\n+    eq(3, fn.winnr('$'))\n+    eq(3, fn.winnr())\n+    eq(3, fn.win_id2win(win))\n+    eq(3, fn.getwininfo(win)[1].winnr)\n+    eq({ 2, 3 }, fn.win_id2tabwin(win))\n+    eq(3, fn.tabpagewinnr(2, '$'))\n+    eq(3, fn.tabpagewinnr(2))\n+    eq(win, fn.win_getid(3))\n+    eq(win, fn.win_getid(3, 2))\n+    eq(3, fn.bufwinnr(float_buf))\n+    matches('3resize', fn.winrestcmd())\n+\n+    -- When switching tabpages it should still have a winnr, as it's current in the other tabpage.\n+    command('tabfirst')\n+    eq({ 2, 3 }, fn.win_id2tabwin(win))\n+    eq(3, fn.getwininfo(win)[1].winnr)\n+    eq(win, fn.win_getid(3, 2))\n+    eq(3, fn.tabpagewinnr(2, '$'))\n+    eq(3, fn.tabpagewinnr(2))\n+\n+    -- ...but not if it's non-current in that tabpage.\n+    api.nvim_tabpage_set_win(tp, split_win)\n+    eq({ 0, 0 }, fn.win_id2tabwin(win))",
            "html_url": "https://github.com/neovim/neovim/pull/35474#discussion_r2297771879",
            "id": 2297771879,
            "in_reply_to_id": 2297714886,
            "line": 946,
            "node_id": "PRRC_kwDOAPphoM6I9Tdn",
            "original_commit_id": "2350dc89b9b0a9fda6c99fc2ae64be4d0231be02",
            "original_line": 946,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 57,
            "pull_request_review_id": 3150896624,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297771879/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T11:43:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297771879",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35474#discussion_r2302066040"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302066040"
                }
            },
            "author_association": "MEMBER",
            "body": "Vim bug fixed in [v9.1.1696](https://github.com/vim/vim/commit/7d6be2cead4e58356387b52ab9587c079a167775) :+1:",
            "commit_id": "625476a61bcd2941f3fbde9345cbfb1d39c6fbe5",
            "created_at": "2025-08-26T20:27:05Z",
            "diff_hunk": "@@ -899,14 +900,53 @@ describe('float window', function()\n   end)\n \n   it('non-visible/focusable are not assigned a window number', function()\n-    local win = api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, focusable = false })\n+    command('tabnew')\n+    local tp = api.nvim_get_current_tabpage()\n+    local split_win = api.nvim_get_current_win()\n+    local float_buf = api.nvim_create_buf(true, true)\n+    local win = api.nvim_open_win(float_buf, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, focusable = false })\n     api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2, hide = true })\n     api.nvim_open_win(0, false, { relative = 'editor', width = 2, height = 2, row = 2, col = 2 })\n+\n     eq(2, fn.winnr('$'))\n     eq(0, fn.win_id2win(win))\n+    eq(0, fn.getwininfo(win)[1].winnr)\n+    eq(2, fn.tabpagewinnr(2, '$'))\n+    eq(0, fn.win_getid(3))\n+    eq(0, fn.win_getid(3, 2))\n+    eq(-1, fn.bufwinnr(float_buf))\n+    eq(win, fn.bufwinid(float_buf)) -- bufwinid unaffected.\n+    eq(nil, fn.winrestcmd():match('3resize'))\n+\n     -- Unless it is the current window.\n     api.nvim_set_current_win(win)\n-    eq({ 3, 3 }, { fn.winnr(), fn.win_id2win(win) })\n+    eq(3, fn.winnr('$'))\n+    eq(3, fn.winnr())\n+    eq(3, fn.win_id2win(win))\n+    eq(3, fn.getwininfo(win)[1].winnr)\n+    eq({ 2, 3 }, fn.win_id2tabwin(win))\n+    eq(3, fn.tabpagewinnr(2, '$'))\n+    eq(3, fn.tabpagewinnr(2))\n+    eq(win, fn.win_getid(3))\n+    eq(win, fn.win_getid(3, 2))\n+    eq(3, fn.bufwinnr(float_buf))\n+    matches('3resize', fn.winrestcmd())\n+\n+    -- When switching tabpages it should still have a winnr, as it's current in the other tabpage.\n+    command('tabfirst')\n+    eq({ 2, 3 }, fn.win_id2tabwin(win))\n+    eq(3, fn.getwininfo(win)[1].winnr)\n+    eq(win, fn.win_getid(3, 2))\n+    eq(3, fn.tabpagewinnr(2, '$'))\n+    eq(3, fn.tabpagewinnr(2))\n+\n+    -- ...but not if it's non-current in that tabpage.\n+    api.nvim_tabpage_set_win(tp, split_win)\n+    eq({ 0, 0 }, fn.win_id2tabwin(win))",
            "html_url": "https://github.com/neovim/neovim/pull/35474#discussion_r2302066040",
            "id": 2302066040,
            "in_reply_to_id": 2297714886,
            "line": 946,
            "node_id": "PRRC_kwDOAPphoM6JNr14",
            "original_commit_id": "2350dc89b9b0a9fda6c99fc2ae64be4d0231be02",
            "original_line": 946,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/ui/float_spec.lua",
            "position": 57,
            "pull_request_review_id": 3157204636,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302066040/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T20:27:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302066040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35474/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35474/commits",
    "created_at": "2025-08-25T10:17:38Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35474.diff",
    "draft": false,
    "head": {
        "label": "seandewar:bufwinnr-fix",
        "ref": "bufwinnr-fix",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/seandewar/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/seandewar/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/seandewar/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/seandewar/neovim/branches{/branch}",
            "clone_url": "https://github.com/seandewar/neovim.git",
            "collaborators_url": "https://api.github.com/repos/seandewar/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/seandewar/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/seandewar/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/seandewar/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/seandewar/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/seandewar/neovim/contributors",
            "created_at": "2020-10-20T16:45:01Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/seandewar/neovim/deployments",
            "description": "[Contribution Fork] Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/seandewar/neovim/downloads",
            "events_url": "https://api.github.com/repos/seandewar/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/seandewar/neovim/forks",
            "full_name": "seandewar/neovim",
            "git_commits_url": "https://api.github.com/repos/seandewar/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/seandewar/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/seandewar/neovim/git/tags{/sha}",
            "git_url": "git://github.com/seandewar/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/seandewar/neovim/hooks",
            "html_url": "https://github.com/seandewar/neovim",
            "id": 305773353,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/seandewar/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/seandewar/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/seandewar/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/seandewar/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/seandewar/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/seandewar/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/seandewar/neovim/merges",
            "milestones_url": "https://api.github.com/repos/seandewar/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMDU3NzMzNTM=",
            "notifications_url": "https://api.github.com/repos/seandewar/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/seandewar/neovim/pulls{/number}",
            "pushed_at": "2025-08-26T20:27:54Z",
            "releases_url": "https://api.github.com/repos/seandewar/neovim/releases{/id}",
            "size": 329191,
            "ssh_url": "git@github.com:seandewar/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/seandewar/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/seandewar/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/seandewar/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/seandewar/neovim/subscription",
            "svn_url": "https://github.com/seandewar/neovim",
            "tags_url": "https://api.github.com/repos/seandewar/neovim/tags",
            "teams_url": "https://api.github.com/repos/seandewar/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/seandewar/neovim/git/trees{/sha}",
            "updated_at": "2025-04-01T00:24:21Z",
            "url": "https://api.github.com/repos/seandewar/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "625476a61bcd2941f3fbde9345cbfb1d39c6fbe5",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
            "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
            "followers_url": "https://api.github.com/users/seandewar/followers",
            "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
            "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/seandewar",
            "id": 6256228,
            "login": "seandewar",
            "node_id": "MDQ6VXNlcjYyNTYyMjg=",
            "organizations_url": "https://api.github.com/users/seandewar/orgs",
            "received_events_url": "https://api.github.com/users/seandewar/received_events",
            "repos_url": "https://api.github.com/users/seandewar/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/seandewar",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35474",
    "id": 2771310640,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35474",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "1e1619de830ec64ec887911b444753486db63476",
    "merged_at": "2025-08-26T20:13:06Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6lLtgw",
    "number": 35474,
    "patch_url": "https://github.com/neovim/neovim/pull/35474.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35474/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/625476a61bcd2941f3fbde9345cbfb1d39c6fbe5",
    "title": "fix(eval): fixups for winnrs of unfocusable/hidden windows",
    "updated_at": "2025-08-26T20:27:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35474",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
        "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
        "followers_url": "https://api.github.com/users/seandewar/followers",
        "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
        "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seandewar",
        "id": 6256228,
        "login": "seandewar",
        "node_id": "MDQ6VXNlcjYyNTYyMjg=",
        "organizations_url": "https://api.github.com/users/seandewar/orgs",
        "received_events_url": "https://api.github.com/users/seandewar/received_events",
        "repos_url": "https://api.github.com/users/seandewar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seandewar",
        "user_view_type": "public"
    }
}