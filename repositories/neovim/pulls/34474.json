{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34474/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34474/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34474"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34474"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34474/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b618d6b1e785869ac8eebdc5471900c65372f296"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6168,
            "forks_count": 6168,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1965,
            "open_issues_count": 1965,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-07-08T01:56:22Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 332418,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90922,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-08T02:01:52Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90922,
            "watchers_count": 90922,
            "web_commit_signoff_required": false
        },
        "sha": "0d9bf5b89f3896c1b436ee5acf2134d5495abeab",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "After 3 related information objects, the rest get folded to prevent them from taking up too much space. Closes #19649\r\n\r\n### Before\r\n\r\n![image](https://github.com/user-attachments/assets/2fc915a7-33d0-4732-843c-6e6916d2c255)\r\n\r\n### After\r\n\r\n![image](https://github.com/user-attachments/assets/411ad106-6ce6-404f-9a84-eb4a09b252a7)\r\n\r\nNote: Should the floating window height be adjusted to fit the screen height after the folds are closed?",
    "closed_at": "2025-07-07T17:05:03Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2143154791"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2143154791"
                }
            },
            "author_association": "MEMBER",
            "body": "Should this info instead be retrieved from `user_data`? Should `fromqflist` be updated?",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-12T16:13:33Z",
            "diff_hunk": "@@ -466,20 +466,23 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n     0-based rows and columns). |api-indexing|\n \n     Fields: ~\n-      • {lnum}        (`integer`) The starting line of the diagnostic\n-                      (0-indexed)\n-      • {col}?        (`integer`, default: `0`) The starting column of the\n-                      diagnostic (0-indexed)\n-      • {end_lnum}?   (`integer`, default: `lnum`) The final line of the\n-                      diagnostic (0-indexed)\n-      • {end_col}?    (`integer`, default: `col`) The final column of the\n-                      diagnostic (0-indexed)\n-      • {severity}?   (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n-                      The severity of the diagnostic |vim.diagnostic.severity|\n-      • {message}     (`string`) The diagnostic text\n-      • {source}?     (`string`) The source of the diagnostic\n-      • {code}?       (`string|integer`) The diagnostic code\n-      • {user_data}?  (`any`) arbitrary data plugins can add\n+      • {lnum}                  (`integer`) The starting line of the\n+                                diagnostic (0-indexed)\n+      • {col}?                  (`integer`, default: `0`) The starting column\n+                                of the diagnostic (0-indexed)\n+      • {end_lnum}?             (`integer`, default: `lnum`) The final line of\n+                                the diagnostic (0-indexed)\n+      • {end_col}?              (`integer`, default: `col`) The final column\n+                                of the diagnostic (0-indexed)\n+      • {severity}?             (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n+                                The severity of the diagnostic\n+                                |vim.diagnostic.severity|\n+      • {message}               (`string`) The diagnostic text\n+      • {source}?               (`string`) The source of the diagnostic\n+      • {code}?                 (`string|integer`) The diagnostic code\n+      • {user_data}?            (`any`) arbitrary data plugins can add\n+      • {related_information}?  (`lsp.DiagnosticRelatedInformation[]`) An",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2143154791",
            "id": 2143154791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5_vfJn",
            "original_commit_id": "0c3ea0402f8633e2def4a3f822eba87d8ce5f1e9",
            "original_line": 484,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2921838108,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2143154791/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-12T16:13:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2143154791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2145319621"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2145319621"
                }
            },
            "author_association": "MEMBER",
            "body": "maybe. we definitely don't want LSP stuff directly referenced in `vim.diagnostic` ",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-13T15:18:24Z",
            "diff_hunk": "@@ -466,20 +466,23 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n     0-based rows and columns). |api-indexing|\n \n     Fields: ~\n-      • {lnum}        (`integer`) The starting line of the diagnostic\n-                      (0-indexed)\n-      • {col}?        (`integer`, default: `0`) The starting column of the\n-                      diagnostic (0-indexed)\n-      • {end_lnum}?   (`integer`, default: `lnum`) The final line of the\n-                      diagnostic (0-indexed)\n-      • {end_col}?    (`integer`, default: `col`) The final column of the\n-                      diagnostic (0-indexed)\n-      • {severity}?   (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n-                      The severity of the diagnostic |vim.diagnostic.severity|\n-      • {message}     (`string`) The diagnostic text\n-      • {source}?     (`string`) The source of the diagnostic\n-      • {code}?       (`string|integer`) The diagnostic code\n-      • {user_data}?  (`any`) arbitrary data plugins can add\n+      • {lnum}                  (`integer`) The starting line of the\n+                                diagnostic (0-indexed)\n+      • {col}?                  (`integer`, default: `0`) The starting column\n+                                of the diagnostic (0-indexed)\n+      • {end_lnum}?             (`integer`, default: `lnum`) The final line of\n+                                the diagnostic (0-indexed)\n+      • {end_col}?              (`integer`, default: `col`) The final column\n+                                of the diagnostic (0-indexed)\n+      • {severity}?             (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n+                                The severity of the diagnostic\n+                                |vim.diagnostic.severity|\n+      • {message}               (`string`) The diagnostic text\n+      • {source}?               (`string`) The source of the diagnostic\n+      • {code}?                 (`string|integer`) The diagnostic code\n+      • {user_data}?            (`any`) arbitrary data plugins can add\n+      • {related_information}?  (`lsp.DiagnosticRelatedInformation[]`) An",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2145319621",
            "id": 2145319621,
            "in_reply_to_id": 2143154791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5_3vrF",
            "original_commit_id": "0c3ea0402f8633e2def4a3f822eba87d8ce5f1e9",
            "original_line": 484,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2925203771,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2145319621/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-13T15:18:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2145319621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2145329931"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2145329931"
                }
            },
            "author_association": "MEMBER",
            "body": "This confused me at first (\"I thought it already did that?\"). I think it makes sense to reference the literal technical name here, `DiagnosticRelatedInformation`.\r\n\r\nAlso, `vim.diagnostic.open_float()` is not specific to LSP so it's not clear how this new feature is surfaced from LSP-enabled buffers. Do I just run `:lua vim.diagnostic.open_float()` to try it out, or is there a default LSP mapping ?\r\n",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-13T15:23:02Z",
            "diff_hunk": "@@ -169,6 +169,8 @@ LSP\n   https://microsoft.github.io/language-server-protocol/specifications/specification-current/#workspace_dagnostics\n • Incremental selection is now supported via `textDocument/selectionRange`.\n   `an` selects outwards and `in` selects inwards.\n+• Diagnostic related information is now shown in\n+  |vim.diagnostic.open_float()|.",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2145329931",
            "id": 2145329931,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5_3yML",
            "original_commit_id": "2c9d716a495da9c242861f9ad46e1e8f739c0e5e",
            "original_line": 173,
            "original_position": 5,
            "original_start_line": 172,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2925221006,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2145329931/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-06-13T15:23:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2145329931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2146340305"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2146340305"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should create separate highlight groups and link to these by default.",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-14T01:17:01Z",
            "diff_hunk": "@@ -2364,11 +2371,45 @@ function M.open_float(opts, ...)\n           hlname = prefix_hl_group,\n         },\n         suffix = {\n-          length = j == #message_lines and #suffix or 0,\n+          length = #suf,\n           hlname = suffix_hl_group,\n         },\n       }\n     end\n+\n+    local related_info = diagnostic.related_information or {}\n+    local n_related_info = #related_info\n+\n+    -- Fold additional related info objects so they don't take up too much space.\n+    if n_related_info > 3 then\n+      local n_lines = #lines\n+      fold_ranges[#fold_ranges + 1] = { n_lines + 3, n_lines + n_related_info }\n+    end\n+\n+    for _, info in ipairs(related_info) do\n+      -- TODO: Somehow allow users to open the location when their cursor is over it?\n+      local file_name = vim.fs.basename(vim.uri_to_fname(info.location.uri))\n+      local info_suffix = ': ' .. info.message\n+      lines[#lines + 1] = string.format(\n+        '%s%s:%s:%s%s',\n+        default_pre,\n+        file_name,\n+        info.location.range.start.line,\n+        info.location.range.start.character,\n+        info_suffix\n+      )\n+      highlights[#highlights + 1] = {\n+        hlname = '@string.special.path',",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2146340305",
            "id": 2146340305,
            "line": 2393,
            "node_id": "PRRC_kwDOAPphoM5_7o3R",
            "original_commit_id": "2c9d716a495da9c242861f9ad46e1e8f739c0e5e",
            "original_line": 2393,
            "original_position": 64,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 40,
            "pull_request_review_id": 2926984221,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2146340305/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-14T01:17:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2146340305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2146444213"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2146444213"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "But does this mean that `vim.diagnostic.open_float` handles `userdata` specially when it is LSP data, even though it is a lower-level API?",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-14T05:10:09Z",
            "diff_hunk": "@@ -466,20 +466,23 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n     0-based rows and columns). |api-indexing|\n \n     Fields: ~\n-      • {lnum}        (`integer`) The starting line of the diagnostic\n-                      (0-indexed)\n-      • {col}?        (`integer`, default: `0`) The starting column of the\n-                      diagnostic (0-indexed)\n-      • {end_lnum}?   (`integer`, default: `lnum`) The final line of the\n-                      diagnostic (0-indexed)\n-      • {end_col}?    (`integer`, default: `col`) The final column of the\n-                      diagnostic (0-indexed)\n-      • {severity}?   (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n-                      The severity of the diagnostic |vim.diagnostic.severity|\n-      • {message}     (`string`) The diagnostic text\n-      • {source}?     (`string`) The source of the diagnostic\n-      • {code}?       (`string|integer`) The diagnostic code\n-      • {user_data}?  (`any`) arbitrary data plugins can add\n+      • {lnum}                  (`integer`) The starting line of the\n+                                diagnostic (0-indexed)\n+      • {col}?                  (`integer`, default: `0`) The starting column\n+                                of the diagnostic (0-indexed)\n+      • {end_lnum}?             (`integer`, default: `lnum`) The final line of\n+                                the diagnostic (0-indexed)\n+      • {end_col}?              (`integer`, default: `col`) The final column\n+                                of the diagnostic (0-indexed)\n+      • {severity}?             (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n+                                The severity of the diagnostic\n+                                |vim.diagnostic.severity|\n+      • {message}               (`string`) The diagnostic text\n+      • {source}?               (`string`) The source of the diagnostic\n+      • {code}?                 (`string|integer`) The diagnostic code\n+      • {user_data}?            (`any`) arbitrary data plugins can add\n+      • {related_information}?  (`lsp.DiagnosticRelatedInformation[]`) An",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2146444213",
            "id": 2146444213,
            "in_reply_to_id": 2143154791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5_8CO1",
            "original_commit_id": "0c3ea0402f8633e2def4a3f822eba87d8ce5f1e9",
            "original_line": 484,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2927202939,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2146444213/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-14T05:10:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2146444213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2150326869"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150326869"
                }
            },
            "author_association": "MEMBER",
            "body": "Referring to https://github.com/neovim/neovim/pull/34474#issuecomment-2972474933, would it be acceptable to keep this in `vim.diagnostic` but prefix the `related_information` field with an underscore? It looks like this is how `_tags` works currently. So it is still kind of hidden because it is pretty LSP specific, but plugins can still make use of it",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-16T15:43:48Z",
            "diff_hunk": "@@ -466,20 +466,23 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n     0-based rows and columns). |api-indexing|\n \n     Fields: ~\n-      • {lnum}        (`integer`) The starting line of the diagnostic\n-                      (0-indexed)\n-      • {col}?        (`integer`, default: `0`) The starting column of the\n-                      diagnostic (0-indexed)\n-      • {end_lnum}?   (`integer`, default: `lnum`) The final line of the\n-                      diagnostic (0-indexed)\n-      • {end_col}?    (`integer`, default: `col`) The final column of the\n-                      diagnostic (0-indexed)\n-      • {severity}?   (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n-                      The severity of the diagnostic |vim.diagnostic.severity|\n-      • {message}     (`string`) The diagnostic text\n-      • {source}?     (`string`) The source of the diagnostic\n-      • {code}?       (`string|integer`) The diagnostic code\n-      • {user_data}?  (`any`) arbitrary data plugins can add\n+      • {lnum}                  (`integer`) The starting line of the\n+                                diagnostic (0-indexed)\n+      • {col}?                  (`integer`, default: `0`) The starting column\n+                                of the diagnostic (0-indexed)\n+      • {end_lnum}?             (`integer`, default: `lnum`) The final line of\n+                                the diagnostic (0-indexed)\n+      • {end_col}?              (`integer`, default: `col`) The final column\n+                                of the diagnostic (0-indexed)\n+      • {severity}?             (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n+                                The severity of the diagnostic\n+                                |vim.diagnostic.severity|\n+      • {message}               (`string`) The diagnostic text\n+      • {source}?               (`string`) The source of the diagnostic\n+      • {code}?                 (`string|integer`) The diagnostic code\n+      • {user_data}?            (`any`) arbitrary data plugins can add\n+      • {related_information}?  (`lsp.DiagnosticRelatedInformation[]`) An",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2150326869",
            "id": 2150326869,
            "in_reply_to_id": 2143154791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6AK2JV",
            "original_commit_id": "0c3ea0402f8633e2def4a3f822eba87d8ce5f1e9",
            "original_line": 484,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2932650428,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150326869/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-16T15:43:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150326869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2150329707"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150329707"
                }
            },
            "author_association": "MEMBER",
            "body": "Just to make sure I understand, you mean create a new highlight group like `LspLocationPath` (or some other name) and then link that to `@string.special.path`?",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-16T15:45:13Z",
            "diff_hunk": "@@ -2364,11 +2371,45 @@ function M.open_float(opts, ...)\n           hlname = prefix_hl_group,\n         },\n         suffix = {\n-          length = j == #message_lines and #suffix or 0,\n+          length = #suf,\n           hlname = suffix_hl_group,\n         },\n       }\n     end\n+\n+    local related_info = diagnostic.related_information or {}\n+    local n_related_info = #related_info\n+\n+    -- Fold additional related info objects so they don't take up too much space.\n+    if n_related_info > 3 then\n+      local n_lines = #lines\n+      fold_ranges[#fold_ranges + 1] = { n_lines + 3, n_lines + n_related_info }\n+    end\n+\n+    for _, info in ipairs(related_info) do\n+      -- TODO: Somehow allow users to open the location when their cursor is over it?\n+      local file_name = vim.fs.basename(vim.uri_to_fname(info.location.uri))\n+      local info_suffix = ': ' .. info.message\n+      lines[#lines + 1] = string.format(\n+        '%s%s:%s:%s%s',\n+        default_pre,\n+        file_name,\n+        info.location.range.start.line,\n+        info.location.range.start.character,\n+        info_suffix\n+      )\n+      highlights[#highlights + 1] = {\n+        hlname = '@string.special.path',",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2150329707",
            "id": 2150329707,
            "in_reply_to_id": 2146340305,
            "line": 2393,
            "node_id": "PRRC_kwDOAPphoM6AK21r",
            "original_commit_id": "2c9d716a495da9c242861f9ad46e1e8f739c0e5e",
            "original_line": 2393,
            "original_position": 64,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 40,
            "pull_request_review_id": 2932654988,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150329707/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-16T15:45:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150329707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2150432056"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150432056"
                }
            },
            "author_association": "MEMBER",
            "body": "Yep exactly :)",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-16T16:41:08Z",
            "diff_hunk": "@@ -2364,11 +2371,45 @@ function M.open_float(opts, ...)\n           hlname = prefix_hl_group,\n         },\n         suffix = {\n-          length = j == #message_lines and #suffix or 0,\n+          length = #suf,\n           hlname = suffix_hl_group,\n         },\n       }\n     end\n+\n+    local related_info = diagnostic.related_information or {}\n+    local n_related_info = #related_info\n+\n+    -- Fold additional related info objects so they don't take up too much space.\n+    if n_related_info > 3 then\n+      local n_lines = #lines\n+      fold_ranges[#fold_ranges + 1] = { n_lines + 3, n_lines + n_related_info }\n+    end\n+\n+    for _, info in ipairs(related_info) do\n+      -- TODO: Somehow allow users to open the location when their cursor is over it?\n+      local file_name = vim.fs.basename(vim.uri_to_fname(info.location.uri))\n+      local info_suffix = ': ' .. info.message\n+      lines[#lines + 1] = string.format(\n+        '%s%s:%s:%s%s',\n+        default_pre,\n+        file_name,\n+        info.location.range.start.line,\n+        info.location.range.start.character,\n+        info_suffix\n+      )\n+      highlights[#highlights + 1] = {\n+        hlname = '@string.special.path',",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2150432056",
            "id": 2150432056,
            "in_reply_to_id": 2146340305,
            "line": 2393,
            "node_id": "PRRC_kwDOAPphoM6ALP04",
            "original_commit_id": "2c9d716a495da9c242861f9ad46e1e8f739c0e5e",
            "original_line": 2393,
            "original_position": 64,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 40,
            "pull_request_review_id": 2932816766,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150432056/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-16T16:41:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150432056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2160378697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160378697"
                }
            },
            "author_association": "MEMBER",
            "body": "Is there another existing highlight group you think fits here? I think it might be wasteful to add another highlight group just for this (or at least, it seems less unique than a highlight group for linked editing ranges, which was also deemed not worthy of a new highlight group :sweat_smile: )",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-22T15:18:48Z",
            "diff_hunk": "@@ -2364,11 +2371,45 @@ function M.open_float(opts, ...)\n           hlname = prefix_hl_group,\n         },\n         suffix = {\n-          length = j == #message_lines and #suffix or 0,\n+          length = #suf,\n           hlname = suffix_hl_group,\n         },\n       }\n     end\n+\n+    local related_info = diagnostic.related_information or {}\n+    local n_related_info = #related_info\n+\n+    -- Fold additional related info objects so they don't take up too much space.\n+    if n_related_info > 3 then\n+      local n_lines = #lines\n+      fold_ranges[#fold_ranges + 1] = { n_lines + 3, n_lines + n_related_info }\n+    end\n+\n+    for _, info in ipairs(related_info) do\n+      -- TODO: Somehow allow users to open the location when their cursor is over it?\n+      local file_name = vim.fs.basename(vim.uri_to_fname(info.location.uri))\n+      local info_suffix = ': ' .. info.message\n+      lines[#lines + 1] = string.format(\n+        '%s%s:%s:%s%s',\n+        default_pre,\n+        file_name,\n+        info.location.range.start.line,\n+        info.location.range.start.character,\n+        info_suffix\n+      )\n+      highlights[#highlights + 1] = {\n+        hlname = '@string.special.path',",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2160378697",
            "id": 2160378697,
            "in_reply_to_id": 2146340305,
            "line": 2393,
            "node_id": "PRRC_kwDOAPphoM6AxMNJ",
            "original_commit_id": "2c9d716a495da9c242861f9ad46e1e8f739c0e5e",
            "original_line": 2393,
            "original_position": 64,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 40,
            "pull_request_review_id": 2948225604,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160378697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-22T15:21:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160378697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2160509933"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160509933"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm I can't think of another built-in group. It's okay if we start with `@string.special.path` for now.",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-22T22:24:13Z",
            "diff_hunk": "@@ -2364,11 +2371,45 @@ function M.open_float(opts, ...)\n           hlname = prefix_hl_group,\n         },\n         suffix = {\n-          length = j == #message_lines and #suffix or 0,\n+          length = #suf,\n           hlname = suffix_hl_group,\n         },\n       }\n     end\n+\n+    local related_info = diagnostic.related_information or {}\n+    local n_related_info = #related_info\n+\n+    -- Fold additional related info objects so they don't take up too much space.\n+    if n_related_info > 3 then\n+      local n_lines = #lines\n+      fold_ranges[#fold_ranges + 1] = { n_lines + 3, n_lines + n_related_info }\n+    end\n+\n+    for _, info in ipairs(related_info) do\n+      -- TODO: Somehow allow users to open the location when their cursor is over it?\n+      local file_name = vim.fs.basename(vim.uri_to_fname(info.location.uri))\n+      local info_suffix = ': ' .. info.message\n+      lines[#lines + 1] = string.format(\n+        '%s%s:%s:%s%s',\n+        default_pre,\n+        file_name,\n+        info.location.range.start.line,\n+        info.location.range.start.character,\n+        info_suffix\n+      )\n+      highlights[#highlights + 1] = {\n+        hlname = '@string.special.path',",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2160509933",
            "id": 2160509933,
            "in_reply_to_id": 2146340305,
            "line": 2393,
            "node_id": "PRRC_kwDOAPphoM6AxsPt",
            "original_commit_id": "2c9d716a495da9c242861f9ad46e1e8f739c0e5e",
            "original_line": 2393,
            "original_position": 64,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 40,
            "pull_request_review_id": 2948356476,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160509933/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-22T22:24:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160509933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2160510636"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160510636"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmmm not sure about setting window options here.\r\n\r\nRelated issue: https://github.com/neovim/neovim/issues/28140",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-22T22:26:09Z",
            "diff_hunk": "@@ -2380,6 +2421,16 @@ function M.open_float(opts, ...)\n   --- @diagnostic disable-next-line: param-type-mismatch\n   local float_bufnr, winnr = vim.lsp.util.open_floating_preview(lines, 'plaintext', opts)\n   vim.bo[float_bufnr].path = vim.bo[bufnr].path\n+  vim.wo[winnr].foldmethod = 'manual'",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2160510636",
            "id": 2160510636,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Axsas",
            "original_commit_id": "1dddbee70c2c381d1eb82be2d7dee677d059c6bc",
            "original_line": 2424,
            "original_position": 82,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2948357246,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160510636/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-22T22:26:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160510636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2160511493"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160511493"
                }
            },
            "author_association": "MEMBER",
            "body": "IMO it doesn't feel right to have `_related_information` on the non-LSP diagnostic object. It feels better to store it inside `user_data.lsp`.\r\n\r\nThat's different from tags as diagnostic tags are also a concept of non-LSP diagnostics, but AFAIK that's not the case for `related_information`.",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-22T22:29:28Z",
            "diff_hunk": "@@ -466,20 +466,23 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n     0-based rows and columns). |api-indexing|\n \n     Fields: ~\n-      • {lnum}        (`integer`) The starting line of the diagnostic\n-                      (0-indexed)\n-      • {col}?        (`integer`, default: `0`) The starting column of the\n-                      diagnostic (0-indexed)\n-      • {end_lnum}?   (`integer`, default: `lnum`) The final line of the\n-                      diagnostic (0-indexed)\n-      • {end_col}?    (`integer`, default: `col`) The final column of the\n-                      diagnostic (0-indexed)\n-      • {severity}?   (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n-                      The severity of the diagnostic |vim.diagnostic.severity|\n-      • {message}     (`string`) The diagnostic text\n-      • {source}?     (`string`) The source of the diagnostic\n-      • {code}?       (`string|integer`) The diagnostic code\n-      • {user_data}?  (`any`) arbitrary data plugins can add\n+      • {lnum}                  (`integer`) The starting line of the\n+                                diagnostic (0-indexed)\n+      • {col}?                  (`integer`, default: `0`) The starting column\n+                                of the diagnostic (0-indexed)\n+      • {end_lnum}?             (`integer`, default: `lnum`) The final line of\n+                                the diagnostic (0-indexed)\n+      • {end_col}?              (`integer`, default: `col`) The final column\n+                                of the diagnostic (0-indexed)\n+      • {severity}?             (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n+                                The severity of the diagnostic\n+                                |vim.diagnostic.severity|\n+      • {message}               (`string`) The diagnostic text\n+      • {source}?               (`string`) The source of the diagnostic\n+      • {code}?                 (`string|integer`) The diagnostic code\n+      • {user_data}?            (`any`) arbitrary data plugins can add\n+      • {related_information}?  (`lsp.DiagnosticRelatedInformation[]`) An",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2160511493",
            "id": 2160511493,
            "in_reply_to_id": 2143154791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6AxsoF",
            "original_commit_id": "0c3ea0402f8633e2def4a3f822eba87d8ce5f1e9",
            "original_line": 484,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2948358019,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160511493/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-22T22:29:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2160511493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2161177693"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2161177693"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• LSP `DiagnosticRelatedInformation` is now shown in\r\n```",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-23T09:44:02Z",
            "diff_hunk": "@@ -182,6 +182,11 @@ LSP\n • Support for the `disabled` field on code actions.\n • The function form of `cmd` in a vim.lsp.Config or vim.lsp.ClientConfig\n   receives the resolved config as the second arg: `cmd(dispatchers, config)`.\n+• `DiagnosticRelatedInformation` is now shown in",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2161177693",
            "id": 2161177693,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6A0PRd",
            "original_commit_id": "1dddbee70c2c381d1eb82be2d7dee677d059c6bc",
            "original_line": 185,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2949401288,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2161177693/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-23T09:44:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2161177693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2173481480"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2173481480"
                }
            },
            "author_association": "MEMBER",
            "body": "I see- do you have an alternative solution, or do you think this should just be removed altogether? Note that without folding, it could be the case that there are many related information items which can hide other diagnostics in the window. Alternatively, we could truncate the list, but then of course the user cannot see all of the information locations",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-28T18:24:44Z",
            "diff_hunk": "@@ -2380,6 +2421,16 @@ function M.open_float(opts, ...)\n   --- @diagnostic disable-next-line: param-type-mismatch\n   local float_bufnr, winnr = vim.lsp.util.open_floating_preview(lines, 'plaintext', opts)\n   vim.bo[float_bufnr].path = vim.bo[bufnr].path\n+  vim.wo[winnr].foldmethod = 'manual'",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2173481480",
            "id": 2173481480,
            "in_reply_to_id": 2160510636,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BjLII",
            "original_commit_id": "1dddbee70c2c381d1eb82be2d7dee677d059c6bc",
            "original_line": 2424,
            "original_position": 82,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2968934057,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2173481480/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-28T18:24:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2173481480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2173923260"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2173923260"
                }
            },
            "author_association": "MEMBER",
            "body": "Personally I vote to remove it. I think it would be a bit clunky to have to move the cursor to the float window in order to unfold the entire message, and `opts.format` can be the escape hatch for users to deal with truncation.",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-29T20:51:48Z",
            "diff_hunk": "@@ -2380,6 +2421,16 @@ function M.open_float(opts, ...)\n   --- @diagnostic disable-next-line: param-type-mismatch\n   local float_bufnr, winnr = vim.lsp.util.open_floating_preview(lines, 'plaintext', opts)\n   vim.bo[float_bufnr].path = vim.bo[bufnr].path\n+  vim.wo[winnr].foldmethod = 'manual'",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2173923260",
            "id": 2173923260,
            "in_reply_to_id": 2160510636,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Bk2-8",
            "original_commit_id": "1dddbee70c2c381d1eb82be2d7dee677d059c6bc",
            "original_line": 2424,
            "original_position": 82,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2969455283,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2173923260/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-29T20:51:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2173923260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2174501981"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174501981"
                }
            },
            "author_association": "MEMBER",
            "body": "It looks like `opts.format` only applies to the `message` formatting of the diagnostic, not the related info. That said I'm still fine to remove these opts, maybe later we can make them opt in/out if there is strong user feedback for it. Something similar to e.g. `opts.suffix` maybe",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-30T08:20:10Z",
            "diff_hunk": "@@ -2380,6 +2421,16 @@ function M.open_float(opts, ...)\n   --- @diagnostic disable-next-line: param-type-mismatch\n   local float_bufnr, winnr = vim.lsp.util.open_floating_preview(lines, 'plaintext', opts)\n   vim.bo[float_bufnr].path = vim.bo[bufnr].path\n+  vim.wo[winnr].foldmethod = 'manual'",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2174501981",
            "id": 2174501981,
            "in_reply_to_id": 2160510636,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BnERd",
            "original_commit_id": "1dddbee70c2c381d1eb82be2d7dee677d059c6bc",
            "original_line": 2424,
            "original_position": 82,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2970332746,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174501981/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T08:20:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174501981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2174705727"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174705727"
                }
            },
            "author_association": "MEMBER",
            "body": "non-blocker: should we mention something in lsp.txt (not the private fields, but just something like \"DiagnosticRelatedInformation is supported/included\")? I looked around and the best place would be a `@brief` in `lsp/diagnostic.lua` , then it will appear in the \"overview\" part of `:help lsp-diagnostic`\r\n\r\n",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-30T10:03:07Z",
            "diff_hunk": "@@ -192,6 +192,11 @@ LSP\n • The function form of `cmd` in a vim.lsp.Config or vim.lsp.ClientConfig\n   receives the resolved config as the second arg: `cmd(dispatchers, config)`.\n • Support for annotated text edits.\n+• LSP `DiagnosticRelatedInformation` is now shown in\n+  |vim.diagnostic.open_float()|. They are read from the private field\n+  `_related_information` of |vim.Diagnostic.Set|, which is populated when\n+  diagnostics are received from an LSP client. This is similar to\n+  `DiagnosticTag`s and the `_tags` field.",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2174705727",
            "id": 2174705727,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Bn2A_",
            "original_commit_id": "4a0b0ffdf74ebbaa259a463ccecd87793677a61f",
            "original_line": 199,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2970647580,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174705727/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T10:04:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174705727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2174709712"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174709712"
                }
            },
            "author_association": "MEMBER",
            "body": "a bit sus that this didnt require a test update :)",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-30T10:05:25Z",
            "diff_hunk": "@@ -170,6 +171,7 @@ function M.from(diagnostics)\n       source = diagnostic.source,\n       code = diagnostic.code,\n       tags = tags_vim_to_lsp(diagnostic),\n+      relatedInformation = diagnostic._related_information,",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2174709712",
            "id": 2174709712,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Bn2_Q",
            "original_commit_id": "4a0b0ffdf74ebbaa259a463ccecd87793677a61f",
            "original_line": 174,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2970653957,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174709712/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T10:05:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174709712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2174713149"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174713149"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    -- [do something (what?) with] DiagnosticRelatedInformation.\r\n    for _, info in ipairs(related_info) do\r\n```",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-30T10:07:17Z",
            "diff_hunk": "@@ -2365,11 +2372,45 @@ function M.open_float(opts, ...)\n           hlname = prefix_hl_group,\n         },\n         suffix = {\n-          length = j == #message_lines and #suffix or 0,\n+          length = #suf,\n           hlname = suffix_hl_group,\n         },\n       }\n     end\n+\n+    local related_info = diagnostic._related_information or {}\n+    local n_related_info = #related_info\n+\n+    -- Fold additional related info objects so they don't take up too much space.\n+    if n_related_info > 3 then\n+      local n_lines = #lines\n+      fold_ranges[#fold_ranges + 1] = { n_lines + 3, n_lines + n_related_info }\n+    end\n+\n+    for _, info in ipairs(related_info) do",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2174713149",
            "id": 2174713149,
            "line": 2380,
            "node_id": "PRRC_kwDOAPphoM6Bn309",
            "original_commit_id": "4a0b0ffdf74ebbaa259a463ccecd87793677a61f",
            "original_line": 2380,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 27,
            "pull_request_review_id": 2970659169,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174713149/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T10:07:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174713149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2175145228"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175145228"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure, I'll keep it in `user_data` for now then. :+1: \r\n\r\nWere tags always part of vim diagnostics, or were they added since they were also present in the LSP side? Just curious because I could also see related info being useful in regular vim diagnostics, and in general I tend to think that if LSP considers something to be useful in a diagnostic, it is likely that we could too. But of course putting it in `user_data` doesn't make it unusable at all, and maybe we can graduate it into `vim.Diagnostic` if there is ever a demand for it? Can cross that bridge when we get there...",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-30T13:55:51Z",
            "diff_hunk": "@@ -466,20 +466,23 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n     0-based rows and columns). |api-indexing|\n \n     Fields: ~\n-      • {lnum}        (`integer`) The starting line of the diagnostic\n-                      (0-indexed)\n-      • {col}?        (`integer`, default: `0`) The starting column of the\n-                      diagnostic (0-indexed)\n-      • {end_lnum}?   (`integer`, default: `lnum`) The final line of the\n-                      diagnostic (0-indexed)\n-      • {end_col}?    (`integer`, default: `col`) The final column of the\n-                      diagnostic (0-indexed)\n-      • {severity}?   (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n-                      The severity of the diagnostic |vim.diagnostic.severity|\n-      • {message}     (`string`) The diagnostic text\n-      • {source}?     (`string`) The source of the diagnostic\n-      • {code}?       (`string|integer`) The diagnostic code\n-      • {user_data}?  (`any`) arbitrary data plugins can add\n+      • {lnum}                  (`integer`) The starting line of the\n+                                diagnostic (0-indexed)\n+      • {col}?                  (`integer`, default: `0`) The starting column\n+                                of the diagnostic (0-indexed)\n+      • {end_lnum}?             (`integer`, default: `lnum`) The final line of\n+                                the diagnostic (0-indexed)\n+      • {end_col}?              (`integer`, default: `col`) The final column\n+                                of the diagnostic (0-indexed)\n+      • {severity}?             (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n+                                The severity of the diagnostic\n+                                |vim.diagnostic.severity|\n+      • {message}               (`string`) The diagnostic text\n+      • {source}?               (`string`) The source of the diagnostic\n+      • {code}?                 (`string|integer`) The diagnostic code\n+      • {user_data}?            (`any`) arbitrary data plugins can add\n+      • {related_information}?  (`lsp.DiagnosticRelatedInformation[]`) An",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2175145228",
            "id": 2175145228,
            "in_reply_to_id": 2143154791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BphUM",
            "original_commit_id": "0c3ea0402f8633e2def4a3f822eba87d8ce5f1e9",
            "original_line": 484,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2971344531,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175145228/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T13:55:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175145228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2175146846"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175146846"
                }
            },
            "author_association": "MEMBER",
            "body": "Perfect, I'll do that. FYI the next push will remove the private field per maria's review comment :+1: ",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-30T13:56:26Z",
            "diff_hunk": "@@ -192,6 +192,11 @@ LSP\n • The function form of `cmd` in a vim.lsp.Config or vim.lsp.ClientConfig\n   receives the resolved config as the second arg: `cmd(dispatchers, config)`.\n • Support for annotated text edits.\n+• LSP `DiagnosticRelatedInformation` is now shown in\n+  |vim.diagnostic.open_float()|. They are read from the private field\n+  `_related_information` of |vim.Diagnostic.Set|, which is populated when\n+  diagnostics are received from an LSP client. This is similar to\n+  `DiagnosticTag`s and the `_tags` field.",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2175146846",
            "id": 2175146846,
            "in_reply_to_id": 2174705727,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Bphte",
            "original_commit_id": "4a0b0ffdf74ebbaa259a463ccecd87793677a61f",
            "original_line": 199,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2971346934,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175146846/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T13:56:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175146846",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2175606513"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175606513"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure. My vim knowledge isn't deep enough to know what came first 😅 Maybe @gpanders knows as our nvim diagnostic expert?",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-30T17:53:39Z",
            "diff_hunk": "@@ -466,20 +466,23 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n     0-based rows and columns). |api-indexing|\n \n     Fields: ~\n-      • {lnum}        (`integer`) The starting line of the diagnostic\n-                      (0-indexed)\n-      • {col}?        (`integer`, default: `0`) The starting column of the\n-                      diagnostic (0-indexed)\n-      • {end_lnum}?   (`integer`, default: `lnum`) The final line of the\n-                      diagnostic (0-indexed)\n-      • {end_col}?    (`integer`, default: `col`) The final column of the\n-                      diagnostic (0-indexed)\n-      • {severity}?   (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n-                      The severity of the diagnostic |vim.diagnostic.severity|\n-      • {message}     (`string`) The diagnostic text\n-      • {source}?     (`string`) The source of the diagnostic\n-      • {code}?       (`string|integer`) The diagnostic code\n-      • {user_data}?  (`any`) arbitrary data plugins can add\n+      • {lnum}                  (`integer`) The starting line of the\n+                                diagnostic (0-indexed)\n+      • {col}?                  (`integer`, default: `0`) The starting column\n+                                of the diagnostic (0-indexed)\n+      • {end_lnum}?             (`integer`, default: `lnum`) The final line of\n+                                the diagnostic (0-indexed)\n+      • {end_col}?              (`integer`, default: `col`) The final column\n+                                of the diagnostic (0-indexed)\n+      • {severity}?             (`vim.diagnostic.Severity`, default: `vim.diagnostic.severity.ERROR`)\n+                                The severity of the diagnostic\n+                                |vim.diagnostic.severity|\n+      • {message}               (`string`) The diagnostic text\n+      • {source}?               (`string`) The source of the diagnostic\n+      • {code}?                 (`string|integer`) The diagnostic code\n+      • {user_data}?            (`any`) arbitrary data plugins can add\n+      • {related_information}?  (`lsp.DiagnosticRelatedInformation[]`) An",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2175606513",
            "id": 2175606513,
            "in_reply_to_id": 2143154791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BrR7x",
            "original_commit_id": "0c3ea0402f8633e2def4a3f822eba87d8ce5f1e9",
            "original_line": 484,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2972164214,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175606513/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T17:53:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175606513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2175612246"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175612246"
                }
            },
            "author_association": "MEMBER",
            "body": "On that note, it would be nice to have a test for this :)",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-06-30T17:57:01Z",
            "diff_hunk": "@@ -170,6 +171,7 @@ function M.from(diagnostics)\n       source = diagnostic.source,\n       code = diagnostic.code,\n       tags = tags_vim_to_lsp(diagnostic),\n+      relatedInformation = diagnostic._related_information,",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2175612246",
            "id": 2175612246,
            "in_reply_to_id": 2174709712,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BrTVW",
            "original_commit_id": "4a0b0ffdf74ebbaa259a463ccecd87793677a61f",
            "original_line": 174,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2972173336,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175612246/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T17:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175612246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2180596867"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180596867"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\ndocument/workspace and populating them using |vim.Diagnostic|s.\r\n```",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-07-02T17:21:55Z",
            "diff_hunk": "@@ -1900,6 +1900,12 @@ workspace_symbol({query}, {opts})             *vim.lsp.buf.workspace_symbol()*\n ==============================================================================\n Lua module: vim.lsp.diagnostic                                *lsp-diagnostic*\n \n+This module provides functionality for requesting LSP diagnostics for a\n+document/workspace and populating them using as |vim.Diagnostic|s.",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2180596867",
            "id": 2180596867,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6B-USD",
            "original_commit_id": "1ca8157a30958c4e8f4bc92d04df5f3ae6a0f938",
            "original_line": 1904,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2980027953,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180596867/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-02T17:21:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180596867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2180598145"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180598145"
                }
            },
            "author_association": "MEMBER",
            "body": "still need to fill in something meaningful here :)",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-07-02T17:22:42Z",
            "diff_hunk": "@@ -2365,11 +2366,40 @@ function M.open_float(opts, ...)\n           hlname = prefix_hl_group,\n         },\n         suffix = {\n-          length = j == #message_lines and #suffix or 0,\n+          length = #suf,\n           hlname = suffix_hl_group,\n         },\n       }\n     end\n+\n+    ---@type lsp.DiagnosticRelatedInformation[]\n+    local related_info = vim.tbl_get(diagnostic, 'user_data', 'lsp', 'relatedInformation') or {}\n+\n+    -- [do something (what?) with] DiagnosticRelatedInformation.",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2180598145",
            "id": 2180598145,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6B-UmB",
            "original_commit_id": "1ca8157a30958c4e8f4bc92d04df5f3ae6a0f938",
            "original_line": 2378,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2980029979,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180598145/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-02T17:22:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180598145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34474#discussion_r2180622677"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34474"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180622677"
                }
            },
            "author_association": "MEMBER",
            "body": ":facepalm: of course",
            "commit_id": "b618d6b1e785869ac8eebdc5471900c65372f296",
            "created_at": "2025-07-02T17:36:06Z",
            "diff_hunk": "@@ -2365,11 +2366,40 @@ function M.open_float(opts, ...)\n           hlname = prefix_hl_group,\n         },\n         suffix = {\n-          length = j == #message_lines and #suffix or 0,\n+          length = #suf,\n           hlname = suffix_hl_group,\n         },\n       }\n     end\n+\n+    ---@type lsp.DiagnosticRelatedInformation[]\n+    local related_info = vim.tbl_get(diagnostic, 'user_data', 'lsp', 'relatedInformation') or {}\n+\n+    -- [do something (what?) with] DiagnosticRelatedInformation.",
            "html_url": "https://github.com/neovim/neovim/pull/34474#discussion_r2180622677",
            "id": 2180622677,
            "in_reply_to_id": 2180598145,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6B-alV",
            "original_commit_id": "1ca8157a30958c4e8f4bc92d04df5f3ae6a0f938",
            "original_line": 2378,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2980070694,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180622677/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-02T17:36:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2180622677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I previously tried to implement this as well, but the fundamental reason that made me give up was that there is no field in `vim.Diagnostic` that directly corresponds to `relatedInformation`.\r\n\r\nThe current support seems to only specifically handle LSP diagnostics in `vim.diagnostic.open_float`, but isn't it the `diagnostic-handler` that can make it more powerful? For example, for `virt_lines`, it would be very useful to display the locations recorded in `relatedInformation` simultaneously when hovering over a diagnostic, or open a quickfix to show the `relatedInformation` of one specific diagnostic.\r\n\r\nI think it might be worth considering adding `relatedInformation` to `vim.Diagnostic` so that functions in the `vim.diagnostic` module can provide broader support for it.",
            "created_at": "2025-06-14T05:20:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/34474#issuecomment-2972278900",
            "id": 2972278900,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34474",
            "node_id": "IC_kwDOAPphoM6xKWB0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2972278900/reactions"
            },
            "updated_at": "2025-06-14T05:20:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2972278900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I could be wrong but I think the entire lsp diagnostic object is stored in user_data, so we could just grab it from there maybe?",
            "created_at": "2025-06-14T06:24:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/34474#issuecomment-2972328040",
            "id": 2972328040,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34474",
            "node_id": "IC_kwDOAPphoM6xKiBo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2972328040/reactions"
            },
            "updated_at": "2025-06-14T06:24:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2972328040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, it can be obtained from userdata. I might not have expressed it clearly, I mean since we’ve added logic to handle related information in `vim.diagnostic`, why not just include it directly in `vim.Diagnostic` (as it is now)? That way, it’s not only the LSP that can use this feature, but also other plugins.\r\n\r\nSorry if I didn’t explain it well, so feel free to ignore my suggestion for now — I’ll try to explore this further and possibly make a PR later on.",
            "created_at": "2025-06-14T08:26:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/34474#issuecomment-2972474933",
            "id": 2972474933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34474",
            "node_id": "IC_kwDOAPphoM6xLF41",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2972474933/reactions"
            },
            "updated_at": "2025-06-14T08:26:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2972474933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh, sorry I understand now👍",
            "created_at": "2025-06-14T15:41:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/34474#issuecomment-2972839019",
            "id": 2972839019,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34474",
            "node_id": "IC_kwDOAPphoM6xMexr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2972839019/reactions"
            },
            "updated_at": "2025-06-14T15:41:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2972839019",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Opted to make the related information field private in `vim.Diagnostic.Set` (as with LSP `_tags`), and clarified this in `news.txt`",
            "created_at": "2025-06-22T15:20:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/34474#issuecomment-2994273212",
            "id": 2994273212,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34474",
            "node_id": "IC_kwDOAPphoM6yePu8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2994273212/reactions"
            },
            "updated_at": "2025-06-22T15:20:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2994273212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is this ready?",
            "created_at": "2025-07-02T16:07:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/34474#issuecomment-3028434343",
            "id": 3028434343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34474",
            "node_id": "IC_kwDOAPphoM60gj2n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3028434343/reactions"
            },
            "updated_at": "2025-07-02T16:07:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3028434343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34474/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34474/commits",
    "created_at": "2025-06-12T16:09:09Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34474.diff",
    "draft": false,
    "head": {
        "label": "ribru17:diag_related_info",
        "ref": "diag_related_info",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-07-07T22:37:44Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 325417,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-07-07T17:39:54Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b618d6b1e785869ac8eebdc5471900c65372f296",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34474",
    "id": 2587871773,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34474",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": "2031287e93295949fbe5349413668eb14c9546f0",
    "merged_at": "2025-07-07T17:05:03Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6aP8od",
    "number": 34474,
    "patch_url": "https://github.com/neovim/neovim/pull/34474.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34474/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b618d6b1e785869ac8eebdc5471900c65372f296",
    "title": "feat(lsp): support diagnostic related information",
    "updated_at": "2025-07-07T17:05:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34474",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}