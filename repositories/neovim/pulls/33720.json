{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33720/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33720/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33720"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33720"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33720/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33720"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/6375726d1f8d2ac9c3577a6fdc0e9cddecacc743"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": {
        "commit_message": "When nvim_open_term() is called with a non-empty buffer, the buffer\ncontents are piped into the PTY.",
        "commit_title": "feat(terminal): parse current buffer contents in nvim_open_term() (#33720)",
        "enabled_by": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders",
            "user_view_type": "public"
        },
        "merge_method": "squash"
    },
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6062,
            "forks_count": 6062,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1916,
            "open_issues_count": 1916,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-05-06T02:05:16Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 321796,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89216,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-05-06T02:05:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89216,
            "watchers_count": 89216,
            "web_commit_signoff_required": false
        },
        "sha": "6577d72d819dde32abeacd6a72d6ba64483f7ddc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "When nvim_open_term() is called with a non-empty buffer, the buffer contents are piped into the PTY.",
    "closed_at": "2025-04-30T21:34:23Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33720#discussion_r2066710763"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33720"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2066710763"
                }
            },
            "author_association": "NONE",
            "body": "Verify that appending a newline only between lines is the intended behavior, especially if individual buffer lines may already end with a newline. Consider clarifying the expected formatting in a code comment to ensure future maintainers understand the decision.\n```suggestion\n      // Append a newline only if the current line does not already end with one.\n      if (bufstrlen == 0 || bufstr[bufstrlen - 1] != '\\n') {\n        kv_push(contents, '\\n');\n      }\n```",
            "commit_id": "6375726d1f8d2ac9c3577a6fdc0e9cddecacc743",
            "created_at": "2025-04-29T14:33:22Z",
            "diff_hunk": "@@ -1041,12 +1042,33 @@ Integer nvim_open_term(Buffer buffer, Dict(open_term) *opts, Error *err)\n     .close_cb = term_close,\n     .force_crlf = GET_BOOL_OR_TRUE(opts, open_term, force_crlf),\n   };\n+\n+  // Read existing buffer contents (if any)\n+  StringBuilder contents = KV_INITIAL_VALUE;\n+  for (linenr_T lnum = 1; lnum <= buf->b_ml.ml_line_count; lnum++) {\n+    char *bufstr = ml_get_buf(buf, lnum);\n+    colnr_T bufstrlen = ml_get_buf_len(buf, lnum);\n+    kv_concat_len(contents, bufstr, (size_t)bufstrlen);\n+    if (lnum < buf->b_ml.ml_line_count) {\n+      kv_push(contents, '\\n');\n+    }",
            "html_url": "https://github.com/neovim/neovim/pull/33720#discussion_r2066710763",
            "id": 2066710763,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57L4Dr",
            "original_commit_id": "ebdd13224b74d62ebd629dd066090a5ce444d232",
            "original_line": 1054,
            "original_position": 32,
            "original_start_line": 1053,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": 2803930115,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33720",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2066710763/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-29T14:33:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2066710763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/946600?v=4",
                "events_url": "https://api.github.com/users/Copilot/events{/privacy}",
                "followers_url": "https://api.github.com/users/Copilot/followers",
                "following_url": "https://api.github.com/users/Copilot/following{/other_user}",
                "gists_url": "https://api.github.com/users/Copilot/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/copilot-pull-request-reviewer",
                "id": 175728472,
                "login": "Copilot",
                "node_id": "BOT_kgDOCnlnWA",
                "organizations_url": "https://api.github.com/users/Copilot/orgs",
                "received_events_url": "https://api.github.com/users/Copilot/received_events",
                "repos_url": "https://api.github.com/users/Copilot/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Copilot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Copilot/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/Copilot",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33720#discussion_r2067561075"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33720"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2067561075"
                }
            },
            "author_association": "MEMBER",
            "body": "Translate NL to Nul when concatenating? And this shares some common code with `read_input()` in src/nvim/os/shell.c.",
            "commit_id": "6375726d1f8d2ac9c3577a6fdc0e9cddecacc743",
            "created_at": "2025-04-29T23:07:49Z",
            "diff_hunk": "@@ -1041,12 +1042,33 @@ Integer nvim_open_term(Buffer buffer, Dict(open_term) *opts, Error *err)\n     .close_cb = term_close,\n     .force_crlf = GET_BOOL_OR_TRUE(opts, open_term, force_crlf),\n   };\n+\n+  // Read existing buffer contents (if any)\n+  StringBuilder contents = KV_INITIAL_VALUE;\n+  for (linenr_T lnum = 1; lnum <= buf->b_ml.ml_line_count; lnum++) {\n+    char *bufstr = ml_get_buf(buf, lnum);\n+    colnr_T bufstrlen = ml_get_buf_len(buf, lnum);\n+    kv_concat_len(contents, bufstr, (size_t)bufstrlen);",
            "html_url": "https://github.com/neovim/neovim/pull/33720#discussion_r2067561075",
            "id": 2067561075,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57PHpz",
            "original_commit_id": "96351ae64d87f77bcac5039b4adf9698586e7156",
            "original_line": 1051,
            "original_position": 29,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": 2805288329,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33720",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2067561075/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-29T23:12:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2067561075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33720#discussion_r2068597647"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33720"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068597647"
                }
            },
            "author_association": "MEMBER",
            "body": "Great idea. This likely will help with https://github.com/neovim/neovim/issues/28297",
            "commit_id": "6375726d1f8d2ac9c3577a6fdc0e9cddecacc743",
            "created_at": "2025-04-30T12:48:26Z",
            "diff_hunk": "@@ -169,7 +169,8 @@ STARTUP\n \n TERMINAL\n \n-• todo\n+• |nvim_open_term()| can be called with a non-empty buffer. The buffer\n+  contents are piped to the PTY and displayed as terminal output.",
            "html_url": "https://github.com/neovim/neovim/pull/33720#discussion_r2068597647",
            "id": 2068597647,
            "line": 173,
            "node_id": "PRRC_kwDOAPphoM57TEuP",
            "original_commit_id": "96351ae64d87f77bcac5039b4adf9698586e7156",
            "original_line": 173,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 6,
            "pull_request_review_id": 2806942575,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33720",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068597647/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-30T12:48:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068597647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33720#discussion_r2068598791"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33720"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068598791"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n/// @param buffer Buffer to use. Buffer contents (if any) will be written\r\n///               to the PTY.\r\n```",
            "commit_id": "6375726d1f8d2ac9c3577a6fdc0e9cddecacc743",
            "created_at": "2025-04-30T12:49:09Z",
            "diff_hunk": "@@ -996,7 +996,8 @@ Buffer nvim_create_buf(Boolean listed, Boolean scratch, Error *err)\n /// end, { desc = 'Highlights ANSI termcodes in curbuf' })\n /// ```\n ///\n-/// @param buffer the buffer to use (expected to be empty)\n+/// @param buffer Buffer to use. If non-empty, the contents will be written\n+///               to the PTY.",
            "html_url": "https://github.com/neovim/neovim/pull/33720#discussion_r2068598791",
            "id": 2068598791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57TFAH",
            "original_commit_id": "96351ae64d87f77bcac5039b4adf9698586e7156",
            "original_line": 1000,
            "original_position": 15,
            "original_start_line": 999,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": 2806944467,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33720",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068598791/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-30T12:49:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068598791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33720#discussion_r2068773892"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33720"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068773892"
                }
            },
            "author_association": "MEMBER",
            "body": "Good suggestion, I refactored that code out and re-used it.",
            "commit_id": "6375726d1f8d2ac9c3577a6fdc0e9cddecacc743",
            "created_at": "2025-04-30T14:22:48Z",
            "diff_hunk": "@@ -1041,12 +1042,33 @@ Integer nvim_open_term(Buffer buffer, Dict(open_term) *opts, Error *err)\n     .close_cb = term_close,\n     .force_crlf = GET_BOOL_OR_TRUE(opts, open_term, force_crlf),\n   };\n+\n+  // Read existing buffer contents (if any)\n+  StringBuilder contents = KV_INITIAL_VALUE;\n+  for (linenr_T lnum = 1; lnum <= buf->b_ml.ml_line_count; lnum++) {\n+    char *bufstr = ml_get_buf(buf, lnum);\n+    colnr_T bufstrlen = ml_get_buf_len(buf, lnum);\n+    kv_concat_len(contents, bufstr, (size_t)bufstrlen);",
            "html_url": "https://github.com/neovim/neovim/pull/33720#discussion_r2068773892",
            "id": 2068773892,
            "in_reply_to_id": 2067561075,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57TvwE",
            "original_commit_id": "96351ae64d87f77bcac5039b4adf9698586e7156",
            "original_line": 1051,
            "original_position": 29,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": 2807253809,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33720",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068773892/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-30T14:22:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068773892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33720#discussion_r2068801088"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33720"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068801088"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  if (sb == NULL || buf->b_ml.ml_flags & ML_EMPTY) {\r\n```",
            "commit_id": "6375726d1f8d2ac9c3577a6fdc0e9cddecacc743",
            "created_at": "2025-04-30T14:37:24Z",
            "diff_hunk": "@@ -4154,3 +4154,55 @@ void buf_set_changedtick(buf_T *const buf, const varnumber_T changedtick)\n                            &old_val);\n   }\n }\n+\n+/// Read the given buffer contents into a string.\n+void read_buffer_into(buf_T *buf, linenr_T start, linenr_T end, StringBuilder *sb)\n+  FUNC_ATTR_NONNULL_ARG(1)\n+{\n+  if (sb == NULL) {\n+    return;\n+  }\n+\n+  if (buf->b_ml.ml_flags & ML_EMPTY) {",
            "html_url": "https://github.com/neovim/neovim/pull/33720#discussion_r2068801088",
            "id": 2068801088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57T2ZA",
            "original_commit_id": "2171c7915a554b587619cbabbdec9e686318906d",
            "original_line": 4165,
            "original_position": 13,
            "original_start_line": 4162,
            "path": "src/nvim/buffer.c",
            "position": null,
            "pull_request_review_id": 2807301253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33720",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068801088/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-30T14:37:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2068801088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I think this isn't exactly the best behaviour this feature could have. In my opinion, the best behaviour would be to send the data to the process running in the PTY, and not to the PTY itself (this is what I failed to implement in https://github.com/neovim/neovim/pull/22374 ).\r\n\r\nAn example where what this PR implements likely doesn't have the expected behavior is when piping to `sudo cat` - here, the buffer would end up being fed to `sudo` instead of `cat`.\r\n\r\nThe reason I'm raising this concern here is not that I want someone else to implement the \"right\" behavior for me, but that I'd like to see the current behavior be documented as temporary, so that if/when the \"right\" behavior gets implemented it won't be considered a breaking change.\r\n\r\nSo here are my questions:\r\n- Do you agree that it'd be better to pipe the buffer to the process rather than the PTY?\r\n- If yes, would it be okay to document that as the end-goal of this piping feature, so that future changes aren't considered breaking?",
            "created_at": "2025-05-04T16:24:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/33720#issuecomment-2849300243",
            "id": 2849300243,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33720",
            "node_id": "IC_kwDOAPphoM6p1N8T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849300243/reactions"
            },
            "updated_at": "2025-05-04T16:24:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849300243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What if there isn't an associated process?  For example, as described in https://github.com/neovim/neovim/issues/30415.\r\n\r\nI think piping it to the process could be useful, but sending it to the PTY directly is also useful.",
            "created_at": "2025-05-04T16:50:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/33720#issuecomment-2849310462",
            "id": 2849310462,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33720",
            "node_id": "IC_kwDOAPphoM6p1Qb-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849310462/reactions"
            },
            "updated_at": "2025-05-04T16:50:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849310462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4",
                "events_url": "https://api.github.com/users/tmccombs/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmccombs/followers",
                "following_url": "https://api.github.com/users/tmccombs/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmccombs",
                "id": 2541726,
                "login": "tmccombs",
                "node_id": "MDQ6VXNlcjI1NDE3MjY=",
                "organizations_url": "https://api.github.com/users/tmccombs/orgs",
                "received_events_url": "https://api.github.com/users/tmccombs/received_events",
                "repos_url": "https://api.github.com/users/tmccombs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmccombs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh, I missed that #30415 was the original goal for #33720. And re-reading the PR properly, it seems that's not the only thing I missed given nvim_open_term is not connected to a process by default, which means the concerns I'm raising are completely moot.\r\n\r\nSorry for the noise 🙈",
            "created_at": "2025-05-04T17:23:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/33720#issuecomment-2849326071",
            "id": 2849326071,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33720",
            "node_id": "IC_kwDOAPphoM6p1UP3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849326071/reactions"
            },
            "updated_at": "2025-05-04T17:23:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849326071",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33720/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33720/commits",
    "created_at": "2025-04-29T14:32:30Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33720.diff",
    "draft": false,
    "head": {
        "label": "gpanders:push-uqqpvpyuslpo",
        "ref": "push-uqqpvpyuslpo",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2025-05-01T15:06:11Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 306075,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2025-01-11T19:57:11Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "6375726d1f8d2ac9c3577a6fdc0e9cddecacc743",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33720",
    "id": 2489099872,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33720",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "71f3a9c5900fa1882a77f2300baac462a5bf480f",
    "merged_at": "2025-04-30T21:34:23Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6UXKZg",
    "number": 33720,
    "patch_url": "https://github.com/neovim/neovim/pull/33720.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33720/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/6375726d1f8d2ac9c3577a6fdc0e9cddecacc743",
    "title": "feat(terminal): parse current buffer contents in nvim_open_term()",
    "updated_at": "2025-05-04T17:23:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33720",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    }
}