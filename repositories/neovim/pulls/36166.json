{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/36166/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/36166/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/36166"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/36166"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/36166/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/3e8f26cca93e8c65797f0ccebd1e2d9d86db9f96"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6362,
            "forks_count": 6362,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 2032,
            "open_issues_count": 2032,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-10-20T22:45:38Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 348094,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 93601,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-10-21T02:13:22Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 93601,
            "watchers_count": 93601,
            "web_commit_signoff_required": false
        },
        "sha": "aaec3e5b0dab1e38099abb6371724ab2b199532e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "#35346 introduced a regression where sometimes, if one lsp completion is still running when a second is started (for example by typing or deleting another letter quickly), results become duplicated. This PR introduces a hotfix for this by just deduplicating the entire completion list.\r\n\r\nAt somepoint this whole problem should probably be solved more robustly, but that probably requires changes to the completion C API.\r\n\r\nI've also finally added a test for the original problem described in #35257 and another test for the duplication problem. Since the duplication is not related to `isIncomplete` like originally thought, but a race condition, there is a small chance this test could not actually fail all times without this fix, but the version I implemented here was able to catch this bug at least on my machine and I don't know how to do it better.\r\n",
    "closed_at": "2025-10-20T22:45:38Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2427554590"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427554590"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\ndescribe(\"vim.lsp.completion: omnifunc + 'autocomplete'\", function()\n```",
            "commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "created_at": "2025-10-13T23:37:20Z",
            "diff_hunk": "@@ -1343,3 +1346,84 @@ describe('vim.lsp.completion: integration', function()\n     )\n   end)\n end)\n+\n+describe('vim.lsp.completion: omnifunc', function()",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2427554590",
            "id": 2427554590,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6QsYse",
            "original_commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "original_line": 1350,
            "original_position": 17,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 1,
            "pull_request_review_id": 3333386688,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427554590/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-13T23:37:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427554590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2427573695"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427573695"
                }
            },
            "author_association": "MEMBER",
            "body": "is the 500ms required to wait for the potential duplicate? \n\ndoes this test actually fail if the fix is removed? what is the minimum sleep() required to get a correct failure in that case?",
            "commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "created_at": "2025-10-13T23:54:27Z",
            "diff_hunk": "@@ -1343,3 +1346,84 @@ describe('vim.lsp.completion: integration', function()\n     )\n   end)\n end)\n+\n+describe('vim.lsp.completion: omnifunc', function()\n+  before_each(function()\n+    clear()\n+    exec_lua(create_server_definition)\n+    exec_lua(function()\n+      -- enable buffer and omnifunc autocompletion\n+      -- omnifunc will be the lsp omnifunc\n+      vim.o.complete = '.,o'\n+      vim.o.autocomplete = true\n+    end)\n+  end)\n+\n+  it('merges with other completions', function()\n+    local completion_list = {\n+      isIncomplete = false,\n+      items = {\n+        { label = 'hallo' },\n+      },\n+    }\n+    create_server('dummy', completion_list)\n+\n+    feed('ihello<cr><esc>ih')\n+\n+    retry(nil, nil, function()\n+      local matches = vim.tbl_map(function(m)\n+        return m.word\n+      end, exec_lua('return vim.fn.complete_info({ \"items\" })').items)\n+      eq({ 'hello', 'hallo' }, matches)\n+    end)\n+  end)\n+\n+  it('does not duplicate completions', function()\n+    local completion_list = {\n+      isIncomplete = false,\n+      items = {\n+        { label = 'hello' },\n+      },\n+    }\n+    create_server('dummy', completion_list)\n+\n+    -- wait for one completion request to start and then request another before\n+    -- the first one finishes, then wait for both to finish\n+    feed('ih')\n+    vim.uv.sleep(10)\n+    feed('e')\n+    vim.uv.sleep(500)",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2427573695",
            "id": 2427573695,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6QsdW_",
            "original_commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "original_line": 1395,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 1,
            "pull_request_review_id": 3333422347,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427573695/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-13T23:54:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427573695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2427574065"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427574065"
                }
            },
            "author_association": "MEMBER",
            "body": "appreciate the tests, can you deduplicate them? they are all nearly identical.",
            "commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "created_at": "2025-10-13T23:54:52Z",
            "diff_hunk": "@@ -1343,3 +1346,84 @@ describe('vim.lsp.completion: integration', function()\n     )\n   end)\n end)\n+\n+describe('vim.lsp.completion: omnifunc', function()\n+  before_each(function()\n+    clear()\n+    exec_lua(create_server_definition)\n+    exec_lua(function()\n+      -- enable buffer and omnifunc autocompletion\n+      -- omnifunc will be the lsp omnifunc\n+      vim.o.complete = '.,o'\n+      vim.o.autocomplete = true\n+    end)\n+  end)\n+\n+  it('merges with other completions', function()\n+    local completion_list = {\n+      isIncomplete = false,\n+      items = {\n+        { label = 'hallo' },\n+      },\n+    }\n+    create_server('dummy', completion_list)\n+\n+    feed('ihello<cr><esc>ih')\n+\n+    retry(nil, nil, function()\n+      local matches = vim.tbl_map(function(m)\n+        return m.word\n+      end, exec_lua('return vim.fn.complete_info({ \"items\" })').items)\n+      eq({ 'hello', 'hallo' }, matches)\n+    end)\n+  end)\n+\n+  it('does not duplicate completions', function()\n+    local completion_list = {\n+      isIncomplete = false,\n+      items = {\n+        { label = 'hello' },\n+      },\n+    }\n+    create_server('dummy', completion_list)\n+\n+    -- wait for one completion request to start and then request another before\n+    -- the first one finishes, then wait for both to finish\n+    feed('ih')\n+    vim.uv.sleep(10)\n+    feed('e')\n+    vim.uv.sleep(500)\n+\n+    retry(nil, nil, function()\n+      local matches = vim.tbl_map(function(m)\n+        return m.word\n+      end, exec_lua('return vim.fn.complete_info({ \"items\" })').items)\n+      eq({ 'hello' }, matches)\n+    end)\n+  end)\n+\n+  it('fuzzy matches', function()",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2427574065",
            "id": 2427574065,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Qsdcx",
            "original_commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "original_line": 1405,
            "original_position": 72,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 1,
            "pull_request_review_id": 3333422732,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427574065/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-13T23:54:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2427574065",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2428728004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2428728004"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes, some delay is required, the bug arises from `h` triggering a completion, then `e` triggering another while the first isn't done, to see that we need to wait for both to be done. That's also why I added the 200ms delay in the in-process server.\r\n\r\nIt does fail without the fix, at least on my machine. I'll try and see what the smallest number are that I can plug in there and still get the test to fail.",
            "commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "created_at": "2025-10-14T10:54:14Z",
            "diff_hunk": "@@ -1343,3 +1346,84 @@ describe('vim.lsp.completion: integration', function()\n     )\n   end)\n end)\n+\n+describe('vim.lsp.completion: omnifunc', function()\n+  before_each(function()\n+    clear()\n+    exec_lua(create_server_definition)\n+    exec_lua(function()\n+      -- enable buffer and omnifunc autocompletion\n+      -- omnifunc will be the lsp omnifunc\n+      vim.o.complete = '.,o'\n+      vim.o.autocomplete = true\n+    end)\n+  end)\n+\n+  it('merges with other completions', function()\n+    local completion_list = {\n+      isIncomplete = false,\n+      items = {\n+        { label = 'hallo' },\n+      },\n+    }\n+    create_server('dummy', completion_list)\n+\n+    feed('ihello<cr><esc>ih')\n+\n+    retry(nil, nil, function()\n+      local matches = vim.tbl_map(function(m)\n+        return m.word\n+      end, exec_lua('return vim.fn.complete_info({ \"items\" })').items)\n+      eq({ 'hello', 'hallo' }, matches)\n+    end)\n+  end)\n+\n+  it('does not duplicate completions', function()\n+    local completion_list = {\n+      isIncomplete = false,\n+      items = {\n+        { label = 'hello' },\n+      },\n+    }\n+    create_server('dummy', completion_list)\n+\n+    -- wait for one completion request to start and then request another before\n+    -- the first one finishes, then wait for both to finish\n+    feed('ih')\n+    vim.uv.sleep(10)\n+    feed('e')\n+    vim.uv.sleep(500)",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2428728004",
            "id": 2428728004,
            "in_reply_to_id": 2427573695,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Qw3LE",
            "original_commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "original_line": 1395,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 1,
            "pull_request_review_id": 3334994772,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2428728004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-14T10:54:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2428728004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2428807145"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2428807145"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I reduced the delay significantly and made it an option for the server, it still catches both issues, at least locally.",
            "commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "created_at": "2025-10-14T11:26:41Z",
            "diff_hunk": "@@ -1343,3 +1346,84 @@ describe('vim.lsp.completion: integration', function()\n     )\n   end)\n end)\n+\n+describe('vim.lsp.completion: omnifunc', function()\n+  before_each(function()\n+    clear()\n+    exec_lua(create_server_definition)\n+    exec_lua(function()\n+      -- enable buffer and omnifunc autocompletion\n+      -- omnifunc will be the lsp omnifunc\n+      vim.o.complete = '.,o'\n+      vim.o.autocomplete = true\n+    end)\n+  end)\n+\n+  it('merges with other completions', function()\n+    local completion_list = {\n+      isIncomplete = false,\n+      items = {\n+        { label = 'hallo' },\n+      },\n+    }\n+    create_server('dummy', completion_list)\n+\n+    feed('ihello<cr><esc>ih')\n+\n+    retry(nil, nil, function()\n+      local matches = vim.tbl_map(function(m)\n+        return m.word\n+      end, exec_lua('return vim.fn.complete_info({ \"items\" })').items)\n+      eq({ 'hello', 'hallo' }, matches)\n+    end)\n+  end)\n+\n+  it('does not duplicate completions', function()\n+    local completion_list = {\n+      isIncomplete = false,\n+      items = {\n+        { label = 'hello' },\n+      },\n+    }\n+    create_server('dummy', completion_list)\n+\n+    -- wait for one completion request to start and then request another before\n+    -- the first one finishes, then wait for both to finish\n+    feed('ih')\n+    vim.uv.sleep(10)\n+    feed('e')\n+    vim.uv.sleep(500)",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2428807145",
            "id": 2428807145,
            "in_reply_to_id": 2427573695,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6QxKfp",
            "original_commit_id": "99d61214188b47627dfd46131c86549be49bcad1",
            "original_line": 1395,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 1,
            "pull_request_review_id": 3335106268,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2428807145/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-14T11:26:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2428807145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2429265393"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429265393"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Quick return seems to be better because of the case with unused `matching`",
            "commit_id": "3e8f26cca93e8c65797f0ccebd1e2d9d86db9f96",
            "created_at": "2025-10-14T13:45:58Z",
            "diff_hunk": "@@ -530,9 +533,23 @@ local function trigger(bufnr, clients, ctx)\n           result,\n           encoding\n         )\n+\n         vim.list_extend(matches, client_matches)\n       end\n     end\n+\n+    --- @type table[]\n+    local prev_matches = vim.fn.complete_info({ 'items', 'matches' })['items']\n+\n+    --- @param prev_match table\n+    prev_matches = vim.tbl_filter(function(prev_match)\n+      local client_id = vim.tbl_get(prev_match, 'user_data', 'nvim', 'lsp', 'client_id')",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2429265393",
            "id": 2429265393,
            "line": 546,
            "node_id": "PRRC_kwDOAPphoM6Qy6Xx",
            "original_commit_id": "75080e79ce3cd5fe3f5830b2898eb3ec6d15a7c2",
            "original_line": 546,
            "original_position": 48,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": 48,
            "pull_request_review_id": 3335792708,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429265393/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-14T13:45:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429265393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2429319935"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429319935"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Do you mean returning early when `client_id` is set but not in `responses` to ignore `match` in that case? I'll have to check whether or not old lsp results get their `match` field set.\r\n\r\nIf that's not what you mean please elaborate.",
            "commit_id": "3e8f26cca93e8c65797f0ccebd1e2d9d86db9f96",
            "created_at": "2025-10-14T14:00:48Z",
            "diff_hunk": "@@ -530,9 +533,23 @@ local function trigger(bufnr, clients, ctx)\n           result,\n           encoding\n         )\n+\n         vim.list_extend(matches, client_matches)\n       end\n     end\n+\n+    --- @type table[]\n+    local prev_matches = vim.fn.complete_info({ 'items', 'matches' })['items']\n+\n+    --- @param prev_match table\n+    prev_matches = vim.tbl_filter(function(prev_match)\n+      local client_id = vim.tbl_get(prev_match, 'user_data', 'nvim', 'lsp', 'client_id')",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2429319935",
            "id": 2429319935,
            "in_reply_to_id": 2429265393,
            "line": 546,
            "node_id": "PRRC_kwDOAPphoM6QzHr_",
            "original_commit_id": "75080e79ce3cd5fe3f5830b2898eb3ec6d15a7c2",
            "original_line": 546,
            "original_position": 48,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": 48,
            "pull_request_review_id": 3335871674,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429319935/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-14T14:00:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429319935",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2429699034"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429699034"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\n      if client_id and responses[client_id] ~= nil then\n        return false\n      end\n      return vim.tbl_get(prev_match, 'match')\n```",
            "commit_id": "75080e79ce3cd5fe3f5830b2898eb3ec6d15a7c2",
            "created_at": "2025-10-14T16:00:04Z",
            "diff_hunk": "@@ -530,9 +533,23 @@ local function trigger(bufnr, clients, ctx)\n           result,\n           encoding\n         )\n+\n         vim.list_extend(matches, client_matches)\n       end\n     end\n+\n+    --- @type table[]\n+    local prev_matches = vim.fn.complete_info({ 'items', 'matches' })['items']\n+\n+    --- @param prev_match table\n+    prev_matches = vim.tbl_filter(function(prev_match)\n+      local client_id = vim.tbl_get(prev_match, 'user_data', 'nvim', 'lsp', 'client_id')\n+      local matching = vim.tbl_get(prev_match, 'match')\n+      return (not client_id or responses[client_id] == nil) and matching",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2429699034",
            "id": 2429699034,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Q0kPa",
            "original_commit_id": "75080e79ce3cd5fe3f5830b2898eb3ec6d15a7c2",
            "original_line": 548,
            "original_position": 50,
            "original_start_line": 547,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": 1,
            "pull_request_review_id": 3336414002,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429699034/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-14T16:00:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429699034",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/36166#discussion_r2429704342"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/36166"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429704342"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Simply I meant nothing more than a formal change suggested below. ",
            "commit_id": "3e8f26cca93e8c65797f0ccebd1e2d9d86db9f96",
            "created_at": "2025-10-14T16:01:59Z",
            "diff_hunk": "@@ -530,9 +533,23 @@ local function trigger(bufnr, clients, ctx)\n           result,\n           encoding\n         )\n+\n         vim.list_extend(matches, client_matches)\n       end\n     end\n+\n+    --- @type table[]\n+    local prev_matches = vim.fn.complete_info({ 'items', 'matches' })['items']\n+\n+    --- @param prev_match table\n+    prev_matches = vim.tbl_filter(function(prev_match)\n+      local client_id = vim.tbl_get(prev_match, 'user_data', 'nvim', 'lsp', 'client_id')",
            "html_url": "https://github.com/neovim/neovim/pull/36166#discussion_r2429704342",
            "id": 2429704342,
            "in_reply_to_id": 2429265393,
            "line": 546,
            "node_id": "PRRC_kwDOAPphoM6Q0liW",
            "original_commit_id": "75080e79ce3cd5fe3f5830b2898eb3ec6d15a7c2",
            "original_line": 546,
            "original_position": 48,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": 48,
            "pull_request_review_id": 3336422868,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429704342/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-14T16:02:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2429704342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "For me https://github.com/neovim/neovim/pull/35346 also breaks completion candidate matching for LSP servers that set `isIncomplete: true` - for example gopls. I have no opportunity to fully investigate the cause, but it might be worth reverting the workaround instead of adding more performance-costly hotfixes on top of it",
            "created_at": "2025-10-13T21:46:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3399158412",
            "id": 3399158412,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KmwqM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399158412/reactions"
            },
            "updated_at": "2025-10-13T21:46:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399158412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "In what way does it break for you? Does it still show duplicates? I might be able to investigate, fix it and add a test, but for that I need to know what to reproduce, it already wasn't straightforward to reproduce this duplication issue.\r\n\r\nThe performance cost isn't actually that high since we're not expecting thousands of completion items, you are waiting way longer for the lsp to get completion items then you'll ever wait on the deduplication. Like I said, a proper fix would obviously be better but is way more involved and requires API changes, until then being able to combine multiple sources of completion would be enabled by this.",
            "created_at": "2025-10-13T22:10:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3399205626",
            "id": 3399205626,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7Km8L6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399205626/reactions"
            },
            "updated_at": "2025-10-13T22:10:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399205626",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> In what way does it break for you? Does it still show duplicates? I might be able to investigate, fix it and add a test, but for that I need to know what to reproduce, it already wasn't straightforward to reproduce this duplication issue.\r\n\r\nIt breaks item matching after completion is triggered. I suspect this happens because, with `isIncomplete: true`, new results get merged with old ones. Passing 'matches' to `vim.fn.complete_info` returns duplicated entries and doesn't seem to resolve the issue. Again, I haven't had the chance to properly investigate a fix, but the current approach feels hacky and not like the right way to address the original issue.\r\n\r\n\r\nhttps://github.com/user-attachments/assets/6dc49543-efa0-4ead-91bb-7b11912beba3\r\n\r\n",
            "created_at": "2025-10-13T22:23:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3399237531",
            "id": 3399237531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KnD-b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399237531/reactions"
            },
            "updated_at": "2025-10-13T22:23:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399237531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@skewb1k Can you try again now? I scrapped the deduplication, instead replacing all items corresponding to a specific lsp. This should restore the behavior from before the workaround for lsp completions while still preserving other completions.\r\n\r\nAgain, like I said, the entire lsp completion implementation is somewhat hacky, it was also hacky before, when it just replaced all previous completions. This is because lsp is async and the completion subsystem doesn't deal well with that (yet).",
            "created_at": "2025-10-13T23:05:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3399349464",
            "id": 3399349464,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KnfTY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399349464/reactions"
            },
            "updated_at": "2025-10-13T23:05:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399349464",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @skewb1k Can you try again now? I scrapped the deduplication, instead replacing all items corresponding to a specific lsp. This should restore the behavior from before the workaround for lsp completions while still preserving other completions.\r\n\r\nI can confirm this fixes the issue. I'll keep testing it for a while to be sure. The solution still feels a bit hacky, but it's definitely better to have things working at least somehow :)",
            "created_at": "2025-10-13T23:14:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3399365098",
            "id": 3399365098,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KnjHq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399365098/reactions"
            },
            "updated_at": "2025-10-13T23:14:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3399365098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> If you can point out concrete issues please do. Vaguely alluding to problems won't get them fixed.\r\n\r\nWhat I meant to say was just that replacing the entire completion item list isn't much less \"hacky\" then what needs to be done to preserve it, not that there's anything actually wrong. Sorry for coming across a bit mean, that was not my intention.\r\n\r\n> I'd probably go with something like this\r\n\r\nDo you want me to change it or is it fine for now?\r\n\r\nI'll address the other comments now.",
            "created_at": "2025-10-14T10:50:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3401216026",
            "id": 3401216026,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KunAa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401216026/reactions"
            },
            "updated_at": "2025-10-14T10:50:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401216026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What I meant to say was just that replacing the entire completion item list isn't much less \"hacky\" then what needs to be done to preserve it\r\n\r\nI think the idea that one can preserve existing items for the same client is inherently incompatible with how the protocol works. If you triggered completion at `h|` for client 1, and re-trigger it again on `he|` - also for client 1 - then the new result must replace the entire previous result from the same client because the new result can both add and remove items.\r\n\r\nThe solution you ended up with that only retains items for clients that aren't part of the new result is correct.\r\nThe part that might be hacky and that I'm unsure of is how the client side matching/sorting behaves. E.g. if you had `h|` with results `hello` and `hallo` and you type `ha|`, does `vim.fn.complete_info({ 'items', 'matches' })['items']` return the reduced result (`hallo`), or does it then still display both?\r\n\r\n> Do you want me to change it or is it fine for now?\r\n\r\nFine to keep as is too. I don't use multi-clients so I can't say if retaining the old results at the start or the bottom of the candidates is more appropriate.",
            "created_at": "2025-10-14T10:58:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3401237816",
            "id": 3401237816,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KusU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401237816/reactions"
            },
            "updated_at": "2025-10-14T11:02:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401237816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think the idea that one can preserve existing items for the same client is inherently incompatible with how the protocol works.\r\n\r\nCompletely agree, I just thought it'd be way harder to deal with that than it actually turned out to be.\r\n\r\n> I can't say if retaining the old results at the start or the bottom of the candidates is more appropriate.\r\n\r\nI guess ideally we insert the items where they were before, according to the docs the items are supposed to appear in the order of the sources specified in `vim.o.complete`. While I use multiple sources (or rather will now), I don't care about the order, fuzzy matching works well enough. Maybe someone else has stronger opinions about that.",
            "created_at": "2025-10-14T11:33:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3401353649",
            "id": 3401353649,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KvImx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401353649/reactions"
            },
            "updated_at": "2025-10-14T11:33:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401353649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> does vim.fn.complete_info({ 'items', 'matches' })['items'] return the reduced result (hallo), or does it then still display both?\r\n\r\nActually, good point, I just tested it and I think we do also need to filter on `match.match`, the changes did fix lsp related duplication and fuzzy matching, but in\r\n```\r\nhallo\r\nhello\r\n\r\n^\r\n```\r\ntyping `ha` fast will still show `hallo` and `hello` with lsps and buffer completion, and just `hallo` with only buffer completion.\r\n\r\nI'll fix it and modify the tests again.",
            "created_at": "2025-10-14T11:42:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3401378531",
            "id": 3401378531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KvOrj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401378531/reactions"
            },
            "updated_at": "2025-10-14T11:42:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401378531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Turns out we need to get `cursor_col` and `line` later, otherwise we can still run into issues. I also did switch to filtering at the end like you suggested, but after testing decided to still put new items at the end, because otherwise the shown completion list shifts around while being displayed, so what you'd select with `<C-n>` might change while you press it.\r\n\r\nEverything should work now, but with how it went this far there might still be edge cases I haven't thought of/didn't encounter myself.",
            "created_at": "2025-10-14T13:29:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3401874033",
            "id": 3401874033,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7KxHpx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401874033/reactions"
            },
            "updated_at": "2025-10-14T13:29:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3401874033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "waiting for https://github.com/neovim/neovim/pull/36166#discussion_r2429699034",
            "created_at": "2025-10-17T21:45:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3417340435",
            "id": 3417340435,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7LsHoT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417340435/reactions"
            },
            "updated_at": "2025-10-17T21:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417340435",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, I was a busy the last few days. Added!",
            "created_at": "2025-10-17T22:24:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3417415517",
            "id": 3417415517,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7LsZ9d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 2,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417415517/reactions"
            },
            "updated_at": "2025-10-17T22:24:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417415517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "zig ci failure:\r\n\r\n```\r\nFAILED   test/functional/plugin/lsp/completion_spec.lua @ 1389: vim.lsp.completion: omnifunc + 'autocomplete' fuzzy matches without duplication\r\n./test/functional/plugin/lsp/completion_spec.lua:1376: retry() attempts: 125\r\n./test/functional/plugin/lsp/completion_spec.lua:1380: Expected objects to be the same.\r\nPassed in:\r\n(table: 0x6000a4f0ddc0) { }\r\nExpected:\r\n(table: 0x600134c55280) {\r\n *[1] = 'hello' }\r\n\r\nstack traceback:\r\n\t./test/testutil.lua:89: in function 'retry'\r\n\t./test/functional/plugin/lsp/completion_spec.lua:1376: in function 'assert_matches'\r\n\t./test/functional/plugin/lsp/completion_spec.lua:1396: in function <./test/functional/plugin/lsp/completion_spec.lua:1389>\r\n```",
            "created_at": "2025-10-17T23:26:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3417504756",
            "id": 3417504756,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7Lsvv0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417504756/reactions"
            },
            "updated_at": "2025-10-17T23:26:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417504756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Fixed, apparently I made the delay too tight for some setups.",
            "created_at": "2025-10-18T00:11:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/36166#issuecomment-3417549605",
            "id": 3417549605,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
            "node_id": "IC_kwDOAPphoM7Ls6sl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417549605/reactions"
            },
            "updated_at": "2025-10-18T00:11:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3417549605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/36166/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/36166/commits",
    "created_at": "2025-10-13T21:02:29Z",
    "diff_url": "https://github.com/neovim/neovim/pull/36166.diff",
    "draft": false,
    "head": {
        "label": "tbung:lsp-completion-workaround-hotfix",
        "ref": "lsp-completion-workaround-hotfix",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tbung/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tbung/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tbung/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tbung/neovim/branches{/branch}",
            "clone_url": "https://github.com/tbung/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tbung/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tbung/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tbung/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tbung/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tbung/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tbung/neovim/contributors",
            "created_at": "2023-09-27T14:45:42Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tbung/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tbung/neovim/downloads",
            "events_url": "https://api.github.com/repos/tbung/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tbung/neovim/forks",
            "full_name": "tbung/neovim",
            "git_commits_url": "https://api.github.com/repos/tbung/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tbung/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tbung/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tbung/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/tbung/neovim/hooks",
            "html_url": "https://github.com/tbung/neovim",
            "id": 697348391,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tbung/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tbung/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tbung/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tbung/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tbung/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/tbung/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tbung/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tbung/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKZCxJw",
            "notifications_url": "https://api.github.com/repos/tbung/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
                "events_url": "https://api.github.com/users/tbung/events{/privacy}",
                "followers_url": "https://api.github.com/users/tbung/followers",
                "following_url": "https://api.github.com/users/tbung/following{/other_user}",
                "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tbung",
                "id": 4084982,
                "login": "tbung",
                "node_id": "MDQ6VXNlcjQwODQ5ODI=",
                "organizations_url": "https://api.github.com/users/tbung/orgs",
                "received_events_url": "https://api.github.com/users/tbung/received_events",
                "repos_url": "https://api.github.com/users/tbung/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tbung",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tbung/neovim/pulls{/number}",
            "pushed_at": "2025-10-17T23:49:22Z",
            "releases_url": "https://api.github.com/repos/tbung/neovim/releases{/id}",
            "size": 336546,
            "ssh_url": "git@github.com:tbung/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/tbung/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tbung/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tbung/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tbung/neovim/subscription",
            "svn_url": "https://github.com/tbung/neovim",
            "tags_url": "https://api.github.com/repos/tbung/neovim/tags",
            "teams_url": "https://api.github.com/repos/tbung/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tbung/neovim/git/trees{/sha}",
            "updated_at": "2025-05-13T15:19:28Z",
            "url": "https://api.github.com/repos/tbung/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "3e8f26cca93e8c65797f0ccebd1e2d9d86db9f96",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
            "events_url": "https://api.github.com/users/tbung/events{/privacy}",
            "followers_url": "https://api.github.com/users/tbung/followers",
            "following_url": "https://api.github.com/users/tbung/following{/other_user}",
            "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tbung",
            "id": 4084982,
            "login": "tbung",
            "node_id": "MDQ6VXNlcjQwODQ5ODI=",
            "organizations_url": "https://api.github.com/users/tbung/orgs",
            "received_events_url": "https://api.github.com/users/tbung/received_events",
            "repos_url": "https://api.github.com/users/tbung/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tbung",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/36166",
    "id": 2911507408,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/36166",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b67eff38fe19876ab228007897224ec04b58aa40",
    "merged_at": "2025-10-20T22:45:38Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6tihPQ",
    "number": 36166,
    "patch_url": "https://github.com/neovim/neovim/pull/36166.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/36166/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/3e8f26cca93e8c65797f0ccebd1e2d9d86db9f96",
    "title": "fix(lsp): deduplicate completion items",
    "updated_at": "2025-10-20T23:27:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/36166",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4084982?v=4",
        "events_url": "https://api.github.com/users/tbung/events{/privacy}",
        "followers_url": "https://api.github.com/users/tbung/followers",
        "following_url": "https://api.github.com/users/tbung/following{/other_user}",
        "gists_url": "https://api.github.com/users/tbung/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tbung",
        "id": 4084982,
        "login": "tbung",
        "node_id": "MDQ6VXNlcjQwODQ5ODI=",
        "organizations_url": "https://api.github.com/users/tbung/orgs",
        "received_events_url": "https://api.github.com/users/tbung/received_events",
        "repos_url": "https://api.github.com/users/tbung/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tbung/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tbung/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tbung",
        "user_view_type": "public"
    }
}