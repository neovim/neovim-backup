{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31904/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31904/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31904"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31904"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31904/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a9071f4d9050b55e1c21b51486df63649188e0ab"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5811,
            "forks_count": 5811,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1839,
            "open_issues_count": 1839,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T23:17:24Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 303311,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85218,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-14T02:06:03Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85218,
            "watchers_count": 85218,
            "web_commit_signoff_required": false
        },
        "sha": "c4b658fed8d96a4c4098ce59b01b228ef0bda62e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Using `grl` in Normal mode over a Lua code block section will now run it. Mnemonic: \"go run lua\"(?). Could also be matched by a `grl` default binding to `codelens.run()` in the future.\r\n\r\nThis commit also tidies up some of the docs, making previously invalid Lua code examples valid.\r\n\r\n<img width=\"455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d8136476-efb5-4653-bee7-97c296e8e661\" />\r\n",
    "closed_at": "2025-01-09T16:36:16Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1905829720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905829720"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nTo try it out, select the above code and source it with `:'<,'>lua` (or `grl`), then run this command in a :terminal buffer: >\r\n```",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T17:35:51Z",
            "diff_hunk": "@@ -165,8 +165,8 @@ directory indicated in the request. >lua\n     end\n   })\n \n-To try it out, select the above code and source it with `:'<,'>lua`, then run\n-this command in a :terminal buffer: >\n+To try it out, select the above code and source it with `:'<,'>lua` (or just\n+run it with `grl`), then run this command in a :terminal buffer: >",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1905829720",
            "id": 1905829720,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xmKdY",
            "original_commit_id": "955509813f1fc60d9c18b1ff328867aa0be3f583",
            "original_line": 169,
            "original_position": 7,
            "original_start_line": 168,
            "path": "runtime/doc/terminal.txt",
            "position": null,
            "pull_request_review_id": 2535006167,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905829720/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-07T17:35:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905829720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1905844127"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905844127"
                }
            },
            "author_association": "MEMBER",
            "body": "we can also detect vimscript, right? then run it with `vim.cmd`",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T17:48:25Z",
            "diff_hunk": "@@ -33,3 +33,46 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples\n+---@type table<integer, string>\n+local codes = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#eq? @_lang \"lua\"))\n+]]\n+)\n+\n+for _, match, _ in query:iter_matches(tree:root(), 0, 0, -1) do\n+  for id, nodes in pairs(match) do\n+    local name = query.captures[id]\n+    local node = nodes[1]\n+    local start, _, end_ = node:parent():range() --[[@as integer]]\n+\n+    if name == 'code' then\n+      vim.api.nvim_buf_set_extmark(0, 1, start, 0, {\n+        virt_text = { { 'Run with `grl`', 'LspCodeLens' } },\n+      })\n+      local code = vim.treesitter.get_node_text(node, 0)\n+      for i = start, end_ do\n+        codes[i] = code\n+      end\n+    end\n+  end\n+end\n+\n+vim.keymap.set('n', 'grl', function()\n+  local pos = vim.api.nvim_win_get_cursor(0)[1]\n+  local code = codes[pos]\n+  if code then\n+    vim.cmd.lua(code)",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1905844127",
            "id": 1905844127,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xmN-f",
            "original_commit_id": "955509813f1fc60d9c18b1ff328867aa0be3f583",
            "original_line": 74,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": null,
            "pull_request_review_id": 2535030115,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905844127/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T17:48:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905844127",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1905850146"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905850146"
                }
            },
            "author_association": "MEMBER",
            "body": "And `bash` with `:term?` (that sounds... risky, though 😬 )",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T17:54:12Z",
            "diff_hunk": "@@ -33,3 +33,46 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples\n+---@type table<integer, string>\n+local codes = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#eq? @_lang \"lua\"))\n+]]\n+)\n+\n+for _, match, _ in query:iter_matches(tree:root(), 0, 0, -1) do\n+  for id, nodes in pairs(match) do\n+    local name = query.captures[id]\n+    local node = nodes[1]\n+    local start, _, end_ = node:parent():range() --[[@as integer]]\n+\n+    if name == 'code' then\n+      vim.api.nvim_buf_set_extmark(0, 1, start, 0, {\n+        virt_text = { { 'Run with `grl`', 'LspCodeLens' } },\n+      })\n+      local code = vim.treesitter.get_node_text(node, 0)\n+      for i = start, end_ do\n+        codes[i] = code\n+      end\n+    end\n+  end\n+end\n+\n+vim.keymap.set('n', 'grl', function()\n+  local pos = vim.api.nvim_win_get_cursor(0)[1]\n+  local code = codes[pos]\n+  if code then\n+    vim.cmd.lua(code)",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1905850146",
            "id": 1905850146,
            "in_reply_to_id": 1905844127,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xmPci",
            "original_commit_id": "955509813f1fc60d9c18b1ff328867aa0be3f583",
            "original_line": 74,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": null,
            "pull_request_review_id": 2535040167,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905850146/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T17:54:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905850146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1905889706"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905889706"
                }
            },
            "author_association": "MEMBER",
            "body": "Would that rely on the user's `shell` being set to bash?",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T18:33:41Z",
            "diff_hunk": "@@ -33,3 +33,46 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples\n+---@type table<integer, string>\n+local codes = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#eq? @_lang \"lua\"))\n+]]\n+)\n+\n+for _, match, _ in query:iter_matches(tree:root(), 0, 0, -1) do\n+  for id, nodes in pairs(match) do\n+    local name = query.captures[id]\n+    local node = nodes[1]\n+    local start, _, end_ = node:parent():range() --[[@as integer]]\n+\n+    if name == 'code' then\n+      vim.api.nvim_buf_set_extmark(0, 1, start, 0, {\n+        virt_text = { { 'Run with `grl`', 'LspCodeLens' } },\n+      })\n+      local code = vim.treesitter.get_node_text(node, 0)\n+      for i = start, end_ do\n+        codes[i] = code\n+      end\n+    end\n+  end\n+end\n+\n+vim.keymap.set('n', 'grl', function()\n+  local pos = vim.api.nvim_win_get_cursor(0)[1]\n+  local code = codes[pos]\n+  if code then\n+    vim.cmd.lua(code)",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1905889706",
            "id": 1905889706,
            "in_reply_to_id": 1905844127,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xmZGq",
            "original_commit_id": "955509813f1fc60d9c18b1ff328867aa0be3f583",
            "original_line": 74,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": null,
            "pull_request_review_id": 2535109974,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905889706/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T18:33:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905889706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1905943773"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905943773"
                }
            },
            "author_association": "MEMBER",
            "body": "You mean our examples are not POSIX compatible? 😤",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T19:27:06Z",
            "diff_hunk": "@@ -33,3 +33,46 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples\n+---@type table<integer, string>\n+local codes = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#eq? @_lang \"lua\"))\n+]]\n+)\n+\n+for _, match, _ in query:iter_matches(tree:root(), 0, 0, -1) do\n+  for id, nodes in pairs(match) do\n+    local name = query.captures[id]\n+    local node = nodes[1]\n+    local start, _, end_ = node:parent():range() --[[@as integer]]\n+\n+    if name == 'code' then\n+      vim.api.nvim_buf_set_extmark(0, 1, start, 0, {\n+        virt_text = { { 'Run with `grl`', 'LspCodeLens' } },\n+      })\n+      local code = vim.treesitter.get_node_text(node, 0)\n+      for i = start, end_ do\n+        codes[i] = code\n+      end\n+    end\n+  end\n+end\n+\n+vim.keymap.set('n', 'grl', function()\n+  local pos = vim.api.nvim_win_get_cursor(0)[1]\n+  local code = codes[pos]\n+  if code then\n+    vim.cmd.lua(code)",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1905943773",
            "id": 1905943773,
            "in_reply_to_id": 1905844127,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xmmTd",
            "original_commit_id": "955509813f1fc60d9c18b1ff328867aa0be3f583",
            "original_line": 74,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": null,
            "pull_request_review_id": 2535201802,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905943773/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T19:27:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905943773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1905944389"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905944389"
                }
            },
            "author_association": "MEMBER",
            "body": "(But, yeah, this is just one of the many reasons this would be Bad Idea Jeans.)",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T19:27:44Z",
            "diff_hunk": "@@ -33,3 +33,46 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples\n+---@type table<integer, string>\n+local codes = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#eq? @_lang \"lua\"))\n+]]\n+)\n+\n+for _, match, _ in query:iter_matches(tree:root(), 0, 0, -1) do\n+  for id, nodes in pairs(match) do\n+    local name = query.captures[id]\n+    local node = nodes[1]\n+    local start, _, end_ = node:parent():range() --[[@as integer]]\n+\n+    if name == 'code' then\n+      vim.api.nvim_buf_set_extmark(0, 1, start, 0, {\n+        virt_text = { { 'Run with `grl`', 'LspCodeLens' } },\n+      })\n+      local code = vim.treesitter.get_node_text(node, 0)\n+      for i = start, end_ do\n+        codes[i] = code\n+      end\n+    end\n+  end\n+end\n+\n+vim.keymap.set('n', 'grl', function()\n+  local pos = vim.api.nvim_win_get_cursor(0)[1]\n+  local code = codes[pos]\n+  if code then\n+    vim.cmd.lua(code)",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1905944389",
            "id": 1905944389,
            "in_reply_to_id": 1905844127,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xmmdF",
            "original_commit_id": "955509813f1fc60d9c18b1ff328867aa0be3f583",
            "original_line": 74,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": null,
            "pull_request_review_id": 2535202854,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905944389/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T19:27:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905944389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1906104329"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906104329"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n-- Add \"runnables\" for Lua/Vimscript code examples.\r\n```",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T22:15:33Z",
            "diff_hunk": "@@ -33,3 +33,51 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1906104329",
            "id": 1906104329,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xnNgJ",
            "original_commit_id": "86c364e95f5aadf991cb6b7e0daabec644171f24",
            "original_line": 37,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": null,
            "pull_request_review_id": 2535482945,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906104329/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T22:15:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906104329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1906104782"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906104782"
                }
            },
            "author_association": "MEMBER",
            "body": "Instead of doing this on file-load should it be on-demand, when user invokes `yxx`?",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T22:16:09Z",
            "diff_hunk": "@@ -33,3 +33,51 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples\n+---@type table<integer, { lang: string, code: string }>\n+local code_blocks = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#any-of? @_lang \"lua\" \"vim\")\n+    (#set! @code lang @_lang))\n+]]\n+)\n+\n+for _, match, metadata in query:iter_matches(tree:root(), 0, 0, -1) do",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1906104782",
            "id": 1906104782,
            "line": 52,
            "node_id": "PRRC_kwDOAPphoM5xnNnO",
            "original_commit_id": "86c364e95f5aadf991cb6b7e0daabec644171f24",
            "original_line": 52,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": 23,
            "pull_request_review_id": 2535483651,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906104782/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T22:16:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906104782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1906105272"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906105272"
                }
            },
            "author_association": "MEMBER",
            "body": "wrap at 80 chars :>",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T22:16:51Z",
            "diff_hunk": "@@ -165,8 +165,7 @@ directory indicated in the request. >lua\n     end\n   })\n \n-To try it out, select the above code and source it with `:'<,'>lua`, then run\n-this command in a :terminal buffer: >\n+To try it out, select the above code and source it with `:'<,'>lua` (or `yxx`), then run this command in a :terminal buffer: >",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1906105272",
            "id": 1906105272,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xnNu4",
            "original_commit_id": "86c364e95f5aadf991cb6b7e0daabec644171f24",
            "original_line": 168,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/terminal.txt",
            "position": null,
            "pull_request_review_id": 2535484443,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906105272/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T22:16:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906105272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1906116636"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906116636"
                }
            },
            "author_association": "MEMBER",
            "body": "That makes sense- this loop also has the logic for adding the virt text helper. Is it acceptable for that to be done lazily as well?",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T22:31:39Z",
            "diff_hunk": "@@ -33,3 +33,51 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples\n+---@type table<integer, { lang: string, code: string }>\n+local code_blocks = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#any-of? @_lang \"lua\" \"vim\")\n+    (#set! @code lang @_lang))\n+]]\n+)\n+\n+for _, match, metadata in query:iter_matches(tree:root(), 0, 0, -1) do",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1906116636",
            "id": 1906116636,
            "in_reply_to_id": 1906104782,
            "line": 52,
            "node_id": "PRRC_kwDOAPphoM5xnQgc",
            "original_commit_id": "86c364e95f5aadf991cb6b7e0daabec644171f24",
            "original_line": 52,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": 23,
            "pull_request_review_id": 2535502536,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906116636/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T22:31:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906116636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1906164922"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906164922"
                }
            },
            "author_association": "MEMBER",
            "body": "oh wow I missed that, very exciting! added a screenshot to the PR desc.\r\n\r\nlet's leave as \"eager\" then. I expect people will want to disable this once they discover it, we can figure that out later.",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-07T23:47:10Z",
            "diff_hunk": "@@ -33,3 +33,51 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for lua code examples\n+---@type table<integer, { lang: string, code: string }>\n+local code_blocks = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#any-of? @_lang \"lua\" \"vim\")\n+    (#set! @code lang @_lang))\n+]]\n+)\n+\n+for _, match, metadata in query:iter_matches(tree:root(), 0, 0, -1) do",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1906164922",
            "id": 1906164922,
            "in_reply_to_id": 1906104782,
            "line": 52,
            "node_id": "PRRC_kwDOAPphoM5xncS6",
            "original_commit_id": "86c364e95f5aadf991cb6b7e0daabec644171f24",
            "original_line": 52,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": 23,
            "pull_request_review_id": 2535576804,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906164922/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T23:47:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906164922",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31904#discussion_r1906477705"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31904"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906477705"
                }
            },
            "author_association": "MEMBER",
            "body": "Need to remove this mapping in `b:undo_ftplugin`",
            "commit_id": "a9071f4d9050b55e1c21b51486df63649188e0ab",
            "created_at": "2025-01-08T05:05:30Z",
            "diff_hunk": "@@ -33,3 +33,51 @@ end, { buffer = 0, silent = true })\n \n vim.b.undo_ftplugin = (vim.b.undo_ftplugin or '') .. '\\n exe \"nunmap <buffer> gO\"'\n vim.b.undo_ftplugin = vim.b.undo_ftplugin .. ' | call v:lua.vim.treesitter.stop()'\n+\n+-- Add \"runnables\" for Lua/Vimscript code examples.\n+---@type table<integer, { lang: string, code: string }>\n+local code_blocks = {}\n+local tree = vim.treesitter.get_parser():parse()[1]\n+local query = vim.treesitter.query.parse(\n+  'vimdoc',\n+  [[\n+  (codeblock\n+    (language) @_lang\n+    .\n+    (code) @code\n+    (#any-of? @_lang \"lua\" \"vim\")\n+    (#set! @code lang @_lang))\n+]]\n+)\n+\n+for _, match, metadata in query:iter_matches(tree:root(), 0, 0, -1) do\n+  for id, nodes in pairs(match) do\n+    local name = query.captures[id]\n+    local node = nodes[1]\n+    local start, _, end_ = node:parent():range() --[[@as integer]]\n+\n+    if name == 'code' then\n+      vim.api.nvim_buf_set_extmark(0, 1, start, 0, {\n+        virt_text = { { 'Run with `yxx`', 'LspCodeLens' } },\n+      })\n+      local code = vim.treesitter.get_node_text(node, 0)\n+      local lang_node = match[metadata[id].lang][1] --[[@as TSNode]]\n+      local lang = vim.treesitter.get_node_text(lang_node, 0)\n+      for i = start + 1, end_ do\n+        code_blocks[i] = { lang = lang, code = code }\n+      end\n+    end\n+  end\n+end\n+\n+vim.keymap.set('n', 'yxx', function()",
            "html_url": "https://github.com/neovim/neovim/pull/31904#discussion_r1906477705",
            "id": 1906477705,
            "line": 72,
            "node_id": "PRRC_kwDOAPphoM5xooqJ",
            "original_commit_id": "f445db9a906b028f82ce0a9b6c8e40ad2f577db7",
            "original_line": 72,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/ftplugin/help.lua",
            "position": 43,
            "pull_request_review_id": 2536011594,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906477705/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-08T05:05:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1906477705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Note: this could possibly be simplified (in the ftplugin) if we had a general \"treesitter node\" textobject (which would be generally useful).\r\n\r\nNot a blocker, of course; this sort of \"made-to-measure\" code snippet is one of the powers of treesitter!",
            "created_at": "2025-01-07T17:39:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2575877060",
            "id": 2575877060,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6ZiMPE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575877060/reactions"
            },
            "updated_at": "2025-01-07T17:39:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575877060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not a blocker, but would be very nice to establish a generic \"execute code\" operation. https://github.com/tpope/vim-scriptease hints at `g=`. Other ideas: `yx`, `g?`, `g:`.\r\n\r\nThe DWIM version (`g==`, `yxx`, `g??`, `g::`) would run the \"current injection\", so targeting an explicit text object would not be needed.\r\n\r\nSimilar to how `gO` was first used in :help, we can use :help to establish this pattern for other contexts in the future.\r\n\r\nI would suggest `yx` because it's low-friction (although maybe executing code should have some friction...). The implications for this immediate PR would simply be to replace `grl` with `yxx`.",
            "created_at": "2025-01-07T17:46:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2575892872",
            "id": 2575892872,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6ZiQGI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575892872/reactions"
            },
            "updated_at": "2025-01-07T17:54:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575892872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The DWIM version (g==, yxx, g??, g::) would run the \"current injection\", so targeting an explicit text object would not be needed.\r\n\r\nJust to be clear, my comment was meant for \"under the hood\", not as a replacement for the mapping introduced here.",
            "created_at": "2025-01-07T18:36:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2575980782",
            "id": 2575980782,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Zilju",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575980782/reactions"
            },
            "updated_at": "2025-01-07T18:36:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575980782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To document this, we can just add a blurb to `doc/various.txt` similar to what we did for `gO`, something like:\r\n\r\n```\r\n\t\t\t\t\t\t\t*yxx*\r\nyxx\t\t\tExecutes the current code block.\r\n\r\n\t\t\tWorks in |help| buffers.\r\n```\r\n\r\nAnd also perhaps add a line here: https://github.com/neovim/neovim/blob/b12b91c2743954dbe8599caa60e58e5d74aa4e76/runtime/doc/helphelp.txt#L194",
            "created_at": "2025-01-07T22:23:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2576342931",
            "id": 2576342931,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Zj9-T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2576342931/reactions"
            },
            "updated_at": "2025-01-07T22:23:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2576342931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can reliably recreate a crash by running `yxx` on the last code block in `lua-guide` (I suspect it's not due to this PR but that this PR exposed it?)\r\n\r\n```\r\n/Users/dundargoc/programs/neovim/src/nvim/api/command.c:934:17: runtime error: member access within null pointer of type 'buf_T' (aka 'struct file_buffer')\r\n    #0 0x000100e55ce4 in nvim_buf_del_user_command command.c:934\r\n    #1 0x0001018eeeb8 in nlua_api_nvim_buf_del_user_command lua_api_c_bindings.generated.h:1993\r\n    #2 0x0001028a1528 in lj_BC_FUNCC+0x28 (nvim:arm64+0x101a9d528)\r\n    #3 0x0001028b7f2c in lua_pcall lj_api.c:1151\r\n    #4 0x00010194e85c in nlua_typval_exec executor.c:1455\r\n    #5 0x000101952274 in ex_lua executor.c:1681\r\n    #6 0x000101614a10 in execute_cmd0 ex_docmd.c:1711\r\n    #7 0x000101610624 in execute_cmd ex_docmd.c:1793\r\n    #8 0x000100e40610 in nvim_cmd command.c:647\r\n    #9 0x0001018ed710 in nlua_api_nvim_cmd lua_api_c_bindings.generated.h:1780\r\n    #10 0x0001028a1528 in lj_BC_FUNCC+0x28 (nvim:arm64+0x101a9d528)\r\n    #11 0x0001028b7f2c in lua_pcall lj_api.c:1151\r\n    #12 0x000101951264 in nlua_call_ref_ctx executor.c:1593\r\n    #13 0x000101950ccc in nlua_call_ref executor.c:1570\r\n    #14 0x0001017b27b4 in map_execute_lua getchar.c:3205\r\n    #15 0x000101c823b0 in nv_colon normal.c:3185\r\n    #16 0x000101c6c10c in normal_execute normal.c:1244\r\n    #17 0x00010226e3c4 in state_enter state.c:102\r\n    #18 0x000101c4b840 in normal_enter normal.c:522\r\n    #19 0x00010197f580 in main main.c:651\r\n    #20 0x000182fec270  (<unknown module>)\r\n\r\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /Users/dundargoc/programs/neovim/src/nvim/api/command.c:934:17 \r\n```",
            "created_at": "2025-01-07T23:07:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2576397097",
            "id": 2576397097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6ZkLMp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2576397097/reactions"
            },
            "updated_at": "2025-01-07T23:13:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2576397097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "More of a nitpick/not a blocker, but unsure how useful it is to indiscriminately encourage using `yxx` for all codeblocks when half of them don't work without previous context. Example:\r\n\r\n```\r\n>lua Run with `yxx`\r\n    vim.keymap.set('n', '<Leader>pl1', require('plugin').action)\r\n```\r\n\r\nwill just throw an error that \"module plugin not found\". Not a big deal though IMO, and something we can iterate on later on if needed.\r\n\r\nEdit: although perhaps we can get away with saying that users can \"interactively create errors via code docs\" or something?",
            "created_at": "2025-01-07T23:23:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2576414226",
            "id": 2576414226,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6ZkPYS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2576414226/reactions"
            },
            "updated_at": "2025-01-07T23:30:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2576414226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> unsure how useful it is to indiscriminately encourage using `yxx` for all codeblocks when half of them don't work without previous context. ... Not a big deal though IMO, and something we can iterate on later on if needed.\r\n\r\nYes we'll need to iterate on it. Similar to many other cases, these kinds of problems become more obvious/urgent once there is a driver behind them. Now that the code examples are \"alive\", their correctness matters more.",
            "created_at": "2025-01-08T11:44:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2577472363",
            "id": 2577472363,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6ZoRtr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2577472363/reactions"
            },
            "updated_at": "2025-01-08T11:44:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2577472363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I can reliably recreate a crash by running `yxx` on the last code block in `lua-guide`\r\n\r\nFixed in https://github.com/neovim/neovim/pull/31908\r\n\r\nSo only remaining things are \r\n\r\n- docs\r\n- `b:undo_ftplugin`\r\n- bug: reloading a help file with `:edit` adds duplicate codelenses:\r\n    - ![image](https://github.com/user-attachments/assets/def044b4-039c-437f-8f13-5d7db13d3466)\r\n",
            "created_at": "2025-01-08T11:56:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2577493296",
            "id": 2577493296,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6ZoW0w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2577493296/reactions"
            },
            "updated_at": "2025-01-09T16:33:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2577493296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * `b:undo_ftplugin`\r\n> * bug: reloading a help file with `:edit` adds duplicate codelenses:\r\n\r\nThese have now been addressed",
            "created_at": "2025-01-08T20:23:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2578586558",
            "id": 2578586558,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Zshu-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2578586558/reactions"
            },
            "updated_at": "2025-01-08T20:23:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2578586558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We will probably want a test for this, but I'll merge it to start getting feedback. Thanks @ribru17 !",
            "created_at": "2025-01-09T16:34:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580758193",
            "id": 2580758193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z0z6x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580758193/reactions"
            },
            "updated_at": "2025-01-09T16:34:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580758193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In a follow-up, we may want to call it out at the top of `lua-guide.txt` as well! (Sorry, just thought of that.)",
            "created_at": "2025-01-09T16:39:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580773593",
            "id": 2580773593,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z03rZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580773593/reactions"
            },
            "updated_at": "2025-01-09T16:39:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580773593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And while I'm at it, the following produces an error:\r\n```vim\r\n    lua << EOF\r\n      local tbl = {1, 2, 3}\r\n      for k, v in ipairs(tbl) do\r\n        print(v)\r\n      end\r\n    EOF\r\n```",
            "created_at": "2025-01-09T16:41:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580779315",
            "id": 2580779315,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z05Ez",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580779315/reactions"
            },
            "updated_at": "2025-01-09T16:41:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580779315",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Not a blocker, but would be very nice to establish a generic \"execute code\" operation. https://github.com/tpope/vim-scriptease hints at g=. Other ideas: yx, g?, g:.\r\n\r\nI may discard `g?` from the options, as it is used for some plugins to open a help menu, in order to not collide with backwards search `?`.",
            "created_at": "2025-01-09T17:16:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580854149",
            "id": 2580854149,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z1LWF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580854149/reactions"
            },
            "updated_at": "2025-01-09T17:16:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580854149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4975310?v=4",
                "events_url": "https://api.github.com/users/stsewd/events{/privacy}",
                "followers_url": "https://api.github.com/users/stsewd/followers",
                "following_url": "https://api.github.com/users/stsewd/following{/other_user}",
                "gists_url": "https://api.github.com/users/stsewd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stsewd",
                "id": 4975310,
                "login": "stsewd",
                "node_id": "MDQ6VXNlcjQ5NzUzMTA=",
                "organizations_url": "https://api.github.com/users/stsewd/orgs",
                "received_events_url": "https://api.github.com/users/stsewd/received_events",
                "repos_url": "https://api.github.com/users/stsewd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stsewd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stsewd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stsewd",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In a follow-up, we may want to call it out at the top of `lua-guide.txt` as well! (Sorry, just thought of that.)\r\n\r\nConversely, I find the ubiquitous virtual text hint a bit intrusive (and it may conflict with using line conceal for codeblock markers, if we go that route for vimdoc as well).",
            "created_at": "2025-01-09T17:19:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580859936",
            "id": 2580859936,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z1Mwg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580859936/reactions"
            },
            "updated_at": "2025-01-09T17:19:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580859936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I find the ubiquitous virtual text hint a bit intrusive\r\n\r\nYeah I expected that. Will need to think about an answer. OTOH, the current text is very minimal...",
            "created_at": "2025-01-09T17:25:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580870718",
            "id": 2580870718,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z1PY-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580870718/reactions"
            },
            "updated_at": "2025-01-09T17:25:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580870718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> And while I'm at it, the following produces an error:\r\n> \r\n> ```viml\r\n>     lua << EOF\r\n>       local tbl = {1, 2, 3}\r\n>       for k, v in ipairs(tbl) do\r\n>         print(v)\r\n>       end\r\n>     EOF\r\n> ```\r\n\r\nDedenting the code block fixes this error , ill look into a PR soon",
            "created_at": "2025-01-09T17:30:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580884898",
            "id": 2580884898,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z1S2i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580884898/reactions"
            },
            "updated_at": "2025-01-09T17:30:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580884898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just wanted to give some feedback since there wasn't yet any discussion on it. I expected follow-up tweaking (and that is fine).\r\n\r\nTo expand on that (the \"why\"): If you look at more than two or three examples, it's repetitive, and the \"visual noise\" -- albeit admittedly small -- outweighs the perceived usefulness. (It would be different if this were a \"click to run\" icon, where it would have local use on every occurrence.)\r\n\r\nOn the third hand, it seems to me a perfect addition to the context menu (for people who use the mouse)!",
            "created_at": "2025-01-09T17:32:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580886997",
            "id": 2580886997,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z1TXV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580886997/reactions"
            },
            "updated_at": "2025-01-09T17:42:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580886997",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Some kind of \"hover\" functionality; only showing the hint if the cursor is inside the code block for X seconds could be a less intrusive solution? Could also be perceived as more annoying though.",
            "created_at": "2025-01-09T17:32:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580888327",
            "id": 2580888327,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z1TsH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580888327/reactions"
            },
            "updated_at": "2025-01-09T17:33:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580888327",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, `CursorHold` for the current code block only could be an acceptable compromise (possibly with a tweaked message). Would still have the problem with concealed lines, though.",
            "created_at": "2025-01-09T17:36:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2580895385",
            "id": 2580895385,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z1VaZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580895385/reactions"
            },
            "updated_at": "2025-01-09T17:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2580895385",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What is the mnemonic behind `yxx`? I keep seeing it as \"yank special x\" or something. Thankfully it's just for help files but I was wondering if the chosen mapping can have some more thoughts.\r\n\r\nInitial ideas - `grc` ([g]o [r]un the [c]ursor / [c]urrent), `grb` ([g]o [r]un the [b]lock), or something like `grx` come to mind. I'd avoid anything `gx` prefixed because of course that already has a mapping.",
            "created_at": "2025-01-10T05:54:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2581834627",
            "id": 2581834627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z46uD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2581834627/reactions"
            },
            "updated_at": "2025-01-10T05:54:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2581834627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What is the mnemonic behind `yxx`? I keep seeing it as \"yank special x\" or something\r\n\r\n\"Execute\", analogous to `gx`. \"y\" as a general-purpose prefix (like \"g\") is established by https://github.com/tpope/vim-unimpaired , and will be useful for other purposes in the future.\r\n\r\n> `grc` `grb` `grx`\r\n\r\n`gr` is owned by LSP.",
            "created_at": "2025-01-10T18:07:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2583430970",
            "id": 2583430970,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z_Ac6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583430970/reactions"
            },
            "updated_at": "2025-01-10T18:08:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583430970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> \"Execute\", analogous to `gx`. \"y\" as a general-purpose prefix (like \"g\") is established by https://github.com/tpope/vim-unimpaired , and will be useful for other purposes in the future.\r\n\r\n@justinmk, \"y\" is not a general-purpose prefix as it is a `y` operator. Creating Normal mode mapping that starts with it will introduce various issues with Opertor-pending mode mappings. This has small effect in this particular case (as it is local to 'help' buffers only and `xx` is fairly esoteric key combination), but making it a more widespread practice is a different story.\r\n\r\nIf anything, `g=` is a more established key combination for this particular \"execute\" command/operator and doesn't introduce any such conflicts. As [you already suggested](https://github.com/neovim/neovim/pull/31904#issuecomment-2575892872).",
            "created_at": "2025-01-10T18:17:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2583464941",
            "id": 2583464941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z_Ivt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583464941/reactions"
            },
            "updated_at": "2025-01-10T18:17:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583464941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> \"y\" is not a general-purpose prefix as it is a `y` operator. Creating Normal mode mapping that starts with it will introduce various issues with Opertor-pending mode mappings\r\n\r\nSimilar to the debate about `cr` https://github.com/neovim/neovim/issues/28634 , that problem needs to be fixed instead of disallowing operators as prefixes.\r\n\r\nI'm open to `g=` though.",
            "created_at": "2025-01-10T18:24:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2583487478",
            "id": 2583487478,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z_OP2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583487478/reactions"
            },
            "updated_at": "2025-01-10T18:24:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583487478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > \"y\" is not a general-purpose prefix as it is a `y` operator. Creating Normal mode mapping that starts with it will introduce various issues with Opertor-pending mode mappings\r\n> \r\n> Similar to the debate about `cr` #28634 , that problem needs to be fixed instead of disallowing operators as prefixes.\r\n\r\nAdding mappings without first addressing issues they add is a slippery slope to technical debt (which tends to never be addressed in the end).\r\n\r\n> I'm open to `g=` though.\r\n\r\nThe `g==` instead of `yxx` then? To possibly \"reserve\" `g=` prefix for later uses?",
            "created_at": "2025-01-10T18:28:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2583505076",
            "id": 2583505076,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z_Si0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583505076/reactions"
            },
            "updated_at": "2025-01-10T18:28:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583505076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> which tends to never be addressed in the end\r\n\r\nComplete nonsense. Keep that kind of FUD off the issue tracker.\r\n\r\n> `g==` instead of `yxx` then? To possibly \"reserve\" `g=` prefix for later uses?\r\n\r\nYes, `g=` is an \"operator\" that acts on motions/objects. The \"later uses\" are simply drawing the rest of that owl.",
            "created_at": "2025-01-10T18:31:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2583514426",
            "id": 2583514426,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6Z_U06",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583514426/reactions"
            },
            "updated_at": "2025-01-10T18:32:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583514426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Playing more with this feature, it seems to me (with admitted selection bias) that more snippets trigger an error than work -- this makes the blanket virtual text signal even more worthless (for lack of a better word; I don't want to say it is worthless, period; but one gets trained to ignore it because \"it probably doesn't work anyway\"). It would be better if there were a way to explicitly label known to be working examples; not sure how to actually do this in a reasonable manner, though...",
            "created_at": "2025-01-11T12:32:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/31904#issuecomment-2585246934",
            "id": 2585246934,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
            "node_id": "IC_kwDOAPphoM6aF7zW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585246934/reactions"
            },
            "updated_at": "2025-01-11T12:32:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585246934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31904/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31904/commits",
    "created_at": "2025-01-07T17:27:38Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31904.diff",
    "draft": false,
    "head": {
        "label": "ribru17:lua_runnables",
        "ref": "lua_runnables",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T18:53:41Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 296039,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-01-13T16:14:33Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a9071f4d9050b55e1c21b51486df63649188e0ab",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31904",
    "id": 2264374957,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31904",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "0c296ab22484b4c009d119908d1614a6c6d96b2c",
    "merged_at": "2025-01-09T16:36:16Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6G956t",
    "number": 31904,
    "patch_url": "https://github.com/neovim/neovim/pull/31904.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31904/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a9071f4d9050b55e1c21b51486df63649188e0ab",
    "title": "feat(docs): run lua code examples with yxx",
    "updated_at": "2025-01-11T12:32:40Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31904",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}