{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34787/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34787/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34787"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34787"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34787/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/27729dbd6dd5ee8ec63f135c9a366f58bb287532"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6168,
            "forks_count": 6168,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1965,
            "open_issues_count": 1965,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-07-08T01:56:22Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 332418,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90922,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-08T02:01:52Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90922,
            "watchers_count": 90922,
            "web_commit_signoff_required": false
        },
        "sha": "957093da0da9b9875bf75a5e9f7d2305ab427204",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "â€¦ckage\r\n\r\nclose #34786\r\n\r\n<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\n",
    "closed_at": "2025-07-06T18:04:03Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2187087054"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187087054"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, that's nice! Avoiding two cycles is even better here:\r\n\r\n```suggestion\r\n  -- Register and load those actually on disk while collecting errors\r\n  -- Delay showing all errors to have \"good\" plugins added first\r\n  local errors = {} --- @type string[]\r\n  for _, p in ipairs(plugs) do\r\n    if p.info.installed then\r\n      local ok, err = pcall(pack_add, p, opts.load) --[[@as string]]\r\n      if not ok then\r\n        p.info.err = err\r\n      end\r\n    end\r\n    if p.info.err ~= '' then\r\n      errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\r\n    end\r\n  end\r\n```",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-05T10:44:16Z",
            "diff_hunk": "@@ -674,23 +674,27 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n-  for _, p in ipairs(plugs) do\n-    if p.info.installed then\n-      pack_add(p, opts.load)\n-    end\n-  end\n-\n   -- Delay showing all errors to have \"good\" plugins added first\n   local errors = {} --- @type string[]\n   for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n+  -- Register and `:packadd` those actually on disk\n+  for _, p in ipairs(plugs) do\n+    if p.info.installed then\n+      local ok, err = pcall(pack_add, p, opts.load)\n+      if not ok then\n+        errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, err)\n+      end\n+    end\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2187087054",
            "id": 2187087054,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CXEzO",
            "original_commit_id": "06bf975161f9cf18803ea8418ff72d51ed751386",
            "original_line": 690,
            "original_position": 36,
            "original_start_line": 677,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2989809089,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187087054/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-05T10:48:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187087054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2187174648"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187174648"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, this diff doesn't work because it will make `vim.pack` not report errors when _installing_ a plugin.\r\n\r\nFor example, in this script, I miswrite `nvim-treesitter` as `nvimtreesitter`, so it cannot install the plugin, yet it doesn't report any errors.\r\n```lua\r\nvim.opt.packpath:append(vim.fn.stdpath('data') .. '/site')\r\n\r\nlocal github = function(name)\r\n\treturn 'https://github.com/' .. name\r\nend\r\n\r\nvim.pack.add {\r\n\tgithub 'nvimtreesitter/nvimtreesitter',\r\n}\r\n```\r\nI think the reason is that it is `plugs_to_install`, not `plugs` that is passed to `install_list()`. Which means that errors after executing `install_list` are only passed to packages inside `plugs_to_install`, not `plugs`. So please let me revert it",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-05T12:06:36Z",
            "diff_hunk": "@@ -674,23 +674,27 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n-  for _, p in ipairs(plugs) do\n-    if p.info.installed then\n-      pack_add(p, opts.load)\n-    end\n-  end\n-\n   -- Delay showing all errors to have \"good\" plugins added first\n   local errors = {} --- @type string[]\n   for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n+  -- Register and `:packadd` those actually on disk\n+  for _, p in ipairs(plugs) do\n+    if p.info.installed then\n+      local ok, err = pcall(pack_add, p, opts.load)\n+      if not ok then\n+        errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, err)\n+      end\n+    end\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2187174648",
            "id": 2187174648,
            "in_reply_to_id": 2187087054,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CXaL4",
            "original_commit_id": "06bf975161f9cf18803ea8418ff72d51ed751386",
            "original_line": 690,
            "original_position": 36,
            "original_start_line": 677,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2989954725,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187174648/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-05T12:16:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187174648",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2187190784"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187190784"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Or another way would be making `install_list()` filter packages that have `installed = false` by itself",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-05T12:19:15Z",
            "diff_hunk": "@@ -674,23 +674,27 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n-  for _, p in ipairs(plugs) do\n-    if p.info.installed then\n-      pack_add(p, opts.load)\n-    end\n-  end\n-\n   -- Delay showing all errors to have \"good\" plugins added first\n   local errors = {} --- @type string[]\n   for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n+  -- Register and `:packadd` those actually on disk\n+  for _, p in ipairs(plugs) do\n+    if p.info.installed then\n+      local ok, err = pcall(pack_add, p, opts.load)\n+      if not ok then\n+        errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, err)\n+      end\n+    end\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2187190784",
            "id": 2187190784,
            "in_reply_to_id": 2187087054,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CXeIA",
            "original_commit_id": "06bf975161f9cf18803ea8418ff72d51ed751386",
            "original_line": 690,
            "original_position": 36,
            "original_start_line": 677,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2989975638,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187190784/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-05T12:19:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187190784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2187191671"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187191671"
                }
            },
            "author_association": "MEMBER",
            "body": "> Sorry, this diff doesn't work because it will make `vim.pack` not report errors when _installing_ a plugin.\r\n\r\nWhich one? The \"one cycle\" approach *does* report errors during installation. The `if p.info.err ~= '' then` is done outside of `if p.info.installed then` and it traverses installed plugins also. I just checked it.",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-05T12:21:14Z",
            "diff_hunk": "@@ -674,23 +674,27 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n-  for _, p in ipairs(plugs) do\n-    if p.info.installed then\n-      pack_add(p, opts.load)\n-    end\n-  end\n-\n   -- Delay showing all errors to have \"good\" plugins added first\n   local errors = {} --- @type string[]\n   for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n+  -- Register and `:packadd` those actually on disk\n+  for _, p in ipairs(plugs) do\n+    if p.info.installed then\n+      local ok, err = pcall(pack_add, p, opts.load)\n+      if not ok then\n+        errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, err)\n+      end\n+    end\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2187191671",
            "id": 2187191671,
            "in_reply_to_id": 2187087054,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CXeV3",
            "original_commit_id": "06bf975161f9cf18803ea8418ff72d51ed751386",
            "original_line": 690,
            "original_position": 36,
            "original_start_line": 677,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2989976732,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187191671/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-05T12:21:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187191671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2187194562"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187194562"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Oh, it does. Sorry, I should have run `messages` to check",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-05T12:25:01Z",
            "diff_hunk": "@@ -674,23 +674,27 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n-  for _, p in ipairs(plugs) do\n-    if p.info.installed then\n-      pack_add(p, opts.load)\n-    end\n-  end\n-\n   -- Delay showing all errors to have \"good\" plugins added first\n   local errors = {} --- @type string[]\n   for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n+  -- Register and `:packadd` those actually on disk\n+  for _, p in ipairs(plugs) do\n+    if p.info.installed then\n+      local ok, err = pcall(pack_add, p, opts.load)\n+      if not ok then\n+        errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, err)\n+      end\n+    end\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2187194562",
            "id": 2187194562,
            "in_reply_to_id": 2187087054,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CXfDC",
            "original_commit_id": "06bf975161f9cf18803ea8418ff72d51ed751386",
            "original_line": 690,
            "original_position": 36,
            "original_start_line": 677,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2989979312,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187194562/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-05T12:25:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187194562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2188394336"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188394336"
                }
            },
            "author_association": "MEMBER",
            "body": "off-topic: IIRC `nvim_cmd(..., {magic=false}` was supposed to disable all \"magic\" in cmdline args, to avoid the need for fnameescape(). Idk if it was implemented",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-06T15:20:47Z",
            "diff_hunk": "@@ -625,7 +625,7 @@ local function pack_add(plug, load)\n     local after_paths = vim.fn.glob(plug.path .. '/after/plugin/**/*.{vim,lua}', false, true)\n     --- @param path string\n     vim.tbl_map(function(path)\n-      pcall(vim.cmd.source, vim.fn.fnameescape(path))\n+      vim.cmd.source(vim.fn.fnameescape(path))",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2188394336",
            "id": 2188394336,
            "line": 628,
            "node_id": "PRRC_kwDOAPphoM6CcD9g",
            "original_commit_id": "7e3c97ca933b401463fa357cd7f81ce611800c93",
            "original_line": 628,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 5,
            "pull_request_review_id": 2991422977,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188394336/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T15:24:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188394336",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2188397961"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188397961"
                }
            },
            "author_association": "MEMBER",
            "body": "> off-topic: IIRC `nvim_cmd(..., {magic=''}` was supposed to disable all \"magic\" in cmdline args, to avoid the need for fnameescape(). Idk if it was implemented\r\n\r\nMaybe, I also don't quite remember. Decided to wait until there are tests.",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-06T15:22:23Z",
            "diff_hunk": "@@ -625,7 +625,7 @@ local function pack_add(plug, load)\n     local after_paths = vim.fn.glob(plug.path .. '/after/plugin/**/*.{vim,lua}', false, true)\n     --- @param path string\n     vim.tbl_map(function(path)\n-      pcall(vim.cmd.source, vim.fn.fnameescape(path))\n+      vim.cmd.source(vim.fn.fnameescape(path))",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2188397961",
            "id": 2188397961,
            "in_reply_to_id": 2188394336,
            "line": 628,
            "node_id": "PRRC_kwDOAPphoM6CcE2J",
            "original_commit_id": "7e3c97ca933b401463fa357cd7f81ce611800c93",
            "original_line": 628,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 5,
            "pull_request_review_id": 2991427125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188397961/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T15:22:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188397961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2188402733"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188402733"
                }
            },
            "author_association": "MEMBER",
            "body": "We need to drop the habit of saying \"Errors in\" in error messages. fc2dee17368d76e7e845872990bb6fdef1c6bf54 There should already be enough metadata for the UI to indicate that (and an error code when applicable).",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-06T15:28:18Z",
            "diff_hunk": "@@ -674,23 +674,24 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n+  -- Register and load those actually on disk while collecting errors\n+  -- Delay showing all errors to have \"good\" plugins added first\n+  local errors = {} --- @type string[]\n   for _, p in ipairs(plugs) do\n     if p.info.installed then\n-      pack_add(p, opts.load)\n+      local ok, err = pcall(pack_add, p, opts.load) --[[@as string]]\n+      if not ok then\n+        p.info.err = err\n+      end\n     end\n-  end\n-\n-  -- Delay showing all errors to have \"good\" plugins added first\n-  local errors = {} --- @type string[]\n-  for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n   if #errors > 0 then\n     local error_str = table.concat(errors, '\\n\\n')\n-    error(('Errors during installation:\\n\\n%s'):format(error_str))\n+    vim.notify(('Errors during running vim.pack.add():\\n\\n%s'):format(error_str), vim.log.levels.ERROR)",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2188402733",
            "id": 2188402733,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CcGAt",
            "original_commit_id": "7e3c97ca933b401463fa357cd7f81ce611800c93",
            "original_line": 694,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2991432250,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188402733/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T15:28:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188402733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2188405383"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188405383"
                }
            },
            "author_association": "MEMBER",
            "body": "since lint is failing anyway, let's go ahead and fix this\n```suggestion\n    vim.notify(('vim.pack:\\n\\n%s'):format(error_str), vim.log.levels.ERROR)\n```",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-06T15:31:03Z",
            "diff_hunk": "@@ -674,23 +674,24 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n+  -- Register and load those actually on disk while collecting errors\n+  -- Delay showing all errors to have \"good\" plugins added first\n+  local errors = {} --- @type string[]\n   for _, p in ipairs(plugs) do\n     if p.info.installed then\n-      pack_add(p, opts.load)\n+      local ok, err = pcall(pack_add, p, opts.load) --[[@as string]]\n+      if not ok then\n+        p.info.err = err\n+      end\n     end\n-  end\n-\n-  -- Delay showing all errors to have \"good\" plugins added first\n-  local errors = {} --- @type string[]\n-  for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n   if #errors > 0 then\n     local error_str = table.concat(errors, '\\n\\n')\n-    error(('Errors during installation:\\n\\n%s'):format(error_str))\n+    vim.notify(('Errors during running vim.pack.add():\\n\\n%s'):format(error_str), vim.log.levels.ERROR)",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2188405383",
            "id": 2188405383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CcGqH",
            "original_commit_id": "7e3c97ca933b401463fa357cd7f81ce611800c93",
            "original_line": 694,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2991435054,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188405383/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T15:31:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188405383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2188456299"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188456299"
                }
            },
            "author_association": "MEMBER",
            "body": "This was discussed and the `error()` is intended, as anything unexpected should force stop execution and show the error. The only difference is that `vim.pack.add()` tries to process as many plugins as possible.",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-06T16:32:06Z",
            "diff_hunk": "@@ -674,23 +674,24 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n+  -- Register and load those actually on disk while collecting errors\n+  -- Delay showing all errors to have \"good\" plugins added first\n+  local errors = {} --- @type string[]\n   for _, p in ipairs(plugs) do\n     if p.info.installed then\n-      pack_add(p, opts.load)\n+      local ok, err = pcall(pack_add, p, opts.load) --[[@as string]]\n+      if not ok then\n+        p.info.err = err\n+      end\n     end\n-  end\n-\n-  -- Delay showing all errors to have \"good\" plugins added first\n-  local errors = {} --- @type string[]\n-  for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n   if #errors > 0 then\n     local error_str = table.concat(errors, '\\n\\n')\n-    error(('Errors during installation:\\n\\n%s'):format(error_str))\n+    vim.notify(('vim.pack:\\n\\n%s'):format(error_str), vim.log.levels.ERROR)",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2188456299",
            "id": 2188456299,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CcTFr",
            "original_commit_id": "932b776e04a323737ab63fe456ab4a013929eac6",
            "original_line": 694,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2991501030,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188456299/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T16:32:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188456299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2188463765"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188463765"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "As the commit message (which I just updated) describes, just a plugin fails make a lot of other plugins that require `setup()` call not enable (even if they have been `:packadd`). Which could bring users' Nvim back to stone age :((\r\n\r\nThen maybe `vim.pack.Spec` should support a `config` field?",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-06T16:46:38Z",
            "diff_hunk": "@@ -674,23 +674,24 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n+  -- Register and load those actually on disk while collecting errors\n+  -- Delay showing all errors to have \"good\" plugins added first\n+  local errors = {} --- @type string[]\n   for _, p in ipairs(plugs) do\n     if p.info.installed then\n-      pack_add(p, opts.load)\n+      local ok, err = pcall(pack_add, p, opts.load) --[[@as string]]\n+      if not ok then\n+        p.info.err = err\n+      end\n     end\n-  end\n-\n-  -- Delay showing all errors to have \"good\" plugins added first\n-  local errors = {} --- @type string[]\n-  for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n   if #errors > 0 then\n     local error_str = table.concat(errors, '\\n\\n')\n-    error(('Errors during installation:\\n\\n%s'):format(error_str))\n+    vim.notify(('vim.pack:\\n\\n%s'):format(error_str), vim.log.levels.ERROR)",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2188463765",
            "id": 2188463765,
            "in_reply_to_id": 2188456299,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CcU6V",
            "original_commit_id": "932b776e04a323737ab63fe456ab4a013929eac6",
            "original_line": 694,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2991508247,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188463765/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T16:48:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188463765",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2188472446"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188472446"
                }
            },
            "author_association": "MEMBER",
            "body": "> As the commit message (which I just updated) describes, just a plugin fails make a lot of other plugins that require `setup()` call not enable (even if they have been `:packadd`). Which could bring users' Nvim back to stone age :((\r\n\r\nIf this is a concern, then making more granular `vim.pack.add()` calls (one per plugin, for example) immediately followed by a dedicated `setup()` is possible.\r\n\r\n> Then maybe `vim.pack.Spec` should support a `config` field?\r\n\r\nThe whole point of `vim.pack.add()` design is to avoid the need of extra `config` field and basically treat it as a \"smarter `:packadd`\". Any function call during startup can result in not loading the rest of the config, this is expected.\r\n\r\n> Problem:\r\n> Assuming users have the following config\r\n> ```lua\r\n> vim.pack.add { 'url/to/plugin-a', 'url/to/plugin-b', 'url/to/plugin-c' }\r\n> setup_plugin_a() -- plugin-a required calling this function to enable it\r\n> ```\r\n> Assuming that both plugin-a and plugin-c don't have any bugs, but plugin-b throws an error when being loaded. The following things will happen\r\n> - plugin-c is not added to session\r\n> - setup_plugin_a() is not called, which means plugin-a is not enabled\r\n\r\nAnd what if it is instead `setup_plugin_b()` followed after that and it didn't properly error beforehand? This might result in tricky issues regarding plugin's state.\r\n\r\n---\r\n\r\nPlease, don't make significant changes after the PR approval and not notify about them (either with a message or a review re-request). It might lead to tricky situations like this: there is technically a PR approve, but there are changes that are not approved.",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-06T17:02:02Z",
            "diff_hunk": "@@ -674,23 +674,24 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n+  -- Register and load those actually on disk while collecting errors\n+  -- Delay showing all errors to have \"good\" plugins added first\n+  local errors = {} --- @type string[]\n   for _, p in ipairs(plugs) do\n     if p.info.installed then\n-      pack_add(p, opts.load)\n+      local ok, err = pcall(pack_add, p, opts.load) --[[@as string]]\n+      if not ok then\n+        p.info.err = err\n+      end\n     end\n-  end\n-\n-  -- Delay showing all errors to have \"good\" plugins added first\n-  local errors = {} --- @type string[]\n-  for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n   if #errors > 0 then\n     local error_str = table.concat(errors, '\\n\\n')\n-    error(('Errors during installation:\\n\\n%s'):format(error_str))\n+    vim.notify(('vim.pack:\\n\\n%s'):format(error_str), vim.log.levels.ERROR)",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2188472446",
            "id": 2188472446,
            "in_reply_to_id": 2188456299,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CcXB-",
            "original_commit_id": "932b776e04a323737ab63fe456ab4a013929eac6",
            "original_line": 694,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2991515732,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188472446/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T17:02:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188472446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34787#discussion_r2188475560"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34787"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188475560"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I have reverted it to use `error()`\r\n\r\n",
            "commit_id": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
            "created_at": "2025-07-06T17:09:34Z",
            "diff_hunk": "@@ -674,23 +674,24 @@ function M.add(specs, opts)\n     install_list(plugs_to_install)\n   end\n \n-  -- Register and `:packadd` those actually on disk\n+  -- Register and load those actually on disk while collecting errors\n+  -- Delay showing all errors to have \"good\" plugins added first\n+  local errors = {} --- @type string[]\n   for _, p in ipairs(plugs) do\n     if p.info.installed then\n-      pack_add(p, opts.load)\n+      local ok, err = pcall(pack_add, p, opts.load) --[[@as string]]\n+      if not ok then\n+        p.info.err = err\n+      end\n     end\n-  end\n-\n-  -- Delay showing all errors to have \"good\" plugins added first\n-  local errors = {} --- @type string[]\n-  for _, p in ipairs(plugs_to_install) do\n     if p.info.err ~= '' then\n       errors[#errors + 1] = ('`%s`:\\n%s'):format(p.spec.name, p.info.err)\n     end\n   end\n+\n   if #errors > 0 then\n     local error_str = table.concat(errors, '\\n\\n')\n-    error(('Errors during installation:\\n\\n%s'):format(error_str))\n+    vim.notify(('vim.pack:\\n\\n%s'):format(error_str), vim.log.levels.ERROR)",
            "html_url": "https://github.com/neovim/neovim/pull/34787#discussion_r2188475560",
            "id": 2188475560,
            "in_reply_to_id": 2188456299,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CcXyo",
            "original_commit_id": "932b776e04a323737ab63fe456ab4a013929eac6",
            "original_line": 694,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": null,
            "pull_request_review_id": 2991519211,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188475560/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T17:09:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188475560",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@echasnovski Currently, since `vim.pack` uses `pcall` to ommit all errors when sourcing plugin files, it could be harder for plugin authors to debug their plugins. Maybe it is better to still print error message (and maybe traceback) using `vim.notify` or `nvim_echo`? With `extui`, error messages will not be so annoying anyway",
            "created_at": "2025-07-04T19:27:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/34787#issuecomment-3037116569",
            "id": 3037116569,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34787",
            "node_id": "IC_kwDOAPphoM61BriZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3037116569/reactions"
            },
            "updated_at": "2025-07-04T19:28:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3037116569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, I think it is reasonable for `pack_add()` to also fully go a safe route with `pcall()` and reporting all errors after all plugins are finished ([here](https://github.com/neovim/neovim/blob/e34e2289c22834239e0522b7331f17fdfb3705e0/runtime/lua/vim/pack.lua#L685-L694)).\r\n\r\nSo instead of blanket `pcall`s inside `pack_add` could you please wrap [its calls](https://github.com/neovim/neovim/blob/e34e2289c22834239e0522b7331f17fdfb3705e0/runtime/lua/vim/pack.lua#L680) in `pcall()` and on error register it in `p.info.err`? Might also require adjusting message to not mention \"installation\" but something more general (maybe \"in `vim.pack.add()`\"?).",
            "created_at": "2025-07-04T19:57:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/34787#issuecomment-3037158082",
            "id": 3037158082,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34787",
            "node_id": "IC_kwDOAPphoM61B1rC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3037158082/reactions"
            },
            "updated_at": "2025-07-04T19:57:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3037158082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I am really sorry for nit picking, but would you mind to not mention local helpers in commit messages? It is a more robust practice in the long term (what if the helper is renamed?). So like \"during load\" instead of \"from pack_add()\".",
            "created_at": "2025-07-05T12:30:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/34787#issuecomment-3038871714",
            "id": 3038871714,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34787",
            "node_id": "IC_kwDOAPphoM61IYCi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3038871714/reactions"
            },
            "updated_at": "2025-07-05T12:30:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3038871714",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34787/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34787/commits",
    "created_at": "2025-07-04T19:25:20Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34787.diff",
    "draft": false,
    "head": {
        "label": "brianhuster:vim.pack-pcall",
        "ref": "vim.pack-pcall",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/brianhuster/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/brianhuster/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/brianhuster/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/brianhuster/neovim/branches{/branch}",
            "clone_url": "https://github.com/brianhuster/neovim.git",
            "collaborators_url": "https://api.github.com/repos/brianhuster/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/brianhuster/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/brianhuster/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/brianhuster/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/brianhuster/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/brianhuster/neovim/contributors",
            "created_at": "2025-02-01T09:06:09Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/brianhuster/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/brianhuster/neovim/downloads",
            "events_url": "https://api.github.com/repos/brianhuster/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/brianhuster/neovim/forks",
            "full_name": "brianhuster/neovim",
            "git_commits_url": "https://api.github.com/repos/brianhuster/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/brianhuster/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/brianhuster/neovim/git/tags{/sha}",
            "git_url": "git://github.com/brianhuster/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/brianhuster/neovim/hooks",
            "html_url": "https://github.com/brianhuster/neovim",
            "id": 925600113,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/brianhuster/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/brianhuster/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/brianhuster/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/brianhuster/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/brianhuster/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/brianhuster/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/brianhuster/neovim/merges",
            "milestones_url": "https://api.github.com/repos/brianhuster/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDONyuJcQ",
            "notifications_url": "https://api.github.com/repos/brianhuster/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/brianhuster/neovim/pulls{/number}",
            "pushed_at": "2025-07-08T00:44:44Z",
            "releases_url": "https://api.github.com/repos/brianhuster/neovim/releases{/id}",
            "size": 322417,
            "ssh_url": "git@github.com:brianhuster/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/brianhuster/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/brianhuster/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/brianhuster/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/brianhuster/neovim/subscription",
            "svn_url": "https://github.com/brianhuster/neovim",
            "tags_url": "https://api.github.com/repos/brianhuster/neovim/tags",
            "teams_url": "https://api.github.com/repos/brianhuster/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/brianhuster/neovim/git/trees{/sha}",
            "updated_at": "2025-07-07T14:46:07Z",
            "url": "https://api.github.com/repos/brianhuster/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "27729dbd6dd5ee8ec63f135c9a366f58bb287532",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
            "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
            "followers_url": "https://api.github.com/users/brianhuster/followers",
            "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
            "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/brianhuster",
            "id": 111893501,
            "login": "brianhuster",
            "node_id": "U_kgDOBqtb_Q",
            "organizations_url": "https://api.github.com/users/brianhuster/orgs",
            "received_events_url": "https://api.github.com/users/brianhuster/received_events",
            "repos_url": "https://api.github.com/users/brianhuster/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/brianhuster",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34787",
    "id": 2642198937,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34787",
    "labels": [
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "locked": false,
    "merge_commit_sha": "12689c73d882a29695d3fff4f6f5af642681f0a6",
    "merged_at": "2025-07-06T18:04:03Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6dfMGZ",
    "number": 34787,
    "patch_url": "https://github.com/neovim/neovim/pull/34787.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34787/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/27729dbd6dd5ee8ec63f135c9a366f58bb287532",
    "title": "fix(vim.pack): add() stops unexpectedly on package load error",
    "updated_at": "2025-07-07T14:46:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34787",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
        "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
        "followers_url": "https://api.github.com/users/brianhuster/followers",
        "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
        "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/brianhuster",
        "id": 111893501,
        "login": "brianhuster",
        "node_id": "U_kgDOBqtb_Q",
        "organizations_url": "https://api.github.com/users/brianhuster/orgs",
        "received_events_url": "https://api.github.com/users/brianhuster/received_events",
        "repos_url": "https://api.github.com/users/brianhuster/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/brianhuster",
        "user_view_type": "public"
    }
}