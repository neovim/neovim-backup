{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33036/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33036/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33036"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33036"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33036/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/e30bde69fef66e3b1439e7f59f9f31247975b9ab"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6050,
            "forks_count": 6050,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1919,
            "open_issues_count": 1919,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-04-29T02:05:46Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 319440,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89035,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-04-29T02:12:25Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89035,
            "watchers_count": 89035,
            "web_commit_signoff_required": false
        },
        "sha": "6926fc1615c94a0172b455e64d025c5851485831",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "First phase toward https://github.com/neovim/neovim/issues/28809\r\n\r\n### What it does\r\n- Implements default statusline as default value to 'statusline' option\r\n- removes C implementation\r\n\r\n\r\n### Remaining Issues\r\n- The C implementation of statusline in some cases use dynamic width. As in reduces whitespaces used when in smaller window. But the statusline syntex doesn't support flexible width like that. That's mainly causing issues in test as trunction point changes between C implementation and stl-expr implementation.",
    "closed_at": "2025-04-21T22:05:35Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009072810"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009072810"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This doc is autogenerated. However, this default value far exceeds reasonable linewidth. What's the way to control this?",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T10:35:50Z",
            "diff_hunk": "@@ -5944,7 +5944,7 @@ A jump table for the options with a short description can be found at |Q_op|.\n \tan expensive expression can negatively affect render performance.\n \n \t\t\t\t\t*'statusline'* *'stl'* *E540* *E542*\n-'statusline' 'stl'\tstring\t(default \"\")\n+'statusline' 'stl'\tstring\t(default \"%<%f %h%w%{%&modified ? '[+] ' : ''%}%r%=%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\")",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009072810",
            "id": 2009072810,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM53wASq",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 5947,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": null,
            "pull_request_review_id": 2708524181,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009072810/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T10:35:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009072810",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009074507"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009074507"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'd like to put even less logic in the statusline expression.\r\n\r\n```lua\r\ndefaults = table.concat({\r\n        \"%<\",\r\n        \"%f %h%w%m%r \",\r\n        '%=',\r\n        \"%S  \",\r\n        \"%k \",\r\n        \"%-14.(%l,%c%V%) %P\",\r\n      }),\r\n```\r\n\r\nThis does achieve almost same as above. the difference being \r\n- on buffers marked with nomodifiable it'll put [-]\r\n- Showcmd appears right next to progress/ruler with just 1 space difference.\r\n- rulerformat and ruler option is not followed \r\n- also whitespace one for item even when it's not shown.\r\n\r\nVisually mostly the same. Advantage being since we are exposing this value to users and they can just modify it it's more approachable. And more understandable in future as we add more stuff to default statusline.\r\n\r\n\r\nBtw what's the purpose of 'ruler' option and 'rulerformat' ? It's functionality can be directly controlled by changing value of 'statusline' option?",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T10:44:06Z",
            "diff_hunk": "@@ -8416,7 +8416,14 @@ local options = {\n     {\n       abbreviation = 'stl',\n       cb = 'did_set_statusline',\n-      defaults = '',\n+      defaults = table.concat({\n+        '%<',\n+        \"%f %h%w%{%&modified ? '[+] ' : ''%}%r\",\n+        '%=',\n+        \"%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}\",\n+        \"%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}\",\n+        \"%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\",\n+      }),",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009074507",
            "id": 2009074507,
            "line": 8549,
            "node_id": "PRRC_kwDOAPphoM53wAtL",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 8549,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 12,
            "pull_request_review_id": 2708526090,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009074507/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T10:44:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009074507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009075164"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009075164"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is not something we can replicate through statusline expression right now. unless some sort of flex like system is implemented in stl-expr .",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T10:46:10Z",
            "diff_hunk": "@@ -90,85 +90,6 @@ void win_redr_status(win_T *wp)\n   } else if (*p_stl != NUL || *wp->w_p_stl != NUL) {\n     // redraw custom status line\n     redraw_custom_statusline(wp);\n-  } else {\n-    schar_T fillchar = fillchar_status(&attr, wp);\n-    const int stl_width = is_stl_global ? Columns : wp->w_width;\n-\n-    get_trans_bufname(wp->w_buffer);\n-    char *p = NameBuff;\n-    int plen = (int)strlen(p);\n-\n-    if ((bt_help(wp->w_buffer)\n-         || wp->w_p_pvw\n-         || bufIsChanged(wp->w_buffer)\n-         || wp->w_buffer->b_p_ro)\n-        && plen < MAXPATHL - 1) {\n-      *(p + plen++) = ' ';        // replace NUL with space\n-      *(p + plen) = NUL;          // NUL terminate the string\n-    }\n-    if (bt_help(wp->w_buffer)) {\n-      plen += snprintf(p + plen, MAXPATHL - (size_t)plen, \"%s\", _(\"[Help]\"));\n-    }\n-    if (wp->w_p_pvw) {\n-      plen += snprintf(p + plen, MAXPATHL - (size_t)plen, \"%s\", _(\"[Preview]\"));\n-    }\n-    if (bufIsChanged(wp->w_buffer)) {\n-      plen += snprintf(p + plen, MAXPATHL - (size_t)plen, \"%s\", \"[+]\");\n-    }\n-    if (wp->w_buffer->b_p_ro) {\n-      plen += snprintf(p + plen, MAXPATHL - (size_t)plen, \"%s\", _(\"[RO]\"));\n-    }\n-    (void)plen;\n-\n-    int n = (stl_width + 1) / 2;\n-    int this_ru_col = ru_col - (Columns - stl_width);\n-    this_ru_col = MAX(this_ru_col, n);\n-    if (this_ru_col <= 1) {\n-      p = \"<\";                // No room for file name!\n-      plen = 1;\n-    } else {\n-      int i;\n-\n-      // Count total number of display cells.\n-      plen = (int)mb_string2cells(p);\n-\n-      // Find first character that will fit.\n-      // Going from start to end is much faster for DBCS.\n-      for (i = 0; p[i] != NUL && plen >= this_ru_col - 1;\n-           i += utfc_ptr2len(p + i)) {\n-        plen -= utf_ptr2cells(p + i);\n-      }\n-      if (i > 0) {\n-        p = p + i - 1;\n-        *p = '<';\n-        plen++;\n-      }\n-    }\n-\n-    grid_line_start(&default_grid, is_stl_global ? (Rows - (int)p_ch - 1) : W_ENDROW(wp));\n-    const int off = is_stl_global ? 0 : wp->w_wincol;\n-\n-    int width = grid_line_puts(off, p, -1, attr);\n-    grid_line_fill(off + width, off + this_ru_col, fillchar, attr);\n-\n-    int NameBufflen = get_keymap_str(wp, \"<%s>\", NameBuff, MAXPATHL);\n-    if (NameBufflen > 0 && this_ru_col - plen > NameBufflen + 1) {\n-      grid_line_puts(off + this_ru_col - NameBufflen - 1, NameBuff, -1, attr);\n-    }\n-\n-    win_redr_ruler(wp);\n-\n-    // Draw the 'showcmd' information if 'showcmdloc' == \"statusline\".\n-    if (p_sc && *p_sloc == 's') {\n-      n = this_ru_col - plen - 2;  // perform the calculation here so we only do it once\n-      const int sc_width = MIN(10, n);",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009075164",
            "id": 2009075164,
            "line": 164,
            "node_id": "PRRC_kwDOAPphoM53wA3c",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 164,
            "original_position": 75,
            "original_start_line": null,
            "path": "src/nvim/statusline.c",
            "position": 75,
            "pull_request_review_id": 2708527221,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009075164/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T10:46:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009075164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009075658"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009075658"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm kind of confused why this test exists lol :3 . A few line below it also tests `🧑<200b>💻` is shown when custom statusline is used. Feels like we were testing a bug.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T10:48:04Z",
            "diff_hunk": "@@ -465,9 +465,9 @@ describe('multibyte rendering: statusline', function()\n       grid = [[\n       ^                                        |\n       {1:~                                       }|\n-      {3:🧑�💻                                   }|",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009075658",
            "id": 2009075658,
            "line": 468,
            "node_id": "PRRC_kwDOAPphoM53wA_K",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 468,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/ui/multibyte_spec.lua",
            "position": 4,
            "pull_request_review_id": 2708528312,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009075658/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T10:48:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009075658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009125398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009125398"
                }
            },
            "author_association": "MEMBER",
            "body": "> Btw what's the purpose of 'ruler' option and 'rulerformat' ?\r\n\r\nThe ruler may be shown in the command-line if the window has no statusline (common when `&ls != 2` or in floating windows when `&ls != 3`, for example).",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T14:00:48Z",
            "diff_hunk": "@@ -8416,7 +8416,14 @@ local options = {\n     {\n       abbreviation = 'stl',\n       cb = 'did_set_statusline',\n-      defaults = '',\n+      defaults = table.concat({\n+        '%<',\n+        \"%f %h%w%{%&modified ? '[+] ' : ''%}%r\",\n+        '%=',\n+        \"%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}\",\n+        \"%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}\",\n+        \"%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\",\n+      }),",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009125398",
            "id": 2009125398,
            "in_reply_to_id": 2009074507,
            "line": 8549,
            "node_id": "PRRC_kwDOAPphoM53wNIW",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 8549,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 12,
            "pull_request_review_id": 2708594539,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009125398/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T14:00:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009125398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009139060"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009139060"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> The ruler may be shown in the command-line if the window has no statusline (common when `&ls != 2` or in floating windows when `&ls != 3`, for example).\r\n\r\nIn those cases statusline is not present and what's in 'statusline' option doesn't matter right? I might be biased here as I never really touched the ruler option myself. But is it possible to disassociate ruler from statusline. Like in the above where line/col no is always shown.\r\n\r\nBreakages in that case:\r\n- setting noruler no longer removes line/col info from statusline. To achine it user will have to set statusline option too\r\n- statusline doesn't follow rulerformat. Only when shown in cmdline it's followed. So if someone is setting rulerformat and expecting stl to follow they'll have to change stl too\r\n\r\nI'm not sure how many are actually using ruler and rulerformat options while rocking default statusline ¯⁠\\⁠_⁠(⁠ツ⁠)⁠_⁠/⁠¯ . Basically they'd see change in behaviour. But capability remains the same. ",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T15:00:00Z",
            "diff_hunk": "@@ -8416,7 +8416,14 @@ local options = {\n     {\n       abbreviation = 'stl',\n       cb = 'did_set_statusline',\n-      defaults = '',\n+      defaults = table.concat({\n+        '%<',\n+        \"%f %h%w%{%&modified ? '[+] ' : ''%}%r\",\n+        '%=',\n+        \"%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}\",\n+        \"%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}\",\n+        \"%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\",\n+      }),",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009139060",
            "id": 2009139060,
            "in_reply_to_id": 2009074507,
            "line": 8549,
            "node_id": "PRRC_kwDOAPphoM53wQd0",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 8549,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 12,
            "pull_request_review_id": 2708610401,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009139060/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T15:00:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009139060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009156133"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009156133"
                }
            },
            "author_association": "MEMBER",
            "body": "> In those cases statusline is not present and what's in 'statusline' option doesn't matter right?\r\n\r\nYes, `&statusline` isn't used for the ruler.\r\n\r\n> But is it possible to disassociate ruler from statusline?\r\n\r\nNot with the default statusline; it always checks `&ruler` and uses `&rulerformat`.\r\nCustom statuslines however usually don't care; they tend to do as they like.\r\n\r\nMy personal opinion would be to maintain the existing behaviour. However, if others agree to change it, the documentation for `&ruler` ought to be updated. :+1: ",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T16:15:55Z",
            "diff_hunk": "@@ -8416,7 +8416,14 @@ local options = {\n     {\n       abbreviation = 'stl',\n       cb = 'did_set_statusline',\n-      defaults = '',\n+      defaults = table.concat({\n+        '%<',\n+        \"%f %h%w%{%&modified ? '[+] ' : ''%}%r\",\n+        '%=',\n+        \"%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}\",\n+        \"%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}\",\n+        \"%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\",\n+      }),",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009156133",
            "id": 2009156133,
            "in_reply_to_id": 2009074507,
            "line": 8549,
            "node_id": "PRRC_kwDOAPphoM53wUol",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 8549,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 12,
            "pull_request_review_id": 2708631952,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009156133/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T16:15:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009156133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009159216"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009159216"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": ">  Custom statuslines however usually don't care; they tend to do as they like.\r\n\r\nThat's why I've been wondering if people actually care much about that.\r\n\r\n> My personal opinion would be to maintain the existing behaviour. However, if others agree to change it, the documentation for &ruler ought to be updated. 👍\r\n\r\nThis pr for now keeps this existing behavior. I am mainly trying to take opinion on otherwise. Even if the ruler is followed in statusline. other things still can be simplified with slight difference in whitespace from current implementation. Would like opinion on them too.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T16:27:21Z",
            "diff_hunk": "@@ -8416,7 +8416,14 @@ local options = {\n     {\n       abbreviation = 'stl',\n       cb = 'did_set_statusline',\n-      defaults = '',\n+      defaults = table.concat({\n+        '%<',\n+        \"%f %h%w%{%&modified ? '[+] ' : ''%}%r\",\n+        '%=',\n+        \"%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}\",\n+        \"%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}\",\n+        \"%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\",\n+      }),",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009159216",
            "id": 2009159216,
            "in_reply_to_id": 2009074507,
            "line": 8549,
            "node_id": "PRRC_kwDOAPphoM53wVYw",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 8549,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 12,
            "pull_request_review_id": 2708636406,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009159216/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T16:27:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009159216",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009160582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009160582"
                }
            },
            "author_association": "MEMBER",
            "body": "I think as soon as we add new information (which we want to?), whitespace differences are moot anyway.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-23T16:32:23Z",
            "diff_hunk": "@@ -8416,7 +8416,14 @@ local options = {\n     {\n       abbreviation = 'stl',\n       cb = 'did_set_statusline',\n-      defaults = '',\n+      defaults = table.concat({\n+        '%<',\n+        \"%f %h%w%{%&modified ? '[+] ' : ''%}%r\",\n+        '%=',\n+        \"%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}\",\n+        \"%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}\",\n+        \"%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\",\n+      }),",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009160582",
            "id": 2009160582,
            "in_reply_to_id": 2009074507,
            "line": 8549,
            "node_id": "PRRC_kwDOAPphoM53wVuG",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 8549,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 12,
            "pull_request_review_id": 2708638088,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009160582/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-23T16:32:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009160582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2009528289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009528289"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I'd like to put even less logic in the statusline expression.\r\n> \r\n> ```lua\r\n> defaults = table.concat({\r\n>         \"%<\",\r\n>         \"%f %h%w%m%r \",\r\n>         '%=',\r\n>         \"%S  \",\r\n>         \"%k \",\r\n>         \"%-14.(%l,%c%V%) %P\",\r\n>       }),\r\n> ```\r\n> \r\n> This does achieve almost same as above. the difference being\r\n> \r\n>     * on buffers marked with nomodifiable it'll put [-]\r\n> \r\n>     * Showcmd appears right next to progress/ruler with just 1 space difference.\r\n> \r\n>     * rulerformat and ruler option is not followed\r\n> \r\n>     * also whitespace one for item even when it's not shown.\r\n> \r\n> \r\n> Visually mostly the same. Advantage being since we are exposing this value to users and they can just modify it it's more approachable. And more understandable in future as we add more stuff to default statusline.\r\n> \r\n> Btw what's the purpose of 'ruler' option and 'rulerformat' ? It's functionality can be directly controlled by changing value of 'statusline' option?\r\n\r\n@justinmk would like to know what you think about going like this. If we add %u for ruler it can just be\r\n\r\n```lua\r\ndefaults = \"%<%f %h%w%m%r %=%S %k %u\",\r\n```\r\n\r\nin that case the point ruler and rulerformat not being followed is null\r\n",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-24T06:24:10Z",
            "diff_hunk": "@@ -8416,7 +8416,14 @@ local options = {\n     {\n       abbreviation = 'stl',\n       cb = 'did_set_statusline',\n-      defaults = '',\n+      defaults = table.concat({\n+        '%<',\n+        \"%f %h%w%{%&modified ? '[+] ' : ''%}%r\",\n+        '%=',\n+        \"%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}\",\n+        \"%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}\",\n+        \"%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\",\n+      }),",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2009528289",
            "id": 2009528289,
            "in_reply_to_id": 2009074507,
            "line": 8549,
            "node_id": "PRRC_kwDOAPphoM53xvfh",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 8549,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 12,
            "pull_request_review_id": 2709233547,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009528289/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-24T06:25:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2009528289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2010758148"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010758148"
                }
            },
            "author_association": "MEMBER",
            "body": "don't need to worry about this. ",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-24T18:53:44Z",
            "diff_hunk": "@@ -5944,7 +5944,7 @@ A jump table for the options with a short description can be found at |Q_op|.\n \tan expensive expression can negatively affect render performance.\n \n \t\t\t\t\t*'statusline'* *'stl'* *E540* *E542*\n-'statusline' 'stl'\tstring\t(default \"\")\n+'statusline' 'stl'\tstring\t(default \"%<%f %h%w%{%&modified ? '[+] ' : ''%}%r%=%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\")",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2010758148",
            "id": 2010758148,
            "in_reply_to_id": 2009072810,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM532bwE",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 5947,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": null,
            "pull_request_review_id": 2711402865,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010758148/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-24T18:53:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010758148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2010771121"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010771121"
                }
            },
            "author_association": "MEMBER",
            "body": "SGTM. But we'll be able to see the difference more clearly after [steps 1/2](https://github.com/neovim/neovim/pull/33036#issuecomment-2749133933) are done.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-24T19:03:41Z",
            "diff_hunk": "@@ -8416,7 +8416,14 @@ local options = {\n     {\n       abbreviation = 'stl',\n       cb = 'did_set_statusline',\n-      defaults = '',\n+      defaults = table.concat({\n+        '%<',\n+        \"%f %h%w%{%&modified ? '[+] ' : ''%}%r\",\n+        '%=',\n+        \"%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}\",\n+        \"%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}\",\n+        \"%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\",\n+      }),",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2010771121",
            "id": 2010771121,
            "in_reply_to_id": 2009074507,
            "line": 8549,
            "node_id": "PRRC_kwDOAPphoM532e6x",
            "original_commit_id": "c7c6a224f8d30e276c37ce745ce80aac9470d68c",
            "original_line": 8549,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 12,
            "pull_request_review_id": 2711424902,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010771121/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-24T19:03:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010771121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2010883018"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010883018"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure why this test result changed. let's see if CI says otherwise\r\n\r\nEdit: yeah it was oddly failing in my system.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-24T20:29:54Z",
            "diff_hunk": "@@ -282,9 +282,70 @@ describe('ui/ext_messages', function()\n     feed('i<C-n>')\n     screen:expect({\n       grid = s2,\n+      popupmenu = {",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2010883018",
            "id": 2010883018,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5326PK",
            "original_commit_id": "7e1e0f50c19a010d31f486fef59bf81adef2c8ca",
            "original_line": 285,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": null,
            "pull_request_review_id": 2711610338,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010883018/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-24T20:42:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2010883018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2016265730"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016265730"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is actually fix to a separate bug. Setting  'statusline' option in triggers it.\r\nI guess because old default statusline didn't allocate click_defs so it didn't appear in test-suit. This was causing out of bound memory access leading to flaky test crashes.\r\n\r\nIt seems click_col can be == w_statuscol_click_def_size. which exceeds the allocated buffer size. Which is pretty weird. I was thinking it might be due to some mismatch of 0/1 based indexing. Spent quite a while looking at the related code but couldn't find the. Also clickable regions work pixel perfect. Couldn't really reproduce it other then in the test suit there. Adding a check here seemed like good fix afterwards since I couldn't really reproduce the crash any other way and the behavior was acting correctly.\r\n\r\nShould I move it to a separate pr? Or leave it here?",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-27T11:10:19Z",
            "diff_hunk": "@@ -681,7 +681,11 @@ bool do_mouse(oparg_T *oap, int c, int dir, int count, bool fixindent)\n     if (in_statuscol && wp->w_p_rl) {\n       click_col = wp->w_width_inner - click_col - 1;\n     }\n-    if (in_statuscol && click_col >= (int)wp->w_statuscol_click_defs_size) {\n+\n+    if ((in_statuscol && click_col >= (int)wp->w_statuscol_click_defs_size)\n+        || (in_status_line\n+            && click_col >=\n+            (int)(global_stl_height() > 0 ? curwin : wp)->w_status_click_defs_size)) {",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2016265730",
            "id": 2016265730,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM54LcYC",
            "original_commit_id": "44df79f43e97f676bff9ef5acb6fca332aab29ca",
            "original_line": 688,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/mouse.c",
            "position": null,
            "pull_request_review_id": 2720875930,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016265730/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-27T11:10:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016265730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2016269018"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016269018"
                }
            },
            "author_association": "MEMBER",
            "body": "Separate PR would be good, because then we can backport it.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-27T11:12:46Z",
            "diff_hunk": "@@ -681,7 +681,11 @@ bool do_mouse(oparg_T *oap, int c, int dir, int count, bool fixindent)\n     if (in_statuscol && wp->w_p_rl) {\n       click_col = wp->w_width_inner - click_col - 1;\n     }\n-    if (in_statuscol && click_col >= (int)wp->w_statuscol_click_defs_size) {\n+\n+    if ((in_statuscol && click_col >= (int)wp->w_statuscol_click_defs_size)\n+        || (in_status_line\n+            && click_col >=\n+            (int)(global_stl_height() > 0 ? curwin : wp)->w_status_click_defs_size)) {",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2016269018",
            "id": 2016269018,
            "in_reply_to_id": 2016265730,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM54LdLa",
            "original_commit_id": "44df79f43e97f676bff9ef5acb6fca332aab29ca",
            "original_line": 688,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/mouse.c",
            "position": null,
            "pull_request_review_id": 2720884339,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016269018/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-27T11:12:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016269018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2016555569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016555569"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Makes sense. I'll move it to a separate pr. Maybe `nvim_input_mouse` can click beyond window edge. One character is used as window border when windows are split. It's probably clicking there ¯\\_(ツ)_/¯. Never the less the change here just adds a  sainity check anyway.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-27T13:13:59Z",
            "diff_hunk": "@@ -681,7 +681,11 @@ bool do_mouse(oparg_T *oap, int c, int dir, int count, bool fixindent)\n     if (in_statuscol && wp->w_p_rl) {\n       click_col = wp->w_width_inner - click_col - 1;\n     }\n-    if (in_statuscol && click_col >= (int)wp->w_statuscol_click_defs_size) {\n+\n+    if ((in_statuscol && click_col >= (int)wp->w_statuscol_click_defs_size)\n+        || (in_status_line\n+            && click_col >=\n+            (int)(global_stl_height() > 0 ? curwin : wp)->w_status_click_defs_size)) {",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2016555569",
            "id": 2016555569,
            "in_reply_to_id": 2016265730,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM54MjIx",
            "original_commit_id": "44df79f43e97f676bff9ef5acb6fca332aab29ca",
            "original_line": 688,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/mouse.c",
            "position": null,
            "pull_request_review_id": 2721416375,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016555569/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-27T13:14:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2016555569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2018475959"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2018475959"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is `os_def` needed? Can't you check if `os_idx` is `kOptStatusline` and use its `def_val` directly?",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-28T11:20:54Z",
            "diff_hunk": "@@ -1792,6 +1792,16 @@ static const char *did_set_statustabline_rulerformat(optset_T *args, bool rulerf\n   }\n   const char *errmsg = NULL;\n   char *s = *varp;\n+\n+  // reset statusline to default when setting global option and empty string is being set\n+  if (!rulerformat && !statuscolumn\n+      && ((args->os_flags & OPT_GLOBAL) || !(args->os_flags & OPT_LOCAL))\n+      && s[0] == NUL) {\n+    xfree(*varp);\n+    *varp = xstrdup(args->os_def->string.data);\n+    s = *varp;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2018475959",
            "id": 2018475959,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM54T3-3",
            "original_commit_id": "f844b375b3a352f9d78a023f330e361bf894e71a",
            "original_line": 1804,
            "original_position": 13,
            "original_start_line": 1795,
            "path": "src/nvim/optionstr.c",
            "position": null,
            "pull_request_review_id": 2725202928,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2018475959/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-28T11:20:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2018475959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2018516468"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2018516468"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That was actually my first idea.\r\n\r\n`os_idx` is an index to `static` `options` array in `options.generated.h` . I assumed it was meant to be only imported in options.c . If I can include it in optionstr.c too then your solution is better.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-28T11:45:31Z",
            "diff_hunk": "@@ -1792,6 +1792,16 @@ static const char *did_set_statustabline_rulerformat(optset_T *args, bool rulerf\n   }\n   const char *errmsg = NULL;\n   char *s = *varp;\n+\n+  // reset statusline to default when setting global option and empty string is being set\n+  if (!rulerformat && !statuscolumn\n+      && ((args->os_flags & OPT_GLOBAL) || !(args->os_flags & OPT_LOCAL))\n+      && s[0] == NUL) {\n+    xfree(*varp);\n+    *varp = xstrdup(args->os_def->string.data);\n+    s = *varp;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2018516468",
            "id": 2018516468,
            "in_reply_to_id": 2018475959,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM54UB30",
            "original_commit_id": "f844b375b3a352f9d78a023f330e361bf894e71a",
            "original_line": 1804,
            "original_position": 13,
            "original_start_line": 1795,
            "path": "src/nvim/optionstr.c",
            "position": null,
            "pull_request_review_id": 2725263472,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2018516468/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-28T11:45:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2018516468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2019122328"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019122328"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "![image](https://github.com/user-attachments/assets/b58e1036-830e-46dd-942c-c849f8a6b349)\r\n\r\n@zeertzjq  Considering it's a static global variable. Including the header to multiple .c files would lead to linker error right? Global being defined twice?\r\n\r\nIsn't just passing the necessary info better in that case as I've done with os_def? It's a pointer anyway doesn't really have any overhead.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-28T18:10:07Z",
            "diff_hunk": "@@ -1792,6 +1792,16 @@ static const char *did_set_statustabline_rulerformat(optset_T *args, bool rulerf\n   }\n   const char *errmsg = NULL;\n   char *s = *varp;\n+\n+  // reset statusline to default when setting global option and empty string is being set\n+  if (!rulerformat && !statuscolumn\n+      && ((args->os_flags & OPT_GLOBAL) || !(args->os_flags & OPT_LOCAL))\n+      && s[0] == NUL) {\n+    xfree(*varp);\n+    *varp = xstrdup(args->os_def->string.data);\n+    s = *varp;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2019122328",
            "id": 2019122328,
            "in_reply_to_id": 2018475959,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM54WVyY",
            "original_commit_id": "f844b375b3a352f9d78a023f330e361bf894e71a",
            "original_line": 1804,
            "original_position": 13,
            "original_start_line": 1795,
            "path": "src/nvim/optionstr.c",
            "position": null,
            "pull_request_review_id": 2726325905,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019122328/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-28T18:10:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019122328",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2019590724"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019590724"
                }
            },
            "author_association": "MEMBER",
            "body": "There is `get_option_default()`",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-28T23:49:54Z",
            "diff_hunk": "@@ -1792,6 +1792,16 @@ static const char *did_set_statustabline_rulerformat(optset_T *args, bool rulerf\n   }\n   const char *errmsg = NULL;\n   char *s = *varp;\n+\n+  // reset statusline to default when setting global option and empty string is being set\n+  if (!rulerformat && !statuscolumn\n+      && ((args->os_flags & OPT_GLOBAL) || !(args->os_flags & OPT_LOCAL))\n+      && s[0] == NUL) {\n+    xfree(*varp);\n+    *varp = xstrdup(args->os_def->string.data);\n+    s = *varp;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2019590724",
            "id": 2019590724,
            "in_reply_to_id": 2018475959,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM54YIJE",
            "original_commit_id": "f844b375b3a352f9d78a023f330e361bf894e71a",
            "original_line": 1804,
            "original_position": 13,
            "original_start_line": 1795,
            "path": "src/nvim/optionstr.c",
            "position": null,
            "pull_request_review_id": 2727075969,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019590724/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-28T23:49:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019590724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2019746236"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019746236"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> There is `get_option_default()`\r\n\r\nOoo didn't see that. Will update.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-03-29T07:43:16Z",
            "diff_hunk": "@@ -1792,6 +1792,16 @@ static const char *did_set_statustabline_rulerformat(optset_T *args, bool rulerf\n   }\n   const char *errmsg = NULL;\n   char *s = *varp;\n+\n+  // reset statusline to default when setting global option and empty string is being set\n+  if (!rulerformat && !statuscolumn\n+      && ((args->os_flags & OPT_GLOBAL) || !(args->os_flags & OPT_LOCAL))\n+      && s[0] == NUL) {\n+    xfree(*varp);\n+    *varp = xstrdup(args->os_def->string.data);\n+    s = *varp;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2019746236",
            "id": 2019746236,
            "in_reply_to_id": 2018475959,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM54YuG8",
            "original_commit_id": "f844b375b3a352f9d78a023f330e361bf894e71a",
            "original_line": 1804,
            "original_position": 13,
            "original_start_line": 1795,
            "path": "src/nvim/optionstr.c",
            "position": null,
            "pull_request_review_id": 2727307159,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019746236/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-29T07:43:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2019746236",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2049129115"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049129115"
                }
            },
            "author_association": "MEMBER",
            "body": "if we treat empty string as equivalent (internally) to this, then we can move this long expression to the doc below, where it will be more readable as a codeblock.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-04-17T14:52:35Z",
            "diff_hunk": "@@ -5991,7 +5991,7 @@ A jump table for the options with a short description can be found at |Q_op|.\n \tan expensive expression can negatively affect render performance.\n \n \t\t\t\t\t*'statusline'* *'stl'* *E540* *E542*\n-'statusline' 'stl'\tstring\t(default \"\")\n+'statusline' 'stl'\tstring\t(default \"%<%f %h%w%m%r %=%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\")",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2049129115",
            "id": 2049129115,
            "line": 6032,
            "node_id": "PRRC_kwDOAPphoM56Izqb",
            "original_commit_id": "a903949f94a0a5e9273a2cdd59f1cfbb81860ad5",
            "original_line": 6032,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": 5,
            "pull_request_review_id": 2776056553,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049129115/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-17T14:52:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049129115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2049133631"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049133631"
                }
            },
            "author_association": "MEMBER",
            "body": "?",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-04-17T14:55:14Z",
            "diff_hunk": "@@ -355,24 +355,58 @@ describe('au OptionSet', function()\n \n     it('with string global-local (to window) option', function()\n       local oldval = eval('&statusline')\n+      local default_statusline =\n+        \"%<%f %h%w%m%r %=%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\"\n \n       command('set statusline=foo')\n-      expected_combination({ 'statusline', oldval, oldval, '', 'foo', 'global', 'set' })\n+      expected_combination({\n+        'statusline',\n+        oldval,\n+        oldval,\n+        oldval,\n+        'foo',\n+        'global',\n+        'set',\n+      })\n \n       -- Note: v:option_old is the old global value for global-local options.\n       -- but the old local value for all other kinds of options.\n       command('set statusline&')\n-      expected_combination({ 'statusline', 'foo', 'foo', 'foo', oldval, 'global', 'set' })\n+      expected_combination({\n+        'statusline',\n+        'foo',\n+        'foo',\n+        'foo',\n+        default_statusline,\n+        'global',\n+        'set',\n+      })\n \n       command('setglobal statusline=bar')\n-      expected_combination({ 'statusline', oldval, '', oldval, 'bar', 'global', 'setglobal' })\n+      expected_combination({\n+        'statusline',\n+        default_statusline,\n+        '',\n+        default_statusline,\n+        'bar',\n+        'global',\n+        'setglobal',\n+      })\n \n       command('noa set statusline&')\n       command('setlocal statusline=baz')\n-      expected_combination({ 'statusline', oldval, oldval, '', 'baz', 'local', 'setlocal' })\n+      expected_combination({\n+        'statusline',\n+        default_statusline,\n+        default_statusline,\n+        '',\n+        'baz',\n+        'local',\n+        'setlocal',\n+      })\n \n-      -- Note: v:option_old is the old global value for global-local options.\n-      -- but the old local value for all other kinds of options.\n+      -- -- Note: v:option_old is the old global value for global-local options.\n+      -- -- but the old local value for all other kinds of options.",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2049133631",
            "id": 2049133631,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56I0w_",
            "original_commit_id": "a903949f94a0a5e9273a2cdd59f1cfbb81860ad5",
            "original_line": 409,
            "original_position": 61,
            "original_start_line": null,
            "path": "test/functional/legacy/autocmd_option_spec.lua",
            "position": null,
            "pull_request_review_id": 2776064239,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049133631/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-17T14:55:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049133631",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2049142763"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049142763"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\ndescribe('default statusline', function()\r\n```",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-04-17T14:59:30Z",
            "diff_hunk": "@@ -767,3 +767,36 @@ describe('statusline', function()\n     ]])\n   end)\n end)\n+\n+describe('Default statusline', function()",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2049142763",
            "id": 2049142763,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56I2_r",
            "original_commit_id": "a903949f94a0a5e9273a2cdd59f1cfbb81860ad5",
            "original_line": 771,
            "original_position": 77,
            "original_start_line": null,
            "path": "test/functional/ui/statusline_spec.lua",
            "position": null,
            "pull_request_review_id": 2776080767,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049142763/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-17T14:59:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049142763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2049147657"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049147657"
                }
            },
            "author_association": "MEMBER",
            "body": "this is good, but then why does it return non-empty? \r\n\r\ninternally it can use the default expression. but it doesn't need to *return* the default expression. This will improve backwards-compatibility, and also reduces some of the churn in this PR.\r\n\r\nOTOH, `nvim_eval_statusline('')` *should* return the expanded expression (not empty string). That allows plugins/users to append-to / modify the default without hardcoding it.\r\n\r\nWDYT?",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-04-17T15:01:17Z",
            "diff_hunk": "@@ -767,3 +767,36 @@ describe('statusline', function()\n     ]])\n   end)\n end)\n+\n+describe('Default statusline', function()\n+  local screen\n+\n+  before_each(function()\n+    clear()\n+    screen = Screen.new(60, 16)\n+    screen:add_extra_attr_ids {\n+      [100] = { foreground = Screen.colors.Magenta1, bold = true },\n+    }\n+    command('set laststatus=2')\n+    command('set ruler')\n+  end)\n+\n+  it('setting statusline to empty string sets default statusline', function()",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2049147657",
            "id": 2049147657,
            "line": 784,
            "node_id": "PRRC_kwDOAPphoM56I4MJ",
            "original_commit_id": "a903949f94a0a5e9273a2cdd59f1cfbb81860ad5",
            "original_line": 784,
            "original_position": 90,
            "original_start_line": null,
            "path": "test/functional/ui/statusline_spec.lua",
            "position": 90,
            "pull_request_review_id": 2776089447,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049147657/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-17T15:02:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049147657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2049217990"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049217990"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've been wondering how to fix the formatting on that. I guess if we do internal evaluation, we can document it separately.",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-04-17T15:37:45Z",
            "diff_hunk": "@@ -5991,7 +5991,7 @@ A jump table for the options with a short description can be found at |Q_op|.\n \tan expensive expression can negatively affect render performance.\n \n \t\t\t\t\t*'statusline'* *'stl'* *E540* *E542*\n-'statusline' 'stl'\tstring\t(default \"\")\n+'statusline' 'stl'\tstring\t(default \"%<%f %h%w%m%r %=%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\")",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2049217990",
            "id": 2049217990,
            "in_reply_to_id": 2049129115,
            "line": 6032,
            "node_id": "PRRC_kwDOAPphoM56JJXG",
            "original_commit_id": "a903949f94a0a5e9273a2cdd59f1cfbb81860ad5",
            "original_line": 6032,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": 5,
            "pull_request_review_id": 2776205881,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049217990/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-17T15:37:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049217990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2049221925"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049221925"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This was a mistake. Probably got messed up commenting/uncommenting at some point. will fix that",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-04-17T15:39:03Z",
            "diff_hunk": "@@ -355,24 +355,58 @@ describe('au OptionSet', function()\n \n     it('with string global-local (to window) option', function()\n       local oldval = eval('&statusline')\n+      local default_statusline =\n+        \"%<%f %h%w%m%r %=%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}\"\n \n       command('set statusline=foo')\n-      expected_combination({ 'statusline', oldval, oldval, '', 'foo', 'global', 'set' })\n+      expected_combination({\n+        'statusline',\n+        oldval,\n+        oldval,\n+        oldval,\n+        'foo',\n+        'global',\n+        'set',\n+      })\n \n       -- Note: v:option_old is the old global value for global-local options.\n       -- but the old local value for all other kinds of options.\n       command('set statusline&')\n-      expected_combination({ 'statusline', 'foo', 'foo', 'foo', oldval, 'global', 'set' })\n+      expected_combination({\n+        'statusline',\n+        'foo',\n+        'foo',\n+        'foo',\n+        default_statusline,\n+        'global',\n+        'set',\n+      })\n \n       command('setglobal statusline=bar')\n-      expected_combination({ 'statusline', oldval, '', oldval, 'bar', 'global', 'setglobal' })\n+      expected_combination({\n+        'statusline',\n+        default_statusline,\n+        '',\n+        default_statusline,\n+        'bar',\n+        'global',\n+        'setglobal',\n+      })\n \n       command('noa set statusline&')\n       command('setlocal statusline=baz')\n-      expected_combination({ 'statusline', oldval, oldval, '', 'baz', 'local', 'setlocal' })\n+      expected_combination({\n+        'statusline',\n+        default_statusline,\n+        default_statusline,\n+        '',\n+        'baz',\n+        'local',\n+        'setlocal',\n+      })\n \n-      -- Note: v:option_old is the old global value for global-local options.\n-      -- but the old local value for all other kinds of options.\n+      -- -- Note: v:option_old is the old global value for global-local options.\n+      -- -- but the old local value for all other kinds of options.",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2049221925",
            "id": 2049221925,
            "in_reply_to_id": 2049133631,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56JKUl",
            "original_commit_id": "a903949f94a0a5e9273a2cdd59f1cfbb81860ad5",
            "original_line": 409,
            "original_position": 61,
            "original_start_line": null,
            "path": "test/functional/legacy/autocmd_option_spec.lua",
            "position": null,
            "pull_request_review_id": 2776212662,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049221925/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-17T15:39:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049221925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33036#discussion_r2049230052"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33036"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049230052"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It doesn't return non-empty.\r\n\r\n```vim\r\nset stl=\r\necho &stl\r\n```\r\nreturns the default statusline expression.\r\n\r\n> internally it can use the default expression. but it doesn't need to return the default expression. This will improve backwards-compatibility, and also reduces some of the churn in this PR.\r\n\r\nI think churn wise only one/two test changes will be effected by this. Most of the churn is because we can't do flex-spacing.\r\n\r\nI'm still open to the idea of having the value hidden, but more inclined toward making it like a regular option default\r\n ",
            "commit_id": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
            "created_at": "2025-04-17T15:44:18Z",
            "diff_hunk": "@@ -767,3 +767,36 @@ describe('statusline', function()\n     ]])\n   end)\n end)\n+\n+describe('Default statusline', function()\n+  local screen\n+\n+  before_each(function()\n+    clear()\n+    screen = Screen.new(60, 16)\n+    screen:add_extra_attr_ids {\n+      [100] = { foreground = Screen.colors.Magenta1, bold = true },\n+    }\n+    command('set laststatus=2')\n+    command('set ruler')\n+  end)\n+\n+  it('setting statusline to empty string sets default statusline', function()",
            "html_url": "https://github.com/neovim/neovim/pull/33036#discussion_r2049230052",
            "id": 2049230052,
            "in_reply_to_id": 2049147657,
            "line": 784,
            "node_id": "PRRC_kwDOAPphoM56JMTk",
            "original_commit_id": "a903949f94a0a5e9273a2cdd59f1cfbb81860ad5",
            "original_line": 784,
            "original_position": 90,
            "original_start_line": null,
            "path": "test/functional/ui/statusline_spec.lua",
            "position": 90,
            "pull_request_review_id": 2776225535,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049230052/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-17T15:44:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2049230052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "See discussion in https://github.com/neovim/neovim/pull/29389 , which was closed in favor of #30721 (which seems to have stalled possibly because of trying to do too much at once, but the test changes could be dropped and the other logic changes may be useful to continue.)",
            "created_at": "2025-03-24T00:31:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2746587526",
            "id": 2746587526,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6jtZmG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2746587526/reactions"
            },
            "updated_at": "2025-03-24T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2746587526",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> See discussion in https://github.com/neovim/neovim/pull/29389 , which was closed in favor of https://github.com/neovim/neovim/pull/30721\r\n\r\nI've looked at the discussions. Seems to have come to same conclusion as me. However I did take a bit different approach in solving it. I've directly change the default value for `stl` option `options.lua` (I believe it's used by generator to generate options). And added a mechanism to reset the global stl to that default value when set to empty string. This might be a existing pattern in the codebase already. like how `:set opt&` resets option value to default. In this case `set stl=` works same as `set stl&` .\r\n\r\n> the other logic changes may be useful to continue.\r\n\r\nin #30721 %u was introduced to show ruler. That looks like an interesting approach. There was no comment on that in that thread. I can add it here. This atleast avoids putting logic for `ruler` in the expression as I was saying above.\r\n\r\n> the test changes could be dropped\r\n\r\nI'll have to make quite a bit of test changes depending on how much we drift from the default. It's currently failing 17tests due to limitation I mentioned above. That's why I was looking for comment on how much we should drift. Looking at the previous prs it seems you are in favor of having a simpler stl-expression with little deviation from current default. After we are done finalizing how the default statusline should look like I can go ahead and fix the broken tests.\r\n",
            "created_at": "2025-03-24T06:21:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2747012610",
            "id": 2747012610,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6jvBYC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2747012610/reactions"
            },
            "updated_at": "2025-03-24T06:21:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2747012610",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Looking at the previous prs it seems you are in favor of having a simpler stl-expression with little deviation from current default. After we are done finalizing how the default statusline should look like I can go ahead and fix the broken tests.\r\n\r\nUltimately, we want to aggressively improve the default statusline, e.g. to show buffer-local \"busy\" status (https://github.com/neovim/neovim/issues/32084).\r\n\r\nBut ideally it would be possible to set the legacy default in the test runner, to avoid huge amounts of churn in the tests. The main reason for that is to be able to get this shipped and avoid a stalled PR :) If we can power through the churn as a one-time cost, then that's also acceptable. ",
            "created_at": "2025-03-24T11:48:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2747852656",
            "id": 2747852656,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6jyOdw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2747852656/reactions"
            },
            "updated_at": "2025-03-24T11:48:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2747852656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That's why I was looking for comment on how much we should drift\r\n\r\n Note that it's perfectly reasonable to have\r\n1. a simplified default (to which we can add more and more \"modern\" components) and\r\n2. a complicated \"old_default\" which we set _only_ in the test setup (assuming those are not explicitly testing that the statusline has the default value in specific situations; for _these_ tests (only), we'd adapt the expected output -- but I'd be surprised if there even are such tests).",
            "created_at": "2025-03-24T15:00:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2748428907",
            "id": 2748428907,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6j0bJr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2748428907/reactions"
            },
            "updated_at": "2025-03-24T15:00:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2748428907",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "We'll have to update some tests either way because we can't directly replicate the old truncation. I guess once we find a a close enough replacement through this pr. we can set that value to test runners for non statusline related testcases so test churns are not terrible for future updates.\r\n\r\nAnother thing I've been thinking about is say if we do something like \"%k \" when keymap is unset it'll still show a whitespace that kind of feels unpolished to be default.",
            "created_at": "2025-03-24T16:50:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2748786110",
            "id": 2748786110,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6j1yW-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2748786110/reactions"
            },
            "updated_at": "2025-03-24T16:54:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2748786110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I guess once we find a a close enough replacement through this pr. we can set that value to test runners for non statusline related testcases so test churns are not terrible for future updates.\r\n\r\nTo increase chance of success, let's do it in this order:\r\n\r\n1. Choose a \"dummy\" statusline for the tests. Should be simple, [this one](https://github.com/neovim/neovim/pull/33036#discussion_r2009074507) looks good. \r\n    - Doesn't need to match the real default.\r\n    - Main purpose is to avoid churn as we evolve the default 'statusline'.\r\n    - Tests that intentionally test the *actual* default, should not use the \"dummy\". Should be only a few of these.\r\n3. Update all tests to pass with that \"dummy\".\r\n4. Then we can focus on evolving the default.\r\n",
            "created_at": "2025-03-24T19:02:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2749133933",
            "id": 2749133933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6j3HRt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749133933/reactions"
            },
            "updated_at": "2025-03-24T19:02:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749133933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "```\r\nERROR    test/functional/ui/mouse_spec.lua @ 1722: ui/mouse/input getmousepos() works correctly\r\ntest/functional/testnvim.lua:137: EOF was received from Nvim. Likely the Nvim process crashed. stderr:\r\nAssertion failed: (false && \"winbar, statusline and statuscolumn only support %@ for clicks\"), function do_mouse, file mouse.c, line 702.\r\n\r\n\r\nstack traceback:\r\n\ttest/functional/testnvim.lua:137: in function 'nvim_set_current_tabpage'\r\n\ttest/functional/ui/mouse_spec.lua:1752: in function <test/functional/ui/mouse_spec.lua:1722>\r\n\r\n\r\n 51 SKIPPED TESTS\r\n 1 ERROR\r\n ```\r\n\r\nif any one has any idea why this might be failing in some runners and not in others. Or why this might fail please let me know. This failed 3 functional test runners. but rest passed",
            "created_at": "2025-03-24T21:08:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2749402954",
            "id": 2749402954,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6j4I9K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749402954/reactions"
            },
            "updated_at": "2025-03-24T21:08:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749402954",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Normal Github Monday. ",
            "created_at": "2025-03-24T21:13:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2749411116",
            "id": 2749411116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6j4K8s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749411116/reactions"
            },
            "updated_at": "2025-03-24T21:13:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749411116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ">- Choose a \"dummy\" statusline for the tests. Should be simple, https://github.com/neovim/neovim/pull/33036#discussion_r2009074507 looks good.\r\n     - Doesn't need to match the real default.\r\n     - Main purpose is to avoid churn as we evolve the default 'statusline'.\r\n     \r\nIt's actually better to match the previous implementation closely in tests. Fewer tests need to be updated to make it work. For example the current implementation I have in this pr fails I think ~14 UI tests. on the other hand the simpler one I proposed in https://github.com/neovim/neovim/pull/33036#discussion_r2009074507 fails arround ~60 .\r\n\r\nI've fixed the tests that were broken, added current implementation to test configs so now the actual statusline implementation is detached from tests. Also added test to verify the default. I guess can consider 1 and 2 done.\r\n\r\nYou can take a look at the test fixes I made to see what changes compared to the current C implementation.",
            "created_at": "2025-03-24T21:17:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2749419565",
            "id": 2749419565,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6j4NAt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749419565/reactions"
            },
            "updated_at": "2025-03-25T03:24:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749419565",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Normal Github Monday.\r\n\r\nforgot about that lol :3 . I guess we'll see if this is persistent or not after review-changes.",
            "created_at": "2025-03-24T21:19:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2749423140",
            "id": 2749423140,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6j4N4k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749423140/reactions"
            },
            "updated_at": "2025-03-24T21:19:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749423140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We can try this out on master, some open questions for followups:\r\n\r\n- do we want `nvim_eval_statusline('')` to return the default, as in https://github.com/neovim/neovim/pull/30721 ?\r\n- should the default be ''? what happens if user sets '' ? for back-compat, we may want empty string to *internally* use your new default expression, without *returning* the expression.",
            "created_at": "2025-04-17T14:51:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2813200858",
            "id": 2813200858,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6nrgna",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2813200858/reactions"
            },
            "updated_at": "2025-04-17T15:03:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2813200858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> do we want nvim_eval_statusline('') to return the default, as in https://github.com/neovim/neovim/pull/30721 ?\r\n\r\nI've personally been treating as `nvim_eval_statusline` as it purely returns the evaluation result of the expression not do magical stuff kind of. So I utilized the option mechanics we have already in place to implement this. In that sense stl is just another option with userfacing default value. setting it to empty string resets it. I guess if we were to hide the default statusline expression, we'll have to return after eval value of default statusline on `nvim_eval_statusline('')` . For example in place of %f we will be returning the filename. Returning the expression feels like an anti-pattern. kind of like it's forced on `nvim_eval_statusline` . you won't expect an eval api to return the expression instead of returning the evaluated result. If we return the evaluated result it's not really accessible  for plugin/user to modify it.\r\n\r\n> should the default be ''? what happens if user sets '' ? for back-compat, we may want empty string to internally use your new default expression, without returning the expression.\r\n\r\nThis is interesting. I'd like more more opinion on if we should hide the default value or not. If I do this, it won't be from the  option subsystem like I'm using now. It'll have to be implemented somewhere in statusline-evaluation pipeline in C side of things. To me personally, exposing the default option value to users seemed like e better idea. Atleast most of the options does that right? Instead of having a hidden default value.\r\n\r\n\r\nIs a change to the default value of an option a severe breaking change if the UI is the same?\r\nAnother one is if we change the default expression in the future, which we definitely plan to do. That would be both breaking for default option value and UI. If we keep the default option value to '' and have a hidden expression under the hood. Change that still breaking to UI but the option doesn't change. Is it not better to keep them in sync?\r\n",
            "created_at": "2025-04-17T15:36:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2813351359",
            "id": 2813351359,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6nsFW_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2813351359/reactions"
            },
            "updated_at": "2025-04-17T15:36:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2813351359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> exposing the default option value to users seemed like e better idea\r\n\r\nTechnically it is, and long-term it probably is also. I may be over-concerned about back-compat here, and after more thought I agree that it's not worth the complexity.\r\n\r\nSo let's try this out.",
            "created_at": "2025-04-21T22:00:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2819586525",
            "id": 2819586525,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oD3nd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2819586525/reactions"
            },
            "updated_at": "2025-04-21T22:00:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2819586525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This commit now overwrites `lualine`'s statusline when a dashboard is shown. Before this commit it used to show `statusline=%#lualine_transparent#` and after this commit it shows `statusline=%<%f %h%w%m%r %=%{% &showcmdloc == 'statusline' ? '%-10.S ' : '' %}%{% exists('b:keymap_name') ? '<'..b:keymap_name..'> ' : '' %}%{% &ruler ? ( &rulerformat == '' ? '%-14.(%l,%c%V%) %P' : &rulerformat ) : '' %}` when a dashboard is shown.\r\n\r\nIs there anything the user can do to revert this behavior from his personal configuration? Is this something that should be resolved in `lualine` itself?",
            "created_at": "2025-04-22T09:49:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2820785529",
            "id": 2820785529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oIcV5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820785529/reactions"
            },
            "updated_at": "2025-04-22T09:49:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820785529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Is there anything the user can do to revert this behavior from his personal configuration? Is this something that should be resolved in `lualine` itself?\r\n\r\nyou can do `vim.o.statusline = \" \"` this worked in my end.",
            "created_at": "2025-04-22T09:59:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2820811496",
            "id": 2820811496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oIiro",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820811496/reactions"
            },
            "updated_at": "2025-04-22T09:59:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820811496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/93438531?v=4",
                "events_url": "https://api.github.com/users/quebn/events{/privacy}",
                "followers_url": "https://api.github.com/users/quebn/followers",
                "following_url": "https://api.github.com/users/quebn/following{/other_user}",
                "gists_url": "https://api.github.com/users/quebn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quebn",
                "id": 93438531,
                "login": "quebn",
                "node_id": "U_kgDOBZHCQw",
                "organizations_url": "https://api.github.com/users/quebn/orgs",
                "received_events_url": "https://api.github.com/users/quebn/received_events",
                "repos_url": "https://api.github.com/users/quebn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quebn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quebn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quebn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> you can do vim.o.statusline = \" \" this worked in my end.\r\n\r\nThat still shows an empty statusline which is visible on the dashboard. Why is this overwriting the lualine statusline is what I'm wondering? Like I said before this commit it used to show `statusline=%#lualine_transparent#`. Now it's not respecting that value, but instead overwrites it.",
            "created_at": "2025-04-22T10:04:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2820824339",
            "id": 2820824339,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oIl0T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820824339/reactions"
            },
            "updated_at": "2025-04-22T10:06:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820824339",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "the `\" \"`must have a space inside the quotes it otherwise it wont work, you can also try `vim.o.statusline = \"%#lualine_transparent#\"`.\r\n",
            "created_at": "2025-04-22T10:13:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2820846991",
            "id": 2820846991,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oIrWP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820846991/reactions"
            },
            "updated_at": "2025-04-22T10:13:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820846991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/93438531?v=4",
                "events_url": "https://api.github.com/users/quebn/events{/privacy}",
                "followers_url": "https://api.github.com/users/quebn/followers",
                "following_url": "https://api.github.com/users/quebn/following{/other_user}",
                "gists_url": "https://api.github.com/users/quebn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quebn",
                "id": 93438531,
                "login": "quebn",
                "node_id": "U_kgDOBZHCQw",
                "organizations_url": "https://api.github.com/users/quebn/orgs",
                "received_events_url": "https://api.github.com/users/quebn/received_events",
                "repos_url": "https://api.github.com/users/quebn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quebn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quebn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quebn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, I've tried that and it works if I specifically define it `vim.o.statusline = \"%#lualine_transparent#\"`. I'm asking why it gets overwritten. This did not happen before this commit and it was getting the correct value on its own.",
            "created_at": "2025-04-22T10:19:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2820861512",
            "id": 2820861512,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oIu5I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820861512/reactions"
            },
            "updated_at": "2025-04-22T10:19:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820861512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I found that lualine only sets the transparent statusline when `vim.go.statusline == ''` (but this is no longer the case after this commit). I'll create an issue over there to take into consideration this new change.",
            "created_at": "2025-04-22T10:29:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2820887019",
            "id": 2820887019,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oI1Hr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820887019/reactions"
            },
            "updated_at": "2025-04-22T10:29:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820887019",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "These reports seem to indicate we should go with\r\n> should the default be ''? what happens if user sets '' ? for back-compat, we may want empty string to internally use your new default expression, without returning the expression.\r\n\r\nPlease open a new issue.",
            "created_at": "2025-04-22T10:51:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2820936467",
            "id": 2820936467,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oJBMT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820936467/reactions"
            },
            "updated_at": "2025-04-22T10:51:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820936467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@luukvbaal Are you referring to me? Because you quoted someone else (English is not native to me and I may be interpreting things wrong based just on the written text). I'm just asking as to avoid any confusion. I wouldn't want to create a new issue myself if you're not referring to me, as I myself am not sure if this is something that should be handled on Neovim or lualine side.",
            "created_at": "2025-04-22T11:04:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/33036#issuecomment-2820967957",
            "id": 2820967957,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
            "node_id": "IC_kwDOAPphoM6oJI4V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820967957/reactions"
            },
            "updated_at": "2025-04-22T11:04:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2820967957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33036/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33036/commits",
    "created_at": "2025-03-23T10:34:19Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33036.diff",
    "draft": false,
    "head": {
        "label": "shadmansaleh:enhance/refactor_c_default_stl_impl",
        "ref": "enhance/refactor_c_default_stl_impl",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/shadmansaleh/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/shadmansaleh/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/shadmansaleh/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/shadmansaleh/neovim/branches{/branch}",
            "clone_url": "https://github.com/shadmansaleh/neovim.git",
            "collaborators_url": "https://api.github.com/repos/shadmansaleh/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/shadmansaleh/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/shadmansaleh/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/shadmansaleh/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/shadmansaleh/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/shadmansaleh/neovim/contributors",
            "created_at": "2021-03-16T15:07:33Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/shadmansaleh/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/shadmansaleh/neovim/downloads",
            "events_url": "https://api.github.com/repos/shadmansaleh/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/shadmansaleh/neovim/forks",
            "full_name": "shadmansaleh/neovim",
            "git_commits_url": "https://api.github.com/repos/shadmansaleh/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/shadmansaleh/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/shadmansaleh/neovim/git/tags{/sha}",
            "git_url": "git://github.com/shadmansaleh/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/shadmansaleh/neovim/hooks",
            "html_url": "https://github.com/shadmansaleh/neovim",
            "id": 348391941,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/shadmansaleh/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/shadmansaleh/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/shadmansaleh/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/shadmansaleh/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/shadmansaleh/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/shadmansaleh/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/shadmansaleh/neovim/merges",
            "milestones_url": "https://api.github.com/repos/shadmansaleh/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNDgzOTE5NDE=",
            "notifications_url": "https://api.github.com/repos/shadmansaleh/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/shadmansaleh/neovim/pulls{/number}",
            "pushed_at": "2025-04-28T05:37:20Z",
            "releases_url": "https://api.github.com/repos/shadmansaleh/neovim/releases{/id}",
            "size": 311366,
            "ssh_url": "git@github.com:shadmansaleh/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/shadmansaleh/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/shadmansaleh/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/shadmansaleh/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/shadmansaleh/neovim/subscription",
            "svn_url": "https://github.com/shadmansaleh/neovim",
            "tags_url": "https://api.github.com/repos/shadmansaleh/neovim/tags",
            "teams_url": "https://api.github.com/repos/shadmansaleh/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/shadmansaleh/neovim/git/trees{/sha}",
            "updated_at": "2025-04-22T14:14:44Z",
            "url": "https://api.github.com/repos/shadmansaleh/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "e30bde69fef66e3b1439e7f59f9f31247975b9ab",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
            "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
            "followers_url": "https://api.github.com/users/shadmansaleh/followers",
            "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
            "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/shadmansaleh",
            "id": 13149513,
            "login": "shadmansaleh",
            "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
            "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
            "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
            "repos_url": "https://api.github.com/users/shadmansaleh/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/shadmansaleh",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33036",
    "id": 2411851855,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33036",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "tabline, winbar, statuscolumn",
            "id": 3385615828,
            "name": "statusline",
            "node_id": "LA_kwDOAPphoM7JzGXU",
            "url": "https://api.github.com/repos/neovim/neovim/labels/statusline"
        }
    ],
    "locked": false,
    "merge_commit_sha": "28e31f5d3d16fac349d5e2b55837afddb822b0f3",
    "merged_at": "2025-04-21T22:05:35Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 33,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 68,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-04-28T13:01:46Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "PR_kwDOAPphoM6PwfBP",
    "number": 33036,
    "patch_url": "https://github.com/neovim/neovim/pull/33036.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33036/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/e30bde69fef66e3b1439e7f59f9f31247975b9ab",
    "title": "refactor: replace C implementation of default statusline with statusline expression",
    "updated_at": "2025-04-22T11:04:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33036",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
        "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
        "followers_url": "https://api.github.com/users/shadmansaleh/followers",
        "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
        "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/shadmansaleh",
        "id": 13149513,
        "login": "shadmansaleh",
        "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
        "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
        "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
        "repos_url": "https://api.github.com/users/shadmansaleh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/shadmansaleh",
        "user_view_type": "public"
    }
}