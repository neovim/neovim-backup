{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35223/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35223/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35223"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35223"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35223/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35223"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b473a209b71ae0fb2980f42e67f0c55701186eaa"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6249,
            "forks_count": 6249,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1985,
            "open_issues_count": 1985,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-11T22:39:04Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 336901,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 91885,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-12T02:40:46Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 91885,
            "watchers_count": 91885,
            "web_commit_signoff_required": false
        },
        "sha": "e94d8f03b959182e7597109760079dc8c295368d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Closes: #34367\r\nCloses: #35166 \r\n\r\nWork towards: #35149 ",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35223#discussion_r2261129223"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35223"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261129223"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "// TODO\r\nFeels very hacky, think of a better way",
            "commit_id": "b473a209b71ae0fb2980f42e67f0c55701186eaa",
            "created_at": "2025-08-07T18:31:44Z",
            "diff_hunk": "@@ -136,6 +136,39 @@ char *server_address_new(const char *name)\n   return xstrdup(fmt);\n }\n \n+/// Generates unique address for remote server.",
            "html_url": "https://github.com/neovim/neovim/pull/35223#discussion_r2261129223",
            "id": 2261129223,
            "line": 139,
            "node_id": "PRRC_kwDOAPphoM6GxhgH",
            "original_commit_id": "0b8d599c2c48625eae1748ae4c6ff3b07186cb49",
            "original_line": 139,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/msgpack_rpc/server.c",
            "position": 4,
            "pull_request_review_id": 3098343963,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35223",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261129223/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-07T18:31:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261129223",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
                "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
                "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sathya-pramodh",
                "id": 94102031,
                "login": "sathya-pramodh",
                "node_id": "U_kgDOBZviDw",
                "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
                "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
                "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sathya-pramodh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35223#discussion_r2261176347"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35223"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261176347"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "// TODO\r\nSend `restart` event to all connected UIs.",
            "commit_id": "b473a209b71ae0fb2980f42e67f0c55701186eaa",
            "created_at": "2025-08-07T18:58:25Z",
            "diff_hunk": "@@ -4852,46 +4848,111 @@ static void ex_quitall(exarg_T *eap)\n \n /// \":restart\": restart the Nvim server (using \":qall!\").\n /// \":restart +cmd\": restart the Nvim server using \":cmd\".\n-/// \":restart +cmd <command>\": restart the Nvim server using \":cmd\" and add -c <command> to the new server.\n+/// \":restart +cmd <command>\": restart the Nvim server using \":cmd\" and add runs <command> in the new server.\n static void ex_restart(exarg_T *eap)\n {\n-  // Patch v:argv to include \"-c <arg>\" when it restarts.\n-  if (eap->arg != NULL) {\n-    const list_T *l = get_vim_var_list(VV_ARGV);\n-    int argc = tv_list_len(l);\n-    list_T *argv_cpy = tv_list_alloc(argc + 2);\n-    bool added_startup_arg = false;\n-    TV_LIST_ITER_CONST(l, li, {\n-      const char *arg = tv_get_string(TV_LIST_ITEM_TV(li));\n-      size_t arg_size = strlen(arg);\n-      assert(arg_size <= (size_t)SSIZE_MAX);\n-      tv_list_append_string(argv_cpy, arg, (ssize_t)arg_size);\n-      if (!added_startup_arg) {\n-        tv_list_append_string(argv_cpy, \"-c\", 2);\n-        size_t cmd_size = strlen(eap->arg);\n-        assert(cmd_size <= (size_t)SSIZE_MAX);\n-        tv_list_append_string(argv_cpy, eap->arg, (ssize_t)cmd_size);\n-        added_startup_arg = true;\n-      }\n-    });\n-    set_vim_var_list(VV_ARGV, argv_cpy);\n-  }\n-  char *quit_cmd = (eap->do_ecmd_cmd) ? eap->do_ecmd_cmd : \"qall!\";\n   Error err = ERROR_INIT;\n   if ((cmdmod.cmod_flags & CMOD_CONFIRM) && check_changed_any(false, false)) {\n     return;\n   }\n-  restarting = true;\n+\n+  const char *exepath = get_vim_var_str(VV_PROGPATH);\n+  const list_T *l = get_vim_var_list(VV_ARGV);\n+  int argc = tv_list_len(l);\n+  assert(argc > 0);\n+  char *prev_addr = NULL;\n+  TV_LIST_ITER_CONST(l, li, {\n+    const char *arg = tv_get_string(TV_LIST_ITEM_TV(li));\n+    if (strequal(arg, \"--listen\")) {\n+      li = TV_LIST_ITEM_NEXT(l, li);\n+      prev_addr = xstrdup(tv_get_string(TV_LIST_ITEM_TV(li)));\n+      break;\n+    }\n+  });\n+\n+  char *listen_addr;\n+  if (!prev_addr || !strrchr(prev_addr, ':')) {\n+    listen_addr = server_address_new(\"nvim\");\n+  } else {\n+    listen_addr = server_remote_address_new(prev_addr);\n+    if (!listen_addr) {\n+      emsg(\"no new remote addresses could be created.\");\n+      return;\n+    }\n+    xfree(prev_addr);\n+  }\n+\n+  char **argv;\n+  argv = xcalloc((size_t)argc + 4, sizeof(char *));\n+  bool had_minmin = false;\n+  size_t i = 0;\n+  TV_LIST_ITER_CONST(l, li, {\n+    const char *arg = tv_get_string(TV_LIST_ITEM_TV(li));\n+    if (i > 0 && !had_minmin && strequal(arg, \"--\")) {\n+      had_minmin = true;\n+    }\n+    // Skip over --listen <addr> as we are already generating a new address.\n+    if (!had_minmin && strequal(arg, \"--listen\")) {\n+      li = TV_LIST_ITEM_NEXT(l, li);\n+      continue;\n+    }\n+    // Exclude --embed/--headless from `argv`, as we are starting it with another listen address.\n+    if (i == 0 || had_minmin\n+        || (!strequal(arg, \"--embed\") && !strequal(arg, \"--headless\"))) {\n+      argv[i++] = xstrdup(arg);\n+      if (i == 1) {\n+        argv[i++] = xstrdup(\"--headless\");\n+        argv[i++] = xstrdup(\"--listen\");\n+        argv[i++] = xstrdup(listen_addr);\n+      }\n+    }\n+  });\n+\n+  CallbackReader on_err = CALLBACK_READER_INIT;\n+  on_err.fwd_err = true;\n+\n+#ifdef MSWIN\n+  // TODO(justinmk): detach breaks `tt.setup_child_nvim` tests on Windows?\n+  bool detach = os_env_exists(\"__NVIM_DETACH\", true);\n+#else\n+  bool detach = true;\n+#endif\n+  varnumber_T exit_status;\n+  Channel *channel = channel_job_start(argv, exepath,\n+                                       CALLBACK_READER_INIT, on_err, CALLBACK_NONE,\n+                                       false, true, true, detach, kChannelStdinPipe,\n+                                       NULL, 0, 0, NULL, &exit_status);\n+  if (!channel) {\n+    ELOG(\"cannot create a channel job\");\n+    xfree(argv);\n+    xfree(listen_addr);\n+    return;\n+  }\n+\n+  if (!remote_ui_restart(current_ui, cstr_as_string(eap->arg), listen_addr, &err)) {",
            "html_url": "https://github.com/neovim/neovim/pull/35223#discussion_r2261176347",
            "id": 2261176347,
            "line": 4946,
            "node_id": "PRRC_kwDOAPphoM6GxtAb",
            "original_commit_id": "bd702278fdfc00c49cc6fe437688aee6848f7f30",
            "original_line": 4953,
            "original_position": 147,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": 155,
            "pull_request_review_id": 3098408470,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35223",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261176347/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-08T14:22:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2261176347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
                "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
                "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sathya-pramodh",
                "id": 94102031,
                "login": "sathya-pramodh",
                "node_id": "U_kgDOBZviDw",
                "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
                "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
                "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sathya-pramodh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35223#discussion_r2263085983"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35223"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2263085983"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "// TODO\r\n`getout` would fail the assertion `!ui_client_channel_id` when called from here. Maybe `os_exit(1)` is better?",
            "commit_id": "b473a209b71ae0fb2980f42e67f0c55701186eaa",
            "created_at": "2025-08-08T14:07:02Z",
            "diff_hunk": "@@ -299,53 +304,70 @@ void ui_client_event_restart(Array args)\n   restart_pending = true;\n }\n \n+/// @return true If the client can still attempt to restart.\n+bool ui_client_can_attempt_restart(void)\n+{\n+  return 0 < restart_attempts && restart_attempts <= MAX_RESTART_ATTEMPTS;\n+}\n+\n /// Called when the current server has exited.\n void ui_client_may_restart_server(void)\n {\n   if (!restart_pending) {\n     return;\n   }\n+\n+  bool should_exit = false;\n+  if (restart_attempts >= MAX_RESTART_ATTEMPTS) {\n+    ELOG(\"could not restart even after %d retries\", MAX_RESTART_ATTEMPTS);\n+    restart_pending = false;\n+    should_exit = true;\n+    goto cleanup;\n+  }\n   restart_pending = false;\n \n-  size_t argc;\n-  char **argv = NULL;\n   if (restart_args.size < 2\n       || restart_args.items[0].type != kObjectTypeString\n-      || restart_args.items[1].type != kObjectTypeArray\n-      || (argc = restart_args.items[1].data.array.size) < 1) {\n+      || restart_args.items[1].type != kObjectTypeString) {\n     ELOG(\"Error handling ui event 'restart'\");\n     goto cleanup;\n   }\n \n-  // 1. Get executable path and command-line arguments.\n-  const char *exepath = restart_args.items[0].data.string.data;\n-  argv = xcalloc(argc + 1, sizeof(char *));\n-  for (size_t i = 0; i < argc; i++) {\n-    if (restart_args.items[1].data.array.items[i].type == kObjectTypeString) {\n-      argv[i] = restart_args.items[1].data.array.items[i].data.string.data;\n-    }\n-    if (argv[i] == NULL) {\n-      argv[i] = \"\";\n-    }\n-  }\n-\n-  // 2. Start a new `nvim --embed` server.\n-  uint64_t rv = ui_client_start_server(exepath, argc, argv);\n-  if (!rv) {\n-    ELOG(\"failed to start nvim server\");\n-    goto cleanup;\n+  const char *error = NULL;\n+  char *listen_addr = restart_args.items[1].data.string.data;\n+  bool is_tcp = strrchr(listen_addr, ':');\n+  uint64_t chan_id = channel_connect(is_tcp, listen_addr, true, CALLBACK_READER_INIT, 50, &error);\n+  if (error != NULL) {\n+    ELOG(\"%s\", error);\n+    // Recurse for at least MAX_RESTART_ATTEMPTS before giving up.\n+    restart_pending = true;\n+    restart_attempts += 1;\n+    ui_client_may_restart_server();\n+    return;\n   }\n \n-  // 3. Client-side server re-attach.\n-  ui_client_channel_id = rv;\n-  ui_client_is_remote = false;\n+  // Client-side server re-attach.\n+  ui_client_channel_id = chan_id;\n+  ui_client_is_remote = is_tcp;\n   ui_client_attach(tui_width, tui_height, tui_term, tui_rgb);\n \n-  ILOG(\"restarted server id=%\" PRId64, rv);\n+  String command = restart_args.items[0].data.string;\n+  if (command.data && strlen(command.data) > 0) {\n+    MAXSIZE_TEMP_ARRAY(cmd_args, 1);\n+    ADD_C(cmd_args, STRING_OBJ(command));\n+    if (!rpc_send_event(ui_client_channel_id, \"nvim_command\", cmd_args)) {\n+      ELOG(\"cannot execute '%s'\", command.data);\n+    }\n+  }\n+\n+  ILOG(\"restarted server id=%\" PRId64, chan_id);\n cleanup:\n-  xfree(argv);\n   api_free_array(restart_args);\n   restart_args = (Array)ARRAY_DICT_INIT;\n+  restart_attempts = 0;\n+  if (should_exit) {\n+    getout(1);",
            "html_url": "https://github.com/neovim/neovim/pull/35223#discussion_r2263085983",
            "id": 2263085983,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6G4_Of",
            "original_commit_id": "eece794f0fbfe726e286a2fb5f16d87924f575f7",
            "original_line": 369,
            "original_position": 111,
            "original_start_line": null,
            "path": "src/nvim/ui_client.c",
            "position": null,
            "pull_request_review_id": 3098408470,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35223",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2263085983/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-08T14:22:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2263085983",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
                "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
                "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sathya-pramodh",
                "id": 94102031,
                "login": "sathya-pramodh",
                "node_id": "U_kgDOBZviDw",
                "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
                "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
                "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sathya-pramodh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35223#discussion_r2263132774"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35223"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2263132774"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "// FIX Maybe 100 is too low?\r\nRef: https://github.com/neovim/neovim/actions/runs/16832429478/job/47683266097?pr=35223",
            "commit_id": "b473a209b71ae0fb2980f42e67f0c55701186eaa",
            "created_at": "2025-08-08T14:22:15Z",
            "diff_hunk": "@@ -39,6 +39,8 @@ static int tui_height = 0;\n static char *tui_term = \"\";\n static bool tui_rgb = false;\n static bool ui_client_is_remote = false;\n+static int restart_attempts = 0;\n+#define MAX_RESTART_ATTEMPTS 100",
            "html_url": "https://github.com/neovim/neovim/pull/35223#discussion_r2263132774",
            "id": 2263132774,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6G5Kpm",
            "original_commit_id": "eece794f0fbfe726e286a2fb5f16d87924f575f7",
            "original_line": 43,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/ui_client.c",
            "position": null,
            "pull_request_review_id": 3098408470,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35223",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2263132774/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-08T14:23:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2263132774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
                "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
                "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sathya-pramodh",
                "id": 94102031,
                "login": "sathya-pramodh",
                "node_id": "U_kgDOBZviDw",
                "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
                "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
                "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sathya-pramodh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35223#discussion_r2264637635"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35223"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264637635"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Bumped to 1000 in [550af8e](https://github.com/neovim/neovim/pull/35223/commits/550af8e5fdb45bfa9f9985c0c987ef0fb4a45fb7).",
            "commit_id": "b473a209b71ae0fb2980f42e67f0c55701186eaa",
            "created_at": "2025-08-09T09:52:37Z",
            "diff_hunk": "@@ -39,6 +39,8 @@ static int tui_height = 0;\n static char *tui_term = \"\";\n static bool tui_rgb = false;\n static bool ui_client_is_remote = false;\n+static int restart_attempts = 0;\n+#define MAX_RESTART_ATTEMPTS 100",
            "html_url": "https://github.com/neovim/neovim/pull/35223#discussion_r2264637635",
            "id": 2264637635,
            "in_reply_to_id": 2263132774,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6G-6DD",
            "original_commit_id": "eece794f0fbfe726e286a2fb5f16d87924f575f7",
            "original_line": 43,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/ui_client.c",
            "position": null,
            "pull_request_review_id": 3102896338,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35223",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264637635/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-09T09:52:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264637635",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
                "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
                "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sathya-pramodh",
                "id": 94102031,
                "login": "sathya-pramodh",
                "node_id": "U_kgDOBZviDw",
                "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
                "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
                "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sathya-pramodh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35223#discussion_r2264637751"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35223"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264637751"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Resolved: [550af8e](https://github.com/neovim/neovim/pull/35223/commits/550af8e5fdb45bfa9f9985c0c987ef0fb4a45fb7).",
            "commit_id": "b473a209b71ae0fb2980f42e67f0c55701186eaa",
            "created_at": "2025-08-09T09:52:57Z",
            "diff_hunk": "@@ -299,53 +304,70 @@ void ui_client_event_restart(Array args)\n   restart_pending = true;\n }\n \n+/// @return true If the client can still attempt to restart.\n+bool ui_client_can_attempt_restart(void)\n+{\n+  return 0 < restart_attempts && restart_attempts <= MAX_RESTART_ATTEMPTS;\n+}\n+\n /// Called when the current server has exited.\n void ui_client_may_restart_server(void)\n {\n   if (!restart_pending) {\n     return;\n   }\n+\n+  bool should_exit = false;\n+  if (restart_attempts >= MAX_RESTART_ATTEMPTS) {\n+    ELOG(\"could not restart even after %d retries\", MAX_RESTART_ATTEMPTS);\n+    restart_pending = false;\n+    should_exit = true;\n+    goto cleanup;\n+  }\n   restart_pending = false;\n \n-  size_t argc;\n-  char **argv = NULL;\n   if (restart_args.size < 2\n       || restart_args.items[0].type != kObjectTypeString\n-      || restart_args.items[1].type != kObjectTypeArray\n-      || (argc = restart_args.items[1].data.array.size) < 1) {\n+      || restart_args.items[1].type != kObjectTypeString) {\n     ELOG(\"Error handling ui event 'restart'\");\n     goto cleanup;\n   }\n \n-  // 1. Get executable path and command-line arguments.\n-  const char *exepath = restart_args.items[0].data.string.data;\n-  argv = xcalloc(argc + 1, sizeof(char *));\n-  for (size_t i = 0; i < argc; i++) {\n-    if (restart_args.items[1].data.array.items[i].type == kObjectTypeString) {\n-      argv[i] = restart_args.items[1].data.array.items[i].data.string.data;\n-    }\n-    if (argv[i] == NULL) {\n-      argv[i] = \"\";\n-    }\n-  }\n-\n-  // 2. Start a new `nvim --embed` server.\n-  uint64_t rv = ui_client_start_server(exepath, argc, argv);\n-  if (!rv) {\n-    ELOG(\"failed to start nvim server\");\n-    goto cleanup;\n+  const char *error = NULL;\n+  char *listen_addr = restart_args.items[1].data.string.data;\n+  bool is_tcp = strrchr(listen_addr, ':');\n+  uint64_t chan_id = channel_connect(is_tcp, listen_addr, true, CALLBACK_READER_INIT, 50, &error);\n+  if (error != NULL) {\n+    ELOG(\"%s\", error);\n+    // Recurse for at least MAX_RESTART_ATTEMPTS before giving up.\n+    restart_pending = true;\n+    restart_attempts += 1;\n+    ui_client_may_restart_server();\n+    return;\n   }\n \n-  // 3. Client-side server re-attach.\n-  ui_client_channel_id = rv;\n-  ui_client_is_remote = false;\n+  // Client-side server re-attach.\n+  ui_client_channel_id = chan_id;\n+  ui_client_is_remote = is_tcp;\n   ui_client_attach(tui_width, tui_height, tui_term, tui_rgb);\n \n-  ILOG(\"restarted server id=%\" PRId64, rv);\n+  String command = restart_args.items[0].data.string;\n+  if (command.data && strlen(command.data) > 0) {\n+    MAXSIZE_TEMP_ARRAY(cmd_args, 1);\n+    ADD_C(cmd_args, STRING_OBJ(command));\n+    if (!rpc_send_event(ui_client_channel_id, \"nvim_command\", cmd_args)) {\n+      ELOG(\"cannot execute '%s'\", command.data);\n+    }\n+  }\n+\n+  ILOG(\"restarted server id=%\" PRId64, chan_id);\n cleanup:\n-  xfree(argv);\n   api_free_array(restart_args);\n   restart_args = (Array)ARRAY_DICT_INIT;\n+  restart_attempts = 0;\n+  if (should_exit) {\n+    getout(1);",
            "html_url": "https://github.com/neovim/neovim/pull/35223#discussion_r2264637751",
            "id": 2264637751,
            "in_reply_to_id": 2263085983,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6G-6E3",
            "original_commit_id": "eece794f0fbfe726e286a2fb5f16d87924f575f7",
            "original_line": 369,
            "original_position": 111,
            "original_start_line": null,
            "path": "src/nvim/ui_client.c",
            "position": null,
            "pull_request_review_id": 3102896398,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35223",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264637751/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-09T09:52:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264637751",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
                "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
                "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sathya-pramodh",
                "id": 94102031,
                "login": "sathya-pramodh",
                "node_id": "U_kgDOBZviDw",
                "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
                "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
                "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sathya-pramodh",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "## TODO:\r\n- [x] Figure out how to do this: https://github.com/neovim/neovim/pull/35045#issuecomment-3162282540\r\n   -  Fixed with https://github.com/neovim/neovim/pull/35223/commits/4b802e90fcda86ee2dafd1d24fabc5d1053eb255, but not exactly like the comment said.\r\n- [ ] Try to listen on same socket as `VV_SEND_SERVER`  in the local context instead of having to create a new socket to listen on. This is probably why [this](https://github.com/neovim/neovim/actions/runs/16848110372/job/47730517597?pr=35223) fails.\r\n   - Didn't do this but creating the new dirs as needed ~~which works just fine~~ still breaks.\r\n   - `fix_fname` also doesn't work.\r\n- [x] Fix breaking tests\r\n  - [x] Figure out why `-c`, `--cmd`, `:restart foo | bar` are broken.\r\n     - It's not actually broken, it was just not showing on the cmdline if `nvim_command` is run. Using `extui` now to check for those outputs.\r\n     - This breaks `zig build` (?), gotta investigate that.\r\n  - [ ] Figure out why `startup_spec.lua` fails to create a new socket file.\r\n     - Creating dirs in `ex_restart` ~~works just fine~~ still breaks.\r\n     - Don't know why `E5113: Lua chunk:` happens.\r\n  - [ ] Memory leaks in startup code for the server (?). Don't know why it happens though.\r\n- [ ] Docs",
            "created_at": "2025-08-07T18:27:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/35223#issuecomment-3165303328",
            "id": 3165303328,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35223",
            "node_id": "IC_kwDOAPphoM68qrIg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165303328/reactions"
            },
            "updated_at": "2025-08-10T13:19:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3165303328",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
                "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
                "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sathya-pramodh",
                "id": 94102031,
                "login": "sathya-pramodh",
                "node_id": "U_kgDOBZviDw",
                "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
                "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
                "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sathya-pramodh",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35223/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35223/commits",
    "created_at": "2025-08-07T18:23:19Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35223.diff",
    "draft": true,
    "head": {
        "label": "sathya-pramodh:server_side_restart",
        "ref": "server_side_restart",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/sathya-pramodh/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/sathya-pramodh/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/sathya-pramodh/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/sathya-pramodh/neovim/branches{/branch}",
            "clone_url": "https://github.com/sathya-pramodh/neovim.git",
            "collaborators_url": "https://api.github.com/repos/sathya-pramodh/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/sathya-pramodh/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/sathya-pramodh/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/sathya-pramodh/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/sathya-pramodh/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/sathya-pramodh/neovim/contributors",
            "created_at": "2025-03-02T11:19:38Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/sathya-pramodh/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/sathya-pramodh/neovim/downloads",
            "events_url": "https://api.github.com/repos/sathya-pramodh/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/sathya-pramodh/neovim/forks",
            "full_name": "sathya-pramodh/neovim",
            "git_commits_url": "https://api.github.com/repos/sathya-pramodh/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/sathya-pramodh/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/sathya-pramodh/neovim/git/tags{/sha}",
            "git_url": "git://github.com/sathya-pramodh/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/sathya-pramodh/neovim/hooks",
            "html_url": "https://github.com/sathya-pramodh/neovim",
            "id": 941469487,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/sathya-pramodh/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/sathya-pramodh/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/sathya-pramodh/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/sathya-pramodh/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/sathya-pramodh/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/sathya-pramodh/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/sathya-pramodh/neovim/merges",
            "milestones_url": "https://api.github.com/repos/sathya-pramodh/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOB2vLw",
            "notifications_url": "https://api.github.com/repos/sathya-pramodh/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
                "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
                "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sathya-pramodh",
                "id": 94102031,
                "login": "sathya-pramodh",
                "node_id": "U_kgDOBZviDw",
                "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
                "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
                "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sathya-pramodh",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/sathya-pramodh/neovim/pulls{/number}",
            "pushed_at": "2025-08-11T17:53:43Z",
            "releases_url": "https://api.github.com/repos/sathya-pramodh/neovim/releases{/id}",
            "size": 326487,
            "ssh_url": "git@github.com:sathya-pramodh/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/sathya-pramodh/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/sathya-pramodh/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/sathya-pramodh/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/sathya-pramodh/neovim/subscription",
            "svn_url": "https://github.com/sathya-pramodh/neovim",
            "tags_url": "https://api.github.com/repos/sathya-pramodh/neovim/tags",
            "teams_url": "https://api.github.com/repos/sathya-pramodh/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/sathya-pramodh/neovim/git/trees{/sha}",
            "updated_at": "2025-08-10T10:57:41Z",
            "url": "https://api.github.com/repos/sathya-pramodh/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b473a209b71ae0fb2980f42e67f0c55701186eaa",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
            "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
            "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
            "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
            "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/sathya-pramodh",
            "id": 94102031,
            "login": "sathya-pramodh",
            "node_id": "U_kgDOBZviDw",
            "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
            "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
            "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/sathya-pramodh",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35223",
    "id": 2728642286,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35223",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "cfe595f742163787e987dd07d9a649fda6748f26",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6io8bu",
    "number": 35223,
    "patch_url": "https://github.com/neovim/neovim/pull/35223.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35223/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b473a209b71ae0fb2980f42e67f0c55701186eaa",
    "title": "fix: formalize restart event",
    "updated_at": "2025-08-11T17:53:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35223",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/94102031?v=4",
        "events_url": "https://api.github.com/users/sathya-pramodh/events{/privacy}",
        "followers_url": "https://api.github.com/users/sathya-pramodh/followers",
        "following_url": "https://api.github.com/users/sathya-pramodh/following{/other_user}",
        "gists_url": "https://api.github.com/users/sathya-pramodh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sathya-pramodh",
        "id": 94102031,
        "login": "sathya-pramodh",
        "node_id": "U_kgDOBZviDw",
        "organizations_url": "https://api.github.com/users/sathya-pramodh/orgs",
        "received_events_url": "https://api.github.com/users/sathya-pramodh/received_events",
        "repos_url": "https://api.github.com/users/sathya-pramodh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sathya-pramodh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sathya-pramodh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sathya-pramodh",
        "user_view_type": "public"
    }
}