{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29116/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29116/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/29116"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29116"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29116/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29116"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/1f8a96afee383a0d70383c05da235dfe8e33e0e7"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5841,
            "forks_count": 5841,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1854,
            "open_issues_count": 1854,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-04T02:07:35Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 307298,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85859,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-04T02:07:39Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85859,
            "watchers_count": 85859,
            "web_commit_signoff_required": false
        },
        "sha": "d62d181ce065556be51d5eda0425aa42f427cc27",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This is a draft implementation of a lua wrapper around `nvim_create_usercommand`, which adds a basic API for creating scoped subcommands, based on the example in #29073.\r\n\r\nSee also: https://github.com/neovim/neovim/pull/29073#discussion_r1617940460\r\n\r\nThis implementation allows for only one level of subcommands. I think more would be overkill, but if desired, it would be possible to achieve more levels by making the `vim.usercommand.SubcommandOpts` type recursive (this could overwhelm users though).\r\n\r\nI'd like to get some feedback on whether this is going in the right direction, before continuing with documentation and tests.\r\n\r\nPlugins that implement this (with a similar approach):\r\n\r\n- [rustaceanvim](https://github.com/mrcjkb/rustaceanvim/blob/2fa45427c01ded4d3ecca72e357f8a60fd8e46d4/lua/rustaceanvim/commands/init.lua#L17)\r\n- [rocks.nvim](https://github.com/nvim-neorocks/rocks.nvim/blob/e52cfb8e78b6543f0d63d74c6d69ad7d98f0e892/lua/rocks/commands.lua#L130)",
    "closed_at": "2025-01-30T19:23:13Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I am in telepathic conversation with future justin, he says that `vim.usercommand` is too long and that is should be `vim.command` (maybe, just guessing).",
            "created_at": "2024-05-31T18:18:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2142764793",
            "id": 2142764793,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5_t_75",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 7,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142764793/reactions"
            },
            "updated_at": "2024-05-31T18:19:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142764793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nope, already got one of those. (`usercmd` could work, though)\r\n\r\nBut let's focus on whether we really want an extra API, which we're very conservative about. What is it that it offers over `vim.api.nvim_create_user_command`?",
            "created_at": "2024-05-31T18:20:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2142769027",
            "id": 2142769027,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5_uA-D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142769027/reactions"
            },
            "updated_at": "2024-05-31T18:22:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142769027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> But let's focus on whether we really want an extra API, which we're very conservative about. What is it that it offers over `vim.api.nvim_create_user_command`?\r\n\r\nIt handles the boilerplate of creating completions for subcommands and figuring out which one to invoke.\r\n\r\nFrom a user perspective, it's easier to discover subcommands if you rely on command completions (compared to a plugin polluting the command namespace for each possible action). I've heard feedback from plugin authors that Neovim not having a nice API for that is their reason for not implementing them (also, this feedback on my lua-plugin guide PR: https://github.com/neovim/neovim/pull/29073#discussion_r1617940460)\r\n\r\nWhat I'm wondering is: Is this a \"nice API\"? Or is it not flexible enough?\r\nIf I compare it to a CLI library, it's still quite lacking (no flags, options, etc.). But maybe Neovim commands don't need the same API as a CLI tool?",
            "created_at": "2024-05-31T18:41:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2142800367",
            "id": 2142800367,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5_uInv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142800367/reactions"
            },
            "updated_at": "2024-05-31T18:41:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2142800367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "My two cents on subcommands topic. In this issue as well as the linked discussion #29073 it is noted that people discover subcommands through completion. I have a counter point where some would prefer to have a flat list of commands instead of a nested/scoped subcommands. My rationale is fuzzy search. Telescope has [`builtin.commands`](https://github.com/nvim-telescope/telescope.nvim?tab=readme-ov-file#vim-pickers) and cmp has [command line completion](https://github.com/hrsh7th/nvim-cmp/blob/5260e5e8ecadaf13e6b82cf867a909f54e15fd07/doc/cmp.txt#L120-L129) where both fuzzy search through all available top level commands. This makes top level commands more discoverable than nested commands.\r\n\r\nIn my personal neovim setup I manually create top level user command for combined plugin subcommands as it is easier and more ergonomic to run a command this way with less key strokes. For example if a full plugin subcommand is `:Telescope live_grep` the fastest one can run it is `:Te<tab> li<tab><cr>`. While with a top level command and fuzzy completion one can do `:Tlg<tab><cr>`. This is also doable with a builtin tab completion in command line.\r\n\r\nAnother point for flat commands can be VS Code. Where cmd+shift+p opens a fuzzy picker with a flat list of all available commands in a shape of `Command description. [command-id]` (command-id can be omitted from picker). VS Code does not support nested commands/subcommands or passing arguments via this picker. Most commands are namespaced like `extension-name.command-name`. VS Code allows special characters like `.` and `-` in command names unlike neovim(do we want this to change?). Overall this experience leads to all commands to be in a single place and to be easily discoverable.\r\n\r\nI wanted to make sure that the higher discoverability point for top most commands is mentioned here before it will be recommended for all plugins to use subcommands.",
            "created_at": "2024-05-31T22:33:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2143060624",
            "id": 2143060624,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5_vIKQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143060624/reactions"
            },
            "updated_at": "2024-05-31T22:33:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143060624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5817809?v=4",
                "events_url": "https://api.github.com/users/antonk52/events{/privacy}",
                "followers_url": "https://api.github.com/users/antonk52/followers",
                "following_url": "https://api.github.com/users/antonk52/following{/other_user}",
                "gists_url": "https://api.github.com/users/antonk52/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antonk52",
                "id": 5817809,
                "login": "antonk52",
                "node_id": "MDQ6VXNlcjU4MTc4MDk=",
                "organizations_url": "https://api.github.com/users/antonk52/orgs",
                "received_events_url": "https://api.github.com/users/antonk52/received_events",
                "repos_url": "https://api.github.com/users/antonk52/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antonk52/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antonk52/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antonk52",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@antonk52 definitely an interesting take and valuable insight.\r\n\r\nWhen I speak of discoverability, I mostly mean discovering commands that I don't know exist or forgot what they are called.\r\nFor this, scoping is very helpful, and I don't care about the number of keystrokes. When it comes to saving keystrokes for commands that I use often, I typically rely on keymaps and/or aliases.\r\n\r\nWith top-level PascalCase commands, typing `Foo<tab>` or `FB<tab>` (fuzzy) could match both one plugin's `FooBar` and another plugin's `FootballBar`, whereas `Foo<space><tab>` will show me only `Foo` subcommands. That decreases discoverability if you're looking for actions related to `Foo`.",
            "created_at": "2024-06-01T05:50:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2143309763",
            "id": 2143309763,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5_wE_D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143309763/reactions"
            },
            "updated_at": "2024-06-01T05:50:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143309763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "maybe if subcommands are 'officially' added here and thus considered first class citizens rather than simply an implementation trick, then those fuzzy command searches could be expanded to included the subcommand too. ie, making `:Tli<tab>` also return `Telescope live_grep`. That would require this PR to make them discoverable/iterable from the root in the same way top level commands are though. ",
            "created_at": "2024-06-01T14:41:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2143471709",
            "id": 2143471709,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5_wshd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143471709/reactions"
            },
            "updated_at": "2024-06-01T14:41:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143471709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5981889?v=4",
                "events_url": "https://api.github.com/users/IndianBoy42/events{/privacy}",
                "followers_url": "https://api.github.com/users/IndianBoy42/followers",
                "following_url": "https://api.github.com/users/IndianBoy42/following{/other_user}",
                "gists_url": "https://api.github.com/users/IndianBoy42/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/IndianBoy42",
                "id": 5981889,
                "login": "IndianBoy42",
                "node_id": "MDQ6VXNlcjU5ODE4ODk=",
                "organizations_url": "https://api.github.com/users/IndianBoy42/orgs",
                "received_events_url": "https://api.github.com/users/IndianBoy42/received_events",
                "repos_url": "https://api.github.com/users/IndianBoy42/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/IndianBoy42/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/IndianBoy42/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/IndianBoy42",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It handles the boilerplate of creating completions for subcommands and figuring out which one to invoke.\r\n\r\nShow BEFORE and AFTER examples. If that is not compelling, then nothing else matters. Lots of words in this PR but no examples.",
            "created_at": "2024-06-01T15:26:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2143486960",
            "id": 2143486960,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5_wwPw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143486960/reactions"
            },
            "updated_at": "2024-06-01T15:27:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143486960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk sure :smile: \r\n\r\n## Before\r\n\r\n```lua\r\n---@class FooSubcommand\r\n---@field impl fun(args:string[], opts: table)\r\n---@field complete? fun(subcmd_arg_lead: string): string[]\r\n\r\n---@type table<string, FooSubcommand>\r\nlocal subcommand_tbl = {\r\n    action1 = {\r\n        impl = function(opts)\r\n          -- Implementation\r\n        end,\r\n        -- This subcommand has no completions\r\n    },\r\n    action2 = {\r\n        impl = function(opts)\r\n            -- Implementation\r\n        end,\r\n        complete = function(subcmd_arg_lead, ...)\r\n            -- Simplified example\r\n            local install_args = {\r\n                \"first\",\r\n                \"second\",\r\n                \"third\",\r\n            }\r\n            return vim.iter(install_args)\r\n                :filter(function(install_arg)\r\n                    -- If the user has typed `:Foo action2 fi`,\r\n                    -- this will match 'first'\r\n                    return install_arg:find(subcmd_arg_lead) ~= nil\r\n                end)\r\n                :totable()\r\n        end,\r\n        -- ...\r\n    },\r\n}\r\n\r\n---@param opts table :h lua-guide-commands-create\r\nlocal function foo_cmd(opts)\r\n    local fargs = opts.fargs\r\n    local subcommand_key = fargs[1]\r\n    -- Get the subcommand's arguments, if any\r\n    local args = #fargs > 1 and vim.list_slice(fargs, 2, #fargs) or {}\r\n    local subcommand = subcommand_tbl[subcommand_key]\r\n    if not subcommand then\r\n        vim.notify(\"Foo: Unknown command: \" .. subcommand_key, vim.log.levels.ERROR)\r\n        return\r\n    end\r\n    -- Invoke the subcommand\r\n    subcommand.impl(args, opts)\r\nend\r\n\r\nvim.api.nvim_create_user_command(\"Foo\", foo_cmd, {\r\n    nargs = \"+\",\r\n    desc = \"My awesome command with subcommand completions\",\r\n    complete = function(arg_lead, cmdline, _)\r\n        -- Get the subcommand.\r\n        local subcmd_key, subcmd_arg_lead = cmdline:match(\"^Foo[!]*%s(%S+)%s(.*)$\")\r\n        if subcmd_key \r\n            and subcmd_arg_lead \r\n            and subcommand_tbl[subcmd_key] \r\n            and subcommand_tbl[subcmd_key].complete\r\n        then\r\n            -- The subcommand has completions. Return them.\r\n            return subcommand_tbl[subcmd_key].complete(subcmd_arg_lead)\r\n        end\r\n        -- Check if cmdline is a subcommand\r\n        if cmdline:match(\"^Foo[!]*%s+%w*$\") then\r\n            -- Filter subcommands that match\r\n            local subcommand_keys = vim.tbl_keys(subcommand_tbl)\r\n            return vim.iter(subcommand_keys)\r\n                :filter(function(key)\r\n                    return key:find(arg_lead) ~= nil\r\n                end)\r\n                :totable()\r\n        end\r\n    end,\r\n})\r\n```\r\n\r\n## After\r\n\r\n```lua\r\n---@type table<string, FooSubcommand>\r\nlocal subcommand_tbl = {\r\n    action1 = {\r\n        impl = function(opts)\r\n          -- Implementation\r\n        end,\r\n        -- This subcommand has no completions\r\n    },\r\n    action2 = {\r\n        impl = function(opts)\r\n            -- Implementation\r\n        end,\r\n        complete = function(subcmd_arg_lead, ...)\r\n            -- Simplified example\r\n            local install_args = {\r\n                \"first\",\r\n                \"second\",\r\n                \"third\",\r\n            }\r\n            return vim.iter(install_args)\r\n                :filter(function(install_arg)\r\n                    -- If the user has typed `:Foo action2 fi`,\r\n                    -- this will match 'first'\r\n                    return install_arg:find(subcmd_arg_lead) ~= nil\r\n                end)\r\n                :totable()\r\n        end,\r\n        -- ...\r\n    },\r\n}\r\n\r\nvim.usercommand.create(\"Foo\", subcommand_tbl, {\r\n    nargs = \"+\",\r\n    desc = \"My awesome command with subcommand completions\",\r\n}\r\n```\r\n\r\nThe \"after\" variant also accepts a default command (e.g. if no subcommand was entered):\r\n\r\n```lua\r\nvim.usercommand.create('Foo', {\r\n  function() print('foo') end, -- default\r\n  bar = {\r\n    command = function(opts) print('bar') end,\r\n    complete = function(arg_lead, cmdline) return { 'a', 'b', 'c' } end,\r\n    bang = true,\r\n  },\r\n  baz = {\r\n    command = function(opts) print('baz') end,\r\n  },\r\n})\r\n```\r\n\r\nor a function without subcommands:\r\n\r\n```lua\r\nvim.usercommand.create('Foo', function() print('foo') end, { bang = true })\r\n```",
            "created_at": "2024-06-03T15:46:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2145552939",
            "id": 2145552939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5_4oor",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2145552939/reactions"
            },
            "updated_at": "2024-06-03T15:46:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2145552939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Seems like this is oriented around the desire for subcommands, thus the title is misleading. \r\n\r\nIf subcommands are needed as a concept, please create an issue that describes the interface. Shouldn't that be a core change? Else this is a parallel \"platform\", more like a utility function. Listing and inspecting the subcommands isn't supported, for example. And the subcommands aren't available from `:command <name>`.",
            "created_at": "2024-06-04T12:44:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/29116#issuecomment-2147444559",
            "id": 2147444559,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
            "node_id": "IC_kwDOAPphoM5__2dP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2147444559/reactions"
            },
            "updated_at": "2024-06-04T12:44:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2147444559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29116/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/29116/commits",
    "created_at": "2024-05-31T18:14:02Z",
    "diff_url": "https://github.com/neovim/neovim/pull/29116.diff",
    "draft": true,
    "head": {
        "label": "mrcjkb:vim.usercommand",
        "ref": "vim.usercommand",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/mrcjkb/neovim-fork/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/mrcjkb/neovim-fork/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/mrcjkb/neovim-fork/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/mrcjkb/neovim-fork/branches{/branch}",
            "clone_url": "https://github.com/mrcjkb/neovim-fork.git",
            "collaborators_url": "https://api.github.com/repos/mrcjkb/neovim-fork/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/mrcjkb/neovim-fork/comments{/number}",
            "commits_url": "https://api.github.com/repos/mrcjkb/neovim-fork/commits{/sha}",
            "compare_url": "https://api.github.com/repos/mrcjkb/neovim-fork/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/mrcjkb/neovim-fork/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/mrcjkb/neovim-fork/contributors",
            "created_at": "2022-10-03T13:41:23Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/mrcjkb/neovim-fork/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/mrcjkb/neovim-fork/downloads",
            "events_url": "https://api.github.com/repos/mrcjkb/neovim-fork/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/mrcjkb/neovim-fork/forks",
            "full_name": "mrcjkb/neovim-fork",
            "git_commits_url": "https://api.github.com/repos/mrcjkb/neovim-fork/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/mrcjkb/neovim-fork/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/mrcjkb/neovim-fork/git/tags{/sha}",
            "git_url": "git://github.com/mrcjkb/neovim-fork.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/mrcjkb/neovim-fork/hooks",
            "html_url": "https://github.com/mrcjkb/neovim-fork",
            "id": 544931422,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/mrcjkb/neovim-fork/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/mrcjkb/neovim-fork/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/mrcjkb/neovim-fork/issues{/number}",
            "keys_url": "https://api.github.com/repos/mrcjkb/neovim-fork/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/mrcjkb/neovim-fork/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/mrcjkb/neovim-fork/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/mrcjkb/neovim-fork/merges",
            "milestones_url": "https://api.github.com/repos/mrcjkb/neovim-fork/milestones{/number}",
            "mirror_url": null,
            "name": "neovim-fork",
            "node_id": "R_kgDOIHr-Xg",
            "notifications_url": "https://api.github.com/repos/mrcjkb/neovim-fork/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
                "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
                "followers_url": "https://api.github.com/users/mrcjkb/followers",
                "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
                "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mrcjkb",
                "id": 12857160,
                "login": "mrcjkb",
                "node_id": "MDQ6VXNlcjEyODU3MTYw",
                "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
                "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
                "repos_url": "https://api.github.com/users/mrcjkb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mrcjkb",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/mrcjkb/neovim-fork/pulls{/number}",
            "pushed_at": "2025-02-03T05:14:36Z",
            "releases_url": "https://api.github.com/repos/mrcjkb/neovim-fork/releases{/id}",
            "size": 298896,
            "ssh_url": "git@github.com:mrcjkb/neovim-fork.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/mrcjkb/neovim-fork/stargazers",
            "statuses_url": "https://api.github.com/repos/mrcjkb/neovim-fork/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/mrcjkb/neovim-fork/subscribers",
            "subscription_url": "https://api.github.com/repos/mrcjkb/neovim-fork/subscription",
            "svn_url": "https://github.com/mrcjkb/neovim-fork",
            "tags_url": "https://api.github.com/repos/mrcjkb/neovim-fork/tags",
            "teams_url": "https://api.github.com/repos/mrcjkb/neovim-fork/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/mrcjkb/neovim-fork/git/trees{/sha}",
            "updated_at": "2025-01-27T14:02:50Z",
            "url": "https://api.github.com/repos/mrcjkb/neovim-fork",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "1f8a96afee383a0d70383c05da235dfe8e33e0e7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
            "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
            "followers_url": "https://api.github.com/users/mrcjkb/followers",
            "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mrcjkb",
            "id": 12857160,
            "login": "mrcjkb",
            "node_id": "MDQ6VXNlcjEyODU3MTYw",
            "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
            "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
            "repos_url": "https://api.github.com/users/mrcjkb/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mrcjkb",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/29116",
    "id": 1898422824,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29116",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "e348b473e509b6ddedb9aa6ea479deac5a07977a",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5xJ6Io",
    "number": 29116,
    "patch_url": "https://github.com/neovim/neovim/pull/29116.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/29116/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/1f8a96afee383a0d70383c05da235dfe8e33e0e7",
    "title": "feat: add `vim.usercommand` Lua API",
    "updated_at": "2025-01-30T19:23:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/29116",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12857160?v=4",
        "events_url": "https://api.github.com/users/mrcjkb/events{/privacy}",
        "followers_url": "https://api.github.com/users/mrcjkb/followers",
        "following_url": "https://api.github.com/users/mrcjkb/following{/other_user}",
        "gists_url": "https://api.github.com/users/mrcjkb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mrcjkb",
        "id": 12857160,
        "login": "mrcjkb",
        "node_id": "MDQ6VXNlcjEyODU3MTYw",
        "organizations_url": "https://api.github.com/users/mrcjkb/orgs",
        "received_events_url": "https://api.github.com/users/mrcjkb/received_events",
        "repos_url": "https://api.github.com/users/mrcjkb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mrcjkb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mrcjkb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mrcjkb",
        "user_view_type": "public"
    }
}