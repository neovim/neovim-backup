{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34545/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34545/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34545"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34545"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34545/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34545"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/47187aa6fcacd57dd426ff9c7cda4378a28f1f07"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6319,
            "forks_count": 6319,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1996,
            "open_issues_count": 1996,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-16T01:58:34Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 342721,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92776,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-16T02:14:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92776,
            "watchers_count": 92776,
            "web_commit_signoff_required": false
        },
        "sha": "286371b4d22a0abd3c037823ae14ef7ce8ba06b6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "In similar vein as #28324, use [sharkdp/fd](https://github.com/sharkdp/fd) as default function for `:find` if available. As far as I'm aware, `fd` is as popular and robust as `rg`.\r\n\rProblem:\nAlthough `:find` had the same name as the CLI tool, it does not search recursively down for files. \"Workarounds\" include adding `**` to 'path' or the search string (e.g. `:find **/api.txt`. \n\nSolution:\nIf the user has `fd` (or `rg`, TBD), a modern `find` alternative installed, use that as 'findfunc'. Aligning the functionality with the\ncommand line tool 'find'. \n\n---\r\n\r\nN.B. Instead of the current approach with a global Lua function, where should I put the function? Could be in `runtime/lua/vim/_buf.lua`, as the other functions in that file are also temporary there until an option can take a lua function as value.\r\n",
    "closed_at": "2025-06-18T13:25:28Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34545#discussion_r2152208198"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34545"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152208198"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  local fd_cmd = vim.fn.executable('fdfind') == 1 and 'fdfind' or\r\n                 vim.fn.executable('fd') == 1 and 'fd' or nil\r\n  if fd_cmd then\r\n    function _G.findfunc(name)\r\n      local cmd = vim.list_extend({ fd_cmd, '-HIp', name or '.' }, vim.opt.path:get())\r\n      local result = vim.system(cmd, { text = true }):wait()\r\n      return vim.split(result.stdout, '\\n', { trimempty = true })\r\n    end\r\n    vim.o.findfunc = 'v:lua.findfunc'\r\n  end\r\n\r\n```",
            "commit_id": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
            "created_at": "2025-06-17T12:57:19Z",
            "diff_hunk": "@@ -974,4 +974,16 @@ do\n     vim.o.grepprg = 'rg --vimgrep -uu '\n     vim.o.grepformat = '%f:%l:%c:%m'\n   end\n+\n+  --- Default 'findfunc' to fd if available.\n+  if vim.fn.executable('fd') == 1 or vim.fn.executable('fdfind') == 1 then\n+    -- https://github.com/sharkdp/fd#on-ubuntu\n+    local fd_cmd = vim.fn.executable('fdfind') and 'fdfind' or 'fd'\n+    function _G.findfunc(name)\n+      local cmd = vim.list_extend({ fd_cmd, '-HIp', name or '.' }, vim.opt.path:get())\n+      local result = vim.system(cmd, { text = true }):wait()\n+      return vim.split(result.stdout, '\\n', { trimempty = true })\n+    end\n+    vim.o.findfunc = 'v:lua.findfunc'\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34545#discussion_r2152208198",
            "id": 2152208198,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6ASBdG",
            "original_commit_id": "b0217286a11b062e62b3adcbe84fe8effb0b94c0",
            "original_line": 1003,
            "original_position": 15,
            "original_start_line": 979,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 1,
            "pull_request_review_id": 2935563381,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34545",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152208198/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-06-17T12:57:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152208198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34545#discussion_r2152210869"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34545"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152210869"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks! I was about to ask if someone had a clever way to put it together.",
            "commit_id": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
            "created_at": "2025-06-17T12:58:31Z",
            "diff_hunk": "@@ -974,4 +974,16 @@ do\n     vim.o.grepprg = 'rg --vimgrep -uu '\n     vim.o.grepformat = '%f:%l:%c:%m'\n   end\n+\n+  --- Default 'findfunc' to fd if available.\n+  if vim.fn.executable('fd') == 1 or vim.fn.executable('fdfind') == 1 then\n+    -- https://github.com/sharkdp/fd#on-ubuntu\n+    local fd_cmd = vim.fn.executable('fdfind') and 'fdfind' or 'fd'\n+    function _G.findfunc(name)\n+      local cmd = vim.list_extend({ fd_cmd, '-HIp', name or '.' }, vim.opt.path:get())\n+      local result = vim.system(cmd, { text = true }):wait()\n+      return vim.split(result.stdout, '\\n', { trimempty = true })\n+    end\n+    vim.o.findfunc = 'v:lua.findfunc'\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34545#discussion_r2152210869",
            "id": 2152210869,
            "in_reply_to_id": 2152208198,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6ASCG1",
            "original_commit_id": "b0217286a11b062e62b3adcbe84fe8effb0b94c0",
            "original_line": 1003,
            "original_position": 15,
            "original_start_line": 979,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 1,
            "pull_request_review_id": 2935567770,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34545",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152210869/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-06-17T12:58:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152210869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34545#discussion_r2152677582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34545"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152677582"
                }
            },
            "author_association": "MEMBER",
            "body": "We already have a problem with `executable()` being slow on some platforms when we check for ripgrep https://github.com/neovim/neovim/issues/31506. This is going to make the problem worse.\r\n\r\nI don't think we need this, and frankly in hindsight I wish we hadn't defaulted grepprg to ripgrep either. These options are very easy to set manually.",
            "commit_id": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
            "created_at": "2025-06-17T16:19:13Z",
            "diff_hunk": "@@ -974,4 +974,31 @@ do\n     vim.o.grepprg = 'rg --vimgrep -uu '\n     vim.o.grepformat = '%f:%l:%c:%m'\n   end\n+\n+  --- Default 'findfunc' to fd if available.\n+  -- `fdfind` on Ubuntu (https://github.com/sharkdp/fd#on-ubuntu)\n+  local fd_cmd = vim.fn.executable('fdfind') == 1 and 'fdfind'\n+    or vim.fn.executable('fd') == 1 and 'fd'",
            "html_url": "https://github.com/neovim/neovim/pull/34545#discussion_r2152677582",
            "id": 2152677582,
            "line": 981,
            "node_id": "PRRC_kwDOAPphoM6AT0DO",
            "original_commit_id": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
            "original_line": 981,
            "original_position": 8,
            "original_start_line": 980,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 8,
            "pull_request_review_id": 2936320346,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34545",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152677582/reactions"
            },
            "side": "RIGHT",
            "start_line": 980,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-06-17T16:19:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152677582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34545#discussion_r2152694728"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34545"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152694728"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Seems that the linked issue is about `executable()` in general. I'm open for any workaround.\r\n\r\nAbout your other remark, understandable if that's core's stance. If this is not merged, I could also add it as example to the docs (but of course in shorter and simpler form).",
            "commit_id": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
            "created_at": "2025-06-17T16:27:27Z",
            "diff_hunk": "@@ -974,4 +974,31 @@ do\n     vim.o.grepprg = 'rg --vimgrep -uu '\n     vim.o.grepformat = '%f:%l:%c:%m'\n   end\n+\n+  --- Default 'findfunc' to fd if available.\n+  -- `fdfind` on Ubuntu (https://github.com/sharkdp/fd#on-ubuntu)\n+  local fd_cmd = vim.fn.executable('fdfind') == 1 and 'fdfind'\n+    or vim.fn.executable('fd') == 1 and 'fd'",
            "html_url": "https://github.com/neovim/neovim/pull/34545#discussion_r2152694728",
            "id": 2152694728,
            "in_reply_to_id": 2152677582,
            "line": 981,
            "node_id": "PRRC_kwDOAPphoM6AT4PI",
            "original_commit_id": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
            "original_line": 981,
            "original_position": 8,
            "original_start_line": 980,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 8,
            "pull_request_review_id": 2936345431,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34545",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152694728/reactions"
            },
            "side": "RIGHT",
            "start_line": 980,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-06-17T16:27:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2152694728",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34545#discussion_r2153345626"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34545"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2153345626"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n  -- `fdfind` on Debian-based distros, like Ubuntu (https://github.com/sharkdp/fd#on-ubuntu)\r\n```",
            "commit_id": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
            "created_at": "2025-06-17T23:48:00Z",
            "diff_hunk": "@@ -974,4 +974,31 @@ do\n     vim.o.grepprg = 'rg --vimgrep -uu '\n     vim.o.grepformat = '%f:%l:%c:%m'\n   end\n+\n+  --- Default 'findfunc' to fd if available.\n+  -- `fdfind` on Ubuntu (https://github.com/sharkdp/fd#on-ubuntu)",
            "html_url": "https://github.com/neovim/neovim/pull/34545#discussion_r2153345626",
            "id": 2153345626,
            "line": 979,
            "node_id": "PRRC_kwDOAPphoM6AWXJa",
            "original_commit_id": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
            "original_line": 979,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 6,
            "pull_request_review_id": 2937340720,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34545",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2153345626/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-17T23:48:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2153345626",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7416158?v=4",
                "events_url": "https://api.github.com/users/craigmac/events{/privacy}",
                "followers_url": "https://api.github.com/users/craigmac/followers",
                "following_url": "https://api.github.com/users/craigmac/following{/other_user}",
                "gists_url": "https://api.github.com/users/craigmac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/craigmac",
                "id": 7416158,
                "login": "craigmac",
                "node_id": "MDQ6VXNlcjc0MTYxNTg=",
                "organizations_url": "https://api.github.com/users/craigmac/orgs",
                "received_events_url": "https://api.github.com/users/craigmac/received_events",
                "repos_url": "https://api.github.com/users/craigmac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/craigmac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/craigmac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/craigmac",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Note: `ripgrep` can be used as a file finder as well -- would it make sense (and be possible) to use that as well so we only rely on one tool? (Or have a fallback in case either one is available?)\r\n\r\nFor invocations, see https://github.com/nvim-telescope/telescope.nvim/blob/b4da76be54691e854d3e0e02c36b0245f945c2c7/lua/telescope/builtin/__files.lua#L274-L277 ",
            "created_at": "2025-06-17T14:43:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2980667445",
            "id": 2980667445,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xqWA1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2980667445/reactions"
            },
            "updated_at": "2025-06-17T14:46:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2980667445",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Note: ripgrep can be used as a file finder as well -- would it make sense (and be possible) to use that as well so we only rely on one tool? (Or have a fallback in case either one is available?)\r\n\r\nLooking at the Telescope code, I think it is only used initially to recursively find files. `:find` and `fd` can find files based on substring of their name, while `rg --files` just recursively lists the files in `[PATH]...`. Maybe something like this:\r\n\r\n```\r\nrg --files-with-matches '.*' --glob '*README*'\r\n```\r\n\r\nAs fallback for \r\n\r\n```\r\nfd README\r\n```\r\n\r\nOnly difference is that `fd` uses regex patterns for files and `rg` glob patterns.",
            "created_at": "2025-06-17T14:59:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2980725567",
            "id": 2980725567,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xqkM_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2980725567/reactions"
            },
            "updated_at": "2025-06-17T14:59:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2980725567",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've added support for `rg` as fallback, but I'm not quite sure how I feel about it. For one, both `fd` and `rg` have (git-)ignore support. An incredibly useful feature, which I can imagine users would like to enable. In it's current state, this would be quite cumbersome to add; you would need to copy-paste the _defaults.lua code to your own config and modify it.\r\n\r\nThe specific pattern-syntax used is also unclear to the user: Rust's regex implementation (fd), Rust's glob implementation (rg), or Vim's glob (regular :find). \r\n\r\nI'm wondering if there would be a better approach for this. Interoperability with well-known tools like rg and fd and their goodies is nice, but it should be easier to opt-out / change behaviour / opt-in (in that order). Maybe this should be a runtime plugin with its own settings?",
            "created_at": "2025-06-17T15:33:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2980849529",
            "id": 2980849529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xrCd5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2980849529/reactions"
            },
            "updated_at": "2025-06-17T15:33:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2980849529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, I agree it's not worth it. If `rg` is not a drop-in replacement, just offer a `fd` \"happy path\".",
            "created_at": "2025-06-17T15:43:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2980884632",
            "id": 2980884632,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xrLCY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2980884632/reactions"
            },
            "updated_at": "2025-06-17T15:43:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2980884632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The specific pattern-syntax used is also unclear to the user: Rust's regex implementation (fd), Rust's glob implementation (rg), or Vim's glob (regular :find).\r\n\r\nIf anything, similar glob-like behavior is a substantial argument to use `rg`.\r\n\r\nI don't think I understand the reasoning of not using `rg` as default here. The `rg --files --glob <pattern> -- <paths>` seems like a drop-in replacement for `fd`.",
            "created_at": "2025-06-17T20:03:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2981676381",
            "id": 2981676381,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xuMVd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2981676381/reactions"
            },
            "updated_at": "2025-06-17T20:03:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2981676381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I don't think I understand the reasoning of not using rg as default here. The rg --files --glob <pattern> -- <paths> seems like a drop-in replacement for fd.\r\n\r\nDamn, you're right! For some reason I thought `--files` didn't work with `--glob`. I'll update this PR and will re-request reviews.\r\n\r\nEDIT:\r\n- `rg` acts solely on regular files, not on directories.\r\n- `rg`'s glob pattern works only for path parts, thus `rg --files --glob 'doc/api*'` doesn't work to find `/runtime/doc/api.txt`.",
            "created_at": "2025-06-17T20:34:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2981756566",
            "id": 2981756566,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xuf6W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2981756566/reactions"
            },
            "updated_at": "2025-06-17T20:41:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2981756566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> should findfunc also honour user's path if set to non-default?\n\nYes, `:h :find` mentions this. \n\n> is it even possible to pass in a list of these directories to search in to fd/rg?\n\nYes, both tools end their argument list with paths to search through. The current PR implementation adds the directories listed in 'path' to the fd/rg command as intended. ",
            "created_at": "2025-06-17T21:50:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2981936378",
            "id": 2981936378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xvLz6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2981936378/reactions"
            },
            "updated_at": "2025-06-17T21:50:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2981936378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Please explain the benefits that `fd` (or `rg` if that'll be used instead) provides over the builtin `:find` implementation in the PR description.",
            "created_at": "2025-06-17T22:51:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2982049911",
            "id": 2982049911,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xvnh3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2982049911/reactions"
            },
            "updated_at": "2025-06-17T22:52:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2982049911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * `rg` acts solely on regular files, not on directories.\r\n\r\nIs that a bad thing for `:find` that should `Find {file} in 'path' and then |:edit| it.`?\r\n\r\n> * `rg`'s glob pattern works only for path parts, thus `rg --files --glob 'doc/api*'` doesn't work to find `/runtime/doc/api.txt`.\r\n\r\nBecause there is indeed no file matching the glob. The 'runtime/doc/api.txt' files matches `**/doc/api*` glob. The same behavior is with vanilla `:find` (but it doesn't ignore files from '.gitignore').\r\n",
            "created_at": "2025-06-18T06:58:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2982929505",
            "id": 2982929505,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xy-Rh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2982929505/reactions"
            },
            "updated_at": "2025-06-18T06:58:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2982929505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Is that a bad thing for :find that should Find {file} in 'path' and then |:edit| it.\n\nTo me it sounds like that doesn't make any assumptions about the type of {file}, as long as Neovim can `:edit` it. \n\n> The same behavior is with vanilla :find \n\nOne of the motivations of using `fd`is to make it behave recursive-first, like the CLI tool that shares its name. ",
            "created_at": "2025-06-18T07:18:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2982986592",
            "id": 2982986592,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xzMNg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2982986592/reactions"
            },
            "updated_at": "2025-06-18T07:18:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2982986592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> To me it sounds like that doesn't make any assumptions about the type of {file}, as long as Neovim can `:edit` it.\r\n\r\nThat makes sense and indeed both vanilla `:find` and `fd` work with directory paths. But in slightly different ways: `:find scripts` will edit directory directly while `fd -p 'scripts'` will return 'scripts/' directory *plus* all matches inside 'scripts/' directory *plus* 'runtime/scripts/' directory *plus* all matches in 'runtime/scripts/' directory. This looks to be more confusing.\r\n\r\n> One of the motivations of using `fd`is to make it behave recursive-first, like the CLI tool that shares its name.\r\n\r\nMy preference would be to prioritize more similar pattern glob-like syntax and not having defaults that use two different CLI tools when there is a very acceptable way to use one.",
            "created_at": "2025-06-18T07:57:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2983115191",
            "id": 2983115191,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6xzrm3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2983115191/reactions"
            },
            "updated_at": "2025-06-18T07:57:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2983115191",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sure! Seems that it's too opinionated and unexpected to be included in core, closing this.",
            "created_at": "2025-06-18T13:25:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2984208168",
            "id": 2984208168,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6x32co",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984208168/reactions"
            },
            "updated_at": "2025-06-18T13:25:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984208168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Sure! Seems that it's too opinionated and unexpected to be included in core, closing this.\r\n\r\nTo be clear, my point was that trying to use `rg` (instead of `fd`) as 'findfunc' is good, as it follows the precedent of 'grepprg'.",
            "created_at": "2025-06-18T13:33:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2984239615",
            "id": 2984239615,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6x3-H_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984239615/reactions"
            },
            "updated_at": "2025-06-18T13:33:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984239615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I understand! But I'm not sure if I feel right about it. \r\n\r\nAs @gpanders stated:\r\n\r\n> I don't think we need this, and frankly in hindsight I wish we hadn't defaulted grepprg to ripgrep either. These options are very easy to set manually.\r\n\r\nI think I agree with this, and this would be better to include in something like tips.txt or as remark in the docs of 'findfunc'.",
            "created_at": "2025-06-18T14:42:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/34545#issuecomment-2984503195",
            "id": 2984503195,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
            "node_id": "IC_kwDOAPphoM6x4-eb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984503195/reactions"
            },
            "updated_at": "2025-06-18T14:42:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2984503195",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34545/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34545/commits",
    "created_at": "2025-06-17T12:39:36Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34545.diff",
    "draft": false,
    "head": {
        "label": "yochem:defaults/fd",
        "ref": "defaults/fd",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/yochem/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/yochem/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/yochem/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/yochem/neovim/branches{/branch}",
            "clone_url": "https://github.com/yochem/neovim.git",
            "collaborators_url": "https://api.github.com/repos/yochem/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/yochem/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/yochem/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/yochem/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/yochem/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/yochem/neovim/contributors",
            "created_at": "2023-03-13T14:39:08Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/yochem/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/yochem/neovim/downloads",
            "events_url": "https://api.github.com/repos/yochem/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/yochem/neovim/forks",
            "full_name": "yochem/neovim",
            "git_commits_url": "https://api.github.com/repos/yochem/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/yochem/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/yochem/neovim/git/tags{/sha}",
            "git_url": "git://github.com/yochem/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/yochem/neovim/hooks",
            "html_url": "https://github.com/yochem/neovim",
            "id": 613421928,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/yochem/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/yochem/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/yochem/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/yochem/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/yochem/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/yochem/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/yochem/neovim/merges",
            "milestones_url": "https://api.github.com/repos/yochem/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOJJATaA",
            "notifications_url": "https://api.github.com/repos/yochem/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/yochem/neovim/pulls{/number}",
            "pushed_at": "2025-09-15T23:12:11Z",
            "releases_url": "https://api.github.com/repos/yochem/neovim/releases{/id}",
            "size": 335477,
            "ssh_url": "git@github.com:yochem/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/yochem/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/yochem/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/yochem/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/yochem/neovim/subscription",
            "svn_url": "https://github.com/yochem/neovim",
            "tags_url": "https://api.github.com/repos/yochem/neovim/tags",
            "teams_url": "https://api.github.com/repos/yochem/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/yochem/neovim/git/trees{/sha}",
            "updated_at": "2025-09-01T20:45:02Z",
            "url": "https://api.github.com/repos/yochem/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
            "events_url": "https://api.github.com/users/yochem/events{/privacy}",
            "followers_url": "https://api.github.com/users/yochem/followers",
            "following_url": "https://api.github.com/users/yochem/following{/other_user}",
            "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/yochem",
            "id": 23235841,
            "login": "yochem",
            "node_id": "MDQ6VXNlcjIzMjM1ODQx",
            "organizations_url": "https://api.github.com/users/yochem/orgs",
            "received_events_url": "https://api.github.com/users/yochem/received_events",
            "repos_url": "https://api.github.com/users/yochem/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/yochem",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34545",
    "id": 2598696002,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34545",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim defaults for options, colorscheme/theme, autocmds/events, etc.",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        }
    ],
    "locked": false,
    "merge_commit_sha": "48389b59cc9b6907b41b7e344f28c8a10ebb96ea",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6a5PRC",
    "number": 34545,
    "patch_url": "https://github.com/neovim/neovim/pull/34545.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34545/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/47187aa6fcacd57dd426ff9c7cda4378a28f1f07",
    "title": "feat(defaults): default 'findfunc' to fd if available",
    "updated_at": "2025-09-15T16:03:25Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34545",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
        "events_url": "https://api.github.com/users/yochem/events{/privacy}",
        "followers_url": "https://api.github.com/users/yochem/followers",
        "following_url": "https://api.github.com/users/yochem/following{/other_user}",
        "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yochem",
        "id": 23235841,
        "login": "yochem",
        "node_id": "MDQ6VXNlcjIzMjM1ODQx",
        "organizations_url": "https://api.github.com/users/yochem/orgs",
        "received_events_url": "https://api.github.com/users/yochem/received_events",
        "repos_url": "https://api.github.com/users/yochem/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yochem",
        "user_view_type": "public"
    }
}