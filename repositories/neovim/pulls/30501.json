{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30501/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30501/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30501"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30501"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30501/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7b9897f3e0e6a91373dad84b2d74299c58813d53"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5841,
            "forks_count": 5841,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1854,
            "open_issues_count": 1854,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-04T02:07:35Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 307298,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85859,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-04T02:07:39Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85859,
            "watchers_count": 85859,
            "web_commit_signoff_required": false
        },
        "sha": "e71d2c817d1a2475551f58a98e411f6b39a5be3f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "**Problem:** Some weird languages have different comment syntax depending on the location in the code, and we do not have a way to determine the correct `commentstring` for these special cases.\r\n\r\n**Solution:** Allow queries to specify `commentstring` values in metadata, allowing users/`nvim-treesitter` to provide a better commenting experience without hugely increasing the scope of the code in core.\r\n\r\nFixes [#28830](https://github.com/neovim/neovim/issues/28830)",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1774000400"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774000400"
                }
            },
            "author_association": "MEMBER",
            "body": "As this doesn't depend on `ft`, I think it can be moved outside of the `for` cycle.",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-09-24T19:57:53Z",
            "diff_hunk": "@@ -39,6 +77,11 @@ local function get_commentstring(ref_position)\n       if cur_cs ~= '' and level > res_level then\n         ts_cs = cur_cs\n       end\n+\n+      local metadata_cs = get_metadata_commentstring(lang_tree, row, col)\n+      if metadata_cs and level > res_level then\n+        ts_cs = metadata_cs\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1774000400",
            "id": 1774000400,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pvRkQ",
            "original_commit_id": "2b2a1bf745e67c9c51cef34428743d4657fd7fc9",
            "original_line": 53,
            "original_position": 53,
            "original_start_line": 81,
            "path": "runtime/lua/vim/_comment.lua",
            "position": null,
            "pull_request_review_id": 2326314157,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774000400/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-24T20:03:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774000400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1774005546"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774005546"
                }
            },
            "author_association": "MEMBER",
            "body": "All this tree-sitter magic is above my head, so can't really provide much useful feedback here.\r\n\r\nOne thing I'd expect is that all the tree-sitter routing might be a good candidate (or already is) for some `vim.treesitter` function. Can one of `vim.treesitter.get_captures_at_pos()` or `vim.treesitter.get_node()` be used here somehow?",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-09-24T20:02:13Z",
            "diff_hunk": "@@ -3,6 +3,44 @@\n ---@field left string Left part of comment\n ---@field right string Right part of comment\n \n+---@param parser vim.treesitter.LanguageTree\n+---@param row integer\n+---@param col integer\n+---@return string?\n+local function get_metadata_commentstring(parser, row, col)\n+  local bufnr = vim.api.nvim_get_current_buf()\n+  local highlighter = vim.treesitter.highlighter.active[bufnr]\n+  if not highlighter then\n+    return\n+  end\n+  local query = highlighter:get_query(parser:lang()):query()\n+  if not query then\n+    return\n+  end\n+  local range = { row, col, row, col }\n+  local tree = assert(parser:tree_for_range(range))\n+  local last_node = tree:root()\n+  ---@type string?\n+  local commentstring\n+  for _, match, metadata in query:iter_matches(tree:root(), bufnr, row, row + 1) do",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1774005546",
            "id": 1774005546,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pvS0q",
            "original_commit_id": "90aa3aa97a1e01f3a5603d7efa47e91951e68202",
            "original_line": 25,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/lua/vim/_comment.lua",
            "position": null,
            "pull_request_review_id": 2326314157,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774005546/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-24T20:03:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774005546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1774184586"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774184586"
                }
            },
            "author_association": "MEMBER",
            "body": "Nice thanks! `get_captures_at_pos()` worked perfectly- note to self, update `_get_urls()` to use the same...",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-09-24T22:55:29Z",
            "diff_hunk": "@@ -3,6 +3,44 @@\n ---@field left string Left part of comment\n ---@field right string Right part of comment\n \n+---@param parser vim.treesitter.LanguageTree\n+---@param row integer\n+---@param col integer\n+---@return string?\n+local function get_metadata_commentstring(parser, row, col)\n+  local bufnr = vim.api.nvim_get_current_buf()\n+  local highlighter = vim.treesitter.highlighter.active[bufnr]\n+  if not highlighter then\n+    return\n+  end\n+  local query = highlighter:get_query(parser:lang()):query()\n+  if not query then\n+    return\n+  end\n+  local range = { row, col, row, col }\n+  local tree = assert(parser:tree_for_range(range))\n+  local last_node = tree:root()\n+  ---@type string?\n+  local commentstring\n+  for _, match, metadata in query:iter_matches(tree:root(), bufnr, row, row + 1) do",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1774184586",
            "id": 1774184586,
            "in_reply_to_id": 1774005546,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pv-iK",
            "original_commit_id": "90aa3aa97a1e01f3a5603d7efa47e91951e68202",
            "original_line": 25,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/lua/vim/_comment.lua",
            "position": null,
            "pull_request_review_id": 2326640868,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774184586/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-24T22:55:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774184586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1776579283"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776579283"
                }
            },
            "author_association": "MEMBER",
            "body": "I think the whole approach can be made simpler by making the \"get 'commentstring' from metdata\" step directly inside the `get_commentstring()`. Here is the diff:\r\n\r\n```diff\r\ndiff --git a/runtime/lua/vim/_comment.lua b/runtime/lua/vim/_comment.lua\r\nindex ef19793e04..db2fcea0ae 100644\r\n--- a/runtime/lua/vim/_comment.lua\r\n+++ b/runtime/lua/vim/_comment.lua\r\n@@ -3,29 +3,6 @@\r\n ---@field left string Left part of comment\r\n ---@field right string Right part of comment\r\n \r\n----@param row integer\r\n----@param col integer\r\n----@return string?\r\n-local function get_metadata_commentstring(row, col)\r\n-  local bufnr = vim.api.nvim_get_current_buf()\r\n-  local caps = vim.treesitter.get_captures_at_pos(bufnr, row, col)\r\n-  for i = #caps, 1, -1 do\r\n-    local metadata = caps[i].metadata\r\n-    local cms = metadata.commentstring\r\n-    if not cms then\r\n-      for _, value in pairs(metadata) do\r\n-        if value.commentstring then\r\n-          cms = value.commentstring\r\n-          break\r\n-        end\r\n-      end\r\n-    end\r\n-    if cms then\r\n-      return cms\r\n-    end\r\n-  end\r\n-end\r\n-\r\n --- Get 'commentstring' at cursor\r\n ---@param ref_position integer[]\r\n ---@return string\r\n@@ -42,6 +19,21 @@ local function get_commentstring(ref_position)\r\n   local row, col = ref_position[1] - 1, ref_position[2]\r\n   local ref_range = { row, col, row, col + 1 }\r\n \r\n+  -- - Get 'commentstring' from tree-sitter capture's metadata.\r\n+  --   Traverse backwards to prefer \"more narrow\" capture.\r\n+  local caps = vim.treesitter.get_captures_at_pos(0, row, col)\r\n+  for i = #caps, 1, -1 do\r\n+    local metadata = caps[i].metadata\r\n+    if metadata.commentstring then\r\n+      return metadata.commentstring\r\n+    end\r\n+    for _, value in pairs(metadata) do\r\n+      if value.commentstring then\r\n+        return value.commentstring\r\n+      end\r\n+    end\r\n+  end\r\n+\r\n   -- - Get 'commentstring' from the deepest LanguageTree which both contains\r\n   --   reference range and has valid 'commentstring' (meaning it has at least\r\n   --   one associated 'filetype' with valid 'commentstring').\r\n@@ -57,16 +49,10 @@ local function get_commentstring(ref_position)\r\n \r\n     local lang = lang_tree:lang()\r\n     local filetypes = vim.treesitter.language.get_filetypes(lang)\r\n-\r\n-    local metadata_cs = get_metadata_commentstring(row, col)\r\n-    if metadata_cs and level > res_level then\r\n-      ts_cs = metadata_cs\r\n-    else\r\n-      for _, ft in ipairs(filetypes) do\r\n-        local cur_cs = vim.filetype.get_option(ft, 'commentstring')\r\n-        if cur_cs ~= '' and level > res_level then\r\n-          ts_cs = cur_cs\r\n-        end\r\n+    for _, ft in ipairs(filetypes) do\r\n+      local cur_cs = vim.filetype.get_option(ft, 'commentstring')\r\n+      if cur_cs ~= '' and level > res_level then\r\n+        ts_cs = cur_cs\r\n       end\r\n     end\r\n```\r\n\r\nIt basically moves (simplified version) of the approach inside `get_commentstring()` to be done *before* trying to get `'commentstring'` as languages-filetype option. Tests pass with this approach.",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-09-26T08:04:37Z",
            "diff_hunk": "@@ -3,6 +3,29 @@\n ---@field left string Left part of comment",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1776579283",
            "id": 1776579283,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p5HLT",
            "original_commit_id": "6759fa204c15ab6a5e09bf15b0cc088589b6d2b2",
            "original_line": 3,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/lua/vim/_comment.lua",
            "position": null,
            "pull_request_review_id": 2330437941,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776579283/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-26T08:04:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776579283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1779321825"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779321825"
                }
            },
            "author_association": "MEMBER",
            "body": "Thanks! Great change. I have added a TODO here to generalize that block to a helper function, per the comment by @clason ",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-09-28T00:31:28Z",
            "diff_hunk": "@@ -3,6 +3,29 @@\n ---@field left string Left part of comment",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1779321825",
            "id": 1779321825,
            "in_reply_to_id": 1776579283,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qDkvh",
            "original_commit_id": "6759fa204c15ab6a5e09bf15b0cc088589b6d2b2",
            "original_line": 3,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/lua/vim/_comment.lua",
            "position": null,
            "pull_request_review_id": 2334831985,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779321825/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-28T00:31:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779321825",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1779401363"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779401363"
                }
            },
            "author_association": "MEMBER",
            "body": "I personally prefer to avoid using specific languages when documenting language-agnostic functionality in favor of something like \"take a look at the queries at this link\".\r\n\r\nBut documentation is something where @clason has more authority.",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-09-28T07:01:34Z",
            "diff_hunk": "@@ -647,6 +647,18 @@ attribute: >query\n     ((super_important_node) @superimportant (#set! priority 105))\n <\n \n+                                               *treesitter-highlight-commentstring*\n+Treesitter highlighting supports finer-grained 'commentstring's, used by the\n+built-in |commenting| plugin. When the cursor is within a node with the\n+`commentstring` metadata property set, the comment marker will be set to that\n+string. This is useful for languages like `JSX` that have different comment",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1779401363",
            "id": 1779401363,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qD4KT",
            "original_commit_id": "eab5d5168fef06257efa4c1d4232abc3f1b8ec6f",
            "original_line": 509,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2334917296,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779401363/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-28T07:01:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779401363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1793383168"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793383168"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nbuilt-in |commenting| plugin. When the cursor is within a node that sets the\r\n`commentstring` metadata property (|treesitter-directive-set!|), that property\r\ndefines the comment delimiter (where \"innermost wins\").\r\n```",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-10-09T11:53:27Z",
            "diff_hunk": "@@ -502,6 +502,18 @@ attribute: >query\n     ((super_important_node) @superimportant (#set! priority 105))\n <\n \n+                                               *treesitter-highlight-commentstring*\n+Treesitter highlighting supports finer-grained 'commentstring's, used by the\n+built-in |commenting| plugin. When the cursor is within a node with the\n+`commentstring` metadata property set, the comment marker will be set to that",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1793383168",
            "id": 1793383168,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5q5NsA",
            "original_commit_id": "00121c7b3a737bcf1a41359413a5a1394e465fc1",
            "original_line": 508,
            "original_position": 7,
            "original_start_line": 507,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2356922076,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793383168/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-09T11:53:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793383168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1793389086"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793389086"
                }
            },
            "author_association": "MEMBER",
            "body": "concrete examples are good, though linking to actual queries is also good (can have both)",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-10-09T11:57:27Z",
            "diff_hunk": "@@ -647,6 +647,18 @@ attribute: >query\n     ((super_important_node) @superimportant (#set! priority 105))\n <\n \n+                                               *treesitter-highlight-commentstring*\n+Treesitter highlighting supports finer-grained 'commentstring's, used by the\n+built-in |commenting| plugin. When the cursor is within a node with the\n+`commentstring` metadata property set, the comment marker will be set to that\n+string. This is useful for languages like `JSX` that have different comment",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1793389086",
            "id": 1793389086,
            "in_reply_to_id": 1779401363,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5q5PIe",
            "original_commit_id": "eab5d5168fef06257efa4c1d4232abc3f1b8ec6f",
            "original_line": 509,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2356930998,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793389086/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-09T11:57:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793389086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1793615252"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793615252"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe I can come back here and add a link once `nvim-treesitter` has some examples?",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-10-09T14:17:07Z",
            "diff_hunk": "@@ -647,6 +647,18 @@ attribute: >query\n     ((super_important_node) @superimportant (#set! priority 105))\n <\n \n+                                               *treesitter-highlight-commentstring*\n+Treesitter highlighting supports finer-grained 'commentstring's, used by the\n+built-in |commenting| plugin. When the cursor is within a node with the\n+`commentstring` metadata property set, the comment marker will be set to that\n+string. This is useful for languages like `JSX` that have different comment",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1793615252",
            "id": 1793615252,
            "in_reply_to_id": 1779401363,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5q6GWU",
            "original_commit_id": "eab5d5168fef06257efa4c1d4232abc3f1b8ec6f",
            "original_line": 509,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2357305958,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793615252/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-09T14:17:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793615252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1793624075"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793624075"
                }
            },
            "author_association": "MEMBER",
            "body": "If we mention \"innermost wins\" here, should I remove the mini-paragraph at the bottom? `\"When multiple captures set this metadata over a region, only the innermost...\"`",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-10-09T14:22:10Z",
            "diff_hunk": "@@ -502,6 +502,18 @@ attribute: >query\n     ((super_important_node) @superimportant (#set! priority 105))\n <\n \n+                                               *treesitter-highlight-commentstring*\n+Treesitter highlighting supports finer-grained 'commentstring's, used by the\n+built-in |commenting| plugin. When the cursor is within a node with the\n+`commentstring` metadata property set, the comment marker will be set to that",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1793624075",
            "id": 1793624075,
            "in_reply_to_id": 1793383168,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5q6IgL",
            "original_commit_id": "00121c7b3a737bcf1a41359413a5a1394e465fc1",
            "original_line": 508,
            "original_position": 7,
            "original_start_line": 507,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2357319950,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793624075/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-09T14:22:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1793624075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30501#discussion_r1795229931"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30501"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1795229931"
                }
            },
            "author_association": "MEMBER",
            "body": "> If we mention \"innermost wins\" here, should I remove the mini-paragraph at the bottom?\r\n\r\nI thought about that but it gives more detail. Can leave it for now.",
            "commit_id": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
            "created_at": "2024-10-10T11:14:49Z",
            "diff_hunk": "@@ -502,6 +502,18 @@ attribute: >query\n     ((super_important_node) @superimportant (#set! priority 105))\n <\n \n+                                               *treesitter-highlight-commentstring*\n+Treesitter highlighting supports finer-grained 'commentstring's, used by the\n+built-in |commenting| plugin. When the cursor is within a node with the\n+`commentstring` metadata property set, the comment marker will be set to that",
            "html_url": "https://github.com/neovim/neovim/pull/30501#discussion_r1795229931",
            "id": 1795229931,
            "in_reply_to_id": 1793383168,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5rAQjr",
            "original_commit_id": "00121c7b3a737bcf1a41359413a5a1394e465fc1",
            "original_line": 508,
            "original_position": 7,
            "original_start_line": 507,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2359979147,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1795229931/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-10T11:14:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1795229931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Where should this be documented?",
            "created_at": "2024-09-24T23:07:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2372543101",
            "id": 2372543101,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6NaiJ9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2372543101/reactions"
            },
            "updated_at": "2024-09-24T23:07:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2372543101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I was wondering the same.  Maybe in `treesitter.txt` in a similar section under `*treesitter-highlight-priority*`? There are a few sections in there related to special metadata stuff",
            "created_at": "2024-09-24T23:09:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2372546485",
            "id": 2372546485,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6Nai-1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2372546485/reactions"
            },
            "updated_at": "2024-09-24T23:09:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2372546485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think this should be specific to `commentstring`, at least at the underlying function level (it's ok at the metadata level for now, unless we can think of a way to generalize this too). Can't this support any `vim.filetype.get_option`?",
            "created_at": "2024-09-25T06:46:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2373172957",
            "id": 2373172957,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6Nc77d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2373172957/reactions"
            },
            "updated_at": "2024-09-25T06:46:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2373172957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry, I don't really understand what this would look like. Are you just saying to modify the helper function the be able to extract any option (not just commentstring)? Also when would it be helpful/make sense to set a different option in the metadata?",
            "created_at": "2024-09-25T14:56:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2374340774",
            "id": 2374340774,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6NhZCm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374340774/reactions"
            },
            "updated_at": "2024-09-25T14:56:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374340774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hypothetically, what other options could this potentially be useful for? Are there any options like `commentstring` where the option may be different line by line?\r\n\r\nSome ideas:\r\n- `expandtab` in Makefiles? Recipe lines should have hard tabs, whereas variable logic ~should~ can be indented with spaces.\r\n- `'breakat'` (though this is a global option)\r\n- `'equalprg'`\r\n- `'formatprj'`, `'formatexpr'`\r\n- `'indentexpr'`\r\n- `'iskeyword'`\r\n- `'filetype'`?\r\n\r\nThough I'd imagine in practice most of these would be handled via injections instead of this.",
            "created_at": "2024-09-25T15:06:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2374363520",
            "id": 2374363520,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6NhemA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374363520/reactions"
            },
            "updated_at": "2024-09-25T15:13:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374363520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ribru17, is traversing the output of `vim.treesitter.get_captures_at_pos()` backwards enough to guarantee that the \"most narrow\" capture is used? Because skipping manual traversing for this step is a big win. Could you, please, add a test for how it works with separate \"conflicting\" captures (because right now it looks like traverse forward would also pass the tests).\r\n\r\nAnd if the current implementation is good from tree-sitter POV, it can be visibly simplified. I'll test and post suggestions tomorrow.",
            "created_at": "2024-09-25T16:10:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2374522974",
            "id": 2374522974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6NiFhe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374522974/reactions"
            },
            "updated_at": "2024-09-25T16:10:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374522974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @ribru17, is traversing the output of `vim.treesitter.get_captures_at_pos()` backwards enough to guarantee that the \"most narrow\" capture is used?\r\n\r\nI am 99% sure it is, though I don't know if we have a test for `get_captures_at_pos()` ensuring this. That said I've added a test for the inner metadata logic, so I think all functionality is tested now",
            "created_at": "2024-09-25T16:36:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2374584959",
            "id": 2374584959,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6NiUp_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374584959/reactions"
            },
            "updated_at": "2024-09-25T16:36:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374584959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As for the generic helper function, it sorta depends on another PR I will put out soon (which depends on #30514, due to a small conflict)",
            "created_at": "2024-09-25T18:00:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2374803182",
            "id": 2374803182,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6NjJ7u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374803182/reactions"
            },
            "updated_at": "2024-09-25T18:00:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374803182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think this should be specific to `commentstring`, at least at the underlying function level (it's ok at the metadata level for now, unless we can think of a way to generalize this too). Can't this support any `vim.filetype.get_option`?\r\n\r\n@clason this PR may have changed since your comment, but is this still an open question / blocker? Does the \"generalize `_get_urls`\" TODO capture your suggestion?",
            "created_at": "2024-10-09T12:00:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2402123291",
            "id": 2402123291,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6PLX4b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402123291/reactions"
            },
            "updated_at": "2024-10-09T12:00:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402123291",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Hypothetically, what other options could this potentially be useful for? Are there any options like `commentstring` where the option may be different line by line\r\n\r\n@lewis6991 are you suggesting something like:\r\n\r\n    ((list) @_list (#set! @_list option.foo \"...\"))\r\n\r\nor something else?",
            "created_at": "2024-10-09T12:02:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2402127808",
            "id": 2402127808,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6PLY_A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402127808/reactions"
            },
            "updated_at": "2024-10-09T12:02:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402127808",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah something like that. Clason suggested making this more generic, so I was just going through the thought process of any hypothetical benefits if we were to do that. The fact this is done using the `#set!` directive means we don't need any upstream support or community alignment to implement this.",
            "created_at": "2024-10-09T12:41:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2402215536",
            "id": 2402215536,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6PLuZw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402215536/reactions"
            },
            "updated_at": "2024-10-09T12:41:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402215536",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, I think it should be generic on the level of the queries/metadata, but I have been convinced that it makes sense for the actual feature/Lua implementation to be specific to `commentstring`.",
            "created_at": "2024-10-09T12:48:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2402230173",
            "id": 2402230173,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6PLx-d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402230173/reactions"
            },
            "updated_at": "2024-10-09T12:48:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402230173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Idea: Use `bo.foo` or `wo.foo` for symmetry with the Lua API (aids discoverability and reinforces domain knowledge)?",
            "created_at": "2024-10-09T13:08:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2402295325",
            "id": 2402295325,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6PMB4d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402295325/reactions"
            },
            "updated_at": "2024-10-09T13:08:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402295325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Would this look like using `wo.foo` as a table key or creating a `wo` table within metadata, then using `foo` for its key?",
            "created_at": "2024-10-09T13:21:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2402336780",
            "id": 2402336780,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6PMMAM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402336780/reactions"
            },
            "updated_at": "2024-10-09T13:21:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402336780",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I didn't envision any table handling (yet; that can come later under the hood if that makes things easier); I was thinking merely as a namespace (alternative to `options.commentstring` -> `bo.commentstring`).",
            "created_at": "2024-10-09T13:26:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2402348885",
            "id": 2402348885,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6PMO9V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402348885/reactions"
            },
            "updated_at": "2024-10-09T13:26:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402348885",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is it possible to add this to the 0.11 milestone?",
            "created_at": "2024-11-24T17:09:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2496112399",
            "id": 2496112399,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6Ux6cP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2496112399/reactions"
            },
            "updated_at": "2024-11-24T17:09:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2496112399",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If it's done before 0.11 is released (which doesn't look imminent), it'll be included. I don't think it needs to block the release (which is what the milestone is for).",
            "created_at": "2024-11-24T19:10:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2496179875",
            "id": 2496179875,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6UyK6j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2496179875/reactions"
            },
            "updated_at": "2024-11-24T19:10:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2496179875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If it's done before 0.11 is released (which doesn't look imminent), it'll be included. I don't think it needs to block the release (which is what the milestone is for).\r\n\r\nIs there anything left to do here?",
            "created_at": "2024-11-24T19:55:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/30501#issuecomment-2496202884",
            "id": 2496202884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
            "node_id": "IC_kwDOAPphoM6UyQiE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2496202884/reactions"
            },
            "updated_at": "2024-11-24T19:55:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2496202884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30501/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30501/commits",
    "created_at": "2024-09-24T19:28:15Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30501.diff",
    "draft": false,
    "head": {
        "label": "ribru17:cms_metadata",
        "ref": "cms_metadata",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-02-03T22:52:03Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 299447,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-02-03T17:56:13Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7b9897f3e0e6a91373dad84b2d74299c58813d53",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30501",
    "id": 2089814579,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30501",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 7015106619,
            "name": "comment",
            "node_id": "LA_kwDOAPphoM8AAAABoiIIOw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/comment"
        }
    ],
    "locked": false,
    "merge_commit_sha": "2235623f8cd8104ee877c89b8232174a27383133",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM58kAoz",
    "number": 30501,
    "patch_url": "https://github.com/neovim/neovim/pull/30501.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30501/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7b9897f3e0e6a91373dad84b2d74299c58813d53",
    "title": "feat(comment): allow commentstring to be determined from node metadata",
    "updated_at": "2025-01-30T20:08:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30501",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}