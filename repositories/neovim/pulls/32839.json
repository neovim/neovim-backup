{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32839/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32839/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32839"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32839"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32839/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32839"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/500a054946977ba4ee3085b73a8d81646437fdd6"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6348,
            "forks_count": 6348,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 2006,
            "open_issues_count": 2006,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-10-07T02:20:49Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 346473,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 93252,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-10-07T02:28:15Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 93252,
            "watchers_count": 93252,
            "web_commit_signoff_required": false
        },
        "sha": "97ab7dd78436e0da343bd77c0171a043d4e5c45a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Fix #28741\r\nProblem:\r\nThe original implementation only checked the main thread's children file (/proc/<ppid>/task/<ppid>/children), missing child processes created by other threads.\r\n\r\nSolution:\r\nNow, it iterates through all thread directories under /proc/<ppid>/task/, reads each thread's children file, collects unique child PIDs, and properly handles errors. This ensures complete detection of child processes regardless of which thread created them.\r\n```\r\necho \"\r\n        vim.system{'firefox','-P'}\r\n        vim.uv.sleep(1000)\r\n        local pid=assert(tonumber(vim.iter(vim.split(vim.system{'pgrep','firefox'}:wait().stdout,'\\n',{trimempty=true})):nth(-1)))\r\n        vim.print('Child processes: '..vim.inspect(vim._os_proc_children(pid)))\r\n        vim.print('nvim_get_proc_children: '..vim.inspect(vim.api.nvim_get_proc_children(pid)))\r\n        \"|/usr/local/bin/nvim -l -\r\n```\r\noutput\r\n```\r\nChild processes: { 150113, 150146 }\r\nnvim_get_proc_children: { 150113, 150146 }\r\n```",
    "closed_at": null,
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks! Since this is using linux's procfs, could be done in Lua. We already have a Lua function that is called by `nvim_get_proc_children`:  https://github.com/neovim/neovim/blob/8b5a0a00c8cfe776c4227862c3fb32a07d154663/runtime/lua/vim/_editor.lua#L179\r\n\r\nProposal:\r\n\r\n- change `os_proc_children` so that it immediately does `return 2` for linux.\r\n- move the Linux logic into the Lua function.\r\n- (optional followup PR (not this PR)): rearrange the code so that `os_proc_children` internally calls the Lua function, instead of doing that in `nvim_get_proc_children`. This allows `os_proc_children` to be useful on all platforms.",
            "created_at": "2025-03-11T20:57:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/32839#issuecomment-2715692070",
            "id": 2715692070,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32839",
            "node_id": "IC_kwDOAPphoM6h3iwm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2715692070/reactions"
            },
            "updated_at": "2025-03-11T20:58:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2715692070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "### **Summary of Existing Implementation, Issues, and My Thoughts**\r\n\r\n- **vim._os_proc_children()** relies on the `pgrep -P` command to retrieve child processes.  \r\n- **os_proc_children()** on Linux reads `/proc/<ppid>/task/<tid>/children` to get child processes, but the current implementation only checks the main thread, which may cause it to miss child processes created by other threads.  \r\n- **vim.api.nvim_get_proc_children()** simply calls `os_proc_children()`, so it is limited by the behavior of `os_proc_children()`.  \r\n\r\nThe current Linux implementation of `os_proc_children()` can find the main thread, but since child processes may not necessarily be created by the main thread, it fails to return `2` and does not retrieve all child processes.  \r\n\r\nYou suggested modifying os_proc_children(ppid) to return 2 on Linux, so that vim.api.nvim_get_proc_children(ppid) calls vim._os_proc_children(ppid) in Lua, allowing pgrep to fetch child processes.\r\n\r\nHowever, since the issue originates from `os_proc_children()`, it can be resolved by simply improving the Linux-specific code in `os_proc_children()`.  \r\n\r\n### **Fix**\r\n\r\nInstead of modifying the Lua logic that uses `pgrep`, we should keep the Linux logic in the C code and enhance it to traverse `/proc` completely. This will ensure multi-threading support and prevent missing child processes.  ",
            "created_at": "2025-03-12T11:37:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/32839#issuecomment-2717580767",
            "id": 2717580767,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32839",
            "node_id": "IC_kwDOAPphoM6h-v3f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717580767/reactions"
            },
            "updated_at": "2025-03-12T11:37:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717580767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/116494689?v=4",
                "events_url": "https://api.github.com/users/Xeron2000/events{/privacy}",
                "followers_url": "https://api.github.com/users/Xeron2000/followers",
                "following_url": "https://api.github.com/users/Xeron2000/following{/other_user}",
                "gists_url": "https://api.github.com/users/Xeron2000/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Xeron2000",
                "id": 116494689,
                "login": "Xeron2000",
                "node_id": "U_kgDOBvGRYQ",
                "organizations_url": "https://api.github.com/users/Xeron2000/orgs",
                "received_events_url": "https://api.github.com/users/Xeron2000/received_events",
                "repos_url": "https://api.github.com/users/Xeron2000/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Xeron2000/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Xeron2000/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Xeron2000",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Instead of modifying the Lua logic that uses `pgrep`, we should keep the Linux logic in the C code and enhance it to traverse `/proc` completely\r\n\r\nNo, I meant that the linux logic should be moved to Lua, and it can read /proc there. I did not mean that pgrep should be used on linux.\r\n\r\nThere is no reason to do a bunch of filesystem operations (traversing /proc) in C.",
            "created_at": "2025-03-12T12:08:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/32839#issuecomment-2717673719",
            "id": 2717673719,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32839",
            "node_id": "IC_kwDOAPphoM6h_Gj3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717673719/reactions"
            },
            "updated_at": "2025-03-12T12:09:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717673719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > Instead of modifying the Lua logic that uses `pgrep`, we should keep the Linux logic in the C code and enhance it to traverse `/proc` completely\r\n> \r\n> No, I meant that the linux logic should be moved to Lua, and it can read /proc there. I did not mean that pgrep should be used on linux.\r\n> \r\n> There is no reason to do a bunch of filesystem operations (traversing /proc) in C.\r\n\r\nGot it, I misunderstood. Thanks for the clarification.",
            "created_at": "2025-03-12T12:55:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/32839#issuecomment-2717798513",
            "id": 2717798513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32839",
            "node_id": "IC_kwDOAPphoM6h_lBx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717798513/reactions"
            },
            "updated_at": "2025-03-12T12:55:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717798513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/116494689?v=4",
                "events_url": "https://api.github.com/users/Xeron2000/events{/privacy}",
                "followers_url": "https://api.github.com/users/Xeron2000/followers",
                "following_url": "https://api.github.com/users/Xeron2000/following{/other_user}",
                "gists_url": "https://api.github.com/users/Xeron2000/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Xeron2000",
                "id": 116494689,
                "login": "Xeron2000",
                "node_id": "U_kgDOBvGRYQ",
                "organizations_url": "https://api.github.com/users/Xeron2000/orgs",
                "received_events_url": "https://api.github.com/users/Xeron2000/received_events",
                "repos_url": "https://api.github.com/users/Xeron2000/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Xeron2000/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Xeron2000/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Xeron2000",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Haven't looked closely at the logic, but this looks much better! Is there a small meaningful change that can be made to the existing test(s)? Or do we need a new test? `test/functional/api/proc_spec.lua`\r\n\r\nYou can [run the test](https://github.com/neovim/neovim/blob/master/test/README.md#filter-by-file) like this:\r\n\r\n    TEST_FILE=test/functional/api/proc_spec.lua make functionaltest\r\n\r\nFor testing timing-sensitive behavior, note that:\r\n\r\n- `t.retry()` is also available to retry assertions that are waiting for something.",
            "created_at": "2025-03-24T19:17:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/32839#issuecomment-2749168748",
            "id": 2749168748,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32839",
            "node_id": "IC_kwDOAPphoM6j3Pxs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749168748/reactions"
            },
            "updated_at": "2025-03-24T19:17:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2749168748",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32839/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32839/commits",
    "created_at": "2025-03-11T15:41:55Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32839.diff",
    "draft": false,
    "head": {
        "label": "Xeron2000:fix-nvim-get-proc-children",
        "ref": "fix-nvim-get-proc-children",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/Xeron2000/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/Xeron2000/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/Xeron2000/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/Xeron2000/neovim/branches{/branch}",
            "clone_url": "https://github.com/Xeron2000/neovim.git",
            "collaborators_url": "https://api.github.com/repos/Xeron2000/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/Xeron2000/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/Xeron2000/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/Xeron2000/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/Xeron2000/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/Xeron2000/neovim/contributors",
            "created_at": "2025-03-11T12:44:05Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/Xeron2000/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/Xeron2000/neovim/downloads",
            "events_url": "https://api.github.com/repos/Xeron2000/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/Xeron2000/neovim/forks",
            "full_name": "Xeron2000/neovim",
            "git_commits_url": "https://api.github.com/repos/Xeron2000/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/Xeron2000/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/Xeron2000/neovim/git/tags{/sha}",
            "git_url": "git://github.com/Xeron2000/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/Xeron2000/neovim/hooks",
            "html_url": "https://github.com/Xeron2000/neovim",
            "id": 946630094,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/Xeron2000/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/Xeron2000/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/Xeron2000/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/Xeron2000/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/Xeron2000/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/Xeron2000/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/Xeron2000/neovim/merges",
            "milestones_url": "https://api.github.com/repos/Xeron2000/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOGxtzg",
            "notifications_url": "https://api.github.com/repos/Xeron2000/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/116494689?v=4",
                "events_url": "https://api.github.com/users/Xeron2000/events{/privacy}",
                "followers_url": "https://api.github.com/users/Xeron2000/followers",
                "following_url": "https://api.github.com/users/Xeron2000/following{/other_user}",
                "gists_url": "https://api.github.com/users/Xeron2000/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Xeron2000",
                "id": 116494689,
                "login": "Xeron2000",
                "node_id": "U_kgDOBvGRYQ",
                "organizations_url": "https://api.github.com/users/Xeron2000/orgs",
                "received_events_url": "https://api.github.com/users/Xeron2000/received_events",
                "repos_url": "https://api.github.com/users/Xeron2000/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Xeron2000/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Xeron2000/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Xeron2000",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/Xeron2000/neovim/pulls{/number}",
            "pushed_at": "2025-10-03T12:08:45Z",
            "releases_url": "https://api.github.com/repos/Xeron2000/neovim/releases{/id}",
            "size": 334154,
            "ssh_url": "git@github.com:Xeron2000/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/Xeron2000/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/Xeron2000/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/Xeron2000/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/Xeron2000/neovim/subscription",
            "svn_url": "https://github.com/Xeron2000/neovim",
            "tags_url": "https://api.github.com/repos/Xeron2000/neovim/tags",
            "teams_url": "https://api.github.com/repos/Xeron2000/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/Xeron2000/neovim/git/trees{/sha}",
            "updated_at": "2025-03-12T10:36:52Z",
            "url": "https://api.github.com/repos/Xeron2000/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "500a054946977ba4ee3085b73a8d81646437fdd6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/116494689?v=4",
            "events_url": "https://api.github.com/users/Xeron2000/events{/privacy}",
            "followers_url": "https://api.github.com/users/Xeron2000/followers",
            "following_url": "https://api.github.com/users/Xeron2000/following{/other_user}",
            "gists_url": "https://api.github.com/users/Xeron2000/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/Xeron2000",
            "id": 116494689,
            "login": "Xeron2000",
            "node_id": "U_kgDOBvGRYQ",
            "organizations_url": "https://api.github.com/users/Xeron2000/orgs",
            "received_events_url": "https://api.github.com/users/Xeron2000/received_events",
            "repos_url": "https://api.github.com/users/Xeron2000/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/Xeron2000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Xeron2000/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/Xeron2000",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32839",
    "id": 2385558713,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32839",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "b55baf41ee830373d08f2148b2bdbd1fbcdd2601",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6OMLy5",
    "number": 32839,
    "patch_url": "https://github.com/neovim/neovim/pull/32839.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32839/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/500a054946977ba4ee3085b73a8d81646437fdd6",
    "title": "fix(proc): ensure nvim_get_proc_children() returns all child processes",
    "updated_at": "2025-10-03T12:08:46Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32839",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/116494689?v=4",
        "events_url": "https://api.github.com/users/Xeron2000/events{/privacy}",
        "followers_url": "https://api.github.com/users/Xeron2000/followers",
        "following_url": "https://api.github.com/users/Xeron2000/following{/other_user}",
        "gists_url": "https://api.github.com/users/Xeron2000/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Xeron2000",
        "id": 116494689,
        "login": "Xeron2000",
        "node_id": "U_kgDOBvGRYQ",
        "organizations_url": "https://api.github.com/users/Xeron2000/orgs",
        "received_events_url": "https://api.github.com/users/Xeron2000/received_events",
        "repos_url": "https://api.github.com/users/Xeron2000/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Xeron2000/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Xeron2000/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Xeron2000",
        "user_view_type": "public"
    }
}