{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34228/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34228/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34228"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34228"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34228/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/91e8195c305b93ac03e06d215d551df15a699031"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6116,
            "forks_count": 6116,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1969,
            "open_issues_count": 1969,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-10T00:47:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 327001,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90210,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-10T02:19:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90210,
            "watchers_count": 90210,
            "web_commit_signoff_required": false
        },
        "sha": "5ebaf832562f36a4c0e996f8b5f3436969ed587e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "\r\n# ‚ùì Problem\r\nWhen setting\r\n```lua\r\nvim.opt.clipboard = 'unnamedplus'\r\nvim.g.clipboard = 'osc52'\r\n```\r\ncopy/pasting `blockwise-visual` (with `CTRL+V`) ends up incorrectly being pasted as a `linewise` mode because `regtype` is ignored.\r\n\r\nHere is how to reproduce this:\r\n* press  `CTRL+V` and select some characters\r\n* press `p` and observe that it is pasted in `linewise` mode\r\n\r\n# Solution\r\n\r\n* store `regtype` in a cache when copying\r\n* pass `regtype` when pasting if OSC 52 data matches the cache (similar to what is done in [clipboard.vim](https://github.com/neovim/neovim/blob/master/runtime/autoload/provider/clipboard.vim#L281-L283))\r\n\r\nFix https://github.com/neovim/neovim/issues/27706\r\n\r\n# üìä test coverage\r\nCommand: `make test`\r\n\r\nIt failed on `node` tests which seem unrelated with my changes:\r\n```\r\n-------- Global test environment teardown.\r\n======== 8005 tests from 442 test files ran. (432211.00 ms total)\r\nPASSED   7952 tests.\r\nSKIPPED  50 tests, listed below:\r\nSKIPPED  test/functional/api/autocmd_spec.lua @ 239: autocmd api nvim_create_autocmd script and verbose settings\r\nSKIPPED  test/functional/api/server_requests_spec.lua @ 149: server -> client requests and notifications interleaved will close connection if not properly synchronized\r\nSKIPPED  test/functional/autocmd/termxx_spec.lua @ 37: autocmd TermClose TermClose deleting its own buffer, altbuf = buffer 1 #10386\r\nSKIPPED  test/functional/core/channels_spec.lua @ 36: channels can connect to socket\r\nSKIPPED  test/functional/core/job_spec.lua @ 1012: jobs exit event follows stdout, stderr\r\nSKIPPED  test/functional/editor/langmap_spec.lua @ 242: 'langmap' Translates modified keys correctly\r\nSKIPPED  test/functional/editor/langmap_spec.lua @ 248: 'langmap' handles multi-byte characters\r\nSKIPPED  test/functional/editor/langmap_spec.lua @ 258: 'langmap' handles multibyte mappings\r\nSKIPPED  test/functional/ex_cmds/make_spec.lua @ 19: :make with powershell not tested; powershell was not found\r\nSKIPPED  test/functional/ex_cmds/source_spec.lua @ 50: :source changing 'shellslash' changes the result of expand()\r\ntest/functional/ex_cmds/source_spec.lua:52: 'shellslash' only works on Windows\r\nSKIPPED  test/functional/ex_cmds/verbose_spec.lua @ 209: lua :verbose with -V1 \"Last set\" shows full location using :luafile for command defined by nvim_command\r\ntest/functional/ex_cmds/verbose_spec.lua:211: nvim_command does not set the script context\r\nSKIPPED  test/functional/ex_cmds/verbose_spec.lua @ 209: lua :verbose without -V1 \"Last set\" suggests -V1 when using :luafile for command defined by nvim_command\r\ntest/functional/ex_cmds/verbose_spec.lua:211: nvim_command does not set the script context\r\nSKIPPED  .../functional/legacy/036_regexp_character_classes_spec.lua @ 295: character classes in regexp \"\\%1l^#.*\" does not match on a line starting with \"#\". (vim-patch:7.4.1305)\r\nSKIPPED  test/functional/lua/uri_spec.lua @ 208: URI methods uri from bufnr Windows paths should not be treated as uris\r\ntest/testutil.lua:829: Not applicable on non-Windows\r\nSKIPPED  test/functional/lua/vim_spec.lua @ 2269: lua stdlib vim.opt handles STUPID window things\r\nSKIPPED  test/functional/lua/watch_spec.lua @ 61: vim._watch inotify() ignores nonexistent paths\r\ntest/testutil.lua:829: inotifywait not found\r\nSKIPPED  test/functional/lua/watch_spec.lua @ 82: vim._watch inotify() detects file changes\r\ntest/testutil.lua:829: inotifywait not found\r\nSKIPPED  test/functional/lua/with_spec.lua @ 306: vim._with `emsg_silent` context works\r\nSKIPPED  test/functional/lua/with_spec.lua @ 512: vim._with `hide` context works\r\nSKIPPED  test/functional/lua/with_spec.lua @ 565: vim._with `horizontal` context works\r\nSKIPPED  test/functional/lua/with_spec.lua @ 576: vim._with `horizontal` context can be nested\r\nSKIPPED  test/functional/lua/with_spec.lua @ 591: vim._with `keepalt` context works\r\nSKIPPED  test/functional/lua/with_spec.lua @ 625: vim._with `keepjumps` context works\r\nSKIPPED  test/functional/lua/with_spec.lua @ 654: vim._with `keepmarks` context works\r\nSKIPPED  test/functional/lua/with_spec.lua @ 687: vim._with `keepatterns` context works\r\nSKIPPED  test/functional/lua/with_spec.lua @ 771: vim._with `noautocmd` context can be nested\r\nSKIPPED  test/functional/lua/with_spec.lua @ 1040: vim._with `silent` context can be nested\r\nSKIPPED  test/functional/lua/with_spec.lua @ 1062: vim._with `unsilent` context can be nested\r\nSKIPPED  test/functional/lua/with_spec.lua @ 1496: vim._with can forward command modifiers to user command\r\nSKIPPED  test/functional/options/keymap_spec.lua @ 195: 'keymap' / :lmap mappings not applied to macro replay of :lnoremap\r\nSKIPPED  test/functional/plugin/lsp_spec.lua @ 1779: LSP basic_init test should check the body and didChange incremental normal mode editing\r\nSKIPPED  test/functional/plugin/lsp_spec.lua @ 5744: LSP vim.lsp._watchfiles sends notifications when files change (watchfunc=inotify)\r\ntest/testutil.lua:829: inotify-tools not installed and not on CI\r\nSKIPPED  test/functional/provider/perl_spec.lua @ 19: Missing perl host, or perl version is too old (\"Neovim::Ext\" cpan module is not installed)\r\nSKIPPED  test/functional/provider/python3_spec.lua @ 31: Python 3 (or the pynvim module) is broken/missing (Could not load Python :\r\n/usr/bin/python3 does not have the \"neovim\" module.\r\n/usr/bin/python3.13 does not have the \"neovim\" module.\r\npython3.12 not found in search path or not executable.\r\npython3.11 not found in search path or not executable.\r\npython3.10 not found in search path or not executable.\r\npython3.9 not found in search path or not executable.\r\n/usr/bin/python does not have the \"neovim\" module.)\r\nSKIPPED  test/functional/provider/ruby_spec.lua @ 29: Missing neovim RubyGem (missing ruby or ruby-host)\r\nSKIPPED  test/functional/terminal/tui_spec.lua @ 3105: TUI 't_Co' (terminal colors) TERM=interix uses 8 colors\r\nSKIPPED  test/functional/ui/bufhl_spec.lua @ 450: Buffer highlighting prioritizes latest added highlight\r\nSKIPPED  test/functional/ui/decorations_spec.lua @ 7595: decorations: window scoped sign_text\r\nSKIPPED  test/functional/ui/float_spec.lua @ 740: float window with only one tabpage, deleting the last non-floating window's buffer closes other windows with that buffer when there are other buffers if called from floating window with another buffer\r\nSKIPPED  test/functional/ui/float_spec.lua @ 773: float window with only one tabpage, deleting the last non-floating window's buffer creates an empty buffer when there is only one listed buffer if called from floating window with an unlisted buffer\r\nSKIPPED  test/functional/ui/float_spec.lua @ 942: float window with multiple tabpages and multiple listed buffers, deleting the last non-floating window's buffer closes the tabpage when all floating windows are closeable if called from floating window with another buffer\r\nSKIPPED  test/functional/ui/float_spec.lua @ 971: float window :close on non-float with floating windows does not crash if BufUnload makes it the only non-float in tabpage\r\nSKIPPED  test/functional/ui/float_spec.lua @ 4985: float window with ext_multigrid supports second UI without multigrid\r\nSKIPPED  test/functional/ui/messages_spec.lua @ 2584: ui/msg_puts_printf output multibyte characters correctly\r\ntest/testutil.lua:829: Nvim not built with ENABLE_TRANSLATIONS\r\nSKIPPED  test/functional/vimscript/eval_spec.lua @ 90: backtick expansion with shell=fish\r\ntest/functional/vimscript/eval_spec.lua:92: missing \"fish\" command\r\nSKIPPED  test/functional/vimscript/eval_spec.lua @ 108: List support code does not actually allows interrupting with just got_int\r\nSKIPPED  test/functional/vimscript/executable_spec.lua @ 111: executable() (Windows) N/A for non-windows\r\nSKIPPED  test/functional/vimscript/system_spec.lua @ 191: system() executes shell function powershell w/ UTF-8 text #13713\r\ntest/functional/vimscript/system_spec.lua:193: powershell not found\r\nSKIPPED  test/functional/vimscript/system_spec.lua @ 543: systemlist() powershell w/ UTF-8 text #13713\r\ntest/functional/vimscript/system_spec.lua:545: powershell not found\r\nSKIPPED  test/functional/vimscript/system_spec.lua @ 597: shell :! :{range}! with powershell using \"cmdlets\" filter/redirect #16271 #19250\r\ntest/functional/vimscript/system_spec.lua:599: powershell not found\r\nFAILED   3 tests, listed below:\r\nFAILED   test/functional/plugin/lsp_spec.lua @ 6680: LSP vim.lsp.config() and vim.lsp.enable() correctly handles root_markers\r\ntest/functional/plugin/lsp_spec.lua:6739: retry() attempts: 49\r\ntest/functional/plugin/lsp_spec.lua:6740: Expected objects to be the same.\r\nPassed in:\r\n(string) '/home/antoine'\r\nExpected:\r\n(nil)\r\n\r\nstack traceback:\r\n\ttest/testutil.lua:89: in function 'retry'\r\n\ttest/functional/plugin/lsp_spec.lua:6739: in function 'markers_resolve_to'\r\n\ttest/functional/plugin/lsp_spec.lua:6754: in function <test/functional/plugin/lsp_spec.lua:6680>\r\n\r\nFAILED   test/functional/provider/nodejs_spec.lua @ 33: nodejs host works\r\ntest/functional/provider/nodejs_spec.lua:44: retry() attempts: 146\r\ntest/functional/testnvim.lua:139: Vim:E121: Undefined variable: g:job_out\r\n\r\nstack traceback:\r\n\ttest/testutil.lua:89: in function 'retry'\r\n\ttest/functional/provider/nodejs_spec.lua:44: in function <test/functional/provider/nodejs_spec.lua:33>\r\n\r\nFAILED   test/functional/provider/nodejs_spec.lua @ 48: nodejs host plugin works\r\ntest/functional/provider/nodejs_spec.lua:67: retry() attempts: 146\r\ntest/functional/testnvim.lua:139: Vim:E121: Undefined variable: g:job_out\r\n\r\nstack traceback:\r\n\ttest/testutil.lua:89: in function 'retry'\r\n\ttest/functional/provider/nodejs_spec.lua:67: in function <test/functional/provider/nodejs_spec.lua:48>\r\n\r\n\r\n 50 SKIPPED TESTS\r\n 3 FAILED TESTS\r\n------------------------------------------------------------------------------\r\n$NVIM_LOG_FILE: /home/antoine/src/neovim_antoine/build/.nvimlog\r\n(last 10 lines)\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 inbuf_poll:516: blocking... events=true\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 receive_msgpack:210: ch 1: parsing 108 bytes from msgpack Stream: 0x55b383658810\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 RPC: <- 1: [request]   id=3: nvim_command\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 handle_request:347: RPC: scheduled nvim_command\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 state_enter:99: input: K_EVENT\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 handle_nvim_command:9659: RPC: ch 1: invoke nvim_command\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 RPC: -> 1: [error]     id=3\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 may_trigger_safestate:307: SafeState: Start triggering\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 inbuf_poll:516: blocking... events=false\r\nDBG 2025-05-29T16:38:26.961 T7845.71450.0 inbuf_poll:516: blocking... events=true\r\n------------------------------------------------------------------------------\r\n```\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2114774010"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114774010"
                }
            },
            "author_association": "MEMBER",
            "body": "This can be a local. Doesn't need to be exposed publicly.\r\n\r\n```suggestion\r\nlocal cache = {}\r\n```",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-29T21:25:09Z",
            "diff_hunk": "@@ -9,10 +9,34 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache\n+---\n+---@field lines_str string String representation of lines passed to the copy() funciton\n+---@field regtype string regtype argument passed to the copy() function\n+---\n+---@type table<string, clipboard_cache>\n+M.cache = {}",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2114774010",
            "id": 2114774010,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-DOP6",
            "original_commit_id": "13c83630f8912f05bee5fad3b5a09840ddbe7995",
            "original_line": 18,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2879651298,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114774010/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-29T21:31:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114774010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2114780709"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114780709"
                }
            },
            "author_association": "MEMBER",
            "body": "Wonder if we should compute and store the SHA 256 of the string, since the string itself could be very large.\r\n\r\nI also don't think this needs to be a separate function. It's only used once and it should only be like 3 or 4 lines, so would be easier to keep it local to where it's used.\r\n\r\nI think this can be rewritten as\r\n\r\n```lua\r\nlocal regtype = ''\r\nif cache[reg] then\r\n  local hash = vim.fn.sha256(contents)\r\n  if cache[reg].hash == hash then\r\n    regtype = cache[reg].regtype\r\n  end\r\nend\r\n\r\nreturn { vim.split(contents, '\\n'), regtype }\r\n```",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-29T21:30:52Z",
            "diff_hunk": "@@ -9,10 +9,34 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache\n+---\n+---@field lines_str string String representation of lines passed to the copy() funciton\n+---@field regtype string regtype argument passed to the copy() function\n+---\n+---@type table<string, clipboard_cache>\n+M.cache = {}\n+\n+-- When OSC 52 lines are the same as our cache, return our cache regtype\n+local function get_regtype(reg, lines_str)\n+  local cb_cache = M.cache[reg]\n+  if cb_cache then\n+    if cb_cache.lines_str == lines_str then\n+      return cb_cache.regtype\n+    end\n+  end\n+  return ''\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2114780709",
            "id": 2114780709,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-DP4l",
            "original_commit_id": "13c83630f8912f05bee5fad3b5a09840ddbe7995",
            "original_line": 29,
            "original_position": 21,
            "original_start_line": 21,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2879651298,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114780709/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-29T21:31:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114780709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2114781438"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114781438"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    cache[reg] = {\r\n      hash = vim.fn.sha256(s),\r\n      regtype = regtype,\r\n    }\r\n```",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-29T21:31:26Z",
            "diff_hunk": "@@ -9,10 +9,34 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache\n+---\n+---@field lines_str string String representation of lines passed to the copy() funciton\n+---@field regtype string regtype argument passed to the copy() function\n+---\n+---@type table<string, clipboard_cache>\n+M.cache = {}\n+\n+-- When OSC 52 lines are the same as our cache, return our cache regtype\n+local function get_regtype(reg, lines_str)\n+  local cb_cache = M.cache[reg]\n+  if cb_cache then\n+    if cb_cache.lines_str == lines_str then\n+      return cb_cache.regtype\n+    end\n+  end\n+  return ''\n+end\n+\n function M.copy(reg)\n   local clipboard = reg == '+' and 'c' or 'p'\n-  return function(lines)\n+  ---@param regtype string\n+  return function(lines, regtype)\n     local s = table.concat(lines, '\\n')\n+    M.cache[reg] = {\n+      lines_str = s,\n+      regtype = regtype,\n+    }",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2114781438",
            "id": 2114781438,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-DQD-",
            "original_commit_id": "13c83630f8912f05bee5fad3b5a09840ddbe7995",
            "original_line": 39,
            "original_position": 32,
            "original_start_line": 36,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2879651298,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114781438/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-29T21:31:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114781438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2114793297"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114793297"
                }
            },
            "author_association": "NONE",
            "body": "Implemented in https://github.com/neovim/neovim/pull/34228/commits/1b89652e78afed3876bdbbc7a74bc16536929fec",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-29T21:41:48Z",
            "diff_hunk": "@@ -9,10 +9,34 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache\n+---\n+---@field lines_str string String representation of lines passed to the copy() funciton\n+---@field regtype string regtype argument passed to the copy() function\n+---\n+---@type table<string, clipboard_cache>\n+M.cache = {}",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2114793297",
            "id": 2114793297,
            "in_reply_to_id": 2114774010,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-DS9R",
            "original_commit_id": "13c83630f8912f05bee5fad3b5a09840ddbe7995",
            "original_line": 18,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2879680241,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114793297/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-29T21:41:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114793297",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2114793587"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114793587"
                }
            },
            "author_association": "NONE",
            "body": "Implemented in https://github.com/neovim/neovim/pull/34228/commits/1b89652e78afed3876bdbbc7a74bc16536929fec",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-29T21:41:56Z",
            "diff_hunk": "@@ -9,10 +9,34 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache\n+---\n+---@field lines_str string String representation of lines passed to the copy() funciton\n+---@field regtype string regtype argument passed to the copy() function\n+---\n+---@type table<string, clipboard_cache>\n+M.cache = {}\n+\n+-- When OSC 52 lines are the same as our cache, return our cache regtype\n+local function get_regtype(reg, lines_str)\n+  local cb_cache = M.cache[reg]\n+  if cb_cache then\n+    if cb_cache.lines_str == lines_str then\n+      return cb_cache.regtype\n+    end\n+  end\n+  return ''\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2114793587",
            "id": 2114793587,
            "in_reply_to_id": 2114780709,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-DTBz",
            "original_commit_id": "13c83630f8912f05bee5fad3b5a09840ddbe7995",
            "original_line": 29,
            "original_position": 21,
            "original_start_line": 21,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2879680770,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114793587/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-29T21:41:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114793587",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2114794041"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114794041"
                }
            },
            "author_association": "NONE",
            "body": "Implemented in https://github.com/neovim/neovim/pull/34228/commits/1b89652e78afed3876bdbbc7a74bc16536929fec",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-29T21:42:05Z",
            "diff_hunk": "@@ -9,10 +9,34 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache\n+---\n+---@field lines_str string String representation of lines passed to the copy() funciton\n+---@field regtype string regtype argument passed to the copy() function\n+---\n+---@type table<string, clipboard_cache>\n+M.cache = {}\n+\n+-- When OSC 52 lines are the same as our cache, return our cache regtype\n+local function get_regtype(reg, lines_str)\n+  local cb_cache = M.cache[reg]\n+  if cb_cache then\n+    if cb_cache.lines_str == lines_str then\n+      return cb_cache.regtype\n+    end\n+  end\n+  return ''\n+end\n+\n function M.copy(reg)\n   local clipboard = reg == '+' and 'c' or 'p'\n-  return function(lines)\n+  ---@param regtype string\n+  return function(lines, regtype)\n     local s = table.concat(lines, '\\n')\n+    M.cache[reg] = {\n+      lines_str = s,\n+      regtype = regtype,\n+    }",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2114794041",
            "id": 2114794041,
            "in_reply_to_id": 2114781438,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-DTI5",
            "original_commit_id": "13c83630f8912f05bee5fad3b5a09840ddbe7995",
            "original_line": 39,
            "original_position": 32,
            "original_start_line": 36,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2879681313,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114794041/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-29T21:42:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114794041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2116147655"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2116147655"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: does this follow the naming conventions of classes/types found in the codebase?\r\n",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-30T15:35:05Z",
            "diff_hunk": "@@ -9,10 +9,23 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2116147655",
            "id": 2116147655,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-IdnH",
            "original_commit_id": "1b89652e78afed3876bdbbc7a74bc16536929fec",
            "original_line": 12,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2881719937,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2116147655/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-30T15:35:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2116147655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2116171737"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2116171737"
                }
            },
            "author_association": "MEMBER",
            "body": "Should be `ClipboardCache`",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-30T15:50:47Z",
            "diff_hunk": "@@ -9,10 +9,23 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2116171737",
            "id": 2116171737,
            "in_reply_to_id": 2116147655,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-IjfZ",
            "original_commit_id": "1b89652e78afed3876bdbbc7a74bc16536929fec",
            "original_line": 12,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2881757193,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2116171737/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-30T15:50:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2116171737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34228#discussion_r2117533307"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34228"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2117533307"
                }
            },
            "author_association": "NONE",
            "body": "Fixed in f1e1752",
            "commit_id": "91e8195c305b93ac03e06d215d551df15a699031",
            "created_at": "2025-05-31T08:23:58Z",
            "diff_hunk": "@@ -9,10 +9,23 @@ local function osc52(clipboard, contents)\n   return string.format('\\027]52;%s;%s\\027\\\\', clipboard, contents)\n end\n \n+---@class clipboard_cache",
            "html_url": "https://github.com/neovim/neovim/pull/34228#discussion_r2117533307",
            "id": 2117533307,
            "in_reply_to_id": 2116147655,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-Nv57",
            "original_commit_id": "1b89652e78afed3876bdbbc7a74bc16536929fec",
            "original_line": 12,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": null,
            "pull_request_review_id": 2883677093,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2117533307/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-31T08:30:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2117533307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "There is a rather important drawback: all data copied from neovim will by pasted outside of neovim with an extra line featuring the `regtype`.\r\n\r\nI don't know if this is a show stopper, please let me know.",
            "created_at": "2025-05-29T18:11:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920189719",
            "id": 2920189719,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uDo8X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920189719/reactions"
            },
            "updated_at": "2025-05-29T18:11:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920189719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't know if this is a show stopper, please let me know.\r\n\r\nIt is.",
            "created_at": "2025-05-29T18:12:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920193199",
            "id": 2920193199,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uDpyv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920193199/reactions"
            },
            "updated_at": "2025-05-29T18:12:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920193199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">This PR fixes this by handling regtype properly.\r\n\r\nHow does it do this though? It looks like this only works if the text that is being pasted already contains the regtype as the last line? That will not ever be the case though, except by coincidence (if I copy-paste some text from a browser, it does not conveniently contain \"v\" as the last line).",
            "created_at": "2025-05-29T18:16:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920201145",
            "id": 2920201145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uDru5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920201145/reactions"
            },
            "updated_at": "2025-05-29T18:16:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920201145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can you please provide a test case that **fails** before your change and **passes** after implementing your change?\r\n\r\nBy the way, it is fine if are using an LLM to assist you, but I do ask that you at least understand the solution that is being implemented before asking maintainers to review it.",
            "created_at": "2025-05-29T18:17:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920204423",
            "id": 2920204423,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uDsiH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920204423/reactions"
            },
            "updated_at": "2025-05-29T18:17:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920204423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Im not using an LLM and I did understand the code I wrote.\n\nI put this MR in draft and did not ask for immediate review.\n\nThe failing scenario (working after the change) is in the description of this MR.",
            "created_at": "2025-05-29T20:09:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920463485",
            "id": 2920463485,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uErx9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920463485/reactions"
            },
            "updated_at": "2025-05-29T20:09:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920463485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The extra line with the `regtype` is problematic so I was thinking of 2 ways to avoid this:\r\n1. add some magic [escape sequence](https://www.xfree86.org/4.8.0/ctlseqs.html) to code for the `regtype` without being printed\r\n2. use a cache with the `lines` + the `regtype` and apply the `regtype` when the `lines` are matching what we get from OSC 52, similar to what is done in [clipboard.vim](https://github.com/neovim/neovim/blob/master/runtime/autoload/provider/clipboard.vim#L281-L283)\r\n\r\nI did not find any magic escape sequence achieving 1., and I was thinking of trying 2.\r\n\r\nUnfortunately 2. will only fix the issue in a single vim instance but won't change anything when copying from 1 vim instance and pasting to another.\r\n\r\nIf you think this isn't going anywhere feel free to close this.",
            "created_at": "2025-05-29T20:22:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920491349",
            "id": 2920491349,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uEylV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920491349/reactions"
            },
            "updated_at": "2025-05-29T20:22:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920491349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">The failing scenario (working after the change) is in the description of this MR.\r\n\r\nThe test needs to be an automated test added to the test suite.\r\n\r\n>The extra line with the regtype is problematic so I was thinking of 2 ways to avoid this:\r\n\r\nIt is not even just a \"drawback\" though, it doesn't even solve the described problem.\r\n\r\nThe code you wrote means that when I copy from inside Nvim, the text that gets copied to my clipboard will now contain an extra line containing a `v` or `V` (depending on reg type). So if I now paste this code into another application, there is an extra line and character that I didn't actually copy.\r\n\r\nSimilarly, on the paste code path, this only works if the text that you have in your clipboard _happens_ to have the reg type on a single line at the end. And if it doesn't, the last line of the pasted text is removed completely.\r\n\r\nThe only scenario in which this makes sense is if you are copying text from Neovim and then immediately pasting it back into Neovim. But that's just a single use case and doesn't solve the problem for the other use cases where text is pasted from other sources (in fact, it makes those other use cases worse).\r\n\r\n> If you think this isn't going anywhere feel free to close this.\r\n\r\nSupporting regtype in more cases is definitely a worthwhile goal but this implementation doesn't do that. If you're interested in helping achieve that then I'm happy to keep this open, and you're free to ask questions here or in the Neovim dev channel on Matrix.",
            "created_at": "2025-05-29T21:02:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920577143",
            "id": 2920577143,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uFHh3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920577143/reactions"
            },
            "updated_at": "2025-05-29T21:02:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920577143",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@gpanders I just implemented the cache solution similar to what is done in [clipboard.vim](https://github.com/neovim/neovim/blob/master/runtime/autoload/provider/clipboard.vim#L281-L283)\r\n\r\n* no more dirty new line with the regtype, no side effect\r\n* fixes the `blockwise-visual` issue when copy/paste is done in the same vim instance, treated as `linewise` when copy/pasting from different vim instances\r\n\r\nIf you think it looks OK, I will implement the test in the test suite as your requested. Just let me know.",
            "created_at": "2025-05-29T21:11:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920593320",
            "id": 2920593320,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uFLeo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920593320/reactions"
            },
            "updated_at": "2025-05-29T21:11:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920593320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @gpanders I just implemented the cache solution similar to what is done in [clipboard.vim](https://github.com/neovim/neovim/blob/master/runtime/autoload/provider/clipboard.vim#L281-L283)\r\n> \r\n>     * no more dirty new line with the regtype, no side effect\r\n> \r\n>     * fixes the `blockwise-visual` issue when copy/paste is done in the same vim instance, treated as `linewise` when copy/pasting from different vim instances\r\n> \r\n> \r\n> If you think it looks OK, I will implement the test in the test suite as your requested. Just let me know.\r\n\r\nThis makes more sense. Thanks.",
            "created_at": "2025-05-29T21:32:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2920636411",
            "id": 2920636411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uFV_7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920636411/reactions"
            },
            "updated_at": "2025-05-29T21:32:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2920636411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@gpanders I did try to add a test in `test/functional/provider/clipboard_spec.lua `:\r\n```lua\r\ndescribe('clipboard=osc52', function()\r\n  before_each(function()\r\n    clear()\r\n    Screen.new(72, 4)\r\n  end)\r\n\r\n  it('basic register test', function()\r\n    command('set clipboard=unnamedplus')\r\n    command(\"let g:clipboard = 'osc52'\")\r\n    eq('OSC 52', eval('provider#clipboard#Executable()'))\r\n    basic_register_test()\r\n  end)\r\nend)\r\n```\r\n\r\nIt fails on the 1st check:\r\n```lua\r\n  insert('some words')\r\n\r\n  feed('^dwP')\r\n  expect('some words')\r\n```\r\nas if nothing was pasted.\r\n\r\nExecuting the same instructions from `nvim --clean` work fine for me.\r\n\r\nDo you know what is going on, is it because the `osc52` feature is not available from the testutil?\r\n\r\nShould I run it like you do in `test/functional/terminal/clipboard_spec.lua`, is it even feasible?",
            "created_at": "2025-05-30T11:46:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2922172884",
            "id": 2922172884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6uLNHU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2922172884/reactions"
            },
            "updated_at": "2025-05-30T11:46:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2922172884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "is this ready?",
            "created_at": "2025-06-03T12:25:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2934992713",
            "id": 2934992713,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6u8G9J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2934992713/reactions"
            },
            "updated_at": "2025-06-03T12:25:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2934992713",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, as far as I'm concerned.\r\n\r\nI was asked to add a functional test but did not succeed. See https://github.com/neovim/neovim/pull/34228#issuecomment-2922172884",
            "created_at": "2025-06-03T20:59:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2937183339",
            "id": 2937183339,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6vEdxr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2937183339/reactions"
            },
            "updated_at": "2025-06-03T20:59:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2937183339",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there anything blocking this MR from getting merged?",
            "created_at": "2025-06-09T06:49:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2954842886",
            "id": 2954842886,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6wH1MG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2954842886/reactions"
            },
            "updated_at": "2025-06-09T06:49:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2954842886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Actually, this looks like a rather fragile hack. Adding a random cache in the osc52 module doesn't seem too appealing. Doesn't that mean this issue will still apply to non-osc52 cases? Or if not, why not?\r\n\r\nReading the Problem statement more closely, looks like this is related to `clipboard=unnamed`.  In https://github.com/neovim/neovim/issues/11804#issuecomment-1113927971 I suggested a potential, more low-level approach to fixing `clipboard=unnamed` performance issues, and maybe at that same layer, something like what you are doing here could also be relevant.\r\n\r\nAlternatively, maybe the problem is that `runtime/lua/vim/ui/clipboard/osc52.lua` is implemented in a different module than the other clipboard provider layer in `runtime/autoload/provider/clipboard.vim`.\r\n\r\nIt looks like clipboard.vim has a similar \"cache\": https://github.com/neovim/neovim/blob/8fadb80b3ad48bda8eaa0d7a1f2dfe4363b737da/runtime/autoload/provider/clipboard.vim#L36\r\n\r\nCan we combine the modules? Or at least convert clipboard.vim to lua, then osc52.lua could delegate to it for some of the \"base\" functionality, instead of duplicating it.",
            "created_at": "2025-06-09T15:35:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/34228#issuecomment-2956154774",
            "id": 2956154774,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
            "node_id": "IC_kwDOAPphoM6wM1eW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2956154774/reactions"
            },
            "updated_at": "2025-06-09T15:35:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2956154774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34228/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34228/commits",
    "created_at": "2025-05-29T14:42:55Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34228.diff",
    "draft": false,
    "head": {
        "label": "antoinemadec:fix/osc52_regtype",
        "ref": "fix/osc52_regtype",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/antoinemadec/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/antoinemadec/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/antoinemadec/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/antoinemadec/neovim/branches{/branch}",
            "clone_url": "https://github.com/antoinemadec/neovim.git",
            "collaborators_url": "https://api.github.com/repos/antoinemadec/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/antoinemadec/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/antoinemadec/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/antoinemadec/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/antoinemadec/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/antoinemadec/neovim/contributors",
            "created_at": "2020-07-03T20:07:48Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/antoinemadec/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/antoinemadec/neovim/downloads",
            "events_url": "https://api.github.com/repos/antoinemadec/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/antoinemadec/neovim/forks",
            "full_name": "antoinemadec/neovim",
            "git_commits_url": "https://api.github.com/repos/antoinemadec/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/antoinemadec/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/antoinemadec/neovim/git/tags{/sha}",
            "git_url": "git://github.com/antoinemadec/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/antoinemadec/neovim/hooks",
            "html_url": "https://github.com/antoinemadec/neovim",
            "id": 276979139,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/antoinemadec/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/antoinemadec/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/antoinemadec/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/antoinemadec/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/antoinemadec/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/antoinemadec/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/antoinemadec/neovim/merges",
            "milestones_url": "https://api.github.com/repos/antoinemadec/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNzY5NzkxMzk=",
            "notifications_url": "https://api.github.com/repos/antoinemadec/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
                "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
                "followers_url": "https://api.github.com/users/antoinemadec/followers",
                "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
                "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antoinemadec",
                "id": 10830594,
                "login": "antoinemadec",
                "node_id": "MDQ6VXNlcjEwODMwNTk0",
                "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
                "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
                "repos_url": "https://api.github.com/users/antoinemadec/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antoinemadec",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/antoinemadec/neovim/pulls{/number}",
            "pushed_at": "2025-06-09T05:36:13Z",
            "releases_url": "https://api.github.com/repos/antoinemadec/neovim/releases{/id}",
            "size": 315731,
            "ssh_url": "git@github.com:antoinemadec/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/antoinemadec/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/antoinemadec/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/antoinemadec/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/antoinemadec/neovim/subscription",
            "svn_url": "https://github.com/antoinemadec/neovim",
            "tags_url": "https://api.github.com/repos/antoinemadec/neovim/tags",
            "teams_url": "https://api.github.com/repos/antoinemadec/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/antoinemadec/neovim/git/trees{/sha}",
            "updated_at": "2025-05-29T14:00:38Z",
            "url": "https://api.github.com/repos/antoinemadec/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "91e8195c305b93ac03e06d215d551df15a699031",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
            "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
            "followers_url": "https://api.github.com/users/antoinemadec/followers",
            "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
            "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/antoinemadec",
            "id": 10830594,
            "login": "antoinemadec",
            "node_id": "MDQ6VXNlcjEwODMwNTk0",
            "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
            "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
            "repos_url": "https://api.github.com/users/antoinemadec/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/antoinemadec",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34228",
    "id": 2552402590,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34228",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "clipboard, paste",
            "id": 186192409,
            "name": "clipboard",
            "node_id": "MDU6TGFiZWwxODYxOTI0MDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/clipboard"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "waiting for reply from the author",
            "id": 248229439,
            "name": "needs:response",
            "node_id": "MDU6TGFiZWwyNDgyMjk0Mzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:response"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e5f56d38881899499ef399ca2886d80dbbb010a8",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6YIpKe",
    "number": 34228,
    "patch_url": "https://github.com/neovim/neovim/pull/34228.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34228/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/91e8195c305b93ac03e06d215d551df15a699031",
    "title": "fix(clipboard): handle register type in OSC 52",
    "updated_at": "2025-06-09T15:35:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34228",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10830594?v=4",
        "events_url": "https://api.github.com/users/antoinemadec/events{/privacy}",
        "followers_url": "https://api.github.com/users/antoinemadec/followers",
        "following_url": "https://api.github.com/users/antoinemadec/following{/other_user}",
        "gists_url": "https://api.github.com/users/antoinemadec/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/antoinemadec",
        "id": 10830594,
        "login": "antoinemadec",
        "node_id": "MDQ6VXNlcjEwODMwNTk0",
        "organizations_url": "https://api.github.com/users/antoinemadec/orgs",
        "received_events_url": "https://api.github.com/users/antoinemadec/received_events",
        "repos_url": "https://api.github.com/users/antoinemadec/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/antoinemadec/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/antoinemadec/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/antoinemadec",
        "user_view_type": "public"
    }
}