{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32082/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32082/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32082"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32082"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32082/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8543aa406c4ae88cc928372b2f8105005cdd0a80"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5841,
            "forks_count": 5841,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1854,
            "open_issues_count": 1854,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-04T02:07:35Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 307298,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85859,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-04T02:07:39Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85859,
            "watchers_count": 85859,
            "web_commit_signoff_required": false
        },
        "sha": "77be44563acb64a481d48f45c8dbbfca2d7db415",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This means that all work previously done by a `_parse()` iteration will be kept in future iterations. This prevents it from running indefinitely in some cases where the file is very large and there are 2+ injections.\r\n\r\nThis PR also allows `is_valid()` to accept a range, which narrows the area for which to check the tree for validity. This fixes #32075 with the downside that the `_valid` table can no longer be compressed to a `true` value. However, I would argue that this loss is very minimal because the compression happens almost never for large files (which is where it actually needs to happen)\r\n\r\nclose #32050 \r\nclose #32077",
    "closed_at": "2025-02-03T17:11:05Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1920962391"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920962391"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think the coroutine should also be recreated",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-18T05:02:04Z",
            "diff_hunk": "@@ -484,7 +497,8 @@ function LanguageTree:_async_parse(range, on_parse)\n       total_parse_time = 0",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1920962391",
            "id": 1920962391,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yf49X",
            "original_commit_id": "53bf2178d0158eedf3969a386a1892a4b9df555f",
            "original_line": 512,
            "original_position": 67,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2560289932,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920962391/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-18T05:02:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920962391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1933889913"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1933889913"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "asdf",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-29T13:33:27Z",
            "diff_hunk": "@@ -530,35 +553,46 @@ function LanguageTree:parse(range, on_parse)\n   if on_parse then\n     return self:_async_parse(range, on_parse)\n   end\n-  local trees, _ = self:_parse(range)\n+  local trees, _ = self:_parse(range, {})\n   return trees\n end\n \n --- @private\n --- @param range boolean|Range|nil\n---- @param timeout integer?\n+--- @param thread_state ParserThreadState\n --- @return table<integer, TSTree> trees\n --- @return boolean finished\n-function LanguageTree:_parse(range, timeout)\n-  if self:is_valid() then\n+function LanguageTree:_parse(range, thread_state)\n+  if self:is_valid(nil, type(range) == 'table' and range or nil) then\n     self:_log('valid')\n     return self._trees, true\n   end\n \n   local changes --- @type Range6[]?\n \n+  -- _G.asdf = (_G.asdf or 0) + 1",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1933889913",
            "id": 1933889913,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zRNF5",
            "original_commit_id": "dfd7bc2fa27e3b432a6259b3659661abaa58f2c9",
            "original_line": 573,
            "original_position": 233,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2581061512,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1933889913/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-29T14:17:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1933889913",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1935112791"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935112791"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n        if tree then\r\n          break\r\n        end\r\n        coroutine.yield(changes, no_regions_parsed, total_parse_time, false)\r\n```",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-30T07:16:22Z",
            "diff_hunk": "@@ -320,64 +350,42 @@ function LanguageTree:source()\n   return self._source\n end\n \n---- @param region Range6[]\n---- @param range? boolean|Range\n---- @return boolean\n-local function intercepts_region(region, range)\n-  if #region == 0 then\n-    return true\n-  end\n-\n-  if range == nil then\n-    return false\n-  end\n-\n-  if type(range) == 'boolean' then\n-    return range\n-  end\n-\n-  for _, r in ipairs(region) do\n-    if Range.intercepts(r, range) then\n-      return true\n-    end\n-  end\n-\n-  return false\n-end\n-\n --- @private\n --- @param range boolean|Range?\n---- @param timeout integer?\n+--- @param thread_state ParserThreadState\n --- @return Range6[] changes\n --- @return integer no_regions_parsed\n --- @return number total_parse_time\n --- @return boolean finished whether async parsing still needs time\n-function LanguageTree:_parse_regions(range, timeout)\n+function LanguageTree:_parse_regions(range, thread_state)\n   local changes = {}\n   local no_regions_parsed = 0\n   local total_parse_time = 0\n \n-  if type(self._valid) ~= 'table' then\n-    self._valid = {}\n-  end\n-\n   -- If there are no ranges, set to an empty list\n   -- so the included ranges in the parser are cleared.\n   for i, ranges in pairs(self:included_regions()) do\n     if\n-      not self._valid[i]\n+      not self._valid_regions[i]\n       and (\n         intercepts_region(ranges, range)\n         or (self._trees[i] and intercepts_region(self._trees[i]:included_ranges(false), range))\n       )\n     then\n       self._parser:set_included_ranges(ranges)\n-      self._parser:set_timeout(timeout and timeout * 1000 or 0) -- ms -> micros\n+      self._parser:set_timeout(thread_state.timeout and thread_state.timeout * 1000 or 0) -- ms -> micros\n+\n       local parse_time, tree, tree_changes =\n         tcall(self._parser.parse, self._parser, self._trees[i], self._source, true)\n+      while true do\n+        if not tree then\n+          coroutine.yield(changes, no_regions_parsed, total_parse_time, false)\n+        else\n+          break\n+        end",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1935112791",
            "id": 1935112791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zV3pX",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 384,
            "original_position": 180,
            "original_start_line": 381,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2583087957,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935112791/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-30T07:47:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935112791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1935113451"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935113451"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n      if is_finished then\r\n        break\r\n      end\r\n      coroutine.yield(self._trees, false)\r\n```",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-30T07:17:05Z",
            "diff_hunk": "@@ -558,12 +576,20 @@ function LanguageTree:_parse(range, timeout)\n   local total_parse_time = 0\n \n   -- At least 1 region is invalid\n-  if not self:is_valid(true) then\n-    local is_finished\n-    changes, no_regions_parsed, total_parse_time, is_finished = self:_parse_regions(range, timeout)\n-    timeout = timeout and math.max(timeout - total_parse_time, 0)\n-    if not is_finished then\n-      return self._trees, false\n+  if not self:is_valid(true, type(range) == 'table' and range or nil) then\n+    ---@type fun(self: vim.treesitter.LanguageTree, range: boolean|Range?, thread_state: ParserThreadState): Range6[], integer, number, boolean\n+    local parse_regions = coroutine.wrap(self._parse_regions)\n+    while true do\n+      local is_finished\n+      changes, no_regions_parsed, total_parse_time, is_finished =\n+        parse_regions(self, range, thread_state)\n+      thread_state.timeout = thread_state.timeout\n+        and math.max(thread_state.timeout - total_parse_time, 0)\n+      if not is_finished then\n+        coroutine.yield(self._trees, false)\n+      else\n+        break\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1935113451",
            "id": 1935113451,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zV3zr",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 594,
            "original_position": 273,
            "original_start_line": 588,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2583087957,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935113451/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-30T07:47:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935113451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1935132750"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935132750"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "What happens if `_valid_regions` has holes?",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-30T07:28:46Z",
            "diff_hunk": "@@ -389,7 +397,11 @@ function LanguageTree:_parse_regions(range, timeout)\n \n       total_parse_time = total_parse_time + parse_time\n       no_regions_parsed = no_regions_parsed + 1\n-      self._valid[i] = true\n+      self._valid_regions[i] = true\n+\n+      if #self._valid_regions == #self:included_regions() then\n+        self._is_entirely_valid = true\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1935132750",
            "id": 1935132750,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zV8hO",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 403,
            "original_position": 198,
            "original_start_line": 402,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2583087957,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935132750/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-30T07:47:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935132750",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1935147272"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935147272"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "~~Why does this need to be a table? If it should be a table, I think it should also include `ct`, because it's also a mutable state used in `step`.~~ Oh I get it.  But I think it's still a good idea to include `ct` in `thread_state`.",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-30T07:44:22Z",
            "diff_hunk": "@@ -480,7 +492,11 @@ function LanguageTree:_async_parse(range, on_parse)\n   local ct = buf.changedtick\n   local total_parse_time = 0\n   local redrawtime = vim.o.redrawtime\n-  local timeout = not vim.g._ts_force_sync_parsing and default_parse_timeout_ms or nil\n+\n+  local thread_state = {} ---@type ParserThreadState",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1935147272",
            "id": 1935147272,
            "line": 496,
            "node_id": "PRRC_kwDOAPphoM5zWAEI",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 496,
            "original_position": 208,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 219,
            "pull_request_review_id": 2583087957,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935147272/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-30T07:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935147272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1935999388"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935999388"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, good point. This wouldn't matter if `included_regions()` didn't have holes, but I forgot that it can; looks like a different solution is needed",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-30T17:25:59Z",
            "diff_hunk": "@@ -389,7 +397,11 @@ function LanguageTree:_parse_regions(range, timeout)\n \n       total_parse_time = total_parse_time + parse_time\n       no_regions_parsed = no_regions_parsed + 1\n-      self._valid[i] = true\n+      self._valid_regions[i] = true\n+\n+      if #self._valid_regions == #self:included_regions() then\n+        self._is_entirely_valid = true\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1935999388",
            "id": 1935999388,
            "in_reply_to_id": 1935132750,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zZQGc",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 403,
            "original_position": 198,
            "original_start_line": 402,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2584561241,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935999388/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-30T17:27:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1935999388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1936007973"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936007973"
                }
            },
            "author_association": "MEMBER",
            "body": "Just out of curiosity, why? It seems like `ct` is only needed at the step() level, similar to `total_parse_time`. Imo a valid addition to `thread_state` would be the injection query iterators, once that iteration is made asynchronous soon",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-30T17:32:32Z",
            "diff_hunk": "@@ -480,7 +492,11 @@ function LanguageTree:_async_parse(range, on_parse)\n   local ct = buf.changedtick\n   local total_parse_time = 0\n   local redrawtime = vim.o.redrawtime\n-  local timeout = not vim.g._ts_force_sync_parsing and default_parse_timeout_ms or nil\n+\n+  local thread_state = {} ---@type ParserThreadState",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1936007973",
            "id": 1936007973,
            "in_reply_to_id": 1935147272,
            "line": 496,
            "node_id": "PRRC_kwDOAPphoM5zZSMl",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 496,
            "original_position": 208,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 219,
            "pull_request_review_id": 2584575666,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936007973/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-30T18:05:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936007973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1936069644"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936069644"
                }
            },
            "author_association": "MEMBER",
            "body": "Let me know what you think of the new solution. I have opted to store the number of included regions during `set_included_regions()`, which is the only time when there can be no holes and thus the length is a true representation of the number of regions (to my understanding)",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-30T18:04:44Z",
            "diff_hunk": "@@ -389,7 +397,11 @@ function LanguageTree:_parse_regions(range, timeout)\n \n       total_parse_time = total_parse_time + parse_time\n       no_regions_parsed = no_regions_parsed + 1\n-      self._valid[i] = true\n+      self._valid_regions[i] = true\n+\n+      if #self._valid_regions == #self:included_regions() then\n+        self._is_entirely_valid = true\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1936069644",
            "id": 1936069644,
            "in_reply_to_id": 1935132750,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zZhQM",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 403,
            "original_position": 198,
            "original_start_line": 402,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2584674078,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936069644/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-30T18:04:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936069644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1936802372"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936802372"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I just thought it would look more organized if all the mutable thread states are collected into a single table (including `total_parse_time`, which I missed in the previous comment). But in terms of functionality there is no difference. Please feel free to disregard.\r\n\r\n",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-31T07:41:37Z",
            "diff_hunk": "@@ -480,7 +492,11 @@ function LanguageTree:_async_parse(range, on_parse)\n   local ct = buf.changedtick\n   local total_parse_time = 0\n   local redrawtime = vim.o.redrawtime\n-  local timeout = not vim.g._ts_force_sync_parsing and default_parse_timeout_ms or nil\n+\n+  local thread_state = {} ---@type ParserThreadState",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1936802372",
            "id": 1936802372,
            "in_reply_to_id": 1935147272,
            "line": 496,
            "node_id": "PRRC_kwDOAPphoM5zcUJE",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 496,
            "original_position": 208,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 219,
            "pull_request_review_id": 2585884663,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936802372/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-31T07:48:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936802372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1936808262"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936808262"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Overall idea looks good to me, but there are potentially missing updates for `_num_regions` at\r\n* https://github.com/neovim/neovim/blob/e8de4338be74a6817d21c9d707cebb2edb42233e/runtime/lua/vim/treesitter/languagetree.lua#L828\r\n* https://github.com/neovim/neovim/blob/e8de4338be74a6817d21c9d707cebb2edb42233e/runtime/lua/vim/treesitter/languagetree.lua#L1080",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-31T07:47:44Z",
            "diff_hunk": "@@ -389,7 +397,11 @@ function LanguageTree:_parse_regions(range, timeout)\n \n       total_parse_time = total_parse_time + parse_time\n       no_regions_parsed = no_regions_parsed + 1\n-      self._valid[i] = true\n+      self._valid_regions[i] = true\n+\n+      if #self._valid_regions == #self:included_regions() then\n+        self._is_entirely_valid = true\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1936808262",
            "id": 1936808262,
            "in_reply_to_id": 1935132750,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zcVlG",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 403,
            "original_position": 198,
            "original_start_line": 402,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2585884663,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936808262/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-31T07:48:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1936808262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1937574248"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1937574248"
                }
            },
            "author_association": "MEMBER",
            "body": "This was intentional, but let me know if there is a misunderstanding. These two locations aren't really changing the total amount of regions, rather just invalidating them (second example) or repopulating them, but with holes (first example). I believe the count calculation should stay only in `set_included_regions()` because this is the only place that actually sets the full list of regions, which is what the count should represent. If the number of regions will actually change after setting `_regions = nil`,  then that is also fine because it will be updated after another call to `set_included_regions()`",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-01-31T16:26:10Z",
            "diff_hunk": "@@ -389,7 +397,11 @@ function LanguageTree:_parse_regions(range, timeout)\n \n       total_parse_time = total_parse_time + parse_time\n       no_regions_parsed = no_regions_parsed + 1\n-      self._valid[i] = true\n+      self._valid_regions[i] = true\n+\n+      if #self._valid_regions == #self:included_regions() then\n+        self._is_entirely_valid = true\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1937574248",
            "id": 1937574248,
            "in_reply_to_id": 1935132750,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zfQlo",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 403,
            "original_position": 198,
            "original_start_line": 402,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2587229180,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1937574248/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-31T16:35:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1937574248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1938971361"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938971361"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "aha that makes sense",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-02-03T08:30:39Z",
            "diff_hunk": "@@ -389,7 +397,11 @@ function LanguageTree:_parse_regions(range, timeout)\n \n       total_parse_time = total_parse_time + parse_time\n       no_regions_parsed = no_regions_parsed + 1\n-      self._valid[i] = true\n+      self._valid_regions[i] = true\n+\n+      if #self._valid_regions == #self:included_regions() then\n+        self._is_entirely_valid = true\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1938971361",
            "id": 1938971361,
            "in_reply_to_id": 1935132750,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zklrh",
            "original_commit_id": "9c4b3345deba0b68e36c25f64f342c37ba404188",
            "original_line": 403,
            "original_position": 198,
            "original_start_line": 402,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 2589214706,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938971361/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-03T08:30:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938971361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32082#discussion_r1939066444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32082"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1939066444"
                }
            },
            "author_association": "MEMBER",
            "body": "Related idea in our internal `marktree`: https://github.com/neovim/neovim/blob/af069c5c05ad99623345071007ad23da51973601/src/nvim/marktree.c#L331-L332",
            "commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "created_at": "2025-02-03T09:35:31Z",
            "diff_hunk": "@@ -271,16 +279,46 @@ function LanguageTree:lang()\n   return self._lang\n end\n \n+--- @param region Range6[]\n+--- @param range? boolean|Range\n+--- @return boolean\n+local function intercepts_region(region, range)\n+  if #region == 0 then\n+    return true\n+  end\n+\n+  if range == nil then\n+    return false\n+  end\n+\n+  if type(range) == 'boolean' then\n+    return range\n+  end\n+\n+  for _, r in ipairs(region) do\n+    if Range.intercepts(r, range) then\n+      return true\n+    end\n+  end\n+\n+  return false\n+end\n+\n --- Returns whether this LanguageTree is valid, i.e., |LanguageTree:trees()| reflects the latest\n --- state of the source. If invalid, user should call |LanguageTree:parse()|.\n----@param exclude_children boolean|nil whether to ignore the validity of children (default `false`)\n+---@param exclude_children boolean? whether to ignore the validity of children (default `false`)\n+---@param range Range? range to check for validity\n ---@return boolean\n-function LanguageTree:is_valid(exclude_children)\n-  local valid = self._valid\n+function LanguageTree:is_valid(exclude_children, range)\n+  local valid_regions = self._valid_regions\n \n-  if type(valid) == 'table' then\n-    for i, _ in pairs(self:included_regions()) do\n-      if not valid[i] then\n+  if not self._is_entirely_valid then\n+    if not range then\n+      return false\n+    end\n+    -- TODO: Efficiently search for possibly intersecting regions using a binary search",
            "html_url": "https://github.com/neovim/neovim/pull/32082#discussion_r1939066444",
            "id": 1939066444,
            "line": 319,
            "node_id": "PRRC_kwDOAPphoM5zk85M",
            "original_commit_id": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
            "original_line": 319,
            "original_position": 96,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 96,
            "pull_request_review_id": 2589370170,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1939066444/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-03T09:35:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1939066444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "It still runs infinitely, but now it is because the async parse doesn't finish in 1 step, causes a redraw, which schedules another async parse which also doesn't finish and causes another redraw",
            "created_at": "2025-01-18T05:05:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2599534332",
            "id": 2599534332,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6a8b78",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599534332/reactions"
            },
            "updated_at": "2025-01-18T05:05:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599534332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Perfect. That will be addressed by #32077 (which needs to be amended a bit after this PR)",
            "created_at": "2025-01-18T05:21:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2599539246",
            "id": 2599539246,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6a8dIu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599539246/reactions"
            },
            "updated_at": "2025-01-18T05:21:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599539246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I ran into a type error on `self._valid[i] = true` in `LanguageTree:_parse_regions()`.\r\n\r\nThis happened when\r\n* treesitter highlighting and foldexpr is active,\r\n* and when I did lsp go to definition, which opens a big lua file.\r\n\r\nUnfortunately, I couldn't reproduce this with a simple setup, but here is brief description of what happened:\r\n\r\n1.  Call `parse(nil, function() ... end)`.\r\n    (In my case, this was invoked by the initial evaluation of `foldexpr`.)\r\n    At this point, `changedtick` was 1.\r\n    `parse` does not finish in the given time frame, so it yields, and schedules the next step.\r\n2.  (Without passing the control to user) `changedtick` is changed to 2, and async `parse` is invoked again (separate from the previous invocation).\r\n    (This time, it was invoked by treesitter highlighter's `on_win` callback.)\r\n    Again, the parsing does not finish in the given time frame, so it yields, and schedules the next step.\r\n3.  The scheduled step with `ct = 1` is resumed.\r\n    Since `changedtick` is now 2, it resets the parsing state, and restarts `parse(nil)` from the beginning.\r\n    In `_parse()`, this calls `self:is_valid(true)`,\r\n    At this point, `self._valid` was `{ true }`, so it is compressed to `true`.\r\n4.  The scheduled step with `ct = 2` is resumed.\r\n    In `_parse_regions()`, it attempts to set `self._valid[i] = true`, but `self._valid` is now a boolean, so it raises an error.\r\n\r\nIn summary, the problem is that async `parse` can be invoked multiple times with different `changedtick`, and the LanguageTree state is shared across these invocations.\r\nCurrently, TSHighlighter prevents this with `self.parsing` flag, but there still are cases where another party invokes async parse.\r\n",
            "created_at": "2025-01-26T08:53:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2614281172",
            "id": 2614281172,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6b0sPU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2614281172/reactions"
            },
            "updated_at": "2025-01-26T08:54:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2614281172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for the detailed explanation, I'll investigate this now. I am curious why the changedtick gets incremented even if no edit was made?",
            "created_at": "2025-01-26T17:42:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2614521942",
            "id": 2614521942,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6b1nBW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2614521942/reactions"
            },
            "updated_at": "2025-01-26T17:42:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2614521942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tomtomjhj I've pulled in #32077 and I think it fixes the issue here. Can you confirm that this is the case? The main fix is just the fact that `._valid` is no longer compressed to a single `true` value.",
            "created_at": "2025-01-27T01:39:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2614705671",
            "id": 2614705671,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6b2T4H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2614705671/reactions"
            },
            "updated_at": "2025-01-27T01:39:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2614705671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The main fix is just the fact that ._valid is no longer compressed to a single true value.\n\nI haven't followed the issue closely, but can you explain the rationale for this? If a tree is valid, there should be no need to keep scanning the valid table.",
            "created_at": "2025-01-28T06:55:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2618067789",
            "id": 2618067789,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6cDItN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618067789/reactions"
            },
            "updated_at": "2025-01-28T06:55:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618067789",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I have found that the table rarely gets compressed to `true` in situations where it is actually needed. This only happens when all regions have been parsed, which is only the case if the user has scrolled each region into the window viewport (if we are talking about the highlighter, of course the user can manually run `:parse(true)` which would parse everything). With the change of allowing `is_valid()` to accept a range, I think the table compressing adds too much complexity (and apparently some bugginess) to justify its gain, since it only really optimizes the case for when `is_valid()` is not given a range, which will not be the case in the highlighter. Also we never iterate `_valid` directly, only indexing it after iterating `included_regions`. ",
            "created_at": "2025-01-28T18:15:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2619737197",
            "id": 2619737197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6cJgRt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2619737197/reactions"
            },
            "updated_at": "2025-01-28T18:15:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2619737197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> have found that the table rarely gets compressed to true in situations where it is actually needed. This only happens when all regions have been parsed, which is only the case if the user has scrolled each region into the window viewport (if we are talking about the highlighter, of course the user can manually run :parse(true) which would parse everything).\n\nWell yes, the highlighter is just one application with its own requirements. Other plugins may need to parse the whole tree.\n\n> With the change of allowing is_valid() to accept a range, I think the table compressing adds too much complexity (and apparently some bugginess) to justify its gain, \n\nDid it really add that much complexity? From memory all the logic was contained in `is_valid()`, and it was only set to the boolean at the end, and checked at the start. This is a pretty common idiom to cache results of a function.\n\n> since it only really optimizes the case for when is_valid() is not given a range, which will not be the case in the highlighter. \n\nAgain, highlighter is just one application. We're not optimizing purely for that.\n\n> Also we never iterate _valid directly, only indexing it after iterating included_regions.\n\nSorry, I don't quite understand this.",
            "created_at": "2025-01-29T19:43:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2622683632",
            "id": 2622683632,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6cUvnw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622683632/reactions"
            },
            "updated_at": "2025-01-29T19:43:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622683632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Did it really add that much complexity? From memory all the logic was contained in `is_valid()`, and it was only set to the boolean at the end, and checked at the start. This is a pretty common idiom to cache results of a function.\r\n\r\nSure, in this case maybe I can keep that logic there and then only compress the value in `is_valid()` when no range parameter is present. In this case, do you have another idea of how to solve the issue from above? Maybe return early from a `parse_regions()` iteration if `_valid` has become `true`\r\n\r\n> > Also we never iterate _valid directly, only indexing it after iterating included_regions.\r\n> \r\n> Sorry, I don't quite understand this.\r\n\r\nBasically, it is never the case that we iterate over the values in `_valid` (when it is a table). We always only iterate over the included regions, at that point checking if a corresponding entry exists in `_valid`. I just mentioned that to note that having a large `_valid` table doesn't really hurt performance too much on it's own, although on the other hand it means that there are many included regions, meaning iterating over those can be slow. But the point is moot if we just keep the compression logic",
            "created_at": "2025-01-29T19:50:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2622697945",
            "id": 2622697945,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6cUzHZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622697945/reactions"
            },
            "updated_at": "2025-01-29T19:50:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622697945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another idea: move `_valid` to a `_valid_regions` member variable, and keep another `.valid` variable as a simple boolean, only set to true when all regions are valid (akin to compressing the original `_valid`), and reset to `false` as needed in `iter_regions`",
            "created_at": "2025-01-29T19:52:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2622700793",
            "id": 2622700793,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6cUzz5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622700793/reactions"
            },
            "updated_at": "2025-01-29T19:52:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2622700793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Some changes to note:\r\n\r\n- Instead of compressing `_valid` to `true`, we now have `_is_entirely_valid` to show that the tree is wholly valid\r\n- `_parse_regions()` now sets `_is_entirely_valid` to `true` when it has parsed the last invalid region\r\n- `_valid` is now `_valid_regions` which is always a table; more specifically, a set of valid regions\r\n- Unlike `_valid`, this table can only hold `true` values. `false` values are instead set to `nil`. This fixes a bug I discovered that existed before async parsing, in which `set_included_regions` would incorrectly think that all regions were valid because the size of `_valid` was equal to the number of included regions (https://github.com/neovim/neovim/blob/35c5e231078365033524b0aa2166118a1b2ef600/runtime/lua/vim/treesitter/languagetree.lua#L755). This was previously not correct because `false` values would also contribute to the count. This has been fixed, which is also what allows `_parse_regions()` to update the validity state upon parsing, simplifying the logic in `is_valid()` (and removing the side effects in `is_valid()`)",
            "created_at": "2025-01-30T03:09:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2623420760",
            "id": 2623420760,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6cXjlY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2623420760/reactions"
            },
            "updated_at": "2025-01-30T03:09:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2623420760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But `_iter_regions` checks `_valid[i]`. If `false`, then `all_valid = false`. So that problem does not happen.\r\n\r\nYou're right, I misread that part of the code :+1: ",
            "created_at": "2025-01-30T18:34:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/32082#issuecomment-2625278197",
            "id": 2625278197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
            "node_id": "IC_kwDOAPphoM6cepD1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625278197/reactions"
            },
            "updated_at": "2025-01-30T18:34:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2625278197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32082/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32082/commits",
    "created_at": "2025-01-17T22:37:23Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32082.diff",
    "draft": false,
    "head": {
        "label": "ribru17:langtree_coroutine",
        "ref": "langtree_coroutine",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-02-03T22:52:03Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 299447,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-02-03T17:56:13Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8543aa406c4ae88cc928372b2f8105005cdd0a80",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32082",
    "id": 2285164815,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32082",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "eacd662ccb755a8663a2e9e3658f8d600931b26e",
    "merged_at": "2025-02-03T17:11:04Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6INNkP",
    "number": 32082,
    "patch_url": "https://github.com/neovim/neovim/pull/32082.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32082/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8543aa406c4ae88cc928372b2f8105005cdd0a80",
    "title": "refactor(treesitter): use coroutines for resuming _parse() logic",
    "updated_at": "2025-02-03T17:11:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32082",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}