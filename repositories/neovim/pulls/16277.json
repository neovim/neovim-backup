{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/16277/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16277/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/16277"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/16277"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16277/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16277"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d324dec9dc75905c314b7e1f55a16cf6955271f1"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6150,
            "forks_count": 6150,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1963,
            "open_issues_count": 1963,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-30T23:58:06Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 330464,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90708,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-01T02:27:30Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90708,
            "watchers_count": 90708,
            "web_commit_signoff_required": false
        },
        "sha": "afbf89dc0120b1db5782a0bf807dc7c8db70ccf6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Closes #11867\r\n\r\nThis PR is an optimization which fixes the issue [I have mentioned in the #neovim-dev room](https://matrix.to/#/!ixkiMdeKnoXIanEVeZ:matrix.org/$Ob0N8Sy6MHBu9rs8qPOUa7ZnbtsrcrZGLNBsRfFP7T4?via=matrix.org&via=smittie.de&via=tchncs.de). In short: some plugins, most notably [vim-commentary](github.com/tpope/vim-commentary) and [tcomment.vim](https://github.com/tomtom/tcomment_vim), generate a lot of `on_lines` events when applied to a long range. In my particular case, if I comment out a range with either of the plugins I have mentioned, they both generate one `on_lines` per each commented line. The issue here is that `changetracking.prepare` requests the entire buffer contents with `nvim_buf_get_lines(bufnr, 0, -1, true)`, which, while in itself is pretty fast, adds up quickly on hundreds of `on_lines` events.\r\n\r\nI fixed the problem by only requesting the changed parts of the buffer since, obviously, we do get the change ranges. The unchanged lines are taken from the table with previous lines. A function such as [`Array#splice`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice) from JavaScript would've helped here for modifying the lines table in-place, but alas, the best we get in Lua is `table.insert`/`table.remove`, which can result in easily result in hidden execution time complexity (case in point: hrsh7th/cmp-buffer#18), and a proper implementation of this `splice` function can get pretty long (see the cmp-buffer PR, or an ECMAScript-compliant implementation [here](https://github.com/TypeScriptToLua/TypeScriptToLua/blob/v1.1.1/src/lualib/ArraySplice.ts)), so I decided against in-place modification.\r\n\r\nNot all is lost, however, as I have found that double-buffering the lines tables also helps. This improves performance by reducing the load on the garbage collector because very long tables are not allocated on every `on_lines`. The way it is done is described in a comment in the code, but basically, when the `incremental_changes` function is done with `curr_lines` and `prev_lines`, `curr_lines` is saved as it normally would be, but `prev_lines` is cleared and also saved because clearing the contents of the table doesn't actually de-allocate the internal storage of the table, the keys with `nil` values are deleted only on the next garbage collection cycle. As such, a table with a fully-allocated internal storage is kept, which will be re-used on the next `on_lines` event as `curr_lines`.\r\n\r\nDoes the logic in the loops which construct `curr_lines` need commenting? Perhaps this code should go into a separate function, or a method on `changetracking`?",
    "closed_at": "2022-01-17T16:20:06Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16277#discussion_r746737732"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/746737732"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Can't we just do ipairs here for readability? ",
            "commit_id": "d324dec9dc75905c314b7e1f55a16cf6955271f1",
            "created_at": "2021-11-10T16:02:24Z",
            "diff_hunk": "@@ -358,16 +362,47 @@ do\n     end\n   end\n \n-  function changetracking.prepare(bufnr, firstline, lastline, new_lastline, changedtick)\n+  function changetracking.prepare(bufnr, firstline, old_lastline, new_lastline, changedtick)\n     local incremental_changes = function(client)\n-      local cached_buffers = state_by_client[client.id].buffers\n-      local curr_lines = nvim_buf_get_lines(bufnr, 0, -1, true)\n-      local line_ending = format_line_ending[vim.api.nvim_buf_get_option(0, 'fileformat')]\n+      local state = state_by_client[client.id]\n+      local prev_lines = state.buffers[bufnr]\n+      -- See the comment below for why the curr_lines table is pulled out of buffers_tmp\n+      -- instead of making a brand new table.\n+      local curr_lines = state.buffers_tmp[bufnr]\n+\n+      local changed_lines = nvim_buf_get_lines(bufnr, firstline, new_lastline, true)\n+      for i = 1, firstline do\n+        curr_lines[i] = prev_lines[i]\n+      end\n+      for i = firstline + 1, new_lastline do\n+        curr_lines[i] = changed_lines[i - firstline]\n+      end\n+      for i = old_lastline + 1, #prev_lines do\n+        curr_lines[i - old_lastline + new_lastline] = prev_lines[i]\n+      end\n+      if tbl_isempty(curr_lines) then\n+        -- Can happen when deleting the entire contents of a buffer, see https://github.com/neovim/neovim/issues/16259.\n+        curr_lines[1] = ''\n+      end\n+\n+      local line_ending = buf_get_line_ending(bufnr)\n       local incremental_change = sync.compute_diff(\n-        cached_buffers[bufnr], curr_lines, firstline, lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending or '\\n')\n-      cached_buffers[bufnr] = curr_lines\n+        prev_lines, curr_lines, firstline, old_lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending)\n+\n+      -- Double-buffering of lines tables is used to reduce the load on the garbage collector.\n+      -- At this point the prev_lines table is useless, but its internal storage has already been allocated,\n+      -- so let's keep it around for the next didChange event, in which it will become the next\n+      -- curr_lines table. Note that setting elements to nil doesn't actually deallocate slots in the\n+      -- internal storage - it merely marks them as free, for the GC to deallocate them.\n+      for i = #prev_lines, 1, -1 do",
            "html_url": "https://github.com/neovim/neovim/pull/16277#discussion_r746737732",
            "id": 746737732,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4sglBE",
            "original_commit_id": "45b105b9bd5a713af455229ac970d9703525eecd",
            "original_line": 392,
            "original_position": 107,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 802804411,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/746737732/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-11-10T16:02:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/746737732",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16277#discussion_r748022908"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/748022908"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Using a counter is faster than ipairs on PUC Lua 5.1 ([source](https://gitspartv.github.io/LuaJIT-Benchmarks/#test10)), and I imagine this loop would be quite the hot one in files with lots of lines. Yeah, this is microopt, but if you mind I can change to ipairs.",
            "commit_id": "d324dec9dc75905c314b7e1f55a16cf6955271f1",
            "created_at": "2021-11-12T07:10:03Z",
            "diff_hunk": "@@ -358,16 +362,47 @@ do\n     end\n   end\n \n-  function changetracking.prepare(bufnr, firstline, lastline, new_lastline, changedtick)\n+  function changetracking.prepare(bufnr, firstline, old_lastline, new_lastline, changedtick)\n     local incremental_changes = function(client)\n-      local cached_buffers = state_by_client[client.id].buffers\n-      local curr_lines = nvim_buf_get_lines(bufnr, 0, -1, true)\n-      local line_ending = format_line_ending[vim.api.nvim_buf_get_option(0, 'fileformat')]\n+      local state = state_by_client[client.id]\n+      local prev_lines = state.buffers[bufnr]\n+      -- See the comment below for why the curr_lines table is pulled out of buffers_tmp\n+      -- instead of making a brand new table.\n+      local curr_lines = state.buffers_tmp[bufnr]\n+\n+      local changed_lines = nvim_buf_get_lines(bufnr, firstline, new_lastline, true)\n+      for i = 1, firstline do\n+        curr_lines[i] = prev_lines[i]\n+      end\n+      for i = firstline + 1, new_lastline do\n+        curr_lines[i] = changed_lines[i - firstline]\n+      end\n+      for i = old_lastline + 1, #prev_lines do\n+        curr_lines[i - old_lastline + new_lastline] = prev_lines[i]\n+      end\n+      if tbl_isempty(curr_lines) then\n+        -- Can happen when deleting the entire contents of a buffer, see https://github.com/neovim/neovim/issues/16259.\n+        curr_lines[1] = ''\n+      end\n+\n+      local line_ending = buf_get_line_ending(bufnr)\n       local incremental_change = sync.compute_diff(\n-        cached_buffers[bufnr], curr_lines, firstline, lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending or '\\n')\n-      cached_buffers[bufnr] = curr_lines\n+        prev_lines, curr_lines, firstline, old_lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending)\n+\n+      -- Double-buffering of lines tables is used to reduce the load on the garbage collector.\n+      -- At this point the prev_lines table is useless, but its internal storage has already been allocated,\n+      -- so let's keep it around for the next didChange event, in which it will become the next\n+      -- curr_lines table. Note that setting elements to nil doesn't actually deallocate slots in the\n+      -- internal storage - it merely marks them as free, for the GC to deallocate them.\n+      for i = #prev_lines, 1, -1 do",
            "html_url": "https://github.com/neovim/neovim/pull/16277#discussion_r748022908",
            "id": 748022908,
            "in_reply_to_id": 746737732,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4slex8",
            "original_commit_id": "45b105b9bd5a713af455229ac970d9703525eecd",
            "original_line": 392,
            "original_position": 107,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 804469568,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/748022908/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-11-12T07:10:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/748022908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16277#discussion_r749857288"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/749857288"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure if mentioned anywhere, but if you can measure this for the large slowdowns and it provides a meaningful difference, then you can keep. But otherwise, I think it obscures what is happening. I find it unlikely it will provide any meaningful difference (but it's possible I suppose)",
            "commit_id": "d324dec9dc75905c314b7e1f55a16cf6955271f1",
            "created_at": "2021-11-16T02:43:12Z",
            "diff_hunk": "@@ -358,16 +362,47 @@ do\n     end\n   end\n \n-  function changetracking.prepare(bufnr, firstline, lastline, new_lastline, changedtick)\n+  function changetracking.prepare(bufnr, firstline, old_lastline, new_lastline, changedtick)\n     local incremental_changes = function(client)\n-      local cached_buffers = state_by_client[client.id].buffers\n-      local curr_lines = nvim_buf_get_lines(bufnr, 0, -1, true)\n-      local line_ending = format_line_ending[vim.api.nvim_buf_get_option(0, 'fileformat')]\n+      local state = state_by_client[client.id]\n+      local prev_lines = state.buffers[bufnr]\n+      -- See the comment below for why the curr_lines table is pulled out of buffers_tmp\n+      -- instead of making a brand new table.\n+      local curr_lines = state.buffers_tmp[bufnr]\n+\n+      local changed_lines = nvim_buf_get_lines(bufnr, firstline, new_lastline, true)\n+      for i = 1, firstline do\n+        curr_lines[i] = prev_lines[i]\n+      end\n+      for i = firstline + 1, new_lastline do\n+        curr_lines[i] = changed_lines[i - firstline]\n+      end\n+      for i = old_lastline + 1, #prev_lines do\n+        curr_lines[i - old_lastline + new_lastline] = prev_lines[i]\n+      end\n+      if tbl_isempty(curr_lines) then\n+        -- Can happen when deleting the entire contents of a buffer, see https://github.com/neovim/neovim/issues/16259.\n+        curr_lines[1] = ''\n+      end\n+\n+      local line_ending = buf_get_line_ending(bufnr)\n       local incremental_change = sync.compute_diff(\n-        cached_buffers[bufnr], curr_lines, firstline, lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending or '\\n')\n-      cached_buffers[bufnr] = curr_lines\n+        prev_lines, curr_lines, firstline, old_lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending)\n+\n+      -- Double-buffering of lines tables is used to reduce the load on the garbage collector.\n+      -- At this point the prev_lines table is useless, but its internal storage has already been allocated,\n+      -- so let's keep it around for the next didChange event, in which it will become the next\n+      -- curr_lines table. Note that setting elements to nil doesn't actually deallocate slots in the\n+      -- internal storage - it merely marks them as free, for the GC to deallocate them.\n+      for i = #prev_lines, 1, -1 do",
            "html_url": "https://github.com/neovim/neovim/pull/16277#discussion_r749857288",
            "id": 749857288,
            "in_reply_to_id": 746737732,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4sseoI",
            "original_commit_id": "45b105b9bd5a713af455229ac970d9703525eecd",
            "original_line": 392,
            "original_position": 107,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 806760202,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/749857288/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-11-16T02:43:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/749857288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16277#discussion_r753677226"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/753677226"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Alright, let's compare the table clearing loop using ipairs vs the current implementation with a counter.\r\n\r\n```diff\r\ndiff --git a/runtime/lua/vim/lsp.lua b/runtime/lua/vim/lsp.lua\r\nindex 9eaa41e75..5d6bf6eb5 100644\r\n--- a/runtime/lua/vim/lsp.lua\r\n+++ b/runtime/lua/vim/lsp.lua\r\n@@ -389,7 +389,7 @@ do\r\n       -- so let's keep it around for the next didChange event, in which it will become the next\r\n       -- curr_lines table. Note that setting elements to nil doesn't actually deallocate slots in the\r\n       -- internal storage - it merely marks them as free, for the GC to deallocate them.\r\n-      for i = #prev_lines, 1, -1 do\r\n+      for i in ipairs(prev_lines) do\r\n         prev_lines[i] = nil\r\n       end\r\n       state.buffers[bufnr] = curr_lines\r\n```\r\n\r\n<details><summary>Benchmarking method</summary>\r\n\r\nThe benchmark is almost the same as I have described in the commit message, with the exception that I increased the number of runs to 40 and swapped vim-commentary for `call setline(1, getline(1, '$'))` - as I had explained [here](https://github.com/neovim/neovim/pull/16277#issuecomment-968105798), it exhibits the exact same problem, but removes the Vimscript interpreter from the equation, thus I need to wait less for the benchmark to complete.\r\n\r\n```vim\r\nset rtp+=~/.config/nvim/plugged/nvim-lspconfig\r\nlua require('lspconfig')['ccls'].setup({})\r\nfunction! Benchmark(tries) abort\r\n  let results_comment = []\r\n  let results_undo = []\r\n  for i in range(a:tries)\r\n    echo printf('run %d', i+1)\r\n    let begin = reltime()\r\n    call setline(1, getline(1, '$'))\r\n    call add(results_comment, reltimefloat(reltime(begin)))\r\n    let begin = reltime()\r\n    silent! undo\r\n    call add(results_undo, reltimefloat(reltime(begin)))\r\n    redraw\r\n  endfor\r\n  let avg_comment = 0.0\r\n  let avg_undo = 0.0\r\n  for i in range(a:tries)\r\n    echomsg printf('run %3d: setline=%fs undo=%fs', i+1, results_comment[i], results_undo[i])\r\n    let avg_comment += results_comment[i]\r\n    let avg_undo += results_undo[i]\r\n  endfor\r\n  echomsg printf('average: setline=%fs undo=%fs', avg_comment / a:tries, avg_undo / a:tries)\r\nendfunction\r\ncommand! -bar Benchmark call Benchmark(40)\r\n```\r\n\r\nI have performed tests on both Lua5.1 and LuaJIT. I built nvim with LuaJIT as explained in the commit (`make CMAKE_BUILD_TYPE=Release`), and with Lua5.1 like this:\r\n\r\n```sh\r\nmake CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS='-DPREFER_LUA=ON' DEPS_CMAKE_FLAGS='-DUSE_BUNDLED_LUA=ON -DUSE_BUNDLED_LUAJIT=OFF'\r\n```\r\n\r\nThen opened the file `src/nvim/lua/executor.c` in the nvim source tree and ran `:Benchmark`.\r\n\r\n</details>\r\n\r\nHere are the results:\r\n\r\n| Lua version | table clearing loop | setline time | undo time |\r\n| ----------- | ------------------- | ------------ | --------- |\r\n| Lua5.1      | with ipairs         | 0.276445s    | 0.270881s |\r\n| Lua5.1      | with a counter      | 0.190557s    | 0.185333s |\r\n| LuaJIT      | with ipairs         | 0.047433s    | 0.042246s |\r\n| LuaJIT      | with a counter      | 0.047436s    | 0.042917s |\r\n\r\nNotice that on LuaJIT the difference is next to none, as the microbenchmark I've linked in a comment above suggests.",
            "commit_id": "d324dec9dc75905c314b7e1f55a16cf6955271f1",
            "created_at": "2021-11-20T13:50:59Z",
            "diff_hunk": "@@ -358,16 +362,47 @@ do\n     end\n   end\n \n-  function changetracking.prepare(bufnr, firstline, lastline, new_lastline, changedtick)\n+  function changetracking.prepare(bufnr, firstline, old_lastline, new_lastline, changedtick)\n     local incremental_changes = function(client)\n-      local cached_buffers = state_by_client[client.id].buffers\n-      local curr_lines = nvim_buf_get_lines(bufnr, 0, -1, true)\n-      local line_ending = format_line_ending[vim.api.nvim_buf_get_option(0, 'fileformat')]\n+      local state = state_by_client[client.id]\n+      local prev_lines = state.buffers[bufnr]\n+      -- See the comment below for why the curr_lines table is pulled out of buffers_tmp\n+      -- instead of making a brand new table.\n+      local curr_lines = state.buffers_tmp[bufnr]\n+\n+      local changed_lines = nvim_buf_get_lines(bufnr, firstline, new_lastline, true)\n+      for i = 1, firstline do\n+        curr_lines[i] = prev_lines[i]\n+      end\n+      for i = firstline + 1, new_lastline do\n+        curr_lines[i] = changed_lines[i - firstline]\n+      end\n+      for i = old_lastline + 1, #prev_lines do\n+        curr_lines[i - old_lastline + new_lastline] = prev_lines[i]\n+      end\n+      if tbl_isempty(curr_lines) then\n+        -- Can happen when deleting the entire contents of a buffer, see https://github.com/neovim/neovim/issues/16259.\n+        curr_lines[1] = ''\n+      end\n+\n+      local line_ending = buf_get_line_ending(bufnr)\n       local incremental_change = sync.compute_diff(\n-        cached_buffers[bufnr], curr_lines, firstline, lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending or '\\n')\n-      cached_buffers[bufnr] = curr_lines\n+        prev_lines, curr_lines, firstline, old_lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending)\n+\n+      -- Double-buffering of lines tables is used to reduce the load on the garbage collector.\n+      -- At this point the prev_lines table is useless, but its internal storage has already been allocated,\n+      -- so let's keep it around for the next didChange event, in which it will become the next\n+      -- curr_lines table. Note that setting elements to nil doesn't actually deallocate slots in the\n+      -- internal storage - it merely marks them as free, for the GC to deallocate them.\n+      for i = #prev_lines, 1, -1 do",
            "html_url": "https://github.com/neovim/neovim/pull/16277#discussion_r753677226",
            "id": 753677226,
            "in_reply_to_id": 746737732,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4s7DOq",
            "original_commit_id": "45b105b9bd5a713af455229ac970d9703525eecd",
            "original_line": 392,
            "original_position": 107,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 811831442,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/753677226/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-11-20T13:50:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/753677226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16277#discussion_r753828058"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/753828058"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I would just use ipairs then",
            "commit_id": "d324dec9dc75905c314b7e1f55a16cf6955271f1",
            "created_at": "2021-11-21T17:02:55Z",
            "diff_hunk": "@@ -358,16 +362,47 @@ do\n     end\n   end\n \n-  function changetracking.prepare(bufnr, firstline, lastline, new_lastline, changedtick)\n+  function changetracking.prepare(bufnr, firstline, old_lastline, new_lastline, changedtick)\n     local incremental_changes = function(client)\n-      local cached_buffers = state_by_client[client.id].buffers\n-      local curr_lines = nvim_buf_get_lines(bufnr, 0, -1, true)\n-      local line_ending = format_line_ending[vim.api.nvim_buf_get_option(0, 'fileformat')]\n+      local state = state_by_client[client.id]\n+      local prev_lines = state.buffers[bufnr]\n+      -- See the comment below for why the curr_lines table is pulled out of buffers_tmp\n+      -- instead of making a brand new table.\n+      local curr_lines = state.buffers_tmp[bufnr]\n+\n+      local changed_lines = nvim_buf_get_lines(bufnr, firstline, new_lastline, true)\n+      for i = 1, firstline do\n+        curr_lines[i] = prev_lines[i]\n+      end\n+      for i = firstline + 1, new_lastline do\n+        curr_lines[i] = changed_lines[i - firstline]\n+      end\n+      for i = old_lastline + 1, #prev_lines do\n+        curr_lines[i - old_lastline + new_lastline] = prev_lines[i]\n+      end\n+      if tbl_isempty(curr_lines) then\n+        -- Can happen when deleting the entire contents of a buffer, see https://github.com/neovim/neovim/issues/16259.\n+        curr_lines[1] = ''\n+      end\n+\n+      local line_ending = buf_get_line_ending(bufnr)\n       local incremental_change = sync.compute_diff(\n-        cached_buffers[bufnr], curr_lines, firstline, lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending or '\\n')\n-      cached_buffers[bufnr] = curr_lines\n+        prev_lines, curr_lines, firstline, old_lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending)\n+\n+      -- Double-buffering of lines tables is used to reduce the load on the garbage collector.\n+      -- At this point the prev_lines table is useless, but its internal storage has already been allocated,\n+      -- so let's keep it around for the next didChange event, in which it will become the next\n+      -- curr_lines table. Note that setting elements to nil doesn't actually deallocate slots in the\n+      -- internal storage - it merely marks them as free, for the GC to deallocate them.\n+      for i = #prev_lines, 1, -1 do",
            "html_url": "https://github.com/neovim/neovim/pull/16277#discussion_r753828058",
            "id": 753828058,
            "in_reply_to_id": 746737732,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4s7oDa",
            "original_commit_id": "45b105b9bd5a713af455229ac970d9703525eecd",
            "original_line": 392,
            "original_position": 107,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 811943897,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/753828058/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-11-21T17:02:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/753828058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16277#discussion_r754112855"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/754112855"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The conclusion we have reached in the Matrix room is that if you are using Lua5.1 builds you are a priori not interested in performance. I have also measured the difference on LuaJIT 2.0.5 (as opposed to the beta version Nvim downloads) to be ~2% faster with a counter, which is negligible IMO. (Then again I am surprised that this loop is such a big deal.)",
            "commit_id": "d324dec9dc75905c314b7e1f55a16cf6955271f1",
            "created_at": "2021-11-22T09:58:58Z",
            "diff_hunk": "@@ -358,16 +362,47 @@ do\n     end\n   end\n \n-  function changetracking.prepare(bufnr, firstline, lastline, new_lastline, changedtick)\n+  function changetracking.prepare(bufnr, firstline, old_lastline, new_lastline, changedtick)\n     local incremental_changes = function(client)\n-      local cached_buffers = state_by_client[client.id].buffers\n-      local curr_lines = nvim_buf_get_lines(bufnr, 0, -1, true)\n-      local line_ending = format_line_ending[vim.api.nvim_buf_get_option(0, 'fileformat')]\n+      local state = state_by_client[client.id]\n+      local prev_lines = state.buffers[bufnr]\n+      -- See the comment below for why the curr_lines table is pulled out of buffers_tmp\n+      -- instead of making a brand new table.\n+      local curr_lines = state.buffers_tmp[bufnr]\n+\n+      local changed_lines = nvim_buf_get_lines(bufnr, firstline, new_lastline, true)\n+      for i = 1, firstline do\n+        curr_lines[i] = prev_lines[i]\n+      end\n+      for i = firstline + 1, new_lastline do\n+        curr_lines[i] = changed_lines[i - firstline]\n+      end\n+      for i = old_lastline + 1, #prev_lines do\n+        curr_lines[i - old_lastline + new_lastline] = prev_lines[i]\n+      end\n+      if tbl_isempty(curr_lines) then\n+        -- Can happen when deleting the entire contents of a buffer, see https://github.com/neovim/neovim/issues/16259.\n+        curr_lines[1] = ''\n+      end\n+\n+      local line_ending = buf_get_line_ending(bufnr)\n       local incremental_change = sync.compute_diff(\n-        cached_buffers[bufnr], curr_lines, firstline, lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending or '\\n')\n-      cached_buffers[bufnr] = curr_lines\n+        prev_lines, curr_lines, firstline, old_lastline, new_lastline, client.offset_encoding or 'utf-16', line_ending)\n+\n+      -- Double-buffering of lines tables is used to reduce the load on the garbage collector.\n+      -- At this point the prev_lines table is useless, but its internal storage has already been allocated,\n+      -- so let's keep it around for the next didChange event, in which it will become the next\n+      -- curr_lines table. Note that setting elements to nil doesn't actually deallocate slots in the\n+      -- internal storage - it merely marks them as free, for the GC to deallocate them.\n+      for i = #prev_lines, 1, -1 do",
            "html_url": "https://github.com/neovim/neovim/pull/16277#discussion_r754112855",
            "id": 754112855,
            "in_reply_to_id": 746737732,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4s8tlX",
            "original_commit_id": "45b105b9bd5a713af455229ac970d9703525eecd",
            "original_line": 392,
            "original_position": 107,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 812301134,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/754112855/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-11-22T09:58:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/754112855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Perhaps this code should go into a separate function, or a method on changetracking?\r\n\r\nWe can elevate this into utils",
            "created_at": "2021-11-10T16:13:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-965499436",
            "id": 965499436,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45jFos",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965499436/reactions"
            },
            "updated_at": "2021-11-10T16:13:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965499436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> * include the benchmark for pre/post 'nil-ing' the prev_lines table\r\n> \r\n> * include the benchmark for incrementally update curr_lines\r\n\r\nDone",
            "created_at": "2021-11-13T16:23:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968094136",
            "id": 968094136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45s_G4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968094136/reactions"
            },
            "updated_at": "2021-11-13T16:23:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968094136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This code measures the time taken to comment-out contents of the whole\r\nbuffer and then undo the change. tpope's vim-commentary is a pretty good\r\ncandidate for this test because it is very popular and suffers from the\r\nproblem of generating a text change for every commented-out line. All\r\ntext changes will be recorded within a single undo point, and so both\r\nthe comment-out and undo commands will emit a ton of on_lines events.\r\nGranted, most likely the need for commenting out thousands of lines\r\ndoesn't occur every day, but I believe this is a good substitute for an\r\naction generating a lot of text editing events.\r\n\r\n> I will be performing tests on files in the neovim repository at commit\r\n2ecf0a4 and neovim itself built with\r\nCMAKE_BUILD_TYPE=Release. As the execution time improvements seem to be\r\nexponential, I am also going to include results for files with line\r\ncount of different orders of magnitude. The baseline is the\r\naforementioned commit 2ecf0a4, the\r\nvalue after comment= is the AVERAGE number of seconds it took to\r\ncomment-out the entire file, and after undo= tells how long, on AVERAGE,\r\nundoing that took.\r\n\r\n\r\nIs a bit colloquial (first person) and long, can you make it a bit more dry/short with bullet points? Anyways otherwise LGTM, thanks for the changes. Tagging mathias for review as a formality",
            "created_at": "2021-11-13T16:26:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968095007",
            "id": 968095007,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45s_Uf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968095007/reactions"
            },
            "updated_at": "2021-11-13T16:27:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968095007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Also you didn't end up including\r\n\r\n> * handle buffer line endings in buf_get_full_text, continuing the work in neovim#16252\r\n\r\nAFAIK",
            "created_at": "2021-11-13T16:28:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968095167",
            "id": 968095167,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45s_W_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968095167/reactions"
            },
            "updated_at": "2021-11-13T16:28:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968095167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Also you didn't end up including\r\n\r\n~~I moved it to #16286, remember? Should I move that fix back here?~~\r\n\r\nAnyway, I've decided that it fits here better",
            "created_at": "2021-11-13T16:36:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968096378",
            "id": 968096378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45s_p6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968096378/reactions"
            },
            "updated_at": "2021-11-13T16:40:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968096378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Anyway, I've decided that it fits here better\r\n\r\nNo, I meant that your commit message is not accurate :) ",
            "created_at": "2021-11-13T16:41:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968097019",
            "id": 968097019,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45s_z7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968097019/reactions"
            },
            "updated_at": "2021-11-13T16:41:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968097019",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> No, I meant that your commit message is not accurate :)\r\n\r\nCrap. Well, I have already moved the fix back. Do you mind it?",
            "created_at": "2021-11-13T16:47:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968097893",
            "id": 968097893,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tABl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968097893/reactions"
            },
            "updated_at": "2021-11-13T16:47:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968097893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Can you just unmove it back? It doesn't make sense to group the commits this way",
            "created_at": "2021-11-13T16:48:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968097978",
            "id": 968097978,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tAC6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968097978/reactions"
            },
            "updated_at": "2021-11-13T16:48:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968097978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> check to what extent this mitigates #11867 and #14205\r\n\r\nGonna try to check this",
            "created_at": "2021-11-13T16:58:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968099879",
            "id": 968099879,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tAgn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968099879/reactions"
            },
            "updated_at": "2021-11-13T16:58:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968099879",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I didn't notice a difference with my repro ",
            "created_at": "2021-11-13T16:59:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968099948",
            "id": 968099948,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tAhs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968099948/reactions"
            },
            "updated_at": "2021-11-13T16:59:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968099948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "```\r\nThe following code measures the time required to perform a buffer edit to\r\nthat operates individually on each line, common to plugins such as vim-commentary.\r\n\r\n<insert code here>\r\n\r\nAll text changes will be recorded within a single undo operations. Both the \r\ncomment operation itself and the undo operation will generate an on_line event\r\nfor each changed line.\r\n\r\nUsing the neovim codebase as an example (commit 2ecf04) with  neovim itself built \r\nat 2ecf04 with CMAKE_BUILD_TYPE=Release shows the following\r\nperformance improvement for double buffering <insert explanation here>\r\n\r\nThis performance improvements is due to avoiding expensive lua string reallocations on each operation, and instead\r\n<insert explanation here>\r\n\r\n```",
            "created_at": "2021-11-13T17:17:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968102985",
            "id": 968102985,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tBRJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968102985/reactions"
            },
            "updated_at": "2021-11-13T17:17:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968102985",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Can confirm that this fixes #11867 (~26s -> ~0.4s). `setline` seems to cause a lot of on_lines events, even the following code to trigger it is enough:\r\n\r\n```vim\r\ncall setline(1, getline(1, '$'))\r\n```\r\n\r\nJudging by the nature of that issue (an on_lines being fired for every line in the buffer), I believe that in the end my tests are realistic.",
            "created_at": "2021-11-13T17:37:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968105798",
            "id": 968105798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tB9G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968105798/reactions"
            },
            "updated_at": "2021-11-13T17:42:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968105798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Cool, when you update the commit message and mathias rubber stamps (or requests changes) we will merge.",
            "created_at": "2021-11-13T17:39:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968106054",
            "id": 968106054,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tCBG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968106054/reactions"
            },
            "updated_at": "2021-11-13T17:39:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968106054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Please wait, checking the other issue.",
            "created_at": "2021-11-13T17:40:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968106313",
            "id": 968106313,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tCFJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968106313/reactions"
            },
            "updated_at": "2021-11-13T17:40:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968106313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Fixes #14205 too due to rust.vim's usage of `setline()`.",
            "created_at": "2021-11-13T18:09:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968110858",
            "id": 968110858,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tDMK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968110858/reactions"
            },
            "updated_at": "2021-11-13T18:09:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968110858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Edited the commit message",
            "created_at": "2021-11-14T11:55:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-968276149",
            "id": 968276149,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45tri1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968276149/reactions"
            },
            "updated_at": "2021-11-14T11:55:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/968276149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm going to give the fixed incremental sync implementation a few days ~= week for people to report bugs @mfussenegger \r\n\r\nOtherwise this PR is failing lint.",
            "created_at": "2021-11-15T19:34:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-969249452",
            "id": 969249452,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45xZKs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/969249452/reactions"
            },
            "updated_at": "2021-11-15T20:20:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/969249452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Otherwise this PR is failing lint.\r\n\r\nThe failure is in unrelated C code, does this happen to other PRs too?",
            "created_at": "2021-11-15T19:42:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-969256245",
            "id": 969256245,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM45xa01",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/969256245/reactions"
            },
            "updated_at": "2021-11-15T19:42:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/969256245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Mathias will merge this PR when he has reviewed. It will likely be in 0.6",
            "created_at": "2021-11-21T17:03:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-974855480",
            "id": 974855480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM46Gx04",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/974855480/reactions"
            },
            "updated_at": "2021-11-21T17:03:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/974855480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Nice. Thank you.",
            "created_at": "2021-11-21T17:13:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-974857311",
            "id": 974857311,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM46GyRf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/974857311/reactions"
            },
            "updated_at": "2021-11-21T17:13:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/974857311",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I should also note that I have found that this PR may break on_reload logic. I'll investigate this.",
            "created_at": "2021-11-22T10:05:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-975355552",
            "id": 975355552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM46Ir6g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/975355552/reactions"
            },
            "updated_at": "2021-11-22T10:05:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/975355552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "False alarm, this was a bug in a specific Language Server, I've fixed it: https://github.com/sumneko/lua-language-server/pull/821",
            "created_at": "2021-11-24T16:29:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-978036201",
            "id": 978036201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM46S6Xp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/978036201/reactions"
            },
            "updated_at": "2021-11-24T16:29:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/978036201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have discovered a different bug related to on_reload. In short, the on_reload handler must ~~flush~~ forget all debounced didChange messages before sending didClose and didOpen. I'll fix this in a separate PR. Also, I'm going to rebase this one because it has conflicts with the master branch.",
            "created_at": "2021-11-24T17:05:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-978065793",
            "id": 978065793,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM46TBmB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/978065793/reactions"
            },
            "updated_at": "2021-11-24T17:13:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/978065793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is there anything left to be done with regards to this PR?",
            "created_at": "2021-11-27T15:49:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-980646298",
            "id": 980646298,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM46c3ma",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/980646298/reactions"
            },
            "updated_at": "2021-11-27T15:49:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/980646298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "No, I passed review/merging on a section of my core responsibilities over to @mfussenegger ",
            "created_at": "2021-11-27T15:50:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-980646480",
            "id": 980646480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM46c3pQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/980646480/reactions"
            },
            "updated_at": "2021-11-27T15:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/980646480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@dmitmel When I tried benchmarking this I didn't get the speedup I expected, using your reproduction from  https://github.com/neovim/neovim/issues/11867#issuecomment-968107623\r\n\r\nI outlined the situation (which you are probably already familiar with here): https://github.com/neovim/neovim/issues/11867#issuecomment-1013952562.\r\n\r\nI think an alternative to this PR would involve bypassing get_lines completely and caching firstline, lastline, newlastline, etc. on each on_lines call, and only calling buf_get_lines at the beginning and end of the debounce window (without any of the intermediate caching as implemented in this PR). \r\n\r\nThe alternative, which I am also ok with, is to tell users to switch to plugins which apply better atomic buffer changes (which IMO is what they should be doing anyways).\r\n\r\nWhat do you think?",
            "created_at": "2022-01-16T21:54:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-1013959826",
            "id": 1013959826,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM48b8yS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013959826/reactions"
            },
            "updated_at": "2022-01-16T21:55:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013959826",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think an alternative to this PR would involve bypassing get_lines completely and caching firstline, lastline, newlastline, etc. on each on_lines call, and only calling buf_get_lines at the beginning and end of the debounce window (without any of the intermediate caching as implemented in this PR).\r\n\r\nHonestly, at that point you might as well stop using firstline/lastline and find the modified range using the procedure I have implemented in #16437. As we have previously established in the Matrix chat, comparing even tens of thousands of strings is very very cheap, and that would considerably simplify the code by bypassing the logic necessary for combining all of the intermediate firstline/lastline ranges into a single one.",
            "created_at": "2022-01-16T22:03:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-1013961073",
            "id": 1013961073,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM48b9Fx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013961073/reactions"
            },
            "updated_at": "2022-01-16T22:03:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013961073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> considerably simplify the code by bypassing the logic necessary for combining all of the intermediate firstline/lastline ranges into a single one\r\n\r\nI'm pretty sure that's like 3-4 lines of code...\r\n\r\nAnyways, if you have time can you verify this doesn't actually address the performance issues or point out how I can verify that it does? I used basically config from https://github.com/neovim/neovim/issues/11867#issuecomment-968107623 ",
            "created_at": "2022-01-16T22:08:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-1013962175",
            "id": 1013962175,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM48b9W_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013962175/reactions"
            },
            "updated_at": "2022-01-16T22:09:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013962175",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "No idea. For me it does work, and the improvement is significant (22s -> 0.5s). All I did was compile Nvim on this branch and run the command I specified. Can you record a screencast or something like that?",
            "created_at": "2022-01-16T22:34:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-1013966278",
            "id": 1013966278,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM48b-XG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013966278/reactions"
            },
            "updated_at": "2022-01-16T22:34:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013966278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@dmitmel if you want the actual authorship of the commit rather than coauthor you can just apply the changes from https://github.com/neovim/neovim/pull/17118/files directly to this PR which updates it to address the rebase conflicts.",
            "created_at": "2022-01-16T22:38:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-1013967087",
            "id": 1013967087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM48b-jv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013967087/reactions"
            },
            "updated_at": "2022-01-16T23:44:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013967087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I went ahead and merged this in https://github.com/neovim/neovim/pull/17118.\r\n\r\nThanks for your contribution and for addressing all of my questions :) ",
            "created_at": "2022-01-17T16:20:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/16277#issuecomment-1014707116",
            "id": 1014707116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
            "node_id": "IC_kwDOAPphoM48ezOs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1014707116/reactions"
            },
            "updated_at": "2022-01-17T16:20:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1014707116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16277/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/16277/commits",
    "created_at": "2021-11-10T13:21:11Z",
    "diff_url": "https://github.com/neovim/neovim/pull/16277.diff",
    "draft": false,
    "head": {
        "label": "dmitmel:lsp-sync-faster-buf-get-lines",
        "ref": "lsp-sync-faster-buf-get-lines",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dmitmel/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dmitmel/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dmitmel/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dmitmel/neovim/branches{/branch}",
            "clone_url": "https://github.com/dmitmel/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dmitmel/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dmitmel/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dmitmel/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dmitmel/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dmitmel/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dmitmel/neovim/contributors",
            "created_at": "2021-11-10T12:46:35Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dmitmel/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": true,
            "downloads_url": "https://api.github.com/repos/dmitmel/neovim/downloads",
            "events_url": "https://api.github.com/repos/dmitmel/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dmitmel/neovim/forks",
            "full_name": "dmitmel/neovim",
            "git_commits_url": "https://api.github.com/repos/dmitmel/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dmitmel/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dmitmel/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dmitmel/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dmitmel/neovim/hooks",
            "html_url": "https://github.com/dmitmel/neovim",
            "id": 426619279,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dmitmel/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dmitmel/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dmitmel/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dmitmel/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dmitmel/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/dmitmel/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dmitmel/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dmitmel/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGW2xjw",
            "notifications_url": "https://api.github.com/repos/dmitmel/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
                "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
                "followers_url": "https://api.github.com/users/dmitmel/followers",
                "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
                "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dmitmel",
                "id": 15367354,
                "login": "dmitmel",
                "node_id": "MDQ6VXNlcjE1MzY3MzU0",
                "organizations_url": "https://api.github.com/users/dmitmel/orgs",
                "received_events_url": "https://api.github.com/users/dmitmel/received_events",
                "repos_url": "https://api.github.com/users/dmitmel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dmitmel",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dmitmel/neovim/pulls{/number}",
            "pushed_at": "2025-06-24T15:10:02Z",
            "releases_url": "https://api.github.com/repos/dmitmel/neovim/releases{/id}",
            "size": 327279,
            "ssh_url": "git@github.com:dmitmel/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/dmitmel/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dmitmel/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dmitmel/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dmitmel/neovim/subscription",
            "svn_url": "https://github.com/dmitmel/neovim",
            "tags_url": "https://api.github.com/repos/dmitmel/neovim/tags",
            "teams_url": "https://api.github.com/repos/dmitmel/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dmitmel/neovim/git/trees{/sha}",
            "updated_at": "2025-06-24T15:11:12Z",
            "url": "https://api.github.com/repos/dmitmel/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d324dec9dc75905c314b7e1f55a16cf6955271f1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
            "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
            "followers_url": "https://api.github.com/users/dmitmel/followers",
            "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
            "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dmitmel",
            "id": 15367354,
            "login": "dmitmel",
            "node_id": "MDQ6VXNlcjE1MzY3MzU0",
            "organizations_url": "https://api.github.com/users/dmitmel/orgs",
            "received_events_url": "https://api.github.com/users/dmitmel/received_events",
            "repos_url": "https://api.github.com/users/dmitmel/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dmitmel",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/16277",
    "id": 777593031,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16277",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "02562ac88704a7a78b521dad93efd0444c16c7af",
    "merged_at": null,
    "milestone": {
        "closed_at": "2022-04-15T12:49:05Z",
        "closed_issues": 92,
        "created_at": "2022-03-12T14:48:49Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2022-04-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/29",
        "id": 7760912,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/29/labels",
        "node_id": "MI_kwDOAPphoM4AdmwQ",
        "number": 29,
        "open_issues": 0,
        "state": "closed",
        "title": "0.7",
        "updated_at": "2024-07-29T08:41:10Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/29"
    },
    "node_id": "PR_kwDOAPphoM4uWSDH",
    "number": 16277,
    "patch_url": "https://github.com/neovim/neovim/pull/16277.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/16277/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d324dec9dc75905c314b7e1f55a16cf6955271f1",
    "title": "fix(lsp): request only changed portions of the buffer in changetracker",
    "updated_at": "2025-06-24T15:07:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/16277",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15367354?v=4",
        "events_url": "https://api.github.com/users/dmitmel/events{/privacy}",
        "followers_url": "https://api.github.com/users/dmitmel/followers",
        "following_url": "https://api.github.com/users/dmitmel/following{/other_user}",
        "gists_url": "https://api.github.com/users/dmitmel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dmitmel",
        "id": 15367354,
        "login": "dmitmel",
        "node_id": "MDQ6VXNlcjE1MzY3MzU0",
        "organizations_url": "https://api.github.com/users/dmitmel/orgs",
        "received_events_url": "https://api.github.com/users/dmitmel/received_events",
        "repos_url": "https://api.github.com/users/dmitmel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dmitmel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dmitmel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dmitmel",
        "user_view_type": "public"
    }
}