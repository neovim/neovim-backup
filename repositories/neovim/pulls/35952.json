{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35952/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35952/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35952"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35952"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35952/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/e8aeac4b938a5a274fdfcd2869c3401427431754"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6358,
            "forks_count": 6358,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 2001,
            "open_issues_count": 2001,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-10-14T02:23:27Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 347842,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 93440,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-10-14T02:23:32Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 93440,
            "watchers_count": 93440,
            "web_commit_signoff_required": false
        },
        "sha": "f0b9232ad80804d85395130c54f1b8f671582c2c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\nThis is not doing anything useful yet, but the goal is to make the execution of builtin (and builtin extensions to) terminfo indepedent of unibilium, working towards https://github.com/neovim/neovim/issues/31989#issuecomment-3346018755",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2410124647"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2410124647"
                }
            },
            "author_association": "MEMBER",
            "body": "If it still fails to update the title, shouldn't there still be an error message in the log?\r\n\r\nIf it can now update the title successfully, the check for `b:term_title` should expect the new title and be wrapped in `retry()`, as `assert_log()` uses `retry()`.",
            "commit_id": "e8aeac4b938a5a274fdfcd2869c3401427431754",
            "created_at": "2025-10-07T10:14:33Z",
            "diff_hunk": "@@ -4037,7 +4037,6 @@ describe('TUI client', function()\n       ffi.C.ui_call_set_title(title)\n     ]=])\n     screen_client:expect_unchanged()\n-    assert_log('TUI: escape sequence for ext%.set_title too long', testlog)\n     eq(bufname, api.nvim_buf_get_var(0, 'term_title'))",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2410124647",
            "id": 2410124647,
            "line": 4041,
            "node_id": "PRRC_kwDOAPphoM6Pp5Vn",
            "original_commit_id": "1097c56344a9f758549f31df322d5e47fe40a1ce",
            "original_line": 4041,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 6,
            "pull_request_review_id": 3309413539,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2410124647/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-07T10:17:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2410124647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2410187517"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2410187517"
                }
            },
            "author_association": "MEMBER",
            "body": "we usually do not consider every single log message functional behavior which needs to be cargo-cult preserved. if you want your title to be set just don't set anything ridiculous (but 1024 could be increased to 4096, what if you want to show 80 scottish flags LMAO)\r\n\r\nBut sure, maybe here it it halps make the test less racy? :thinking: ",
            "commit_id": "e8aeac4b938a5a274fdfcd2869c3401427431754",
            "created_at": "2025-10-07T10:39:15Z",
            "diff_hunk": "@@ -4037,7 +4037,6 @@ describe('TUI client', function()\n       ffi.C.ui_call_set_title(title)\n     ]=])\n     screen_client:expect_unchanged()\n-    assert_log('TUI: escape sequence for ext%.set_title too long', testlog)\n     eq(bufname, api.nvim_buf_get_var(0, 'term_title'))",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2410187517",
            "id": 2410187517,
            "in_reply_to_id": 2410124647,
            "line": 4041,
            "node_id": "PRRC_kwDOAPphoM6PqIr9",
            "original_commit_id": "1097c56344a9f758549f31df322d5e47fe40a1ce",
            "original_line": 4041,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 6,
            "pull_request_review_id": 3309510399,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2410187517/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-07T10:39:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2410187517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2411788590"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2411788590"
                }
            },
            "author_association": "MEMBER",
            "body": "this probably deserves a `if...abort()` so it applies to Release build too. same for the others below. because it's not \"harmless\" if this happens in a Release build, it will crash or access invalid memory?",
            "commit_id": "e7e77a01848cecdce2fa78fbf969d7fe45082326",
            "created_at": "2025-10-07T20:14:22Z",
            "diff_hunk": "@@ -1970,87 +1877,99 @@ static void out(void *ctx, const char *str, size_t len)\n   tui->bufpos += len;\n }\n \n-/// Called by unibi_format() for padding instructions.\n-/// The following parameter descriptions are extracted from unibi_format(3) and terminfo(5).\n-///\n-/// @param ctx    the same as `ctx2` passed to unibi_format()\n-/// @param delay  the delay in tenths of milliseconds\n-/// @param scale  padding is proportional to the number of lines affected\n-/// @param force  padding is mandatory\n-static void pad(void *ctx, size_t delay, int scale FUNC_ATTR_UNUSED, int force)\n+static void out_len(TUIData *tui, const char *str)\n {\n-  if (!force) {\n-    return;\n+  if (str != NULL) {\n+    out(tui, str, strlen(str));\n   }\n+}\n \n-  TUIData *tui = ctx;\n+static void terminfo_out(TUIData *tui, NeoTerminfoNames what)\n+{\n+  assert(what < kTermCount);",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2411788590",
            "id": 2411788590,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6PwPku",
            "original_commit_id": "3ed5c2845ba20283c9128215dde4830d4c08885b",
            "original_line": 1889,
            "original_position": 986,
            "original_start_line": null,
            "path": "src/nvim/tui/tui.c",
            "position": 1,
            "pull_request_review_id": 3311749526,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2411788590/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-07T20:15:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2411788590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2414994504"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414994504"
                }
            },
            "author_association": "NONE",
            "body": "```suggestion\n  sys('rm ./terminfo.src')\n```\n\nThere should be no need to force anything",
            "commit_id": "e8aeac4b938a5a274fdfcd2869c3401427431754",
            "created_at": "2025-10-08T20:44:24Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+-- usage: nvim -ll src/gen/gen_terminfo.lua\n+--\n+-- This script does:\n+--\n+--   1. Download Dickey's terminfo.src\n+--   2. Compile temporary terminfo database from terminfo.src\n+--   3. Use database to generate src/nvim/tui/terminfo_defs.h\n+\n+local url = 'https://invisible-island.net/datafiles/current/terminfo.src.gz'\n+local target_gen = 'src/nvim/tui/terminfo_defs.h'\n+local target_enum = 'src/nvim/tui/terminfo_enum_defs.h'\n+\n+local entries = {\n+  { 'ansi', 'ansi_terminfo' },\n+  { 'interix', 'interix_8colour_terminfo' },\n+  { 'iterm2', 'iterm_256colour_terminfo' },\n+  { 'linux', 'linux_16colour_terminfo' },\n+  { 'putty-256color', 'putty_256colour_terminfo' },\n+  { 'rxvt-256color', 'rxvt_256colour_terminfo' },\n+  { 'screen-256color', 'screen_256colour_terminfo' },\n+  { 'st-256color', 'st_256colour_terminfo' },\n+  { 'tmux-256color', 'tmux_256colour_terminfo' },\n+  { 'vte-256color', 'vte_256colour_terminfo' },\n+  { 'xterm-256color', 'xterm_256colour_terminfo' },\n+  { 'cygwin', 'cygwin_terminfo' },\n+  { 'win32con', 'win32con_terminfo' },\n+  { 'conemu', 'conemu_terminfo' },\n+  { 'vtpcon', 'vtpcon_terminfo' },\n+}\n+\n+local wanted_numbers = { 'max_colors', 'lines', 'columns' }\n+local wanted_strings = {\n+  'carriage_return',\n+  'change_scroll_region',\n+  'clear_screen',\n+  'clr_eol',\n+  'clr_eos',\n+  'cursor_address',\n+  'cursor_down',\n+  'cursor_invisible',\n+  'cursor_left',\n+  'cursor_home',\n+  'cursor_normal',\n+  'cursor_up',\n+  'cursor_right',\n+  'delete_line',\n+  'enter_bold_mode',\n+  'enter_ca_mode',\n+  'enter_italics_mode',\n+  'enter_reverse_mode',\n+  'enter_standout_mode',\n+  'enter_underline_mode',\n+  'erase_chars',\n+  'exit_attribute_mode',\n+  'exit_ca_mode',\n+  'from_status_line',\n+  'insert_line',\n+  'keypad_local',\n+  'keypad_xmit',\n+  'parm_delete_line',\n+  'parm_down_cursor',\n+  'parm_insert_line',\n+  'parm_left_cursor',\n+  'parm_right_cursor',\n+  'parm_up_cursor',\n+  'set_a_background',\n+  'set_a_foreground',\n+  'set_attributes',\n+  'set_lr_margin',\n+  'to_status_line',\n+}\n+\n+local wanted_strings_ext = {\n+  -- the following are our custom name for extensions, see \"extmap\"\n+  { 'reset_cursor_style', 'se' },\n+  { 'set_cursor_style', 'Ss' },\n+  -- terminfo describes strikethrough modes as rmxx/smxx with respect\n+  -- to the ECMA-48 strikeout/crossed-out attributes.\n+  { 'enter_strikethrough_mode', 'smxx' },\n+  { 'set_rgb_foreground', 'setrgbf' },\n+  { 'set_rgb_background', 'setrgbb' },\n+  { 'set_cursor_color', 'Cs' },\n+  { 'reset_cursor_color', 'Cr' },\n+  { 'set_underline_style', 'Smulx' },\n+}\n+\n+local db = '/tmp/nvim_terminfo'\n+if vim.uv.fs_stat(db) == nil then\n+  local function sys(cmd)\n+    print(cmd)\n+    os.execute(cmd)\n+  end\n+  sys('curl -O ' .. url)\n+  sys('gunzip -f terminfo.src.gz')\n+  sys('cat terminfo.src scripts/windows.ti | tic -x -o \"' .. db .. '\" -')\n+  sys('rm -f terminfo.src')",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2414994504",
            "id": 2414994504,
            "line": 96,
            "node_id": "PRRC_kwDOAPphoM6P8eRI",
            "original_commit_id": "b9a003a79d4dd9f33457f2ebef16d1e2aa44f955",
            "original_line": 96,
            "original_position": 96,
            "original_start_line": null,
            "path": "src/gen/gen_terminfo.lua",
            "position": 96,
            "pull_request_review_id": 3316462132,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414994504/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-08T20:47:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414994504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/325724?v=4",
                "events_url": "https://api.github.com/users/jvoisin/events{/privacy}",
                "followers_url": "https://api.github.com/users/jvoisin/followers",
                "following_url": "https://api.github.com/users/jvoisin/following{/other_user}",
                "gists_url": "https://api.github.com/users/jvoisin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jvoisin",
                "id": 325724,
                "login": "jvoisin",
                "node_id": "MDQ6VXNlcjMyNTcyNA==",
                "organizations_url": "https://api.github.com/users/jvoisin/orgs",
                "received_events_url": "https://api.github.com/users/jvoisin/received_events",
                "repos_url": "https://api.github.com/users/jvoisin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jvoisin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jvoisin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jvoisin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2414995190"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414995190"
                }
            },
            "author_association": "NONE",
            "body": "What happens if `curl` isn't installed/available?",
            "commit_id": "e8aeac4b938a5a274fdfcd2869c3401427431754",
            "created_at": "2025-10-08T20:44:46Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+-- usage: nvim -ll src/gen/gen_terminfo.lua\n+--\n+-- This script does:\n+--\n+--   1. Download Dickey's terminfo.src\n+--   2. Compile temporary terminfo database from terminfo.src\n+--   3. Use database to generate src/nvim/tui/terminfo_defs.h\n+\n+local url = 'https://invisible-island.net/datafiles/current/terminfo.src.gz'\n+local target_gen = 'src/nvim/tui/terminfo_defs.h'\n+local target_enum = 'src/nvim/tui/terminfo_enum_defs.h'\n+\n+local entries = {\n+  { 'ansi', 'ansi_terminfo' },\n+  { 'interix', 'interix_8colour_terminfo' },\n+  { 'iterm2', 'iterm_256colour_terminfo' },\n+  { 'linux', 'linux_16colour_terminfo' },\n+  { 'putty-256color', 'putty_256colour_terminfo' },\n+  { 'rxvt-256color', 'rxvt_256colour_terminfo' },\n+  { 'screen-256color', 'screen_256colour_terminfo' },\n+  { 'st-256color', 'st_256colour_terminfo' },\n+  { 'tmux-256color', 'tmux_256colour_terminfo' },\n+  { 'vte-256color', 'vte_256colour_terminfo' },\n+  { 'xterm-256color', 'xterm_256colour_terminfo' },\n+  { 'cygwin', 'cygwin_terminfo' },\n+  { 'win32con', 'win32con_terminfo' },\n+  { 'conemu', 'conemu_terminfo' },\n+  { 'vtpcon', 'vtpcon_terminfo' },\n+}\n+\n+local wanted_numbers = { 'max_colors', 'lines', 'columns' }\n+local wanted_strings = {\n+  'carriage_return',\n+  'change_scroll_region',\n+  'clear_screen',\n+  'clr_eol',\n+  'clr_eos',\n+  'cursor_address',\n+  'cursor_down',\n+  'cursor_invisible',\n+  'cursor_left',\n+  'cursor_home',\n+  'cursor_normal',\n+  'cursor_up',\n+  'cursor_right',\n+  'delete_line',\n+  'enter_bold_mode',\n+  'enter_ca_mode',\n+  'enter_italics_mode',\n+  'enter_reverse_mode',\n+  'enter_standout_mode',\n+  'enter_underline_mode',\n+  'erase_chars',\n+  'exit_attribute_mode',\n+  'exit_ca_mode',\n+  'from_status_line',\n+  'insert_line',\n+  'keypad_local',\n+  'keypad_xmit',\n+  'parm_delete_line',\n+  'parm_down_cursor',\n+  'parm_insert_line',\n+  'parm_left_cursor',\n+  'parm_right_cursor',\n+  'parm_up_cursor',\n+  'set_a_background',\n+  'set_a_foreground',\n+  'set_attributes',\n+  'set_lr_margin',\n+  'to_status_line',\n+}\n+\n+local wanted_strings_ext = {\n+  -- the following are our custom name for extensions, see \"extmap\"\n+  { 'reset_cursor_style', 'se' },\n+  { 'set_cursor_style', 'Ss' },\n+  -- terminfo describes strikethrough modes as rmxx/smxx with respect\n+  -- to the ECMA-48 strikeout/crossed-out attributes.\n+  { 'enter_strikethrough_mode', 'smxx' },\n+  { 'set_rgb_foreground', 'setrgbf' },\n+  { 'set_rgb_background', 'setrgbb' },\n+  { 'set_cursor_color', 'Cs' },\n+  { 'reset_cursor_color', 'Cr' },\n+  { 'set_underline_style', 'Smulx' },\n+}\n+\n+local db = '/tmp/nvim_terminfo'\n+if vim.uv.fs_stat(db) == nil then\n+  local function sys(cmd)\n+    print(cmd)\n+    os.execute(cmd)\n+  end\n+  sys('curl -O ' .. url)",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2414995190",
            "id": 2414995190,
            "line": 93,
            "node_id": "PRRC_kwDOAPphoM6P8eb2",
            "original_commit_id": "b9a003a79d4dd9f33457f2ebef16d1e2aa44f955",
            "original_line": 93,
            "original_position": 93,
            "original_start_line": null,
            "path": "src/gen/gen_terminfo.lua",
            "position": 93,
            "pull_request_review_id": 3316462132,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414995190/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-08T20:47:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414995190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/325724?v=4",
                "events_url": "https://api.github.com/users/jvoisin/events{/privacy}",
                "followers_url": "https://api.github.com/users/jvoisin/followers",
                "following_url": "https://api.github.com/users/jvoisin/following{/other_user}",
                "gists_url": "https://api.github.com/users/jvoisin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jvoisin",
                "id": 325724,
                "login": "jvoisin",
                "node_id": "MDQ6VXNlcjMyNTcyNA==",
                "organizations_url": "https://api.github.com/users/jvoisin/orgs",
                "received_events_url": "https://api.github.com/users/jvoisin/received_events",
                "repos_url": "https://api.github.com/users/jvoisin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jvoisin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jvoisin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jvoisin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2414999502"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414999502"
                }
            },
            "author_association": "NONE",
            "body": "```suggestion\n  // these extended booleans indicate probable 24-color support\n```",
            "commit_id": "e8aeac4b938a5a274fdfcd2869c3401427431754",
            "created_at": "2025-10-08T20:46:58Z",
            "diff_hunk": "@@ -1,7 +1,23 @@\n #pragma once\n \n-#include <unibilium.h>  // IWYU pragma: keep\n-\n #include \"nvim/api/private/defs.h\"  // IWYU pragma: keep\n+#include \"nvim/tui/terminfo_enum_defs.h\"\n+\n+typedef struct {\n+  bool bce;\n+  // these extended booleans indiciate likely 24-color support",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2414999502",
            "id": 2414999502,
            "line": 8,
            "node_id": "PRRC_kwDOAPphoM6P8ffO",
            "original_commit_id": "b9a003a79d4dd9f33457f2ebef16d1e2aa44f955",
            "original_line": 8,
            "original_position": 10,
            "original_start_line": null,
            "path": "src/nvim/tui/terminfo.h",
            "position": 10,
            "pull_request_review_id": 3316462132,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414999502/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-08T20:47:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2414999502",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/325724?v=4",
                "events_url": "https://api.github.com/users/jvoisin/events{/privacy}",
                "followers_url": "https://api.github.com/users/jvoisin/followers",
                "following_url": "https://api.github.com/users/jvoisin/following{/other_user}",
                "gists_url": "https://api.github.com/users/jvoisin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jvoisin",
                "id": 325724,
                "login": "jvoisin",
                "node_id": "MDQ6VXNlcjMyNTcyNA==",
                "organizations_url": "https://api.github.com/users/jvoisin/orgs",
                "received_events_url": "https://api.github.com/users/jvoisin/received_events",
                "repos_url": "https://api.github.com/users/jvoisin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jvoisin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jvoisin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jvoisin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2422652087"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422652087"
                }
            },
            "author_association": "MEMBER",
            "body": "Then everything fails catastrophically (`curl` is used everywhere in the build process).",
            "commit_id": "e8aeac4b938a5a274fdfcd2869c3401427431754",
            "created_at": "2025-10-11T09:17:17Z",
            "diff_hunk": "@@ -0,0 +1,204 @@\n+-- usage: nvim -ll src/gen/gen_terminfo.lua\n+--\n+-- This script does:\n+--\n+--   1. Download Dickey's terminfo.src\n+--   2. Compile temporary terminfo database from terminfo.src\n+--   3. Use database to generate src/nvim/tui/terminfo_defs.h\n+\n+local url = 'https://invisible-island.net/datafiles/current/terminfo.src.gz'\n+local target_gen = 'src/nvim/tui/terminfo_defs.h'\n+local target_enum = 'src/nvim/tui/terminfo_enum_defs.h'\n+\n+local entries = {\n+  { 'ansi', 'ansi_terminfo' },\n+  { 'interix', 'interix_8colour_terminfo' },\n+  { 'iterm2', 'iterm_256colour_terminfo' },\n+  { 'linux', 'linux_16colour_terminfo' },\n+  { 'putty-256color', 'putty_256colour_terminfo' },\n+  { 'rxvt-256color', 'rxvt_256colour_terminfo' },\n+  { 'screen-256color', 'screen_256colour_terminfo' },\n+  { 'st-256color', 'st_256colour_terminfo' },\n+  { 'tmux-256color', 'tmux_256colour_terminfo' },\n+  { 'vte-256color', 'vte_256colour_terminfo' },\n+  { 'xterm-256color', 'xterm_256colour_terminfo' },\n+  { 'cygwin', 'cygwin_terminfo' },\n+  { 'win32con', 'win32con_terminfo' },\n+  { 'conemu', 'conemu_terminfo' },\n+  { 'vtpcon', 'vtpcon_terminfo' },\n+}\n+\n+local wanted_numbers = { 'max_colors', 'lines', 'columns' }\n+local wanted_strings = {\n+  'carriage_return',\n+  'change_scroll_region',\n+  'clear_screen',\n+  'clr_eol',\n+  'clr_eos',\n+  'cursor_address',\n+  'cursor_down',\n+  'cursor_invisible',\n+  'cursor_left',\n+  'cursor_home',\n+  'cursor_normal',\n+  'cursor_up',\n+  'cursor_right',\n+  'delete_line',\n+  'enter_bold_mode',\n+  'enter_ca_mode',\n+  'enter_italics_mode',\n+  'enter_reverse_mode',\n+  'enter_standout_mode',\n+  'enter_underline_mode',\n+  'erase_chars',\n+  'exit_attribute_mode',\n+  'exit_ca_mode',\n+  'from_status_line',\n+  'insert_line',\n+  'keypad_local',\n+  'keypad_xmit',\n+  'parm_delete_line',\n+  'parm_down_cursor',\n+  'parm_insert_line',\n+  'parm_left_cursor',\n+  'parm_right_cursor',\n+  'parm_up_cursor',\n+  'set_a_background',\n+  'set_a_foreground',\n+  'set_attributes',\n+  'set_lr_margin',\n+  'to_status_line',\n+}\n+\n+local wanted_strings_ext = {\n+  -- the following are our custom name for extensions, see \"extmap\"\n+  { 'reset_cursor_style', 'se' },\n+  { 'set_cursor_style', 'Ss' },\n+  -- terminfo describes strikethrough modes as rmxx/smxx with respect\n+  -- to the ECMA-48 strikeout/crossed-out attributes.\n+  { 'enter_strikethrough_mode', 'smxx' },\n+  { 'set_rgb_foreground', 'setrgbf' },\n+  { 'set_rgb_background', 'setrgbb' },\n+  { 'set_cursor_color', 'Cs' },\n+  { 'reset_cursor_color', 'Cr' },\n+  { 'set_underline_style', 'Smulx' },\n+}\n+\n+local db = '/tmp/nvim_terminfo'\n+if vim.uv.fs_stat(db) == nil then\n+  local function sys(cmd)\n+    print(cmd)\n+    os.execute(cmd)\n+  end\n+  sys('curl -O ' .. url)",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2422652087",
            "id": 2422652087,
            "in_reply_to_id": 2414995190,
            "line": 93,
            "node_id": "PRRC_kwDOAPphoM6QZry3",
            "original_commit_id": "b9a003a79d4dd9f33457f2ebef16d1e2aa44f955",
            "original_line": 93,
            "original_position": 93,
            "original_start_line": null,
            "path": "src/gen/gen_terminfo.lua",
            "position": 93,
            "pull_request_review_id": 3326889230,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422652087/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-11T09:17:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422652087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2422724715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422724715"
                }
            },
            "author_association": "MEMBER",
            "body": "ah right, the test is kinda fragile as there is no observed changes at all. even the `ui_flush()` could go missing in a refactor.. adding it back.",
            "commit_id": "e8aeac4b938a5a274fdfcd2869c3401427431754",
            "created_at": "2025-10-11T10:41:43Z",
            "diff_hunk": "@@ -4037,7 +4037,6 @@ describe('TUI client', function()\n       ffi.C.ui_call_set_title(title)\n     ]=])\n     screen_client:expect_unchanged()\n-    assert_log('TUI: escape sequence for ext%.set_title too long', testlog)\n     eq(bufname, api.nvim_buf_get_var(0, 'term_title'))",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2422724715",
            "id": 2422724715,
            "in_reply_to_id": 2410124647,
            "line": 4041,
            "node_id": "PRRC_kwDOAPphoM6QZ9hr",
            "original_commit_id": "1097c56344a9f758549f31df322d5e47fe40a1ce",
            "original_line": 4041,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 6,
            "pull_request_review_id": 3326978472,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422724715/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-11T10:41:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422724715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35952#discussion_r2422727101"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35952"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422727101"
                }
            },
            "author_association": "MEMBER",
            "body": "yep, done",
            "commit_id": "e7e77a01848cecdce2fa78fbf969d7fe45082326",
            "created_at": "2025-10-11T10:43:59Z",
            "diff_hunk": "@@ -1970,87 +1877,99 @@ static void out(void *ctx, const char *str, size_t len)\n   tui->bufpos += len;\n }\n \n-/// Called by unibi_format() for padding instructions.\n-/// The following parameter descriptions are extracted from unibi_format(3) and terminfo(5).\n-///\n-/// @param ctx    the same as `ctx2` passed to unibi_format()\n-/// @param delay  the delay in tenths of milliseconds\n-/// @param scale  padding is proportional to the number of lines affected\n-/// @param force  padding is mandatory\n-static void pad(void *ctx, size_t delay, int scale FUNC_ATTR_UNUSED, int force)\n+static void out_len(TUIData *tui, const char *str)\n {\n-  if (!force) {\n-    return;\n+  if (str != NULL) {\n+    out(tui, str, strlen(str));\n   }\n+}\n \n-  TUIData *tui = ctx;\n+static void terminfo_out(TUIData *tui, NeoTerminfoNames what)\n+{\n+  assert(what < kTermCount);",
            "html_url": "https://github.com/neovim/neovim/pull/35952#discussion_r2422727101",
            "id": 2422727101,
            "in_reply_to_id": 2411788590,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6QZ-G9",
            "original_commit_id": "3ed5c2845ba20283c9128215dde4830d4c08885b",
            "original_line": 1889,
            "original_position": 986,
            "original_start_line": null,
            "path": "src/nvim/tui/tui.c",
            "position": 1,
            "pull_request_review_id": 3326981506,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422727101/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-11T10:44:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2422727101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35952/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35952/commits",
    "created_at": "2025-09-29T11:50:17Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35952.diff",
    "draft": true,
    "head": {
        "label": "bfredl:neocurses",
        "ref": "neocurses",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/bfredl/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/bfredl/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/bfredl/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/bfredl/neovim/branches{/branch}",
            "clone_url": "https://github.com/bfredl/neovim.git",
            "collaborators_url": "https://api.github.com/repos/bfredl/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/bfredl/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/bfredl/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/bfredl/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/bfredl/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/bfredl/neovim/contributors",
            "created_at": "2014-06-20T19:51:31Z",
            "default_branch": "wonderland-branch",
            "deployments_url": "https://api.github.com/repos/bfredl/neovim/deployments",
            "description": "vim's rebirth for the 21st century",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/bfredl/neovim/downloads",
            "events_url": "https://api.github.com/repos/bfredl/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/bfredl/neovim/forks",
            "full_name": "bfredl/neovim",
            "git_commits_url": "https://api.github.com/repos/bfredl/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/bfredl/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/bfredl/neovim/git/tags{/sha}",
            "git_url": "git://github.com/bfredl/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://neovim.org/",
            "hooks_url": "https://api.github.com/repos/bfredl/neovim/hooks",
            "html_url": "https://github.com/bfredl/neovim",
            "id": 21050434,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/bfredl/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/bfredl/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/bfredl/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/bfredl/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/bfredl/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/bfredl/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/bfredl/neovim/merges",
            "milestones_url": "https://api.github.com/repos/bfredl/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTA1MDQzNA==",
            "notifications_url": "https://api.github.com/repos/bfredl/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/bfredl/neovim/pulls{/number}",
            "pushed_at": "2025-10-11T10:43:43Z",
            "releases_url": "https://api.github.com/repos/bfredl/neovim/releases{/id}",
            "size": 349674,
            "ssh_url": "git@github.com:bfredl/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/bfredl/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/bfredl/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/bfredl/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/bfredl/neovim/subscription",
            "svn_url": "https://github.com/bfredl/neovim",
            "tags_url": "https://api.github.com/repos/bfredl/neovim/tags",
            "teams_url": "https://api.github.com/repos/bfredl/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/bfredl/neovim/git/trees{/sha}",
            "updated_at": "2025-01-16T13:11:08Z",
            "url": "https://api.github.com/repos/bfredl/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "e8aeac4b938a5a274fdfcd2869c3401427431754",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35952",
    "id": 2870278489,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35952",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "27517099ba672f0adfdf8bce6dac1682dd8f8c69",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6rFPlZ",
    "number": 35952,
    "patch_url": "https://github.com/neovim/neovim/pull/35952.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35952/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/e8aeac4b938a5a274fdfcd2869c3401427431754",
    "title": "perf(tui): faster implementation of terminfo",
    "updated_at": "2025-10-11T10:44:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35952",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    }
}