{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35109/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35109/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35109"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35109"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35109/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8c2fd0b3d41556ab6266d1d2794c84a25ed83f91"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6225,
            "forks_count": 6225,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1969,
            "open_issues_count": 1969,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-04T05:24:53Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 335555,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 91672,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-05T02:46:52Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 91672,
            "watchers_count": 91672,
            "web_commit_signoff_required": false
        },
        "sha": "a9a4c271b13fffba2a21567c86b0f40ae4c180a1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "ref #25509\r\n\r\nCurrently, the main focus is on defining the `vim.pos.Pos` and `vim.range.Range` structures, and moving the logic of the comparing functions in `vim.treesitter._range` so that we can deprecate it in the future.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2244251191"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244251191"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "IMO, the neovim codebase uses `Class.new` style definition for class constructor.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T03:12:05Z",
            "diff_hunk": "@@ -0,0 +1,99 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.range.Range\n+---@field start vim.pos.Pos\n+---@field end_ vim.pos.Pos\n+---@overload fun(range: Range): vim.range.Range Only for compatibility\n+---@overload fun(start: vim.pos.Pos, end_: vim.pos.Pos): vim.range.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.range.Range\n+local Range = {}\n+Range.__index = Range\n+\n+---@package\n+---@overload fun(range: Range)\n+---@overload fun(start: vim.pos.Pos, end_: vim.pos.Pos): vim.range.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.range.Range\n+function Range:new(...)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2244251191",
            "id": 2244251191,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM6FxI43",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 15,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": 15,
            "pull_request_review_id": 3073855126,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244251191/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T03:12:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244251191",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/629908?v=4",
                "events_url": "https://api.github.com/users/hrsh7th/events{/privacy}",
                "followers_url": "https://api.github.com/users/hrsh7th/followers",
                "following_url": "https://api.github.com/users/hrsh7th/following{/other_user}",
                "gists_url": "https://api.github.com/users/hrsh7th/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hrsh7th",
                "id": 629908,
                "login": "hrsh7th",
                "node_id": "MDQ6VXNlcjYyOTkwOA==",
                "organizations_url": "https://api.github.com/users/hrsh7th/orgs",
                "received_events_url": "https://api.github.com/users/hrsh7th/received_events",
                "repos_url": "https://api.github.com/users/hrsh7th/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hrsh7th/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hrsh7th/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hrsh7th",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2244292210"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244292210"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is mainly for the following overload:\r\n\r\n```\r\nsetmetatable(Pos, {\r\n__call = Pos.new,\r\n})\r\n```\r\n\r\nOtherwise, we need a wrapper that discards the first argument (caller, aka `self`). I think this slight inconsistency is not a big deal because `Pos.new` is marked `@protected` and users are encouraged to use `vim.pos()` instead of `vim.pos.new()`.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T03:59:36Z",
            "diff_hunk": "@@ -0,0 +1,99 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.range.Range\n+---@field start vim.pos.Pos\n+---@field end_ vim.pos.Pos\n+---@overload fun(range: Range): vim.range.Range Only for compatibility\n+---@overload fun(start: vim.pos.Pos, end_: vim.pos.Pos): vim.range.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.range.Range\n+local Range = {}\n+Range.__index = Range\n+\n+---@package\n+---@overload fun(range: Range)\n+---@overload fun(start: vim.pos.Pos, end_: vim.pos.Pos): vim.range.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.range.Range\n+function Range:new(...)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2244292210",
            "id": 2244292210,
            "in_reply_to_id": 2244251191,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM6FxS5y",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 15,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": 15,
            "pull_request_review_id": 3073906086,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244292210/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T03:59:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244292210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2244373229"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244373229"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I see, I understand now.\r\nHowever, I feel that resolving this mismatch should be done on the overload side.\r\n\r\n```lua\r\nsetmetatable(Pos, {\r\n  __call = function(_, ...)\r\n    return Pos.new(...)\r\n  end\r\n})\r\n```\r\n",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T05:18:37Z",
            "diff_hunk": "@@ -0,0 +1,99 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.range.Range\n+---@field start vim.pos.Pos\n+---@field end_ vim.pos.Pos\n+---@overload fun(range: Range): vim.range.Range Only for compatibility\n+---@overload fun(start: vim.pos.Pos, end_: vim.pos.Pos): vim.range.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.range.Range\n+local Range = {}\n+Range.__index = Range\n+\n+---@package\n+---@overload fun(range: Range)\n+---@overload fun(start: vim.pos.Pos, end_: vim.pos.Pos): vim.range.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.range.Range\n+function Range:new(...)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2244373229",
            "id": 2244373229,
            "in_reply_to_id": 2244251191,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM6Fxmrt",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 15,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": 15,
            "pull_request_review_id": 3074005940,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244373229/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T05:18:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244373229",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/629908?v=4",
                "events_url": "https://api.github.com/users/hrsh7th/events{/privacy}",
                "followers_url": "https://api.github.com/users/hrsh7th/followers",
                "following_url": "https://api.github.com/users/hrsh7th/following{/other_user}",
                "gists_url": "https://api.github.com/users/hrsh7th/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hrsh7th",
                "id": 629908,
                "login": "hrsh7th",
                "node_id": "MDQ6VXNlcjYyOTkwOA==",
                "organizations_url": "https://api.github.com/users/hrsh7th/orgs",
                "received_events_url": "https://api.github.com/users/hrsh7th/received_events",
                "repos_url": "https://api.github.com/users/hrsh7th/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hrsh7th/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hrsh7th/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hrsh7th",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2244975996"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244975996"
                }
            },
            "author_association": "MEMBER",
            "body": "One of the biggest pain points I noticed when it comes to working with ranges is that it is very tricky to work with blockwise selections/ranges/regions. So maybe making `Range` have `mode` field that can be `v` / `V` / `\\22` or `c` / `l` / `b` for charwise / linewise / blockwise range?\r\n\r\nThis is a big complication for all the methods (both present comparison / intersection and future), but this would make this abstraction *much* more valuable.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T10:23:43Z",
            "diff_hunk": "@@ -0,0 +1,99 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.range.Range\n+---@field start vim.pos.Pos\n+---@field end_ vim.pos.Pos",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2244975996",
            "id": 2244975996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Fz518",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": null,
            "pull_request_review_id": 3074820443,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244975996/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T10:23:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244975996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2244988256"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244988256"
                }
            },
            "author_association": "MEMBER",
            "body": "One of the pain points with positions I noticed is to work when they are (deliberately) outside of available text (like with 'virtualedit', which might be common with blockwise selections). I.e. past the end of line.\r\n\r\nNot sure if this fits `Pos` abstraction or methods it might be input for, though.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T10:27:24Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+---@class vim.pos.Pos\n+---@field row integer 0-based\n+---@field col integer 0-based\n+---@field offset? integer Only for compatibility",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2244988256",
            "id": 2244988256,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Fz81g",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/_pos.lua",
            "position": null,
            "pull_request_review_id": 3074837586,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244988256/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T10:27:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244988256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2244989309"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244989309"
                }
            },
            "author_association": "MEMBER",
            "body": "Region should be its own structure (table of ranges)",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T10:27:57Z",
            "diff_hunk": "@@ -0,0 +1,99 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.range.Range\n+---@field start vim.pos.Pos\n+---@field end_ vim.pos.Pos",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2244989309",
            "id": 2244989309,
            "in_reply_to_id": 2244975996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Fz9F9",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": null,
            "pull_request_review_id": 3074839067,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244989309/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T10:27:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2244989309",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2245072185"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245072185"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've noticed this issue, but I think the implementation here is fine for intersection/comparing between block ranges, unless we want to merge/comparison between regular ranges and block ranges, but I think this might produce an irregular selection that can't be represented by a `Range` with only two `Pos`. In this case, a list of ranges might be appropriate.\r\n\r\nWe may add such functions in the future. Since this simple `Range` can be regarded as a lower-level API, I feel that the current design will not hinder future implementations, so it is not blocked for now.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T11:05:33Z",
            "diff_hunk": "@@ -0,0 +1,99 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.range.Range\n+---@field start vim.pos.Pos\n+---@field end_ vim.pos.Pos",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2245072185",
            "id": 2245072185,
            "in_reply_to_id": 2244975996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6F0RU5",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": null,
            "pull_request_review_id": 3074956395,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245072185/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T11:05:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245072185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2245095107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245095107"
                }
            },
            "author_association": "MEMBER",
            "body": "> but I think this might produce an irregular selection that can't be represented by a `Range` with only two `Pos`\r\n\r\nA blockwise selection is defined only by two opposite positions: top-left + bottom-right or top-right + bottom-left. This follows from how it is created manually. So at least from the usage perspective there is no need for a list and it fits in a single data structure.\r\n\r\nWhether to call it range/region/selection/chunk is a question of semantics and the same for ",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T11:17:45Z",
            "diff_hunk": "@@ -0,0 +1,99 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.range.Range\n+---@field start vim.pos.Pos\n+---@field end_ vim.pos.Pos",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2245095107",
            "id": 2245095107,
            "in_reply_to_id": 2244975996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6F0W7D",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": null,
            "pull_request_review_id": 3074988259,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245095107/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T11:17:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245095107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2245149465"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245149465"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Blockwise selections could also be presented by two `Pos` like regular selections because they are rectangles; only two identical row-col pairs need to be recorded. So I think the abstractions here should be sufficient because an intersection of rectangles is also a rectangle, and still easy to deal with.\r\n\r\nBut that is not true for intersections of blockwise selections and regular selections. Imagine randomly tearing a piece of A4 paper; it is what the intersection selection may look like. The point is they are irregular, and we need a table of ranges to represent them, no matter what it is named.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T11:43:51Z",
            "diff_hunk": "@@ -0,0 +1,99 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.range.Range\n+---@field start vim.pos.Pos\n+---@field end_ vim.pos.Pos",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2245149465",
            "id": 2245149465,
            "in_reply_to_id": 2244975996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6F0kMZ",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": null,
            "pull_request_review_id": 3075062835,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245149465/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T11:43:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245149465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2245185031"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245185031"
                }
            },
            "author_association": "MEMBER",
            "body": "This module specifically uses arrays for performance reasons as treesitter needs to do lots of processing for injections.\n\nThis code now invokes a constructor twice, allocating around 4 tables just to do a comparison. Before it was just comparing 4 numbers.\n\nI think this module should be left as it is. If code reuse is possible, then fine, but it shouldn't be done through a heavier abstraction object.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T12:01:42Z",
            "diff_hunk": "@@ -25,52 +27,39 @@ local M = {}\n \n ---@alias Range Range2|Range4|Range6\n \n----@param a_row integer\n----@param a_col integer\n----@param b_row integer\n----@param b_col integer\n----@return integer\n---- 1: a > b\n---- 0: a == b\n---- -1: a < b\n-local function cmp_pos(a_row, a_col, b_row, b_col)\n-  if a_row == b_row then\n-    if a_col > b_col then\n-      return 1\n-    elseif a_col < b_col then\n-      return -1\n-    else\n-      return 0\n-    end\n-  elseif a_row > b_row then\n-    return 1\n-  end\n-\n-  return -1\n-end\n-\n M.cmp_pos = {\n-  lt = function(...)\n-    return cmp_pos(...) == -1\n+  lt = function(a_row, a_col, b_row, b_col)\n+    return pos(a_row, a_col) < pos(b_row, b_col)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2245185031",
            "id": 2245185031,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6F0s4H",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 32,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_range.lua",
            "position": null,
            "pull_request_review_id": 3075110962,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245185031/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T12:02:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245185031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2245231412"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245231412"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I think this module should be left as it is. If code reuse is possible, then fine, but it shouldn't be done through a heavier abstraction object.\r\n\r\nI will revert it to its previous version and then delete it when the `Range` to `vim.Range` refactoring is complete. This way, temporary tables won't be created frequently.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-07-31T12:22:14Z",
            "diff_hunk": "@@ -25,52 +27,39 @@ local M = {}\n \n ---@alias Range Range2|Range4|Range6\n \n----@param a_row integer\n----@param a_col integer\n----@param b_row integer\n----@param b_col integer\n----@return integer\n---- 1: a > b\n---- 0: a == b\n---- -1: a < b\n-local function cmp_pos(a_row, a_col, b_row, b_col)\n-  if a_row == b_row then\n-    if a_col > b_col then\n-      return 1\n-    elseif a_col < b_col then\n-      return -1\n-    else\n-      return 0\n-    end\n-  elseif a_row > b_row then\n-    return 1\n-  end\n-\n-  return -1\n-end\n-\n M.cmp_pos = {\n-  lt = function(...)\n-    return cmp_pos(...) == -1\n+  lt = function(a_row, a_col, b_row, b_col)\n+    return pos(a_row, a_col) < pos(b_row, b_col)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2245231412",
            "id": 2245231412,
            "in_reply_to_id": 2245185031,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6F04M0",
            "original_commit_id": "93f8501ed971509c8279cffb8e14fee35096a2c2",
            "original_line": 32,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_range.lua",
            "position": null,
            "pull_request_review_id": 3075177917,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245231412/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-31T12:22:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2245231412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2250023699"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250023699"
                }
            },
            "author_association": "MEMBER",
            "body": "`:help dev-naming`\n```suggestion\nfunction Range.has(a, b)\n```",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-08-03T15:39:02Z",
            "diff_hunk": "@@ -0,0 +1,85 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.Range\n+---@field start vim.Pos Start position.\n+---@field end_ vim.Pos End position, exclusive.\n+---@overload fun(start: vim.Pos, end_: vim.Pos): vim.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.Range\n+local Range = {}\n+Range.__index = Range\n+\n+---@package\n+---@overload fun(start: vim.Pos, end_: vim.Pos): vim.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.Range\n+function Range:new(...)\n+  local args = { ... }\n+  ---@type vim.Pos, vim.Pos\n+  local start, end_\n+\n+  if #args == 2 then\n+    ---@cast args [vim.Pos, vim.Pos]\n+    start, end_ = unpack(args)\n+  elseif #args == 4 then\n+    ---@cast args [integer, integer, integer, integer]\n+    start, end_ = pos(unpack(args, 1, 2)), pos(unpack(args, 3, 4))\n+  else\n+    assert(false)\n+  end\n+\n+  ---@class vim.Range\n+  self = setmetatable({}, self)\n+  self.start = start\n+  self.end_ = end_\n+  return self\n+end\n+\n+---@param a vim.Range\n+---@param b vim.Range\n+function Range.contains(a, b)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2250023699",
            "id": 2250023699,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6GHKMT",
            "original_commit_id": "3bd3a84a9748da6ec8250e78ccc99e501cc4d711",
            "original_line": 38,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": null,
            "pull_request_review_id": 3082221726,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250023699/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-03T15:39:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250023699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2250024741"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250024741"
                }
            },
            "author_association": "MEMBER",
            "body": "is this analogous to `version.intersect()` ? if so, let's use the same name. also a docstring similar to version.intersect() will help.\n https://github.com/neovim/neovim/blob/78f4994627b7d9c3b85f30028fe55ff38024a39d/runtime/lua/vim/version.lua#L371\n\n\n```suggestion\nfunction Range.intersect(a, b)\n```",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-08-03T15:41:50Z",
            "diff_hunk": "@@ -0,0 +1,85 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.Range\n+---@field start vim.Pos Start position.\n+---@field end_ vim.Pos End position, exclusive.\n+---@overload fun(start: vim.Pos, end_: vim.Pos): vim.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.Range\n+local Range = {}\n+Range.__index = Range\n+\n+---@package\n+---@overload fun(start: vim.Pos, end_: vim.Pos): vim.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.Range\n+function Range:new(...)\n+  local args = { ... }\n+  ---@type vim.Pos, vim.Pos\n+  local start, end_\n+\n+  if #args == 2 then\n+    ---@cast args [vim.Pos, vim.Pos]\n+    start, end_ = unpack(args)\n+  elseif #args == 4 then\n+    ---@cast args [integer, integer, integer, integer]\n+    start, end_ = pos(unpack(args, 1, 2)), pos(unpack(args, 3, 4))\n+  else\n+    assert(false)\n+  end\n+\n+  ---@class vim.Range\n+  self = setmetatable({}, self)\n+  self.start = start\n+  self.end_ = end_\n+  return self\n+end\n+\n+---@param a vim.Range\n+---@param b vim.Range\n+function Range.contains(a, b)\n+  return a.start <= b.start and a.end_ >= b.end_\n+end\n+\n+---@param a vim.Range\n+---@param b vim.Range\n+function Range.intercepts(a, b)\n+  return a.end_ > b.start and a.start < b.end_\n+end\n+\n+---@param a vim.Range\n+---@param b vim.Range\n+function Range.intersection(a, b)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2250024741",
            "id": 2250024741,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6GHKcl",
            "original_commit_id": "3bd3a84a9748da6ec8250e78ccc99e501cc4d711",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": null,
            "path": "runtime/lua/vim/_range.lua",
            "position": null,
            "pull_request_review_id": 3082222530,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250024741/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-03T15:41:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250024741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2250026450"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250026450"
                }
            },
            "author_association": "MEMBER",
            "body": "docstring will help. unlike \"contains\" (`has()`), it looks like this one checks if they \"touch\" but do not fully overlap.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-08-03T15:47:11Z",
            "diff_hunk": "@@ -0,0 +1,85 @@\n+local pos = require('vim._pos')\n+\n+---@class vim.Range\n+---@field start vim.Pos Start position.\n+---@field end_ vim.Pos End position, exclusive.\n+---@overload fun(start: vim.Pos, end_: vim.Pos): vim.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.Range\n+local Range = {}\n+Range.__index = Range\n+\n+---@package\n+---@overload fun(start: vim.Pos, end_: vim.Pos): vim.Range\n+---@overload fun(start_row: integer, start_col: integer, end_row: integer, end_col: integer): vim.Range\n+function Range:new(...)\n+  local args = { ... }\n+  ---@type vim.Pos, vim.Pos\n+  local start, end_\n+\n+  if #args == 2 then\n+    ---@cast args [vim.Pos, vim.Pos]\n+    start, end_ = unpack(args)\n+  elseif #args == 4 then\n+    ---@cast args [integer, integer, integer, integer]\n+    start, end_ = pos(unpack(args, 1, 2)), pos(unpack(args, 3, 4))\n+  else\n+    assert(false)\n+  end\n+\n+  ---@class vim.Range\n+  self = setmetatable({}, self)\n+  self.start = start\n+  self.end_ = end_\n+  return self\n+end\n+\n+---@param a vim.Range\n+---@param b vim.Range\n+function Range.contains(a, b)\n+  return a.start <= b.start and a.end_ >= b.end_\n+end\n+\n+---@param a vim.Range\n+---@param b vim.Range\n+function Range.intercepts(a, b)\n+  return a.end_ > b.start and a.start < b.end_",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2250026450",
            "id": 2250026450,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6GHK3S",
            "original_commit_id": "3bd3a84a9748da6ec8250e78ccc99e501cc4d711",
            "original_line": 45,
            "original_position": 45,
            "original_start_line": 44,
            "path": "runtime/lua/vim/_range.lua",
            "position": null,
            "pull_request_review_id": 3082223937,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250026450/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-03T15:47:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250026450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2250027911"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250027911"
                }
            },
            "author_association": "MEMBER",
            "body": "Not a blocker I guess since this is experimental, but we need to be very clear about the \"canonical\" semantics of the position. Because translating to/from treesitter/lsp/editor/marks/etc positions requires knowing the underlying semantics of `vim.pos`.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-08-03T15:51:15Z",
            "diff_hunk": "@@ -0,0 +1,61 @@\n+---@class vim.Pos\n+---@field row integer 0-based byte index.\n+---@field col integer 0-based byte index.\n+---@overload fun(row: integer, col: integer): vim.Pos\n+local Pos = {}\n+Pos.__index = Pos\n+\n+---@package\n+---@param row integer\n+---@param col integer\n+function Pos:new(row, col)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2250027911",
            "id": 2250027911,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6GHLOH",
            "original_commit_id": "3bd3a84a9748da6ec8250e78ccc99e501cc4d711",
            "original_line": 11,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/_pos.lua",
            "position": null,
            "pull_request_review_id": 3082225091,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250027911/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-03T15:51:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250027911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2250030115"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250030115"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm just considering this now. If this module is expected to convert between arbitrary positions, then we'd better include `bufnr` in `Pos` as well. Just determining the encoding of the string is not enough because we need to know the specific content to convert between positions unless we always pass `bufnr` as a parameter.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-08-03T15:58:00Z",
            "diff_hunk": "@@ -0,0 +1,61 @@\n+---@class vim.Pos\n+---@field row integer 0-based byte index.\n+---@field col integer 0-based byte index.\n+---@overload fun(row: integer, col: integer): vim.Pos\n+local Pos = {}\n+Pos.__index = Pos\n+\n+---@package\n+---@param row integer\n+---@param col integer\n+function Pos:new(row, col)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2250030115",
            "id": 2250030115,
            "in_reply_to_id": 2250027911,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6GHLwj",
            "original_commit_id": "3bd3a84a9748da6ec8250e78ccc99e501cc4d711",
            "original_line": 11,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/_pos.lua",
            "position": null,
            "pull_request_review_id": 3082226846,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250030115/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-03T15:58:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250030115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2250031302"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250031302"
                }
            },
            "author_association": "MEMBER",
            "body": "yeah #25509 specifies an optional `buf?` field. We will likely want \"window\" and \"screen\" positions too, so may need `win?` and `editor?` fields.\r\n\r\nAnd whether these fields are required is decided by the `kind` ?\r\n\r\nNote: this PR doesn't need to add all the treesitter/marks/etc translation, but probably at least the above fields should be decided.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-08-03T16:02:47Z",
            "diff_hunk": "@@ -0,0 +1,61 @@\n+---@class vim.Pos\n+---@field row integer 0-based byte index.\n+---@field col integer 0-based byte index.\n+---@overload fun(row: integer, col: integer): vim.Pos\n+local Pos = {}\n+Pos.__index = Pos\n+\n+---@package\n+---@param row integer\n+---@param col integer\n+function Pos:new(row, col)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2250031302",
            "id": 2250031302,
            "in_reply_to_id": 2250027911,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6GHMDG",
            "original_commit_id": "3bd3a84a9748da6ec8250e78ccc99e501cc4d711",
            "original_line": 11,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/_pos.lua",
            "position": null,
            "pull_request_review_id": 3082227873,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250031302/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-03T16:03:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250031302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35109#discussion_r2250032589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250032589"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'll add the lsp position conversion since my other two feature PRs can use it.",
            "commit_id": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
            "created_at": "2025-08-03T16:06:36Z",
            "diff_hunk": "@@ -0,0 +1,61 @@\n+---@class vim.Pos\n+---@field row integer 0-based byte index.\n+---@field col integer 0-based byte index.\n+---@overload fun(row: integer, col: integer): vim.Pos\n+local Pos = {}\n+Pos.__index = Pos\n+\n+---@package\n+---@param row integer\n+---@param col integer\n+function Pos:new(row, col)",
            "html_url": "https://github.com/neovim/neovim/pull/35109#discussion_r2250032589",
            "id": 2250032589,
            "in_reply_to_id": 2250027911,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6GHMXN",
            "original_commit_id": "3bd3a84a9748da6ec8250e78ccc99e501cc4d711",
            "original_line": 11,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/_pos.lua",
            "position": null,
            "pull_request_review_id": 3082229571,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250032589/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-03T16:06:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2250032589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "While the implementation in this PR is ready to be leveraged elsewhere to make operations like position comparisons more convenient, I think it might be more powerful if we standardize this structure, but we need to decide the following:\r\n\r\nFor `Pos`:\r\n- Should `bufnr` be added to `Pos` and made required?\r\n- What encoding should `Pos.col` be? Should we treat it as a byte index? I'm not familiar with encoding-related issues. Also, if we specify a unique encoding, we can remove the requirement to pass `bufr`.\r\n\r\nFor `Range`:\r\n- Should `Range.end_` be inclusive or exclusive? In the case of exclusive, a common use is to use `{ start = { row = 1, col = 0 }, end = { row = 2, col = 0 }` to represent the entire row with `row == 1`. This is very common in LSP, but I don't know much about tree-sitter, so I might need to consider the needs of tree-sitter.\r\n\r\nI may not have seen enough use cases, so I hope for more opinions. After solving the above problems, we can start exposing it as a public API and add some functions to make it more useful.",
            "created_at": "2025-07-31T05:17:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/35109#issuecomment-3138589959",
            "id": 3138589959,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35109",
            "node_id": "IC_kwDOAPphoM67ExUH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3138589959/reactions"
            },
            "updated_at": "2025-07-31T12:49:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3138589959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "For the standard definition I mentioned above, I will define `row` and `col` of `vim.Pos` as 0-based byte index, and `end_` in `vim.Range` as exclusive, which is consistent with the usage of most of our APIs such as `set_extmark`/`set_text`.\r\n\r\nIf we need to support different encodings to make this more convenient, we could add a separate optional field like `encoding`  (or just by `bufnr`) in the future to indicate that, while still defaulting to treating it as a byte index, so this would be compatible with the current situation, thus not block for now.",
            "created_at": "2025-07-31T12:44:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/35109#issuecomment-3139825342",
            "id": 3139825342,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35109",
            "node_id": "IC_kwDOAPphoM67Je6-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3139825342/reactions"
            },
            "updated_at": "2025-07-31T12:44:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3139825342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This doesn't close https://github.com/neovim/neovim/issues/25509 but it's extremely helpful to start in that direction, thank you!\r\n\r\nWill keep https://github.com/neovim/neovim/issues/25509 open to track the \"translation\" of lsp/marks/treesitter/etc position kinds.\r\n",
            "created_at": "2025-08-03T15:55:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/35109#issuecomment-3148510475",
            "id": 3148510475,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35109",
            "node_id": "IC_kwDOAPphoM67qnUL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148510475/reactions"
            },
            "updated_at": "2025-08-03T15:55:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3148510475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35109/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35109/commits",
    "created_at": "2025-07-30T14:40:05Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35109.diff",
    "draft": false,
    "head": {
        "label": "ofseed:feat-pos",
        "ref": "feat-pos",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ofseed/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ofseed/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ofseed/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ofseed/neovim/branches{/branch}",
            "clone_url": "https://github.com/ofseed/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ofseed/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ofseed/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ofseed/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ofseed/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ofseed/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ofseed/neovim/contributors",
            "created_at": "2021-11-30T18:13:03Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ofseed/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ofseed/neovim/downloads",
            "events_url": "https://api.github.com/repos/ofseed/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ofseed/neovim/forks",
            "full_name": "ofseed/neovim",
            "git_commits_url": "https://api.github.com/repos/ofseed/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ofseed/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ofseed/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ofseed/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ofseed/neovim/hooks",
            "html_url": "https://github.com/ofseed/neovim",
            "id": 433537354,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ofseed/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ofseed/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ofseed/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ofseed/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ofseed/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ofseed/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ofseed/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ofseed/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGddBSg",
            "notifications_url": "https://api.github.com/repos/ofseed/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ofseed/neovim/pulls{/number}",
            "pushed_at": "2025-08-04T06:51:17Z",
            "releases_url": "https://api.github.com/repos/ofseed/neovim/releases{/id}",
            "size": 326535,
            "ssh_url": "git@github.com:ofseed/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ofseed/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ofseed/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ofseed/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ofseed/neovim/subscription",
            "svn_url": "https://github.com/ofseed/neovim",
            "tags_url": "https://api.github.com/repos/ofseed/neovim/tags",
            "teams_url": "https://api.github.com/repos/ofseed/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ofseed/neovim/git/trees{/sha}",
            "updated_at": "2025-08-04T02:56:15Z",
            "url": "https://api.github.com/repos/ofseed/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
            "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
            "followers_url": "https://api.github.com/users/ofseed/followers",
            "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ofseed",
            "id": 61115159,
            "login": "ofseed",
            "node_id": "MDQ6VXNlcjYxMTE1MTU5",
            "organizations_url": "https://api.github.com/users/ofseed/orgs",
            "received_events_url": "https://api.github.com/users/ofseed/received_events",
            "repos_url": "https://api.github.com/users/ofseed/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ofseed",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35109",
    "id": 2707431934,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35109",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "f9b9c94f3953b70bbaa2ff3cae2b27a21926efd0",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6hYCH-",
    "number": 35109,
    "patch_url": "https://github.com/neovim/neovim/pull/35109.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35109/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8c2fd0b3d41556ab6266d1d2794c84a25ed83f91",
    "title": "feat(lua): add `vim.pos`/`vim.range`",
    "updated_at": "2025-08-04T06:51:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35109",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
        "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
        "followers_url": "https://api.github.com/users/ofseed/followers",
        "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
        "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ofseed",
        "id": 61115159,
        "login": "ofseed",
        "node_id": "MDQ6VXNlcjYxMTE1MTU5",
        "organizations_url": "https://api.github.com/users/ofseed/orgs",
        "received_events_url": "https://api.github.com/users/ofseed/received_events",
        "repos_url": "https://api.github.com/users/ofseed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ofseed",
        "user_view_type": "public"
    }
}