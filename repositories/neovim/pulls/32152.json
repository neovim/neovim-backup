{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32152/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32152/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32152"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32152"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32152/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32152"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/e40b8c1d10bb21578de529d6fc465d7fe3fc483d"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5870,
            "forks_count": 5870,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1861,
            "open_issues_count": 1861,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-17T23:14:59Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 308398,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 86255,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-18T02:05:55Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 86255,
            "watchers_count": 86255,
            "web_commit_signoff_required": false
        },
        "sha": "ac768996b295fe58256444a258911ec0fb9adc3f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "**vim-patch:partial:9.1.1084: Unable to persistently ignore events in a window and its buffers**\r\n\r\nProblem:  Unable to persistently ignore events in a window and its buffers.\r\nSolution: Add 'eventignorewin' option to ignore events in a window and buffer\r\n          (Luuk van Baal)\r\n\r\nAdd the window-local 'eventignorewin' option that is analogous to\r\n'eventignore', but applies to a certain window and its buffers. Identify\r\nevents that should be allowed in 'eventignorewin', adapt \"auto_event\"\r\nand \"event_tab\" to encode this information. Window context is not passed\r\nonto apply_autocmds_group(), and when to ignore an event is a bit\r\nambiguous when \"buf\" is not \"curbuf\", rather than a large refactor, only\r\nignore an event when all windows into \"buf\" are ignoring the event.\r\n\r\nhttps://github.com/vim/vim/commit/b7147f8236c962cd74d1ce028d9106f1c449ea6c\r\n\r\n**vim-patch:9.1.1102: tests: Test_WinScrolled_Resized_eiw() uses wrong filename**\r\n\r\nProblem:  tests: Test_WinScrolled_Resized_eiw() uses wrong filename\r\n          (Luuk van Baal, after v9.1.1084)\r\nSolution: Rename the filename to something more unique\r\n\r\nhttps://github.com/vim/vim/commit/bfc7719e48ffc365ee0a1bd1888120d26b6365f0\r\n\r\nResolve #32055",
    "closed_at": "2025-02-12T10:01:07Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32152#discussion_r1950122591"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32152"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950122591"
                }
            },
            "author_association": "MEMBER",
            "body": "Since you don't need to edit the file, you can just use `exec()` without writing the script to a file:\r\n```suggestion\r\n  n.exec([[\r\n    call setline(1, ['foo']->repeat(32))\r\n    set eventignorewin=WinScrolled,WinResized\r\n    split\r\n    let [g:afile,g:resized,g:scrolled] = ['none',0,0]\r\n    au WinScrolled * let [g:afile,g:scrolled] = [expand('<afile>'),g:scrolled+1]\r\n    au WinResized * let [g:afile,g:resized] = [expand('<afile>'),g:resized+1]\r\n  ]])\r\n```",
            "commit_id": "e40b8c1d10bb21578de529d6fc465d7fe3fc483d",
            "created_at": "2025-02-11T01:40:58Z",
            "diff_hunk": "@@ -40,3 +41,60 @@ it('no E440 in quickfix window when autocommand invalidates undo', function()\n   feed('G')\n   eq('', api.nvim_get_vvar('errmsg'))\n end)\n+\n+-- oldtest: Test_WinScrolled_Resized_eiw()\n+it('WinScrolled and WinResized events can be ignored in a window', function()\n+  local screen = Screen.new()\n+  write_file(\n+    'Xtest_winscrolled_mouse',\n+    [[\n+    call setline(1, ['foo']->repeat(32))\n+    set eventignorewin=WinScrolled,WinResized\n+    split\n+    let [g:afile,g:resized,g:scrolled] = ['none',0,0]\n+    au WinScrolled * let [g:afile,g:scrolled] = [expand('<afile>'),g:scrolled+1]\n+    au WinResized * let [g:afile,g:resized] = [expand('<afile>'),g:resized+1]\n+    ]]\n+  )\n+  finally(function()\n+    os.remove('Xtest_winscrolled_mouse')\n+  end)\n+  command('so Xtest_winscrolled_mouse')",
            "html_url": "https://github.com/neovim/neovim/pull/32152#discussion_r1950122591",
            "id": 1950122591,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50PIJf",
            "original_commit_id": "5d816042a7af733e6ee319000eb89ec7231c31e2",
            "original_line": 62,
            "original_position": 29,
            "original_start_line": 48,
            "path": "test/functional/legacy/autocmd_spec.lua",
            "position": null,
            "pull_request_review_id": 2607518326,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32152",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950122591/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-11T01:40:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950122591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32152#discussion_r1950146615"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32152"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950146615"
                }
            },
            "author_association": "MEMBER",
            "body": "This annotation suggests that an event can have multiple aliases, but both `gen_events.lua` and `gen_vimvim.lua` only support a single alias per event. Perhaps you should add `ipairs()` to support multiple aliases?",
            "commit_id": "e40b8c1d10bb21578de529d6fc465d7fe3fc483d",
            "created_at": "2025-02-11T02:15:56Z",
            "diff_hunk": "@@ -1,156 +1,139 @@\n return {\n+  --- @type [string, string[], boolean][] List of [eventname, aliases, window-local event] tuples.\n   events = {",
            "html_url": "https://github.com/neovim/neovim/pull/32152#discussion_r1950146615",
            "id": 1950146615,
            "line": 3,
            "node_id": "PRRC_kwDOAPphoM50POA3",
            "original_commit_id": "5d816042a7af733e6ee319000eb89ec7231c31e2",
            "original_line": 3,
            "original_position": 3,
            "original_start_line": 2,
            "path": "src/nvim/auevents.lua",
            "position": 3,
            "pull_request_review_id": 2607550807,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32152",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950146615/reactions"
            },
            "side": "RIGHT",
            "start_line": 2,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-11T02:15:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950146615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32152#discussion_r1950518762"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32152"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950518762"
                }
            },
            "author_association": "MEMBER",
            "body": "This is a bit strange. It only initializes the first element of `autocmds[]` to `KV_INITIAL_VALUE`, although `KV_INITIAL_VALUE` is all zero anyway...",
            "commit_id": "e40b8c1d10bb21578de529d6fc465d7fe3fc483d",
            "created_at": "2025-02-11T09:39:54Z",
            "diff_hunk": "@@ -16,46 +15,28 @@ names_tgt:write([[\n static const struct event_name {\n   size_t len;\n   char *name;\n-  event_T event;\n+  int event;\n } event_names[] = {]])\n \n+local aliases = 0\n for i, event in ipairs(events) do\n-  enum_tgt:write(('\\n  EVENT_%s = %u,'):format(event:upper(), i - 1))\n-  names_tgt:write(('\\n  {%u, \"%s\", EVENT_%s},'):format(#event, event, event:upper()))\n+  enum_tgt:write(('\\n  EVENT_%s = %u,'):format(event[1]:upper(), i + aliases - 1))\n+  -- Events with positive keys aren't allowed in 'eventignorewin'.\n+  local event_int = ('%sEVENT_%s'):format(event[3] and '-' or '', event[1]:upper())\n+  names_tgt:write(('\\n  {%u, \"%s\", %s},'):format(#event[1], event[1], event_int))\n+  for _, alias in ipairs(event[2]) do\n+    aliases = aliases + 1\n+    names_tgt:write(('\\n  {%u, \"%s\", %s},'):format(#alias, alias, event_int))\n+    enum_tgt:write(('\\n  EVENT_%s = %u,'):format(alias:upper(), i + aliases - 1))\n+  end\n   if i == #events then -- Last item.\n-    enum_tgt:write(('\\n  NUM_EVENTS = %u,'):format(i))\n+    enum_tgt:write(('\\n  NUM_EVENTS = %u,'):format(i + aliases))\n   end\n end\n \n-for _, v in ipairs(aliases) do\n-  local alias = v[1]\n-  local event = v[2]\n-  names_tgt:write(('\\n  {%u, \"%s\", EVENT_%s},'):format(#alias, alias, event:upper()))\n-end\n-\n-names_tgt:write('\\n  {0, NULL, (event_T)0},')\n+names_tgt:write('\\n  {0, NULL, (event_T)0},\\n};\\n')\n+names_tgt:write('\\nstatic AutoCmdVec autocmds[NUM_EVENTS] = { KV_INITIAL_VALUE };\\n')",
            "html_url": "https://github.com/neovim/neovim/pull/32152#discussion_r1950518762",
            "id": 1950518762,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50Qo3q",
            "original_commit_id": "a22c471fa37d76af782ad0db39338c70056c31d4",
            "original_line": 38,
            "original_position": 43,
            "original_start_line": null,
            "path": "src/nvim/generators/gen_events.lua",
            "position": null,
            "pull_request_review_id": 2608170381,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32152",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950518762/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-11T09:48:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950518762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32152#discussion_r1950735065"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32152"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950735065"
                }
            },
            "author_association": "MEMBER",
            "body": "Strange enough to where we should keep the block I removed here? I made a similar change in https://github.com/vim/vim/pull/16530, mainly because `first/last_autopat` was initialized with a number of elements not equal to `NUM_EVENTS` anyways. I suppose the fact that it is zero-initialized is more obvious with the first element being `NULL` as opposed to `KV_INITIAL_VALUE` though.",
            "commit_id": "e40b8c1d10bb21578de529d6fc465d7fe3fc483d",
            "created_at": "2025-02-11T12:14:18Z",
            "diff_hunk": "@@ -16,46 +15,28 @@ names_tgt:write([[\n static const struct event_name {\n   size_t len;\n   char *name;\n-  event_T event;\n+  int event;\n } event_names[] = {]])\n \n+local aliases = 0\n for i, event in ipairs(events) do\n-  enum_tgt:write(('\\n  EVENT_%s = %u,'):format(event:upper(), i - 1))\n-  names_tgt:write(('\\n  {%u, \"%s\", EVENT_%s},'):format(#event, event, event:upper()))\n+  enum_tgt:write(('\\n  EVENT_%s = %u,'):format(event[1]:upper(), i + aliases - 1))\n+  -- Events with positive keys aren't allowed in 'eventignorewin'.\n+  local event_int = ('%sEVENT_%s'):format(event[3] and '-' or '', event[1]:upper())\n+  names_tgt:write(('\\n  {%u, \"%s\", %s},'):format(#event[1], event[1], event_int))\n+  for _, alias in ipairs(event[2]) do\n+    aliases = aliases + 1\n+    names_tgt:write(('\\n  {%u, \"%s\", %s},'):format(#alias, alias, event_int))\n+    enum_tgt:write(('\\n  EVENT_%s = %u,'):format(alias:upper(), i + aliases - 1))\n+  end\n   if i == #events then -- Last item.\n-    enum_tgt:write(('\\n  NUM_EVENTS = %u,'):format(i))\n+    enum_tgt:write(('\\n  NUM_EVENTS = %u,'):format(i + aliases))\n   end\n end\n \n-for _, v in ipairs(aliases) do\n-  local alias = v[1]\n-  local event = v[2]\n-  names_tgt:write(('\\n  {%u, \"%s\", EVENT_%s},'):format(#alias, alias, event:upper()))\n-end\n-\n-names_tgt:write('\\n  {0, NULL, (event_T)0},')\n+names_tgt:write('\\n  {0, NULL, (event_T)0},\\n};\\n')\n+names_tgt:write('\\nstatic AutoCmdVec autocmds[NUM_EVENTS] = { KV_INITIAL_VALUE };\\n')",
            "html_url": "https://github.com/neovim/neovim/pull/32152#discussion_r1950735065",
            "id": 1950735065,
            "in_reply_to_id": 1950518762,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50RdrZ",
            "original_commit_id": "a22c471fa37d76af782ad0db39338c70056c31d4",
            "original_line": 38,
            "original_position": 43,
            "original_start_line": null,
            "path": "src/nvim/generators/gen_events.lua",
            "position": null,
            "pull_request_review_id": 2608544680,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32152",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950735065/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-11T12:16:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950735065",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32152#discussion_r1950771473"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32152"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950771473"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, or just change it to `0`?",
            "commit_id": "e40b8c1d10bb21578de529d6fc465d7fe3fc483d",
            "created_at": "2025-02-11T12:33:31Z",
            "diff_hunk": "@@ -16,46 +15,28 @@ names_tgt:write([[\n static const struct event_name {\n   size_t len;\n   char *name;\n-  event_T event;\n+  int event;\n } event_names[] = {]])\n \n+local aliases = 0\n for i, event in ipairs(events) do\n-  enum_tgt:write(('\\n  EVENT_%s = %u,'):format(event:upper(), i - 1))\n-  names_tgt:write(('\\n  {%u, \"%s\", EVENT_%s},'):format(#event, event, event:upper()))\n+  enum_tgt:write(('\\n  EVENT_%s = %u,'):format(event[1]:upper(), i + aliases - 1))\n+  -- Events with positive keys aren't allowed in 'eventignorewin'.\n+  local event_int = ('%sEVENT_%s'):format(event[3] and '-' or '', event[1]:upper())\n+  names_tgt:write(('\\n  {%u, \"%s\", %s},'):format(#event[1], event[1], event_int))\n+  for _, alias in ipairs(event[2]) do\n+    aliases = aliases + 1\n+    names_tgt:write(('\\n  {%u, \"%s\", %s},'):format(#alias, alias, event_int))\n+    enum_tgt:write(('\\n  EVENT_%s = %u,'):format(alias:upper(), i + aliases - 1))\n+  end\n   if i == #events then -- Last item.\n-    enum_tgt:write(('\\n  NUM_EVENTS = %u,'):format(i))\n+    enum_tgt:write(('\\n  NUM_EVENTS = %u,'):format(i + aliases))\n   end\n end\n \n-for _, v in ipairs(aliases) do\n-  local alias = v[1]\n-  local event = v[2]\n-  names_tgt:write(('\\n  {%u, \"%s\", EVENT_%s},'):format(#alias, alias, event:upper()))\n-end\n-\n-names_tgt:write('\\n  {0, NULL, (event_T)0},')\n+names_tgt:write('\\n  {0, NULL, (event_T)0},\\n};\\n')\n+names_tgt:write('\\nstatic AutoCmdVec autocmds[NUM_EVENTS] = { KV_INITIAL_VALUE };\\n')",
            "html_url": "https://github.com/neovim/neovim/pull/32152#discussion_r1950771473",
            "id": 1950771473,
            "in_reply_to_id": 1950518762,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50RmkR",
            "original_commit_id": "a22c471fa37d76af782ad0db39338c70056c31d4",
            "original_line": 38,
            "original_position": 43,
            "original_start_line": null,
            "path": "src/nvim/generators/gen_events.lua",
            "position": null,
            "pull_request_review_id": 2608609294,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32152",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950771473/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-11T12:33:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950771473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Does this lock us out ever making this buffer local in the future?",
            "created_at": "2025-01-21T21:04:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2605736045",
            "id": 2605736045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6bUGBt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605736045/reactions"
            },
            "updated_at": "2025-01-21T21:04:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605736045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Does this lock us out ever making this buffer local in the future?\r\n\r\nWithout #29314, yes. Would buffer global-local be better do you think? There are both window and buffer autocommands so both would come with caveats. Conceptually, window-local makes more sense to me, but practically (onebuf_opt💀) a buffer local value might be easier to work with. Unless if we could consider adding two new options, both a buffer- and window-local 'buf/wineventignore', that would remove any ambiguity.\r\n\r\n",
            "created_at": "2025-01-21T21:13:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2605751687",
            "id": 2605751687,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6bUJ2H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605751687/reactions"
            },
            "updated_at": "2025-01-24T11:07:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605751687",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I have no idea tbh. Buffer local is sort of more granular and easier to reason about, so seems like a slightly safer option. With that said, a large majority of global-local options are window local.\n\nMaybe worth asking around vim/vim too?",
            "created_at": "2025-01-21T23:33:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2605955798",
            "id": 2605955798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6bU7rW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605955798/reactions"
            },
            "updated_at": "2025-01-21T23:33:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605955798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Buffer local is sort of more granular and easier to reason about, so seems like a slightly safer option.\r\n\r\nI think so too, but it does seem like it would be a bit of an outlier when compared to current buffer-local options. Maybe justified considering buffer events though, and simple enough to reason about ignoring window events that contain a buffer with 'eventignore' set.\r\n\r\nOpened https://github.com/vim/vim/discussions/16505",
            "created_at": "2025-01-21T23:53:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2605977849",
            "id": 2605977849,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6bVBD5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605977849/reactions"
            },
            "updated_at": "2025-01-21T23:54:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2605977849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for starting to try to solve the problem! I started to see how it behaves even at this early stage.\r\n\r\n```lua\r\nlocal api = vim.api\r\nlocal caseInsensivity = nil\r\n\r\napi.nvim_create_autocmd('CmdLineEnter', {\r\n  group = api.nvim_create_augroup('cmdlineIgnoreCase', {clear = true}),\r\n  pattern = ':',\r\n  callback = function ()\r\n    caseInsensivity = vim.go.ignorecase\r\n    vim.opt.ignorecase = true\r\n  end\r\n})\r\napi.nvim_create_autocmd('CmdLineLeave', {\r\n  group = augroup,\r\n  pattern = ':',\r\n  callback = function ()\r\n    vim.go.ignorecase = caseInsensivity\r\n    caseInsensivity = nil\r\n  end\r\n})\r\n\r\nlocal msgBuf = api.nvim_create_buf(false, true)\r\nlocal msgWin = api.nvim_open_win(msgBuf, false, {\r\n  relative = 'editor',\r\n  row = vim.go.lines - 2,\r\n  col = vim.o.columns,\r\n  width = 60,\r\n  height = 1,\r\n  anchor = 'SE',\r\n  style = 'minimal',\r\n  focusable = false,\r\n  zindex = 999,\r\n  noautocmd = true,\r\n})\r\nvim.wo[msgWin].eventignore = 'all'\r\n\r\napi.nvim_win_set_config(msgWin, {\r\n  title = tostring(msgWin),\r\n  border = 'single',\r\n})\r\n```\r\n\r\nWith this init file cmdline completion result of `:i` does not contain `:Inspect` (unlike without `vim.wo[msgWin].eventignore = 'all'`). It suggests that (confirmed after `:se verbose=9` on both cases) `CmdLineEnter` autocommands are not executed. \r\n\r\nIs it correct for autocommands not related to window (assuming the current state of this PR)? I can try to catch similar behavior on some `Win*` events. ",
            "created_at": "2025-01-22T16:01:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2607638070",
            "id": 2607638070,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6bbWY2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607638070/reactions"
            },
            "updated_at": "2025-01-22T16:52:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607638070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "```lua\r\nlocal api = vim.api\r\nvim.wo.number = true\r\n\r\nlocal function fill()\r\n  api.nvim_buf_set_lines(1, -1, -1, false, {tostring(vim.uv.hrtime()/1000000)})\r\nend\r\n\r\nfor i = 1, vim.o.lines + 1 do\r\n  fill()\r\nend\r\n\r\napi.nvim_create_autocmd('WinScrolled', {\r\n  group = api.nvim_create_augroup('', {clear = true}),\r\n  pattern = '*',\r\n  callback = fill\r\n})\r\n\r\nlocal msgWin = api.nvim_open_win(api.nvim_create_buf(false, true), false, {\r\n  relative = 'editor',\r\n  row = vim.go.lines - 2,\r\n  col = vim.o.columns,\r\n  width = 60,\r\n  height = 1,\r\n  anchor = 'SE',\r\n  style = 'minimal',\r\n  focusable = false,\r\n  zindex = 999,\r\n  noautocmd = true,\r\n})\r\n\r\nvim.wo[msgWin].eventignore = 'WinScrolled'\r\n```\r\n\r\n`vim.wo[msgWin].eventignore = 'WinScrolled'` prevents from executing `WinScrolled` not only on `msgWin`.\r\n\r\n",
            "created_at": "2025-01-22T16:31:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2607713811",
            "id": 2607713811,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6bbo4T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607713811/reactions"
            },
            "updated_at": "2025-01-22T16:52:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607713811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is it correct for autocommands not related to window\r\n\r\nNo that shouldn't happen, in which case we should maybe restrict the allowed values to buffer/window related autocommands only for the local value.\r\n\r\n> vim.wo[msgWin].eventignore = 'WinScrolled' prevents from executing WinScrolled not only on msgWin.\r\n\r\nYeah thanks, need to check that the window still holds the buffer in the `b_wininfo` loop.",
            "created_at": "2025-01-22T16:52:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2607763335",
            "id": 2607763335,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6bb0-H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607763335/reactions"
            },
            "updated_at": "2025-01-22T17:36:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2607763335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This now (partially) ports https://github.com/vim/vim/commit/b7147f82. Partial port because of conflicts with https://github.com/vim/vim/commit/1755a918 and https://github.com/vim/vim/commit/78d742ab, which are as of yet unported. We could port those first but I doubt we would want to. The former adds `autocmd_get()` for which we have `nvim_get_autocmds()`, the latter adds a keyvalue table for an autocmd list which we already generate.",
            "created_at": "2025-02-10T13:31:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2647997752",
            "id": 2647997752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6d1T04",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2647997752/reactions"
            },
            "updated_at": "2025-02-10T13:31:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2647997752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It seems to just work for me at first glance. ",
            "created_at": "2025-02-10T22:43:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2649423469",
            "id": 2649423469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6d6v5t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2649423469/reactions"
            },
            "updated_at": "2025-02-10T22:43:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2649423469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> conflicts with [vim/vim@1755a918](https://github.com/vim/vim/commit/1755a918) and [vim/vim@78d742ab](https://github.com/vim/vim/commit/78d742ab), which are as of yet unported. We could port those first but I doubt we would want to\r\n\r\nYeah we don't want those. Please add them as N/A patches to the commit message in this PR. And optionally mention those functions in `:help nvim-removed`, though we usually don't list all functions there (but maybe we should).\r\n\r\nIf we are missing features in the existing `nvim_*` API functions let's fix that instead.",
            "created_at": "2025-02-11T11:41:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2650560899",
            "id": 2650560899,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6d_FmD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650560899/reactions"
            },
            "updated_at": "2025-02-11T11:42:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650560899",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think the patches should be marked as N/A directly, because their tests are modified in later patches.",
            "created_at": "2025-02-11T11:55:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/32152#issuecomment-2650590525",
            "id": 2650590525,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
            "node_id": "IC_kwDOAPphoM6d_M09",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650590525/reactions"
            },
            "updated_at": "2025-02-11T11:57:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650590525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32152/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32152/commits",
    "created_at": "2025-01-21T20:08:21Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32152.diff",
    "draft": false,
    "head": {
        "label": "luukvbaal:winei",
        "ref": "winei",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/luukvbaal/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/luukvbaal/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/luukvbaal/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/luukvbaal/neovim/branches{/branch}",
            "clone_url": "https://github.com/luukvbaal/neovim.git",
            "collaborators_url": "https://api.github.com/repos/luukvbaal/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/luukvbaal/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/luukvbaal/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/luukvbaal/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/luukvbaal/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/luukvbaal/neovim/contributors",
            "created_at": "2022-07-05T23:21:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/luukvbaal/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/luukvbaal/neovim/downloads",
            "events_url": "https://api.github.com/repos/luukvbaal/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/luukvbaal/neovim/forks",
            "full_name": "luukvbaal/neovim",
            "git_commits_url": "https://api.github.com/repos/luukvbaal/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/luukvbaal/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/luukvbaal/neovim/git/tags{/sha}",
            "git_url": "git://github.com/luukvbaal/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/luukvbaal/neovim/hooks",
            "html_url": "https://github.com/luukvbaal/neovim",
            "id": 510922471,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/luukvbaal/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/luukvbaal/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/luukvbaal/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/luukvbaal/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/luukvbaal/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/luukvbaal/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/luukvbaal/neovim/merges",
            "milestones_url": "https://api.github.com/repos/luukvbaal/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHnQO5w",
            "notifications_url": "https://api.github.com/repos/luukvbaal/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/luukvbaal/neovim/pulls{/number}",
            "pushed_at": "2025-02-17T16:19:17Z",
            "releases_url": "https://api.github.com/repos/luukvbaal/neovim/releases{/id}",
            "size": 306248,
            "ssh_url": "git@github.com:luukvbaal/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/luukvbaal/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/luukvbaal/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/luukvbaal/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/luukvbaal/neovim/subscription",
            "svn_url": "https://github.com/luukvbaal/neovim",
            "tags_url": "https://api.github.com/repos/luukvbaal/neovim/tags",
            "teams_url": "https://api.github.com/repos/luukvbaal/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/luukvbaal/neovim/git/trees{/sha}",
            "updated_at": "2025-02-16T12:47:01Z",
            "url": "https://api.github.com/repos/luukvbaal/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "e40b8c1d10bb21578de529d6fc465d7fe3fc483d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32152",
    "id": 2290757620,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32152",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "locked": false,
    "merge_commit_sha": "82a215cb2dc2b80c1b8bc455c90a928b636d8b3a",
    "merged_at": "2025-02-12T10:01:07Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 166,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 40,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-02-17T22:29:58Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM6Iii_0",
    "number": 32152,
    "patch_url": "https://github.com/neovim/neovim/pull/32152.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32152/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/e40b8c1d10bb21578de529d6fc465d7fe3fc483d",
    "title": "feat(options): add 'eventignorewin'",
    "updated_at": "2025-02-12T10:01:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32152",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal",
        "user_view_type": "public"
    }
}