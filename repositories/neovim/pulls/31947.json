{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31947/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31947/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31947"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31947"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31947/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31947"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8528628ca3904c6a1cf097aad5056290da236029"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5823,
            "forks_count": 5823,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1843,
            "open_issues_count": 1843,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-21T00:10:15Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 304457,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85427,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-21T01:35:11Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85427,
            "watchers_count": 85427,
            "web_commit_signoff_required": false
        },
        "sha": "b06f42b5023b2eec576e5bf22cdacd4c1ee4a939",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: `yx` prefix is not the best fit for \"execute code\" mappings.\r\n\r\nSolution: use `g=` (in the form of `g==` currently) as it is more\r\n  popularized as \"execute code\" mapping.\r\n  For example, in 'tpope/vim-scriptease'.\r\n\r\n------\r\n\r\nAddresses #31904 changes.",
    "closed_at": "2025-01-15T10:36:00Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "What do people think about `gX`? \"x\" as a mnemonic (\"execute\") fits very well, and aligns with `gx`.\r\n",
            "created_at": "2025-01-13T09:43:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2586626840",
            "id": 2586626840,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aLMsY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586626840/reactions"
            },
            "updated_at": "2025-01-13T09:43:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586626840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What do people think about `gX`? \"x\" as a mnemonic (\"execute\") fits very well, and aligns with `gx`.\r\n\r\nI personally prefer `g=` / `g==` as it is more aligned with `=` expression register, is already used for similar context in 'tpope/vim-scriptease', and doesn't require `<Shift>` on regular QWERTY keyboard.\r\n`gX` also works, it feels mostly a matter of taste. It might feel too similar to `gx` which is more like \"*open* link\" and `gX` might feel the same as `gf` / `gF` pair.\r\n\r\nDo you have any specific plans for `g=` or is it not immediately fitting the \"execute\" mnemonic?",
            "created_at": "2025-01-13T10:06:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2586679030",
            "id": 2586679030,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aLZb2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586679030/reactions"
            },
            "updated_at": "2025-01-13T10:06:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586679030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I feel `g==` should be closer to `==` which is for indentation. `gx` already opens the link under the cursor so `gX` is a great fit. I also wouldn't be against somehow using `gx` as an additional behaviour to opening links if that can work in a way that makes sense.",
            "created_at": "2025-01-13T10:49:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2586770752",
            "id": 2586770752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aLv1A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586770752/reactions"
            },
            "updated_at": "2025-01-13T10:50:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586770752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I personally prefer `g=` / `g==` as it is more aligned with `=` expression register, is already used for similar context in 'tpope/vim-scriptease'\r\n\r\nWe can keep \"=\" in our pocket. A minor argument against \"=\" is that in both of those cases, it inserts text at cursor.\r\n\r\n> I also wouldn't be against somehow using `gx` as an additional behaviour to opening links if that can work in a way that makes\r\n\r\nWondering about that too. Or rename the current `gx` functionality to `gX`, so that `gx` can work like an operator. The current `gx` is not an ideal use of such an ergonomic mapping.",
            "created_at": "2025-01-13T12:36:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2586992383",
            "id": 2586992383,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aMl7_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586992383/reactions"
            },
            "updated_at": "2025-01-13T12:36:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586992383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > I personally prefer `g=` / `g==` as it is more aligned with `=` expression register, is already used for similar context in 'tpope/vim-scriptease'\r\n> \r\n> We can keep \"=\" in our pocket. A minor argument against \"=\" is that in both of those cases, it inserts text at cursor.\r\n\r\nYeah, indeed.\r\n\r\nI am fine with either `g=` or `gX` (or even `gx`, but slightly less so as it is a breaking change), just not `yx` or any other one that starts with built-in operator. Waiting for the final decision.",
            "created_at": "2025-01-13T13:03:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2587050278",
            "id": 2587050278,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aM0Em",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587050278/reactions"
            },
            "updated_at": "2025-01-13T13:03:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587050278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To unblock this let's do `gX` for now. If/when we gain a more generic \"execute\" functionality, we can make the case for swapping gx/gX.",
            "created_at": "2025-01-13T13:21:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2587091383",
            "id": 2587091383,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aM-G3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587091383/reactions"
            },
            "updated_at": "2025-01-13T13:21:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587091383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> To unblock this let's do `gX` for now. If/when we gain a more generic \"execute\" functionality, we can make the case for swapping gx/gX.\r\n\r\nJust to clarify: replace `g==` from this PR with `gXX` (*not* plain `gX` to reserve it for future operator), correct?",
            "created_at": "2025-01-13T13:27:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2587105246",
            "id": 2587105246,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aNBfe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587105246/reactions"
            },
            "updated_at": "2025-01-13T13:27:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587105246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Just to clarify: replace `g==` from this PR with `gXX` (_not_ plain `gX` to reserve it for future operator), correct?\r\n\r\nThat's what I was thinking, but it's pretty ugly. I think we may need to move `gx` now, otherwise there are more problems to unwind later.\r\n\r\n## Proposal:\r\n\r\n- move netrw `gx` to `gX` now\r\n- create a mapping for `gx` (exactly) which shows a `moved to gX` message if it times out.\r\n- move `yxx` to `gxx`\r\n- also define a alias for the name we expect to use for \"codeblock\" or \"node? e.g.:\r\n    - `gxic` (\"codeblock\"?), and/or\r\n    - `gxin` (\"node\"?), and/or\r\n    - `gxib` (already exists for \"block\", but in help files maybe we want this as an alias)\r\n    - `gxip` (already exists for \"paragraph\", but in help files maybe we want this as an alias)",
            "created_at": "2025-01-13T13:49:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2587156105",
            "id": 2587156105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aNN6J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587156105/reactions"
            },
            "updated_at": "2025-01-13T13:49:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587156105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> also define a alias for the name we expect to use for \"codeblock\" or \"node? e.g.:\r\n> \r\n>     * `gxic` (\"codeblock\"?), and/or\r\n> \r\n>     * `gxin` (\"node\"?), and/or\r\n> \r\n>     * `gxib` (already exists for \"block\", but in help files maybe we want this as an alias)\r\n> \r\n>     * `gxip` (already exists for \"paragraph\", but in help files maybe we want this as an alias)\r\n\r\nThis can be done separately as a special textobject (Operator-pending mode) in help files and making `gx` a full operator. No need defining Normal mode `gxic`/etc. mappings.\r\n\r\nI'll wait until tomorrow for possibly better direction, as breaking `gx` is kind of bad. If no better ideas (stay with `g==`?), I'll prepare a new PR.",
            "created_at": "2025-01-13T14:00:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2587183324",
            "id": 2587183324,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aNUjc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587183324/reactions"
            },
            "updated_at": "2025-01-13T14:00:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587183324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk, there were discussions on Matrix yesterday with roughly the following final thoughts:\r\n- Both making breaking changes and making default mappings that start with built-in operator (at least currently) should preferably be avoided.\r\n- Built-in \"execute code\" mapping might be a good thing, but it at least needs more work on examples in documentation (as currently many just error) and discussions around safety (maybe make it opt-in via modeline or special code block notation).\r\n- Merging \"execute code\" functionality into `gx` with its current \"open link at cursor\" is possible, but requires decision about order of preference: what if there is an URL inside code block; or user has overridden `gx` mapping and doesn't want it to open URL at cursor.\r\n- To mitigate already done changes relatively without friction, it might be best to indeed use `g==` instead of current `yxx`. It doesn't conflict with built-in operators, doesn't have breaking changes, has a bit more friction than `gxx` or `gx`.",
            "created_at": "2025-01-14T12:01:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2589732296",
            "id": 2589732296,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aXC3I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589732296/reactions"
            },
            "updated_at": "2025-01-14T12:01:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589732296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've mentioned these points on matrix too, but adding them here also.\r\n\r\n> what if there is an URL inside code block; \r\n\r\nPrefer URL since it is the lowest scope. Same answer if codeblock is nested in another codeblock.\r\n\r\n> or user has overridden gx mapping and doesn't want it to open URL at cursor.\r\n\r\nUsers `gx` mapping continues to work. I don't see a problem there.",
            "created_at": "2025-01-14T12:59:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2589852394",
            "id": 2589852394,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aXgLq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589852394/reactions"
            },
            "updated_at": "2025-01-14T12:59:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589852394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > or user has overridden gx mapping and doesn't want it to open URL at cursor.\r\n> \r\n> Users `gx` mapping continues to work. I don't see a problem there.\r\n\r\nNo, user's global `gx` mapping won't work in 'help' files without extra attention as it will be overshadowed by buffer-local `gx` mapping (if \"open URL\" and \"execute code block\" are merged into single buffer-local `gx`).",
            "created_at": "2025-01-14T13:13:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2589879609",
            "id": 2589879609,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aXm05",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589879609/reactions"
            },
            "updated_at": "2025-01-14T13:13:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589879609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> user's global `gx` mapping won't work in 'help' files without extra attention as it will be overshadowed by buffer-local `gx`\r\n\r\nOur default global `gx` can be modified to behave differently in :help buffers, we don't need to define a buffer-local gx.",
            "created_at": "2025-01-14T13:24:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2589904639",
            "id": 2589904639,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aXs7_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589904639/reactions"
            },
            "updated_at": "2025-01-14T13:24:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589904639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Our default global `gx` can be modified to behave differently in :help buffers, we don't need to define a buffer-local gx.\r\n\r\nSure. That would also mean that users are virtually not allowed to remap it as there will be ``Run with `gx` `` at start of each code block and in several places in help files. If they remap, those become misleading.\r\n\r\nAs far as was my understanding, merging this PR with its `g==` deemed to be a good (maybe temporary) compromise.",
            "created_at": "2025-01-14T13:33:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2589923315",
            "id": 2589923315,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aXxfz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589923315/reactions"
            },
            "updated_at": "2025-01-14T13:33:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589923315",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Sure. That would also mean that users are virtually not allowed to remap it as there will be Run with `gx` at start of each code block and in several places in help files. If they remap, those become misleading.\r\n\r\nThis argument apples to any key, including `g==`.",
            "created_at": "2025-01-14T13:36:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2589930827",
            "id": 2589930827,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aXzVL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589930827/reactions"
            },
            "updated_at": "2025-01-14T13:36:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589930827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This argument apples to any key, including `g==`.\r\n\r\nNot in case of buffer-local keymap (as it currently is), which is usually a better way to add a buffer-local functionality  (which it currently is) which *needs* to be present in order to not invalidate other side effects.",
            "created_at": "2025-01-14T13:43:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2589945003",
            "id": 2589945003,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aX2yr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589945003/reactions"
            },
            "updated_at": "2025-01-14T13:43:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589945003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Not in case of buffer-local keymap (as it currently is), which is usually a better way to add a buffer-local functionality (which it currently is) which needs to be present in order to not invalidate other side effects.\r\n\r\nThis seems to contradict:\r\n\r\n> Sure. That would also mean that users are virtually not allowed to remap it as there will be Run with `gx` at start of each code block and in several places in help files. If they remap, those become misleading.\r\n\r\nIf we apply a buffer-local mapping, it will mean \"users are virtually not allowed to remap\", regardless of what key that is.\r\n\r\n",
            "created_at": "2025-01-14T13:51:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2589976555",
            "id": 2589976555,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aX-fr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589976555/reactions"
            },
            "updated_at": "2025-01-14T13:51:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2589976555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Not in case of buffer-local keymap (as it currently is), which is usually a better way to add a buffer-local functionality (which it currently is) which needs to be present in order to not invalidate other side effects.\r\n> \r\n> This seems to contradict:\r\n> \r\n> > Sure. That would also mean that users are virtually not allowed to remap it as there will be Run with `gx` at start of each code block and in several places in help files. If they remap, those become misleading.\r\n> \r\n> If we apply a buffer-local mapping, it will mean \"users are virtually not allowed to remap\", regardless of what key that is.\r\n\r\nThere is no contradiction. The buffer-local mapping is able to fall back in most cases to global mapping action (and *not* to \"open URL under cursor\") if cursor is not inside code block. It can be done via using something like `vim.fn.maparg(lhs, 'n', false, true)` inside buffer-local mapping. This will respect global mapping for any LHS.\r\n\r\nForcing buffer-local mapping fall back or prefer fixed \"open URL under cursor\" action will not respect global mapping for its LHS.",
            "created_at": "2025-01-14T14:53:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2590138744",
            "id": 2590138744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aYmF4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590138744/reactions"
            },
            "updated_at": "2025-01-14T14:53:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590138744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (and not to \"open URL under cursor\")\r\n\r\nRight, so this is _all_ for the use-case of \"user has overridden gx mapping and doesn't want it to open URL at cursor\". I'm not sure this very precise requirement is something we need to get hung up on. I certainly wouldn't want to introduce a new mapping just for it.\r\n\r\n If a user _really_ doesn't want to open a URL at the cursor, then I highly doubt they will want to execute code in code blocks.",
            "created_at": "2025-01-14T15:05:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2590172825",
            "id": 2590172825,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aYuaZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590172825/reactions"
            },
            "updated_at": "2025-01-14T15:05:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590172825",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Right, so this is _all_ for the use-case of \"user has overridden gx mapping and doesn't want it to open URL at cursor\". I'm not sure this very precise requirement is something we need to get hung up on. I certainly wouldn't want to introduce a new mapping just for it.\r\n\r\nThere is certainly *some* misunderstanding here.\r\n\r\nI don't know what you mean by \"... this is _all_ ...\". If you mean this PR, then its **sole** purpose is to not do `yxx` mapping. I don't really care about much else. Replacing it with `g==` was motivated as described in the original comment and was a reaction to [this comment](https://github.com/neovim/neovim/pull/31904#issuecomment-2583487478) indicating that it is an acceptable solution to this particular problem.\r\n\r\nThen came [your comment](https://github.com/neovim/neovim/pull/31947#issuecomment-2586770752) about preferring `gX` or maybe merging it with `gx`. I am also not really against this decision, although not a huge fan of merging since \"open URL\" and \"execute code block\" are different enough things to me.\r\n\r\nThen was a Matrix discussion yesterday which started with me asking more opinions about merging `gx`. The overall summary [is here](https://github.com/neovim/neovim/pull/31947#issuecomment-2589732296). Also during that discussion there were:\r\n- Misunderstanding about the details of merged `gx` implementation (which continued here).\r\n- A comment from @justinmk: \"to avoid the derailment, let's go with `g==` then\". All next conversion was around specifics of code block execution (needed builtin or not, opt-in or not, revert or not, etc.). Hence was my earlier ping in the hope this particular PR gets merged, `yxx` is replaced, and I can be done with it.",
            "created_at": "2025-01-14T15:30:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2590250519",
            "id": 2590250519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aZBYX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590250519/reactions"
            },
            "updated_at": "2025-01-14T15:30:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590250519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The overall summary https://github.com/neovim/neovim/pull/31947#issuecomment-2589732296.\r\n\r\nYes, and I objected to the third bullet of that summary, specifically to \r\n\r\n> or user has overridden gx mapping and doesn't want it to open URL at cursor\r\n\r\nWhich I've concluded in my last comment that I don't think this should be a concern.\r\n\r\nI really only considered the first part of the statement (\"or user has overridden gx mapping\"), but actually your point strictly required the \"and doesn't want it to open URL at cursor\". This did throw me off since that really does seem like an odd requirement to design around.",
            "created_at": "2025-01-14T16:40:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2590501461",
            "id": 2590501461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aZ-pV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590501461/reactions"
            },
            "updated_at": "2025-01-14T16:40:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590501461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I really only considered the first part of the statement (\"or user has overridden gx mapping\"), but actually your point strictly required the \"and doesn't want it to open URL at cursor\". This did throw me off since that really does seem like an odd requirement to design around.\r\n\r\nNot that odd. Here is the use case with hypothetical merged `gx` that falls back to \"open URL under cursor\":\r\n- User for whatever reason decided to globally map `gx` to `<Cmd>echo \"Hello\"<CR>`. Even being aware of the awesome default \"Open URL under cursor\". Why that decision was made should not be a concern, any user mapping customization should be allowed.\r\n- User opens help file and wants to see \"Hello\" printed in command line. Presses `gx` and is very surprised to see \"No code block or URL found\" instead. Becomes very sad and needs to do a research of why this happens which eventually leads to adding something like `au FileType help nnoremap <buffer> gx <Cmd>echo \"Hello\"<CR>`.\r\n- If previous step happens after seeing `` Run with `gx` `` virtual text, then pressing indeed executes code block. User becomes surprised if that's the case and might try to see that it indeed actually works in code blocks. Then either makes decision about how good/bad it is immediately or tries doing that outside of code block (to see if global mapping would still work) returning to previous step.\r\n\r\nIn case of hypothetical merged `gx` that falls back to \"execute global `gx` mapping\" a hypothetical user might be happier a bit more, as outside of code blocks `gx` would still do what is expected.\r\n\r\nNow, *should* this be taken into account? If it requires a relatively concise easily understandable code - I'd say yes. If it requires 50+ extra lines just for this use case - *maybe* not. But having in mind respecting user choices for built-in mapping overrides is a good thing.\r\n\r\nBut this is all hypothetical, as I very much hope that `yxx` can just be replaced with some other keys and you can continue arguing with somebody else about nuances of buffer-local mappings.",
            "created_at": "2025-01-14T17:21:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2590625406",
            "id": 2590625406,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aac5-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590625406/reactions"
            },
            "updated_at": "2025-01-14T17:21:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590625406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We're absolutely going in circles here. From what I can tell, nothing in that above comment is specific to `gx` and applies any mapping we decide.\r\n\r\n---\r\n\r\nHere is the use case with hypothetical merged `g==`:\r\n\r\n- User for whatever reason decided to globally map `g==` to <Cmd>echo \"Hello\"<CR>. ~Even being aware of the awesome default \"Open URL under cursor\".~ **Why that decision was made should not be a concern, any user mapping customization should be allowed.**\r\n- User opens help file and wants to see \"Hello\" printed in command line. Presses `g==` and is very surprised to see \"No code block or URL found\" instead. Becomes very sad and needs to do a research of why this happens which eventually leads to adding something like `au FileType help nnoremap <buffer> g== <Cmd>echo \"Hello\"<CR>`.\r\n- If previous step happens after seeing Run with `g==` virtual text, then pressing indeed executes code block. User becomes surprised if that's the case and might try to see that it indeed actually works in code blocks. Then either makes decision about how good/bad it is immediately or tries doing that outside of code block (to see if global mapping would still work) returning to previous step.\r\n\r\n---\r\n\r\nIn either case, this case study is quite contrived and not something we should be designing around. If you try hard enough, you can make these kind of weird cases to make arguments against _any_ change.",
            "created_at": "2025-01-14T17:26:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2590635873",
            "id": 2590635873,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aafdh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590635873/reactions"
            },
            "updated_at": "2025-01-14T17:31:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590635873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Not that odd. Here is the use case with hypothetical merged `g==`:\r\n\r\nYes, indeed, ideally this should also be allowed. And changing current implementation to account for global `yxx` / `g==` mapping is a good design. I am not up to it as I *just want to remove `yxx` mapping*.\r\n\r\nYour [first comment](https://github.com/neovim/neovim/pull/31947#issuecomment-2589930827) mentioning \"This argument apples to any key\" was the answer to the suggestion that `gx` is made global. In which case indeed users are pretty much discouraged from overriding it as there will be `` Run with `gx` `` which can not work after any global `gx` override.\r\n\r\n> In either case, this case study is quite contrived and not something we should be designing around. If you try hard enough, you can make these kind of weird cases to make arguments against *any* change.\r\n\r\nOf course, you can have your opinions and I can have mine. What you don't understand is that there is no argument *against* any change, only *how much effort*should be put into the hypothetical future change.",
            "created_at": "2025-01-14T17:36:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2590669647",
            "id": 2590669647,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6aantP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590669647/reactions"
            },
            "updated_at": "2025-01-14T17:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2590669647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not closing the door on the valid points above, but merging this to at least move away from `yxx`.",
            "created_at": "2025-01-15T10:32:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2592265213",
            "id": 2592265213,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6agtP9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592265213/reactions"
            },
            "updated_at": "2025-01-15T10:32:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592265213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I want to add some other perspective here not mentioned so far:\r\n\r\nConceptually the \"Run with ...\" virtual-text is similar to either LSP inlay hints or codelens, both can have a executable command. (we currently don't support that for inlay-hints, but for codelens we have `vim.lsp.codelens.run`. Some servers provide exactly this type of code lens for test cases (Run Test | Debug Test)\r\n\r\nThis has me wonder if we either:\r\n\r\n- Could have a vim.lsp.server for vim help files, and provide the info as codelens and make it executable via `codelens.run()`\r\n- Have a codelens abstraction sitting between virtual-text/lines and LSP\r\n\r\n\r\nThis would give users a more consistent interface and user experience in that if it looks like a code-lens it acts like a code lens. Same keymaps, same options to enable/disable.\r\n",
            "created_at": "2025-01-15T11:17:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/31947#issuecomment-2592420466",
            "id": 2592420466,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
            "node_id": "IC_kwDOAPphoM6ahTJy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 9,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592420466/reactions"
            },
            "updated_at": "2025-01-15T11:19:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2592420466",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31947/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31947/commits",
    "created_at": "2025-01-10T18:55:35Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31947.diff",
    "draft": false,
    "head": {
        "label": "echasnovski:docs-yxx-g==",
        "ref": "docs-yxx-g==",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/echasnovski/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/echasnovski/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/echasnovski/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/echasnovski/neovim/branches{/branch}",
            "clone_url": "https://github.com/echasnovski/neovim.git",
            "collaborators_url": "https://api.github.com/repos/echasnovski/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/echasnovski/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/echasnovski/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/echasnovski/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/echasnovski/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/echasnovski/neovim/contributors",
            "created_at": "2021-12-02T09:43:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/echasnovski/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/echasnovski/neovim/downloads",
            "events_url": "https://api.github.com/repos/echasnovski/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/echasnovski/neovim/forks",
            "full_name": "echasnovski/neovim",
            "git_commits_url": "https://api.github.com/repos/echasnovski/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/echasnovski/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/echasnovski/neovim/git/tags{/sha}",
            "git_url": "git://github.com/echasnovski/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/echasnovski/neovim/hooks",
            "html_url": "https://github.com/echasnovski/neovim",
            "id": 434162461,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/echasnovski/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/echasnovski/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/echasnovski/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/echasnovski/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/echasnovski/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/echasnovski/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/echasnovski/neovim/merges",
            "milestones_url": "https://api.github.com/repos/echasnovski/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGeDLHQ",
            "notifications_url": "https://api.github.com/repos/echasnovski/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/echasnovski/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T17:31:15Z",
            "releases_url": "https://api.github.com/repos/echasnovski/neovim/releases{/id}",
            "size": 297530,
            "ssh_url": "git@github.com:echasnovski/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/echasnovski/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/echasnovski/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/echasnovski/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/echasnovski/neovim/subscription",
            "svn_url": "https://github.com/echasnovski/neovim",
            "tags_url": "https://api.github.com/repos/echasnovski/neovim/tags",
            "teams_url": "https://api.github.com/repos/echasnovski/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/echasnovski/neovim/git/trees{/sha}",
            "updated_at": "2025-01-13T17:31:23Z",
            "url": "https://api.github.com/repos/echasnovski/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8528628ca3904c6a1cf097aad5056290da236029",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31947",
    "id": 2271125245,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31947",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "09bcb310681e3b87d5b8c5eb547b182554cff7b4",
    "merged_at": "2025-01-15T10:36:00Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 138,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 57,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-01-17T23:02:36Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM6HXp79",
    "number": 31947,
    "patch_url": "https://github.com/neovim/neovim/pull/31947.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31947/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8528628ca3904c6a1cf097aad5056290da236029",
    "title": "fix(docs): replace `yxx` mappings with `g==`",
    "updated_at": "2025-01-15T11:19:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31947",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}