{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29464/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29464/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/29464"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29464"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29464/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/32b3d5d328d14c5a6f3cef58fd310158f1faf244"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5945,
            "forks_count": 5945,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1874,
            "open_issues_count": 1874,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-03-18T00:13:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 313072,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 87314,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-03-18T02:30:01Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 87314,
            "watchers_count": 87314,
            "web_commit_signoff_required": false
        },
        "sha": "d5ff0aff27438829b0810cc70dec9e63cb53c1db",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Adds a function to get a keymapping. This is really useful for saving and restoring mappings.\r\n\r\nExample case: Neorg adds mappings (insert and normal mode) for it's api functions for each buffer and wants to remove and restore them\r\nBefore:\r\n```lua\r\n-- Get mappings\r\nlocal mappings = vim\r\n  .iter({ vim.api.nvim_buf_get_keymap(0, 'n'), vim.api.nvim_buf_get_keymap(0, 'n') })\r\n  :flatten()\r\n  :filter(function(mapping)\r\n    if string.match(mapping.rhs, '^<Plug>(Neorg') then\r\n      return true\r\n    else\r\n      return false\r\n    end\r\n  end)\r\n\r\n-- Restore\r\nfor _, mapping in ipairs(mappings) do\r\n  vim.keymap.set({ 'n', 'i' }, mapping.lhs, mapping.rhs, { desc = mapping.desc, buffer = true })\r\nend\r\n```\r\n\r\nAfter:\r\n```lua\r\n-- Get mappings\r\nlocal mappings = vim.keymap.get({ 'n', 'i' }, { rhs = '^<Plug>(Neorg' })\r\n\r\n-- Restore\r\nfor _, mapping in ipairs(mappings) do\r\n  vim.keymap.set({ 'n', 'i' }, mapping.lhs, mapping.rhs, mapping.opts)\r\nend\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1775185658"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775185658"
                }
            },
            "author_association": "MEMBER",
            "body": "is `opts` a filter here? I think we prefer to call it such if so. Example: https://github.com/neovim/neovim/blob/069451bb214bd9d97273ac92b37a25054df0f1a8/runtime/lua/vim/lsp.lua#L773-L775\r\n\r\n```suggestion\r\n---@param opts? vim.keymap.get.Filter\r\n---@return vim.keymap.get.Return[]\r\nfunction keymap.get(modes, filter)\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T12:59:17Z",
            "diff_hunk": "@@ -135,4 +135,112 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Opts\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? integer|boolean\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param opts? vim.keymap.get.Opts\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1775185658",
            "id": 1775185658,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pzy76",
            "original_commit_id": "a803be7b83df742e66ab4f61ce134c721e51cef2",
            "original_line": 186,
            "original_position": 54,
            "original_start_line": 186,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2328186381,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775185658/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-25T12:59:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775185658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1775203996"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775203996"
                }
            },
            "author_association": "MEMBER",
            "body": "If we use `maparg()` does it do this for us instead of having to hack it with `gsub()` ?",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T13:11:00Z",
            "diff_hunk": "@@ -135,4 +135,112 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Opts\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? integer|boolean\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param opts? vim.keymap.get.Opts\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, opts)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    opts = { opts, 't', true },\n+  })\n+\n+  opts = opts or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}\n+  for _, mode in ipairs(modes) do\n+    if opts.buffer then\n+      table.insert(\n+        keymaps,\n+        ---@diagnostic disable-next-line: param-type-mismatch\n+        vim.api.nvim_buf_get_keymap(opts.buffer == true and 0 or opts.buffer, mode)\n+      )\n+    else\n+      table.insert(keymaps, vim.api.nvim_get_keymap(mode))\n+    end\n+  end\n+\n+  local function matches(mapping)\n+    local match = true\n+    if opts.lhs then\n+      opts.lhs = opts.lhs:gsub('<leader>', vim.g.mapleader or '')\n+      opts.lhs = opts.lhs:gsub('<localleader>', vim.g.maplocaleader or '')",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1775203996",
            "id": 1775203996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pz3ac",
            "original_commit_id": "a803be7b83df742e66ab4f61ce134c721e51cef2",
            "original_line": 213,
            "original_position": 81,
            "original_start_line": 214,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2328217274,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775203996/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-25T13:11:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775203996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1775207538"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775207538"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'll try that out later",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T13:13:08Z",
            "diff_hunk": "@@ -135,4 +135,112 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Opts\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? integer|boolean\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param opts? vim.keymap.get.Opts\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, opts)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    opts = { opts, 't', true },\n+  })\n+\n+  opts = opts or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}\n+  for _, mode in ipairs(modes) do\n+    if opts.buffer then\n+      table.insert(\n+        keymaps,\n+        ---@diagnostic disable-next-line: param-type-mismatch\n+        vim.api.nvim_buf_get_keymap(opts.buffer == true and 0 or opts.buffer, mode)\n+      )\n+    else\n+      table.insert(keymaps, vim.api.nvim_get_keymap(mode))\n+    end\n+  end\n+\n+  local function matches(mapping)\n+    local match = true\n+    if opts.lhs then\n+      opts.lhs = opts.lhs:gsub('<leader>', vim.g.mapleader or '')\n+      opts.lhs = opts.lhs:gsub('<localleader>', vim.g.maplocaleader or '')",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1775207538",
            "id": 1775207538,
            "in_reply_to_id": 1775203996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pz4Ry",
            "original_commit_id": "a803be7b83df742e66ab4f61ce134c721e51cef2",
            "original_line": 213,
            "original_position": 81,
            "original_start_line": 214,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2328223017,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775207538/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-25T13:13:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775207538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1775208654"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775208654"
                }
            },
            "author_association": "MEMBER",
            "body": "This and similar cases is a good argument for adding keymap.get(). Because otherwise the programmer has to manually map this stuff; the result of `nvim_get_keymap` / `maparg()` is not useable with `keymap.set`. ",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T13:13:46Z",
            "diff_hunk": "@@ -135,4 +135,112 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Opts\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? integer|boolean\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param opts? vim.keymap.get.Opts\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, opts)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    opts = { opts, 't', true },\n+  })\n+\n+  opts = opts or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}\n+  for _, mode in ipairs(modes) do\n+    if opts.buffer then\n+      table.insert(\n+        keymaps,\n+        ---@diagnostic disable-next-line: param-type-mismatch\n+        vim.api.nvim_buf_get_keymap(opts.buffer == true and 0 or opts.buffer, mode)\n+      )\n+    else\n+      table.insert(keymaps, vim.api.nvim_get_keymap(mode))\n+    end\n+  end\n+\n+  local function matches(mapping)\n+    local match = true\n+    if opts.lhs then\n+      opts.lhs = opts.lhs:gsub('<leader>', vim.g.mapleader or '')\n+      opts.lhs = opts.lhs:gsub('<localleader>', vim.g.maplocaleader or '')\n+      match = match and opts.lhs == mapping.lhs\n+    end\n+    if opts.rhs then\n+      opts.rhs = opts.rhs:gsub('<leader>', vim.g.mapleader or '')\n+      opts.rhs = opts.rhs:gsub('<localleader>', vim.g.maplocaleader or '')\n+      match = match and string.match(mapping.rhs, opts.rhs)\n+    end\n+    return match\n+  end\n+  return vim\n+    .iter(keymaps)\n+    :flatten()\n+    :filter(function(mapping)\n+      return matches(mapping)\n+    end)\n+    :map(function(mapping)\n+      return {\n+        lhs = mapping.lhs,\n+        rhs = mapping.callback or mapping.rhs,",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1775208654",
            "id": 1775208654,
            "line": 240,
            "node_id": "PRRC_kwDOAPphoM5pz4jO",
            "original_commit_id": "a803be7b83df742e66ab4f61ce134c721e51cef2",
            "original_line": 240,
            "original_position": 100,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": 120,
            "pull_request_review_id": 2328224720,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775208654/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T13:13:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775208654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1775213992"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775213992"
                }
            },
            "author_association": "MEMBER",
            "body": "This type should be `vim.keymap.set.Opts` , right?",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T13:16:58Z",
            "diff_hunk": "@@ -135,4 +135,112 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Opts\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? integer|boolean",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1775213992",
            "id": 1775213992,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pz52o",
            "original_commit_id": "a803be7b83df742e66ab4f61ce134c721e51cef2",
            "original_line": 170,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2328233408,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775213992/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T13:16:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775213992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1775215566"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775215566"
                }
            },
            "author_association": "MEMBER",
            "body": "Can/should `keymap.set` accept an overload so that this works:\r\n\r\n    vim.keymap.set(vim.keymap.get(...)[1])\r\n\r\nThat seems most useful, otherwise we have not really addressed the \"roundtrip\" idea.",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T13:17:48Z",
            "diff_hunk": "@@ -135,4 +135,112 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Opts\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1775215566",
            "id": 1775215566,
            "line": 169,
            "node_id": "PRRC_kwDOAPphoM5pz6PO",
            "original_commit_id": "a803be7b83df742e66ab4f61ce134c721e51cef2",
            "original_line": 169,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": 49,
            "pull_request_review_id": 2328235766,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775215566/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T21:38:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775215566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1775710107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775710107"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "no\r\nit's not exactly the same\r\nthis was also wrong though",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T17:55:31Z",
            "diff_hunk": "@@ -135,4 +135,112 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Opts\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? integer|boolean",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1775710107",
            "id": 1775710107,
            "in_reply_to_id": 1775213992,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p1y-b",
            "original_commit_id": "a803be7b83df742e66ab4f61ce134c721e51cef2",
            "original_line": 170,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2329083087,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775710107/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T17:55:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1775710107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1776095820"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776095820"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- -- Gets all normal mode mappings\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T23:25:11Z",
            "diff_hunk": "@@ -133,4 +146,115 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Filter\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+--- Mode of the mapping\n+--- @field mode string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? vim.keymap.get.Return.Opts\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1776095820",
            "id": 1776095820,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p3RJM",
            "original_commit_id": "12c3268c3122a7d73260af54693b90b8a54c3bea",
            "original_line": 191,
            "original_position": 67,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2329694727,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776095820/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T23:25:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776095820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1776096147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096147"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  local mappings = {}\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T23:25:47Z",
            "diff_hunk": "@@ -133,4 +146,115 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Filter\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+--- Mode of the mapping\n+--- @field mode string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? vim.keymap.get.Return.Opts\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param filter? vim.keymap.get.Filter\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, filter)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    filter = { filter, 't', true },\n+  })\n+\n+  filter = filter or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1776096147",
            "id": 1776096147,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p3ROT",
            "original_commit_id": "12c3268c3122a7d73260af54693b90b8a54c3bea",
            "original_line": 211,
            "original_position": 87,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2329695183,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096147/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T23:26:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1776096220"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096220"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        mappings,\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T23:25:57Z",
            "diff_hunk": "@@ -133,4 +146,115 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Filter\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+--- Mode of the mapping\n+--- @field mode string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? vim.keymap.get.Return.Opts\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param filter? vim.keymap.get.Filter\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, filter)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    filter = { filter, 't', true },\n+  })\n+\n+  filter = filter or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}\n+  for _, mode in ipairs(modes) do\n+    if filter.buffer then\n+      table.insert(\n+        keymaps,",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1776096220",
            "id": 1776096220,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p3RPc",
            "original_commit_id": "12c3268c3122a7d73260af54693b90b8a54c3bea",
            "original_line": 215,
            "original_position": 91,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2329695183,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096220/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T23:26:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096220",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1776096323"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096323"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      table.insert(mappings, vim.api.nvim_get_keymap(mode))\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T23:26:07Z",
            "diff_hunk": "@@ -133,4 +146,115 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Filter\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+--- Mode of the mapping\n+--- @field mode string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? vim.keymap.get.Return.Opts\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param filter? vim.keymap.get.Filter\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, filter)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    filter = { filter, 't', true },\n+  })\n+\n+  filter = filter or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}\n+  for _, mode in ipairs(modes) do\n+    if filter.buffer then\n+      table.insert(\n+        keymaps,\n+        ---@diagnostic disable-next-line: param-type-mismatch\n+        vim.api.nvim_buf_get_keymap(filter.buffer == true and 0 or filter.buffer, mode)\n+      )\n+    else\n+      table.insert(keymaps, vim.api.nvim_get_keymap(mode))",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1776096323",
            "id": 1776096323,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p3RRD",
            "original_commit_id": "12c3268c3122a7d73260af54693b90b8a54c3bea",
            "original_line": 220,
            "original_position": 96,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2329695183,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096323/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T23:26:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096323",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1776096480"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096480"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    .iter(mappings)\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T23:26:21Z",
            "diff_hunk": "@@ -133,4 +146,115 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Filter\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+--- Mode of the mapping\n+--- @field mode string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? vim.keymap.get.Return.Opts\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param filter? vim.keymap.get.Filter\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, filter)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    filter = { filter, 't', true },\n+  })\n+\n+  filter = filter or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}\n+  for _, mode in ipairs(modes) do\n+    if filter.buffer then\n+      table.insert(\n+        keymaps,\n+        ---@diagnostic disable-next-line: param-type-mismatch\n+        vim.api.nvim_buf_get_keymap(filter.buffer == true and 0 or filter.buffer, mode)\n+      )\n+    else\n+      table.insert(keymaps, vim.api.nvim_get_keymap(mode))\n+    end\n+  end\n+\n+  local function matches(mapping)\n+    local match = true\n+    if filter.lhs then\n+      filter.lhs = filter.lhs:gsub('<leader>', vim.g.mapleader or '')\n+      filter.lhs = filter.lhs:gsub('<localleader>', vim.g.maplocaleader or '')\n+      match = match and filter.lhs == mapping.lhs\n+    end\n+    if filter.rhs then\n+      filter.rhs = filter.rhs:gsub('<leader>', vim.g.mapleader or '')\n+      filter.rhs = filter.rhs:gsub('<localleader>', vim.g.maplocaleader or '')\n+      match = match and string.match(mapping.rhs, filter.rhs)\n+    end\n+    return match\n+  end\n+  return vim\n+    .iter(keymaps)",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1776096480",
            "id": 1776096480,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p3RTg",
            "original_commit_id": "12c3268c3122a7d73260af54693b90b8a54c3bea",
            "original_line": 239,
            "original_position": 115,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2329695183,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096480/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T23:26:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776096480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1776098352"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776098352"
                }
            },
            "author_association": "MEMBER",
            "body": "This won't work for `<Leader>` and `<LocalLeader>` as they have different capitalization. This won't work for other key notations with different capitalization either. Maybe it's better to use `vim.keycode()` on `lhs` or `rhs` of both the mapping and the filter?",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T23:30:08Z",
            "diff_hunk": "@@ -133,4 +146,115 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Filter\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+--- Mode of the mapping\n+--- @field mode string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? vim.keymap.get.Return.Opts\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param filter? vim.keymap.get.Filter\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, filter)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    filter = { filter, 't', true },\n+  })\n+\n+  filter = filter or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}\n+  for _, mode in ipairs(modes) do\n+    if filter.buffer then\n+      table.insert(\n+        keymaps,\n+        ---@diagnostic disable-next-line: param-type-mismatch\n+        vim.api.nvim_buf_get_keymap(filter.buffer == true and 0 or filter.buffer, mode)\n+      )\n+    else\n+      table.insert(keymaps, vim.api.nvim_get_keymap(mode))\n+    end\n+  end\n+\n+  local function matches(mapping)\n+    local match = true\n+    if filter.lhs then\n+      filter.lhs = filter.lhs:gsub('<leader>', vim.g.mapleader or '')\n+      filter.lhs = filter.lhs:gsub('<localleader>', vim.g.maplocaleader or '')\n+      match = match and filter.lhs == mapping.lhs\n+    end\n+    if filter.rhs then\n+      filter.rhs = filter.rhs:gsub('<leader>', vim.g.mapleader or '')\n+      filter.rhs = filter.rhs:gsub('<localleader>', vim.g.maplocaleader or '')\n+      match = match and string.match(mapping.rhs, filter.rhs)",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1776098352",
            "id": 1776098352,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p3Rww",
            "original_commit_id": "12c3268c3122a7d73260af54693b90b8a54c3bea",
            "original_line": 234,
            "original_position": 110,
            "original_start_line": 227,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2329698467,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776098352/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-25T23:34:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776098352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1776101106"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776101106"
                }
            },
            "author_association": "MEMBER",
            "body": "Another solution is to use `vim.keycode()` on both the mapping and the filter.",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-25T23:35:37Z",
            "diff_hunk": "@@ -135,4 +135,112 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Opts\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? integer|boolean\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode keymaps\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param opts? vim.keymap.get.Opts\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, opts)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    opts = { opts, 't', true },\n+  })\n+\n+  opts = opts or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local keymaps = {}\n+  for _, mode in ipairs(modes) do\n+    if opts.buffer then\n+      table.insert(\n+        keymaps,\n+        ---@diagnostic disable-next-line: param-type-mismatch\n+        vim.api.nvim_buf_get_keymap(opts.buffer == true and 0 or opts.buffer, mode)\n+      )\n+    else\n+      table.insert(keymaps, vim.api.nvim_get_keymap(mode))\n+    end\n+  end\n+\n+  local function matches(mapping)\n+    local match = true\n+    if opts.lhs then\n+      opts.lhs = opts.lhs:gsub('<leader>', vim.g.mapleader or '')\n+      opts.lhs = opts.lhs:gsub('<localleader>', vim.g.maplocaleader or '')",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1776101106",
            "id": 1776101106,
            "in_reply_to_id": 1775203996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5p3Sby",
            "original_commit_id": "a803be7b83df742e66ab4f61ce134c721e51cef2",
            "original_line": 213,
            "original_position": 81,
            "original_start_line": 214,
            "path": "runtime/lua/vim/keymap.lua",
            "position": null,
            "pull_request_review_id": 2329702458,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776101106/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-25T23:35:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1776101106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1779477372"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779477372"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        -- For roundtripping: keymap.set() only accepts \"rhs\".\r\n        rhs = mapping.callback or mapping.rhs,\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2024-09-28T12:32:26Z",
            "diff_hunk": "@@ -133,4 +146,111 @@ function keymap.del(modes, lhs, opts)\n   end\n end\n \n+--- @class vim.keymap.get.Filter\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs? string\n+---\n+--- Patter to match against rhs of mapping\n+--- @field rhs? string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field buffer? integer|boolean\n+\n+--- @class vim.keymap.get.Return.Opts\n+--- @inlinedoc\n+---\n+--- If they mapping is an expr mapping\n+--- @field expr boolean\n+---\n+--- If they mapping is a buffer-local mapping\n+--- @field buffer boolean\n+---\n+--- Description of the mapping\n+--- @field desc? string\n+\n+--- @class vim.keymap.get.Return\n+--- @inlinedoc\n+---\n+--- Lhs of mapping\n+--- @field lhs string\n+---\n+--- Rhs of mapping (can be callback)\n+--- @field rhs string|function\n+--- Mode of the mapping\n+--- @field mode string\n+---\n+--- Get a mapping for a certain buffer\n+--- @field opts? vim.keymap.get.Return.Opts\n+\n+--- Gets mappings in a format easily usable for vim.keymap.set\n+--- Examples:\n+---\n+--- ```lua\n+--- -- Gets all normal mode mappings\n+--- vim.keymap.get('n')\n+---\n+--- -- Gets a mapping which maps to a certain rhs\n+--- vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+--- ```\n+---\n+---@param modes string|string[]\n+---@param filter? vim.keymap.get.Filter\n+---@return vim.keymap.get.Return[]\n+function keymap.get(modes, filter)\n+  vim.validate({\n+    mode = { modes, { 's', 't' } },\n+    filter = { filter, 't', true },\n+  })\n+\n+  filter = filter or {}\n+  modes = type(modes) == 'string' and { modes } or modes\n+  --- @cast modes string[]\n+\n+  local mappings = {}\n+  for _, mode in ipairs(modes) do\n+    if filter.buffer then\n+      table.insert(\n+        mappings,\n+        ---@diagnostic disable-next-line: param-type-mismatch\n+        vim.api.nvim_buf_get_keymap(filter.buffer == true and 0 or filter.buffer, mode)\n+      )\n+    else\n+      table.insert(mappings, vim.api.nvim_get_keymap(mode))\n+    end\n+  end\n+\n+  local function matches(mapping)\n+    local match = true\n+    if filter.lhs then\n+      match = match and vim.keycode(filter.lhs) == vim.keycode(mapping.lhs)\n+    end\n+    if filter.rhs then\n+      match = match and vim.keycode(filter.rhs) == vim.keycode(mapping.rhs)\n+    end\n+    return match\n+  end\n+  return vim\n+    .iter(mappings)\n+    :flatten()\n+    :filter(function(mapping)\n+      return matches(mapping)\n+    end)\n+    :map(function(mapping)\n+      ---@type vim.keymap.get.Return\n+      return {\n+        lhs = mapping.lhs,\n+        rhs = mapping.callback or mapping.rhs,",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1779477372",
            "id": 1779477372,
            "line": 240,
            "node_id": "PRRC_kwDOAPphoM5qEKt8",
            "original_commit_id": "83ed63196b30d21690a167dfc36fad07cd4c2d0e",
            "original_line": 240,
            "original_position": 120,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": 120,
            "pull_request_review_id": 2334997174,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779477372/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-28T12:32:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1779477372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1995719332"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1995719332"
                }
            },
            "author_association": "MEMBER",
            "body": "Not crazy about the overload, I have to admit; this can mess with validation (@lewis6991)\r\n\r\nIt also means that `vim.keymap.get` does _not_ solve the roundtrip problem, because you still need a translation layer (which you've shoved into `keymap.set`, but you could just as well do that for the Nvim API output).",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2025-03-14T14:48:44Z",
            "diff_hunk": "@@ -41,7 +41,20 @@ local keymap = {}\n ---@see |maparg()|\n ---@see |mapcheck()|\n ---@see |mapset()|\n+---@overload fun(opts: vim.keymap.get.Return)\n function keymap.set(mode, lhs, rhs, opts)\n+  if type(mode) == 'table' and not lhs then",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1995719332",
            "id": 1995719332,
            "line": 46,
            "node_id": "PRRC_kwDOAPphoM529EKk",
            "original_commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "original_line": 46,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": 6,
            "pull_request_review_id": 2685816475,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1995719332/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-14T14:48:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1995719332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1997016963"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997016963"
                }
            },
            "author_association": "MEMBER",
            "body": "Overloads are a basic mechanism that we must be allowed to leverage. \r\n\r\n> It also means that `vim.keymap.get` does _not_ solve the roundtrip problem, because you still need a translation layer (which you've shoved into `keymap.set`, but you could just as well do that for the Nvim API output).\r\n\r\nagree, but specifically what are you thinking? how should the API change?",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2025-03-15T16:14:00Z",
            "diff_hunk": "@@ -41,7 +41,20 @@ local keymap = {}\n ---@see |maparg()|\n ---@see |mapcheck()|\n ---@see |mapset()|\n+---@overload fun(opts: vim.keymap.get.Return)\n function keymap.set(mode, lhs, rhs, opts)\n+  if type(mode) == 'table' and not lhs then",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1997016963",
            "id": 1997016963,
            "in_reply_to_id": 1995719332,
            "line": 46,
            "node_id": "PRRC_kwDOAPphoM53CA-D",
            "original_commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "original_line": 46,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/keymap.lua",
            "position": 6,
            "pull_request_review_id": 2687975780,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997016963/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-15T16:24:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997016963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1997030980"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997030980"
                }
            },
            "author_association": "MEMBER",
            "body": "show a roundtrip example.",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2025-03-15T16:19:28Z",
            "diff_hunk": "@@ -2891,6 +2891,31 @@ vim.keymap.del({modes}, {lhs}, {opts})                      *vim.keymap.del()*\n     See also: ~\n       • |vim.keymap.set()|\n \n+vim.keymap.get({modes}, {filter})                           *vim.keymap.get()*\n+    Gets mappings in a format easily usable for vim.keymap.set Examples: >lua\n+        -- Gets all normal mode mappings\n+        vim.keymap.get('n')\n+\n+        -- Gets a mapping which maps to a certain rhs\n+        vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1997030980",
            "id": 1997030980,
            "line": 2900,
            "node_id": "PRRC_kwDOAPphoM53CEZE",
            "original_commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "original_line": 2900,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 10,
            "pull_request_review_id": 2687984686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997030980/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-15T16:19:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997030980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1997031177"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997031177"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        (`table[]`) List of keymaps with these fields:\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2025-03-15T16:19:57Z",
            "diff_hunk": "@@ -2891,6 +2891,31 @@ vim.keymap.del({modes}, {lhs}, {opts})                      *vim.keymap.del()*\n     See also: ~\n       • |vim.keymap.set()|\n \n+vim.keymap.get({modes}, {filter})                           *vim.keymap.get()*\n+    Gets mappings in a format easily usable for vim.keymap.set Examples: >lua\n+        -- Gets all normal mode mappings\n+        vim.keymap.get('n')\n+\n+        -- Gets a mapping which maps to a certain rhs\n+        vim.keymap.get('n', { rhs = \"<Plug>(MyAmazingFunction)\" })\n+<\n+\n+    Parameters: ~\n+      • {modes}   (`string|string[]`)\n+      • {filter}  (`table?`) A table with the following fields:\n+                  • {lhs}? (`string`) Lhs of mapping\n+                  • {rhs}? (`string`) Patter to match against rhs of mapping\n+                  • {buffer}? (`integer|boolean`) Get a mapping for a certain\n+                    buffer\n+\n+    Return: ~\n+        (`table[]`) A list of objects with the following fields:",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1997031177",
            "id": 1997031177,
            "line": 2912,
            "node_id": "PRRC_kwDOAPphoM53CEcJ",
            "original_commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "original_line": 2912,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 22,
            "pull_request_review_id": 2687985052,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997031177/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-15T16:19:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997031177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29464#discussion_r1997032918"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997032918"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• |vim.text.indent()| indents/dedents text.\r\n• |vim.keymap.get()| gets keymap info, which can be passed to |vim.keymap.set()| to restore the mapping later.\r\n```",
            "commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "created_at": "2025-03-15T16:22:21Z",
            "diff_hunk": "@@ -330,7 +330,8 @@ LUA\n • |vim.fs.relpath()| gets relative path compared to base path.\n • |vim.fs.dir()| and |vim.fs.find()| now follow symbolic links by default,\n   the behavior can be turn off using the new `follow` option.\n-• |vim.text.indent()| indents/dedents text.\n+- |vim.text.indent()| indents/dedents text.\n+- Added |vim.keymap.get()| to get keymappings.",
            "html_url": "https://github.com/neovim/neovim/pull/29464#discussion_r1997032918",
            "id": 1997032918,
            "line": 334,
            "node_id": "PRRC_kwDOAPphoM53CE3W",
            "original_commit_id": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
            "original_line": 334,
            "original_position": 6,
            "original_start_line": 333,
            "path": "runtime/doc/news.txt",
            "position": 6,
            "pull_request_review_id": 2687986915,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997032918/reactions"
            },
            "side": "RIGHT",
            "start_line": 333,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-15T16:23:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1997032918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "What is the benefit over the already existing nvim API for this?",
            "created_at": "2024-06-23T19:20:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2185276348",
            "id": 2185276348,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6CQKu8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185276348/reactions"
            },
            "updated_at": "2024-06-23T19:20:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185276348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "a qol wrapper around it\r\ncould say the same for `vim.keymap.del`",
            "created_at": "2024-06-23T19:22:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2185276921",
            "id": 2185276921,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6CQK35",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185276921/reactions"
            },
            "updated_at": "2024-08-12T14:03:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185276921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That was a different time. New additions need to stand on their own feet. ",
            "created_at": "2024-06-23T19:25:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2185277666",
            "id": 2185277666,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6CQLDi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185277666/reactions"
            },
            "updated_at": "2024-06-23T19:25:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185277666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "By which I mean to say, what is the QoL exactly?",
            "created_at": "2024-06-23T19:25:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2185277773",
            "id": 2185277773,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6CQLFN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185277773/reactions"
            },
            "updated_at": "2024-06-23T19:25:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185277773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "well it's basically the same as `vim.keymap.del`\r\nthe user can just provide string arguments and doesn't have to write the filter logic himself.\r\nIf that's not reason enough for you to add this you can close this pr.",
            "created_at": "2024-06-24T05:29:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2185639577",
            "id": 2185639577,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6CRjaZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185639577/reactions"
            },
            "updated_at": "2024-08-12T14:03:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185639577",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "QoL improvements are very encouraged, but let's make sure they are strong QoL improvements, not thin wrappers around the existing API. (No comment on this particular case.) And such PRs should always show \"before\" and \"after\" examples.",
            "created_at": "2024-06-24T13:17:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2186564330",
            "id": 2186564330,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6CVFLq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186564330/reactions"
            },
            "updated_at": "2024-06-24T13:17:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186564330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't have very strong arguments for it\r\nI thought I'd just put together sth rq and we can discuss it here\r\nI'll add a before and after later",
            "created_at": "2024-06-24T14:23:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2186707082",
            "id": 2186707082,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6CVoCK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186707082/reactions"
            },
            "updated_at": "2024-08-12T14:03:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186707082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Normally I'd agree with my fellow maintainers that this improvement isn't stellar in a vacuum/on its own, but in this case I believe this PR to be net positive. My problem with `vim.keymap` API is that it's incomplete: convenience functions for `nvim_set_keymap`, `nvim_buf_set_keymap`, `nvim_del_keymap` and `nvim_buf_del_keymap` exists, but not for `nvim_get_keymap` nor `nvim_buf_get_keymap`. I think it's confusing we don't complete the get,set,del sets of functions.\r\n\r\nI understand the worry about moving the API in a direction we don't like, but in this case specifically I believe it would make more sense to add `vim.keymap.get`, and then in the future make a concerted effort to improve the APIs around keymaps when we have a better idea on how we want to proceed.",
            "created_at": "2024-07-11T12:03:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2222753443",
            "id": 2222753443,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6EfIaj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2222753443/reactions"
            },
            "updated_at": "2024-07-11T12:06:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2222753443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The opposition here is not to a `vim.keymap.get` per se, it's to only(!) adding a thin wrapper around existing  API. (Compare to `vim.keymap.set`, which was created to address UX shortcomings of the nvim API.)\r\n\r\nSo the ask here is to identify similar shortcomings and decide how a new `vim.keymap.get` could and should address them. (Just one example: making sure that `get` returns output in a way that you could easily `set` them again for programmatic saving and restoring mappings.)\r\n\r\nThe problem -- which we learned the hard way -- is that adding a low-effort wrapper now makes it harder to add more complex features to it later. So _if_ we do it (which nobody so far is against), then we should take the time to do it right.",
            "created_at": "2024-07-11T12:10:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2222767190",
            "id": 2222767190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6EfLxW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2222767190/reactions"
            },
            "updated_at": "2024-07-11T12:13:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2222767190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I understand. Shall we close the PR then if it's not desired in its current form?",
            "created_at": "2024-07-11T14:52:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223148109",
            "id": 2223148109,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6EgoxN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223148109/reactions"
            },
            "updated_at": "2024-07-11T14:52:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223148109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If there is no interest by the OP in engaging in a wider discussion, I guess so.",
            "created_at": "2024-07-11T15:08:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223189314",
            "id": 2223189314,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6Egy1C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223189314/reactions"
            },
            "updated_at": "2024-07-11T15:08:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223189314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There is interest 😄 ",
            "created_at": "2024-07-11T15:09:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223193213",
            "id": 2223193213,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6Egzx9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223193213/reactions"
            },
            "updated_at": "2024-08-12T14:02:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223193213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We're still waiting for the promised before/after for your proposal...",
            "created_at": "2024-07-11T15:11:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223198069",
            "id": 2223198069,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6Eg091",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223198069/reactions"
            },
            "updated_at": "2024-07-11T15:11:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223198069",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason @justinmk added before-after\r\n",
            "created_at": "2024-07-11T16:28:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223377480",
            "id": 2223377480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6EhgxI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223377480/reactions"
            },
            "updated_at": "2024-07-11T16:28:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223377480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does it work with Lua functions as rhs?",
            "created_at": "2024-07-11T16:32:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223386110",
            "id": 2223386110,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6Ehi3-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223386110/reactions"
            },
            "updated_at": "2024-07-11T16:32:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223386110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "do you mean passing a function to `vim.keymap.get` or getting one e.g. by passing a lhs which maps a function which has a function as rhs?\r\nformer doesn't, latter does\r\nwanted to test if former is also possible though",
            "created_at": "2024-07-11T16:48:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223418851",
            "id": 2223418851,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6Ehq3j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223418851/reactions"
            },
            "updated_at": "2024-07-11T16:48:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223418851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The latter, especially for the `get`--`set` use case. (The former doesn't really make sense.)",
            "created_at": "2024-07-11T16:52:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223425080",
            "id": 2223425080,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6EhsY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223425080/reactions"
            },
            "updated_at": "2024-07-11T16:52:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223425080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "well the former one would also be implementable I think\r\nand could be useful to e.g. detect which mappings there which map to your api\r\n\r\nwhich could be really useful",
            "created_at": "2024-07-11T17:12:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223473999",
            "id": 2223473999,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6Eh4VP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223473999/reactions"
            },
            "updated_at": "2024-07-11T17:12:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223473999",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "okay\r\nit seems like function as argument to `vim.keymap.get` is no implementable\r\nI guess this is due to some things happening internally in neovim",
            "created_at": "2024-07-11T17:26:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2223495274",
            "id": 2223495274,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6Eh9hq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223495274/reactions"
            },
            "updated_at": "2024-07-11T17:26:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2223495274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related to the capitalization problem: #26575",
            "created_at": "2024-09-25T23:37:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2375451521",
            "id": 2375451521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6NloOB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2375451521/reactions"
            },
            "updated_at": "2024-09-25T23:37:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2375451521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk anything that needs to be done on my side for this?",
            "created_at": "2024-12-25T14:48:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2561917786",
            "id": 2561917786,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6Ys8Na",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2561917786/reactions"
            },
            "updated_at": "2024-12-25T14:48:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2561917786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@max397574 please rebase. also the docs and news CI checks are giving some hints :)",
            "created_at": "2025-02-09T23:38:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2646656529",
            "id": 2646656529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6dwMYR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646656529/reactions"
            },
            "updated_at": "2025-02-09T23:38:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646656529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk rebased and fixed the CI\r\nthere is just one test failing but I can't see how that's related to my changes",
            "created_at": "2025-02-10T13:26:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2647985552",
            "id": 2647985552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6d1Q2Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2647985552/reactions"
            },
            "updated_at": "2025-02-10T13:26:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2647985552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk rebased and fixed things up\r\nanything left to do?",
            "created_at": "2025-02-25T14:57:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2682273163",
            "id": 2682273163,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6f4D2L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2682273163/reactions"
            },
            "updated_at": "2025-02-25T14:57:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2682273163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I want to get this in for 0.11, will check before EOW. Main thing I want to confirm is that roundtripping works:\r\n\r\n    vim.keymap.set(..., vim.keymap.get(...))",
            "created_at": "2025-03-12T12:40:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2717758057",
            "id": 2717758057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6h_bJp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717758057/reactions"
            },
            "updated_at": "2025-03-12T12:40:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717758057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "that should indeed work due to the new vim.keymap.set overload",
            "created_at": "2025-03-12T12:50:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2717784527",
            "id": 2717784527,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6h_hnP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717784527/reactions"
            },
            "updated_at": "2025-03-12T12:50:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717784527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Definitely needs tests.",
            "created_at": "2025-03-14T14:20:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2724847297",
            "id": 2724847297,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6iad7B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2724847297/reactions"
            },
            "updated_at": "2025-03-14T14:20:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2724847297",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Definitely needs tests.\r\n\r\nyes, that is required. ",
            "created_at": "2025-03-15T16:13:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2726760996",
            "id": 2726760996,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6ihxIk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2726760996/reactions"
            },
            "updated_at": "2025-03-15T16:13:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2726760996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "will look at the reviews and add tests later this week.",
            "created_at": "2025-03-17T13:42:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/29464#issuecomment-2729559461",
            "id": 2729559461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
            "node_id": "IC_kwDOAPphoM6iscWl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2729559461/reactions"
            },
            "updated_at": "2025-03-17T13:42:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2729559461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29464/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/29464/commits",
    "created_at": "2024-06-23T19:06:48Z",
    "diff_url": "https://github.com/neovim/neovim/pull/29464.diff",
    "draft": false,
    "head": {
        "label": "max397574:feat/keymap_get",
        "ref": "feat/keymap_get",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/max397574/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/max397574/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/max397574/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/max397574/neovim/branches{/branch}",
            "clone_url": "https://github.com/max397574/neovim.git",
            "collaborators_url": "https://api.github.com/repos/max397574/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/max397574/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/max397574/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/max397574/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/max397574/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/max397574/neovim/contributors",
            "created_at": "2023-12-30T15:28:06Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/max397574/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/max397574/neovim/downloads",
            "events_url": "https://api.github.com/repos/max397574/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/max397574/neovim/forks",
            "full_name": "max397574/neovim",
            "git_commits_url": "https://api.github.com/repos/max397574/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/max397574/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/max397574/neovim/git/tags{/sha}",
            "git_url": "git://github.com/max397574/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/max397574/neovim/hooks",
            "html_url": "https://github.com/max397574/neovim",
            "id": 737313453,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/max397574/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/max397574/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/max397574/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/max397574/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/max397574/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/max397574/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/max397574/neovim/merges",
            "milestones_url": "https://api.github.com/repos/max397574/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_KCrQ",
            "notifications_url": "https://api.github.com/repos/max397574/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/max397574/neovim/pulls{/number}",
            "pushed_at": "2025-03-17T05:29:53Z",
            "releases_url": "https://api.github.com/repos/max397574/neovim/releases{/id}",
            "size": 303173,
            "ssh_url": "git@github.com:max397574/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/max397574/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/max397574/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/max397574/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/max397574/neovim/subscription",
            "svn_url": "https://github.com/max397574/neovim",
            "tags_url": "https://api.github.com/repos/max397574/neovim/tags",
            "teams_url": "https://api.github.com/repos/max397574/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/max397574/neovim/git/trees{/sha}",
            "updated_at": "2024-12-25T14:47:36Z",
            "url": "https://api.github.com/repos/max397574/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "32b3d5d328d14c5a6f3cef58fd310158f1faf244",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
            "events_url": "https://api.github.com/users/max397574/events{/privacy}",
            "followers_url": "https://api.github.com/users/max397574/followers",
            "following_url": "https://api.github.com/users/max397574/following{/other_user}",
            "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/max397574",
            "id": 81827001,
            "login": "max397574",
            "node_id": "MDQ6VXNlcjgxODI3MDAx",
            "organizations_url": "https://api.github.com/users/max397574/orgs",
            "received_events_url": "https://api.github.com/users/max397574/received_events",
            "repos_url": "https://api.github.com/users/max397574/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/max397574",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/29464",
    "id": 1934296765,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29464",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 1,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 66,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-03-17T12:23:57Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "PR_kwDOAPphoM5zSwa9",
    "number": 29464,
    "patch_url": "https://github.com/neovim/neovim/pull/29464.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/29464/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/32b3d5d328d14c5a6f3cef58fd310158f1faf244",
    "title": "feat(lua): add vim.keymap.get",
    "updated_at": "2025-03-17T13:42:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/29464",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
        "events_url": "https://api.github.com/users/max397574/events{/privacy}",
        "followers_url": "https://api.github.com/users/max397574/followers",
        "following_url": "https://api.github.com/users/max397574/following{/other_user}",
        "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/max397574",
        "id": 81827001,
        "login": "max397574",
        "node_id": "MDQ6VXNlcjgxODI3MDAx",
        "organizations_url": "https://api.github.com/users/max397574/orgs",
        "received_events_url": "https://api.github.com/users/max397574/received_events",
        "repos_url": "https://api.github.com/users/max397574/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/max397574",
        "user_view_type": "public"
    }
}