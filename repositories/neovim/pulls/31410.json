{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31410/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31410/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31410"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31410"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31410/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/e25b5dc5ab7fed3bef682dbc4e4282e8af156df0"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5870,
            "forks_count": 5870,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1861,
            "open_issues_count": 1861,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-17T23:14:59Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 308398,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 86255,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-18T02:05:55Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 86255,
            "watchers_count": 86255,
            "web_commit_signoff_required": false
        },
        "sha": "2c629ad13f19ac262c0ae85628ceec6d4e0243fb",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Closes https://github.com/neovim/neovim/issues/19492.\r\n\r\nWIP, draft PR for discussion.\r\n\r\nhttps://github.com/user-attachments/assets/47f80209-b9b2-4fe6-a48b-7303db612d91",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31410#discussion_r1865001815"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865001815"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this should just be a single function `vim.lsp.buf.selection_range('expand'|'shrink', opts)`.\n\nI know it's not tied strictly to the buffer and more to a window but so are most functions in `vim.lsp.buf`.",
            "commit_id": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
            "created_at": "2024-12-01T20:11:15Z",
            "diff_hunk": "@@ -1744,6 +1744,31 @@ is_enabled({filter})                         *vim.lsp.inlay_hint.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.selection_range                      *lsp-selection_range*",
            "html_url": "https://github.com/neovim/neovim/pull/31410#discussion_r1865001815",
            "id": 1865001815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vKatX",
            "original_commit_id": "c3a89b8b3a96239ff1af9c035a90297ec59a7c17",
            "original_line": 1748,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2471495391,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865001815/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-01T20:13:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865001815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31410#discussion_r1865005594"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865005594"
                }
            },
            "author_association": "MEMBER",
            "body": "Alternative is to think of a more general node/semantic selection mechanism which could internally be powered by treesitter with lsp as fallback. Assuming that they behave the same, with treesitter most likely having less overhead/better performance if the buffer is already parsed.\r\n(That's what [nvim-treehopper](https://github.com/mfussenegger/nvim-treehopper) does to get the nodes for jumping) \r\n\r\n(See incremental_selection in nvim-treesitter (?))",
            "commit_id": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
            "created_at": "2024-12-01T20:26:12Z",
            "diff_hunk": "@@ -1744,6 +1744,31 @@ is_enabled({filter})                         *vim.lsp.inlay_hint.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.selection_range                      *lsp-selection_range*",
            "html_url": "https://github.com/neovim/neovim/pull/31410#discussion_r1865005594",
            "id": 1865005594,
            "in_reply_to_id": 1865001815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vKboa",
            "original_commit_id": "c3a89b8b3a96239ff1af9c035a90297ec59a7c17",
            "original_line": 1748,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2471497546,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865005594/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-01T20:37:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865005594",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31410#discussion_r1865026374"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865026374"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not both? We need one for the other anyway.",
            "commit_id": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
            "created_at": "2024-12-01T21:49:38Z",
            "diff_hunk": "@@ -1744,6 +1744,31 @@ is_enabled({filter})                         *vim.lsp.inlay_hint.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.selection_range                      *lsp-selection_range*",
            "html_url": "https://github.com/neovim/neovim/pull/31410#discussion_r1865026374",
            "id": 1865026374,
            "in_reply_to_id": 1865001815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vKgtG",
            "original_commit_id": "c3a89b8b3a96239ff1af9c035a90297ec59a7c17",
            "original_line": 1748,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2471511626,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865026374/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-01T21:49:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865026374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31410#discussion_r1865102543"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865102543"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I am still considering whether `vim.lsp.buf` would be more appropriate (it just needs one parameter, since `count` can represent either `expand` or `shrink`). However, if `selection_range` is treated as a separate module, adding new APIs should be convenient, such as `vim.lsp.selection_range.get({pos})`. This could provide some extensibility.",
            "commit_id": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
            "created_at": "2024-12-02T01:28:10Z",
            "diff_hunk": "@@ -1744,6 +1744,31 @@ is_enabled({filter})                         *vim.lsp.inlay_hint.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.selection_range                      *lsp-selection_range*",
            "html_url": "https://github.com/neovim/neovim/pull/31410#discussion_r1865102543",
            "id": 1865102543,
            "in_reply_to_id": 1865001815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vKzTP",
            "original_commit_id": "c3a89b8b3a96239ff1af9c035a90297ec59a7c17",
            "original_line": 1748,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2471591472,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865102543/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-02T01:28:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865102543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31410#discussion_r1865155772"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865155772"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It would be great if we could use the tree-sitter at the same time. However, I think it might be better to have a dedicated module for this, because `selection_range` is just part of their overlapping functionality. For example, `foldexpr` also has overlaps. If we could provide a foldexpr that uses LSP when LSP support is available, otherwise uses tree-sitter.\r\n\r\nSemantic highlighting works well with tree-sitter highlighting in this regard. I haven't seen an editor with richer code highlighting than nvim, but highlighting only needs to be overridden according to priority, so there's no need for special implementation.",
            "commit_id": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
            "created_at": "2024-12-02T02:49:27Z",
            "diff_hunk": "@@ -1744,6 +1744,31 @@ is_enabled({filter})                         *vim.lsp.inlay_hint.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.selection_range                      *lsp-selection_range*",
            "html_url": "https://github.com/neovim/neovim/pull/31410#discussion_r1865155772",
            "id": 1865155772,
            "in_reply_to_id": 1865001815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vLAS8",
            "original_commit_id": "c3a89b8b3a96239ff1af9c035a90297ec59a7c17",
            "original_line": 1748,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2471654298,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865155772/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-02T02:49:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865155772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31410#discussion_r1866260737"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866260737"
                }
            },
            "author_association": "MEMBER",
            "body": "> Why not both? We need one for the other anyway.\r\n\r\nSure we can have both, question is in which form.\r\n\r\nDo we end up with:\r\n\r\n- lsp.selection_range.expand\r\n- lsp.selection_range.shrink\r\n- treesitter.shrink\r\n- treesitter.expand\r\n\r\n+ others, like jump (`vim.jump` to next edge?) and whatever use-cases people come up\r\n\r\nOr do we come up with an approach that composes a bit better and avoids the mirroring, reducing the surface area.\r\n\r\n\r\n> For example, foldexpr also has overlaps. If we could provide a foldexpr that uses LSP when LSP support is available, otherwise uses tree-sitter.\r\n\r\nIf you draw the parallel to foldexpr I think you need to look at it a bit differently. `foldexpr` is the implementation, but the user interface for folds are the `z` methods like `zc`, etc.\r\n\r\nSo if we mirror the approach we'd instead end up with something like a `nodesexpr` or `selectionexpr` and have `vim.selection.shrink` / `vim.selection.expand`. Or something else altogether.\r\n\r\n\r\nI haven't given this much thought yet, but it appears to me that there's quite a large design space and I think it warrants talking about the different options. Measure twice cut once or there's a higher risk we end up with an API that's going to be deprecated a version later.\r\n",
            "commit_id": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
            "created_at": "2024-12-02T17:08:08Z",
            "diff_hunk": "@@ -1744,6 +1744,31 @@ is_enabled({filter})                         *vim.lsp.inlay_hint.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.selection_range                      *lsp-selection_range*",
            "html_url": "https://github.com/neovim/neovim/pull/31410#discussion_r1866260737",
            "id": 1866260737,
            "in_reply_to_id": 1865001815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vPOEB",
            "original_commit_id": "c3a89b8b3a96239ff1af9c035a90297ec59a7c17",
            "original_line": 1748,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2473361007,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866260737/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-02T17:08:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866260737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31410#discussion_r1866269015"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866269015"
                }
            },
            "author_association": "MEMBER",
            "body": "Could this be implemented as a \"scope\" textobject? (In treesitter parlance, you'd rely on `locals` queries, which we could easily upstream from nvim-treesitter for the parsers we bundle. I think I would like to keep a \"lower-level\" tree movement as a separate object, though, since I wouldn't like an LSP to override it ever.)",
            "commit_id": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
            "created_at": "2024-12-02T17:12:59Z",
            "diff_hunk": "@@ -1744,6 +1744,31 @@ is_enabled({filter})                         *vim.lsp.inlay_hint.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.selection_range                      *lsp-selection_range*",
            "html_url": "https://github.com/neovim/neovim/pull/31410#discussion_r1866269015",
            "id": 1866269015,
            "in_reply_to_id": 1865001815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vPQFX",
            "original_commit_id": "c3a89b8b3a96239ff1af9c035a90297ec59a7c17",
            "original_line": 1748,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2473374475,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866269015/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-02T17:13:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866269015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31410#discussion_r1866270708"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31410"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866270708"
                }
            },
            "author_association": "MEMBER",
            "body": "At this point, it's not clear which implementation yields the best results, so we are very much at the stage of \"let the user decide\". And for some servers it might be found that the treesitter implementation is much better than LSP, so there might not be a \"one size fits all\".",
            "commit_id": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
            "created_at": "2024-12-02T17:14:12Z",
            "diff_hunk": "@@ -1744,6 +1744,31 @@ is_enabled({filter})                         *vim.lsp.inlay_hint.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.selection_range                      *lsp-selection_range*",
            "html_url": "https://github.com/neovim/neovim/pull/31410#discussion_r1866270708",
            "id": 1866270708,
            "in_reply_to_id": 1865001815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vPQf0",
            "original_commit_id": "c3a89b8b3a96239ff1af9c035a90297ec59a7c17",
            "original_line": 1748,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2473377003,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866270708/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-02T17:14:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1866270708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm not quite sure how magical the builtin features of nvim should be.\r\n\r\nFor multi-client support, the simplest method is to let the user choose to have a single client provide the selection range. Although I currently plan to implement merging the selection ranges provided by multiple clients, that requires writing a few functions to complete range comparison and sorting. If the comparison and sorting of ranges are completed, should more user-friendly features be provided? For example, the user first selects a range, or after the user selects it through `expand()`, they expand the selected range themselves, and then `expand()` will select the smallest range that is larger than it.\r\n\r\nKISS or make it stronger?",
            "created_at": "2024-12-02T01:38:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2510387962",
            "id": 2510387962,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6VoXr6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2510387962/reactions"
            },
            "updated_at": "2024-12-02T01:38:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2510387962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Personally, I would focus (first) on `selectionRange` support inside `LocationLinks`, so that \"go to definition\" could (optionally?) enter selection mode on the target.\r\n\r\nFor the stand-alone `selectionRange` request, I don't understand the use case enough to have a good opinion (although my bad opinion is that this doesn't look like _semantic_ information, so something that is more appropriately handled at a lower level -- which is treesitter for us).",
            "created_at": "2024-12-02T17:16:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512206255",
            "id": 2512206255,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6VvTmv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512206255/reactions"
            },
            "updated_at": "2024-12-02T17:16:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512206255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> although my bad opinion is that this doesn't look like semantic information, so something that is more appropriately handled at a lower level -- which is treesitter for us).\r\n\r\nIt's typically syntax nodes. From the spec:\r\n\r\n> Typically, but not necessary, selection ranges correspond to the nodes of the syntax tree.\r\n\r\nI don't know any concrete examples where that's not the case. Even if it were, the information returned is:\r\n\r\n```\r\nexport interface SelectionRange {\r\n\t/**\r\n\t * The [range](#Range) of this selection range.\r\n\t */\r\n\trange: Range;\r\n\t/**\r\n\t * The parent selection range containing this range. Therefore\r\n\t * `parent.range` must contain `this.range`.\r\n\t */\r\n\tparent?: SelectionRange;\r\n}\r\n\r\ninterface Range {\r\n\tstart: Position;\r\n\tend: Position;\r\n}\r\n\r\ninterface Position {\r\n\tline: uinteger;\r\n\tcharacter: uinteger;\r\n}\r\n\r\n```\r\n\r\nDoesn't cross documents.\r\nIt's the same data one can get via tree-sitter. I suspect there might be differences between the two if the language server has a slightly different syntax tree representation but given that the shape of the data is the same we can decouple providing the information (lsp, ts) from consuming the information (grow and shrink selections, jump to edges, etc.)\r\n\r\n\r\n\r\n\r\n",
            "created_at": "2024-12-02T17:47:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512272350",
            "id": 2512272350,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6Vvjve",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512272350/reactions"
            },
            "updated_at": "2024-12-02T17:47:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512272350",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "From reading the spec and your comment, I strongly suspect that the \"real\" user-facing interface here is the `LocationLink` field, and that the stand-alone request was added mostly as a server debugging tool because someone happened to suggest it at the right time.\r\n\r\n@MariaSolOs ?",
            "created_at": "2024-12-02T17:52:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512283074",
            "id": 2512283074,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6VvmXC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512283074/reactions"
            },
            "updated_at": "2024-12-02T17:52:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512283074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> From reading the spec and your comment, I strongly suspect that the \"real\" user-facing interface here is the `LocationLink` field, and that the stand-alone request was added mostly as a server debugging tool because someone happened to suggest it at the right time.\r\n> \r\n> @MariaSolOs ?\r\n\r\nI suspect it's https://code.visualstudio.com/docs/editor/codebasics#_shrinkexpand-selection\r\n\r\n(The request also supports multiple ranges in the params, which matches their multi-cursor use-case)",
            "created_at": "2024-12-02T17:53:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512284967",
            "id": 2512284967,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6Vvm0n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512284967/reactions"
            },
            "updated_at": "2024-12-02T17:54:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512284967",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@clason I'm not familiar of the historical motivation for this feature in LSP, but I do agree that it would basically match Treesitter's incremental selection (taking into account multicursors as @mfussenegger pointed out).",
            "created_at": "2024-12-02T17:57:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512293553",
            "id": 2512293553,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6Vvo6x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512293553/reactions"
            },
            "updated_at": "2024-12-02T17:57:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512293553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks! Github spelunking can be fun.\r\n\r\nMy personal 2c, as a final summary of my comments:\r\n\r\n* It would be good to add internal plumbing for `selectionRange` and hook it into the existing  `textDocument` handlers.\r\n* If we do that, we might as well do whatever is low-hanging fruit around `textDocument/selectionRange`, but low priority.\r\n* We should _not_ be providing an LSP API for that; leave it for users/plugins for now.\r\n* If we can add low-level selection handling APIs for people to use in `selectionRange` handlers, those could be welcome (as standalone PRs).\r\n* Incremental selection should be treesitter first. (Not sure I'd consider upstreaming `incremental selection` in its current form; I'd prefer basic \"node\" and \"scope\" (default to uptree if no locals queries exist) textobjects instead.)",
            "created_at": "2024-12-02T18:03:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512310469",
            "id": 2512310469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6VvtDF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512310469/reactions"
            },
            "updated_at": "2024-12-02T18:04:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512310469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It would be good to add internal plumbing for selectionRange and hook it into the existing textDocument handlers.\r\nThere may be such usage, but the intended use for which it was created is as shown in my demo video above, which is similar to incremental selection in tree-sitter.\r\n\r\nThis usage should originate from (or at least be popularized by) IntelliJ IDEA's [`Ctrl-W`](https://www.jetbrains.com/guide/java/tips/extend-selection/) (I only found a relatively recent description, but I'm sure this feature has existed for a long time), which is very popular and IntelliJ users should be quite familiar with. This feature in LSP should be learned from it.\r\n\r\n> Incremental selection should be treesitter first. (Not sure I'd consider upstreaming incremental selection in its current form; I'd prefer basic \"node\" and \"scope\" (default to uptree if no locals queries exist) textobjects instead.)\r\n\r\nCompared to tree-sitter, I think obtaining free features by implementing the LSP specification is more convenient, as we do not need to deal with a series of after-sales services for the LSP server.\r\n\r\nIt seems that there is no precedent for such a selection feature, but implementing the LSP specification should be a clear goal, and there is also the possibility of providing more selection source. I will continue to work on this PR in my spare time.",
            "created_at": "2024-12-02T18:36:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512388618",
            "id": 2512388618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6VwAIK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512388618/reactions"
            },
            "updated_at": "2024-12-02T18:36:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512388618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry, but that sounds like particularly weak justification. The editor we need to consider first is Neovim: How does a feature fit into the (already _very_ large) UX surface?\r\n\r\nAnd there's a difference between \"implementing the full specification\" (which, yes, we aim at) and \"replicating every LSP-driven feature from other editors\" (which, as a general rule, we don't).",
            "created_at": "2024-12-02T18:39:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512396921",
            "id": 2512396921,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6VwCJ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512396921/reactions"
            },
            "updated_at": "2024-12-02T18:39:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512396921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> replicating every LSP-driven feature from other editors\r\n\r\nThis is not my direct goal; I was simply explaining the expected behavior rather than discussing the specification, as I thought it would make things easier to understand. If I gave the impression that I was merely replicating features from other editors, I apologize—that is not the case.\r\n\r\nSpecifically regarding the specification, the result it returns is a range, where the parent of this range is another range that contains it, forming a recursive structure. It’s important to note that since the specification allows empty ranges (to ensure that multiple positions passed in can correspond to ranges via array indices), some language servers adopt the practice of always returning an empty range at the first level, with the actual useful ranges following. This provides language servers with significant flexibility, making it challenging to directly use this as an enhancement for other features. So my point is:\r\n\r\n1. It is suitable for implementing incremental selection.\r\n2. It is not suitable for implementing other functionalities.\r\n3. I see no compelling reason not to use it for incremental selection.\r\n\r\nFinally, I am not opposed at all to the idea of using this to enhance other functionalities. The reason I kept this method as a separate module instead of placing it under vim.lsp.buf is to leave room for a potential vim.lsp.selection_range.get.\r\n",
            "created_at": "2024-12-02T19:04:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2512488628",
            "id": 2512488628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6VwYi0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512488628/reactions"
            },
            "updated_at": "2024-12-02T19:04:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512488628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Regardless, if there are concerns about introducing the incremental selection feature into nvim itself, I will pause this PR. I use textobjects (powered by tree-sitter) a lot, and repeatedly holding down a key instead of directly achieving the goal is not a very vim-like operation for me. From the spec, `textDocument/selectionRange` should be strongly tied to incremental selection; it's just an attempt to try some new methods.\r\n\r\nFor this visual-first way of operating, I remember @justinmk seemed to have put it on the roadmap during the previous neovimconf. I would like to hear your thoughts on this feature.\r\n\r\nBy the way, regarding making this method provide a low-level API, I think it might be blocked by https://github.com/neovim/neovim/issues/25509, so I currently have no plans to implement `vim.selection_range.get({pos})`.",
            "created_at": "2024-12-03T01:40:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2513352679",
            "id": 2513352679,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6Vzrfn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513352679/reactions"
            },
            "updated_at": "2024-12-03T02:41:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513352679",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, there are \"concerns about introducing the incremental selection feature into nvim\", namely _how_. This is a discussion I do not want to have tied to LSP; this should be a separate issue that also involves treesitter incremental selection and textobjects (which is \"incremental selection at home\").\r\n\r\nThe protocol only states that the \"selection range request is sent from the client to the server to return suggested selection ranges at an array of given positions\"; it does not say _anything_ about what to do with the ranges. So _this_ PR should implement that _and only that_. If even that is blocked by not having a suitable representation of the return type and requires the Ranges/Pos PR (or switching to that when it's done would be _too_ breaking), then you are right and there's nothing to be done for now.",
            "created_at": "2024-12-03T07:41:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2513768681",
            "id": 2513768681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6V1RDp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513768681/reactions"
            },
            "updated_at": "2024-12-03T07:41:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513768681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This is a discussion I do not want to have tied to LSP; this should be a separate issue that also involves treesitter incremental selection and textobjects (which is \"incremental selection at home\").\r\n\r\nThis is also my biggest concern (see my first comment here). If I don't know the solution, I have no direction to implement this PR.\r\n\r\nIncremental selection should indeed not be tied to LSP. However, if nvim does not have an existing incremental selection feature, then I think it would be difficult for us to discuss how to implement the interaction between features that do not exist. This is a paradox, and as a result, it still means leaving the implementation of the incremental selection feature to the plugins that need it.",
            "created_at": "2024-12-03T09:05:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2513929284",
            "id": 2513929284,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6V14RE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513929284/reactions"
            },
            "updated_at": "2024-12-03T09:07:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513929284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is exactly why I'm saying \"focus on implementing the request according to the protocol here and ignore the incremental selection feature for now\". One step at a time. If this is not acceptable to you, it's indeed better to close this PR.\r\n\r\n(The pushback you are getting here is (only) from you treating these two aspects as inseparable, but they really aren't.)",
            "created_at": "2024-12-03T09:09:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2513940576",
            "id": 2513940576,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6V17Bg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513940576/reactions"
            },
            "updated_at": "2024-12-03T09:10:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513940576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There's nothing unacceptable about this to me. I don't know if my rather average English skills convey any unintended implications to others, but I am merely discussing whether it should be done. All discussions are based on determining what should be done and how to do it. I have no intention of pushing my own dotfiles into this repository.\r\n\r\nAdditionally, I believe I have sufficiently explained (from a historical perspective and from the perspective of implementations on other servers) that the design goal of this method is indeed for incremental selection. If you have ideas for using it for other purposes, I think we can continue the discussion after https://github.com/neovim/neovim/issues/25509 was resolved.",
            "created_at": "2024-12-03T09:21:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2513969729",
            "id": 2513969729,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6V2CJB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513969729/reactions"
            },
            "updated_at": "2024-12-03T09:21:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513969729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And all I am saying is that motivation is fine, but out of scope for _this_ PR, which should focus _only_ on implementing the request (as the PR title indicates). So there should **not** be a discussion about incremental selection **here**.",
            "created_at": "2024-12-03T09:28:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2513984384",
            "id": 2513984384,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6V2FuA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513984384/reactions"
            },
            "updated_at": "2024-12-03T09:28:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2513984384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "As a reminder, I saw @justinmk mention on Twitter that visual-first operations and multi-cursor will be on the agenda this year. These two agendas are very related to this feature, and I believe it is also part of what @clason mentioned that goes beyond the scope of this PR. I will push this PR again or close it once there are results on visual-first or multi-cursor.",
            "created_at": "2025-02-11T08:35:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2650123860",
            "id": 2650123860,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6d9a5U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650123860/reactions"
            },
            "updated_at": "2025-02-11T08:35:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650123860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To unblock this, I'm in favor of `vim.lsp.buf.selection_range` as suggested in https://github.com/neovim/neovim/pull/31410#discussion_r1865001815 . Definitely doesn't seem like a new module is needed for this.",
            "created_at": "2025-02-11T11:29:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/31410#issuecomment-2650536623",
            "id": 2650536623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
            "node_id": "IC_kwDOAPphoM6d-_qv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650536623/reactions"
            },
            "updated_at": "2025-02-11T11:29:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650536623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31410/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31410/commits",
    "created_at": "2024-12-01T17:01:52Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31410.diff",
    "draft": true,
    "head": {
        "label": "ofseed:lsp-select",
        "ref": "lsp-select",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ofseed/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ofseed/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ofseed/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ofseed/neovim/branches{/branch}",
            "clone_url": "https://github.com/ofseed/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ofseed/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ofseed/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ofseed/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ofseed/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ofseed/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ofseed/neovim/contributors",
            "created_at": "2021-11-30T18:13:03Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ofseed/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ofseed/neovim/downloads",
            "events_url": "https://api.github.com/repos/ofseed/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ofseed/neovim/forks",
            "full_name": "ofseed/neovim",
            "git_commits_url": "https://api.github.com/repos/ofseed/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ofseed/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ofseed/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ofseed/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ofseed/neovim/hooks",
            "html_url": "https://github.com/ofseed/neovim",
            "id": 433537354,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ofseed/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ofseed/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ofseed/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ofseed/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ofseed/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ofseed/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ofseed/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ofseed/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGddBSg",
            "notifications_url": "https://api.github.com/repos/ofseed/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ofseed/neovim/pulls{/number}",
            "pushed_at": "2025-02-14T14:55:11Z",
            "releases_url": "https://api.github.com/repos/ofseed/neovim/releases{/id}",
            "size": 301753,
            "ssh_url": "git@github.com:ofseed/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ofseed/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ofseed/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ofseed/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ofseed/neovim/subscription",
            "svn_url": "https://github.com/ofseed/neovim",
            "tags_url": "https://api.github.com/repos/ofseed/neovim/tags",
            "teams_url": "https://api.github.com/repos/ofseed/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ofseed/neovim/git/trees{/sha}",
            "updated_at": "2025-02-14T03:58:00Z",
            "url": "https://api.github.com/repos/ofseed/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
            "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
            "followers_url": "https://api.github.com/users/ofseed/followers",
            "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ofseed",
            "id": 61115159,
            "login": "ofseed",
            "node_id": "MDQ6VXNlcjYxMTE1MTU5",
            "organizations_url": "https://api.github.com/users/ofseed/orgs",
            "received_events_url": "https://api.github.com/users/ofseed/received_events",
            "repos_url": "https://api.github.com/users/ofseed/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ofseed",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31410",
    "id": 2209041408,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31410",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "f22ee3d257a4a2bcd40daa2c178848bef5250935",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6Dq0wA",
    "number": 31410,
    "patch_url": "https://github.com/neovim/neovim/pull/31410.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31410/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/e25b5dc5ab7fed3bef682dbc4e4282e8af156df0",
    "title": "feat(lsp): support `textDocument/selectionRange`",
    "updated_at": "2025-02-12T13:41:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31410",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
        "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
        "followers_url": "https://api.github.com/users/ofseed/followers",
        "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
        "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ofseed",
        "id": 61115159,
        "login": "ofseed",
        "node_id": "MDQ6VXNlcjYxMTE1MTU5",
        "organizations_url": "https://api.github.com/users/ofseed/orgs",
        "received_events_url": "https://api.github.com/users/ofseed/received_events",
        "repos_url": "https://api.github.com/users/ofseed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ofseed",
        "user_view_type": "public"
    }
}