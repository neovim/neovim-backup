{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27392/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27392/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27392"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27392"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27392/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5811,
            "forks_count": 5811,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1839,
            "open_issues_count": 1839,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T23:17:24Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 303311,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85218,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-14T02:06:03Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85218,
            "watchers_count": 85218,
            "web_commit_signoff_required": false
        },
        "sha": "71384129f75462f14344df236cf0a22b83da4f4c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "# Problem\r\n\r\n`vim.treesitter.query.set` only supports overriding queries defined in runtime files. It does not provide a way to extend existing queries. There is not an easy way to customize query behavior based on dynamic configuration (e.g., as a plugin).\r\n\r\n# Solution\r\n\r\nAdd optional arguments to `vim.treesitter.query.set` that correspond to the treesitter query modelines supported in runtime query files.\r\n\r\n## Update 2024-02-23\r\n\r\n- Support added for query overrides from `vim.treesitter.query.set` to be\r\n  applied for an entire language or for individual buffers by providing\r\n  and optional `bufnr` argument to both `vim.treesitter.query.set` and\r\n  `vim.treesitter.query.get`.\r\n\r\nImplementation notes:\r\n\r\n- A given query can be extended by multiple callers. For example,\r\n  multiple plugins can provide extensions to the same query. As such,\r\n  parsing of query overrides and extensions has been moved to\r\n  `vim.treesitter.query.get`.\r\n- Queries can be extended (and also now overridden) for an entire\r\n  language or for individual buffers. Buffers with buffer-only overrides\r\n  or extensions will also include any global language extensions.\r\n- Tree-sitter fold, highlighter, and languagetree modules have been\r\n  updated to support buffer-only query overrides and extensions.\r\n- Memoize cache invalidation was necessary to implement this feature\r\n  with consistent behavior (i.e., seeing query changes applied via\r\n  `vim.treesitter.query.set` immediately). The\r\n  `vim.treesitter.query.get` memoize hash is now cleared when calling\r\n  `vim.treesitter.query.set`. When setting buffer-only queries the\r\n  corresponding function call is removed from the memoize cache. When\r\n  setting global lang queries the entire memoize cache is cleared. This\r\n  scheme was picked under the assumption that global lang queries will\r\n  typically be set before getting queries, whereas buffer-only queries\r\n  may be set and changed throughout a session.\r\n\r\nCloses #26965.",
    "closed_at": "2024-09-05T08:09:58Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27392#discussion_r1483289915"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483289915"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@field? inherits string|string[]\r\n---@field? extends boolean\r\n```",
            "commit_id": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
            "created_at": "2024-02-08T16:46:37Z",
            "diff_hunk": "@@ -208,16 +208,54 @@ function M.set_query(...)\n   M.set(...)\n end\n \n+---@class SetQueryOpts\n+---@field inherits (string|string[]|nil)\n+---@field extends (boolean|nil)",
            "html_url": "https://github.com/neovim/neovim/pull/27392#discussion_r1483289915",
            "id": 1483289915,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YaTU7",
            "original_commit_id": "cadede073ba685be9794d4fed644c93b05d9ea5d",
            "original_line": 213,
            "original_position": 6,
            "original_start_line": 212,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1870746365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483289915/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-09T04:22:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483289915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27392#discussion_r1483292714"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483292714"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@class vim.treesitter.query.SetOpts\r\n```\r\n(or something like that; this might not be the best choice)",
            "commit_id": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
            "created_at": "2024-02-08T16:48:44Z",
            "diff_hunk": "@@ -208,16 +208,54 @@ function M.set_query(...)\n   M.set(...)\n end\n \n+---@class SetQueryOpts",
            "html_url": "https://github.com/neovim/neovim/pull/27392#discussion_r1483292714",
            "id": 1483292714,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YaUAq",
            "original_commit_id": "cadede073ba685be9794d4fed644c93b05d9ea5d",
            "original_line": 211,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1870746365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483292714/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T04:22:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483292714",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27392#discussion_r1483295412"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483295412"
                }
            },
            "author_association": "MEMBER",
            "body": "We can write a helper function like `ensure_list`, see `vim/treesitter/language.lua`",
            "commit_id": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
            "created_at": "2024-02-08T16:50:52Z",
            "diff_hunk": "@@ -208,16 +208,54 @@ function M.set_query(...)\n   M.set(...)\n end\n \n+---@class SetQueryOpts\n+---@field inherits (string|string[]|nil)\n+---@field extends (boolean|nil)\n+\n --- Sets the runtime query named {query_name} for {lang}\n ---\n---- This allows users to override any runtime files and/or configuration\n+--- This allows users to override or extend any runtime files and/or configuration\n --- set by plugins.\n ---\n ---@param lang string Language to use for the query\n ---@param query_name string Name of the query (e.g., \"highlights\")\n----@param text string Query text (unparsed).\n-function M.set(lang, query_name, text)\n-  explicit_queries[lang][query_name] = M.parse(lang, text)\n+---@param text string Query text (unparsed)\n+---@param opts? SetQueryOpts (table) Optional keyword arguments\n+---   - inherits (string|string[]|nil) Language(s) this query should inherit\n+---     (see |treesitter-query-modeline-inherits|)\n+---   - extends (boolean|nil) If `true`, the query should be used as an extension query\n+---     (see |treesitter-query-modeline-extends|)\n+function M.set(lang, query_name, text, opts)\n+  local query ---@type vim.treesitter.Query\n+\n+  if not opts then\n+    query = M.parse(lang, text)\n+  else\n+    local query_files = {}\n+\n+    if opts.inherits then\n+      local inherits = opts.inherits",
            "html_url": "https://github.com/neovim/neovim/pull/27392#discussion_r1483295412",
            "id": 1483295412,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YaUq0",
            "original_commit_id": "cadede073ba685be9794d4fed644c93b05d9ea5d",
            "original_line": 237,
            "original_position": 34,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1870746365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483295412/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T04:22:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483295412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27392#discussion_r1483298694"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483298694"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder if a behavior of `extends` is to \"extend\" queries dynamically w.r.t. runtimepath. In the current implementation, query files are read once by when `query.set()` is called.\r\n\r\nWe should also consider a use case where this can be called from multiple callsites (e.g., different plugins trying to do dynamic/runtime injection).",
            "commit_id": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
            "created_at": "2024-02-08T16:53:30Z",
            "diff_hunk": "@@ -208,16 +208,54 @@ function M.set_query(...)\n   M.set(...)\n end\n \n+---@class SetQueryOpts\n+---@field inherits (string|string[]|nil)\n+---@field extends (boolean|nil)\n+\n --- Sets the runtime query named {query_name} for {lang}\n ---\n---- This allows users to override any runtime files and/or configuration\n+--- This allows users to override or extend any runtime files and/or configuration\n --- set by plugins.\n ---\n ---@param lang string Language to use for the query\n ---@param query_name string Name of the query (e.g., \"highlights\")\n----@param text string Query text (unparsed).\n-function M.set(lang, query_name, text)\n-  explicit_queries[lang][query_name] = M.parse(lang, text)\n+---@param text string Query text (unparsed)\n+---@param opts? SetQueryOpts (table) Optional keyword arguments\n+---   - inherits (string|string[]|nil) Language(s) this query should inherit\n+---     (see |treesitter-query-modeline-inherits|)\n+---   - extends (boolean|nil) If `true`, the query should be used as an extension query\n+---     (see |treesitter-query-modeline-extends|)\n+function M.set(lang, query_name, text, opts)\n+  local query ---@type vim.treesitter.Query\n+\n+  if not opts then\n+    query = M.parse(lang, text)\n+  else\n+    local query_files = {}\n+\n+    if opts.inherits then\n+      local inherits = opts.inherits\n+      if type(inherits) == 'string' then\n+        inherits = { inherits }\n+      end\n+      ---@cast inherits string[]\n+\n+      for _, inherited in ipairs(inherits) do\n+        local files = M.get_files(inherited, query_name, true)\n+        vim.list_extend(query_files, files)\n+      end\n+    end\n+\n+    if opts.extends then\n+      local files = M.get_files(lang, query_name)\n+      vim.list_extend(query_files, files)\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/27392#discussion_r1483298694",
            "id": 1483298694,
            "line": 368,
            "node_id": "PRRC_kwDOAPphoM5YaVeG",
            "original_commit_id": "cadede073ba685be9794d4fed644c93b05d9ea5d",
            "original_line": 368,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": 188,
            "pull_request_review_id": 1870746365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483298694/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T04:22:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483298694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27392#discussion_r1483844655"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483844655"
                }
            },
            "author_association": "MEMBER",
            "body": "You could use `'` to avoid escaping.",
            "commit_id": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
            "created_at": "2024-02-09T04:20:32Z",
            "diff_hunk": "@@ -523,6 +523,37 @@ describe('treesitter highlighting (C)', function()\n     }\n   end)\n \n+  it('supports extending queries', function()\n+    insert([[\n+    int x = 2;\n+    int y = 2;\n+    return x + y;\n+    ]])\n+\n+    exec_lua [[\n+      vim.treesitter.query.set(\"c\", \"highlights\", \"[\\\";\\\"] @variable\", { extends = true })",
            "html_url": "https://github.com/neovim/neovim/pull/27392#discussion_r1483844655",
            "id": 1483844655,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Ycawv",
            "original_commit_id": "072e8011d5bf9d9defce71438624f0244f7c6028",
            "original_line": 534,
            "original_position": 12,
            "original_start_line": null,
            "path": "test/functional/treesitter/highlight_spec.lua",
            "position": null,
            "pull_request_review_id": 1870746365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483844655/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T04:22:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483844655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27392#discussion_r1483845035"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483845035"
                }
            },
            "author_association": "MEMBER",
            "body": "In addition, the behavior `vim.treesitter.query.get()` after `vim.treesitter.query.set()` can also be tested.",
            "commit_id": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
            "created_at": "2024-02-09T04:21:50Z",
            "diff_hunk": "@@ -523,6 +523,37 @@ describe('treesitter highlighting (C)', function()\n     }\n   end)\n \n+  it('supports extending queries', function()\n+    insert([[\n+    int x = 2;\n+    int y = 2;\n+    return x + y;\n+    ]])\n+\n+    exec_lua [[\n+      vim.treesitter.query.set(\"c\", \"highlights\", \"[\\\";\\\"] @variable\", { extends = true })\n+      vim.treesitter.highlighter.new(vim.treesitter.get_parser(0, \"c\"))\n+    ]]\n+\n+    screen:expect {\n+      grid = [[\n+      {5:int} {4:x} {2:=} {3:2}{4:;}                                                       |\n+      {5:int} {4:y} {2:=} {3:2}{4:;}                                                       |\n+      {2:return} {4:x} {2:+} {4:y;}                                                    |\n+      ^                                                                 |\n+      {1:~                                                                }|*13\n+                                                                       |\n+      ]],\n+      attr_ids = {\n+        [1] = { bold = true, foreground = Screen.colors.Blue },\n+        [2] = { bold = true, foreground = Screen.colors.Brown },\n+        [3] = { foreground = Screen.colors.Magenta },\n+        [4] = { foreground = Screen.colors.Cyan4 },\n+        [5] = { foreground = Screen.colors.SlateBlue },\n+      },\n+    }\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/27392#discussion_r1483845035",
            "id": 1483845035,
            "line": 559,
            "node_id": "PRRC_kwDOAPphoM5Yca2r",
            "original_commit_id": "072e8011d5bf9d9defce71438624f0244f7c6028",
            "original_line": 559,
            "original_position": 33,
            "original_start_line": null,
            "path": "test/functional/treesitter/highlight_spec.lua",
            "position": 37,
            "pull_request_review_id": 1870746365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483845035/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T04:22:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483845035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27392#discussion_r1485436210"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485436210"
                }
            },
            "author_association": "NONE",
            "body": "Just to clarify, you're referring to multiple extensions being applied by calling `set` multiple times, correct? So multiple plugins can extend the same query? If so, reading runtime files and parsing can be delayed until `vim.treesitter.query.get` is called instead of within `set`.\r\n\r\nI noticed one other thing while adding the test for `get` after `set`. `vim.treesitter.query.get` is now memoized, so a call to `get` isn't guaranteed to include the most recent `set` if `get` was previously called. Should the memoize cache be invalidated for a given query after a call to `set`?",
            "commit_id": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
            "created_at": "2024-02-11T02:52:28Z",
            "diff_hunk": "@@ -208,16 +208,54 @@ function M.set_query(...)\n   M.set(...)\n end\n \n+---@class SetQueryOpts\n+---@field inherits (string|string[]|nil)\n+---@field extends (boolean|nil)\n+\n --- Sets the runtime query named {query_name} for {lang}\n ---\n---- This allows users to override any runtime files and/or configuration\n+--- This allows users to override or extend any runtime files and/or configuration\n --- set by plugins.\n ---\n ---@param lang string Language to use for the query\n ---@param query_name string Name of the query (e.g., \"highlights\")\n----@param text string Query text (unparsed).\n-function M.set(lang, query_name, text)\n-  explicit_queries[lang][query_name] = M.parse(lang, text)\n+---@param text string Query text (unparsed)\n+---@param opts? SetQueryOpts (table) Optional keyword arguments\n+---   - inherits (string|string[]|nil) Language(s) this query should inherit\n+---     (see |treesitter-query-modeline-inherits|)\n+---   - extends (boolean|nil) If `true`, the query should be used as an extension query\n+---     (see |treesitter-query-modeline-extends|)\n+function M.set(lang, query_name, text, opts)\n+  local query ---@type vim.treesitter.Query\n+\n+  if not opts then\n+    query = M.parse(lang, text)\n+  else\n+    local query_files = {}\n+\n+    if opts.inherits then\n+      local inherits = opts.inherits\n+      if type(inherits) == 'string' then\n+        inherits = { inherits }\n+      end\n+      ---@cast inherits string[]\n+\n+      for _, inherited in ipairs(inherits) do\n+        local files = M.get_files(inherited, query_name, true)\n+        vim.list_extend(query_files, files)\n+      end\n+    end\n+\n+    if opts.extends then\n+      local files = M.get_files(lang, query_name)\n+      vim.list_extend(query_files, files)\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/27392#discussion_r1485436210",
            "id": 1485436210,
            "in_reply_to_id": 1483298694,
            "line": 368,
            "node_id": "PRRC_kwDOAPphoM5YifUy",
            "original_commit_id": "cadede073ba685be9794d4fed644c93b05d9ea5d",
            "original_line": 368,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": 188,
            "pull_request_review_id": 1874293402,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485436210/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-11T02:52:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485436210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
                "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
                "followers_url": "https://api.github.com/users/tadmccorkle/followers",
                "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
                "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tadmccorkle",
                "id": 41654369,
                "login": "tadmccorkle",
                "node_id": "MDQ6VXNlcjQxNjU0MzY5",
                "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
                "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
                "repos_url": "https://api.github.com/users/tadmccorkle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tadmccorkle",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27392#discussion_r1501363576"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27392"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1501363576"
                }
            },
            "author_association": "MEMBER",
            "body": "A better way of doing this would.be for `_memoize` to return 2 functions instead of one. That way you are not polluting the original function.",
            "commit_id": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
            "created_at": "2024-02-24T07:34:09Z",
            "diff_hunk": "@@ -33,27 +33,54 @@ local function resolve_hash(hash)\n   return hash\n end\n \n+---@return table<any,table<any,any>>\n+local function get_weak_table()\n+  return setmetatable({}, { __mode = 'kv' })\n+end\n+\n+--- @alias vim.func.Hash integer|string|fun(...): any\n+\n+--- @class vim.func.MemoizeTable\n+--- @field clear fun(self, ...)\n+\n --- @generic F: function\n---- @param hash integer|string|fun(...): any\n+--- @param hash vim.func.Hash\n --- @param fn F\n --- @return F\n+--- @overload fun(hash: vim.func.Hash, fn: fun(...): any): vim.func.MemoizeTable\n return function(hash, fn)\n   vim.validate({",
            "html_url": "https://github.com/neovim/neovim/pull/27392#discussion_r1501363576",
            "id": 1501363576,
            "line": 47,
            "node_id": "PRRC_kwDOAPphoM5ZfP14",
            "original_commit_id": "f37478a50825f6c9589d37671f276592c6e759d3",
            "original_line": 47,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/func/_memoize.lua",
            "position": 15,
            "pull_request_review_id": 1899233842,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1501363576/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-24T07:34:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1501363576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "Regarding tests, I was having trouble coming up with a way to test inheriting a query with the default Neovim runtime files. A test can be added in which a \"c\" highlight query inherits from the runtime \"c\" highlight query, but that is effectively the same as the extends test. I can add that in if desired though.",
            "created_at": "2024-02-09T03:36:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1935286564",
            "id": 1935286564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM5zWiEk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935286564/reactions"
            },
            "updated_at": "2024-02-09T03:36:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935286564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
                "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
                "followers_url": "https://api.github.com/users/tadmccorkle/followers",
                "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
                "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tadmccorkle",
                "id": 41654369,
                "login": "tadmccorkle",
                "node_id": "MDQ6VXNlcjQxNjU0MzY5",
                "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
                "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
                "repos_url": "https://api.github.com/users/tadmccorkle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tadmccorkle",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The PR template is not optional. It asks for a problem/solution explanation. Linking to an issue is not sufficient. \r\n\r\nSame for the commit message.",
            "created_at": "2024-02-10T12:44:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1936998773",
            "id": 1936998773,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM5zdEF1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936998773/reactions"
            },
            "updated_at": "2024-02-10T12:44:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936998773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> The PR template is not optional. It asks for a problem/solution explanation. Linking to an issue is not sufficient.\r\n> \r\n> Same for the commit message.\r\n\r\nSorry about that. Description updated and most recent commit includes similar info.",
            "created_at": "2024-02-11T02:35:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1937400054",
            "id": 1937400054,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM5zemD2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937400054/reactions"
            },
            "updated_at": "2024-02-11T02:35:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937400054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
                "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
                "followers_url": "https://api.github.com/users/tadmccorkle/followers",
                "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
                "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tadmccorkle",
                "id": 41654369,
                "login": "tadmccorkle",
                "node_id": "MDQ6VXNlcjQxNjU0MzY5",
                "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
                "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
                "repos_url": "https://api.github.com/users/tadmccorkle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tadmccorkle",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is there an example use case that is motivating this PR?",
            "created_at": "2024-02-11T03:28:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1937409196",
            "id": 1937409196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM5zeoSs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937409196/reactions"
            },
            "updated_at": "2024-02-11T03:28:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937409196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Web templates, or expensive injections that we omit, or customizing conceal in markdown.",
            "created_at": "2024-02-11T09:37:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1937493428",
            "id": 1937493428,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM5ze820",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937493428/reactions"
            },
            "updated_at": "2024-02-11T09:37:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937493428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And that can't be achieved using `;extends` in query files? \n\nA fleshed out example would help inform things as I'm not convinced of the solution here.",
            "created_at": "2024-02-11T09:45:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1937495543",
            "id": 1937495543,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM5ze9X3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937495543/reactions"
            },
            "updated_at": "2024-02-11T09:46:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937495543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think #26965 would be a more suitable place for the use case discussion whereas this PR can more focus on the technical (implementation) side, but one use case I once needed this for is *dynamic* injections: For example, on python docstrings, one could use ReST, markdown, numpy-style, or any other styles to inject which can be determined only dynamically (depending on the buffer contents itself or per-project, user-level config, etc.) rather than static query files with `; extends`. Another example/use cases of dynamic injection is https://github.com/Dronakurl/injectme.nvim.",
            "created_at": "2024-02-11T09:57:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1937499058",
            "id": 1937499058,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM5ze-Oy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937499058/reactions"
            },
            "updated_at": "2024-02-11T10:14:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937499058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks, that's a useful use case.\n\n I would expect dynamic queries like that to be per-buffer as opposed to per-lang, so that's something this PR would need to amend.",
            "created_at": "2024-02-11T10:04:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1937504483",
            "id": 1937504483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM5ze_jj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937504483/reactions"
            },
            "updated_at": "2024-02-11T10:04:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937504483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@wookayin Is this extension behavior more of what you had in mind? It allows multiple callers to extend the same query and gives the option to set/extend queries per buffer or per lang. Still have some issues with memoizing though (refer to the most recent commit message).\r\n\r\nConverting this back to a draft as I haven't had time to thoroughly test this or implement a consistent solution to invalidate the memoize cache.",
            "created_at": "2024-02-20T05:09:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1953497494",
            "id": 1953497494,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM50cAGW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1953497494/reactions"
            },
            "updated_at": "2024-02-20T05:09:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1953497494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
                "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
                "followers_url": "https://api.github.com/users/tadmccorkle/followers",
                "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
                "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tadmccorkle",
                "id": 41654369,
                "login": "tadmccorkle",
                "node_id": "MDQ6VXNlcjQxNjU0MzY5",
                "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
                "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
                "repos_url": "https://api.github.com/users/tadmccorkle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tadmccorkle",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Regarding memoize function cache invalidation, it felt odd to change a query via `vim.treesitter.query.set` and not have the changes reflected until a GC occurred sometime later. That behavior may not be important enough (or my cache clearing implementation may need more work/thought) to warrant including that here.",
            "created_at": "2024-02-24T02:28:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-1962221133",
            "id": 1962221133,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM509R5N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1962221133/reactions"
            },
            "updated_at": "2024-02-24T02:30:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1962221133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
                "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
                "followers_url": "https://api.github.com/users/tadmccorkle/followers",
                "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
                "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tadmccorkle",
                "id": 41654369,
                "login": "tadmccorkle",
                "node_id": "MDQ6VXNlcjQxNjU0MzY5",
                "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
                "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
                "repos_url": "https://api.github.com/users/tadmccorkle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tadmccorkle",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tadmccorkle are you still working on this? If not, I would like to continue your work :)",
            "created_at": "2024-09-03T15:20:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-2326800354",
            "id": 2326800354,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM6KsCfi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2326800354/reactions"
            },
            "updated_at": "2024-09-03T15:20:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2326800354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @tadmccorkle are you still working on this? If not, I would like to continue your work :)\r\n\r\n@MariaSolOs This slipped my mind not too long after my last commit, so I'm not actively working on it. I saw you opened a PR to continue it - thanks! Sorry for letting it sit out so long.",
            "created_at": "2024-09-04T15:11:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-2329337875",
            "id": 2329337875,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM6K1uAT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329337875/reactions"
            },
            "updated_at": "2024-09-04T15:11:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329337875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
                "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
                "followers_url": "https://api.github.com/users/tadmccorkle/followers",
                "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
                "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tadmccorkle",
                "id": 41654369,
                "login": "tadmccorkle",
                "node_id": "MDQ6VXNlcjQxNjU0MzY5",
                "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
                "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
                "repos_url": "https://api.github.com/users/tadmccorkle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tadmccorkle",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @MariaSolOs This slipped my mind not too long after my last commit, so I'm not actively working on it. I saw you opened a PR to continue it - thanks! Sorry for letting it sit out so long.\r\n\r\nNo worries at all! A lot of the caching logic will be part of a separate PR so I found it easier to open a new one, yet I will base the implementation on what you've done so far. Thanks to you!",
            "created_at": "2024-09-04T15:22:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-2329363314",
            "id": 2329363314,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM6K10Ny",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329363314/reactions"
            },
            "updated_at": "2024-09-04T15:22:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329363314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/30257",
            "created_at": "2024-09-05T08:09:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-2330883702",
            "id": 2330883702,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM6K7nZ2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2330883702/reactions"
            },
            "updated_at": "2024-09-05T08:09:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2330883702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Noting here for the sake of the record: I think this PR tried to do too much at once (buffer-local queries, refactoring modules to make use of that). Instead, we should first focus _only_ on letting `query.set` extend queries; for that it's enough to (\"just\") rewrite the query logic so that `set` queries are treated as on top of the \"stack\" (i.e., are always considered before queries on `runtimepath`) instead of short-circuiting the `rtp` query logic. This way, it's enough to add `; extends` to the query string, same as on `rtp`. (We'd also get `; inherits` for free.)\r\n\r\nAn option to skip looking at `rtp` may still be useful for performance reasons.",
            "created_at": "2025-01-11T10:56:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/27392#issuecomment-2585202821",
            "id": 2585202821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
            "node_id": "IC_kwDOAPphoM6aFxCF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585202821/reactions"
            },
            "updated_at": "2025-01-11T10:57:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585202821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27392/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27392/commits",
    "created_at": "2024-02-08T14:04:45Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27392.diff",
    "draft": false,
    "head": {
        "label": "tadmccorkle:ts-query-set-modeline-args",
        "ref": "ts-query-set-modeline-args",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tadmccorkle/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tadmccorkle/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tadmccorkle/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tadmccorkle/neovim/branches{/branch}",
            "clone_url": "https://github.com/tadmccorkle/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tadmccorkle/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tadmccorkle/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tadmccorkle/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tadmccorkle/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tadmccorkle/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tadmccorkle/neovim/contributors",
            "created_at": "2023-07-03T04:18:51Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tadmccorkle/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tadmccorkle/neovim/downloads",
            "events_url": "https://api.github.com/repos/tadmccorkle/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tadmccorkle/neovim/forks",
            "full_name": "tadmccorkle/neovim",
            "git_commits_url": "https://api.github.com/repos/tadmccorkle/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tadmccorkle/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tadmccorkle/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tadmccorkle/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/tadmccorkle/neovim/hooks",
            "html_url": "https://github.com/tadmccorkle/neovim",
            "id": 661522825,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tadmccorkle/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tadmccorkle/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tadmccorkle/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tadmccorkle/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tadmccorkle/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/tadmccorkle/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tadmccorkle/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tadmccorkle/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOJ24JiQ",
            "notifications_url": "https://api.github.com/repos/tadmccorkle/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
                "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
                "followers_url": "https://api.github.com/users/tadmccorkle/followers",
                "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
                "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tadmccorkle",
                "id": 41654369,
                "login": "tadmccorkle",
                "node_id": "MDQ6VXNlcjQxNjU0MzY5",
                "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
                "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
                "repos_url": "https://api.github.com/users/tadmccorkle/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tadmccorkle",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tadmccorkle/neovim/pulls{/number}",
            "pushed_at": "2024-09-19T05:27:54Z",
            "releases_url": "https://api.github.com/repos/tadmccorkle/neovim/releases{/id}",
            "size": 249063,
            "ssh_url": "git@github.com:tadmccorkle/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/tadmccorkle/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tadmccorkle/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tadmccorkle/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tadmccorkle/neovim/subscription",
            "svn_url": "https://github.com/tadmccorkle/neovim",
            "tags_url": "https://api.github.com/repos/tadmccorkle/neovim/tags",
            "teams_url": "https://api.github.com/repos/tadmccorkle/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tadmccorkle/neovim/git/trees{/sha}",
            "updated_at": "2023-07-06T01:49:37Z",
            "url": "https://api.github.com/repos/tadmccorkle/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
            "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
            "followers_url": "https://api.github.com/users/tadmccorkle/followers",
            "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
            "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tadmccorkle",
            "id": 41654369,
            "login": "tadmccorkle",
            "node_id": "MDQ6VXNlcjQxNjU0MzY5",
            "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
            "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
            "repos_url": "https://api.github.com/users/tadmccorkle/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tadmccorkle",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27392",
    "id": 1717669111,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27392",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "fab505289f334dc5828bb17387baf93a4ad5bad3",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5mYYz3",
    "number": 27392,
    "patch_url": "https://github.com/neovim/neovim/pull/27392.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27392/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/4eab810fb8eadb9c2ea9da2aa38305b46ddbd6f9",
    "title": "feat(treesitter): add optional modeline arguments to query.set",
    "updated_at": "2025-01-11T10:57:31Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27392",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41654369?v=4",
        "events_url": "https://api.github.com/users/tadmccorkle/events{/privacy}",
        "followers_url": "https://api.github.com/users/tadmccorkle/followers",
        "following_url": "https://api.github.com/users/tadmccorkle/following{/other_user}",
        "gists_url": "https://api.github.com/users/tadmccorkle/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tadmccorkle",
        "id": 41654369,
        "login": "tadmccorkle",
        "node_id": "MDQ6VXNlcjQxNjU0MzY5",
        "organizations_url": "https://api.github.com/users/tadmccorkle/orgs",
        "received_events_url": "https://api.github.com/users/tadmccorkle/received_events",
        "repos_url": "https://api.github.com/users/tadmccorkle/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tadmccorkle/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tadmccorkle/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tadmccorkle",
        "user_view_type": "public"
    }
}