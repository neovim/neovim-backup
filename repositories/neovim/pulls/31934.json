{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31934/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31934/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31934"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31934"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31934/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8dc012252c2b792a8bf834c2578dac33793dcf68"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5811,
            "forks_count": 5811,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1839,
            "open_issues_count": 1839,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T23:17:24Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 303311,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85218,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-14T02:06:03Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85218,
            "watchers_count": 85218,
            "web_commit_signoff_required": false
        },
        "sha": "bf58b757c4c2e1bf2a4afe4279150ca68a68691f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Also remove British National Replacement Character Set.\n\nWe keep the DEC Special Graphics and ASCII despite it not being unicode\nas some old software such as calcurse still rely on this functionality.\n\nReferences:\n- https://github.com/neovim/neovim/pull/31934#discussion_r1911046426\n- https://en.wikipedia.org/wiki/DEC_Special_Graphics\n- https://vt100.net/docs/vt220-rm/chapter2.html#S2.4.3",
    "closed_at": "2025-01-13T12:16:41Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1909635462"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1909635462"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nenum { UNICODE_INVALID = 0xFFFD, };\r\n```",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T01:03:19Z",
            "diff_hunk": "@@ -74,3 +74,5 @@ typedef struct {\n } CharBoundsOff;\n \n typedef utf8proc_int32_t GraphemeState;\n+\n+#define UNICODE_INVALID 0xFFFD",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1909635462",
            "id": 1909635462,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x0rmG",
            "original_commit_id": "7c727d6d57de685baeec1db961b06fabf8b16497",
            "original_line": 78,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/mbyte_defs.h",
            "position": null,
            "pull_request_review_id": 2541308356,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1909635462/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-10T01:03:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1909635462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1910853546"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910853546"
                }
            },
            "author_association": "MEMBER",
            "body": "I think instead we should delete this entire `case` block with a comment indicating only UTF-8 is supported. Leaving the code here provides the (wrong) impression that we are actually handling other character sets.",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T18:23:53Z",
            "diff_hunk": "@@ -645,7 +645,7 @@ static int on_escape(const char *bytes, size_t len, void *user)\n \n     {\n       int setnum = bytes[0] - 0x28;\n-      VTermEncoding *newenc = vterm_lookup_encoding(ENC_SINGLE_94, bytes[1]);\n+      VTermEncoding *newenc = vterm_lookup_encoding();",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1910853546",
            "id": 1910853546,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x5U-q",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 648,
            "original_position": 14,
            "original_start_line": 648,
            "path": "src/nvim/vterm/state.c",
            "position": null,
            "pull_request_review_id": 2543226706,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910853546/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T18:23:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910853546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1910927726"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910927726"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should keep the line drawing character set since there is at least one known application which uses it (and box drawing is not an extremely uncommon use case).\r\n\r\nfoot, Ghostty, and [libvaxis](https://github.com/rockorager/libvaxis) all support the box drawing character set (possibly others, these are just the ones I know of for sure).",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T18:43:59Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1910927726",
            "id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x5nFu",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543311920,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910927726/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T18:44:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910927726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1910932238"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910932238"
                }
            },
            "author_association": "MEMBER",
            "body": "See my [other comment](https://github.com/neovim/neovim/pull/31934/files#r1910927726), I think we should keep the DEC drawing encoding (removing the others is probably fine), in which case this should stay as-is.",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T18:45:30Z",
            "diff_hunk": "@@ -645,7 +645,7 @@ static int on_escape(const char *bytes, size_t len, void *user)\n \n     {\n       int setnum = bytes[0] - 0x28;\n-      VTermEncoding *newenc = vterm_lookup_encoding(ENC_SINGLE_94, bytes[1]);\n+      VTermEncoding *newenc = vterm_lookup_encoding();",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1910932238",
            "id": 1910932238,
            "in_reply_to_id": 1910853546,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x5oMO",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 648,
            "original_position": 14,
            "original_start_line": 648,
            "path": "src/nvim/vterm/state.c",
            "position": null,
            "pull_request_review_id": 2543317377,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910932238/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T18:45:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910932238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1910946884"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910946884"
                }
            },
            "author_association": "MEMBER",
            "body": "But are they (foot, Ghostty, libvaxis) using _these_ characters and not the unicode ones?\r\n\r\n(Link from chat for the \"one known application\": https://github.com/pimutils/khal)",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T18:49:48Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1910946884",
            "id": 1910946884,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x5rxE",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543334780,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910946884/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T18:50:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910946884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1910948656"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910948656"
                }
            },
            "author_association": "NONE",
            "body": "Actually it's the [vaxis](https://git.sr.ht/~rockorager/vaxis) embedded terminal that supports that character set. It didn't initially but we received bug reports in `aerc` for `khal` which used that charset for the box drawing glyphs.\r\n",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T18:50:15Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1910948656",
            "id": 1910948656,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x5sMw",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543337033,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910948656/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T18:50:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910948656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/476352?v=4",
                "events_url": "https://api.github.com/users/rockorager/events{/privacy}",
                "followers_url": "https://api.github.com/users/rockorager/followers",
                "following_url": "https://api.github.com/users/rockorager/following{/other_user}",
                "gists_url": "https://api.github.com/users/rockorager/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rockorager",
                "id": 476352,
                "login": "rockorager",
                "node_id": "MDQ6VXNlcjQ3NjM1Mg==",
                "organizations_url": "https://api.github.com/users/rockorager/orgs",
                "received_events_url": "https://api.github.com/users/rockorager/received_events",
                "repos_url": "https://api.github.com/users/rockorager/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rockorager/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rockorager/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rockorager",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1910997501"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910997501"
                }
            },
            "author_association": "MEMBER",
            "body": "> But are they (foot, Ghostty, libvaxis) using _these_ characters and not the unicode ones?\r\n\r\nAt least [Ghostty is](https://github.com/ghostty-org/ghostty/blob/799f5b823904a2076a49c494ae50b486ac519368/src/terminal/charsets.zig#L54-L84).",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T19:04:35Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1910997501",
            "id": 1910997501,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x54H9",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543395604,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910997501/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T19:04:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1910997501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1911011073"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911011073"
                }
            },
            "author_association": "MEMBER",
            "body": "OK, just wanted to make sure. And they don't prefer the unicode set if that is available?",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T19:08:43Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1911011073",
            "id": 1911011073,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x57cB",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543411928,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911011073/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T19:08:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911011073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1911018595"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911018595"
                }
            },
            "author_association": "MEMBER",
            "body": "And for the record, we're talking about  https://en.wikipedia.org/wiki/DEC_Special_Graphics",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T19:11:17Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1911018595",
            "id": 1911018595,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x59Rj",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543421229,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911018595/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T19:11:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911018595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1911020147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911020147"
                }
            },
            "author_association": "NONE",
            "body": "I think most modern applications will use the unicode box drawing codepoints. Khal is pretty old, and opts for switching the charset to get box drawing characters...I don't know what specific other applications do that but I'm sure there are some. Khal specifically came up in aerc since it's an email program and khal is a calendar program.",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T19:11:42Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1911020147",
            "id": 1911020147,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x59pz",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543423000,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911020147/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T19:11:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911020147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/476352?v=4",
                "events_url": "https://api.github.com/users/rockorager/events{/privacy}",
                "followers_url": "https://api.github.com/users/rockorager/followers",
                "following_url": "https://api.github.com/users/rockorager/following{/other_user}",
                "gists_url": "https://api.github.com/users/rockorager/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rockorager",
                "id": 476352,
                "login": "rockorager",
                "node_id": "MDQ6VXNlcjQ3NjM1Mg==",
                "organizations_url": "https://api.github.com/users/rockorager/orgs",
                "received_events_url": "https://api.github.com/users/rockorager/received_events",
                "repos_url": "https://api.github.com/users/rockorager/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rockorager/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rockorager/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rockorager",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1911024617"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911024617"
                }
            },
            "author_association": "NONE",
            "body": "These work by mapping ascii codepoints to other codepoints. So switching the charset to `0`, you can print a `j` and get a `┘`",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T19:13:05Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1911024617",
            "id": 1911024617,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x5-vp",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543428245,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911024617/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T19:13:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911024617",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/476352?v=4",
                "events_url": "https://api.github.com/users/rockorager/events{/privacy}",
                "followers_url": "https://api.github.com/users/rockorager/followers",
                "following_url": "https://api.github.com/users/rockorager/following{/other_user}",
                "gists_url": "https://api.github.com/users/rockorager/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rockorager",
                "id": 476352,
                "login": "rockorager",
                "node_id": "MDQ6VXNlcjQ3NjM1Mg==",
                "organizations_url": "https://api.github.com/users/rockorager/orgs",
                "received_events_url": "https://api.github.com/users/rockorager/received_events",
                "repos_url": "https://api.github.com/users/rockorager/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rockorager/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rockorager/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rockorager",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1911046426"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911046426"
                }
            },
            "author_association": "NONE",
            "body": "Also sorry, I told Greg the wrong application. It was [calcurse](https://calcurse.org/) which uses the box drawing charset",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T19:19:39Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1911046426",
            "id": 1911046426,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x6EEa",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2543456887,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911046426/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T19:19:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911046426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/476352?v=4",
                "events_url": "https://api.github.com/users/rockorager/events{/privacy}",
                "followers_url": "https://api.github.com/users/rockorager/followers",
                "following_url": "https://api.github.com/users/rockorager/following{/other_user}",
                "gists_url": "https://api.github.com/users/rockorager/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rockorager",
                "id": 476352,
                "login": "rockorager",
                "node_id": "MDQ6VXNlcjQ3NjM1Mg==",
                "organizations_url": "https://api.github.com/users/rockorager/orgs",
                "received_events_url": "https://api.github.com/users/rockorager/received_events",
                "repos_url": "https://api.github.com/users/rockorager/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rockorager/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rockorager/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rockorager",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1911533208"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911533208"
                }
            },
            "author_association": "MEMBER",
            "body": "> At least [Ghostty is](https://github.com/ghostty-org/ghostty/blob/799f5b823904a2076a49c494ae50b486ac519368/src/terminal/charsets.zig#L54-L84).\r\n\r\n[ghostty implements the british and us encoding as well though](https://github.com/ghostty-org/ghostty/blob/799f5b823904a2076a49c494ae50b486ac519368/src/terminal/charsets.zig#L17-L20).\r\n\r\nImplemented in https://github.com/ghostty-org/ghostty/pull/9. No good reasoning is really given as to why however...",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T22:11:20Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1911533208",
            "id": 1911533208,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x766Y",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2544076090,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911533208/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T22:19:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911533208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1911560893"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911560893"
                }
            },
            "author_association": "MEMBER",
            "body": "> It didn't initially but we received bug reports in aerc for khal which used that charset for the box drawing glyphs.\r\n\r\n@rockorager do you have a link to it so I can get more context?",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T22:25:23Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1911560893",
            "id": 1911560893,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x8Bq9",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2544111261,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911560893/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-10T22:25:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911560893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1911647314"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911647314"
                }
            },
            "author_association": "MEMBER",
            "body": "OK, the drawing character set is widely supported by most terminals and tmux, so it makes some sense to keep it for the time being.",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-10T23:09:45Z",
            "diff_hunk": "@@ -164,115 +163,7 @@ static VTermEncoding encoding_utf8 = {\n   .decode = &decode_utf8,\n };\n \n-static void decode_usascii(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                           const char bytes[], size_t *pos, size_t bytelen)\n-{\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    cp[(*cpi)++] = c;\n-  }\n-}\n-\n-static VTermEncoding encoding_usascii = {\n-  .decode = &decode_usascii,\n-};\n-\n-struct StaticTableEncoding {\n-  const VTermEncoding enc;\n-  const uint32_t chars[128];\n-};\n-\n-static void decode_table(VTermEncoding *enc, void *data, uint32_t cp[], int *cpi, int cplen,\n-                         const char bytes[], size_t *pos, size_t bytelen)\n+VTermEncoding *vterm_lookup_encoding(void)\n {\n-  struct StaticTableEncoding *table = (struct StaticTableEncoding *)enc;\n-  int is_gr = bytes[*pos] & 0x80;\n-\n-  for (; *pos < bytelen && *cpi < cplen; (*pos)++) {\n-    uint8_t c = (uint8_t)(bytes[*pos] ^ is_gr);\n-\n-    if (c < 0x20 || c == 0x7f || c >= 0x80) {\n-      return;\n-    }\n-\n-    if (table->chars[c]) {\n-      cp[(*cpi)++] = table->chars[c];\n-    } else {\n-      cp[(*cpi)++] = c;\n-    }\n-  }\n-}\n-\n-static const struct StaticTableEncoding encoding_DECdrawing = {\n-  { .decode = &decode_table },\n-  {\n-    [0x60] = 0x25C6,  // BLACK DIAMOND\n-    [0x61] = 0x2592,  // MEDIUM SHADE (checkerboard)\n-    [0x62] = 0x2409,  // SYMBOL FOR HORIZONTAL TAB\n-    [0x63] = 0x240C,  // SYMBOL FOR FORM FEED\n-    [0x64] = 0x240D,  // SYMBOL FOR CARRIAGE RETURN\n-    [0x65] = 0x240A,  // SYMBOL FOR LINE FEED\n-    [0x66] = 0x00B0,  // DEGREE SIGN\n-    [0x67] = 0x00B1,  // PLUS-MINUS SIGN (plus or minus)\n-    [0x68] = 0x2424,  // SYMBOL FOR NEW LINE\n-    [0x69] = 0x240B,  // SYMBOL FOR VERTICAL TAB\n-    [0x6a] = 0x2518,  // BOX DRAWINGS LIGHT UP AND LEFT (bottom-right corner)\n-    [0x6b] = 0x2510,  // BOX DRAWINGS LIGHT DOWN AND LEFT (top-right corner)\n-    [0x6c] = 0x250C,  // BOX DRAWINGS LIGHT DOWN AND RIGHT (top-left corner)\n-    [0x6d] = 0x2514,  // BOX DRAWINGS LIGHT UP AND RIGHT (bottom-left corner)\n-    [0x6e] = 0x253C,  // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL (crossing lines)\n-    [0x6f] = 0x23BA,  // HORIZONTAL SCAN LINE-1\n-    [0x70] = 0x23BB,  // HORIZONTAL SCAN LINE-3\n-    [0x71] = 0x2500,  // BOX DRAWINGS LIGHT HORIZONTAL\n-    [0x72] = 0x23BC,  // HORIZONTAL SCAN LINE-7\n-    [0x73] = 0x23BD,  // HORIZONTAL SCAN LINE-9\n-    [0x74] = 0x251C,  // BOX DRAWINGS LIGHT VERTICAL AND RIGHT\n-    [0x75] = 0x2524,  // BOX DRAWINGS LIGHT VERTICAL AND LEFT\n-    [0x76] = 0x2534,  // BOX DRAWINGS LIGHT UP AND HORIZONTAL\n-    [0x77] = 0x252C,  // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL\n-    [0x78] = 0x2502,  // BOX DRAWINGS LIGHT VERTICAL\n-    [0x79] = 0x2A7D,  // LESS-THAN OR SLANTED EQUAL-TO\n-    [0x7a] = 0x2A7E,  // GREATER-THAN OR SLANTED EQUAL-TO\n-    [0x7b] = 0x03C0,  // GREEK SMALL LETTER PI\n-    [0x7c] = 0x2260,  // NOT EQUAL TO\n-    [0x7d] = 0x00A3,  // POUND SIGN\n-    [0x7e] = 0x00B7,  // MIDDLE DOT\n-  }\n-};",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1911647314",
            "id": 1911647314,
            "in_reply_to_id": 1910927726,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x8WxS",
            "original_commit_id": "7be80f129f09401cedf98004c8496776d56a9e05",
            "original_line": 248,
            "original_position": 100,
            "original_start_line": 213,
            "path": "src/nvim/vterm/encoding.c",
            "position": null,
            "pull_request_review_id": 2544216512,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911647314/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-01-11T10:17:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1911647314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1912129782"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912129782"
                }
            },
            "author_association": "MEMBER",
            "body": "You need to keep the designator, otherwise any `ESC (` sequence will always switch to the DEC graphics mode here (and it will be impossible to switch back).\r\n\r\nAnother issue here is that I think some applications will switch to DEC graphics char set and then switch back to the \"normal\" char set with `ESC ( B` (i.e. ASCII). That won't work here now since `ESC ( B` will return NULL from `vterm_lookup_encoding` and the char set will be stuck in the graphics char set.\r\n\r\nWe could either (1) keep the `usascii` encoding as-is, or (2) just use UTF-8 for the `B` charset (I think option (2) is probably fine).",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-11T18:03:50Z",
            "diff_hunk": "@@ -645,7 +645,7 @@ static int on_escape(const char *bytes, size_t len, void *user)\n \n     {\n       int setnum = bytes[0] - 0x28;\n-      VTermEncoding *newenc = vterm_lookup_encoding(ENC_SINGLE_94, bytes[1]);\n+      VTermEncoding *newenc = vterm_lookup_encoding(ENC_SINGLE_94);\n \n       if (newenc) {\n         state->encoding[setnum].enc = newenc;",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1912129782",
            "id": 1912129782,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x-Mj2",
            "original_commit_id": "453d3d821501e29e3986ac16177e7636d8c16caf",
            "original_line": 651,
            "original_position": 17,
            "original_start_line": 648,
            "path": "src/nvim/vterm/state.c",
            "position": null,
            "pull_request_review_id": 2545124820,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912129782/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-11T18:05:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912129782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1912130649"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912130649"
                }
            },
            "author_association": "MEMBER",
            "body": "Vote for option (2).",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-11T18:05:15Z",
            "diff_hunk": "@@ -645,7 +645,7 @@ static int on_escape(const char *bytes, size_t len, void *user)\n \n     {\n       int setnum = bytes[0] - 0x28;\n-      VTermEncoding *newenc = vterm_lookup_encoding(ENC_SINGLE_94, bytes[1]);\n+      VTermEncoding *newenc = vterm_lookup_encoding(ENC_SINGLE_94);\n \n       if (newenc) {\n         state->encoding[setnum].enc = newenc;",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1912130649",
            "id": 1912130649,
            "in_reply_to_id": 1912129782,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x-MxZ",
            "original_commit_id": "453d3d821501e29e3986ac16177e7636d8c16caf",
            "original_line": 651,
            "original_position": 17,
            "original_start_line": 648,
            "path": "src/nvim/vterm/state.c",
            "position": null,
            "pull_request_review_id": 2545125004,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912130649/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-11T18:05:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912130649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31934#discussion_r1912435535"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31934"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912435535"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we might need to keep the usaascii encoding as well as single shift 2 and 3 doesn't work without it, so it's not possible to temporarily switch to another encoding. Let's just keep it as is, I didn't except non-unicode to still be this entrenched in terminal space.",
            "commit_id": "8dc012252c2b792a8bf834c2578dac33793dcf68",
            "created_at": "2025-01-12T12:05:08Z",
            "diff_hunk": "@@ -645,7 +645,7 @@ static int on_escape(const char *bytes, size_t len, void *user)\n \n     {\n       int setnum = bytes[0] - 0x28;\n-      VTermEncoding *newenc = vterm_lookup_encoding(ENC_SINGLE_94, bytes[1]);\n+      VTermEncoding *newenc = vterm_lookup_encoding(ENC_SINGLE_94);\n \n       if (newenc) {\n         state->encoding[setnum].enc = newenc;",
            "html_url": "https://github.com/neovim/neovim/pull/31934#discussion_r1912435535",
            "id": 1912435535,
            "in_reply_to_id": 1912129782,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x_XNP",
            "original_commit_id": "453d3d821501e29e3986ac16177e7636d8c16caf",
            "original_line": 651,
            "original_position": 17,
            "original_start_line": 648,
            "path": "src/nvim/vterm/state.c",
            "position": null,
            "pull_request_review_id": 2545416550,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912435535/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-12T12:05:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912435535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "You are removing the SCS support from `:terminal`. Isn't this a breaking change?",
            "created_at": "2025-01-10T01:12:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/31934#issuecomment-2581542368",
            "id": 2581542368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31934",
            "node_id": "IC_kwDOAPphoM6Z3zXg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2581542368/reactions"
            },
            "updated_at": "2025-01-11T17:14:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2581542368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This will definitely need an item in news.txt (even though there are probably only 3 users who will know what it means).",
            "created_at": "2025-01-10T18:46:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/31934#issuecomment-2583565811",
            "id": 2583565811,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31934",
            "node_id": "IC_kwDOAPphoM6Z_hXz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583565811/reactions"
            },
            "updated_at": "2025-01-10T23:13:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2583565811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Follow-up: Remove `usascii` (replace with (reverting to) `utf8`).",
            "created_at": "2025-01-13T12:40:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31934#issuecomment-2587001804",
            "id": 2587001804,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31934",
            "node_id": "IC_kwDOAPphoM6aMoPM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587001804/reactions"
            },
            "updated_at": "2025-01-13T12:40:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587001804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Uh, maybe. It's the Single Shift commands that makes me nervous if we can remove it, since you're supposed to be able to temporarily switch to DEC and back and without the GR/GL circlejerking in `usaascii` it might not be possible? It might be, but the uncertainty makes me think this is not a good investment of time unless someone know beforehand for sure this isn't needed.",
            "created_at": "2025-01-13T12:59:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/31934#issuecomment-2587042103",
            "id": 2587042103,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31934",
            "node_id": "IC_kwDOAPphoM6aMyE3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587042103/reactions"
            },
            "updated_at": "2025-01-13T12:59:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2587042103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31934/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31934/commits",
    "created_at": "2025-01-09T16:44:01Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31934.diff",
    "draft": false,
    "head": {
        "label": "dundargoc:refactor/delete-utf8-code",
        "ref": "refactor/delete-utf8-code",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dundargoc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dundargoc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dundargoc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dundargoc/neovim/branches{/branch}",
            "clone_url": "https://github.com/dundargoc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dundargoc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dundargoc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dundargoc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dundargoc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dundargoc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dundargoc/neovim/contributors",
            "created_at": "2021-06-20T10:14:48Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dundargoc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dundargoc/neovim/downloads",
            "events_url": "https://api.github.com/repos/dundargoc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dundargoc/neovim/forks",
            "full_name": "dundargoc/neovim",
            "git_commits_url": "https://api.github.com/repos/dundargoc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dundargoc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dundargoc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dundargoc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dundargoc/neovim/hooks",
            "html_url": "https://github.com/dundargoc/neovim",
            "id": 378614899,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dundargoc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dundargoc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dundargoc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dundargoc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dundargoc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/dundargoc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dundargoc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dundargoc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzg2MTQ4OTk=",
            "notifications_url": "https://api.github.com/repos/dundargoc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dundargoc/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T19:37:48Z",
            "releases_url": "https://api.github.com/repos/dundargoc/neovim/releases{/id}",
            "size": 298941,
            "ssh_url": "git@github.com:dundargoc/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/dundargoc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dundargoc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dundargoc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dundargoc/neovim/subscription",
            "svn_url": "https://github.com/dundargoc/neovim",
            "tags_url": "https://api.github.com/repos/dundargoc/neovim/tags",
            "teams_url": "https://api.github.com/repos/dundargoc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dundargoc/neovim/git/trees{/sha}",
            "updated_at": "2025-01-13T14:47:59Z",
            "url": "https://api.github.com/repos/dundargoc/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "8dc012252c2b792a8bf834c2578dac33793dcf68",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
            "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
            "followers_url": "https://api.github.com/users/dundargoc/followers",
            "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dundargoc",
            "id": 33953936,
            "login": "dundargoc",
            "node_id": "MDQ6VXNlcjMzOTUzOTM2",
            "organizations_url": "https://api.github.com/users/dundargoc/orgs",
            "received_events_url": "https://api.github.com/users/dundargoc/received_events",
            "repos_url": "https://api.github.com/users/dundargoc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dundargoc",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31934",
    "id": 2268821231,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31934",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "47866cd8d20c62afa8a3c3929d3aada2db9162f5",
    "merged_at": "2025-01-13T12:16:41Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6HO3bv",
    "number": 31934,
    "patch_url": "https://github.com/neovim/neovim/pull/31934.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31934/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8dc012252c2b792a8bf834c2578dac33793dcf68",
    "title": "refactor: delete duplicate utf8-functionality",
    "updated_at": "2025-01-13T12:59:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31934",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
        "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/dundargoc/followers",
        "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dundargoc",
        "id": 33953936,
        "login": "dundargoc",
        "node_id": "MDQ6VXNlcjMzOTUzOTM2",
        "organizations_url": "https://api.github.com/users/dundargoc/orgs",
        "received_events_url": "https://api.github.com/users/dundargoc/received_events",
        "repos_url": "https://api.github.com/users/dundargoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dundargoc",
        "user_view_type": "public"
    }
}