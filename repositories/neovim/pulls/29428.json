{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29428/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29428/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/29428"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29428"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29428/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29428"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/86fe5ce2dd02346e7bbe6f591b156c690905eb52"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6362,
            "forks_count": 6362,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 2032,
            "open_issues_count": 2032,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-10-20T22:45:38Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 348094,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 93601,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-10-21T02:13:22Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 93601,
            "watchers_count": 93601,
            "web_commit_signoff_required": false
        },
        "sha": "af0021f990bfd9681e8889ef217d26a89fadf5f0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "## Problem\r\n\r\nNo way to change a comment while keeping the markers. \r\n\r\nCurrently changing a html comment:\r\n\r\n```html\r\n<!-- a |comment -->\r\n```\r\n\r\nType: `cgc<!-- new comment -->`\r\n\r\n```html\r\n<!-- new comment -->|\r\n```\r\n\r\nI think changing an entire comment is done quite often by programmers.\r\n\r\n## Solution\r\n\r\nAdd an 'inner comment' text object, which is in line with `it`, `i{`, `i[`, and other surrounding text objects.\r\n\r\nThe default keymap for this text object is `igc`.\r\n\r\nWith this change:\r\n```html\r\n<!-- a |comment -->\r\n```\r\n\r\nType: `cigcnew comment`\r\n\r\n```html\r\n<!-- new comment| -->\r\n```\r\n\r\nFixes #29318.",
    "closed_at": "2025-10-19T21:16:16Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29428#discussion_r1647466045"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29428"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647466045"
                }
            },
            "author_association": "MEMBER",
            "body": "use ('%s...%s'):format(...)",
            "commit_id": "86fe5ce2dd02346e7bbe6f591b156c690905eb52",
            "created_at": "2024-06-20T12:03:21Z",
            "diff_hunk": "@@ -251,8 +252,36 @@ local function textobject()\n     lnum_to = lnum_to + 1\n   end\n \n-  -- Select range linewise for operator to act upon\n-  vim.cmd('normal! ' .. lnum_from .. 'GV' .. lnum_to .. 'G')\n+  -- Column does not matter if not inner, because of linewise selection\n+  local lcol_from = 0\n+  local lcol_to = 0\n+  local visual_cmd = 'V'\n+\n+  -- Find the columns where the comment markers end\n+  if inner then\n+    local line_from = vim.api.nvim_buf_get_lines(0, lnum_from - 1, lnum_from, true)\n+    local indent, _ = get_lines_info(line_from, parts)\n+    lcol_from = indent:len() + parts.left:len() + 1\n+\n+    local line_to = vim.fn.getline(lnum_to)\n+    lcol_to = line_to:len() - parts.right:len()\n+\n+    visual_cmd = 'v'\n+  end\n+\n+  -- Select range from line:col to line:col for operator to act upon\n+  vim.cmd(\n+    'normal! '\n+      .. lnum_from\n+      .. 'G'\n+      .. lcol_from",
            "html_url": "https://github.com/neovim/neovim/pull/29428#discussion_r1647466045",
            "id": 1647466045,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iMlY9",
            "original_commit_id": "928e700a453c6eedaaa5511d5d84791e6dfb7261",
            "original_line": 277,
            "original_position": 38,
            "original_start_line": 275,
            "path": "runtime/lua/vim/_comment.lua",
            "position": 1,
            "pull_request_review_id": 2130238249,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29428",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647466045/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-06-20T12:03:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647466045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29428#discussion_r1647473335"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29428"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647473335"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  describe('inner textobject', function()\r\n```",
            "commit_id": "86fe5ce2dd02346e7bbe6f591b156c690905eb52",
            "created_at": "2024-06-20T12:09:49Z",
            "diff_hunk": "@@ -648,4 +648,69 @@ describe('commenting', function()\n       eq(get_lines(), { 'lua << EOF', 'EOF' })\n     end)\n   end)\n+\n+  describe('Inner textobject', function()",
            "html_url": "https://github.com/neovim/neovim/pull/29428#discussion_r1647473335",
            "id": 1647473335,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iMnK3",
            "original_commit_id": "928e700a453c6eedaaa5511d5d84791e6dfb7261",
            "original_line": 652,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/lua/comment_spec.lua",
            "position": 1,
            "pull_request_review_id": 2130250805,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29428",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647473335/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T12:09:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647473335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the PR!\r\n\r\nI personally don't think this is a good addition to built-in commenting for at least the following reasons:\r\n- The \"inner comment textobject\" is mostly useful only in the `cigc` situation. The already present `cgc` preserves the indent (which is a tedious part to add) while inserting comment marks is *usually* not a big issue. Even if comment marks are verbose, ability to add them in Insert mode looks more ergonomic and can be mostly achieved with manual Insert mode mapping.\r\n- Adding `igc` default textobject will interfere having `ig` textobject for users.",
            "created_at": "2024-06-20T09:23:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180222641",
            "id": 2180222641,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B846x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180222641/reactions"
            },
            "updated_at": "2024-06-20T09:23:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180222641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The \"inner comment textobject\" is mostly useful only in the `cigc` situation.\r\n\r\nThe `cigc` point is very true. I do however think this is something that many users do many times: rewriting an entire comment. They might expect the comment object to be in line with other surrounding objects, like tags.\r\n\r\n> while inserting comment marks is _usually_ not a big issue.\r\n\r\nThis could also be said about inserting `()`, `[]`, and (html) tags. It's not that typing the comment marks is a lot of work, but rather that the current situation feels like there is missing something. I also don't think it's ideal to type `cgci<!-- comment -->` instead of `cigc comment`. \r\n\r\n> ability to add them in Insert mode looks more ergonomic and can be mostly achieved with manual Insert mode mapping.\r\n\r\nThis is an interesting idea, but might be hard for users to add, without the useful functions currently in this module. One would need to get the commentstring, parse left and right parts, insert those around the current cursor position. Not trivial.\r\n\r\n> * Adding `igc` default textobject will interfere having `ig` textobject for users.\r\n\r\n~Haven't heard of this textobject, and can't find it in the docs. Where can I find this in the help pages?~\r\n\r\nYeah, that is true. Could be changed to `ic` if we want to prevent that, or not create a default map for it.",
            "created_at": "2024-06-20T09:58:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180288090",
            "id": 2180288090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B9I5a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180288090/reactions"
            },
            "updated_at": "2024-06-20T10:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180288090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This is an interesting idea, but might be hard for users to add, without the useful functions currently in this module. One would need to get the commentstring, parse left and right parts, insert those around the current cursor position. Not trivial.\r\n\r\nI mean, maybe not trivial, but pretty straightforward in my opinion:\r\n\r\n```lua\r\nlocal insert_comment_parts = function()\r\n  local cms = vim.bo.commentstring\r\n  local offset = cms:find('%%s')\r\n  local insert = cms:gsub('%%s', '')\r\n\r\n  local row, col = unpack(vim.api.nvim_win_get_cursor(0))\r\n  vim.api.nvim_buf_set_text(0, row - 1, col, row - 1, col, { insert })\r\n  vim.api.nvim_win_set_cursor(0, { row, col + offset - 1 })\r\nend\r\nvim.keymap.set('i', '<C-b>', insert_comment_parts)\r\n```\r\n\r\nThe only drawback is that it uses buffer's commentstring instead of the one \"at cursor\", which built-in commenting uses. Exporting it (and the built-in variant of this functionality) was discussed in #28997.",
            "created_at": "2024-06-20T10:44:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180369913",
            "id": 2180369913,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B9c35",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180369913/reactions"
            },
            "updated_at": "2024-06-20T10:44:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180369913",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I also don't think it's ideal to type `cgci<!-- comment -->` instead of `cigc comment`.\r\n\r\nPlease add that to the Problem description :) That is a stronger, clearer motivating case.",
            "created_at": "2024-06-20T12:07:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180511834",
            "id": 2180511834,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B9_ha",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180511834/reactions"
            },
            "updated_at": "2024-06-20T12:07:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180511834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk, [there are issues with this](https://github.com/neovim/neovim/pull/29428#issuecomment-2180222641). If this type of functionality is useful, exporting [this type of Insert mode mapping](https://github.com/neovim/neovim/pull/29428#issuecomment-2180369913) is a more versatile approach.",
            "created_at": "2024-06-20T13:01:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180626090",
            "id": 2180626090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B-baq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180626090/reactions"
            },
            "updated_at": "2024-06-20T13:01:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180626090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @justinmk, [there are issues with this](https://github.com/neovim/neovim/pull/29428#issuecomment-2180222641). If this type of functionality is useful, exporting [this type of Insert mode mapping](https://github.com/neovim/neovim/pull/29428#issuecomment-2180369913) is a more versatile approach.\r\n\r\nYes, I read that and almost closed this issue, but the use-case is strong enough to make the case for this being a default.\r\n\r\n>  Even if comment marks are verbose, ability to add them in Insert mode looks more ergonomic \r\n\r\nI don't get this argument. Textobjects are the primary text manipulation interface for vim. Insert-mode stuff is what vscode does.\r\n\r\n>  Adding `igc` default textobject will interfere having `ig` textobject for users.\r\n\r\nWe added commenting so we need to claim a textobject. We can choose `igc` or `ic`. I'm fine with either. ",
            "created_at": "2024-06-20T13:18:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180666306",
            "id": 2180666306,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B-lPC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180666306/reactions"
            },
            "updated_at": "2024-06-20T13:18:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180666306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> >  Even if comment marks are verbose, ability to add them in Insert mode looks more ergonomic \n> \n> I don't get this argument. Textobjects are the primary text manipulation interface for vim. Insert-mode stuff is what vscode does.\n\nThe argument is that \"insert comment marks\" is a more versatile approach. For example, it can be used together with `o` or `O` to start a comment.\n\nThe suggested \"inner textobject\" is primarily (if not even only) useful in one particular situation of `cigc`. This can be the same as `cgc` followed by an \"insert comment marks\".\n\n> >  Adding `igc` default textobject will interfere having `ig` textobject for users.\n> \n> We added commenting so we need to claim a textobject. We can choose `igc` or `ic`. I'm fine with either. \n\nWe did with `gc`. Claiming `igc` for built-in will break any potential `ig` user textobject. Claiming `ic` without `ac` is doable, but seems like wasting mapping space.\n\n------\n\nMy suggestion is to do either of the following (from most to least preferred):\n- Export function which will be able to \"get commentstring at cursor\". Either as a more general \"get option at cursor\" or the one in `vim._comment`.\n- Do nothing.\n- Make default Insert mode mapping to insert comment parts at cursor. This is lower than \"Do nothing\" because this is fairly easy to add to config.\n\nMaking built-in separate textobject that is useful only for a single operator is not on the list, I am afraid.",
            "created_at": "2024-06-20T13:35:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180720001",
            "id": 2180720001,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B-yWB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180720001/reactions"
            },
            "updated_at": "2024-06-20T13:35:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180720001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> We did with gc. Claiming igc for built-in will break any potential ig user textobject. Claiming ic without ac is doable, but seems like wasting mapping space.\r\n\r\nwell then we couldn't add any new builtin mappings?\r\nalso I can't think of any textobject which you'd abbreviate with ig\r\n\r\nand imo we should also add `ac` or `agc` as a textobject including comment markers\r\nthis is especially usefull to delete comments imo",
            "created_at": "2024-06-20T13:42:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180739528",
            "id": 2180739528,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B-3HI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180739528/reactions"
            },
            "updated_at": "2024-06-20T13:42:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180739528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The suggested \"inner textobject\" is primarily (if not even only) useful in one particular situation of cigc. This can be the same as cgc followed by an \"insert comment marks\".\r\n\r\nYanking only the text of a comment is definitely also a useful operator to have 'inner comment' for.",
            "created_at": "2024-06-20T13:42:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180740793",
            "id": 2180740793,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B-3a5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180740793/reactions"
            },
            "updated_at": "2024-06-20T13:42:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180740793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "btw, why is `cgc` acceptable but we had to [revert](https://github.com/neovim/neovim/issues/28634) the `cr` mappings?",
            "created_at": "2024-06-20T13:56:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180774735",
            "id": 2180774735,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B-_tP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180774735/reactions"
            },
            "updated_at": "2024-06-20T13:56:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180774735",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "because we just map `gc` and not `cgc`\r\nhaving a mapping starting with `c` was the problem described in this issue afaict",
            "created_at": "2024-06-20T14:01:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180788246",
            "id": 2180788246,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B_DAW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180788246/reactions"
            },
            "updated_at": "2024-06-20T14:01:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180788246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> well then we couldn't add any new builtin mappings?\r\n\r\nOf course adding built-in mappings is possible. But having `igc` as Operator-pending mode mapping in particular means that users will have to wait for `timeoutlen` milliseconds after `cig` if they want to use `ig` as their textobject. This creates \"either `ig` or `igc`\" type of situation which I described is \"breaking potential use of `ig`\"\r\n\r\n> ... also I can't think of any textobject which you'd abbreviate with ig\r\n\r\nMe neither off the top of my head. But that doesn't mean not accounting for it is bad. Plus [nvim-various-textobjects](https://github.com/chrisgrieser/nvim-various-textobjs) uses it for \"greedyOuterIndentation\" together with `ag`.\r\n\r\n> and imo we should also add `ac` or `agc` as a textobject including comment markers this is especially usefull to delete comments imo\r\n\r\nThis is already possible with `dgc`. If I understand correctly the suggestion (\"outer\" variant of the proposed here `igc` variant), then I doubt that \"delete comment but leave indentation of its first line\" is a common operation.\r\n\r\n> Yanking only the text of a comment is definitely also a useful operator to have 'inner comment' for.\r\n\r\nI agree, it is indeed useful. But the proposed `igc` textobject that works well for `cigc` will not work well for `yigc`. Because with multiline comment it will yank the whole charwise region **including** all comment parts except left of first line and right of last line.\r\n\r\n> btw, why is `cgc` acceptable but we had to [revert](https://github.com/neovim/neovim/issues/28634) the `cr` mappings?\r\n\r\nThere is no `cgc` Normal mode mapping: there is built-in `c` operator and `gc` Operator-pending mode mapping (claimed as it is the established pattern for comment textobject, together with `gc` operator).\r\n\r\nCreating `crr`/ `crn` *Normal mode* mappings also removes the possibility for `r` and `rr` / `rn` *Operator-pending* mode mappings. Meaning that:\r\n- If user want to have `r` textobject, it will work with `c` built-in operator only after `timeoutlen` milliseconds wait.\r\n- User can not use `rr`/`rn` textobjects with `c` operator but can with others.",
            "created_at": "2024-06-20T14:32:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2180862798",
            "id": 2180862798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6B_VNO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180862798/reactions"
            },
            "updated_at": "2024-06-20T14:32:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180862798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I agree, it is indeed useful. But the proposed igc textobject that works well for cigc will not work well for yigc. Because with multiline comment it will yank the whole charwise region including all comment parts except left of first line and right of last line.\r\n\r\nYes, that's true for multiple singleline comments following each other. However, it's something that could be fixed if this behaviour is desired.",
            "created_at": "2024-06-20T17:03:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2181154431",
            "id": 2181154431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6CAcZ_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2181154431/reactions"
            },
            "updated_at": "2024-06-20T17:03:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2181154431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yes, that's true for multiple singleline comments following each other. However, it's something that could be fixed if this behaviour is desired.\r\n\r\nAs built-in commenting is designed to be used only with single line comments, I don't see a way to make `igc` textobject work as desired with both `c` (to delete comment block except indent and single comment markers) and `y` (to yank only commented text without per line comment markers) operators.",
            "created_at": "2024-06-20T17:24:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2181186722",
            "id": 2181186722,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6CAkSi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2181186722/reactions"
            },
            "updated_at": "2024-06-20T17:24:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2181186722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": " > Could be changed to ic if we want to prevent that, or not create a default map for it.\r\n\r\nVim uses `ic` for inner comment textobject, though it seems to have a different meaning from this PR https://github.com/vim/vim/pull/16938",
            "created_at": "2025-03-21T15:22:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/29428#issuecomment-2743707645",
            "id": 2743707645,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
            "node_id": "IC_kwDOAPphoM6jiaf9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2743707645/reactions"
            },
            "updated_at": "2025-03-21T15:22:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2743707645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29428/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/29428/commits",
    "created_at": "2024-06-20T08:58:56Z",
    "diff_url": "https://github.com/neovim/neovim/pull/29428.diff",
    "draft": false,
    "head": {
        "label": "yochem:inner-comment-text-object",
        "ref": "inner-comment-text-object",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/yochem/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/yochem/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/yochem/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/yochem/neovim/branches{/branch}",
            "clone_url": "https://github.com/yochem/neovim.git",
            "collaborators_url": "https://api.github.com/repos/yochem/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/yochem/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/yochem/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/yochem/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/yochem/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/yochem/neovim/contributors",
            "created_at": "2023-03-13T14:39:08Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/yochem/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/yochem/neovim/downloads",
            "events_url": "https://api.github.com/repos/yochem/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/yochem/neovim/forks",
            "full_name": "yochem/neovim",
            "git_commits_url": "https://api.github.com/repos/yochem/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/yochem/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/yochem/neovim/git/tags{/sha}",
            "git_url": "git://github.com/yochem/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/yochem/neovim/hooks",
            "html_url": "https://github.com/yochem/neovim",
            "id": 613421928,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/yochem/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/yochem/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/yochem/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/yochem/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/yochem/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/yochem/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/yochem/neovim/merges",
            "milestones_url": "https://api.github.com/repos/yochem/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOJJATaA",
            "notifications_url": "https://api.github.com/repos/yochem/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/yochem/neovim/pulls{/number}",
            "pushed_at": "2025-10-20T23:31:41Z",
            "releases_url": "https://api.github.com/repos/yochem/neovim/releases{/id}",
            "size": 340638,
            "ssh_url": "git@github.com:yochem/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/yochem/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/yochem/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/yochem/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/yochem/neovim/subscription",
            "svn_url": "https://github.com/yochem/neovim",
            "tags_url": "https://api.github.com/repos/yochem/neovim/tags",
            "teams_url": "https://api.github.com/repos/yochem/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/yochem/neovim/git/trees{/sha}",
            "updated_at": "2025-10-19T14:22:28Z",
            "url": "https://api.github.com/repos/yochem/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "86fe5ce2dd02346e7bbe6f591b156c690905eb52",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
            "events_url": "https://api.github.com/users/yochem/events{/privacy}",
            "followers_url": "https://api.github.com/users/yochem/followers",
            "following_url": "https://api.github.com/users/yochem/following{/other_user}",
            "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/yochem",
            "id": 23235841,
            "login": "yochem",
            "node_id": "MDQ6VXNlcjIzMjM1ODQx",
            "organizations_url": "https://api.github.com/users/yochem/orgs",
            "received_events_url": "https://api.github.com/users/yochem/received_events",
            "repos_url": "https://api.github.com/users/yochem/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/yochem",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/29428",
    "id": 1930139442,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29428",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim defaults for options, colorscheme/theme, autocmds/events, etc.",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 7015106619,
            "name": "comment",
            "node_id": "LA_kwDOAPphoM8AAAABoiIIOw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/comment"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5zC5cy",
    "number": 29428,
    "patch_url": "https://github.com/neovim/neovim/pull/29428.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/29428/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/86fe5ce2dd02346e7bbe6f591b156c690905eb52",
    "title": "feat(commenting): Add 'inner comment' text object",
    "updated_at": "2025-10-19T21:20:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/29428",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
        "events_url": "https://api.github.com/users/yochem/events{/privacy}",
        "followers_url": "https://api.github.com/users/yochem/followers",
        "following_url": "https://api.github.com/users/yochem/following{/other_user}",
        "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yochem",
        "id": 23235841,
        "login": "yochem",
        "node_id": "MDQ6VXNlcjIzMjM1ODQx",
        "organizations_url": "https://api.github.com/users/yochem/orgs",
        "received_events_url": "https://api.github.com/users/yochem/received_events",
        "repos_url": "https://api.github.com/users/yochem/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yochem",
        "user_view_type": "public"
    }
}