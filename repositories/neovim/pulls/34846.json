{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34846/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34846/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34846"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34846"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34846/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/1c6651776f02a5d145affb38b3e9ca6675e9a82c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6262,
            "forks_count": 6262,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1971,
            "open_issues_count": 1971,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-19T00:45:15Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 338530,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92074,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-19T01:56:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92074,
            "watchers_count": 92074,
            "web_commit_signoff_required": false
        },
        "sha": "78f4994627b7d9c3b85f30028fe55ff38024a39d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Working toward #32537\r\n\r\nbased on a proposal from https://github.com/neovim/neovim/issues/32537#issuecomment-2672600804\r\n\r\n### Problem\r\nCurrently, there's no standard progress system in Neovim. LSP has its own system, but other processes can't directly show an ongoing process.\r\n\r\n### Solution\r\nTreat progress as a special kind of message (progress-message). Allow `nvim_echo` to generate such a message. And forward it to the user/ui side via Progress autocmd and msg_show ui-event.\r\n\r\n### How it works\r\n- nvim_echo: Now assigns a unique ID to each message (saved in message-history). It returns that ID upon completion. Also takes in the following new optional args in opts.\r\n    - id: message-id for updating existing message.\r\n    - title: The title for progress message.\r\n    - status: Current status of the progress message. Can be one of the following values:\r\n        - success: The progress item completed successfully\r\n        - running: The progress is ongoing\r\n        - failed: The progress item failed\r\n        - cancel: The progressing process should be canceled.\r\n    - percent: How much progress is done on the progress\r\n      message\r\n\r\n  Updates can be made to progress message by calling nvim_echo with id of the progress-message and the info that needs updating.\r\n- Progress message get's displayed in TUI/cmdline in the following format\r\n  `{title}: {msg}..{percent}%`\r\n  If an item is missing that parts get's omited.\r\n- A `Progress` autocmd event is emitted with the id, msg, title, status, and percent info. That thing can listen to and act accordingly. \r\n- `msg_show` ui-event also receives message-id and extra_info . message-id is the id of the message. and the extra_info dict contains (title, status, percent) . ext-ui is expected to overwrite the last message with same id.\r\n- Even if partial updates are made. Say title is given on only first call not the following calls the tui displayes the message with previuos title. Same goes for events. They also emit the full event even on partial updates.\r\n\r\n### Example\r\n```lua\r\nlocal grp = vim.api.nvim_create_augroup(\"Msg\", {clear = true})\r\nvim.api.nvim_create_autocmd('Progress', {\r\n  pattern={\"term\"},\r\n  group = grp,\r\n  callback = function(ev)\r\n    print(string.format('event fired: %s', vim.inspect(ev))..'\\n')\r\n  end\r\n})\r\n\r\n-- require('vim._extui').enable({enable=true, msg={target='msg', timeout=1000}})\r\nvim.api.nvim_echo({{'searching'}}, true, {kind='progress', status='success', percent=100, title=\"terminal(ripgrep)\"})\r\nlocal id = vim.api.nvim_echo({{'searching'}}, true, {kind='progress', status='running', percent=10, title=\"find tests\"})\r\nvim.api.nvim_echo({}, true, {id = id, kind='progress', status='running', percent=20, title='find tests'})\r\nvim.api.nvim_echo({}, true, {id = id, kind='progress', status='running', percent=70})\r\nvim.api.nvim_echo({{'complete'}}, true, {id = id, kind='progress', status='success', percent=100, title=\"find tests\"})\r\n```\r\n\r\nTodo:\r\n- [x] ~add Message event for messages outside of history too~\r\n       A general message event is really complicated without a proper refactor to message/echo-area. Particularly, non-multiline message/vim stuff touches this section in too many ways at too many places. Considering it out of scope for now.\r\n       Introducing a `Progress` event for progress messages instead of a general message event.\r\n- [x] integrate with `msg_show` ui event\r\n- [x] testing\r\n- [x] docs\r\n\r\nFollowups:\r\n- Integration with statusline by listening on the autocmd event\r\n- Integration progress message with `vim._extui` by ui-event\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2192974951"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2192974951"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Where are UI protocols kept actually? What makes a sting valid message-kind?",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-08T16:38:06Z",
            "diff_hunk": "@@ -10,14 +11,19 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef uint64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2192974951",
            "id": 2192974951,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM6CtiRn",
            "original_commit_id": "df416607fce212c295ab7526efddec82a7c3ac34",
            "original_line": 15,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 6,
            "pull_request_review_id": 2998376378,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2192974951/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-08T16:38:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2192974951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2193481139"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193481139"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure what you're asking sorry. Until now message kind strings are just set directly at the callsite, not stored/defined anywhere. One exception is the verbose kind to compare to `msg_ext_kind` directly rather than needing `strcmp()`\r\nhttps://github.com/neovim/neovim/blob/435f03ee106a548c2e5fd6c10005f5ae2a29a5a4/src/nvim/message.c#L3325-L3334",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-08T21:34:44Z",
            "diff_hunk": "@@ -10,14 +11,19 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef uint64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2193481139",
            "id": 2193481139,
            "in_reply_to_id": 2192974951,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM6Cvd2z",
            "original_commit_id": "df416607fce212c295ab7526efddec82a7c3ac34",
            "original_line": 15,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 6,
            "pull_request_review_id": 2999158253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193481139/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-08T21:34:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193481139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2194300051"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194300051"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I noticed that. But I was wondering there should be at least some validation layer. Otherwise, kind can be set to anything. I guess that's the case here. The verbose case is different it lt's controlled by verbose_enter() and verbose_exit() that's why it can work with pointer comparison. It doesn't make sense for progress to be something like that.",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-09T07:40:00Z",
            "diff_hunk": "@@ -10,14 +11,19 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef uint64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2194300051",
            "id": 2194300051,
            "in_reply_to_id": 2192974951,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM6CylyT",
            "original_commit_id": "df416607fce212c295ab7526efddec82a7c3ac34",
            "original_line": 15,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 6,
            "pull_request_review_id": 3000415283,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194300051/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T07:40:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194300051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2194522428"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194522428"
                }
            },
            "author_association": "MEMBER",
            "body": "There is type validation in the API dispatcher. Beyond that arbitrary strings were intentionally allowed in #33998.",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-09T09:24:55Z",
            "diff_hunk": "@@ -10,14 +11,19 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef uint64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2194522428",
            "id": 2194522428,
            "in_reply_to_id": 2192974951,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM6CzcE8",
            "original_commit_id": "df416607fce212c295ab7526efddec82a7c3ac34",
            "original_line": 15,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 6,
            "pull_request_review_id": 3000750190,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194522428/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T09:24:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194522428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195390477"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195390477"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "What would be good candidate options for status? also if status is failed should we mark it as error message?",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-09T15:58:59Z",
            "diff_hunk": "@@ -778,7 +778,21 @@ void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(\n     kind = opts->err ? \"echoerr\" : history ? \"echomsg\" : \"echo\";\n   }\n \n-  msg_multihl(hl_msg, kind, history, opts->err);\n+  String status = opts->status;\n+  if ((kind != NULL && strcmp(kind, \"progress\") == 0)\n+      && ((status.data == NULL)\n+          || (strcmp(status.data, \"success\") != 0",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195390477",
            "id": 2195390477,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C2wAN",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 784,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": 3002125351,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195390477/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T15:58:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195390477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195392451"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195392451"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "When a message gets updated should we drop the message to end of the history? or leave it where it is?\r\n",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-09T15:59:40Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195392451",
            "id": 2195392451,
            "line": 1145,
            "node_id": "PRRC_kwDOAPphoM6C2wfD",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1145,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 213,
            "pull_request_review_id": 3002128482,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195392451/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:00:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195392451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195409882"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195409882"
                }
            },
            "author_association": "MEMBER",
            "body": "Why bother manipulating the message history at all? Can we not just add a new entry for each message (if `history == true`, which it arguably shouldn't be for \"progress\" messages at least).\r\n\r\nBeing able to replace a message is about replacing it in the UI right? How the history looks like seems insignificant, and may even be unwanted?",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-09T16:05:05Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195409882",
            "id": 2195409882,
            "in_reply_to_id": 2195392451,
            "line": 1145,
            "node_id": "PRRC_kwDOAPphoM6C20va",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1145,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 213,
            "pull_request_review_id": 3002154802,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195409882/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:05:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195409882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195660438"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195660438"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm still thinking about it tbh. I thought the requirement for updating message in the proposal meant modifying it in the history since we don't really keep messages anywhere else. If we won't store progress messages it just becomes something that picks up progress info and calls autocommand . That doesn't feel like it needs to be in message system. If we do keep progress msg in history and keep adding new nodes for each update that becomes spammy in message-history?\r\n\r\nI'm still thinking about what the best way to do this would be. \n",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-09T17:52:35Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195660438",
            "id": 2195660438,
            "in_reply_to_id": 2195392451,
            "line": 1145,
            "node_id": "PRRC_kwDOAPphoM6C3x6W",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1145,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 213,
            "pull_request_review_id": 3002574740,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195660438/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T17:56:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195660438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195683434"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195683434"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes I'm also not sure this needs to leak into the C side in the extent it is currently proposed. I would think just assigning a message ID, which is then passed along the the `msg_show` event, is sufficient. A UI can then replace the message text in case the message is still visible somewhere.\r\n\r\nWhat is the purpose of the title, status and percentage fields? Can the caller not represent all of those by modifying the message chunks?",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-09T18:07:18Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195683434",
            "id": 2195683434,
            "in_reply_to_id": 2195392451,
            "line": 1145,
            "node_id": "PRRC_kwDOAPphoM6C33hq",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1145,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 213,
            "pull_request_review_id": 3002609712,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195683434/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T18:07:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195683434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2199322345"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199322345"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Can the caller not represent all of those by modifying the message chunks?\r\n\r\nTechnically yes. With kind being able to be anything client can even just drop e json blob in the msg and ui can handle it. But since we are adding explicit support for progress message internally I think it makes sense to keep them as separate fields. When we through autocmd events we can provide them separately then receiver can deal with it how it wants. ",
            "commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "created_at": "2025-07-11T02:20:26Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2199322345",
            "id": 2199322345,
            "in_reply_to_id": 2195392451,
            "line": 1145,
            "node_id": "PRRC_kwDOAPphoM6DFv7p",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1145,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 213,
            "pull_request_review_id": 3008219867,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199322345/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-11T02:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199322345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "ping @justinmk ",
            "created_at": "2025-07-09T16:00:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3053195123",
            "id": 3053195123,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM61_A9z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3053195123/reactions"
            },
            "updated_at": "2025-07-09T16:00:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3053195123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have a few questions\r\n\r\n1. in the proposal does the  ui-events (msg_show) or autocmd-events (like a new Message event) ?\r\n1. what's our policy on ui-events is adding more arguments a breaking change to the protocol?\r\n1. actually I'm also confused on how does ui-events get sents there is a function that constracts snd sends the event but I could't find where it gets called in nvim_echos code path. Unless msg_start() and msg_end() are triggering it. I guess I need to explore more of the ext-ui codes. I'm comparativly new to that section of the codebase.\r\n1. should we make progress messages always to be recorded in history? Since we only save messages in message history. I'd assume users can send partial updates in future messages. If we want the events we emit to have full info then we need to store the messages\r\n1. when a message update comes should we drop the message node to end of history. Or modify in where it is.\r\n1. should we let progress percent to be decreased? Or allow it only to increase? In case of vscode they provide a increment option only.\r\n1. also in your proposal what does status actually represent?\r\n\r\ncc @justinmk \r\n",
            "created_at": "2025-07-13T01:17:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3066318035",
            "id": 3066318035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62xEzT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066318035/reactions"
            },
            "updated_at": "2025-07-13T03:51:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066318035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "1. editor event (autocmd)\r\n1. adding new args to an event is non-breaking (`:help api-contract`)\r\n1. UI events are asynchronous and not related to any particular function. `nvim_echo` happens to affect the UI (it prints messages) so it generates UI events.\r\n\r\n> should we make progress messages always to be recorded in history?\r\n\r\nI was thinking about this today and starting to doubt some portion of my proposal. Because progress messages are long-lived, and when they are updated they generate messages, so it doesn't really make sense to \"update\" an existing message. That would make the message system logic very strange.\r\n\r\n> when a message update comes should we drop the message node to end of history. Or modify in where it is.\r\n\r\nyeah, that's the part I am rethinking. Pushing it to the end would increment the id...? But that makes no sense. And if it doesn't increment the id, then the message system has to reason about the order of messages.\r\n\r\n> should we let progress percent to be decreased? Or allow it only to increase? In case of vscode they provide a increment option only.\r\n\r\nIs it a reversible decision? If so, we can choose the simple way.\r\n\r\n> also in your proposal what does status actually represent?\r\n\r\n`status='done|fail|cancel|waiting|...'`\r\n",
            "created_at": "2025-07-13T05:24:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3066612792",
            "id": 3066612792,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62yMw4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066612792/reactions"
            },
            "updated_at": "2025-07-13T05:24:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066612792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> UI events are asynchronous and not related to any particular function. nvim_echo happens to affect the UI (it prints messages) so it generates UI events.\r\n\r\nThe `msg_show` UI event for should emit message_id, status, title, percent stuff too. I was trying to figure out how to do it.\r\n\r\n> Pushing it to the end would increment the id...? But that makes no sense. And if it doesn't increment the id, then the message system has to reason about the order of messages.\r\n\r\nAs the current implementation in this pr stands it doesn't increment the id but does move the message to the end. We can do this because message-history is stored as linked-list. Linked-list has it's own ordering apart from the id we are assigning a message.\r\n\r\nI'm kind of confused if message history is the right place to implement this. We currently only give message-id to messages when messages are stored in history. `nvim_echo` can create temporary messages that doesn't get stored in message history. Then there's also ext-ui.\r\n\r\n> Is it a reversible decision? If so, we can choose the simple way.\r\n\r\nI'm not sure what you meant here. ",
            "created_at": "2025-07-13T07:23:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3066687164",
            "id": 3066687164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62ye68",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066687164/reactions"
            },
            "updated_at": "2025-07-13T07:23:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066687164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Like I said, simply passing the ID to the msg_show event (emitted [here](https://github.com/neovim/neovim/blob/3e7f5d95aa25943e26d88a75fc55785229c36e34/src/nvim/message.c#L3183), modified [here](https://github.com/neovim/neovim/blob/3e7f5d95aa25943e26d88a75fc55785229c36e34/src/nvim/api/ui_events.in.h#L165)) would be sufficient for a UI to replace the message (adding status, title, percent, to the UI event still seems excessive to me). The UI itself would track whether it is still visible, doesn't need to be attached to the message history in `message.c`.",
            "created_at": "2025-07-13T09:09:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3066742989",
            "id": 3066742989,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62ysjN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066742989/reactions"
            },
            "updated_at": "2025-07-13T09:12:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066742989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> simply passing the ID to the msg_show event (emitted here, modified here) would be sufficient for a UI to replace the message\r\n\r\nNot exactly. That takes care of `ext-ui` clients but the tui won't handle things just with that. Tui would just be printing the message as is.\r\n\r\n> (adding status, title, percent, to the UI event still seems excessive to me).\r\n\r\nI'm guessing you want the progress-msg emiter to handle how they want to format things or how they want to display things as part of the message text. That makes the entire thing way too openended. Creating seperation like this allows us to standardize things. Also create separation. For example, title, status and percent are special info for progress messages. Yeah you can just format the message text like \"title: msg percent%\" but there's no enforcement for that. And it can't be reliably decomposed due to that. If we keep them as separate things UI can decide to deal with it differently. Also, since we are going to run special autocmd on progress updates plugins can listen for those too. The `status` with events can also act as cancelation trigger.\r\n\r\n> The UI itself would track whether it is still visible, doesn't need to be attached to the message history in message.c.\r\n\r\nMessage history integration is mainly to keep track of the messages as internal states, to handle tui and to basically allow partial updates. Like you don't change anything in the messages/title/status just bump progress percent to 10 to 20% l",
            "created_at": "2025-07-13T14:06:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067068977",
            "id": 3067068977,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62z8Ix",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067068977/reactions"
            },
            "updated_at": "2025-07-13T14:07:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067068977",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Will the `replace_last` parameter become redundant after providing message ids?",
            "created_at": "2025-07-13T14:42:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067088057",
            "id": 3067088057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM620Ay5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067088057/reactions"
            },
            "updated_at": "2025-07-13T14:42:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067088057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Not exactly. That takes care of `ext-ui` clients but the tui won't handle things just with that. Tui would just be printing the message as is.\r\n\r\nExactly, and that is what it will continue to do. I don't think it makes sense to add C code at this point to display/replace messages in the TUI. It will become a UI client.\r\n\r\n~~Adding additional arguments is fine, but maybe we should consider adding a `data` field rather than 4 new arguments.~~\r\n",
            "created_at": "2025-07-13T15:09:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067103202",
            "id": 3067103202,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM620Efi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067103202/reactions"
            },
            "updated_at": "2025-07-14T03:02:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067103202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It will become a UI client.\r\n\r\nSince it's not yet I think it makes sense to support the current tui. It's not a ton of code anyway. If it becomes later down the line it can just be removed then.\r\n\r\n> maybe we should consider adding a data field rather than 4 new arguments.\r\n\r\nBy single field data do you mean a subobject/map or just one string field? If the later then same issue with separation is still there. Also, in the 1st casse it's already in an object why create an extra level of nesting? Internally we can handle it as a seperate object but externally in api/events it kind of stays the same\r\n\r\n",
            "created_at": "2025-07-14T02:04:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067538847",
            "id": 3067538847,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM621u2f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067538847/reactions"
            },
            "updated_at": "2025-07-14T02:04:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067538847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Since it's not yet I think it makes sense to support the current tui. It's not a ton of code anyway.\r\n\r\nThat remains to be seen. I was talking about (re)placing a message with an ID in some special place other than the 'cmdheight' area. That's the only way this proposal makes any sense to me (and would be a couple lines of Lua code in vim._extui). The legacy message grid always replaces messages by definition after all, whether they have an ID or not. But maybe I'm missing the point here, I'll refrain from commenting until the proposal is more complete.\r\n\r\n> Also, in the 1st casse it's already in an object\r\n\r\nIt's not for `vim.ui_attach` callbacks, but yes you're right for RPC notifications, so never mind this.",
            "created_at": "2025-07-14T02:57:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067626775",
            "id": 3067626775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM622EUX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067626775/reactions"
            },
            "updated_at": "2025-07-14T02:57:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067626775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk, I think it's in good shape now. A review here will be nice. Also, take a look at the opening message of the pr. It explains how things work.",
            "created_at": "2025-08-03T06:25:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3147383562",
            "id": 3147383562,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM67mUMK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3147383562/reactions"
            },
            "updated_at": "2025-08-03T06:25:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3147383562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @justinmk, I think it's in good shape now. A review here will be nice. Also, take a look at the opening message of the pr. It explains how things work.\r\n\r\nPing @justinmk",
            "created_at": "2025-08-16T00:01:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3193025659",
            "id": 3193025659,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM6-UbR7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193025659/reactions"
            },
            "updated_at": "2025-08-16T00:01:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193025659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34846/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34846/commits",
    "created_at": "2025-07-08T11:47:30Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34846.diff",
    "draft": false,
    "head": {
        "label": "shadmansaleh:feat/progress-msg",
        "ref": "feat/progress-msg",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/shadmansaleh/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/shadmansaleh/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/shadmansaleh/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/shadmansaleh/neovim/branches{/branch}",
            "clone_url": "https://github.com/shadmansaleh/neovim.git",
            "collaborators_url": "https://api.github.com/repos/shadmansaleh/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/shadmansaleh/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/shadmansaleh/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/shadmansaleh/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/shadmansaleh/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/shadmansaleh/neovim/contributors",
            "created_at": "2021-03-16T15:07:33Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/shadmansaleh/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/shadmansaleh/neovim/downloads",
            "events_url": "https://api.github.com/repos/shadmansaleh/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/shadmansaleh/neovim/forks",
            "full_name": "shadmansaleh/neovim",
            "git_commits_url": "https://api.github.com/repos/shadmansaleh/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/shadmansaleh/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/shadmansaleh/neovim/git/tags{/sha}",
            "git_url": "git://github.com/shadmansaleh/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/shadmansaleh/neovim/hooks",
            "html_url": "https://github.com/shadmansaleh/neovim",
            "id": 348391941,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/shadmansaleh/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/shadmansaleh/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/shadmansaleh/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/shadmansaleh/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/shadmansaleh/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/shadmansaleh/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/shadmansaleh/neovim/merges",
            "milestones_url": "https://api.github.com/repos/shadmansaleh/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNDgzOTE5NDE=",
            "notifications_url": "https://api.github.com/repos/shadmansaleh/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/shadmansaleh/neovim/pulls{/number}",
            "pushed_at": "2025-08-18T05:36:44Z",
            "releases_url": "https://api.github.com/repos/shadmansaleh/neovim/releases{/id}",
            "size": 327750,
            "ssh_url": "git@github.com:shadmansaleh/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/shadmansaleh/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/shadmansaleh/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/shadmansaleh/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/shadmansaleh/neovim/subscription",
            "svn_url": "https://github.com/shadmansaleh/neovim",
            "tags_url": "https://api.github.com/repos/shadmansaleh/neovim/tags",
            "teams_url": "https://api.github.com/repos/shadmansaleh/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/shadmansaleh/neovim/git/trees{/sha}",
            "updated_at": "2025-08-07T07:39:49Z",
            "url": "https://api.github.com/repos/shadmansaleh/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
            "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
            "followers_url": "https://api.github.com/users/shadmansaleh/followers",
            "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
            "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/shadmansaleh",
            "id": 13149513,
            "login": "shadmansaleh",
            "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
            "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
            "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
            "repos_url": "https://api.github.com/users/shadmansaleh/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/shadmansaleh",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34846",
    "id": 2649621726,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "e25a990bba5338e0acda62c093e29603a20d47c4",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6d7gTe",
    "number": 34846,
    "patch_url": "https://github.com/neovim/neovim/pull/34846.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34846/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/1c6651776f02a5d145affb38b3e9ca6675e9a82c",
    "title": "feat: add support for progress messages through nvim_echo",
    "updated_at": "2025-08-16T00:01:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
        "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
        "followers_url": "https://api.github.com/users/shadmansaleh/followers",
        "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
        "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/shadmansaleh",
        "id": 13149513,
        "login": "shadmansaleh",
        "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
        "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
        "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
        "repos_url": "https://api.github.com/users/shadmansaleh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/shadmansaleh",
        "user_view_type": "public"
    }
}