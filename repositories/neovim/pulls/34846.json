{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34846/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34846/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34846"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34846"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34846/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a95428426edd63098ea4e155fadd04b1bdec1067"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6294,
            "forks_count": 6294,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1994,
            "open_issues_count": 1994,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-02T02:10:04Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 340229,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92438,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-02T02:37:13Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92438,
            "watchers_count": 92438,
            "web_commit_signoff_required": false
        },
        "sha": "6a409e05071735c4b1c0272d51d8871b58384eee",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Working toward #32537\r\n\r\nbased on a proposal from https://github.com/neovim/neovim/issues/32537#issuecomment-2672600804\r\n\r\n\r\n## Problem:\r\nNvim does not have a core concept for indicating \"progress\" of\r\nlong-running tasks. The LspProgress event is specific to LSP.\r\n\r\n## Solution:\r\n- `nvim_echo` can emit `kind=\"progress\"` messages.\r\n  - Emits a `Progress` event.\r\n  - Includes new fields (id, status, percent) in the `msg_show` ui-event.\r\n  - The UI is expected to overwrite any message having the same id.\r\n- Messages have a globally unique ID.\r\n  - `nvim_echo` returns the message ID.\r\n- `nvim_echo(… {id=…})` updates existing messages.\r\n\r\n## Example:\r\n\r\n```lua\r\nlocal grp = vim.api.nvim_create_augroup(\"Msg\", {clear = true})\r\nvim.api.nvim_create_autocmd('Progress', {\r\n  pattern={\"term\"},\r\n  group = grp,\r\n  callback = function(ev)\r\n    print(string.format('event fired: %s', vim.inspect(ev))..'\\n')\r\n  end\r\n})\r\n\r\n-- require('vim._extui').enable({enable=true, msg={target='msg', timeout=1000}})\r\nvim.api.nvim_echo({{'searching'}}, true, {kind='progress',  percent=80, status='running', title=\"terminal(ripgrep)\"})\r\nlocal id = vim.api.nvim_echo({{'searching'}}, true, {kind='progress', status='running', percent=10, title=\"terminal(ripgrep)\"})\r\nvim.api.nvim_echo({}, true, {id = id, kind='progress', percent=20, status = 'running', title='find tests'})\r\nvim.api.nvim_echo({}, true, {id = id, kind='progress', status='running', percent=70})\r\nvim.api.nvim_echo({{'complete'}}, true, {id = id, kind='progress', status='success', percent=100, title=\"find tests\"})\r\n```\r\n\r\n## Todo:\r\n- [x] ~add Message event for messages outside of history too~\r\n       A general message event is really complicated without a proper refactor to message/echo-area. Particularly, non-multiline message/vim stuff touches this section in too many ways at too many places. Considering it out of scope for now.\r\n       Introducing a `Progress` event for progress messages instead of a general message event.\r\n- [x] integrate with `msg_show` ui event\r\n- [x] testing\r\n- [x] docs\r\n\r\n## Followups:\r\n- Integrate with 'statusline' by listening to the Progress autocmd event.\r\n- Integrate progress ui-event with `vim._extui`.\r\n",
    "closed_at": "2025-08-26T20:48:53Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2192974951"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2192974951"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Where are UI protocols kept actually? What makes a sting valid message-kind?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-08T16:38:06Z",
            "diff_hunk": "@@ -10,14 +11,19 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef uint64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2192974951",
            "id": 2192974951,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CtiRn",
            "original_commit_id": "df416607fce212c295ab7526efddec82a7c3ac34",
            "original_line": 15,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 2998376378,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2192974951/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-08T16:38:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2192974951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2193481139"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193481139"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure what you're asking sorry. Until now message kind strings are just set directly at the callsite, not stored/defined anywhere. One exception is the verbose kind to compare to `msg_ext_kind` directly rather than needing `strcmp()`\r\nhttps://github.com/neovim/neovim/blob/435f03ee106a548c2e5fd6c10005f5ae2a29a5a4/src/nvim/message.c#L3325-L3334",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-08T21:34:44Z",
            "diff_hunk": "@@ -10,14 +11,19 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef uint64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2193481139",
            "id": 2193481139,
            "in_reply_to_id": 2192974951,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Cvd2z",
            "original_commit_id": "df416607fce212c295ab7526efddec82a7c3ac34",
            "original_line": 15,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 2999158253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193481139/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-08T21:34:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193481139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2194300051"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194300051"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I noticed that. But I was wondering there should be at least some validation layer. Otherwise, kind can be set to anything. I guess that's the case here. The verbose case is different it lt's controlled by verbose_enter() and verbose_exit() that's why it can work with pointer comparison. It doesn't make sense for progress to be something like that.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-09T07:40:00Z",
            "diff_hunk": "@@ -10,14 +11,19 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef uint64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2194300051",
            "id": 2194300051,
            "in_reply_to_id": 2192974951,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CylyT",
            "original_commit_id": "df416607fce212c295ab7526efddec82a7c3ac34",
            "original_line": 15,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 3000415283,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194300051/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T07:40:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194300051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2194522428"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194522428"
                }
            },
            "author_association": "MEMBER",
            "body": "There is type validation in the API dispatcher. Beyond that arbitrary strings were intentionally allowed in #33998.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-09T09:24:55Z",
            "diff_hunk": "@@ -10,14 +11,19 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef uint64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2194522428",
            "id": 2194522428,
            "in_reply_to_id": 2192974951,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CzcE8",
            "original_commit_id": "df416607fce212c295ab7526efddec82a7c3ac34",
            "original_line": 15,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 3000750190,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194522428/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T09:24:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194522428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195390477"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195390477"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "What would be good candidate options for status? also if status is failed should we mark it as error message?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-09T15:58:59Z",
            "diff_hunk": "@@ -778,7 +778,21 @@ void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(\n     kind = opts->err ? \"echoerr\" : history ? \"echomsg\" : \"echo\";\n   }\n \n-  msg_multihl(hl_msg, kind, history, opts->err);\n+  String status = opts->status;\n+  if ((kind != NULL && strcmp(kind, \"progress\") == 0)\n+      && ((status.data == NULL)\n+          || (strcmp(status.data, \"success\") != 0",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195390477",
            "id": 2195390477,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C2wAN",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 784,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3002125351,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195390477/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T15:58:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195390477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195392451"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195392451"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "When a message gets updated should we drop the message to end of the history? or leave it where it is?\r\n",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-09T15:59:40Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195392451",
            "id": 2195392451,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C2wfD",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1089,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3002128482,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195392451/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:00:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195392451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195409882"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195409882"
                }
            },
            "author_association": "MEMBER",
            "body": "Why bother manipulating the message history at all? Can we not just add a new entry for each message (if `history == true`, which it arguably shouldn't be for \"progress\" messages at least).\r\n\r\nBeing able to replace a message is about replacing it in the UI right? How the history looks like seems insignificant, and may even be unwanted?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-09T16:05:05Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195409882",
            "id": 2195409882,
            "in_reply_to_id": 2195392451,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C20va",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1089,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3002154802,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195409882/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:05:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195409882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195660438"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195660438"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm still thinking about it tbh. I thought the requirement for updating message in the proposal meant modifying it in the history since we don't really keep messages anywhere else. If we won't store progress messages it just becomes something that picks up progress info and calls autocommand . That doesn't feel like it needs to be in message system. If we do keep progress msg in history and keep adding new nodes for each update that becomes spammy in message-history?\r\n\r\nI'm still thinking about what the best way to do this would be. \n",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-09T17:52:35Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195660438",
            "id": 2195660438,
            "in_reply_to_id": 2195392451,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C3x6W",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1089,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3002574740,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195660438/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T17:56:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195660438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2195683434"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195683434"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes I'm also not sure this needs to leak into the C side in the extent it is currently proposed. I would think just assigning a message ID, which is then passed along the the `msg_show` event, is sufficient. A UI can then replace the message text in case the message is still visible somewhere.\r\n\r\nWhat is the purpose of the title, status and percentage fields? Can the caller not represent all of those by modifying the message chunks?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-09T18:07:18Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2195683434",
            "id": 2195683434,
            "in_reply_to_id": 2195392451,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C33hq",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1089,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3002609712,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195683434/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T18:07:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195683434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2199322345"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199322345"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Can the caller not represent all of those by modifying the message chunks?\r\n\r\nTechnically yes. With kind being able to be anything client can even just drop e json blob in the msg and ui can handle it. But since we are adding explicit support for progress message internally I think it makes sense to keep them as separate fields. When we through autocmd events we can provide them separately then receiver can deal with it how it wants. ",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-07-11T02:20:26Z",
            "diff_hunk": "@@ -1034,16 +1053,50 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return 0;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool progress_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    progress_message_found = true;\n+    // detach the node if found",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2199322345",
            "id": 2199322345,
            "in_reply_to_id": 2195392451,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DFv7p",
            "original_commit_id": "92d0d85020b6e3a862be0d45e5ee0cbd757dfff9",
            "original_line": 1089,
            "original_position": 86,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3008219867,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199322345/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-11T02:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199322345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2283988284"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283988284"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's call this `progress`. All the fields are for that purpose. If we need a free-form field (`data`) we can always add it later.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T03:47:26Z",
            "diff_hunk": "@@ -877,6 +878,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id\n+\t    appears it should replace the older message.\n+\n+\textra_info",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2283988284",
            "id": 2283988284,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIuU8",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 886,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3130571923,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283988284/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T03:47:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283988284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2283994917"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283994917"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\t\t\t\tAfter a progress message is created via\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T03:54:31Z",
            "diff_hunk": "@@ -787,6 +787,32 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress-msg is message is created via",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2283994917",
            "id": 2283994917,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIv8l",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 791,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3130579488,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283994917/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T03:54:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283994917",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2283996002"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283996002"
                }
            },
            "author_association": "MEMBER",
            "body": "matching against the title is unusual but makes sense I think",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T03:55:42Z",
            "diff_hunk": "@@ -787,6 +787,32 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress-msg is message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The data item in autocmd",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2283996002",
            "id": 2283996002,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIwNi",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 793,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3130580757,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283996002/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T03:55:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283996002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2283997583"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283997583"
                }
            },
            "author_association": "MEMBER",
            "body": "we have a tag for that\r\n```suggestion\r\n\t\t\t\ttitle of the message. The |event-data| contains:\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T03:57:20Z",
            "diff_hunk": "@@ -787,6 +787,32 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress-msg is message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The data item in autocmd\n+\t\t\t\tcallback contains following",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2283997583",
            "id": 2283997583,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIwmP",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 794,
            "original_position": 8,
            "original_start_line": 793,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3130582579,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283997583/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T03:57:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283997583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2283998553"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283998553"
                }
            },
            "author_association": "MEMBER",
            "body": "use either \"msg\" or \"message\", not both ways. but maybe `text` could work.\r\n```suggestion\r\n\t\t\t\t\tmsg_id: id of the message\r\n\t\t\t\t\ttext: message text\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T03:58:19Z",
            "diff_hunk": "@@ -787,6 +787,32 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress-msg is message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The data item in autocmd\n+\t\t\t\tcallback contains following\n+\t\t\t\t\tmsg_id: id of the message\n+\t\t\t\t\tmessage: text of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2283998553",
            "id": 2283998553,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIw1Z",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 796,
            "original_position": 10,
            "original_start_line": 795,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3130583655,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283998553/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T03:58:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2283998553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284001243"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284001243"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• Creating or updating a progress message with `nvim_echo` triggers a |Progress| event.\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:01:08Z",
            "diff_hunk": "@@ -181,6 +182,9 @@ EVENTS\n \n • |CmdlineLeavePre| triggered before preparing to leave the command line.\n • New `append` paremeter for |ui-messages| `msg_show` event.\n+• New `message-id` and `extra-info` paremeter for |ui-messages| `msg_show` event.\n+• |Progress| event is triggered upon receiving a progress message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284001243",
            "id": 2284001243,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIxfb",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 186,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 1,
            "pull_request_review_id": 3130586756,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284001243/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T04:01:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284001243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284006831"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284006831"
                }
            },
            "author_association": "MEMBER",
            "body": "does using bullet points improve the generated docs? we don't need to mention `nvim_echo` in so many places.\r\n\r\n```suggestion\r\n///         valid message-id is always greater or equal to 1\r\n///         - -1 no message was shown\r\n///         -  0 temp message (not stored in history)\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:07:21Z",
            "diff_hunk": "@@ -760,12 +760,29 @@ void nvim_set_vvar(String name, Object value, Error *err)\n ///               the (optional) name or ID `hl_group`.\n /// @param history  if true, add to |message-history|.\n /// @param opts  Optional parameters.\n+///          - id: message-id for updating existing message.\n ///          - err: Treat the message like `:echoerr`. Sets `hl_group` to |hl-ErrorMsg| by default.\n ///          - kind: Set the |ui-messages| kind with which this message will be emitted.\n ///          - verbose: Message is controlled by the 'verbose' option. Nvim invoked with `-V3log`\n ///            will write the message to the \"log\" file instead of standard output.\n-void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(echo_opts) *opts,\n-               Error *err)\n+///          - title: The title for progress message.\n+///          - status: Current status of the progress message. Can be\n+///            one of the following values\n+///            - success: The progress item completed successfully\n+///            - running: The progress is ongoing\n+///            - failed: The progress item failed\n+///            - cancel: The progressing process should be canceled.\n+///                      note: Cancel needs to be handled by progress\n+///                      initiator by listening for the `Progress` event\n+///          - percent: How much progress is done on the progress\n+///            message\n+/// @return The message-id of the message.\n+///         valid message-id is always greater or equal to 1\n+///         -1 means nvim_echo didn't show a message\n+///          0 means nvim_echo didn't allocate a message id for the message. happens\n+///            for temp messages not stored in message history.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284006831",
            "id": 2284006831,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIy2v",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 781,
            "original_position": 26,
            "original_start_line": 780,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3130593785,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284006831/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T04:07:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284006831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284008143"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284008143"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  bool is_progress = strequal(kind, \"progress\");\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:08:48Z",
            "diff_hunk": "@@ -780,7 +797,40 @@ void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(\n     kind = opts->err ? \"echoerr\" : history ? \"echomsg\" : \"echo\";\n   }\n \n-  msg_multihl(hl_msg, kind, history, opts->err);\n+  bool is_kind_progress = kind != NULL && strcmp(kind, \"progress\") == 0;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284008143",
            "id": 2284008143,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIzLP",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 800,
            "original_position": 37,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3130595372,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284008143/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T04:08:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284008143",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284009829"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284009829"
                }
            },
            "author_association": "MEMBER",
            "body": "use one of the VALIDATE macros. same for most other `api_set_error` cases below, except in rare cases.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:10:40Z",
            "diff_hunk": "@@ -780,7 +797,40 @@ void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(\n     kind = opts->err ? \"echoerr\" : history ? \"echomsg\" : \"echo\";\n   }\n \n-  msg_multihl(hl_msg, kind, history, opts->err);\n+  bool is_kind_progress = kind != NULL && strcmp(kind, \"progress\") == 0;\n+\n+  if (!is_kind_progress && (opts->status.size != 0 || opts->title.size != 0 || opts->percent > 0)) {\n+    api_set_error(err, kErrorTypeValidation,\n+                  \"title, status and percents fields can only be used with progress messages\");",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284009829",
            "id": 2284009829,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIzll",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 804,
            "original_position": 41,
            "original_start_line": 802,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3130597421,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284009829/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T04:10:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284009829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284010569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284010569"
                }
            },
            "author_association": "MEMBER",
            "body": "`strequal` avoids some verbosity, and it also allows NULL",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:11:25Z",
            "diff_hunk": "@@ -780,7 +797,40 @@ void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(\n     kind = opts->err ? \"echoerr\" : history ? \"echomsg\" : \"echo\";\n   }\n \n-  msg_multihl(hl_msg, kind, history, opts->err);\n+  bool is_kind_progress = kind != NULL && strcmp(kind, \"progress\") == 0;\n+\n+  if (!is_kind_progress && (opts->status.size != 0 || opts->title.size != 0 || opts->percent > 0)) {\n+    api_set_error(err, kErrorTypeValidation,\n+                  \"title, status and percents fields can only be used with progress messages\");\n+    return -1;\n+  }\n+\n+  if (is_kind_progress\n+      && ((opts->status.data != NULL)\n+          && (strcmp(opts->status.data, \"success\") != 0",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284010569",
            "id": 2284010569,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIzxJ",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 810,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3130598264,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284010569/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T04:11:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284010569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284011385"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284011385"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    Progress = false, -- after showing/updating a progress message\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:12:10Z",
            "diff_hunk": "@@ -89,6 +89,7 @@ return {\n     QuitPre = false, -- before :quit\n     PackChangedPre = false, -- before trying to change state of `vim.pack` plugin\n     PackChanged = false, -- after changing state of `vim.pack` plugin\n+    Progress = false, -- after writting a progress message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284011385",
            "id": 2284011385,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IIz95",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 92,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/auevents.lua",
            "position": 1,
            "pull_request_review_id": 3130599119,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284011385/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T04:12:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284011385",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284019536"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284019536"
                }
            },
            "author_association": "MEMBER",
            "body": "\r\n```suggestion\r\n  MsgID msg_id;           ///< Identifier of the message\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:20:10Z",
            "diff_hunk": "@@ -10,14 +10,24 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef int64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"\n+\n+typedef struct msg_ext_data {\n+  Integer percent;         ///< Progress percentage\n+  String title;            ///< Title for progress message\n+  String status;           ///< Status for progress message\n+} MessageExtData;\n /// Message history for `:messages`\n typedef struct msg_hist {\n-  struct msg_hist *next;  ///< Next message.\n-  struct msg_hist *prev;  ///< Previous message.\n-  HlMessage msg;          ///< Highlighted message.\n-  const char *kind;       ///< Message kind (for msg_ext)\n-  bool temp;              ///< Temporary message since last command (\"g<\")\n-  bool append;            ///< Message should be appended to previous entry, as opposed\n-                          ///< to on a new line (|ui-messages|->msg_show->append).\n+  MsgID message_id;           ///< Indentifier of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284019536",
            "id": 2284019536,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6II19Q",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 24,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 3130608245,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284019536/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T04:20:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284019536",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284020278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284020278"
                }
            },
            "author_association": "MEMBER",
            "body": "unnecessary formatting changes",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:20:49Z",
            "diff_hunk": "@@ -10,14 +10,24 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef int64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"\n+\n+typedef struct msg_ext_data {\n+  Integer percent;         ///< Progress percentage\n+  String title;            ///< Title for progress message\n+  String status;           ///< Status for progress message\n+} MessageExtData;\n /// Message history for `:messages`\n typedef struct msg_hist {\n-  struct msg_hist *next;  ///< Next message.\n-  struct msg_hist *prev;  ///< Previous message.\n-  HlMessage msg;          ///< Highlighted message.\n-  const char *kind;       ///< Message kind (for msg_ext)\n-  bool temp;              ///< Temporary message since last command (\"g<\")\n-  bool append;            ///< Message should be appended to previous entry, as opposed\n-                          ///< to on a new line (|ui-messages|->msg_show->append).\n+  MsgID message_id;           ///< Indentifier of the message\n+  struct msg_hist *next;      ///< Next message.\n+  struct msg_hist *prev;      ///< Previous message.\n+  HlMessage msg;              ///< Highlighted message.\n+  const char *kind;           ///< Message kind (for msg_ext)\n+  bool temp;                  ///< Temporary message since last command (\"g<\")\n+  bool append;                ///< Message should be appended to previous entry, as opposed\n+                              ///< to on a new line (|ui-messages|->msg_show->append).",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284020278",
            "id": 2284020278,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6II2I2",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 31,
            "original_position": 29,
            "original_start_line": 25,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 3130609050,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284020278/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T04:20:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284020278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284024638"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284024638"
                }
            },
            "author_association": "MEMBER",
            "body": " use strequal() wherever appropriate, especially when you are checking \"not NULL\"\r\n\r\n```suggestion\r\n  bool is_progress = strequal(msg_ext_kind, MSG_KIND_PROGRESS);\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:25:09Z",
            "diff_hunk": "@@ -1034,16 +1133,62 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return -1;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n-  entry->msg = msg;\n+  bool is_kind_progress = msg_ext_kind != NULL && strcmp(msg_ext_kind, MSG_KIND_PROGRESS) == 0;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284024638",
            "id": 2284024638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6II3M-",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 1139,
            "original_position": 207,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3130614342,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284024638/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T04:25:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284024638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284029160"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284029160"
                }
            },
            "author_association": "MEMBER",
            "body": "this looks very sus. why is this necessary for progress messages but not other messages?\r\n\r\nif we drop `draw_progress_message` and only support \"extui\", can we get rid of this? \r\n\r\neven without \"extui\", couldn't we show progress message by handling a `Progress` event in Lua ?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:29:31Z",
            "diff_hunk": "@@ -160,6 +164,16 @@ static bool msg_ext_history = false;  ///< message was added to history\n \n static int msg_grid_pos_at_flush = 0;\n \n+static MsgID msg_id_next = 1;           ///< message id to be allocated to next message\n+\n+// code inside doesn't emit ext-message\n+#define NO_EXT_MSG(code) \\\n+  do { \\\n+    msg_ext_skip = true; \\\n+    code; \\\n+    msg_ext_skip = false; \\\n+  } while (0)",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284029160",
            "id": 2284029160,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6II4To",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 175,
            "original_position": 30,
            "original_start_line": 170,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3130620689,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284029160/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T04:29:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284029160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284031494"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284031494"
                }
            },
            "author_association": "MEMBER",
            "body": "why is this whole block skipped for progress messages? it looks like the actual difference is the presence of an `id`. so naming this condition `is_kind_progress` is misleading and confusing...",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:31:43Z",
            "diff_hunk": "@@ -295,34 +309,46 @@ static bool is_multihl = false;\n /// @param kind Message kind (can be NULL to avoid setting kind)\n /// @param history Whether to add message to history\n /// @param err Whether to print message as an error\n-void msg_multihl(HlMessage hl_msg, const char *kind, bool history, bool err)\n+MsgID msg_multihl(MsgID id, HlMessage hl_msg, const char *kind, bool history, bool err,\n+                  MessageExtData *ext_data)\n {\n   no_wait_return++;\n   msg_start();\n   msg_clr_eos();\n   bool need_clear = false;\n+  bool is_kind_progress = kind != NULL && strcmp(kind, MSG_KIND_PROGRESS) == 0;\n   msg_ext_history = history;\n   if (kind != NULL) {\n     msg_ext_set_kind(kind);\n   }\n   is_multihl = true;\n   msg_ext_skip_flush = true;\n-  for (uint32_t i = 0; i < kv_size(hl_msg); i++) {\n-    HlMessageChunk chunk = kv_A(hl_msg, i);\n-    if (err) {\n-      emsg_multiline(chunk.text.data, kind, chunk.hl_id, true);\n-    } else {\n-      msg_multiline(chunk.text, chunk.hl_id, true, false, &need_clear);\n+\n+  if (!is_kind_progress) {\n+    for (uint32_t i = 0; i < kv_size(hl_msg); i++) {\n+      HlMessageChunk chunk = kv_A(hl_msg, i);\n+      if (err) {\n+        emsg_multiline(chunk.text.data, kind, chunk.hl_id, true);\n+      } else {\n+        msg_multiline(chunk.text, chunk.hl_id, true, false, &need_clear);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284031494",
            "id": 2284031494,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6II44G",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 333,
            "original_position": 67,
            "original_start_line": 327,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3130623398,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284031494/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T04:31:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284031494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284033422"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284033422"
                }
            },
            "author_association": "MEMBER",
            "body": "lots of new flags and special conditions are being added in this PR. please find a way to reduce them.\r\n\r\n",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T04:33:39Z",
            "diff_hunk": "@@ -1060,10 +1205,29 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n     msg_hist_temp = entry;\n   }\n \n-  msg_hist_len += !temp;\n+  msg_hist_len += !temp && !old_message_found;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284033422",
            "id": 2284033422,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6II5WO",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 1137,
            "original_position": 268,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3130625719,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284033422/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T04:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284033422",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284504242"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284504242"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was mainly putting a general way to pass data around in messages. But yeah we can update in future when it's necessary. Now just progress is enough.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T08:20:23Z",
            "diff_hunk": "@@ -877,6 +878,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id\n+\t    appears it should replace the older message.\n+\n+\textra_info",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284504242",
            "id": 2284504242,
            "in_reply_to_id": 2283988284,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IKsSy",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 886,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3131253981,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284504242/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T08:20:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284504242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284510881"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284510881"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was thinking of matching against something like ID:TITLE . That might be more useful?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T08:22:49Z",
            "diff_hunk": "@@ -787,6 +787,32 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress-msg is message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The data item in autocmd",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284510881",
            "id": 2284510881,
            "in_reply_to_id": 2283996002,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IKt6h",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 793,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3131262568,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284510881/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T00:49:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284510881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284531945"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284531945"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Wasn't aware of strequal. Will update with that",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T08:30:59Z",
            "diff_hunk": "@@ -780,7 +797,40 @@ void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(\n     kind = opts->err ? \"echoerr\" : history ? \"echomsg\" : \"echo\";\n   }\n \n-  msg_multihl(hl_msg, kind, history, opts->err);\n+  bool is_kind_progress = kind != NULL && strcmp(kind, \"progress\") == 0;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284531945",
            "id": 2284531945,
            "in_reply_to_id": 2284008143,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IKzDp",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 800,
            "original_position": 37,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3131291496,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284531945/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T08:31:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284531945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2284970166"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284970166"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is mainly because of this\r\n\r\n> - Progress message get's displayed in TUI/cmdline in the following format\r\n`{title}: {msg}..{percent}%`\r\n\r\nIn tui I'm showing the msg in special format to include title and percent. In case of ext-ui events I'm sending those segments seperately in msg_show event. Basically whatever we write on tui msg_area it get's forwarded to ext-ui as msg. That's is handled quite more lower-level in code. Passing around a flag as arg seemed wayy more messy then this to me.\r\n\r\nThis basically just adds a file-local global flag that enables and disables that forwarding the macro just wrap the code with toggle for the flag.\r\n\r\nBasically if we get rid of it we'll only show the msg without title and percent. Extui will still get all the info and it can show as they like. We can do that too I guess if we'll switch to extui2 in 0.12 by default. What do you think?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T11:36:24Z",
            "diff_hunk": "@@ -160,6 +164,16 @@ static bool msg_ext_history = false;  ///< message was added to history\n \n static int msg_grid_pos_at_flush = 0;\n \n+static MsgID msg_id_next = 1;           ///< message id to be allocated to next message\n+\n+// code inside doesn't emit ext-message\n+#define NO_EXT_MSG(code) \\\n+  do { \\\n+    msg_ext_skip = true; \\\n+    code; \\\n+    msg_ext_skip = false; \\\n+  } while (0)",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2284970166",
            "id": 2284970166,
            "in_reply_to_id": 2284029160,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IMeC2",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 175,
            "original_position": 30,
            "original_start_line": 170,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3131919373,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284970166/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T11:52:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2284970166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2285005657"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2285005657"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This process is done in `draw_progress_message` for progress messages. This is to allow partial updates. Like if you don't want to update the title you don't need to provide it to nvim_echo. in case of progress message so I'm processing history before display so I can fetch rest of the missing data from memory. \r\n\r\nHowever this might be too magical/unnecessary to provide in api. We can just not allow partial updates. What do you think?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-19T11:51:41Z",
            "diff_hunk": "@@ -295,34 +309,46 @@ static bool is_multihl = false;\n /// @param kind Message kind (can be NULL to avoid setting kind)\n /// @param history Whether to add message to history\n /// @param err Whether to print message as an error\n-void msg_multihl(HlMessage hl_msg, const char *kind, bool history, bool err)\n+MsgID msg_multihl(MsgID id, HlMessage hl_msg, const char *kind, bool history, bool err,\n+                  MessageExtData *ext_data)\n {\n   no_wait_return++;\n   msg_start();\n   msg_clr_eos();\n   bool need_clear = false;\n+  bool is_kind_progress = kind != NULL && strcmp(kind, MSG_KIND_PROGRESS) == 0;\n   msg_ext_history = history;\n   if (kind != NULL) {\n     msg_ext_set_kind(kind);\n   }\n   is_multihl = true;\n   msg_ext_skip_flush = true;\n-  for (uint32_t i = 0; i < kv_size(hl_msg); i++) {\n-    HlMessageChunk chunk = kv_A(hl_msg, i);\n-    if (err) {\n-      emsg_multiline(chunk.text.data, kind, chunk.hl_id, true);\n-    } else {\n-      msg_multiline(chunk.text, chunk.hl_id, true, false, &need_clear);\n+\n+  if (!is_kind_progress) {\n+    for (uint32_t i = 0; i < kv_size(hl_msg); i++) {\n+      HlMessageChunk chunk = kv_A(hl_msg, i);\n+      if (err) {\n+        emsg_multiline(chunk.text.data, kind, chunk.hl_id, true);\n+      } else {\n+        msg_multiline(chunk.text, chunk.hl_id, true, false, &need_clear);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2285005657",
            "id": 2285005657,
            "in_reply_to_id": 2284031494,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IMmtZ",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 333,
            "original_position": 67,
            "original_start_line": 327,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3131971178,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2285005657/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-19T11:51:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2285005657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2286721767"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286721767"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Should we use `content` instead? ui-msg-show event uses `content` parameter for this",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-20T00:57:52Z",
            "diff_hunk": "@@ -787,6 +787,32 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress-msg is message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The data item in autocmd\n+\t\t\t\tcallback contains following\n+\t\t\t\t\tmsg_id: id of the message\n+\t\t\t\t\tmessage: text of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2286721767",
            "id": 2286721767,
            "in_reply_to_id": 2283998553,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6ITJrn",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 796,
            "original_position": 10,
            "original_start_line": 795,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3134434549,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286721767/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-20T00:57:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286721767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2286723872"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286723872"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, bullet points look better",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-20T00:59:47Z",
            "diff_hunk": "@@ -760,12 +760,29 @@ void nvim_set_vvar(String name, Object value, Error *err)\n ///               the (optional) name or ID `hl_group`.\n /// @param history  if true, add to |message-history|.\n /// @param opts  Optional parameters.\n+///          - id: message-id for updating existing message.\n ///          - err: Treat the message like `:echoerr`. Sets `hl_group` to |hl-ErrorMsg| by default.\n ///          - kind: Set the |ui-messages| kind with which this message will be emitted.\n ///          - verbose: Message is controlled by the 'verbose' option. Nvim invoked with `-V3log`\n ///            will write the message to the \"log\" file instead of standard output.\n-void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(echo_opts) *opts,\n-               Error *err)\n+///          - title: The title for progress message.\n+///          - status: Current status of the progress message. Can be\n+///            one of the following values\n+///            - success: The progress item completed successfully\n+///            - running: The progress is ongoing\n+///            - failed: The progress item failed\n+///            - cancel: The progressing process should be canceled.\n+///                      note: Cancel needs to be handled by progress\n+///                      initiator by listening for the `Progress` event\n+///          - percent: How much progress is done on the progress\n+///            message\n+/// @return The message-id of the message.\n+///         valid message-id is always greater or equal to 1\n+///         -1 means nvim_echo didn't show a message\n+///          0 means nvim_echo didn't allocate a message id for the message. happens\n+///            for temp messages not stored in message history.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2286723872",
            "id": 2286723872,
            "in_reply_to_id": 2284006831,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6ITKMg",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 781,
            "original_position": 26,
            "original_start_line": 780,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3134437510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286723872/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-20T00:59:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286723872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2292350681"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292350681"
                }
            },
            "author_association": "MEMBER",
            "body": "This doesn't match api-ui-events.txt",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-21T23:36:55Z",
            "diff_hunk": "@@ -181,6 +182,9 @@ EVENTS\n \n • |CmdlineLeavePre| triggered before preparing to leave the command line.\n • New `append` paremeter for |ui-messages| `msg_show` event.\n+• New `msg-id` and `extra-info` paremeter for |ui-messages| `msg_show` event.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2292350681",
            "id": 2292350681,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Ion7Z",
            "original_commit_id": "d5987c0d561208d84804e76f729466ed544ae4b0",
            "original_line": 185,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 1,
            "pull_request_review_id": 3142572487,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292350681/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-21T23:36:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292350681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2292351918"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292351918"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    Progress = false, -- after showing/updating a progress message\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-21T23:37:39Z",
            "diff_hunk": "@@ -89,6 +89,7 @@ return {\n     QuitPre = false, -- before :quit\n     PackChangedPre = false, -- before trying to change state of `vim.pack` plugin\n     PackChanged = false, -- after changing state of `vim.pack` plugin\n+    Progress = false, -- after showing/updating  a progress message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2292351918",
            "id": 2292351918,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IooOu",
            "original_commit_id": "d5987c0d561208d84804e76f729466ed544ae4b0",
            "original_line": 92,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/auevents.lua",
            "position": 1,
            "pull_request_review_id": 3142574831,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292351918/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-21T23:37:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292351918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2292378833"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292378833"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Names changed a bit from review. Forgot to update it here. Will do.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-21T23:59:51Z",
            "diff_hunk": "@@ -181,6 +182,9 @@ EVENTS\n \n • |CmdlineLeavePre| triggered before preparing to leave the command line.\n • New `append` paremeter for |ui-messages| `msg_show` event.\n+• New `msg-id` and `extra-info` paremeter for |ui-messages| `msg_show` event.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2292378833",
            "id": 2292378833,
            "in_reply_to_id": 2292350681,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IouzR",
            "original_commit_id": "d5987c0d561208d84804e76f729466ed544ae4b0",
            "original_line": 185,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 1,
            "pull_request_review_id": 3142605608,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292378833/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-21T23:59:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292378833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2293223061"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293223061"
                }
            },
            "author_association": "MEMBER",
            "body": "Would it be possible to support `id` being `string|integer` and allow providing it for new messages too, to set the id externally within the first message?\r\n\r\nAsking because for LSP there is a `lsp.ProgressToken integer|string` which is used to identify progress messages. The token is provided from the servers. If `nvim_echo` forces us to use the `msg-id` it creates then it means the lsp layer would have to maintain a progressToken->msg-id mapping.\r\n\r\n(Similar case in DAP for nvim-dap, where progress messages are sent by the adapter and have a `progressId` defined as a string)\r\n\r\n\r\nAnd looking at https://github.com/neovim/neovim/blob/30dae87de4c6d6c8bda9657e22e187634cfa12a8/runtime/lua/vim/lsp/_meta/protocol.lua?plain=1#L1751-L1757, maybe a arbitrary `data` or `user_data` property to carry any kind of value would be useful too.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-22T09:34:38Z",
            "diff_hunk": "@@ -909,4 +928,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|\n+used to report the state of long-running tasks.\n+\n+Progress messages are created or updated using |nvim_echo()| with `kind='progress'`\n+and the related options. Each message has a unique `msg_id`. A subsequent\n+message with the same `msg_id` replaces the older one.\n+\n+Listeners: ~\n+    • msg_show |ui-messages| event is fired for ext-ui upon creation/update of a\n+    progress-message\n+    • Updating or creating a progress message also triggers the |Progress| autocommand.\n+\n+Example: >\n+    local id = vim.api.nvim_echo({{'searching...'}}, true,\n+          {kind='progress', status='running', percent=10, title=\"term\"})\n+    vim.api.nvim_echo({{'searching'}}, true,\n+          {id=id, kind='progress', status='running', percent=50, title=\"term\"})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2293223061",
            "id": 2293223061,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Ir86V",
            "original_commit_id": "d3b7cb60507d0a9bb6aef8578496c0a13f034dd9",
            "original_line": 954,
            "original_position": 65,
            "original_start_line": 947,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3143810750,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293223061/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-22T09:42:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293223061",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2293261016"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293261016"
                }
            },
            "author_association": "MEMBER",
            "body": "> Asking because for LSP there is a `lsp.ProgressToken integer|string` which is used to identify progress messages. The token is provided from the servers. If `nvim_echo` forces us to use the `msg-id` it creates then it means the lsp layer would have to maintain a progressToken->msg-id mapping.\r\n\r\nExternally created message id are not guaranteed to be unique, i.e. they might conflict with other externally or future automatically created message ids. For careful usages should not be a problem, but still. So at least it might require some id validation or something.\r\n\r\nFor example, `nvim_buf_set_extmark()` allows setting manual numeric `id`, but it adjusts how new ids are computed based on that.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-22T09:51:31Z",
            "diff_hunk": "@@ -909,4 +928,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|\n+used to report the state of long-running tasks.\n+\n+Progress messages are created or updated using |nvim_echo()| with `kind='progress'`\n+and the related options. Each message has a unique `msg_id`. A subsequent\n+message with the same `msg_id` replaces the older one.\n+\n+Listeners: ~\n+    • msg_show |ui-messages| event is fired for ext-ui upon creation/update of a\n+    progress-message\n+    • Updating or creating a progress message also triggers the |Progress| autocommand.\n+\n+Example: >\n+    local id = vim.api.nvim_echo({{'searching...'}}, true,\n+          {kind='progress', status='running', percent=10, title=\"term\"})\n+    vim.api.nvim_echo({{'searching'}}, true,\n+          {id=id, kind='progress', status='running', percent=50, title=\"term\"})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2293261016",
            "id": 2293261016,
            "in_reply_to_id": 2293223061,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IsGLY",
            "original_commit_id": "d3b7cb60507d0a9bb6aef8578496c0a13f034dd9",
            "original_line": 954,
            "original_position": 65,
            "original_start_line": 947,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3143860739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293261016/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-22T09:51:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293261016",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2293383731"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293383731"
                }
            },
            "author_association": "MEMBER",
            "body": "That's a good point. Although I think in practice it is mostly UUIDs that are getting used.\r\n\r\nOtherwise I guess we'd need an additional namespace per source/progress-provider, maybe that's more hassle than the id mapping but it would be really nice if the progress system didn't require any external state management.\r\n\r\n ",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-22T10:42:46Z",
            "diff_hunk": "@@ -909,4 +928,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|\n+used to report the state of long-running tasks.\n+\n+Progress messages are created or updated using |nvim_echo()| with `kind='progress'`\n+and the related options. Each message has a unique `msg_id`. A subsequent\n+message with the same `msg_id` replaces the older one.\n+\n+Listeners: ~\n+    • msg_show |ui-messages| event is fired for ext-ui upon creation/update of a\n+    progress-message\n+    • Updating or creating a progress message also triggers the |Progress| autocommand.\n+\n+Example: >\n+    local id = vim.api.nvim_echo({{'searching...'}}, true,\n+          {kind='progress', status='running', percent=10, title=\"term\"})\n+    vim.api.nvim_echo({{'searching'}}, true,\n+          {id=id, kind='progress', status='running', percent=50, title=\"term\"})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2293383731",
            "id": 2293383731,
            "in_reply_to_id": 2293223061,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IskIz",
            "original_commit_id": "d3b7cb60507d0a9bb6aef8578496c0a13f034dd9",
            "original_line": 954,
            "original_position": 65,
            "original_start_line": 947,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3144023760,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293383731/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-22T10:42:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293383731",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2293408596"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293408596"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was mainly thinking about conflicts myself. For me, the ID was sort of like the namespace concept we have in other APIs. If I remember right, the VSCodes system allows you to pass in UUIDs, not just int as string, lsp, and dap specs, probably inherited the string|integer from that. Here we are also marking all messages saved in history with an ID, not just progress messages. This is primarily providing the low-level api for isn't making it simpler better? Any user of the api can do the translation in a higher level if necessary. Also, do we do multiple types of args in api? like int/str? I guess it can be done. But it's just bringing in complexity to lower-level.\r\n\r\nAlso, about the userdata, do you know what's usually kept there?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-22T10:55:24Z",
            "diff_hunk": "@@ -909,4 +928,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|\n+used to report the state of long-running tasks.\n+\n+Progress messages are created or updated using |nvim_echo()| with `kind='progress'`\n+and the related options. Each message has a unique `msg_id`. A subsequent\n+message with the same `msg_id` replaces the older one.\n+\n+Listeners: ~\n+    • msg_show |ui-messages| event is fired for ext-ui upon creation/update of a\n+    progress-message\n+    • Updating or creating a progress message also triggers the |Progress| autocommand.\n+\n+Example: >\n+    local id = vim.api.nvim_echo({{'searching...'}}, true,\n+          {kind='progress', status='running', percent=10, title=\"term\"})\n+    vim.api.nvim_echo({{'searching'}}, true,\n+          {id=id, kind='progress', status='running', percent=50, title=\"term\"})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2293408596",
            "id": 2293408596,
            "in_reply_to_id": 2293223061,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IsqNU",
            "original_commit_id": "d3b7cb60507d0a9bb6aef8578496c0a13f034dd9",
            "original_line": 954,
            "original_position": 65,
            "original_start_line": 947,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3144056090,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293408596/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-22T10:58:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293408596",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2293441418"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293441418"
                }
            },
            "author_association": "MEMBER",
            "body": "> . This is primarily providing the low-level api for isn't making it simpler better? Any user of the api can do the translation in a higher level if necessary\r\n\r\nWould the higher level API be in core as well?\r\nThere will be N providers - each plugin that wants to report progress in some way, but only a single `nvim_echo`. Imho moving complexity from the N locations to the single location is worthwhile. \r\n\r\n\r\n> Also, about the userdata, do you know what's usually kept there?\r\n\r\nIt would be mostly about being able to provide additional data that users might handle in their `Progress` handlers.\r\n\r\nLSP uses these structures:\r\n\r\nhttps://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workDoneProgressBegin\r\n\r\nDAP these:\r\n\r\nhttps://microsoft.github.io/debug-adapter-protocol/specification#Events_ProgressStart\r\n\r\n\r\nI suspect that one goal of this is to adapt https://github.com/neovim/neovim/blob/30dae87de4c6d6c8bda9657e22e187634cfa12a8/runtime/lua/vim/lsp/handlers.lua?plain=1#L56-L87 to go through nvim_echo?\r\n",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-22T11:13:06Z",
            "diff_hunk": "@@ -909,4 +928,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|\n+used to report the state of long-running tasks.\n+\n+Progress messages are created or updated using |nvim_echo()| with `kind='progress'`\n+and the related options. Each message has a unique `msg_id`. A subsequent\n+message with the same `msg_id` replaces the older one.\n+\n+Listeners: ~\n+    • msg_show |ui-messages| event is fired for ext-ui upon creation/update of a\n+    progress-message\n+    • Updating or creating a progress message also triggers the |Progress| autocommand.\n+\n+Example: >\n+    local id = vim.api.nvim_echo({{'searching...'}}, true,\n+          {kind='progress', status='running', percent=10, title=\"term\"})\n+    vim.api.nvim_echo({{'searching'}}, true,\n+          {id=id, kind='progress', status='running', percent=50, title=\"term\"})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2293441418",
            "id": 2293441418,
            "in_reply_to_id": 2293223061,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IsyOK",
            "original_commit_id": "d3b7cb60507d0a9bb6aef8578496c0a13f034dd9",
            "original_line": 954,
            "original_position": 65,
            "original_start_line": 947,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3144101870,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293441418/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-22T11:13:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293441418",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2294181667"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2294181667"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Would the higher level API be in core as well?\r\nThere will be N providers - each plugin that wants to report progress in some way, but only a single nvim_echo. Imho moving complexity from the N locations to the single location is worthwhile.\r\n\r\nThis can be extended in future without breakage and vim.progress I believe is still on table if a convenient wrapper is necessary. Also, plugins aren't all using a vscode compatible system, particularly in neovim ecosystem right?\r\n\r\n> LSP uses these structures:\r\nhttps://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workDoneProgressBegin\r\nDAP these:\r\nhttps://microsoft.github.io/debug-adapter-protocol/specification#Events_ProgressStart\r\n\r\nThe fields in those [title, msg, percent] are already available through progress-api here. Cancelation needs some setup though. Lsp and dap systems should be able to just use those. And more likely they will get supported by UI and plugins then a generic data field unless I'm missing something.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-22T16:34:32Z",
            "diff_hunk": "@@ -909,4 +928,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|\n+used to report the state of long-running tasks.\n+\n+Progress messages are created or updated using |nvim_echo()| with `kind='progress'`\n+and the related options. Each message has a unique `msg_id`. A subsequent\n+message with the same `msg_id` replaces the older one.\n+\n+Listeners: ~\n+    • msg_show |ui-messages| event is fired for ext-ui upon creation/update of a\n+    progress-message\n+    • Updating or creating a progress message also triggers the |Progress| autocommand.\n+\n+Example: >\n+    local id = vim.api.nvim_echo({{'searching...'}}, true,\n+          {kind='progress', status='running', percent=10, title=\"term\"})\n+    vim.api.nvim_echo({{'searching'}}, true,\n+          {id=id, kind='progress', status='running', percent=50, title=\"term\"})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2294181667",
            "id": 2294181667,
            "in_reply_to_id": 2293223061,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Ivm8j",
            "original_commit_id": "d3b7cb60507d0a9bb6aef8578496c0a13f034dd9",
            "original_line": 954,
            "original_position": 65,
            "original_start_line": 947,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3145131097,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2294181667/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-22T16:34:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2294181667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2294405927"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2294405927"
                }
            },
            "author_association": "MEMBER",
            "body": "> The fields in those [title, msg, percent] are already available through progress-api here. Cancelation needs some setup though. Lsp and dap systems should be able to just use those. And more likely they will get supported by UI and plugins then a generic data field unless I'm missing something.\r\n\r\nIt's less about nvim core doing something specific with those fields, but rather about the `Progress` autocmd routing through the values so that you can decouple providing the data (LSP client  in core, nvim-dap, etc..) from plugins which consume the data and display it.\r\n\r\n>  Also, plugins aren't all using a vscode compatible system, particularly in neovim ecosystem right?\r\n\r\nThis isn't so much about vscode as it is about having two concrete examples that are a superset of what the nvim progress message would support. One of which is already implemented in core.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-22T18:32:39Z",
            "diff_hunk": "@@ -909,4 +928,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|\n+used to report the state of long-running tasks.\n+\n+Progress messages are created or updated using |nvim_echo()| with `kind='progress'`\n+and the related options. Each message has a unique `msg_id`. A subsequent\n+message with the same `msg_id` replaces the older one.\n+\n+Listeners: ~\n+    • msg_show |ui-messages| event is fired for ext-ui upon creation/update of a\n+    progress-message\n+    • Updating or creating a progress message also triggers the |Progress| autocommand.\n+\n+Example: >\n+    local id = vim.api.nvim_echo({{'searching...'}}, true,\n+          {kind='progress', status='running', percent=10, title=\"term\"})\n+    vim.api.nvim_echo({{'searching'}}, true,\n+          {id=id, kind='progress', status='running', percent=50, title=\"term\"})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2294405927",
            "id": 2294405927,
            "in_reply_to_id": 2293223061,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Iwdsn",
            "original_commit_id": "d3b7cb60507d0a9bb6aef8578496c0a13f034dd9",
            "original_line": 954,
            "original_position": 65,
            "original_start_line": 947,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3145461251,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2294405927/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-22T18:34:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2294405927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2295094905"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295094905"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@echasnovski man kind=progress was not a thing before this pr. Using undocumented message kinds in core feels odd. I was totally confused why a random pack test is failing out of nowhere :]",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T04:21:43Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2295094905",
            "id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IzF55",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3146832160,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295094905/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T04:21:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295094905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2295233513"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295233513"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n///          - title: The title for |progress-message|.\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T06:02:57Z",
            "diff_hunk": "@@ -758,12 +758,29 @@ void nvim_set_vvar(String name, Object value, Error *err)\n ///               the (optional) name or ID `hl_group`.\n /// @param history  if true, add to |message-history|.\n /// @param opts  Optional parameters.\n+///          - id: message id for updating existing message.\n ///          - err: Treat the message like `:echoerr`. Sets `hl_group` to |hl-ErrorMsg| by default.\n ///          - kind: Set the |ui-messages| kind with which this message will be emitted.\n ///          - verbose: Message is controlled by the 'verbose' option. Nvim invoked with `-V3log`\n ///            will write the message to the \"log\" file instead of standard output.\n-void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(echo_opts) *opts,\n-               Error *err)\n+///          - title: The title for {progress-message|.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2295233513",
            "id": 2295233513,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Iznvp",
            "original_commit_id": "932beb81d3fad96f18dc37775ce04ebba771b1eb",
            "original_line": 766,
            "original_position": 11,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3147032547,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295233513/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T06:02:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295233513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2295274367"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295274367"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger this should allow you to pass in arbitary info like lspname/id etc etc... This was the use case, right? \r\n\r\nAlso, I'm wondering if we should allow something like this in all kinds of messages. Kind can be set to any arbitrary value. If we let arbitrary info be passed. ext-ui and plugins can add support for out-of-spec communication if they need to. ¯\\_(ツ)_/¯ .\r\n\r\nAbout ID we use numbers as ID almost everywhere, right? I think message-api should stick to that. Even if I allow user-set id it won't fix the usecase where the lsp spec allows uuids. And allowing custom numbers has higher risk of conflict. I think mapping in the interface layer wouldn't be too hard. In LSP we are already keeping track of titles for progress events.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T06:25:45Z",
            "diff_hunk": "@@ -678,6 +678,7 @@ nvim_echo({chunks}, {history}, {opts})                           *nvim_echo()*\n                        by listening for the `Progress` event\n                    • percent: How much progress is done on the progress\n                      message\n+                   • extra_info: dictionary containing additional information",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2295274367",
            "id": 2295274367,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Izxt_",
            "original_commit_id": "5ad245ef3212fd6ff2fa3cf1b1ac9a195de1152c",
            "original_line": 681,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": 1,
            "pull_request_review_id": 3147087521,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295274367/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T06:25:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295274367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2295447154"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295447154"
                }
            },
            "author_association": "MEMBER",
            "body": "Any `kind` is allowed in `nvim_echo`; at least it is not an error and not explicitly prohibited.\r\n\r\nAlso, here is the relevant part of the help:\r\n\r\n```\r\nNew kinds may be added in the future; clients should treat unknown kinds as the empty kind.\r\n```\r\n\r\n---\r\n\r\nIf it is indeed causing you troubles, I am sorry, this wasn't an intention. For now please either remove `kind = 'progress'` at all or adjust the progress report fully. For example, its status is not always `'running'` and there is a dedicated `title` instead of `'vim.pack'`.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T07:41:44Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2295447154",
            "id": 2295447154,
            "in_reply_to_id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I0b5y",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3147337771,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295447154/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T07:41:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295447154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2295453707"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295453707"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Any kind is allowed in nvim_echo; at least it is not an error and not explicitly prohibited.\r\n\r\nYeah I know. but if we are useing it in core then it's better if add the kind first right.\r\n\r\n> If it is indeed causing you troubles, I am sorry, this wasn't an intention.\r\n\r\nNo problem, man.  For now please either remove kind = 'progress' at all or adjust the progress report fully. For example, its status is not always 'running' and there is a dedicated title instead of 'vim.pack'.  I was mentioning you because I'm familier with vim.pack side of code so not sure if this is what the values should be. I guess I'll remove the kind=progress from this. after this api get's finalized then vim.pack can be updated\r\n",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T07:48:42Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2295453707",
            "id": 2295453707,
            "in_reply_to_id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I0dgL",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3147347929,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295453707/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T07:48:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295453707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2295454589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295454589"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "What should the status be? Also, a system for updating trough id will have to be added I guess.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T07:51:07Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2295454589",
            "id": 2295454589,
            "in_reply_to_id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I0dt9",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3147349293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295454589/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T07:51:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295454589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2295498520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295498520"
                }
            },
            "author_association": "MEMBER",
            "body": "> I guess I'll remove the kind=progress from this. after this api get's finalized then vim.pack can be updated\r\n\r\nYeah, let's do that for now. I'll update it myself later after the PR. Sorry for the troubles.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T08:42:26Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2295498520",
            "id": 2295498520,
            "in_reply_to_id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I0ocY",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3147403575,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295498520/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T08:42:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2295498520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2296176366"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296176366"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "No issues. Do let me know what you think about current interface of the progress-api. If something is missing or can be improved for your usecase. ",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T16:05:44Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2296176366",
            "id": 2296176366,
            "in_reply_to_id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I3N7u",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3148365499,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296176366/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T16:05:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296176366",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2296237729"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296237729"
                }
            },
            "author_association": "MEMBER",
            "body": "It will probably do just fine as is now.\r\n\r\nAllowing something like `percent` to be top-level data field for a general messages might indicate not the best abstractions, but I can't suggest anything marginally better.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T17:32:23Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2296237729",
            "id": 2296237729,
            "in_reply_to_id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I3c6h",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3148604903,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296237729/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T17:32:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296237729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2296239382"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296239382"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It's not for general messages. Uses of the special progress field is restricted to kind-progress.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T17:39:07Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2296239382",
            "id": 2296239382,
            "in_reply_to_id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I3dUW",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3148610917,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296239382/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T17:39:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296239382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2296240201"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296240201"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, what I meant is that it is like `{ kind = 'progress', percent = 50 }` and not something more narrower to progress messages themsevles. As I said, this is mostly a feeling without any constructive feedback.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-23T17:42:18Z",
            "diff_hunk": "@@ -383,7 +383,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, { kind = 'progress', status = 'running', percent = percent, title = 'vim.pack' })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2296240201",
            "id": 2296240201,
            "in_reply_to_id": 2295094905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I3dhJ",
            "original_commit_id": "892a3967301b547b24a93fb3e7bfd2351b44529b",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3148612000,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296240201/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-23T17:42:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296240201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2296851175"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296851175"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\t\t\"progress\"\tProgress message emitted by |nvim_echo()|\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-24T23:27:18Z",
            "diff_hunk": "@@ -846,6 +846,7 @@ must handle.\n \t\t\"lua_error\"\tError in |:lua| code\n \t\t\"lua_print\"\t|print()| from |:lua| code\n \t\t\"rpc_error\"\tError response from |rpcrequest()|\n+\t\t\"progress\"\tProgress message emitted by `nvim_echo`",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2296851175",
            "id": 2296851175,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I5yrn",
            "original_commit_id": "78fa8da31daf0b5d6000933d68d02e7d89588371",
            "original_line": 849,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3149547958,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296851175/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-24T23:27:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296851175",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2296851631"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296851631"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• Creating or updating a progress message with |nvim_echo()| triggers a |Progress| event.\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-24T23:28:57Z",
            "diff_hunk": "@@ -189,6 +190,9 @@ EVENTS\n \n • |CmdlineLeavePre| triggered before preparing to leave the command line.\n • New `append` paremeter for |ui-messages| `msg_show` event.\n+• New `msg_id` and `progress` paremeter for |ui-messages| `msg_show` event.\n+• Creating or updating a progress message with `nvim_echo` triggers a |Progress| event.\n+",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2296851631",
            "id": 2296851631,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I5yyv",
            "original_commit_id": "78fa8da31daf0b5d6000933d68d02e7d89588371",
            "original_line": 195,
            "original_position": 18,
            "original_start_line": 194,
            "path": "runtime/doc/news.txt",
            "position": 1,
            "pull_request_review_id": 3149548549,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296851631/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-24T23:28:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296851631",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2296875789"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296875789"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T00:33:00Z",
            "diff_hunk": "@@ -189,6 +190,9 @@ EVENTS\n \n • |CmdlineLeavePre| triggered before preparing to leave the command line.\n • New `append` paremeter for |ui-messages| `msg_show` event.\n+• New `msg_id` and `progress` paremeter for |ui-messages| `msg_show` event.\n+• Creating or updating a progress message with |nvim_echo| triggers a |Progress| event.\n+",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2296875789",
            "id": 2296875789,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I54sN",
            "original_commit_id": "dfa634e2853a9348844076fb5b7ba5840f909043",
            "original_line": 195,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 1,
            "pull_request_review_id": 3149577387,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296875789/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T00:33:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2296875789",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297095592"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297095592"
                }
            },
            "author_association": "MEMBER",
            "body": "this list is almost sorted, can you move this up 1 line so that the list stays almost-sorted :)",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T04:34:32Z",
            "diff_hunk": "@@ -846,6 +846,7 @@ must handle.\n \t\t\"lua_error\"\tError in |:lua| code\n \t\t\"lua_print\"\t|print()| from |:lua| code\n \t\t\"rpc_error\"\tError response from |rpcrequest()|\n+\t\t\"progress\"\tProgress message emitted by |nvim_echo()|",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297095592",
            "id": 2297095592,
            "line": 848,
            "node_id": "PRRC_kwDOAPphoM6I6uWo",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 849,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 13,
            "pull_request_review_id": 3149879056,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297095592/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T04:34:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297095592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297098205"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297098205"
                }
            },
            "author_association": "MEMBER",
            "body": "unnecessary preamble\r\n```suggestion\r\n\t    Progress-message properties:\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T04:37:30Z",
            "diff_hunk": "@@ -881,6 +882,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id\n+\t    appears it should replace the older message.\n+\n+\tprogress\n+\t    Placeholder for special items for special messages. Currently, used\n+\t    for progress-messages. Can contain following for progress-message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297098205",
            "id": 2297098205,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6u_d",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 892,
            "original_position": 28,
            "original_start_line": 891,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3149882344,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297098205/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T04:37:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297098205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297103652"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297103652"
                }
            },
            "author_association": "MEMBER",
            "body": "ui event param names because they are not permanent (they are ordered args, not named). they are not a great source of best practices.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T04:43:54Z",
            "diff_hunk": "@@ -787,6 +787,32 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress-msg is message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The data item in autocmd\n+\t\t\t\tcallback contains following\n+\t\t\t\t\tmsg_id: id of the message\n+\t\t\t\t\tmessage: text of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297103652",
            "id": 2297103652,
            "in_reply_to_id": 2283998553,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6wUk",
            "original_commit_id": "1c6651776f02a5d145affb38b3e9ca6675e9a82c",
            "original_line": 796,
            "original_position": 10,
            "original_start_line": 795,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3149889926,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297103652/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T04:43:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297103652",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297110584"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297110584"
                }
            },
            "author_association": "MEMBER",
            "body": "we always call this `data`. \r\n\r\n```suggestion\r\n///          - data: dictionary containing additional information\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T04:51:50Z",
            "diff_hunk": "@@ -758,12 +758,30 @@ void nvim_set_vvar(String name, Object value, Error *err)\n ///               the (optional) name or ID `hl_group`.\n /// @param history  if true, add to |message-history|.\n /// @param opts  Optional parameters.\n+///          - id: message id for updating existing message.\n ///          - err: Treat the message like `:echoerr`. Sets `hl_group` to |hl-ErrorMsg| by default.\n ///          - kind: Set the |ui-messages| kind with which this message will be emitted.\n ///          - verbose: Message is controlled by the 'verbose' option. Nvim invoked with `-V3log`\n ///            will write the message to the \"log\" file instead of standard output.\n-void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(echo_opts) *opts,\n-               Error *err)\n+///          - title: The title for |progress-message|.\n+///          - status: Current status of the |progress-message|. Can be\n+///            one of the following values\n+///            - success: The progress item completed successfully\n+///            - running: The progress is ongoing\n+///            - failed: The progress item failed\n+///            - cancel: The progressing process should be canceled.\n+///                      note: Cancel needs to be handled by progress\n+///                      initiator by listening for the `Progress` event\n+///          - percent: How much progress is done on the progress\n+///            message\n+///          - extra_info: dictionary containing additional information",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297110584",
            "id": 2297110584,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6yA4",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 777,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3149899646,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297110584/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T04:51:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297110584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297111431"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297111431"
                }
            },
            "author_association": "MEMBER",
            "body": "this could be used for non-progress \"notification\" messages in the future. no change needed now, just mentioning.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T04:52:50Z",
            "diff_hunk": "@@ -758,12 +758,30 @@ void nvim_set_vvar(String name, Object value, Error *err)\n ///               the (optional) name or ID `hl_group`.\n /// @param history  if true, add to |message-history|.\n /// @param opts  Optional parameters.\n+///          - id: message id for updating existing message.\n ///          - err: Treat the message like `:echoerr`. Sets `hl_group` to |hl-ErrorMsg| by default.\n ///          - kind: Set the |ui-messages| kind with which this message will be emitted.\n ///          - verbose: Message is controlled by the 'verbose' option. Nvim invoked with `-V3log`\n ///            will write the message to the \"log\" file instead of standard output.\n-void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(echo_opts) *opts,\n-               Error *err)\n+///          - title: The title for |progress-message|.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297111431",
            "id": 2297111431,
            "line": 766,
            "node_id": "PRRC_kwDOAPphoM6I6yOH",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 766,
            "original_position": 11,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 11,
            "pull_request_review_id": 3149900853,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297111431/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T04:53:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297111431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297115087"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297115087"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n/// @return Message id.\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T04:56:49Z",
            "diff_hunk": "@@ -758,12 +758,30 @@ void nvim_set_vvar(String name, Object value, Error *err)\n ///               the (optional) name or ID `hl_group`.\n /// @param history  if true, add to |message-history|.\n /// @param opts  Optional parameters.\n+///          - id: message id for updating existing message.\n ///          - err: Treat the message like `:echoerr`. Sets `hl_group` to |hl-ErrorMsg| by default.\n ///          - kind: Set the |ui-messages| kind with which this message will be emitted.\n ///          - verbose: Message is controlled by the 'verbose' option. Nvim invoked with `-V3log`\n ///            will write the message to the \"log\" file instead of standard output.\n-void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(echo_opts) *opts,\n-               Error *err)\n+///          - title: The title for |progress-message|.\n+///          - status: Current status of the |progress-message|. Can be\n+///            one of the following values\n+///            - success: The progress item completed successfully\n+///            - running: The progress is ongoing\n+///            - failed: The progress item failed\n+///            - cancel: The progressing process should be canceled.\n+///                      note: Cancel needs to be handled by progress\n+///                      initiator by listening for the `Progress` event\n+///          - percent: How much progress is done on the progress\n+///            message\n+///          - extra_info: dictionary containing additional information\n+/// @return The msg-id of the message.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297115087",
            "id": 2297115087,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6zHP",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 778,
            "original_position": 23,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3149906182,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297115087/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T04:56:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297115087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297117809"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297117809"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  bool is_progress = strequal(kind, \"progress\");\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T04:59:40Z",
            "diff_hunk": "@@ -778,7 +796,38 @@ void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(\n     kind = opts->err ? \"echoerr\" : history ? \"echomsg\" : \"echo\";\n   }\n \n-  msg_multihl(hl_msg, kind, history, opts->err);\n+  bool is_kind_progress = strequal(kind, \"progress\");",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297117809",
            "id": 2297117809,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6zxx",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 799,
            "original_position": 38,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3149910065,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297117809/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T04:59:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297117809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297120378"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297120378"
                }
            },
            "author_association": "MEMBER",
            "body": "please look at the various VALIDATE_XX macros and use the appropriate ones, rather than just `VALIDATE` for everything. for example, it looks like this case would fit `VALIDATE_RANGE`. \r\n\r\nthis results in more consistent error messages.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:02:35Z",
            "diff_hunk": "@@ -778,7 +796,38 @@ void nvim_echo(ArrayOf(Tuple(String, *HLGroupID)) chunks, Boolean history, Dict(\n     kind = opts->err ? \"echoerr\" : history ? \"echomsg\" : \"echo\";\n   }\n \n-  msg_multihl(hl_msg, kind, history, opts->err);\n+  bool is_kind_progress = strequal(kind, \"progress\");\n+\n+  VALIDATE(is_kind_progress\n+           || (opts->status.size == 0 && opts->title.size == 0 && opts->percent == 0\n+               && opts->extra_info.size == 0),\n+           \"%s\",\n+           \"title, status, percents and extra_info fields can only be used with progress messages\",\n+  {\n+    goto error;\n+  });\n+\n+  VALIDATE(!is_kind_progress || strequal(opts->status.data, \"success\")\n+           || strequal(opts->status.data, \"failed\")\n+           || strequal(opts->status.data, \"running\")\n+           || strequal(opts->status.data, \"cancel\"),\n+           \"invalid message status: %s\", opts->status.data, {\n+    goto error;\n+  });\n+\n+  VALIDATE(!is_kind_progress || (opts->percent >= 0 && opts->percent <= 100),\n+           \"progress percent out of bounds: %ld\", (long)opts->percent, {",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297120378",
            "id": 2297120378,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I60Z6",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 819,
            "original_position": 58,
            "original_start_line": 818,
            "path": "src/nvim/api/vim.c",
            "position": 1,
            "pull_request_review_id": 3149913938,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297120378/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T05:02:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297120378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297122082"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297122082"
                }
            },
            "author_association": "MEMBER",
            "body": "move `msg_ext_id` next to this (and rename it to `msg_id` ? not really sure how it's related to `ext_messages`). \r\n",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:04:29Z",
            "diff_hunk": "@@ -158,6 +161,8 @@ static bool msg_ext_history = false;  ///< message was added to history\n \n static int msg_grid_pos_at_flush = 0;\n \n+static MsgID msg_id_next = 1;           ///< message id to be allocated to next message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297122082",
            "id": 2297122082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I600i",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 164,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3149916368,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297122082/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:05:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297122082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297124682"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297124682"
                }
            },
            "author_association": "MEMBER",
            "body": "it's not related to \"ext\". it's just messages. also not sure why we are flip-flopping between \"Message\" and \"Msg\". Let's just stick with Msg, even though some old names use \"Message\".\r\n\r\n```suggestion\r\n} MsgData;\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:07:23Z",
            "diff_hunk": "@@ -10,14 +10,25 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef int64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"\n+\n+typedef struct msg_ext_data {\n+  Integer percent;        ///< Progress percentage\n+  String title;           ///< Title for progress message\n+  String status;          ///< Status for progress message\n+  DictOf(String, Object) extra_info;  ///< Extra info for 'echo' messages\n+} MessageExtData;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297124682",
            "id": 2297124682,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I61dK",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 22,
            "original_position": 13,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 3149920082,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297124682/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:07:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297124682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297125434"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297125434"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  DictOf(String, Object) data;  ///< User data given to nvim_echo.\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:08:09Z",
            "diff_hunk": "@@ -10,14 +10,25 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef int64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"\n+\n+typedef struct msg_ext_data {\n+  Integer percent;        ///< Progress percentage\n+  String title;           ///< Title for progress message\n+  String status;          ///< Status for progress message\n+  DictOf(String, Object) extra_info;  ///< Extra info for 'echo' messages",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297125434",
            "id": 2297125434,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I61o6",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 21,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 3149921112,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297125434/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:08:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297125434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297126663"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297126663"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  MsgID msg_id;           ///< Message id.\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:09:33Z",
            "diff_hunk": "@@ -10,14 +10,25 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef int64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"\n+\n+typedef struct msg_ext_data {\n+  Integer percent;        ///< Progress percentage\n+  String title;           ///< Title for progress message\n+  String status;          ///< Status for progress message\n+  DictOf(String, Object) extra_info;  ///< Extra info for 'echo' messages\n+} MessageExtData;\n /// Message history for `:messages`\n typedef struct msg_hist {\n+  MsgID msg_id;           ///< Indentifier of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297126663",
            "id": 2297126663,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I618H",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 25,
            "original_position": 16,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 3149923061,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297126663/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:09:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297126663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297128308"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297128308"
                }
            },
            "author_association": "MEMBER",
            "body": "\"ext\" refers to the ui protocol\r\n\r\n```suggestion\r\n  MessageExtData msg_data;  ///< Progress-message data + user-defined data.\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:11:13Z",
            "diff_hunk": "@@ -10,14 +10,25 @@ typedef struct {\n } HlMessageChunk;\n \n typedef kvec_t(HlMessageChunk) HlMessage;\n+typedef int64_t MsgID;\n \n+#define MSG_KIND_PROGRESS \"progress\"\n+\n+typedef struct msg_ext_data {\n+  Integer percent;        ///< Progress percentage\n+  String title;           ///< Title for progress message\n+  String status;          ///< Status for progress message\n+  DictOf(String, Object) extra_info;  ///< Extra info for 'echo' messages\n+} MessageExtData;\n /// Message history for `:messages`\n typedef struct msg_hist {\n+  MsgID msg_id;           ///< Indentifier of the message\n   struct msg_hist *next;  ///< Next message.\n   struct msg_hist *prev;  ///< Previous message.\n   HlMessage msg;          ///< Highlighted message.\n   const char *kind;       ///< Message kind (for msg_ext)\n   bool temp;              ///< Temporary message since last command (\"g<\")\n   bool append;            ///< Message should be appended to previous entry, as opposed\n                           ///< to on a new line (|ui-messages|->msg_show->append).\n+  MessageExtData ext_data;  ///< Additional data for special messages",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297128308",
            "id": 2297128308,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I62V0",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 33,
            "original_position": 24,
            "original_start_line": null,
            "path": "src/nvim/message_defs.h",
            "position": 1,
            "pull_request_review_id": 3149925474,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297128308/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:11:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297128308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297130136"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297130136"
                }
            },
            "author_association": "MEMBER",
            "body": "does it need a `-- TODO` comment ?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:12:57Z",
            "diff_hunk": "@@ -395,7 +395,7 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    vim.api.nvim_echo(chunks, true, {})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297130136",
            "id": 2297130136,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I62yY",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 398,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3149927969,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297130136/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:12:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297130136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297130416"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297130416"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  DictOf(Object) data;\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:13:16Z",
            "diff_hunk": "@@ -336,6 +336,11 @@ typedef struct {\n   Boolean err;\n   Boolean verbose;\n   String kind;\n+  Integer id;\n+  String title;\n+  String status;\n+  Integer percent;\n+  DictOf(Object) extra_info;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297130416",
            "id": 2297130416,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I622w",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 343,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/api/keysets_defs.h",
            "position": 1,
            "pull_request_review_id": 3149928513,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297130416/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:13:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297130416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297131237"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297131237"
                }
            },
            "author_association": "MEMBER",
            "body": "remove \"ext\" from these things.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:14:04Z",
            "diff_hunk": "@@ -149,6 +150,8 @@ bool keep_msg_more = false;    // keep_msg was set by msgmore()\n \n // Extended msg state, currently used for external UIs with ext_messages\n static const char *msg_ext_kind = NULL;\n+static MsgID msg_ext_id = 0;\n+static DictOf(Object) msg_ext_progress = ARRAY_DICT_INIT;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297131237",
            "id": 2297131237,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I63Dl",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 154,
            "original_position": 13,
            "original_start_line": 153,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3149929630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297131237/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T05:15:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297131237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297133877"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297133877"
                }
            },
            "author_association": "MEMBER",
            "body": "> if we should allow something like this in all kinds of messages. Kind can be set to any arbitrary value. If we let arbitrary info be passed. ext-ui and plugins can add support for out-of-spec communication if they need to. ¯_(ツ)_/¯ .\r\n\r\nyes, anything that applies to all messages should not be restricted to progress messages. (if that requires extra work, please create a tracking issue)\r\n\r\nalso it's somewhat of a stability risk: a plugin could (accidentally) store a gigantic object on the message? need a tracking issue for that too.\r\n",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:16:37Z",
            "diff_hunk": "@@ -678,6 +678,7 @@ nvim_echo({chunks}, {history}, {opts})                           *nvim_echo()*\n                        by listening for the `Progress` event\n                    • percent: How much progress is done on the progress\n                      message\n+                   • extra_info: dictionary containing additional information",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297133877",
            "id": 2297133877,
            "in_reply_to_id": 2295274367,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I63s1",
            "original_commit_id": "5ad245ef3212fd6ff2fa3cf1b1ac9a195de1152c",
            "original_line": 681,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": 1,
            "pull_request_review_id": 3149933264,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297133877/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:16:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297133877",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297140669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297140669"
                }
            },
            "author_association": "MEMBER",
            "body": "this is already in a describe() block, dont repeat the describe() name in it()\r\n\r\n```suggestion\r\n  it('can be sent by nvim_echo', function()\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:22:27Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can send progress-message through nvim-echo', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297140669",
            "id": 2297140669,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I65W9",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3186,
            "original_position": 49,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3149944043,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297140669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:23:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297140669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297145773"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297145773"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  it('user-defined data in `data` field', function()\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:26:52Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can send progress-message through nvim-echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- throws error if history is false\n+    eq(\n+      'progress messages must be on history',\n+      t.pcall_err(\n+        api.nvim_echo,\n+        { { 'test-message' } },\n+        false,\n+        { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+      )\n+    )\n+  end)\n+\n+  it('can send arbitrary data through extra_info', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297145773",
            "id": 2297145773,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I66mt",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3292,
            "original_position": 155,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3149952892,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297145773/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:26:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297145773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297146964"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297146964"
                }
            },
            "author_association": "MEMBER",
            "body": "`before_each` already does clear(). oh, you want to override the `setup_screen(true)` ... the `before_each` is not gaining anything",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:27:57Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can send progress-message through nvim-echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- throws error if history is false\n+    eq(\n+      'progress messages must be on history',\n+      t.pcall_err(\n+        api.nvim_echo,\n+        { { 'test-message' } },\n+        false,\n+        { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+      )\n+    )\n+  end)\n+\n+  it('can send arbitrary data through extra_info', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      extra_info = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            extra_info = {\n+              test_attribute = 1,\n+            },\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('tui displays progress message in proper format', function()\n+    clear()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297146964",
            "id": 2297146964,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I665U",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3334,
            "original_position": 197,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3149954787,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297146964/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:28:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297146964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297149427"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297149427"
                }
            },
            "author_association": "MEMBER",
            "body": "would be good to test an actual `percent` update sequence. (unless that was removed based on our discussion about simplifying the TUI impl)",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:29:27Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can send progress-message through nvim-echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- throws error if history is false\n+    eq(\n+      'progress messages must be on history',\n+      t.pcall_err(\n+        api.nvim_echo,\n+        { { 'test-message' } },\n+        false,\n+        { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+      )\n+    )\n+  end)\n+\n+  it('can send arbitrary data through extra_info', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      extra_info = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            extra_info = {\n+              test_attribute = 1,\n+            },\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('tui displays progress message in proper format', function()\n+    clear()\n+    setup_screen(false)\n+    api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+    screen:expect([[\n+      ^                                        |\n+      {1:~                                       }|*3\n+      test-message                            |",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297149427",
            "id": 2297149427,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I67fz",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3344,
            "original_position": 207,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3149958566,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297149427/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:29:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297149427",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297156218"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297156218"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  bool is_progress = strequal(msg_ext_kind, MSG_KIND_PROGRESS);\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:32:15Z",
            "diff_hunk": "@@ -1032,16 +1078,53 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return -1;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool is_kind_progress = strequal(msg_ext_kind, MSG_KIND_PROGRESS);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297156218",
            "id": 2297156218,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I69J6",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 1084,
            "original_position": 133,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3149967313,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297156218/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:32:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297156218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297158721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297158721"
                }
            },
            "author_association": "MEMBER",
            "body": "this is the C codebase convention, AFAICT. (the `_event` suffix is for the event-loop, something totally different)\r\n```suggestion\r\nstatic void do_autocmd_progress(MessageHistoryEntry *msg)\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:34:39Z",
            "diff_hunk": "@@ -1012,18 +1020,56 @@ static void msg_hist_add(const char *s, int len, int hl_id)\n     text.size--;\n   }\n   if (text.size == 0) {\n-    return;\n+    return -1;\n   }\n   text.data = xmemdupz(s, text.size);\n \n   HlMessage msg = KV_INITIAL_VALUE;\n   kv_push(msg, ((HlMessageChunk){ text, hl_id }));\n-  msg_hist_add_multihl(msg, false);\n+  MsgID id = msg_hist_add_multihl(0, msg, false, NULL);\n+  return id;\n }\n \n static bool do_clear_hist_temp = true;\n \n-static void msg_hist_add_multihl(HlMessage msg, bool temp)\n+/// returns message history item based on it's id or NULL if not found\n+static MessageHistoryEntry *msg_find_by_id(MsgID id)\n+{\n+  if (id <= 0) {\n+    return NULL;\n+  }\n+  MessageHistoryEntry *entry = msg_hist_last;\n+  while (entry != NULL && entry->msg_id != id) {\n+    entry = entry->prev;\n+  }\n+  return entry;\n+}\n+\n+static void emit_progress_event(MessageHistoryEntry *msg)",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297158721",
            "id": 2297158721,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I69xB",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 1048,
            "original_position": 95,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3149971195,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297158721/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:34:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297158721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297159600"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297159600"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  bool old_msg_found = false;\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:35:29Z",
            "diff_hunk": "@@ -1032,16 +1078,53 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return -1;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool is_kind_progress = strequal(msg_ext_kind, MSG_KIND_PROGRESS);\n+  bool old_message_found = false;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297159600",
            "id": 2297159600,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I69-w",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 1085,
            "original_position": 134,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3149972614,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297159600/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:35:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297159600",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297161264"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297161264"
                }
            },
            "author_association": "MEMBER",
            "body": "are these codepaths definitely getting exercised by tests ?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:37:09Z",
            "diff_hunk": "@@ -1032,16 +1078,53 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return -1;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool is_kind_progress = strequal(msg_ext_kind, MSG_KIND_PROGRESS);\n+  bool old_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    old_message_found = true;\n+    // detach the node if found\n+    if (entry->prev) {\n+      entry->prev->next = entry->next;\n+    } else {\n+      msg_hist_first = entry->next;\n+    }\n+    if (entry->next) {\n+      entry->next->prev = entry->prev;\n+    } else {\n+      msg_hist_last = entry->prev;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297161264",
            "id": 2297161264,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6-Yw",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 1099,
            "original_position": 148,
            "original_start_line": 1092,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3149975234,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297161264/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T05:37:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297161264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297166874"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297166874"
                }
            },
            "author_association": "MEMBER",
            "body": "This help file is for the UI protocol. Progress messages are not specific to the UI protocol (though they happen to emit UI events, just like any other regular message).\r\n\r\nAdd this as section \"4.\" after this: https://github.com/neovim/neovim/blob/58060c2340a52377a0e1d2b782ce1deef13b2b9b/runtime/doc/message.txt#L754-L755",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:42:17Z",
            "diff_hunk": "@@ -913,4 +932,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297166874",
            "id": 2297166874,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6_wa",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 936,
            "original_position": 47,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3149983887,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297166874/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:42:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297166874",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297168112"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297168112"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nNvim can emit progress-message, which are a special kind of |ui-messages|\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:43:10Z",
            "diff_hunk": "@@ -913,4 +932,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297168112",
            "id": 2297168112,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7ADw",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 938,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3149986780,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297168112/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:43:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297168112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297170493"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297170493"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nEvents: ~\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:45:04Z",
            "diff_hunk": "@@ -913,4 +932,29 @@ must handle.\n \tprev_cmd\n \t    True when sent with |g<| command, false with |:messages|.\n \n+==============================================================================\n+PROGRESS MESSAGE                                    *progress-message*\n+\n+Nvim can emit *progress-message*, which are a special kind of |ui-messages|\n+used to report the state of long-running tasks.\n+\n+Progress messages are created or updated using |nvim_echo()| with `kind='progress'`\n+and the related options. Each message has a unique `msg_id`. A subsequent\n+message with the same `msg_id` replaces the older one.\n+\n+Listeners: ~",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297170493",
            "id": 2297170493,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7Ao9",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 945,
            "original_position": 56,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3149991803,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297170493/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297170493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297176020"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297176020"
                }
            },
            "author_association": "MEMBER",
            "body": "add a `it('validates')` block that tests all/most of the errors https://github.com/neovim/neovim/blob/58060c2340a52377a0e1d2b782ce1deef13b2b9b/test/functional/lua/vim_spec.lua#L2921-L2925",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:49:03Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297176020",
            "id": 2297176020,
            "line": 3142,
            "node_id": "PRRC_kwDOAPphoM6I7B_U",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3142,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 5,
            "pull_request_review_id": 3150001157,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297176020/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:49:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297176020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297182504"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297182504"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\t\t\t\t\ttext: text of the message\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T05:53:42Z",
            "diff_hunk": "@@ -787,6 +787,31 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The |event-data| contains:\n+\t\t\t\t\tmsg_id: id of the message\n+\t\t\t\t\tcontent: text of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297182504",
            "id": 2297182504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7Dko",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 795,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3150011506,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297182504/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T05:53:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297182504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297194205"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297194205"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "msg_show ui+event already uses content for this.  Should we give a different name for the autocmd event?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:02:59Z",
            "diff_hunk": "@@ -787,6 +787,31 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The |event-data| contains:\n+\t\t\t\t\tmsg_id: id of the message\n+\t\t\t\t\tcontent: text of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297194205",
            "id": 2297194205,
            "in_reply_to_id": 2297182504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7Gbd",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 795,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3150032919,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297194205/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T06:02:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297194205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297197235"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297197235"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This was actually a question from the begining. Should we put the msg at end of history once it get's updated or leave it where it is and change the message? I'm kind of more inclined toward not moving the msg in history sequence. Which one would be better? ",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:05:14Z",
            "diff_hunk": "@@ -1032,16 +1078,53 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return -1;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool is_kind_progress = strequal(msg_ext_kind, MSG_KIND_PROGRESS);\n+  bool old_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    old_message_found = true;\n+    // detach the node if found\n+    if (entry->prev) {\n+      entry->prev->next = entry->next;\n+    } else {\n+      msg_hist_first = entry->next;\n+    }\n+    if (entry->next) {\n+      entry->next->prev = entry->prev;\n+    } else {\n+      msg_hist_last = entry->prev;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297197235",
            "id": 2297197235,
            "in_reply_to_id": 2297161264,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7HKz",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 1099,
            "original_position": 148,
            "original_start_line": 1092,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3150037938,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297197235/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T06:05:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297197235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297205107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297205107"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The events still get the percent updates. And they are being asserted in the test. It's just not yet shown in tui yet. Will need a followup to update to ext_ui2",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:11:02Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can send progress-message through nvim-echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- throws error if history is false\n+    eq(\n+      'progress messages must be on history',\n+      t.pcall_err(\n+        api.nvim_echo,\n+        { { 'test-message' } },\n+        false,\n+        { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+      )\n+    )\n+  end)\n+\n+  it('can send arbitrary data through extra_info', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      extra_info = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            extra_info = {\n+              test_attribute = 1,\n+            },\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('tui displays progress message in proper format', function()\n+    clear()\n+    setup_screen(false)\n+    api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+    screen:expect([[\n+      ^                                        |\n+      {1:~                                       }|*3\n+      test-message                            |",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297205107",
            "id": 2297205107,
            "in_reply_to_id": 2297149427,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7JFz",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3344,
            "original_position": 207,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3150050154,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297205107/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T06:11:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297205107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297209691"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297209691"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Other variables for msg_show are also named with ext. I thought it meant ext-ui. Should we not follow that scheme?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:14:16Z",
            "diff_hunk": "@@ -149,6 +150,8 @@ bool keep_msg_more = false;    // keep_msg was set by msgmore()\n \n // Extended msg state, currently used for external UIs with ext_messages\n static const char *msg_ext_kind = NULL;\n+static MsgID msg_ext_id = 0;\n+static DictOf(Object) msg_ext_progress = ARRAY_DICT_INIT;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297209691",
            "id": 2297209691,
            "in_reply_to_id": 2297131237,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7KNb",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 154,
            "original_position": 13,
            "original_start_line": 153,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3150058511,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297209691/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T06:14:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297209691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297217631"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297217631"
                }
            },
            "author_association": "MEMBER",
            "body": "yes. https://github.com/neovim/neovim/pull/34846#discussion_r2297103652",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:20:07Z",
            "diff_hunk": "@@ -787,6 +787,31 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The |event-data| contains:\n+\t\t\t\t\tmsg_id: id of the message\n+\t\t\t\t\tcontent: text of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297217631",
            "id": 2297217631,
            "in_reply_to_id": 2297182504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7MJf",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 795,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3150070345,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297217631/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T06:20:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297217631",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297219031"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297219031"
                }
            },
            "author_association": "MEMBER",
            "body": "if you think that should be revisited please create a tracking issue. the question for now is just \"are these lines getting exercised\"",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:21:08Z",
            "diff_hunk": "@@ -1032,16 +1078,53 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n \n   if (msg_hist_off || msg_silent != 0) {\n     hl_msg_free(msg);\n-    return;\n+    return -1;\n   }\n \n-  // Allocate an entry and add the message at the end of the history.\n-  MessageHistoryEntry *entry = xmalloc(sizeof(MessageHistoryEntry));\n+  bool is_kind_progress = strequal(msg_ext_kind, MSG_KIND_PROGRESS);\n+  bool old_message_found = false;\n+\n+  MessageHistoryEntry *entry = msg_find_by_id(msg_id);\n+  if (entry) {\n+    old_message_found = true;\n+    // detach the node if found\n+    if (entry->prev) {\n+      entry->prev->next = entry->next;\n+    } else {\n+      msg_hist_first = entry->next;\n+    }\n+    if (entry->next) {\n+      entry->next->prev = entry->prev;\n+    } else {\n+      msg_hist_last = entry->prev;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297219031",
            "id": 2297219031,
            "in_reply_to_id": 2297161264,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7MfX",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 1099,
            "original_position": 148,
            "original_start_line": 1092,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3150072353,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297219031/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T06:21:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297219031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297219613"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297219613"
                }
            },
            "author_association": "MEMBER",
            "body": "k please create a tracking issue",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:21:33Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can send progress-message through nvim-echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- throws error if history is false\n+    eq(\n+      'progress messages must be on history',\n+      t.pcall_err(\n+        api.nvim_echo,\n+        { { 'test-message' } },\n+        false,\n+        { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+      )\n+    )\n+  end)\n+\n+  it('can send arbitrary data through extra_info', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      extra_info = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            extra_info = {\n+              test_attribute = 1,\n+            },\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('tui displays progress message in proper format', function()\n+    clear()\n+    setup_screen(false)\n+    api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+    screen:expect([[\n+      ^                                        |\n+      {1:~                                       }|*3\n+      test-message                            |",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297219613",
            "id": 2297219613,
            "in_reply_to_id": 2297149427,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7Mod",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3344,
            "original_position": 207,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3150073193,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297219613/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T06:21:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297219613",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297220672"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297220672"
                }
            },
            "author_association": "MEMBER",
            "body": "can leave these for now but the field names in the struct definitely should drop \"ext\".",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:22:15Z",
            "diff_hunk": "@@ -149,6 +150,8 @@ bool keep_msg_more = false;    // keep_msg was set by msgmore()\n \n // Extended msg state, currently used for external UIs with ext_messages\n static const char *msg_ext_kind = NULL;\n+static MsgID msg_ext_id = 0;\n+static DictOf(Object) msg_ext_progress = ARRAY_DICT_INIT;",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297220672",
            "id": 2297220672,
            "in_reply_to_id": 2297131237,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7M5A",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 154,
            "original_position": 13,
            "original_start_line": 153,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3150074542,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297220672/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-25T06:22:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297220672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297256410"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297256410"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "msg_ext_id is basically msg-id of current message being shown (to be sent to ui) . the ext_ variables basically act as buckets for data to be sent to through msg_show. Echo places data in the variables then on other side when msg-show event is released it pickes data from here. They kind of holds the data and other piece of code flushes it once event is released.\r\n\r\nMsg_id_next is next unique-id for message. It get's increamented everytime a message in created and assigned an id. Because when msg gets updated id is reused msg-id-next and msg-ext-id aren't same",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:44:23Z",
            "diff_hunk": "@@ -158,6 +161,8 @@ static bool msg_ext_history = false;  ///< message was added to history\n \n static int msg_grid_pos_at_flush = 0;\n \n+static MsgID msg_id_next = 1;           ///< message id to be allocated to next message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297256410",
            "id": 2297256410,
            "in_reply_to_id": 2297122082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7Vna",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 164,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3150130230,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297256410/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T06:44:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297256410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297279805"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297279805"
                }
            },
            "author_association": "MEMBER",
            "body": "> msg_ext_id is basically msg-id of current message being shown (to be sent to ui)\r\n\r\nall messages should have IDs. that is not related to UI protocol nor `ext_messages`. it's just part of messages.\r\n\r\nthe use of `ext_` in some of these variable names I think is not totally coherent. for the message-id concept it definitely is unrelated.\r\n\r\n\r\n\r\n> to be sent to through msg_show\r\n\r\nmsg_show happens for all messages, by definition. it does not mean that everything message-related is somehow part of `ext_messages` / UI protocol.\r\n\r\nthe `ext_` stuff was specifically intended for things supporting the UI protocol (`ext_messages`).",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T06:58:16Z",
            "diff_hunk": "@@ -158,6 +161,8 @@ static bool msg_ext_history = false;  ///< message was added to history\n \n static int msg_grid_pos_at_flush = 0;\n \n+static MsgID msg_id_next = 1;           ///< message id to be allocated to next message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297279805",
            "id": 2297279805,
            "in_reply_to_id": 2297122082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I7bU9",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 164,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3150164292,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297279805/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T06:59:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297279805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297791361"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297791361"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Actually, this is not implemented yet. We removed the special formatting on tui. I'll remove the test.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T10:56:15Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can send progress-message through nvim-echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- throws error if history is false\n+    eq(\n+      'progress messages must be on history',\n+      t.pcall_err(\n+        api.nvim_echo,\n+        { { 'test-message' } },\n+        false,\n+        { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+      )\n+    )\n+  end)\n+\n+  it('can send arbitrary data through extra_info', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      extra_info = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            extra_info = {\n+              test_attribute = 1,\n+            },\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('tui displays progress message in proper format', function()\n+    clear()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297791361",
            "id": 2297791361,
            "in_reply_to_id": 2297146964,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I9YOB",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3334,
            "original_position": 197,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3150927189,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297791361/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T10:56:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297791361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297823609"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297823609"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think there has been a bit of confusion regarding this.\r\n\r\nmsg_ext_id is for msg_show ui-event and is part of the following group of variables\r\nhttps://github.com/neovim/neovim/blob/516363e6baa0329dac4b048526e3deadb0d580d0/src/nvim/message.c#L151-L155\r\n\r\nmsg_id_next is to track which next message-id we can give.\r\nThey are different things.\r\n\r\nThe `ext` on the structs and data was wrong. I was using ext as short for extra there. That was wrong. I've renamed those.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T11:11:18Z",
            "diff_hunk": "@@ -158,6 +161,8 @@ static bool msg_ext_history = false;  ///< message was added to history\n \n static int msg_grid_pos_at_flush = 0;\n \n+static MsgID msg_id_next = 1;           ///< message id to be allocated to next message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297823609",
            "id": 2297823609,
            "in_reply_to_id": 2297122082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I9gF5",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 164,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3150979556,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297823609/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T11:11:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297823609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297904480"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297904480"
                }
            },
            "author_association": "MEMBER",
            "body": "My point in https://github.com/neovim/neovim/pull/34846#discussion_r2195409882 was that this may not be worth the hassle, or even be unwanted. :messages showing the full history of how messages were manipulated seems more useful than actually manipulating that history. Only where the message is actually shown (the UI) does it need to be manipulated.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T11:55:50Z",
            "diff_hunk": "@@ -3416,4 +3416,38 @@ describe('progress-message', function()\n     )\n   end)\n \n+  it('gets moved to end of history upon update', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297904480",
            "id": 2297904480,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I9z1g",
            "original_commit_id": "3963f0d9ba91d5ffdf2ab997e4931c216d07bc36",
            "original_line": 3419,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3151107512,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297904480/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T11:55:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297904480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297943351"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297943351"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It's not much of a hassle tbh. Adding an entry for progress message may just become spammy in :messages. let's say I'm installing plugins. And the plugin manager provides progress-messages. There can easily be hundreds of almost similar messages in a short span. So keeping only one of the updated message in history makes sense to me. \r\n\r\nAlso, according to https://github.com/neovim/neovim/issues/32537#issuecomment-2672600804, updating the existing message was a requirement. We can discuss it further. And if this is deemed inconvinient, that bit can be reverted. I hope this is not a blocker for now.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T12:15:42Z",
            "diff_hunk": "@@ -3416,4 +3416,38 @@ describe('progress-message', function()\n     )\n   end)\n \n+  it('gets moved to end of history upon update', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297943351",
            "id": 2297943351,
            "in_reply_to_id": 2297904480,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I99U3",
            "original_commit_id": "3963f0d9ba91d5ffdf2ab997e4931c216d07bc36",
            "original_line": 3419,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3151175112,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297943351/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T12:15:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297943351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297974205"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297974205"
                }
            },
            "author_association": "MEMBER",
            "body": "> There can easily be hundreds of almost similar messages in a short span.\r\n\r\nSuch a caller should pass `history = false`.\r\n\r\n> updating the existing message was a requirement.\r\n\r\nUnclear to me that that also pertains to the internal history @justinmk? I think not doing so would significantly simplify this PR. What matters is the message is updated in the UI (if it is still visible).",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T12:30:32Z",
            "diff_hunk": "@@ -3416,4 +3416,38 @@ describe('progress-message', function()\n     )\n   end)\n \n+  it('gets moved to end of history upon update', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297974205",
            "id": 2297974205,
            "in_reply_to_id": 2297904480,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I-E29",
            "original_commit_id": "3963f0d9ba91d5ffdf2ab997e4931c216d07bc36",
            "original_line": 3419,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3151230807,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297974205/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T12:30:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297974205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2297977663"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297977663"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Issue added #35475. I'll look at it after gsoc.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T12:32:06Z",
            "diff_hunk": "@@ -3138,3 +3138,210 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can send progress-message through nvim-echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      content = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      msg_id = 1,\n+      extra_info = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- throws error if history is false\n+    eq(\n+      'progress messages must be on history',\n+      t.pcall_err(\n+        api.nvim_echo,\n+        { { 'test-message' } },\n+        false,\n+        { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+      )\n+    )\n+  end)\n+\n+  it('can send arbitrary data through extra_info', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      extra_info = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            extra_info = {\n+              test_attribute = 1,\n+            },\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      content = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      msg_id = 1,\n+      extra_info = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('tui displays progress message in proper format', function()\n+    clear()\n+    setup_screen(false)\n+    api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'TestSuit', percent = 10, status = 'running' }\n+    )\n+    screen:expect([[\n+      ^                                        |\n+      {1:~                                       }|*3\n+      test-message                            |",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2297977663",
            "id": 2297977663,
            "in_reply_to_id": 2297149427,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I-Fs_",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 3344,
            "original_position": 207,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3151236287,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297977663/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T12:32:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297977663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2298011218"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298011218"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "As far as I remember, the discussion was, progress events are really close to messages. So keeping them together keeps us from having separate structures/implementations for two similar concepts.\r\n\r\nAn ID was necessary to identify which message to update.\r\n\r\nthings like title, status, percent ar useful because they gives External UIs flexibility to make interesting UIs. For example, a progress bar to show the percent done instead of text. putting that info in msg makes something like that hard.\r\n\r\nAlthough since, we dropped partial updates. We can probably get away without storing them.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T12:47:46Z",
            "diff_hunk": "@@ -3416,4 +3416,38 @@ describe('progress-message', function()\n     )\n   end)\n \n+  it('gets moved to end of history upon update', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2298011218",
            "id": 2298011218,
            "in_reply_to_id": 2297904480,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I-N5S",
            "original_commit_id": "3963f0d9ba91d5ffdf2ab997e4931c216d07bc36",
            "original_line": 3419,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3151291964,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298011218/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T13:06:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298011218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2298874846"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298874846"
                }
            },
            "author_association": "MEMBER",
            "body": "To be clear, this should be changed to `text`. Even if we wanted to match the UI event names, this does not match the structure anyway: `content` in the ui event is a list of chunks + highlights, whereas this is just text. \r\n\r\nAnd if that *weren't* the case, we could rename `content` in the UI event to `text` in this very PR, since its name is not part of its interface.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T19:00:36Z",
            "diff_hunk": "@@ -787,6 +787,31 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The |event-data| contains:\n+\t\t\t\t\tmsg_id: id of the message\n+\t\t\t\t\tcontent: text of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2298874846",
            "id": 2298874846,
            "in_reply_to_id": 2297182504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JBgve",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 795,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3152670389,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298874846/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T19:12:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298874846",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2298890416"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298890416"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's take the simpler route that @luukvbaal suggested, for now. Since we have a Progress event, providing the ability to \"get\" a message's current state via its \"id\", may not be necessary as I originally assumed.\r\n\r\nA tracking issue to revisit this would be good though",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T19:08:45Z",
            "diff_hunk": "@@ -3416,4 +3416,38 @@ describe('progress-message', function()\n     )\n   end)\n \n+  it('gets moved to end of history upon update', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2298890416",
            "id": 2298890416,
            "in_reply_to_id": 2297904480,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JBkiw",
            "original_commit_id": "3963f0d9ba91d5ffdf2ab997e4931c216d07bc36",
            "original_line": 3419,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3152693622,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298890416/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T19:09:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2298890416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299307357"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299307357"
                }
            },
            "author_association": "MEMBER",
            "body": "This doesn't seem to belong in the UI event. UIs are not going to inspect this and guess how to interpret/display it.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T22:51:14Z",
            "diff_hunk": "@@ -881,6 +882,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id\n+\t    appears it should replace the older message.\n+\n+\tprogress\n+\t    Progress-message properties:\n+\t       • title: Title string of the progress message.\n+\t       • status: Status of the progress message. Can contain one of\n+\t         the following values\n+\t            • success: The progress item completed successfully\n+\t            • running: The progress is ongoing\n+\t            • failed: The progress item failed\n+\t            • cancel: The progressing process should be canceled.\n+\t       • percent: How much progress is done on the progress\n+                     message\n+\t       • data: dictionary containing additional information.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299307357",
            "id": 2299307357,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JDKVd",
            "original_commit_id": "bb4a3aa045f0e535f43d0ff2d56db550d74876a3",
            "original_line": 901,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3153262453,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299307357/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T23:27:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299307357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299322619"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299322619"
                }
            },
            "author_association": "MEMBER",
            "body": "Always assigning/emitting an ID would be less surprising. Though I suppose this `0` conveys that no caller is aware of the msg->id mapping (and thus shouldn't be replaced in the future) unlike `nvim_echo` emitted messages? Though given https://github.com/neovim/neovim/pull/34846/files#r2299325332 we might be better off just always assigning an ID as suggested in https://github.com/neovim/neovim/issues/32537#issuecomment-2672600804:\n\n> All messages (incl. non-progress) have an id.\"\n\nAlso `msg_` is redundant here. Better use `id`?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T23:03:46Z",
            "diff_hunk": "@@ -881,6 +882,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299322619",
            "id": 2299322619,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JDOD7",
            "original_commit_id": "bb4a3aa045f0e535f43d0ff2d56db550d74876a3",
            "original_line": 887,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3153262453,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299322619/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T23:27:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299322619",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299325332"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299325332"
                }
            },
            "author_association": "MEMBER",
            "body": "Linking the message ID to whether or not a message is stored in the history seems wrong to me. There is no reason a temporary message shouldn't be able to be replaced in the UI.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T23:06:14Z",
            "diff_hunk": "@@ -659,13 +659,32 @@ nvim_echo({chunks}, {history}, {opts})                           *nvim_echo()*\n                    (optional) name or ID `hl_group`.\n       • {history}  (`boolean`) if true, add to |message-history|.\n       • {opts}     (`vim.api.keyset.echo_opts`) Optional parameters.\n+                   • id: message id for updating existing message.\n                    • err: Treat the message like `:echoerr`. Sets `hl_group`\n                      to |hl-ErrorMsg| by default.\n                    • kind: Set the |ui-messages| kind with which this message\n                      will be emitted.\n                    • verbose: Message is controlled by the 'verbose' option.\n                      Nvim invoked with `-V3log` will write the message to the\n                      \"log\" file instead of standard output.\n+                   • title: The title for |progress-message|.\n+                   • status: Current status of the |progress-message|. Can be\n+                     one of the following values\n+                     • success: The progress item completed successfully\n+                     • running: The progress is ongoing\n+                     • failed: The progress item failed\n+                     • cancel: The progressing process should be canceled.\n+                       note: Cancel needs to be handled by progress initiator\n+                       by listening for the `Progress` event\n+                   • percent: How much progress is done on the progress\n+                     message\n+                   • data: dictionary containing additional information\n+\n+    Return: ~\n+        (`integer`) Message id. Valid message id is always greater then 0\n+        • -1 means nvim_echo didn't show a message\n+        • 0 means nvim_echo didn't allocate a message id for the message.\n+          happens for temp messages not stored in message history.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299325332",
            "id": 2299325332,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JDOuU",
            "original_commit_id": "bb4a3aa045f0e535f43d0ff2d56db550d74876a3",
            "original_line": 687,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": 1,
            "pull_request_review_id": 3153262453,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299325332/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T23:27:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299325332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299374908"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299374908"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "autocmd events themselve has a id feid. ti becomes something like\r\n\r\n```\r\n{\r\nid: ,\r\n...\r\ndata: {\r\n   id: ,\r\n   ....\r\n}\r\n}\r\n```\r\n\r\nI thought that was confusing so the `msg_`",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T23:48:17Z",
            "diff_hunk": "@@ -881,6 +882,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299374908",
            "id": 2299374908,
            "in_reply_to_id": 2299322619,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JDa08",
            "original_commit_id": "bb4a3aa045f0e535f43d0ff2d56db550d74876a3",
            "original_line": 887,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3153350023,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299374908/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T23:48:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299374908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299377076"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299377076"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If we give IDs to temp messages, then we can't really validate the ids. We'll just have to trust the user and forward it.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T23:49:49Z",
            "diff_hunk": "@@ -659,13 +659,32 @@ nvim_echo({chunks}, {history}, {opts})                           *nvim_echo()*\n                    (optional) name or ID `hl_group`.\n       • {history}  (`boolean`) if true, add to |message-history|.\n       • {opts}     (`vim.api.keyset.echo_opts`) Optional parameters.\n+                   • id: message id for updating existing message.\n                    • err: Treat the message like `:echoerr`. Sets `hl_group`\n                      to |hl-ErrorMsg| by default.\n                    • kind: Set the |ui-messages| kind with which this message\n                      will be emitted.\n                    • verbose: Message is controlled by the 'verbose' option.\n                      Nvim invoked with `-V3log` will write the message to the\n                      \"log\" file instead of standard output.\n+                   • title: The title for |progress-message|.\n+                   • status: Current status of the |progress-message|. Can be\n+                     one of the following values\n+                     • success: The progress item completed successfully\n+                     • running: The progress is ongoing\n+                     • failed: The progress item failed\n+                     • cancel: The progressing process should be canceled.\n+                       note: Cancel needs to be handled by progress initiator\n+                       by listening for the `Progress` event\n+                   • percent: How much progress is done on the progress\n+                     message\n+                   • data: dictionary containing additional information\n+\n+    Return: ~\n+        (`integer`) Message id. Valid message id is always greater then 0\n+        • -1 means nvim_echo didn't show a message\n+        • 0 means nvim_echo didn't allocate a message id for the message.\n+          happens for temp messages not stored in message history.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299377076",
            "id": 2299377076,
            "in_reply_to_id": 2299325332,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JDbW0",
            "original_commit_id": "bb4a3aa045f0e535f43d0ff2d56db550d74876a3",
            "original_line": 687,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": 1,
            "pull_request_review_id": 3153352736,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299377076/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T23:49:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299377076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299382767"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299382767"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "No worries, I got it from the previous comment. I had renamed it from all the actual code and tests, just forgot to update the doc. updating now.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-25T23:53:49Z",
            "diff_hunk": "@@ -787,6 +787,31 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress message is created via\n+\t\t\t\t`nvim_echo`. The pattern is matched against\n+\t\t\t\ttitle of the message. The |event-data| contains:\n+\t\t\t\t\tmsg_id: id of the message\n+\t\t\t\t\tcontent: text of the message",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299382767",
            "id": 2299382767,
            "in_reply_to_id": 2297182504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JDcvv",
            "original_commit_id": "f3650761abf44a6aa7dc5d28889a544fbeae3eb2",
            "original_line": 795,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3153360034,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299382767/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T23:53:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299382767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299393447"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299393447"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "UIs can still give filtering options based on data. Or provide some way to say where to put them. like adding a location arg. I think we should keep it. it's already taken from the user. We are just forwarding it.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T00:01:21Z",
            "diff_hunk": "@@ -881,6 +882,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id\n+\t    appears it should replace the older message.\n+\n+\tprogress\n+\t    Progress-message properties:\n+\t       • title: Title string of the progress message.\n+\t       • status: Status of the progress message. Can contain one of\n+\t         the following values\n+\t            • success: The progress item completed successfully\n+\t            • running: The progress is ongoing\n+\t            • failed: The progress item failed\n+\t            • cancel: The progressing process should be canceled.\n+\t       • percent: How much progress is done on the progress\n+                     message\n+\t       • data: dictionary containing additional information.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299393447",
            "id": 2299393447,
            "in_reply_to_id": 2299307357,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JDfWn",
            "original_commit_id": "bb4a3aa045f0e535f43d0ff2d56db550d74876a3",
            "original_line": 901,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3153374467,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299393447/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T00:01:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299393447",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299626592"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299626592"
                }
            },
            "author_association": "MEMBER",
            "body": "This is something we can easily add later, if we find a use-case, right?",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:11:09Z",
            "diff_hunk": "@@ -881,6 +882,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id\n+\t    appears it should replace the older message.\n+\n+\tprogress\n+\t    Progress-message properties:\n+\t       • title: Title string of the progress message.\n+\t       • status: Status of the progress message. Can contain one of\n+\t         the following values\n+\t            • success: The progress item completed successfully\n+\t            • running: The progress is ongoing\n+\t            • failed: The progress item failed\n+\t            • cancel: The progressing process should be canceled.\n+\t       • percent: How much progress is done on the progress\n+                     message\n+\t       • data: dictionary containing additional information.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299626592",
            "id": 2299626592,
            "in_reply_to_id": 2299307357,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JEYRg",
            "original_commit_id": "bb4a3aa045f0e535f43d0ff2d56db550d74876a3",
            "original_line": 901,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3153703804,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299626592/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:11:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299626592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299633443"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299633443"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "We can. Ok let me remove it for now ",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:17:23Z",
            "diff_hunk": "@@ -881,6 +882,24 @@ must handle.\n \t    True if the message should be appeneded to the previous message,\n \t    rather than started on a new line. Is set for |:echon|.\n \n+\tmsg_id\n+\t    Unique identifier for the message in history. Is greater or equal\n+\t    to 1. 0 indicates msg_id was not assigned. When message of same id\n+\t    appears it should replace the older message.\n+\n+\tprogress\n+\t    Progress-message properties:\n+\t       • title: Title string of the progress message.\n+\t       • status: Status of the progress message. Can contain one of\n+\t         the following values\n+\t            • success: The progress item completed successfully\n+\t            • running: The progress is ongoing\n+\t            • failed: The progress item failed\n+\t            • cancel: The progressing process should be canceled.\n+\t       • percent: How much progress is done on the progress\n+                     message\n+\t       • data: dictionary containing additional information.",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299633443",
            "id": 2299633443,
            "in_reply_to_id": 2299307357,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JEZ8j",
            "original_commit_id": "bb4a3aa045f0e535f43d0ff2d56db550d74876a3",
            "original_line": 901,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": 1,
            "pull_request_review_id": 3153712608,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299633443/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:17:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299633443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299647076"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299647076"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\t\t\t\tAfter a progress message is created or updated via\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:25:03Z",
            "diff_hunk": "@@ -787,6 +787,31 @@ ModeChanged\t\t\tAfter changing the mode. The pattern is\n \t\t:au ModeChanged [vV\\x16]*:* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au ModeChanged *:[vV\\x16]* let &l:rnu = mode() =~# '^[vV\\x16]'\n \t\t:au WinEnter,WinLeave * let &l:rnu = mode() =~# '^[vV\\x16]'\n+Progress\t\t\t\t\t\t*Progress*\n+\t\t\t\tAfter a progress message is created via",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299647076",
            "id": 2299647076,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JEdRk",
            "original_commit_id": "d2751eada9a3321604190f045f205c96eed8a573",
            "original_line": 791,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 1,
            "pull_request_review_id": 3153737025,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299647076/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:25:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299647076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299657535"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299657535"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      'title, status, percent and data fields can only be used with progress messages',\r\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:30:23Z",
            "diff_hunk": "@@ -3138,3 +3138,385 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can be sent by nvim_echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'testsuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'testsuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      text = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'testsuit',\n+      id = 1,\n+      data = {},\n+    }, 'progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      text = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      id = 1,\n+      data = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      text = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      id = 1,\n+      data = {},\n+    }, 'Progress autocmd receives progress update')\n+  end)\n+\n+  it('user-defined data in `data` field', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      data = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      text = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      id = 1,\n+      data = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('validates', function()\n+    -- throws error if title, status, percent, data is used in non progress message\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299657535",
            "id": 2299657535,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JEf0_",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 3322,
            "original_position": 185,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 1,
            "pull_request_review_id": 3153754802,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299657535/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:30:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299657535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299658465"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299658465"
                }
            },
            "author_association": "MEMBER",
            "body": "why are we restricting `data` to Progress messages? I guess because we don't have a `Message` event yet.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:31:09Z",
            "diff_hunk": "@@ -3138,3 +3138,385 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can be sent by nvim_echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'testsuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'testsuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      text = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'testsuit',\n+      id = 1,\n+      data = {},\n+    }, 'progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      text = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      id = 1,\n+      data = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      text = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      id = 1,\n+      data = {},\n+    }, 'Progress autocmd receives progress update')\n+  end)\n+\n+  it('user-defined data in `data` field', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      data = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      text = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      id = 1,\n+      data = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('validates', function()\n+    -- throws error if title, status, percent, data is used in non progress message\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',\n+      t.pcall_err(api.nvim_echo, { { 'test-message' } }, false, { title = 'TestSuit' })\n+    )\n+\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',\n+      t.pcall_err(api.nvim_echo, { { 'test-message' } }, false, { status = 'running' })\n+    )\n+\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',\n+      t.pcall_err(api.nvim_echo, { { 'test-message' } }, false, { percent = 10 })\n+    )\n+\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',\n+      t.pcall_err(api.nvim_echo, { { 'test-message' } }, false, { data = { tag = 'test' } })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299658465",
            "id": 2299658465,
            "line": 3338,
            "node_id": "PRRC_kwDOAPphoM6JEgDh",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 3338,
            "original_position": 201,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 201,
            "pull_request_review_id": 3153756614,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299658465/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:31:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299658465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299663064"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299663064"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yeah,, for now, data doesn't go anywhere except for progress-event. if we add a general message event we can open it up for other kinds.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:36:11Z",
            "diff_hunk": "@@ -3138,3 +3138,385 @@ it('pager works in headless mode with UI attached', function()\n     -- More --^                              |\n   ]])\n end)\n+\n+describe('progress-message', function()\n+  local screen\n+\n+  local function setup_autocmd(pattern)\n+    exec_lua(function()\n+      local grp = vim.api.nvim_create_augroup('ProgressListener', { clear = true })\n+      vim.api.nvim_create_autocmd('Progress', {\n+        pattern = pattern,\n+        group = grp,\n+        callback = function(ev)\n+          _G.progress_autocmd_result = ev.data\n+        end,\n+      })\n+    end)\n+  end\n+\n+  local function assert_progress_autocmd(expected, context)\n+    local progress_autocmd_result = exec_lua(function()\n+      return _G.progress_autocmd_result\n+    end)\n+    eq(expected, progress_autocmd_result, context)\n+    exec_lua(function()\n+      _G.progress_autocmd_result = nil\n+    end)\n+  end\n+\n+  local function setup_screen(with_ext_msg)\n+    if with_ext_msg then\n+      screen = Screen.new(25, 5, { ext_messages = true })\n+      screen:add_extra_attr_ids {\n+        [100] = { undercurl = true, special = Screen.colors.Red },\n+        [101] = { foreground = Screen.colors.Magenta1, bold = true },\n+      }\n+    else\n+      screen = Screen.new(40, 5)\n+    end\n+  end\n+\n+  before_each(function()\n+    clear()\n+    setup_screen(true)\n+    setup_autocmd()\n+  end)\n+\n+  it('can be sent by nvim_echo', function()\n+    local id = api.nvim_echo(\n+      { { 'test-message' } },\n+      true,\n+      { kind = 'progress', title = 'testsuit', percent = 10, status = 'running' }\n+    )\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'testsuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      text = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'testsuit',\n+      id = 1,\n+      data = {},\n+    }, 'progress autocmd receives progress messages')\n+\n+    -- can update progress messages\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'TestSuit', percent = 50, status = 'running' }\n+    )\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message-updated' } },\n+          progress = {\n+            percent = 50,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+        },\n+      },\n+    })\n+\n+    assert_progress_autocmd({\n+      text = { 'test-message-updated' },\n+      percent = 50,\n+      status = 'running',\n+      title = 'TestSuit',\n+      id = 1,\n+      data = {},\n+    }, 'Progress autocmd receives progress update')\n+\n+    -- progress event can filter by title\n+    setup_autocmd('Special Title')\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', percent = 80, status = 'running' }\n+    )\n+    assert_progress_autocmd(nil, 'No progress message with Special Title yet')\n+\n+    api.nvim_echo(\n+      { { 'test-message-updated' } },\n+      true,\n+      { id = id, kind = 'progress', title = 'Special Title', percent = 100, status = 'success' }\n+    )\n+    assert_progress_autocmd({\n+      text = { 'test-message-updated' },\n+      percent = 100,\n+      status = 'success',\n+      title = 'Special Title',\n+      id = 1,\n+      data = {},\n+    }, 'Progress autocmd receives progress update')\n+  end)\n+\n+  it('user-defined data in `data` field', function()\n+    api.nvim_echo({ { 'test-message' } }, true, {\n+      kind = 'progress',\n+      title = 'TestSuit',\n+      percent = 10,\n+      status = 'running',\n+      data = { test_attribute = 1 },\n+    })\n+\n+    screen:expect({\n+      grid = [[\n+        ^                         |\n+        {1:~                        }|*4\n+      ]],\n+      messages = {\n+        {\n+          content = { { 'test-message' } },\n+          history = true,\n+          id = 1,\n+          kind = 'progress',\n+          progress = {\n+            percent = 10,\n+            status = 'running',\n+            title = 'TestSuit',\n+          },\n+        },\n+      },\n+    })\n+    assert_progress_autocmd({\n+      text = { 'test-message' },\n+      percent = 10,\n+      status = 'running',\n+      title = 'TestSuit',\n+      id = 1,\n+      data = { test_attribute = 1 },\n+    }, 'Progress autocmd receives progress messages')\n+  end)\n+\n+  it('validates', function()\n+    -- throws error if title, status, percent, data is used in non progress message\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',\n+      t.pcall_err(api.nvim_echo, { { 'test-message' } }, false, { title = 'TestSuit' })\n+    )\n+\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',\n+      t.pcall_err(api.nvim_echo, { { 'test-message' } }, false, { status = 'running' })\n+    )\n+\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',\n+      t.pcall_err(api.nvim_echo, { { 'test-message' } }, false, { percent = 10 })\n+    )\n+\n+    eq(\n+      'title, status, percents and data fields can only be used with progress messages',\n+      t.pcall_err(api.nvim_echo, { { 'test-message' } }, false, { data = { tag = 'test' } })",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299663064",
            "id": 2299663064,
            "in_reply_to_id": 2299658465,
            "line": 3338,
            "node_id": "PRRC_kwDOAPphoM6JEhLY",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 3338,
            "original_position": 201,
            "original_start_line": null,
            "path": "test/functional/ui/messages_spec.lua",
            "position": 201,
            "pull_request_review_id": 3153763067,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299663064/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:36:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299663064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299663663"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299663663"
                }
            },
            "author_association": "MEMBER",
            "body": "not a blocker for this PR but hopefully can resolve it as a followup :\r\n\r\nexecuting user code in random parts of the C core is risky and always leads to bugs.\r\nis it possible to move this somewhere closer to where user code is *already* executed, later in this codepath perhaps? \r\n\r\nideally by implementing https://github.com/neovim/neovim/issues/35366 ",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:36:51Z",
            "diff_hunk": "@@ -1061,6 +1109,24 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n   msg_hist_len += !temp;\n   msg_hist_last = entry;\n   msg_ext_history = true;\n+\n+  msg_ext_id = msg_id;\n+  if (is_progress && msg_data != NULL && ui_has(kUIMessages)) {\n+    kv_resize(msg_ext_progress, 3);\n+    if (msg_data->title.size != 0) {\n+      PUT_C(msg_ext_progress, \"title\", STRING_OBJ(msg_data->title));\n+    }\n+    if (msg_data->status.size != 0) {\n+      PUT_C(msg_ext_progress, \"status\", STRING_OBJ(msg_data->status));\n+    }\n+    if (msg_data->percent >= 0) {\n+      PUT_C(msg_ext_progress, \"percent\", INTEGER_OBJ(msg_data->percent));\n+    }\n+  }\n+\n+  if (is_progress) {\n+    do_autocmd_progress(msg_id, entry, msg_data);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299663663",
            "id": 2299663663,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JEhUv",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 1128,
            "original_position": 148,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3153764109,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299663663/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:36:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299663663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299668766"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299668766"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure what you mean by later in codepath. It's already almost at the end. After this, we don't do much other then cleanup and function returns.\r\n\r\nA safe environment for executing autocommands would be nice. I believe it's out of scope for this pr.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:41:48Z",
            "diff_hunk": "@@ -1061,6 +1109,24 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n   msg_hist_len += !temp;\n   msg_hist_last = entry;\n   msg_ext_history = true;\n+\n+  msg_ext_id = msg_id;\n+  if (is_progress && msg_data != NULL && ui_has(kUIMessages)) {\n+    kv_resize(msg_ext_progress, 3);\n+    if (msg_data->title.size != 0) {\n+      PUT_C(msg_ext_progress, \"title\", STRING_OBJ(msg_data->title));\n+    }\n+    if (msg_data->status.size != 0) {\n+      PUT_C(msg_ext_progress, \"status\", STRING_OBJ(msg_data->status));\n+    }\n+    if (msg_data->percent >= 0) {\n+      PUT_C(msg_ext_progress, \"percent\", INTEGER_OBJ(msg_data->percent));\n+    }\n+  }\n+\n+  if (is_progress) {\n+    do_autocmd_progress(msg_id, entry, msg_data);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299668766",
            "id": 2299668766,
            "in_reply_to_id": 2299663663,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JEike",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 1128,
            "original_position": 148,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3153770672,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299668766/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:43:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299668766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299671904"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299671904"
                }
            },
            "author_association": "MEMBER",
            "body": "> After this, we don't do much other then cleanup and function return.\r\n\r\nsomewhere after the function return. i think the most sane approach is https://github.com/neovim/neovim/issues/35366 , but yes it's out of scope for now, though i don't think it will be hard.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:45:00Z",
            "diff_hunk": "@@ -1061,6 +1109,24 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n   msg_hist_len += !temp;\n   msg_hist_last = entry;\n   msg_ext_history = true;\n+\n+  msg_ext_id = msg_id;\n+  if (is_progress && msg_data != NULL && ui_has(kUIMessages)) {\n+    kv_resize(msg_ext_progress, 3);\n+    if (msg_data->title.size != 0) {\n+      PUT_C(msg_ext_progress, \"title\", STRING_OBJ(msg_data->title));\n+    }\n+    if (msg_data->status.size != 0) {\n+      PUT_C(msg_ext_progress, \"status\", STRING_OBJ(msg_data->status));\n+    }\n+    if (msg_data->percent >= 0) {\n+      PUT_C(msg_ext_progress, \"percent\", INTEGER_OBJ(msg_data->percent));\n+    }\n+  }\n+\n+  if (is_progress) {\n+    do_autocmd_progress(msg_id, entry, msg_data);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299671904",
            "id": 2299671904,
            "in_reply_to_id": 2299663663,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JEjVg",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 1128,
            "original_position": 148,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3153774250,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299671904/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:45:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299671904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2299680816"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299680816"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "56cbe8c10fb6fc83fac3b53af9cfc882ba35990d works? Now running the event at very end of nvim_echo",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T03:53:18Z",
            "diff_hunk": "@@ -1061,6 +1109,24 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n   msg_hist_len += !temp;\n   msg_hist_last = entry;\n   msg_ext_history = true;\n+\n+  msg_ext_id = msg_id;\n+  if (is_progress && msg_data != NULL && ui_has(kUIMessages)) {\n+    kv_resize(msg_ext_progress, 3);\n+    if (msg_data->title.size != 0) {\n+      PUT_C(msg_ext_progress, \"title\", STRING_OBJ(msg_data->title));\n+    }\n+    if (msg_data->status.size != 0) {\n+      PUT_C(msg_ext_progress, \"status\", STRING_OBJ(msg_data->status));\n+    }\n+    if (msg_data->percent >= 0) {\n+      PUT_C(msg_ext_progress, \"percent\", INTEGER_OBJ(msg_data->percent));\n+    }\n+  }\n+\n+  if (is_progress) {\n+    do_autocmd_progress(msg_id, entry, msg_data);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2299680816",
            "id": 2299680816,
            "in_reply_to_id": 2299663663,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JElgw",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 1128,
            "original_position": 148,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3153784031,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299680816/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T03:53:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299680816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2300694870"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300694870"
                }
            },
            "author_association": "MEMBER",
            "body": "Only used in one place and doesn't seem more readable to me.\n```suggestion\n  if (strequal(msg_ext_kind, \"progress\") && msg_data != NULL && ui_has(kUIMessages)) {\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T11:31:48Z",
            "diff_hunk": "@@ -1061,6 +1104,20 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n   msg_hist_len += !temp;\n   msg_hist_last = entry;\n   msg_ext_history = true;\n+\n+  msg_ext_id = msg_id;\n+  if (strequal(msg_ext_kind, MSG_KIND_PROGRESS) && msg_data != NULL && ui_has(kUIMessages)) {",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2300694870",
            "id": 2300694870,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JIdFW",
            "original_commit_id": "56cbe8c10fb6fc83fac3b53af9cfc882ba35990d",
            "original_line": 1109,
            "original_position": 122,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3155203850,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300694870/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T11:43:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300694870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2300731288"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300731288"
                }
            },
            "author_association": "MEMBER",
            "body": "56cbe8c works but is not what justin was getting at. #35366 talks about queuing events and finding a safe state in the event loop to execute them (outside of the function calls that queue them).",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T11:44:28Z",
            "diff_hunk": "@@ -1061,6 +1109,24 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n   msg_hist_len += !temp;\n   msg_hist_last = entry;\n   msg_ext_history = true;\n+\n+  msg_ext_id = msg_id;\n+  if (is_progress && msg_data != NULL && ui_has(kUIMessages)) {\n+    kv_resize(msg_ext_progress, 3);\n+    if (msg_data->title.size != 0) {\n+      PUT_C(msg_ext_progress, \"title\", STRING_OBJ(msg_data->title));\n+    }\n+    if (msg_data->status.size != 0) {\n+      PUT_C(msg_ext_progress, \"status\", STRING_OBJ(msg_data->status));\n+    }\n+    if (msg_data->percent >= 0) {\n+      PUT_C(msg_ext_progress, \"percent\", INTEGER_OBJ(msg_data->percent));\n+    }\n+  }\n+\n+  if (is_progress) {\n+    do_autocmd_progress(msg_id, entry, msg_data);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2300731288",
            "id": 2300731288,
            "in_reply_to_id": 2299663663,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JIl-Y",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 1128,
            "original_position": 148,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3155262791,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300731288/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T11:44:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300731288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2301014715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301014715"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\n    api.nvim_echo(chunks, true, {})\n```",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T13:32:40Z",
            "diff_hunk": "@@ -395,7 +395,8 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    -- TODO: need to add support for progress-messages api\n+    vim.api.nvim_echo(chunks, true, {})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2301014715",
            "id": 2301014715,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JJrK7",
            "original_commit_id": "4b0c8170f552e9007c1a2b5582f73b463aa459ef",
            "original_line": 399,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3155660043,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301014715/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T13:32:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301014715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2301034978"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301034978"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This change is really unrelated to the pr. Also, there are other uses of vim.api in the file too. The pack will need to be updated to use the new api. Let's leave this change for then.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T13:39:13Z",
            "diff_hunk": "@@ -395,7 +395,8 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    -- TODO: need to add support for progress-messages api\n+    vim.api.nvim_echo(chunks, true, {})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2301034978",
            "id": 2301034978,
            "in_reply_to_id": 2301014715,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JJwHi",
            "original_commit_id": "4b0c8170f552e9007c1a2b5582f73b463aa459ef",
            "original_line": 399,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3155689732,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301034978/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T13:39:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301034978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2301043433"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301043433"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, that issue is a different thing. This pr is not trying to address that issue. I was asking about the other mitigation justinmk was talking about : ]",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T13:41:47Z",
            "diff_hunk": "@@ -1061,6 +1109,24 @@ static void msg_hist_add_multihl(HlMessage msg, bool temp)\n   msg_hist_len += !temp;\n   msg_hist_last = entry;\n   msg_ext_history = true;\n+\n+  msg_ext_id = msg_id;\n+  if (is_progress && msg_data != NULL && ui_has(kUIMessages)) {\n+    kv_resize(msg_ext_progress, 3);\n+    if (msg_data->title.size != 0) {\n+      PUT_C(msg_ext_progress, \"title\", STRING_OBJ(msg_data->title));\n+    }\n+    if (msg_data->status.size != 0) {\n+      PUT_C(msg_ext_progress, \"status\", STRING_OBJ(msg_data->status));\n+    }\n+    if (msg_data->percent >= 0) {\n+      PUT_C(msg_ext_progress, \"percent\", INTEGER_OBJ(msg_data->percent));\n+    }\n+  }\n+\n+  if (is_progress) {\n+    do_autocmd_progress(msg_id, entry, msg_data);",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2301043433",
            "id": 2301043433,
            "in_reply_to_id": 2299663663,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JJyLp",
            "original_commit_id": "5affa68cc03c977a49e5401e4d79e90c376ffc13",
            "original_line": 1128,
            "original_position": 148,
            "original_start_line": null,
            "path": "src/nvim/message.c",
            "position": 1,
            "pull_request_review_id": 3155701610,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301043433/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T13:42:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301043433",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2301048953"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301048953"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, and I am removing those currently. So I'm pointing out an obvious regression when you touch the code.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T13:43:37Z",
            "diff_hunk": "@@ -395,7 +395,8 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    -- TODO: need to add support for progress-messages api\n+    vim.api.nvim_echo(chunks, true, {})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2301048953",
            "id": 2301048953,
            "in_reply_to_id": 2301014715,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JJzh5",
            "original_commit_id": "4b0c8170f552e9007c1a2b5582f73b463aa459ef",
            "original_line": 399,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3155709739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301048953/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T13:43:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301048953",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34846#discussion_r2301087799"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34846"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301087799"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "ok, I'm updating it.",
            "commit_id": "a95428426edd63098ea4e155fadd04b1bdec1067",
            "created_at": "2025-08-26T13:55:40Z",
            "diff_hunk": "@@ -395,7 +395,8 @@ local function new_progress_report(title)\n     local progress = kind == 'end' and 'done' or ('%3d%%'):format(percent)\n     local details = (' %s %s'):format(title, fmt:format(...))\n     local chunks = { { 'vim.pack', 'ModeMsg' }, { ': ' }, { progress, 'WarningMsg' }, { details } }\n-    vim.api.nvim_echo(chunks, true, { kind = 'progress' })\n+    -- TODO: need to add support for progress-messages api\n+    vim.api.nvim_echo(chunks, true, {})",
            "html_url": "https://github.com/neovim/neovim/pull/34846#discussion_r2301087799",
            "id": 2301087799,
            "in_reply_to_id": 2301014715,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JJ9A3",
            "original_commit_id": "4b0c8170f552e9007c1a2b5582f73b463aa459ef",
            "original_line": 399,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/pack.lua",
            "position": 1,
            "pull_request_review_id": 3155767457,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301087799/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T13:55:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2301087799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "ping @justinmk ",
            "created_at": "2025-07-09T16:00:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3053195123",
            "id": 3053195123,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM61_A9z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3053195123/reactions"
            },
            "updated_at": "2025-07-09T16:00:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3053195123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have a few questions\r\n\r\n1. in the proposal does the  ui-events (msg_show) or autocmd-events (like a new Message event) ?\r\n1. what's our policy on ui-events is adding more arguments a breaking change to the protocol?\r\n1. actually I'm also confused on how does ui-events get sents there is a function that constracts snd sends the event but I could't find where it gets called in nvim_echos code path. Unless msg_start() and msg_end() are triggering it. I guess I need to explore more of the ext-ui codes. I'm comparativly new to that section of the codebase.\r\n1. should we make progress messages always to be recorded in history? Since we only save messages in message history. I'd assume users can send partial updates in future messages. If we want the events we emit to have full info then we need to store the messages\r\n1. when a message update comes should we drop the message node to end of history. Or modify in where it is.\r\n1. should we let progress percent to be decreased? Or allow it only to increase? In case of vscode they provide a increment option only.\r\n1. also in your proposal what does status actually represent?\r\n\r\ncc @justinmk \r\n",
            "created_at": "2025-07-13T01:17:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3066318035",
            "id": 3066318035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62xEzT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066318035/reactions"
            },
            "updated_at": "2025-08-19T04:01:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066318035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "1. editor event (autocmd)\r\n1. adding new args to an event is non-breaking (`:help api-contract`)\r\n1. UI events are asynchronous and not related to any particular function. `nvim_echo` happens to affect the UI (it prints messages) so it generates UI events.\r\n\r\n> should we make progress messages always to be recorded in history?\r\n\r\nI was thinking about this today and starting to doubt some portion of my proposal. Because progress messages are long-lived, and when they are updated they generate messages, so it doesn't really make sense to \"update\" an existing message. That would make the message system logic very strange.\r\n\r\n> when a message update comes should we drop the message node to end of history. Or modify in where it is.\r\n\r\nyeah, that's the part I am rethinking. Pushing it to the end would increment the id...? But that makes no sense. And if it doesn't increment the id, then the message system has to reason about the order of messages.\r\n\r\n> should we let progress percent to be decreased? Or allow it only to increase? In case of vscode they provide a increment option only.\r\n\r\nIs it a reversible decision? If so, we can choose the simple way.\r\n\r\n> also in your proposal what does status actually represent?\r\n\r\n`status='done|fail|cancel|waiting|...'`\r\n",
            "created_at": "2025-07-13T05:24:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3066612792",
            "id": 3066612792,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62yMw4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066612792/reactions"
            },
            "updated_at": "2025-07-13T05:24:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066612792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> UI events are asynchronous and not related to any particular function. nvim_echo happens to affect the UI (it prints messages) so it generates UI events.\r\n\r\nThe `msg_show` UI event for should emit message_id, status, title, percent stuff too. I was trying to figure out how to do it.\r\n\r\n> Pushing it to the end would increment the id...? But that makes no sense. And if it doesn't increment the id, then the message system has to reason about the order of messages.\r\n\r\nAs the current implementation in this pr stands it doesn't increment the id but does move the message to the end. We can do this because message-history is stored as linked-list. Linked-list has it's own ordering apart from the id we are assigning a message.\r\n\r\nI'm kind of confused if message history is the right place to implement this. We currently only give message-id to messages when messages are stored in history. `nvim_echo` can create temporary messages that doesn't get stored in message history. Then there's also ext-ui.\r\n\r\n> Is it a reversible decision? If so, we can choose the simple way.\r\n\r\nI'm not sure what you meant here. ",
            "created_at": "2025-07-13T07:23:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3066687164",
            "id": 3066687164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62ye68",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066687164/reactions"
            },
            "updated_at": "2025-07-13T07:23:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066687164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Like I said, simply passing the ID to the msg_show event (emitted [here](https://github.com/neovim/neovim/blob/3e7f5d95aa25943e26d88a75fc55785229c36e34/src/nvim/message.c#L3183), modified [here](https://github.com/neovim/neovim/blob/3e7f5d95aa25943e26d88a75fc55785229c36e34/src/nvim/api/ui_events.in.h#L165)) would be sufficient for a UI to replace the message (adding status, title, percent, to the UI event still seems excessive to me). The UI itself would track whether it is still visible, doesn't need to be attached to the message history in `message.c`.",
            "created_at": "2025-07-13T09:09:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3066742989",
            "id": 3066742989,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62ysjN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066742989/reactions"
            },
            "updated_at": "2025-07-13T09:12:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066742989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> simply passing the ID to the msg_show event (emitted here, modified here) would be sufficient for a UI to replace the message\r\n\r\nNot exactly. That takes care of `ext-ui` clients but the tui won't handle things just with that. Tui would just be printing the message as is.\r\n\r\n> (adding status, title, percent, to the UI event still seems excessive to me).\r\n\r\nI'm guessing you want the progress-msg emiter to handle how they want to format things or how they want to display things as part of the message text. That makes the entire thing way too openended. Creating seperation like this allows us to standardize things. Also create separation. For example, title, status and percent are special info for progress messages. Yeah you can just format the message text like \"title: msg percent%\" but there's no enforcement for that. And it can't be reliably decomposed due to that. If we keep them as separate things UI can decide to deal with it differently. Also, since we are going to run special autocmd on progress updates plugins can listen for those too. The `status` with events can also act as cancelation trigger.\r\n\r\n> The UI itself would track whether it is still visible, doesn't need to be attached to the message history in message.c.\r\n\r\nMessage history integration is mainly to keep track of the messages as internal states, to handle tui and to basically allow partial updates. Like you don't change anything in the messages/title/status just bump progress percent to 10 to 20% l",
            "created_at": "2025-07-13T14:06:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067068977",
            "id": 3067068977,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM62z8Ix",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067068977/reactions"
            },
            "updated_at": "2025-07-13T14:07:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067068977",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Will the `replace_last` parameter become redundant after providing message ids?",
            "created_at": "2025-07-13T14:42:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067088057",
            "id": 3067088057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM620Ay5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067088057/reactions"
            },
            "updated_at": "2025-07-13T14:42:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067088057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Not exactly. That takes care of `ext-ui` clients but the tui won't handle things just with that. Tui would just be printing the message as is.\r\n\r\nExactly, and that is what it will continue to do. I don't think it makes sense to add C code at this point to display/replace messages in the TUI. It will become a UI client.\r\n\r\n~~Adding additional arguments is fine, but maybe we should consider adding a `data` field rather than 4 new arguments.~~\r\n",
            "created_at": "2025-07-13T15:09:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067103202",
            "id": 3067103202,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM620Efi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067103202/reactions"
            },
            "updated_at": "2025-07-14T03:02:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067103202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It will become a UI client.\r\n\r\nSince it's not yet I think it makes sense to support the current tui. It's not a ton of code anyway. If it becomes later down the line it can just be removed then.\r\n\r\n> maybe we should consider adding a data field rather than 4 new arguments.\r\n\r\nBy single field data do you mean a subobject/map or just one string field? If the later then same issue with separation is still there. Also, in the 1st casse it's already in an object why create an extra level of nesting? Internally we can handle it as a seperate object but externally in api/events it kind of stays the same\r\n\r\n",
            "created_at": "2025-07-14T02:04:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067538847",
            "id": 3067538847,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM621u2f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067538847/reactions"
            },
            "updated_at": "2025-07-14T02:04:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067538847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Since it's not yet I think it makes sense to support the current tui. It's not a ton of code anyway.\r\n\r\nThat remains to be seen. I was talking about (re)placing a message with an ID in some special place other than the 'cmdheight' area. That's the only way this proposal makes any sense to me (and would be a couple lines of Lua code in vim._extui). The legacy message grid always replaces messages by definition after all, whether they have an ID or not. But maybe I'm missing the point here, I'll refrain from commenting until the proposal is more complete.\r\n\r\n> Also, in the 1st casse it's already in an object\r\n\r\nIt's not for `vim.ui_attach` callbacks, but yes you're right for RPC notifications, so never mind this.",
            "created_at": "2025-07-14T02:57:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3067626775",
            "id": 3067626775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM622EUX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067626775/reactions"
            },
            "updated_at": "2025-07-14T02:57:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3067626775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The documentation seems a bit confusing. The term \"progress message\" appears multiple times, but it isn't defined anywhere.",
            "created_at": "2025-08-21T23:39:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3212448180",
            "id": 3212448180,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM6_ehG0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3212448180/reactions"
            },
            "updated_at": "2025-08-21T23:40:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3212448180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The documentation seems a bit confusing. The term \"progress message\" appears multiple times, but it isn't defined anywhere.\r\n\r\nTrue. Does messages.txt sound like right place to put it?",
            "created_at": "2025-08-22T00:01:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3212503672",
            "id": 3212503672,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM6_eup4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3212503672/reactions"
            },
            "updated_at": "2025-08-22T00:01:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3212503672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "ping @justinmk. Do take another look.\r\n\r\nI've updated the changes you requested. Other signuficant thing that changed was addion of `extra_info` parameter.  It allows a arbitrary dictionary to be passed. Primarily targeted for things like sending lsp-id/name that kind of param will be unique to the usecase hence tha dictionary. Maybe there's a better name for the arg.\r\n\r\nWhen  reviewing changes you can look from 1f9e2bcd146b54126a4dba853ba14d8258473d4f that's first commit after your review",
            "created_at": "2025-08-24T23:20:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3218445270",
            "id": 3218445270,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM6_1ZPW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3218445270/reactions"
            },
            "updated_at": "2025-08-25T01:39:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3218445270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This PR is now seemingly storing the progress data in the message history without a valid reason. Can we please forego manipulating the message history for progress/ID messages prematurely? As far as I can tell this data is only emitted directly as a result an `nvim_echo()` call, so that data should be available as its arguments, not stored internally (https://github.com/neovim/neovim/pull/34846#discussion_r2195409882).",
            "created_at": "2025-08-25T11:29:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3219902395",
            "id": 3219902395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM6_68-7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3219902395/reactions"
            },
            "updated_at": "2025-08-25T11:29:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3219902395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk since we are no longer allowing partial updates, we can get away without storing title, status,, percent, data. I've removed them from message history 224cfb6a1e91b729562055cd38856b115b6a6cf4 . That info is still sent to events, so nothing changes from user end. ",
            "created_at": "2025-08-25T13:25:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3220270638",
            "id": 3220270638,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM6_8W4u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3220270638/reactions"
            },
            "updated_at": "2025-08-25T13:25:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3220270638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Still a [naming nit](https://github.com/neovim/neovim/pull/34846#discussion_r2298874846) remaining, then I think this is ready? @luukvbaal does it LGTY ?",
            "created_at": "2025-08-25T19:11:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3221430817",
            "id": 3221430817,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7AAyIh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221430817/reactions"
            },
            "updated_at": "2025-08-25T19:11:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221430817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk in 126b2d8a17e70b5f1b251a04b39abf133cfa2b0a I've added support for string IDs. so this pr should close #35465\r\n too. I'm adding it because changing the return type will break the API-contract? I think the restriction on just void -> some-type was lifted, right?",
            "created_at": "2025-08-26T02:08:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3222317669",
            "id": 3222317669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7AEKpl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222317669/reactions"
            },
            "updated_at": "2025-08-26T02:08:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222317669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> changing the return type will break the API-contract?\r\n\r\nunreleased APIs can change on master (and tests won't fail)",
            "created_at": "2025-08-26T03:12:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3222427502",
            "id": 3222427502,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7AEldu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222427502/reactions"
            },
            "updated_at": "2025-08-26T03:12:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222427502",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> unreleased APIs can change on master (and tests won't fail)\r\n\r\nBy unreleased do you mean unreleased changes to api?\r\n\r\nWell either way it works now with string ids too :] ",
            "created_at": "2025-08-26T03:21:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3222441206",
            "id": 3222441206,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7AEoz2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222441206/reactions"
            },
            "updated_at": "2025-08-26T03:21:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222441206",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (That would also mean the ID is not used internally and only emitted as part of the msg_show/Progress events, which to me would be a welcome simplification.)\r\n\r\n@luukvbaal  I would like to keep the door open for retrieving messages by id from the message store, even if we don't expose that now. Do you foresee a problem with that?",
            "created_at": "2025-08-26T03:22:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3222442234",
            "id": 3222442234,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7AEpD6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222442234/reactions"
            },
            "updated_at": "2025-08-26T03:23:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222442234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I would like to keep the door open for retrieving messages by id from the message store, even if we don't expose that now. Do you foresee a problem with that?\r\n\r\nIt can be added later if we add a mechanism for that?",
            "created_at": "2025-08-26T03:26:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3222448964",
            "id": 3222448964,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7AEqtE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222448964/reactions"
            },
            "updated_at": "2025-08-26T03:26:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222448964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Did our CI die :| ?",
            "created_at": "2025-08-26T13:39:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3224226170",
            "id": 3224226170,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7ALcl6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3224226170/reactions"
            },
            "updated_at": "2025-08-26T15:09:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3224226170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@luukvbaal @shadmansaleh after reviewing/writing docs I have some thoughts, WDYT?:\r\n\r\n- We need the new `kind=progress` to trigger the `Progress` event, but we *don't* need the `progress` items in the `msg_show` UI event. UIs don't/shouldn't need to care about how to present progress-messages. Instead, Nvim/plugins decide how to present progress-messages by handling the `Progress` event. \r\n- The *only* updated guidance for UIs is that `msg_id` means \"update-in-place\" for any matching message. No guidance about progress-messages, because UIs don't treat progress-messages specially.\r\n\r\nOtherwise, I don't know what guidance to give UIs. If UIs decide how to present the `progress` info from `msg_show`,\r\n\r\n- it adds another \"messages area\"? we already have (1) regular messages, (2) notifications, (3) dialogs.\r\n- it conflicts with plugins that want to control presentation of progress-messages?",
            "created_at": "2025-08-26T21:01:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3225716708",
            "id": 3225716708,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7ARIfk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225716708/reactions"
            },
            "updated_at": "2025-08-26T21:42:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225716708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I feel like this can still be useful. UI can decide if they want to show it specially (like a progress-bar somewhere or loader) or just as a regular message. UIs don't need to add a new message area. By default, since it's a message and comes from msg_show event they should put them message-area. If they want to do something fancy they have the option to do so.\r\n\r\n> it conflicts with plugins that want to control presentation of progress-messages?\r\n\r\nPlugins don't directly control how progress messages are displayed. But some adapater plugin can pick the progress-events and provide UI for that. My guess would be if UIs provide special support for progress that kind of adapter plugin won't be necessary?'\r\n\r\nActually I still thik we should add a default implementation of how progress message looks like. Originally, I had added `{title}: {msg}...{percent}%` complexity came from filtering the message for ext-ui. I guess we can send this format to ext-ui too? That way if ext-ui just takes care of replacing message for id it should work as a good default? For anything fancier a bit more work will be needed on UI end.",
            "created_at": "2025-08-27T03:38:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3226631644",
            "id": 3226631644,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7AUn3c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3226631644/reactions"
            },
            "updated_at": "2025-08-27T03:38:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3226631644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> but we don't need the progress items in the msg_show UI event. UIs don't/shouldn't need to care about how to present progress-messages.\r\n\r\n> The only updated guidance for UIs is that msg_id means \"update-in-place\" for any matching message. No guidance about progress-messages, because UIs don't treat progress-messages specially.\r\n\r\nYes those we're my [original](https://github.com/neovim/neovim/pull/34846#discussion_r2195683434) [thoughts](https://github.com/neovim/neovim/pull/34846#issuecomment-3066742989) as well, I conceded trying to argue it to see how it would be used. Formatting progress fields still seems out of scope for UIs to me unless core starts to use this extensively. And even then a regular (formatted) message would be the more obvious choice IMO.",
            "created_at": "2025-08-27T07:30:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34846#issuecomment-3227107079",
            "id": 3227107079,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
            "node_id": "IC_kwDOAPphoM7AWb8H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227107079/reactions"
            },
            "updated_at": "2025-08-27T07:30:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227107079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34846/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34846/commits",
    "created_at": "2025-07-08T11:47:30Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34846.diff",
    "draft": false,
    "head": {
        "label": "shadmansaleh:feat/progress-msg",
        "ref": "feat/progress-msg",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/shadmansaleh/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/shadmansaleh/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/shadmansaleh/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/shadmansaleh/neovim/branches{/branch}",
            "clone_url": "https://github.com/shadmansaleh/neovim.git",
            "collaborators_url": "https://api.github.com/repos/shadmansaleh/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/shadmansaleh/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/shadmansaleh/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/shadmansaleh/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/shadmansaleh/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/shadmansaleh/neovim/contributors",
            "created_at": "2021-03-16T15:07:33Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/shadmansaleh/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/shadmansaleh/neovim/downloads",
            "events_url": "https://api.github.com/repos/shadmansaleh/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/shadmansaleh/neovim/forks",
            "full_name": "shadmansaleh/neovim",
            "git_commits_url": "https://api.github.com/repos/shadmansaleh/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/shadmansaleh/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/shadmansaleh/neovim/git/tags{/sha}",
            "git_url": "git://github.com/shadmansaleh/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/shadmansaleh/neovim/hooks",
            "html_url": "https://github.com/shadmansaleh/neovim",
            "id": 348391941,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/shadmansaleh/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/shadmansaleh/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/shadmansaleh/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/shadmansaleh/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/shadmansaleh/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/shadmansaleh/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/shadmansaleh/neovim/merges",
            "milestones_url": "https://api.github.com/repos/shadmansaleh/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNDgzOTE5NDE=",
            "notifications_url": "https://api.github.com/repos/shadmansaleh/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/shadmansaleh/neovim/pulls{/number}",
            "pushed_at": "2025-09-02T02:03:41Z",
            "releases_url": "https://api.github.com/repos/shadmansaleh/neovim/releases{/id}",
            "size": 331364,
            "ssh_url": "git@github.com:shadmansaleh/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/shadmansaleh/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/shadmansaleh/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/shadmansaleh/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/shadmansaleh/neovim/subscription",
            "svn_url": "https://github.com/shadmansaleh/neovim",
            "tags_url": "https://api.github.com/repos/shadmansaleh/neovim/tags",
            "teams_url": "https://api.github.com/repos/shadmansaleh/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/shadmansaleh/neovim/git/trees{/sha}",
            "updated_at": "2025-08-29T04:45:27Z",
            "url": "https://api.github.com/repos/shadmansaleh/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a95428426edd63098ea4e155fadd04b1bdec1067",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
            "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
            "followers_url": "https://api.github.com/users/shadmansaleh/followers",
            "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
            "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/shadmansaleh",
            "id": 13149513,
            "login": "shadmansaleh",
            "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
            "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
            "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
            "repos_url": "https://api.github.com/users/shadmansaleh/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/shadmansaleh",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34846",
    "id": 2649621726,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34846",
    "labels": [
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        }
    ],
    "locked": false,
    "merge_commit_sha": "8b171852a92595176308a36978baead585e878d3",
    "merged_at": "2025-08-26T20:48:53Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6d7gTe",
    "number": 34846,
    "patch_url": "https://github.com/neovim/neovim/pull/34846.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34846/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a95428426edd63098ea4e155fadd04b1bdec1067",
    "title": "feat(api): nvim_echo can emit Progress messages/events",
    "updated_at": "2025-08-27T07:30:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34846",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
        "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
        "followers_url": "https://api.github.com/users/shadmansaleh/followers",
        "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
        "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/shadmansaleh",
        "id": 13149513,
        "login": "shadmansaleh",
        "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
        "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
        "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
        "repos_url": "https://api.github.com/users/shadmansaleh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/shadmansaleh",
        "user_view_type": "public"
    }
}