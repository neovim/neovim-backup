{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28344/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28344/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28344"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28344"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28344/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/1f004970f00bd8ef7ad955b52857df136f82185b"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6062,
            "forks_count": 6062,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1916,
            "open_issues_count": 1916,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-05-06T02:05:16Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 321796,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89216,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-05-06T02:05:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89216,
            "watchers_count": 89216,
            "web_commit_signoff_required": false
        },
        "sha": "ce8b755a86c10496a81675c49b3bc9a42c79d80f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "currently, this works to run a simple lua environment in the host system:\r\n\r\n    zig build nlua0 -- hello.lua\r\n\r\nTo generate source files \r\n\r\n    zig build gen_sources\r\n\r\nto build a fixed configuration for x86-64 linux only:\r\n\r\n    zig build -Dtarget=x86_64-linux-gnu nvim_bin\r\n\r\n# what is nlua0 ?\r\n\r\n`nlua` is just an abbreviation for nvim flavored lua, i e lua with the extended standard library functionality added by nvim such as json, mpack and libuv. `nlua0` is the _formal_ concept of the lua code we need to run before `nvim` can be built, in order to run lua scripts which process and generate more .c code, which still need a _subset_ of these extensions. \r\n\r\nIt is not something which will be exposed to users (they will still use `nvim -l` to run such lua code)..\r\n\r\n# Will build.zig replace cmake?\r\n\r\nAt this point, who knows. It's worth a try I think.\r\n\r\n# But isn't zig 0.x / pre-alpha / whatever ?\r\n\r\nYes, that can still be a problem, for now. We will see which project (neovim or zig) will abandon zerover first (or ever).\r\n\r\n",
    "closed_at": "2025-05-02T08:34:26Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r1579126060"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579126060"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should just commit these files to our mirror and be done with it.",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2024-04-25T08:56:22Z",
            "diff_hunk": "@@ -0,0 +1,36 @@\n+ static const struct StaticTableEncoding encoding_DECdrawing = {\n+   { .decode = &decode_table },\n+   {\n+     [0x60] = 0x25C6,\n+     [0x61] = 0x2592,\n+     [0x62] = 0x2409,\n+     [0x63] = 0x240C,\n+     [0x64] = 0x240D,\n+     [0x65] = 0x240A,\n+     [0x66] = 0x00B0,\n+     [0x67] = 0x00B1,\n+     [0x68] = 0x2424,\n+     [0x69] = 0x240B,\n+     [0x6a] = 0x2518,\n+     [0x6b] = 0x2510,\n+     [0x6c] = 0x250C,\n+     [0x6d] = 0x2514,\n+     [0x6e] = 0x253C,\n+     [0x6f] = 0x23BA,\n+     [0x70] = 0x23BB,\n+     [0x71] = 0x2500,\n+     [0x72] = 0x23BC,\n+     [0x73] = 0x23BD,\n+     [0x74] = 0x251C,\n+     [0x75] = 0x2524,\n+     [0x76] = 0x2534,\n+     [0x77] = 0x252C,\n+     [0x78] = 0x2502,\n+     [0x79] = 0x2A7D,\n+     [0x7a] = 0x2A7E,\n+     [0x7b] = 0x03C0,\n+     [0x7c] = 0x2260,\n+     [0x7d] = 0x00A3,\n+     [0x7e] = 0x00B7,\n+   }\n+ };",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r1579126060",
            "id": 1579126060,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eH40s",
            "original_commit_id": "33de88ebf5c4343b8780a530c198a5417773ea90",
            "original_line": 36,
            "original_position": 36,
            "original_start_line": null,
            "path": "deps/vterm/include/encoding/DECdrawing.inc",
            "position": null,
            "pull_request_review_id": 2021936674,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579126060/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T08:56:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579126060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r1579131048"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579131048"
                }
            },
            "author_association": "MEMBER",
            "body": "Those shouldn't be an issue, they compile fine with zig (in fact, that is _the_ preferred method on Windows...) For the record, here's the build flags from nvim-treesitter:\r\n```\r\n'zig',\r\n      'cc',\r\n      '-o',\r\n      'parser.so',\r\n      repo.files, // `src/parser.c`, `src/scanner.c` if it exists\r\n      '-lc',\r\n      '-Isrc',\r\n      '-shared',\r\n      '-Os',\r\n```\r\non non-Win, add `-Wall -Wextra -fPIC -Werror=implicit-function-declaration`",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2024-04-25T08:59:38Z",
            "diff_hunk": "@@ -0,0 +1,45 @@\n+Dependencies:\n+\n+- [x] libuv\n+- [-] lua\n+- [ ] luajit\n+- [x] MSGPACK_URL https://github.com/msgpack/msgpack-c/archive/c-6.0.1.tar.gz\n+- [x] UNIBILIUM_URL https://github.com/neovim/unibilium/archive/d72c3598e7ac5d1ebf86ee268b8b4ed95c0fa628.tar.gz\n+- [ ] LIBVTERM_URL https://github.com/neovim/libvterm/archive/v0.3.3.tar.gz\n+- [-] luv\n+- [-] lpeg\n+- [x] compat53 (c api part only - but likely enough)\n+- [x] TREESITTER_URL https://github.com/tree-sitter/tree-sitter/archive/v0.22.5.tar.gz\n+\n+non-glibc:\n+- [ ] GETTEXT_URL https://github.com/neovim/deps/raw/b9bf36eb31f27e8136d907da38fa23518927737e/opt/gettext-0.20.1.tar.gz\n+- [ ] LIBICONV_URL https://github.com/neovim/deps/raw/b9bf36eb31f27e8136d907da38fa23518927737e/opt/libiconv-1.17.tar.gz\n+\n+Runtime dependencies:\n+\n+- [ ] treesitter parsers",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r1579131048",
            "id": 1579131048,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eH6Co",
            "original_commit_id": "33de88ebf5c4343b8780a530c198a5417773ea90",
            "original_line": 19,
            "original_position": 20,
            "original_start_line": null,
            "path": "BRANCH_TODO.md",
            "position": null,
            "pull_request_review_id": 2021944008,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579131048/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T08:59:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579131048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r1850967349"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1850967349"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I tried this PR just of curiosity, and had issues to reproduce, which is mainly because archive URLs are used and they are not guaranteed to have the same hash everytime (see https://github.com/orgs/community/discussions/46034)\r\n\r\nIf we could switch to git commit hashes instead e.g:\r\n```\r\nzig fetch --save git+https://github.com/natecraddock/ziglua#5a7269eaddb13b118818690cea613ab25803683d\r\n```\r\n\r\nthis should solve the issue. What do you think about it?",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2024-11-20T20:53:20Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+.{\n+    .name = \"neovim\",\n+    .version = \"0.0.0\",\n+\n+    // This field is optional.\n+    // This is currently advisory only; Zig does not yet do anything\n+    // with this value.\n+    //.minimum_zig_version = \"0.12.0\",\n+\n+    // lpeg fetching from https://www.inf.puc-rio.br/~roberto/lpeg/lpeg-1.0.2.tar.gz doesn't work, bundlevendor for now\n+\n+    .dependencies = .{\n+        .ziglua = .{\n+            .url = \"https://github.com/natecraddock/ziglua/archive/5a7269eaddb13b118818690cea613ab25803683d.tar.gz\",",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r1850967349",
            "id": 1850967349,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5uU4U1",
            "original_commit_id": "6b62d225ed68f9419d7abc83feb8511b3fb9c65b",
            "original_line": 14,
            "original_position": 14,
            "original_start_line": null,
            "path": "build.zig.zon",
            "position": null,
            "pull_request_review_id": 2449677332,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 4,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1850967349/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-20T20:54:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1850967349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7147208?v=4",
                "events_url": "https://api.github.com/users/616b2f/events{/privacy}",
                "followers_url": "https://api.github.com/users/616b2f/followers",
                "following_url": "https://api.github.com/users/616b2f/following{/other_user}",
                "gists_url": "https://api.github.com/users/616b2f/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/616b2f",
                "id": 7147208,
                "login": "616b2f",
                "node_id": "MDQ6VXNlcjcxNDcyMDg=",
                "organizations_url": "https://api.github.com/users/616b2f/orgs",
                "received_events_url": "https://api.github.com/users/616b2f/received_events",
                "repos_url": "https://api.github.com/users/616b2f/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/616b2f/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/616b2f/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/616b2f",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r1851913605"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1851913605"
                }
            },
            "author_association": "MEMBER",
            "body": "Great suggestion. I presume this also applies to tag based archives ?",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2024-11-21T11:51:43Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+.{\n+    .name = \"neovim\",\n+    .version = \"0.0.0\",\n+\n+    // This field is optional.\n+    // This is currently advisory only; Zig does not yet do anything\n+    // with this value.\n+    //.minimum_zig_version = \"0.12.0\",\n+\n+    // lpeg fetching from https://www.inf.puc-rio.br/~roberto/lpeg/lpeg-1.0.2.tar.gz doesn't work, bundlevendor for now\n+\n+    .dependencies = .{\n+        .ziglua = .{\n+            .url = \"https://github.com/natecraddock/ziglua/archive/5a7269eaddb13b118818690cea613ab25803683d.tar.gz\",",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r1851913605",
            "id": 1851913605,
            "in_reply_to_id": 1850967349,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5uYfWF",
            "original_commit_id": "6b62d225ed68f9419d7abc83feb8511b3fb9c65b",
            "original_line": 14,
            "original_position": 14,
            "original_start_line": null,
            "path": "build.zig.zon",
            "position": null,
            "pull_request_review_id": 2451141737,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1851913605/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-21T11:51:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1851913605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r1852310212"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1852310212"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "yes - the hashes are only stable if the author uploads their own tarballs on github releases",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2024-11-21T15:03:16Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+.{\n+    .name = \"neovim\",\n+    .version = \"0.0.0\",\n+\n+    // This field is optional.\n+    // This is currently advisory only; Zig does not yet do anything\n+    // with this value.\n+    //.minimum_zig_version = \"0.12.0\",\n+\n+    // lpeg fetching from https://www.inf.puc-rio.br/~roberto/lpeg/lpeg-1.0.2.tar.gz doesn't work, bundlevendor for now\n+\n+    .dependencies = .{\n+        .ziglua = .{\n+            .url = \"https://github.com/natecraddock/ziglua/archive/5a7269eaddb13b118818690cea613ab25803683d.tar.gz\",",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r1852310212",
            "id": 1852310212,
            "in_reply_to_id": 1850967349,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5uaALE",
            "original_commit_id": "6b62d225ed68f9419d7abc83feb8511b3fb9c65b",
            "original_line": 14,
            "original_position": 14,
            "original_start_line": null,
            "path": "build.zig.zon",
            "position": null,
            "pull_request_review_id": 2451769001,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1852310212/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-21T15:03:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1852310212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36493671?v=4",
                "events_url": "https://api.github.com/users/p00f/events{/privacy}",
                "followers_url": "https://api.github.com/users/p00f/followers",
                "following_url": "https://api.github.com/users/p00f/following{/other_user}",
                "gists_url": "https://api.github.com/users/p00f/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/p00f",
                "id": 36493671,
                "login": "p00f",
                "node_id": "MDQ6VXNlcjM2NDkzNjcx",
                "organizations_url": "https://api.github.com/users/p00f/orgs",
                "received_events_url": "https://api.github.com/users/p00f/received_events",
                "repos_url": "https://api.github.com/users/p00f/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/p00f/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/p00f/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/p00f",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r1853068847"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1853068847"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Great suggestion. I presume this also applies to tag based archives ?\r\n\r\nIf I understood it correctly yes, because they rely on `git archive` command, and create it on the fly each time you request it and only cache it for a while to reduce the workload. And `git archive` does not guarantee that reproducibility.\r\n",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2024-11-21T23:12:42Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+.{\n+    .name = \"neovim\",\n+    .version = \"0.0.0\",\n+\n+    // This field is optional.\n+    // This is currently advisory only; Zig does not yet do anything\n+    // with this value.\n+    //.minimum_zig_version = \"0.12.0\",\n+\n+    // lpeg fetching from https://www.inf.puc-rio.br/~roberto/lpeg/lpeg-1.0.2.tar.gz doesn't work, bundlevendor for now\n+\n+    .dependencies = .{\n+        .ziglua = .{\n+            .url = \"https://github.com/natecraddock/ziglua/archive/5a7269eaddb13b118818690cea613ab25803683d.tar.gz\",",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r1853068847",
            "id": 1853068847,
            "in_reply_to_id": 1850967349,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5uc5Yv",
            "original_commit_id": "6b62d225ed68f9419d7abc83feb8511b3fb9c65b",
            "original_line": 14,
            "original_position": 14,
            "original_start_line": null,
            "path": "build.zig.zon",
            "position": null,
            "pull_request_review_id": 2452986586,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1853068847/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-21T23:12:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1853068847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7147208?v=4",
                "events_url": "https://api.github.com/users/616b2f/events{/privacy}",
                "followers_url": "https://api.github.com/users/616b2f/followers",
                "following_url": "https://api.github.com/users/616b2f/following{/other_user}",
                "gists_url": "https://api.github.com/users/616b2f/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/616b2f",
                "id": 7147208,
                "login": "616b2f",
                "node_id": "MDQ6VXNlcjcxNDcyMDg=",
                "organizations_url": "https://api.github.com/users/616b2f/orgs",
                "received_events_url": "https://api.github.com/users/616b2f/received_events",
                "repos_url": "https://api.github.com/users/616b2f/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/616b2f/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/616b2f/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/616b2f",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2052309058"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2052309058"
                }
            },
            "author_association": "MEMBER",
            "body": "Is the removal of the slash necessary?",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-04-21T11:57:05Z",
            "diff_hunk": "@@ -493,14 +493,17 @@ describe('LSP', function()\n               vim._with({ buf = _G.BUFFER }, function()\n                 keymap = vim.fn.maparg('K', 'n', false, false)\n               end)\n-              return keymap:match('<Lua %d+: .+/runtime/lua/vim/lsp%.lua:%d+>') ~= nil\n+              return keymap:match('<Lua %d+: .*runtime/lua/vim/lsp%.lua:%d+>') ~= nil",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2052309058",
            "id": 2052309058,
            "line": 494,
            "node_id": "PRRC_kwDOAPphoM56U8BC",
            "original_commit_id": "a3bd6ca1e11c5a013204a144896a7865ffbbe5f7",
            "original_line": 494,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": 5,
            "pull_request_review_id": 2781114418,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2052309058/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-21T11:57:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2052309058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2052851409"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2052851409"
                }
            },
            "author_association": "MEMBER",
            "body": "yes. The full path can be `runtime/lua/vim/lsp.lua` relative to CWD. ",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-04-21T18:46:32Z",
            "diff_hunk": "@@ -493,14 +493,17 @@ describe('LSP', function()\n               vim._with({ buf = _G.BUFFER }, function()\n                 keymap = vim.fn.maparg('K', 'n', false, false)\n               end)\n-              return keymap:match('<Lua %d+: .+/runtime/lua/vim/lsp%.lua:%d+>') ~= nil\n+              return keymap:match('<Lua %d+: .*runtime/lua/vim/lsp%.lua:%d+>') ~= nil",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2052851409",
            "id": 2052851409,
            "in_reply_to_id": 2052309058,
            "line": 494,
            "node_id": "PRRC_kwDOAPphoM56XAbR",
            "original_commit_id": "a3bd6ca1e11c5a013204a144896a7865ffbbe5f7",
            "original_line": 494,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": 5,
            "pull_request_review_id": 2782000335,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2052851409/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-21T18:46:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2052851409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2053461477"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053461477"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• A Zig-based build system has been added as an alternative to CMake. It is\r\n  currently limited in functionality, and CMake remains the recommended option\r\n```",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-04-22T07:03:01Z",
            "diff_hunk": "@@ -109,6 +109,12 @@ API\n \n • |vim.hl.range()| now allows multiple timed highlights\n \n+BUILD\n+\n+• A Zig-based build system has been added as an alternative to Cmake. It is\n+  currently limited in functionality, and Cmake remains the recommended option",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2053461477",
            "id": 2053461477,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56ZVXl",
            "original_commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "original_line": 113,
            "original_position": 7,
            "original_start_line": 114,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2782989912,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053461477/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-22T07:03:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053461477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2053957048"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053957048"
                }
            },
            "author_association": "MEMBER",
            "body": "should this live in `src/gen` ?",
            "commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "created_at": "2025-04-22T11:54:21Z",
            "diff_hunk": "",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2053957048",
            "id": 2053957048,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM56bOW4",
            "original_commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/gen_runtime.zig",
            "position": 1,
            "pull_request_review_id": 2783845669,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053957048/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "file",
            "updated_at": "2025-04-22T11:54:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053957048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2053960580"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053960580"
                }
            },
            "author_association": "MEMBER",
            "body": "a comment header with your \"what is nlua0 ?\" explanation would be helpful here.",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-04-22T11:56:45Z",
            "diff_hunk": "@@ -0,0 +1,113 @@\n+const std = @import(\"std\");",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2053960580",
            "id": 2053960580,
            "line": 8,
            "node_id": "PRRC_kwDOAPphoM56bPOE",
            "original_commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "original_line": 8,
            "original_position": 1,
            "original_start_line": null,
            "path": "src/nlua0.zig",
            "position": 8,
            "pull_request_review_id": 2783851611,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053960580/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-22T11:56:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053960580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2053961287"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053961287"
                }
            },
            "author_association": "MEMBER",
            "body": "does zig require/prefer 4-space indent or should we use 2-space indent for it?",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-04-22T11:57:15Z",
            "diff_hunk": "@@ -0,0 +1,113 @@\n+const std = @import(\"std\");\n+const ziglua = @import(\"ziglua\");\n+const options = @import(\"options\");\n+\n+const embedded_data = @import(\"embedded_data\");\n+\n+// these are common dependencies used by many generators\n+const hashy = @embedFile(\"gen/hashy.lua\");\n+const c_grammar = @embedFile(\"gen/c_grammar.lua\");\n+\n+const Lua = ziglua.Lua;\n+\n+extern \"c\" fn luaopen_mpack(ptr: *anyopaque) c_int;\n+extern \"c\" fn luaopen_lpeg(ptr: *anyopaque) c_int;\n+extern \"c\" fn luaopen_bit(ptr: *anyopaque) c_int;\n+\n+fn init() !*Lua {\n+    // Initialize the Lua vm\n+    var lua = try Lua.init(std.heap.c_allocator);",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2053961287",
            "id": 2053961287,
            "line": 26,
            "node_id": "PRRC_kwDOAPphoM56bPZH",
            "original_commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "original_line": 26,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nlua0.zig",
            "position": 26,
            "pull_request_review_id": 2783852780,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053961287/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-22T11:57:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053961287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2053967292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053967292"
                }
            },
            "author_association": "MEMBER",
            "body": "is the comment a TODO? 😅 ",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-04-22T12:01:15Z",
            "diff_hunk": "@@ -17,7 +17,8 @@ local sleep = uv.sleep\n --- Functions executing in the current nvim session/process being tested.\n local M = {}\n \n-local runtime_set = 'set runtimepath^=./build/lib/nvim/'\n+-- this is bullshit, just use the right one\n+M.runtime_set = 'set runtimepath^=./zig-out/lib,./build/lib/nvim/'",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2053967292",
            "id": 2053967292,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56bQ28",
            "original_commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "original_line": 21,
            "original_position": 6,
            "original_start_line": null,
            "path": "test/functional/testnvim.lua",
            "position": null,
            "pull_request_review_id": 2783862484,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053967292/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-22T12:01:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2053967292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2054181652"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2054181652"
                }
            },
            "author_association": "NONE",
            "body": "Zig prefers 4-space indentation and automatically inserts it when you call `zig fmt source.zig`.",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-04-22T13:57:27Z",
            "diff_hunk": "@@ -0,0 +1,113 @@\n+const std = @import(\"std\");\n+const ziglua = @import(\"ziglua\");\n+const options = @import(\"options\");\n+\n+const embedded_data = @import(\"embedded_data\");\n+\n+// these are common dependencies used by many generators\n+const hashy = @embedFile(\"gen/hashy.lua\");\n+const c_grammar = @embedFile(\"gen/c_grammar.lua\");\n+\n+const Lua = ziglua.Lua;\n+\n+extern \"c\" fn luaopen_mpack(ptr: *anyopaque) c_int;\n+extern \"c\" fn luaopen_lpeg(ptr: *anyopaque) c_int;\n+extern \"c\" fn luaopen_bit(ptr: *anyopaque) c_int;\n+\n+fn init() !*Lua {\n+    // Initialize the Lua vm\n+    var lua = try Lua.init(std.heap.c_allocator);",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2054181652",
            "id": 2054181652,
            "in_reply_to_id": 2053961287,
            "line": 26,
            "node_id": "PRRC_kwDOAPphoM56cFMU",
            "original_commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "original_line": 26,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nlua0.zig",
            "position": 26,
            "pull_request_review_id": 2784218768,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2054181652/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-22T13:57:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2054181652",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/48591413?v=4",
                "events_url": "https://api.github.com/users/chrboesch/events{/privacy}",
                "followers_url": "https://api.github.com/users/chrboesch/followers",
                "following_url": "https://api.github.com/users/chrboesch/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrboesch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chrboesch",
                "id": 48591413,
                "login": "chrboesch",
                "node_id": "MDQ6VXNlcjQ4NTkxNDEz",
                "organizations_url": "https://api.github.com/users/chrboesch/orgs",
                "received_events_url": "https://api.github.com/users/chrboesch/received_events",
                "repos_url": "https://api.github.com/users/chrboesch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chrboesch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrboesch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chrboesch",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2063195563"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063195563"
                }
            },
            "author_association": "MEMBER",
            "body": "The idea was that this file is a direct replacement for `runtime/CMakeLists.txt`  although this is not a requirement. `src/gen` might be a good place to centralize build-time zig code if we prefer that organization.",
            "commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "created_at": "2025-04-28T08:42:38Z",
            "diff_hunk": "",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2063195563",
            "id": 2063195563,
            "in_reply_to_id": 2053957048,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM56-d2r",
            "original_commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/gen_runtime.zig",
            "position": 1,
            "pull_request_review_id": 2798517323,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063195563/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "file",
            "updated_at": "2025-04-28T08:42:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063195563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2063537123"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063537123"
                }
            },
            "author_association": "MEMBER",
            "body": "I see. Would a name like `build_runtime.zig` make sense? up to you",
            "commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "created_at": "2025-04-28T12:17:18Z",
            "diff_hunk": "",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2063537123",
            "id": 2063537123,
            "in_reply_to_id": 2053957048,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM56_xPj",
            "original_commit_id": "e99f206124c3f25099f6661985ca2d38b3b59e7c",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/gen_runtime.zig",
            "position": 1,
            "pull_request_review_id": 2799095341,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063537123/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "file",
            "updated_at": "2025-04-28T12:17:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063537123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2063540855"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063540855"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n//! nlua0 is an interpreter for the \"bootstrap\" lua code we need to run before nvim can be\r\n```",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-04-28T12:19:48Z",
            "diff_hunk": "@@ -0,0 +1,120 @@\n+//! \"nlua\" is an abbreviation for nvim flavored lua, i e lua with the\n+//! extended standard library functionality added by nvim such as json, mpack\n+//! and libuv and a range of vim.* utility functions.\n+//!\n+//! nlua0 is an interpreter the lua code we need to run before nvim can be",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2063540855",
            "id": 2063540855,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_yJ3",
            "original_commit_id": "5f566f73d40d92562bd846b900fefad357841e00",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nlua0.zig",
            "position": null,
            "pull_request_review_id": 2799101787,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063540855/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T12:19:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063540855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2071671473"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2071671473"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "With this change, `nvim --version` no longer shows `Build Type` (cmake 4.0.1).",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-05-02T14:09:35Z",
            "diff_hunk": "@@ -12,6 +12,6 @@\n #endif\n \n #define NVIM_VERSION_CFLAGS \"${VERSION_STRING}\"\n-#define NVIM_VERSION_BUILD_TYPE \"$<CONFIG>\"\n+#define NVIM_VERSION_BUILD_TYPE \"${CONFIG}\"",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2071671473",
            "id": 2071671473,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM57ezKx",
            "original_commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "original_line": 15,
            "original_position": 5,
            "original_start_line": null,
            "path": "cmake.config/versiondef.h.in",
            "position": 5,
            "pull_request_review_id": 2812114121,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 4,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2071671473/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-02T14:10:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2071671473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11627708?v=4",
                "events_url": "https://api.github.com/users/e-kwsm/events{/privacy}",
                "followers_url": "https://api.github.com/users/e-kwsm/followers",
                "following_url": "https://api.github.com/users/e-kwsm/following{/other_user}",
                "gists_url": "https://api.github.com/users/e-kwsm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/e-kwsm",
                "id": 11627708,
                "login": "e-kwsm",
                "node_id": "MDQ6VXNlcjExNjI3NzA4",
                "organizations_url": "https://api.github.com/users/e-kwsm/orgs",
                "received_events_url": "https://api.github.com/users/e-kwsm/received_events",
                "repos_url": "https://api.github.com/users/e-kwsm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/e-kwsm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/e-kwsm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/e-kwsm",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2072046359"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072046359"
                }
            },
            "author_association": "NONE",
            "body": "What issue?",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-05-02T19:16:03Z",
            "diff_hunk": "@@ -0,0 +1,423 @@\n+const std = @import(\"std\");\n+const LazyPath = std.Build.LazyPath;\n+const build_lua = @import(\"src/build_lua.zig\");\n+const gen = @import(\"src/gen/gen_steps.zig\");\n+const runtime = @import(\"runtime/gen_runtime.zig\");\n+const tests = @import(\"test/run_tests.zig\");\n+\n+const version = struct {\n+    const major = 0;\n+    const minor = 12;\n+    const patch = 0;\n+    const prerelease = \"-dev\";\n+\n+    const api_level = 14;\n+    const api_level_compat = 0;\n+    const api_prerelease = true;\n+};\n+\n+// TODO(bfredl): this is for an upstream issue",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2072046359",
            "id": 2072046359,
            "line": 19,
            "node_id": "PRRC_kwDOAPphoM57gOsX",
            "original_commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "original_line": 19,
            "original_position": 19,
            "original_start_line": null,
            "path": "build.zig",
            "position": 19,
            "pull_request_review_id": 2812736905,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072046359/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-02T19:16:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072046359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44076?v=4",
                "events_url": "https://api.github.com/users/alexrp/events{/privacy}",
                "followers_url": "https://api.github.com/users/alexrp/followers",
                "following_url": "https://api.github.com/users/alexrp/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexrp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alexrp",
                "id": 44076,
                "login": "alexrp",
                "node_id": "MDQ6VXNlcjQ0MDc2",
                "organizations_url": "https://api.github.com/users/alexrp/orgs",
                "received_events_url": "https://api.github.com/users/alexrp/received_events",
                "repos_url": "https://api.github.com/users/alexrp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alexrp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexrp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alexrp",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2072048438"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072048438"
                }
            },
            "author_association": "NONE",
            "body": "If these are merely missing headers, but the function implementations are in libSystem, then please file a Zig issue so we can include the headers in the distribution.",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-05-02T19:17:54Z",
            "diff_hunk": "@@ -0,0 +1,423 @@\n+const std = @import(\"std\");\n+const LazyPath = std.Build.LazyPath;\n+const build_lua = @import(\"src/build_lua.zig\");\n+const gen = @import(\"src/gen/gen_steps.zig\");\n+const runtime = @import(\"runtime/gen_runtime.zig\");\n+const tests = @import(\"test/run_tests.zig\");\n+\n+const version = struct {\n+    const major = 0;\n+    const minor = 12;\n+    const patch = 0;\n+    const prerelease = \"-dev\";\n+\n+    const api_level = 14;\n+    const api_level_compat = 0;\n+    const api_prerelease = true;\n+};\n+\n+// TODO(bfredl): this is for an upstream issue\n+pub fn lazyArtifact(d: *std.Build.Dependency, name: []const u8) ?*std.Build.Step.Compile {\n+    var found: ?*std.Build.Step.Compile = null;\n+    for (d.builder.install_tls.step.dependencies.items) |dep_step| {\n+        const inst = dep_step.cast(std.Build.Step.InstallArtifact) orelse continue;\n+        if (std.mem.eql(u8, inst.artifact.name, name)) {\n+            if (found != null) std.debug.panic(\"artifact name '{s}' is ambiguous\", .{name});\n+            found = inst.artifact;\n+        }\n+    }\n+    return found;\n+}\n+\n+pub fn build(b: *std.Build) !void {\n+    const target = b.standardTargetOptions(.{});\n+    const optimize = b.standardOptimizeOption(.{});\n+\n+    const cross_compiling = b.option(bool, \"cross\", \"cross compile\") orelse false;\n+    // TODO(bfredl): option to set nlua0 target explicitly when cross compiling?\n+    const target_host = if (cross_compiling) b.graph.host else target;\n+    const optimize_host = .ReleaseSafe;\n+\n+    const t = target.result;\n+    const tag = t.os.tag;\n+\n+    // puc lua 5.1 is not ReleaseSafe \"safe\"\n+    const optimize_lua = if (optimize == .Debug or optimize == .ReleaseSafe) .ReleaseSmall else optimize;\n+\n+    const use_luajit = b.option(bool, \"luajit\", \"use luajit\") orelse false;\n+    const host_use_luajit = if (cross_compiling) false else use_luajit;\n+    const E = enum { luajit, lua51 };\n+\n+    const ziglua = b.dependency(\"lua_wrapper\", .{\n+        .target = target,\n+        .optimize = optimize_lua,\n+        .lang = if (use_luajit) E.luajit else E.lua51,\n+        .shared = false,\n+    });\n+\n+    const ziglua_host = if (cross_compiling) b.dependency(\"lua_wrapper\", .{\n+        .target = target_host,\n+        .optimize = optimize_lua,\n+        .lang = if (host_use_luajit) E.luajit else E.lua51,\n+        .shared = false,\n+    }) else ziglua;\n+\n+    const lpeg = b.dependency(\"lpeg\", .{});\n+\n+    const iconv_apple = if (cross_compiling and tag.isDarwin()) b.lazyDependency(\"iconv_apple\", .{ .target = target, .optimize = optimize }) else null;\n+\n+    // this is currently not necessary, as ziglua currently doesn't use lazy dependencies\n+    // to circumvent ziglua.artifact() failing in a bad way.\n+    // const lua = lazyArtifact(ziglua, \"lua\") orelse return;\n+    const lua = ziglua.artifact(\"lua\");\n+\n+    const libuv_dep = b.dependency(\"libuv\", .{ .target = target, .optimize = optimize });\n+    const libuv = libuv_dep.artifact(\"uv\");\n+\n+    const libluv = try build_lua.build_libluv(b, target, optimize, lua, libuv);\n+\n+    const utf8proc = b.dependency(\"utf8proc\", .{ .target = target, .optimize = optimize });\n+    const unibilium = b.dependency(\"unibilium\", .{ .target = target, .optimize = optimize });\n+    // TODO(bfredl): fix upstream bugs with UBSAN\n+    const treesitter = b.dependency(\"treesitter\", .{ .target = target, .optimize = .ReleaseFast });\n+\n+    const nlua0 = build_lua.build_nlua0(b, target_host, optimize_host, host_use_luajit, ziglua_host, lpeg);\n+\n+    // usual caveat emptor: might need to force a rebuild if the only change is\n+    // addition of new .c files, as those are not seen by any hash\n+    const subdirs = [_][]const u8{\n+        \"\", // src/nvim itself\n+        \"os/\",\n+        \"api/\",\n+        \"api/private/\",\n+        \"msgpack_rpc/\",\n+        \"tui/\",\n+        \"tui/termkey/\",\n+        \"event/\",\n+        \"eval/\",\n+        \"lib/\",\n+        \"lua/\",\n+        \"viml/\",\n+        \"viml/parser/\",\n+        \"vterm/\",\n+    };\n+\n+    // source names _relative_ src/nvim/, not including other src/ subdircs\n+    var nvim_sources = try std.ArrayList(gen.SourceItem).initCapacity(b.allocator, 100);\n+    var nvim_headers = try std.ArrayList([]u8).initCapacity(b.allocator, 100);\n+\n+    // both source headers and the {module}.h.generated.h files\n+    var api_headers = try std.ArrayList(std.Build.LazyPath).initCapacity(b.allocator, 10);\n+\n+    const is_windows = (target.result.os.tag == .windows);\n+    // TODO(bfredl): these should just become subdirs..\n+    const windows_only = [_][]const u8{ \"pty_proc_win.c\", \"pty_proc_win.h\", \"pty_conpty_win.c\", \"pty_conpty_win.h\", \"os_win_console.c\", \"win_defs.h\" };\n+    const unix_only = [_][]const u8{ \"unix_defs.h\", \"pty_proc_unix.c\", \"pty_proc_unix.h\" };\n+    const exclude_list = if (is_windows) &unix_only else &windows_only;\n+\n+    const src_dir = b.build_root.handle;\n+    for (subdirs) |s| {\n+        var dir = try src_dir.openDir(b.fmt(\"src/nvim/{s}\", .{s}), .{ .iterate = true });\n+        defer dir.close();\n+        var it = dir.iterateAssumeFirstIteration();\n+        const api_export = std.mem.eql(u8, s, \"api/\");\n+        const os_check = std.mem.eql(u8, s, \"os/\");\n+        entries: while (try it.next()) |entry| {\n+            if (entry.name.len < 3) continue;\n+            if (entry.name[0] < 'a' or entry.name[0] > 'z') continue;\n+            if (os_check) {\n+                for (exclude_list) |name| {\n+                    if (std.mem.eql(u8, name, entry.name)) {\n+                        continue :entries;\n+                    }\n+                }\n+            }\n+            if (std.mem.eql(u8, \".c\", entry.name[entry.name.len - 2 ..])) {\n+                try nvim_sources.append(.{ .name = b.fmt(\"{s}{s}\", .{ s, entry.name }), .api_export = api_export });\n+            }\n+            if (std.mem.eql(u8, \".h\", entry.name[entry.name.len - 2 ..])) {\n+                try nvim_headers.append(b.fmt(\"{s}{s}\", .{ s, entry.name }));\n+                if (api_export and !std.mem.eql(u8, \"ui_events.in.h\", entry.name)) {\n+                    try api_headers.append(b.path(b.fmt(\"src/nvim/{s}{s}\", .{ s, entry.name })));\n+                }\n+            }\n+        }\n+    }\n+\n+    const gen_config = b.addWriteFiles();\n+\n+    const version_lua = gen_config.add(\"nvim_version.lua\", lua_version_info(b));\n+\n+    var config_str = b.fmt(\"zig build -Doptimize={s}\", .{@tagName(optimize)});\n+    if (cross_compiling) {\n+        config_str = b.fmt(\"{s} -Dcross -Dtarget={s} (host: {s})\", .{ config_str, try t.linuxTriple(b.allocator), try b.graph.host.result.linuxTriple(b.allocator) });\n+    }\n+\n+    const versiondef_step = b.addConfigHeader(.{ .style = .{ .cmake = b.path(\"src/versiondef.h.in\") } }, .{\n+        .NVIM_VERSION_MAJOR = version.major,\n+        .NVIM_VERSION_MINOR = version.minor,\n+        .NVIM_VERSION_PATCH = version.patch,\n+        .NVIM_VERSION_PRERELEASE = version.prerelease,\n+        .VERSION_STRING = \"TODO\", // TODO(bfredl): not sure what to put here. summary already in \"config_str\"\n+        .CONFIG = config_str,\n+    });\n+    _ = gen_config.addCopyFile(versiondef_step.getOutput(), \"auto/versiondef.h\"); // run_preprocessor() workaronnd\n+\n+    const isLinux = tag == .linux;\n+    const modernUnix = tag.isDarwin() or tag.isBSD() or isLinux;\n+\n+    const ptrwidth = t.ptrBitWidth() / 8;\n+    const sysconfig_step = b.addConfigHeader(.{ .style = .{ .cmake = b.path(\"cmake.config/config.h.in\") } }, .{\n+        .SIZEOF_INT = t.cTypeByteSize(.int),\n+        .SIZEOF_INTMAX_T = t.cTypeByteSize(.longlong), // TODO\n+        .SIZEOF_LONG = t.cTypeByteSize(.long),\n+        .SIZEOF_SIZE_T = ptrwidth,\n+        .SIZEOF_VOID_PTR = ptrwidth,\n+\n+        .PROJECT_NAME = \"nvim\",\n+\n+        .HAVE__NSGETENVIRON = tag.isDarwin(),\n+        .HAVE_FD_CLOEXEC = modernUnix,\n+        .HAVE_FSEEKO = modernUnix,\n+        .HAVE_LANGINFO_H = modernUnix,\n+        .HAVE_NL_LANGINFO_CODESET = modernUnix,\n+        .HAVE_NL_MSG_CAT_CNTR = isLinux,\n+        .HAVE_PWD_FUNCS = modernUnix,\n+        .HAVE_READLINK = modernUnix,\n+        .HAVE_STRNLEN = modernUnix,\n+        .HAVE_STRCASECMP = modernUnix,\n+        .HAVE_STRINGS_H = modernUnix,\n+        .HAVE_STRNCASECMP = modernUnix,\n+        .HAVE_STRPTIME = modernUnix,\n+        .HAVE_XATTR = isLinux,\n+        .HAVE_SYS_SDT_H = false,\n+        .HAVE_SYS_UTSNAME_H = modernUnix,\n+        .HAVE_SYS_WAIT_H = false, // unused\n+        .HAVE_TERMIOS_H = modernUnix,\n+        .HAVE_WORKING_LIBINTL = isLinux,\n+        .UNIX = modernUnix,\n+        .CASE_INSENSITIVE_FILENAME = tag.isDarwin() or tag == .windows,\n+        .HAVE_SYS_UIO_H = modernUnix,\n+        .HAVE_READV = modernUnix,\n+        .HAVE_DIRFD_AND_FLOCK = modernUnix,\n+        .HAVE_FORKPTY = modernUnix and !tag.isDarwin(), // also on Darwin but we lack the headers :(\n+        .HAVE_BE64TOH = modernUnix and !tag.isDarwin(),",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2072048438",
            "id": 2072048438,
            "line": 204,
            "node_id": "PRRC_kwDOAPphoM57gPM2",
            "original_commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "original_line": 204,
            "original_position": 204,
            "original_start_line": 203,
            "path": "build.zig",
            "position": 204,
            "pull_request_review_id": 2812740968,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072048438/reactions"
            },
            "side": "RIGHT",
            "start_line": 203,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-02T19:17:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072048438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/44076?v=4",
                "events_url": "https://api.github.com/users/alexrp/events{/privacy}",
                "followers_url": "https://api.github.com/users/alexrp/followers",
                "following_url": "https://api.github.com/users/alexrp/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexrp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alexrp",
                "id": 44076,
                "login": "alexrp",
                "node_id": "MDQ6VXNlcjQ0MDc2",
                "organizations_url": "https://api.github.com/users/alexrp/orgs",
                "received_events_url": "https://api.github.com/users/alexrp/received_events",
                "repos_url": "https://api.github.com/users/alexrp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alexrp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexrp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alexrp",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2072049906"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072049906"
                }
            },
            "author_association": "MEMBER",
            "body": "https://github.com/ziglang/zig/pull/20051",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-05-02T19:19:21Z",
            "diff_hunk": "@@ -0,0 +1,423 @@\n+const std = @import(\"std\");\n+const LazyPath = std.Build.LazyPath;\n+const build_lua = @import(\"src/build_lua.zig\");\n+const gen = @import(\"src/gen/gen_steps.zig\");\n+const runtime = @import(\"runtime/gen_runtime.zig\");\n+const tests = @import(\"test/run_tests.zig\");\n+\n+const version = struct {\n+    const major = 0;\n+    const minor = 12;\n+    const patch = 0;\n+    const prerelease = \"-dev\";\n+\n+    const api_level = 14;\n+    const api_level_compat = 0;\n+    const api_prerelease = true;\n+};\n+\n+// TODO(bfredl): this is for an upstream issue",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2072049906",
            "id": 2072049906,
            "in_reply_to_id": 2072046359,
            "line": 19,
            "node_id": "PRRC_kwDOAPphoM57gPjy",
            "original_commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "original_line": 19,
            "original_position": 19,
            "original_start_line": null,
            "path": "build.zig",
            "position": 19,
            "pull_request_review_id": 2812743135,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072049906/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-02T19:19:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072049906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28344#discussion_r2072051168"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28344"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072051168"
                }
            },
            "author_association": "MEMBER",
            "body": "I did not own an apple computer when I wrote this but I do now, so I should investigate this again:p",
            "commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "created_at": "2025-05-02T19:20:36Z",
            "diff_hunk": "@@ -0,0 +1,423 @@\n+const std = @import(\"std\");\n+const LazyPath = std.Build.LazyPath;\n+const build_lua = @import(\"src/build_lua.zig\");\n+const gen = @import(\"src/gen/gen_steps.zig\");\n+const runtime = @import(\"runtime/gen_runtime.zig\");\n+const tests = @import(\"test/run_tests.zig\");\n+\n+const version = struct {\n+    const major = 0;\n+    const minor = 12;\n+    const patch = 0;\n+    const prerelease = \"-dev\";\n+\n+    const api_level = 14;\n+    const api_level_compat = 0;\n+    const api_prerelease = true;\n+};\n+\n+// TODO(bfredl): this is for an upstream issue\n+pub fn lazyArtifact(d: *std.Build.Dependency, name: []const u8) ?*std.Build.Step.Compile {\n+    var found: ?*std.Build.Step.Compile = null;\n+    for (d.builder.install_tls.step.dependencies.items) |dep_step| {\n+        const inst = dep_step.cast(std.Build.Step.InstallArtifact) orelse continue;\n+        if (std.mem.eql(u8, inst.artifact.name, name)) {\n+            if (found != null) std.debug.panic(\"artifact name '{s}' is ambiguous\", .{name});\n+            found = inst.artifact;\n+        }\n+    }\n+    return found;\n+}\n+\n+pub fn build(b: *std.Build) !void {\n+    const target = b.standardTargetOptions(.{});\n+    const optimize = b.standardOptimizeOption(.{});\n+\n+    const cross_compiling = b.option(bool, \"cross\", \"cross compile\") orelse false;\n+    // TODO(bfredl): option to set nlua0 target explicitly when cross compiling?\n+    const target_host = if (cross_compiling) b.graph.host else target;\n+    const optimize_host = .ReleaseSafe;\n+\n+    const t = target.result;\n+    const tag = t.os.tag;\n+\n+    // puc lua 5.1 is not ReleaseSafe \"safe\"\n+    const optimize_lua = if (optimize == .Debug or optimize == .ReleaseSafe) .ReleaseSmall else optimize;\n+\n+    const use_luajit = b.option(bool, \"luajit\", \"use luajit\") orelse false;\n+    const host_use_luajit = if (cross_compiling) false else use_luajit;\n+    const E = enum { luajit, lua51 };\n+\n+    const ziglua = b.dependency(\"lua_wrapper\", .{\n+        .target = target,\n+        .optimize = optimize_lua,\n+        .lang = if (use_luajit) E.luajit else E.lua51,\n+        .shared = false,\n+    });\n+\n+    const ziglua_host = if (cross_compiling) b.dependency(\"lua_wrapper\", .{\n+        .target = target_host,\n+        .optimize = optimize_lua,\n+        .lang = if (host_use_luajit) E.luajit else E.lua51,\n+        .shared = false,\n+    }) else ziglua;\n+\n+    const lpeg = b.dependency(\"lpeg\", .{});\n+\n+    const iconv_apple = if (cross_compiling and tag.isDarwin()) b.lazyDependency(\"iconv_apple\", .{ .target = target, .optimize = optimize }) else null;\n+\n+    // this is currently not necessary, as ziglua currently doesn't use lazy dependencies\n+    // to circumvent ziglua.artifact() failing in a bad way.\n+    // const lua = lazyArtifact(ziglua, \"lua\") orelse return;\n+    const lua = ziglua.artifact(\"lua\");\n+\n+    const libuv_dep = b.dependency(\"libuv\", .{ .target = target, .optimize = optimize });\n+    const libuv = libuv_dep.artifact(\"uv\");\n+\n+    const libluv = try build_lua.build_libluv(b, target, optimize, lua, libuv);\n+\n+    const utf8proc = b.dependency(\"utf8proc\", .{ .target = target, .optimize = optimize });\n+    const unibilium = b.dependency(\"unibilium\", .{ .target = target, .optimize = optimize });\n+    // TODO(bfredl): fix upstream bugs with UBSAN\n+    const treesitter = b.dependency(\"treesitter\", .{ .target = target, .optimize = .ReleaseFast });\n+\n+    const nlua0 = build_lua.build_nlua0(b, target_host, optimize_host, host_use_luajit, ziglua_host, lpeg);\n+\n+    // usual caveat emptor: might need to force a rebuild if the only change is\n+    // addition of new .c files, as those are not seen by any hash\n+    const subdirs = [_][]const u8{\n+        \"\", // src/nvim itself\n+        \"os/\",\n+        \"api/\",\n+        \"api/private/\",\n+        \"msgpack_rpc/\",\n+        \"tui/\",\n+        \"tui/termkey/\",\n+        \"event/\",\n+        \"eval/\",\n+        \"lib/\",\n+        \"lua/\",\n+        \"viml/\",\n+        \"viml/parser/\",\n+        \"vterm/\",\n+    };\n+\n+    // source names _relative_ src/nvim/, not including other src/ subdircs\n+    var nvim_sources = try std.ArrayList(gen.SourceItem).initCapacity(b.allocator, 100);\n+    var nvim_headers = try std.ArrayList([]u8).initCapacity(b.allocator, 100);\n+\n+    // both source headers and the {module}.h.generated.h files\n+    var api_headers = try std.ArrayList(std.Build.LazyPath).initCapacity(b.allocator, 10);\n+\n+    const is_windows = (target.result.os.tag == .windows);\n+    // TODO(bfredl): these should just become subdirs..\n+    const windows_only = [_][]const u8{ \"pty_proc_win.c\", \"pty_proc_win.h\", \"pty_conpty_win.c\", \"pty_conpty_win.h\", \"os_win_console.c\", \"win_defs.h\" };\n+    const unix_only = [_][]const u8{ \"unix_defs.h\", \"pty_proc_unix.c\", \"pty_proc_unix.h\" };\n+    const exclude_list = if (is_windows) &unix_only else &windows_only;\n+\n+    const src_dir = b.build_root.handle;\n+    for (subdirs) |s| {\n+        var dir = try src_dir.openDir(b.fmt(\"src/nvim/{s}\", .{s}), .{ .iterate = true });\n+        defer dir.close();\n+        var it = dir.iterateAssumeFirstIteration();\n+        const api_export = std.mem.eql(u8, s, \"api/\");\n+        const os_check = std.mem.eql(u8, s, \"os/\");\n+        entries: while (try it.next()) |entry| {\n+            if (entry.name.len < 3) continue;\n+            if (entry.name[0] < 'a' or entry.name[0] > 'z') continue;\n+            if (os_check) {\n+                for (exclude_list) |name| {\n+                    if (std.mem.eql(u8, name, entry.name)) {\n+                        continue :entries;\n+                    }\n+                }\n+            }\n+            if (std.mem.eql(u8, \".c\", entry.name[entry.name.len - 2 ..])) {\n+                try nvim_sources.append(.{ .name = b.fmt(\"{s}{s}\", .{ s, entry.name }), .api_export = api_export });\n+            }\n+            if (std.mem.eql(u8, \".h\", entry.name[entry.name.len - 2 ..])) {\n+                try nvim_headers.append(b.fmt(\"{s}{s}\", .{ s, entry.name }));\n+                if (api_export and !std.mem.eql(u8, \"ui_events.in.h\", entry.name)) {\n+                    try api_headers.append(b.path(b.fmt(\"src/nvim/{s}{s}\", .{ s, entry.name })));\n+                }\n+            }\n+        }\n+    }\n+\n+    const gen_config = b.addWriteFiles();\n+\n+    const version_lua = gen_config.add(\"nvim_version.lua\", lua_version_info(b));\n+\n+    var config_str = b.fmt(\"zig build -Doptimize={s}\", .{@tagName(optimize)});\n+    if (cross_compiling) {\n+        config_str = b.fmt(\"{s} -Dcross -Dtarget={s} (host: {s})\", .{ config_str, try t.linuxTriple(b.allocator), try b.graph.host.result.linuxTriple(b.allocator) });\n+    }\n+\n+    const versiondef_step = b.addConfigHeader(.{ .style = .{ .cmake = b.path(\"src/versiondef.h.in\") } }, .{\n+        .NVIM_VERSION_MAJOR = version.major,\n+        .NVIM_VERSION_MINOR = version.minor,\n+        .NVIM_VERSION_PATCH = version.patch,\n+        .NVIM_VERSION_PRERELEASE = version.prerelease,\n+        .VERSION_STRING = \"TODO\", // TODO(bfredl): not sure what to put here. summary already in \"config_str\"\n+        .CONFIG = config_str,\n+    });\n+    _ = gen_config.addCopyFile(versiondef_step.getOutput(), \"auto/versiondef.h\"); // run_preprocessor() workaronnd\n+\n+    const isLinux = tag == .linux;\n+    const modernUnix = tag.isDarwin() or tag.isBSD() or isLinux;\n+\n+    const ptrwidth = t.ptrBitWidth() / 8;\n+    const sysconfig_step = b.addConfigHeader(.{ .style = .{ .cmake = b.path(\"cmake.config/config.h.in\") } }, .{\n+        .SIZEOF_INT = t.cTypeByteSize(.int),\n+        .SIZEOF_INTMAX_T = t.cTypeByteSize(.longlong), // TODO\n+        .SIZEOF_LONG = t.cTypeByteSize(.long),\n+        .SIZEOF_SIZE_T = ptrwidth,\n+        .SIZEOF_VOID_PTR = ptrwidth,\n+\n+        .PROJECT_NAME = \"nvim\",\n+\n+        .HAVE__NSGETENVIRON = tag.isDarwin(),\n+        .HAVE_FD_CLOEXEC = modernUnix,\n+        .HAVE_FSEEKO = modernUnix,\n+        .HAVE_LANGINFO_H = modernUnix,\n+        .HAVE_NL_LANGINFO_CODESET = modernUnix,\n+        .HAVE_NL_MSG_CAT_CNTR = isLinux,\n+        .HAVE_PWD_FUNCS = modernUnix,\n+        .HAVE_READLINK = modernUnix,\n+        .HAVE_STRNLEN = modernUnix,\n+        .HAVE_STRCASECMP = modernUnix,\n+        .HAVE_STRINGS_H = modernUnix,\n+        .HAVE_STRNCASECMP = modernUnix,\n+        .HAVE_STRPTIME = modernUnix,\n+        .HAVE_XATTR = isLinux,\n+        .HAVE_SYS_SDT_H = false,\n+        .HAVE_SYS_UTSNAME_H = modernUnix,\n+        .HAVE_SYS_WAIT_H = false, // unused\n+        .HAVE_TERMIOS_H = modernUnix,\n+        .HAVE_WORKING_LIBINTL = isLinux,\n+        .UNIX = modernUnix,\n+        .CASE_INSENSITIVE_FILENAME = tag.isDarwin() or tag == .windows,\n+        .HAVE_SYS_UIO_H = modernUnix,\n+        .HAVE_READV = modernUnix,\n+        .HAVE_DIRFD_AND_FLOCK = modernUnix,\n+        .HAVE_FORKPTY = modernUnix and !tag.isDarwin(), // also on Darwin but we lack the headers :(\n+        .HAVE_BE64TOH = modernUnix and !tag.isDarwin(),",
            "html_url": "https://github.com/neovim/neovim/pull/28344#discussion_r2072051168",
            "id": 2072051168,
            "in_reply_to_id": 2072048438,
            "line": 204,
            "node_id": "PRRC_kwDOAPphoM57gP3g",
            "original_commit_id": "1f004970f00bd8ef7ad955b52857df136f82185b",
            "original_line": 204,
            "original_position": 204,
            "original_start_line": 203,
            "path": "build.zig",
            "position": 204,
            "pull_request_review_id": 2812745102,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072051168/reactions"
            },
            "side": "RIGHT",
            "start_line": 203,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-02T19:20:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072051168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "progress report: this can now generate `autocmd.[ch].generated.h` style prototype files.\r\n\r\nNote: (most) dependencies are not implemented yet. so `make deps` is still needed (or having everything available as part of your system).\r\n\r\nBut from a complete `.deps` or equivalent, `zig build wip` will emit these headers as `zig-out/include/` (temporarily, in the end zig-out should just contain a fully built nvim).\r\n\r\n",
            "created_at": "2024-04-20T11:55:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/28344#issuecomment-2067651057",
            "id": 2067651057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28344",
            "node_id": "IC_kwDOAPphoM57Pdnx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 13,
                "total_count": 13,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067651057/reactions"
            },
            "updated_at": "2024-04-20T11:55:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067651057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This now works in a base x86-64 linux system without `base-devel` or any system /usr/include headers, etc\r\n```\r\ncurl \"https://ziglang.org/download/0.12.0/zig-linux-x86_64-0.12.0.tar.xz\" > zig.tar.gz\r\ntar xf zig.tar.gz\r\ncurl \"https://codeload.github.com/bfredl/neovim/tar.gz/f39f1b9dd5c39bf32157fc56676e834fa6a5c698\" > neovim.tar.gz\r\ntar xf neovim.tar.gz\r\ncd neovim-f39f1b9dd5c39bf32157fc56676e834fa6a5c698/\r\ntime ../zig-linux-x86_64-0.12.0/zig build -Dtarget=x86_64-linux-gnu nvim_bin\r\nVIM=. zig-out/bin/nvim\r\n```\r\n\r\nWithout _any_ caching build time is c a 17 seconds on a modern multi-core system, more or less the same as cmake. with a global cache of pre-fetched .tar.gz archives ( `~/.cache/zig` ) but in a fresh checkout without zig-cache, the first build is 8 seconds.\r\n\r\nThere are some caveats of course like\r\n- built runtime files like `vim.vim` and generated docs are yet missing\r\n- uses a hardcoded config.h for x86_64-linux-gnu only\r\n- too much stuff gets _rebuilt_ on source/config changes, need some upstream improvements https://github.com/ziglang/zig/issues/19817\r\n\r\n![image](https://github.com/neovim/neovim/assets/1363104/7b35a9f6-2101-499c-a073-e949a4bc6089)\r\n\r\n",
            "created_at": "2024-05-05T09:13:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/28344#issuecomment-2094700112",
            "id": 2094700112,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28344",
            "node_id": "IC_kwDOAPphoM582pZQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 7,
                "hooray": 32,
                "laugh": 0,
                "rocket": 21,
                "total_count": 60,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094700112/reactions"
            },
            "updated_at": "2024-05-05T09:13:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094700112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've been working on this again lately, with a focus on cross-compiling. As a first basic step I've gotten cross-compiling for s390x-linux on a x86-linux host. (also a aarch64 mac os binary _as a treat_ but as I don't have a fruit os computer at home, so I've just did a basic `nvim --help` check for now).\r\n\r\nAs a first \"deliverable\" of a real life improvement (it ain't much but it is honest work..) this might be used to implement a faster s390x CI job. This is implemented by emulating 390x on a x86 host including doing all of the work of compiling deps and neovim inside the qemu emulation.  Instead running the compilation directly on \"bare\" x86 might speed up that part of the ci job significantly (and then run the functional-tests inside qemu) .\r\n\r\n",
            "created_at": "2024-11-21T13:11:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/28344#issuecomment-2491111651",
            "id": 2491111651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28344",
            "node_id": "IC_kwDOAPphoM6Ue1jj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 7,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 14,
                "total_count": 21,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2491111651/reactions"
            },
            "updated_at": "2024-11-21T13:11:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2491111651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "working on cleaning this up. Adds a CI job doing very basic verification that building and then `./zig-out/bin/nvim --version` works without erroring out. \r\n\r\nI think we merge this soon after tagging 0.11 . This is not really useful to end users yet, but it it makes sense to get it into CI and then improve on it (the rest of the damn build system, including running all tests) in follow-up PR:s during the 0.12 cycle.",
            "created_at": "2025-03-12T13:05:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/28344#issuecomment-2717824564",
            "id": 2717824564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28344",
            "node_id": "IC_kwDOAPphoM6h_rY0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 9,
                "total_count": 13,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717824564/reactions"
            },
            "updated_at": "2025-03-12T13:05:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2717824564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Did a first stab on `zig build functionaltest` . There are 26 failures and 16 errors remaining and a few more skipped tests than baseline (some missing strokes of the owl, like helptags, remaining tree-sitter parser issues, and external scripts like python).",
            "created_at": "2025-03-21T12:08:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/28344#issuecomment-2743184404",
            "id": 2743184404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28344",
            "node_id": "IC_kwDOAPphoM6jgawU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 12,
                "total_count": 12,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2743184404/reactions"
            },
            "updated_at": "2025-03-21T12:08:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2743184404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28344/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28344/commits",
    "created_at": "2024-04-15T12:33:16Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28344.diff",
    "draft": false,
    "head": {
        "label": "bfredl:wonderland",
        "ref": "wonderland",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/bfredl/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/bfredl/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/bfredl/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/bfredl/neovim/branches{/branch}",
            "clone_url": "https://github.com/bfredl/neovim.git",
            "collaborators_url": "https://api.github.com/repos/bfredl/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/bfredl/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/bfredl/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/bfredl/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/bfredl/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/bfredl/neovim/contributors",
            "created_at": "2014-06-20T19:51:31Z",
            "default_branch": "wonderland-branch",
            "deployments_url": "https://api.github.com/repos/bfredl/neovim/deployments",
            "description": "vim's rebirth for the 21st century",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/bfredl/neovim/downloads",
            "events_url": "https://api.github.com/repos/bfredl/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/bfredl/neovim/forks",
            "full_name": "bfredl/neovim",
            "git_commits_url": "https://api.github.com/repos/bfredl/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/bfredl/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/bfredl/neovim/git/tags{/sha}",
            "git_url": "git://github.com/bfredl/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://neovim.org/",
            "hooks_url": "https://api.github.com/repos/bfredl/neovim/hooks",
            "html_url": "https://github.com/bfredl/neovim",
            "id": 21050434,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/bfredl/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/bfredl/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/bfredl/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/bfredl/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/bfredl/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/bfredl/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/bfredl/neovim/merges",
            "milestones_url": "https://api.github.com/repos/bfredl/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTA1MDQzNA==",
            "notifications_url": "https://api.github.com/repos/bfredl/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/bfredl/neovim/pulls{/number}",
            "pushed_at": "2025-05-05T08:50:26Z",
            "releases_url": "https://api.github.com/repos/bfredl/neovim/releases{/id}",
            "size": 326250,
            "ssh_url": "git@github.com:bfredl/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/bfredl/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/bfredl/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/bfredl/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/bfredl/neovim/subscription",
            "svn_url": "https://github.com/bfredl/neovim",
            "tags_url": "https://api.github.com/repos/bfredl/neovim/tags",
            "teams_url": "https://api.github.com/repos/bfredl/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/bfredl/neovim/git/trees{/sha}",
            "updated_at": "2025-01-16T13:11:08Z",
            "url": "https://api.github.com/repos/bfredl/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "1f004970f00bd8ef7ad955b52857df136f82185b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28344",
    "id": 1823190197,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28344",
    "labels": [
        {
            "color": "0052CC",
            "default": false,
            "description": "Enable CI for s390x",
            "id": 6154834276,
            "name": "ci:s390x",
            "node_id": "LA_kwDOAPphoM8AAAABbttRZA",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:s390x"
        }
    ],
    "locked": false,
    "merge_commit_sha": "da401ca25b4dbef121da627fdcdc1dbaf8b7e092",
    "merged_at": "2025-05-02T08:34:26Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5sq6y1",
    "number": 28344,
    "patch_url": "https://github.com/neovim/neovim/pull/28344.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28344/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/1f004970f00bd8ef7ad955b52857df136f82185b",
    "title": "feat(build): build.zig MVP: build and run functionaltests on linux",
    "updated_at": "2025-05-02T19:20:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28344",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    }
}