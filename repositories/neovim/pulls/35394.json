{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35394/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35394/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35394"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35394"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35394/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35394"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/1968d483e55aaf5613148f778ab61cc3c194107d"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6294,
            "forks_count": 6294,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1994,
            "open_issues_count": 1994,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-02T02:10:04Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 340229,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92438,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-02T02:37:13Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92438,
            "watchers_count": 92438,
            "web_commit_signoff_required": false
        },
        "sha": "516363e6baa0329dac4b048526e3deadb0d580d0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: terminal mode has bugs\r\nSolution: bug spray",
    "closed_at": "2025-08-26T08:49:12Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35394#discussion_r2286079062"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35394"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286079062"
                }
            },
            "author_association": "MEMBER",
            "body": "Setting `topline` like this doesn't play well with windows with `&wrap` set that are smaller than their terminals (possible if you have the same terminal open in a larger window); a buffer line may map to many screen lines, so these can scroll too far up and leave the cursor outside the viewport.\r\n\r\nThat hasn't changed with this PR. In any case, if such a window is current, `validate_cursor` will later set its `topline` to something somewhat sensible.",
            "commit_id": "1968d483e55aaf5613148f778ab61cc3c194107d",
            "created_at": "2025-08-19T18:55:06Z",
            "diff_hunk": "@@ -2230,16 +2304,25 @@ static void refresh_screen(Terminal *term, buf_T *buf)\n   changed_lines(buf, change_start, 0, change_end, added, true);\n   term->invalid_start = INT_MAX;\n   term->invalid_end = -1;\n+  if (is_focused(term)) {\n+    trigger_textchangedt = true;\n+  }\n }\n \n static void adjust_topline(Terminal *term, buf_T *buf, int added)\n {\n   FOR_ALL_TAB_WINDOWS(tp, wp) {\n     if (wp->w_buffer == buf) {\n+      if (wp == curwin && is_focused(term)) {\n+        // Move window cursor to terminal cursor's position and \"follow\" output.\n+        terminal_check_cursor();\n+        continue;\n+      }\n+\n       linenr_T ml_end = buf->b_ml.ml_line_count;\n       bool following = ml_end == wp->w_cursor.lnum + added;  // cursor at end?\n \n-      if (following || (wp == curwin && is_focused(term))) {\n+      if (following) {\n         // \"Follow\" the terminal output\n         wp->w_cursor.lnum = ml_end;\n         set_topline(wp, MAX(wp->w_cursor.lnum - wp->w_view_height + 1, 1));",
            "html_url": "https://github.com/neovim/neovim/pull/35394#discussion_r2286079062",
            "id": 2286079062,
            "line": 2331,
            "node_id": "PRRC_kwDOAPphoM6IQsxW",
            "original_commit_id": "b684174d7136f7b7a2cd3f7d23ff46ab345496e7",
            "original_line": 2331,
            "original_position": 342,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": 359,
            "pull_request_review_id": 3133479613,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35394",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286079062/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T18:55:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286079062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35394#discussion_r2286130153"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35394"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286130153"
                }
            },
            "author_association": "MEMBER",
            "body": "As noted in the commit messages, I’m not sure how this event was originally meant to work; triggering on `must_redraw` didn’t make sense. Open to suggestions 😌\r\n\r\nFor comparison, Vim’s `TextChangedT` ties to terminal cursor updates, which often happen (usually twice?) on nearly every pty write even if there’s no visible effect (e.g. escape codes, even if incomplete), unlike Nvim (though Nvim's also happens due to unrelated redraws, like `:set stl=`).\r\n\r\nIn this PR it instead triggers when `b:changedtick` changes (when the terminal refreshes invalidated rows, which also handles resizes), but not cursor changes anymore (unless we want that too). It also no longer triggers `TextChanged` when returning to normal mode from changes in terminal mode.",
            "commit_id": "1968d483e55aaf5613148f778ab61cc3c194107d",
            "created_at": "2025-08-19T19:20:16Z",
            "diff_hunk": "@@ -788,47 +838,80 @@ static void terminal_check_cursor(void)\n   curwin->w_wcol = term->cursor.col + win_col_off(curwin);\n   curwin->w_cursor.lnum = MIN(curbuf->b_ml.ml_line_count,\n                               row_to_linenr(term, term->cursor.row));\n+  set_topline(curwin, MAX(curbuf->b_ml.ml_line_count - curwin->w_view_height + 1, 1));\n   // Nudge cursor when returning to normal-mode.\n   int off = is_focused(term) ? 0 : (curwin->w_p_rl ? 1 : -1);\n   coladvance(curwin, MAX(0, term->cursor.col + off));\n }\n \n-// Function executed before each iteration of terminal mode.\n-// Return:\n-//   1 if the iteration should continue normally\n-//   0 if the main loop must exit\n+static bool terminal_check_focus(TerminalState *const s)\n+  FUNC_ATTR_NONNULL_ALL\n+{\n+  if (curbuf->terminal == NULL) {\n+    return false;\n+  }\n+\n+  if (s->save_curwin_handle != curwin->handle) {\n+    // Terminal window changed, update window options.\n+    unset_terminal_winopts(s);\n+    set_terminal_winopts(s);\n+  }\n+  if (s->term != curbuf->terminal) {\n+    // Active terminal buffer changed, flush terminal's cursor state to the UI.\n+    terminal_focus(s->term, false);\n+\n+    s->term = curbuf->terminal;\n+    s->term->pending.cursor = true;\n+    invalidate_terminal(s->term, -1, -1);\n+    terminal_focus(s->term, true);\n+    trigger_textchangedt = false;\n+  }\n+  return true;\n+}\n+\n+/// Function executed before each iteration of terminal mode.\n+///\n+/// @return:\n+///           1 if the iteration should continue normally\n+///           0 if the main loop must exit\n static int terminal_check(VimState *state)\n {\n   TerminalState *const s = (TerminalState *)state;\n \n-  if (stop_insert_mode) {\n+  if (stop_insert_mode || !terminal_check_focus(s)) {\n     return 0;\n   }\n \n-  assert(s->term == curbuf->terminal);\n+  // Validate topline and cursor position for autocommands. Especially important for WinScrolled.\n   terminal_check_cursor();\n   validate_cursor(curwin);\n \n-  if (must_redraw) {\n-    update_screen();\n+  // Don't let autocommands free the terminal from under our fingers.\n+  s->term->refcount++;\n \n-    // Make sure an invoked autocmd doesn't delete the buffer (and the\n-    // terminal) under our fingers.\n-    curbuf->b_locked++;\n-\n-    // save and restore curwin and curbuf, in case the autocmd changes them\n-    aco_save_T aco;\n-    aucmd_prepbuf(&aco, curbuf);\n+  if (trigger_textchangedt) {\n     apply_autocmds(EVENT_TEXTCHANGEDT, NULL, NULL, false, curbuf);",
            "html_url": "https://github.com/neovim/neovim/pull/35394#discussion_r2286130153",
            "id": 2286130153,
            "line": 896,
            "node_id": "PRRC_kwDOAPphoM6IQ5Pp",
            "original_commit_id": "b684174d7136f7b7a2cd3f7d23ff46ab345496e7",
            "original_line": 896,
            "original_position": 269,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": 292,
            "pull_request_review_id": 3133550053,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35394",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286130153/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T20:03:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286130153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35394#discussion_r2286198071"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35394"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286198071"
                }
            },
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/20680 @Shougo are you using this event ?",
            "commit_id": "1968d483e55aaf5613148f778ab61cc3c194107d",
            "created_at": "2025-08-19T19:56:46Z",
            "diff_hunk": "@@ -788,47 +838,80 @@ static void terminal_check_cursor(void)\n   curwin->w_wcol = term->cursor.col + win_col_off(curwin);\n   curwin->w_cursor.lnum = MIN(curbuf->b_ml.ml_line_count,\n                               row_to_linenr(term, term->cursor.row));\n+  set_topline(curwin, MAX(curbuf->b_ml.ml_line_count - curwin->w_view_height + 1, 1));\n   // Nudge cursor when returning to normal-mode.\n   int off = is_focused(term) ? 0 : (curwin->w_p_rl ? 1 : -1);\n   coladvance(curwin, MAX(0, term->cursor.col + off));\n }\n \n-// Function executed before each iteration of terminal mode.\n-// Return:\n-//   1 if the iteration should continue normally\n-//   0 if the main loop must exit\n+static bool terminal_check_focus(TerminalState *const s)\n+  FUNC_ATTR_NONNULL_ALL\n+{\n+  if (curbuf->terminal == NULL) {\n+    return false;\n+  }\n+\n+  if (s->save_curwin_handle != curwin->handle) {\n+    // Terminal window changed, update window options.\n+    unset_terminal_winopts(s);\n+    set_terminal_winopts(s);\n+  }\n+  if (s->term != curbuf->terminal) {\n+    // Active terminal buffer changed, flush terminal's cursor state to the UI.\n+    terminal_focus(s->term, false);\n+\n+    s->term = curbuf->terminal;\n+    s->term->pending.cursor = true;\n+    invalidate_terminal(s->term, -1, -1);\n+    terminal_focus(s->term, true);\n+    trigger_textchangedt = false;\n+  }\n+  return true;\n+}\n+\n+/// Function executed before each iteration of terminal mode.\n+///\n+/// @return:\n+///           1 if the iteration should continue normally\n+///           0 if the main loop must exit\n static int terminal_check(VimState *state)\n {\n   TerminalState *const s = (TerminalState *)state;\n \n-  if (stop_insert_mode) {\n+  if (stop_insert_mode || !terminal_check_focus(s)) {\n     return 0;\n   }\n \n-  assert(s->term == curbuf->terminal);\n+  // Validate topline and cursor position for autocommands. Especially important for WinScrolled.\n   terminal_check_cursor();\n   validate_cursor(curwin);\n \n-  if (must_redraw) {\n-    update_screen();\n+  // Don't let autocommands free the terminal from under our fingers.\n+  s->term->refcount++;\n \n-    // Make sure an invoked autocmd doesn't delete the buffer (and the\n-    // terminal) under our fingers.\n-    curbuf->b_locked++;\n-\n-    // save and restore curwin and curbuf, in case the autocmd changes them\n-    aco_save_T aco;\n-    aucmd_prepbuf(&aco, curbuf);\n+  if (trigger_textchangedt) {\n     apply_autocmds(EVENT_TEXTCHANGEDT, NULL, NULL, false, curbuf);",
            "html_url": "https://github.com/neovim/neovim/pull/35394#discussion_r2286198071",
            "id": 2286198071,
            "in_reply_to_id": 2286130153,
            "line": 896,
            "node_id": "PRRC_kwDOAPphoM6IRJ03",
            "original_commit_id": "b684174d7136f7b7a2cd3f7d23ff46ab345496e7",
            "original_line": 896,
            "original_position": 269,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": 292,
            "pull_request_review_id": 3133642446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35394",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286198071/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-19T19:56:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2286198071",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Can't remember if there was anything else I wanted to fix, so this'll do.\r\nGonna drive this branch locally for a bit to see if I notice any regressions or whatever.",
            "created_at": "2025-08-19T19:10:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/35394#issuecomment-3201913621",
            "id": 3201913621,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35394",
            "node_id": "IC_kwDOAPphoM6-2VMV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3201913621/reactions"
            },
            "updated_at": "2025-08-19T19:10:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3201913621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Things have been OK on my setup. Let's see how it does in the wild... :relieved:",
            "created_at": "2025-08-26T08:49:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/35394#issuecomment-3223224680",
            "id": 3223224680,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35394",
            "node_id": "IC_kwDOAPphoM7AHoFo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3223224680/reactions"
            },
            "updated_at": "2025-08-26T08:49:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3223224680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35394/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35394/commits",
    "created_at": "2025-08-19T15:50:59Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35394.diff",
    "draft": false,
    "head": {
        "label": "seandewar:term-fixes",
        "ref": "term-fixes",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/seandewar/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/seandewar/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/seandewar/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/seandewar/neovim/branches{/branch}",
            "clone_url": "https://github.com/seandewar/neovim.git",
            "collaborators_url": "https://api.github.com/repos/seandewar/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/seandewar/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/seandewar/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/seandewar/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/seandewar/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/seandewar/neovim/contributors",
            "created_at": "2020-10-20T16:45:01Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/seandewar/neovim/deployments",
            "description": "[Contribution Fork] Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/seandewar/neovim/downloads",
            "events_url": "https://api.github.com/repos/seandewar/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/seandewar/neovim/forks",
            "full_name": "seandewar/neovim",
            "git_commits_url": "https://api.github.com/repos/seandewar/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/seandewar/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/seandewar/neovim/git/tags{/sha}",
            "git_url": "git://github.com/seandewar/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/seandewar/neovim/hooks",
            "html_url": "https://github.com/seandewar/neovim",
            "id": 305773353,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/seandewar/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/seandewar/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/seandewar/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/seandewar/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/seandewar/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/seandewar/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/seandewar/neovim/merges",
            "milestones_url": "https://api.github.com/repos/seandewar/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMDU3NzMzNTM=",
            "notifications_url": "https://api.github.com/repos/seandewar/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/seandewar/neovim/pulls{/number}",
            "pushed_at": "2025-08-26T20:27:54Z",
            "releases_url": "https://api.github.com/repos/seandewar/neovim/releases{/id}",
            "size": 329191,
            "ssh_url": "git@github.com:seandewar/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/seandewar/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/seandewar/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/seandewar/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/seandewar/neovim/subscription",
            "svn_url": "https://github.com/seandewar/neovim",
            "tags_url": "https://api.github.com/repos/seandewar/neovim/tags",
            "teams_url": "https://api.github.com/repos/seandewar/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/seandewar/neovim/git/trees{/sha}",
            "updated_at": "2025-04-01T00:24:21Z",
            "url": "https://api.github.com/repos/seandewar/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "1968d483e55aaf5613148f778ab61cc3c194107d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
            "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
            "followers_url": "https://api.github.com/users/seandewar/followers",
            "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
            "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/seandewar",
            "id": 6256228,
            "login": "seandewar",
            "node_id": "MDQ6VXNlcjYyNTYyMjg=",
            "organizations_url": "https://api.github.com/users/seandewar/orgs",
            "received_events_url": "https://api.github.com/users/seandewar/received_events",
            "repos_url": "https://api.github.com/users/seandewar/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/seandewar",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35394",
    "id": 2756916037,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35394",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "6a409e05071735c4b1c0272d51d8871b58384eee",
    "merged_at": "2025-08-26T08:49:12Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6kUzNF",
    "number": 35394,
    "patch_url": "https://github.com/neovim/neovim/pull/35394.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35394/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/1968d483e55aaf5613148f778ab61cc3c194107d",
    "title": "fix(terminal): various fixes",
    "updated_at": "2025-08-26T08:49:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35394",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
        "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
        "followers_url": "https://api.github.com/users/seandewar/followers",
        "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
        "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seandewar",
        "id": 6256228,
        "login": "seandewar",
        "node_id": "MDQ6VXNlcjYyNTYyMjg=",
        "organizations_url": "https://api.github.com/users/seandewar/orgs",
        "received_events_url": "https://api.github.com/users/seandewar/received_events",
        "repos_url": "https://api.github.com/users/seandewar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seandewar",
        "user_view_type": "public"
    }
}