{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33122/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33122/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33122"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33122"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33122/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33122"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7505946a590017fb218d806ac11f427487585746"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5980,
            "forks_count": 5980,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1910,
            "open_issues_count": 1910,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-04-01T00:41:49Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 314758,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 88175,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-04-01T02:47:16Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 88175,
            "watchers_count": 88175,
            "web_commit_signoff_required": false
        },
        "sha": "cb247e06f0ba19ca55252de0aebe249ed4c3635f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "fix #33075",
    "closed_at": "2025-03-30T20:29:37Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33122#discussion_r2020245484"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020245484"
                }
            },
            "author_association": "MEMBER",
            "body": "@mfussenegger attempt to a vim.lsp.commands example here\r\n\r\nif you have any comments, I will fix in a followup.",
            "commit_id": "7505946a590017fb218d806ac11f427487585746",
            "created_at": "2025-03-30T20:27:41Z",
            "diff_hunk": "@@ -812,61 +813,90 @@ client_is_stopped({client_id})                   *vim.lsp.client_is_stopped()*\n         (`boolean`) stopped true if client is stopped, false otherwise.\n \n commands                                                    *vim.lsp.commands*\n-    Registry for client side commands. This is an extension point for plugins\n-    to handle custom commands which are not part of the core language server\n-    protocol specification.\n-\n-    The registry is a table where the key is a unique command name, and the\n-    value is a function which is called if any LSP action (code action, code\n-    lenses, ...) triggers the command.\n-\n-    If an LSP response contains a command for which no matching entry is\n-    available in this registry, the command will be executed via the LSP\n-    server using `workspace/executeCommand`.\n-\n-    The first argument to the function will be the `Command`: Command title:\n-    String command: String arguments?: any[]\n+    Registry (a table) for client-side handlers, for custom server-commands\n+    that are not in the LSP specification.\n+\n+    If an LSP response contains a command which is not found in\n+    `vim.lsp.commands`, the command will be executed via the LSP server using\n+    `workspace/executeCommand`.\n+\n+    Each key in the table is a unique command name, and each value is a\n+    function which is called when an LSP action (code action, code lenses,\n+    …) triggers the command.\n+    • Argument 1 is the `Command`: >\n+      Command\n+      title: String\n+      command: String\n+      arguments?: any[]\n+<\n+    • Argument 2 is the |lsp-handler| `ctx`.\n \n-    The second argument is the `ctx` of |lsp-handler|\n+    Example: >lua\n+        vim.lsp.commands['java.action.generateToStringPrompt'] = function(_, ctx)",
            "html_url": "https://github.com/neovim/neovim/pull/33122#discussion_r2020245484",
            "id": 2020245484,
            "line": 835,
            "node_id": "PRRC_kwDOAPphoM54an_s",
            "original_commit_id": "7505946a590017fb218d806ac11f427487585746",
            "original_line": 835,
            "original_position": 73,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 73,
            "pull_request_review_id": 2727999712,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020245484/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-30T20:27:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020245484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33122#discussion_r2020245607"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020245607"
                }
            },
            "author_association": "MEMBER",
            "body": "something I noticed: this still \"inherits\" the `*` config, is that intended?",
            "commit_id": "7505946a590017fb218d806ac11f427487585746",
            "created_at": "2025-03-30T20:28:24Z",
            "diff_hunk": "@@ -812,61 +813,90 @@ client_is_stopped({client_id})                   *vim.lsp.client_is_stopped()*\n         (`boolean`) stopped true if client is stopped, false otherwise.\n \n commands                                                    *vim.lsp.commands*\n-    Registry for client side commands. This is an extension point for plugins\n-    to handle custom commands which are not part of the core language server\n-    protocol specification.\n-\n-    The registry is a table where the key is a unique command name, and the\n-    value is a function which is called if any LSP action (code action, code\n-    lenses, ...) triggers the command.\n-\n-    If an LSP response contains a command for which no matching entry is\n-    available in this registry, the command will be executed via the LSP\n-    server using `workspace/executeCommand`.\n-\n-    The first argument to the function will be the `Command`: Command title:\n-    String command: String arguments?: any[]\n+    Registry (a table) for client-side handlers, for custom server-commands\n+    that are not in the LSP specification.\n+\n+    If an LSP response contains a command which is not found in\n+    `vim.lsp.commands`, the command will be executed via the LSP server using\n+    `workspace/executeCommand`.\n+\n+    Each key in the table is a unique command name, and each value is a\n+    function which is called when an LSP action (code action, code lenses,\n+    …) triggers the command.\n+    • Argument 1 is the `Command`: >\n+      Command\n+      title: String\n+      command: String\n+      arguments?: any[]\n+<\n+    • Argument 2 is the |lsp-handler| `ctx`.\n \n-    The second argument is the `ctx` of |lsp-handler|\n+    Example: >lua\n+        vim.lsp.commands['java.action.generateToStringPrompt'] = function(_, ctx)\n+          require(\"jdtls.async\").run(function()\n+            local _, result = request(ctx.bufnr, 'java/checkToStringStatus', ctx.params)\n+            local fields = ui.pick_many(result.fields, 'Include item in toString?', function(x)\n+              return string.format('%s: %s', x.name, x.type)\n+            end)\n+            local _, edit = request(ctx.bufnr, 'java/generateToString', { context = ctx.params; fields = fields; })\n+            vim.lsp.util.apply_workspace_edit(edit, offset_encoding)\n+          end)\n+        end\n+<\n \n config({name}, {cfg})                                       *vim.lsp.config()*\n-    Update the configuration for an LSP client.\n-\n-    Use name '*' to set default configuration for all clients.\n+    Sets the default configuration for an LSP client (or all clients if the\n+    special name \"*\" is used).\n \n-    Can also be table-assigned to redefine the configuration for a client.\n+    Can also be accessed by table-indexing (`vim.lsp.config[…]`) to get the\n+    resolved config, or redefine the config (instead of \"merging\" with the\n+    config chain).\n \n     Examples:\n-    • Add a root marker for all clients: >lua\n-        vim.lsp.config('*', {\n-          root_markers = { '.git' },\n-        })\n+    • Add root markers for ALL clients: >lua\n+      vim.lsp.config('*', {\n+        root_markers = { '.git', '.hg' },\n+      })\n <\n-    • Add additional capabilities to all clients: >lua\n-        vim.lsp.config('*', {\n-          capabilities = {\n-            textDocument = {\n-              semanticTokens = {\n-                multilineTokenSupport = true,\n-              }\n-            }\n+    • Add capabilities to ALL clients: >lua\n+      vim.lsp.config('*', {\n+      capabilities = {\n+        textDocument = {\n+          semanticTokens = {\n+            multilineTokenSupport = true,\n           }\n-        })\n+        }\n+      }\n+    })\n <\n-    • (Re-)define the configuration for clangd: >lua\n-        vim.lsp.config.clangd = {\n-          cmd = {\n-            'clangd',\n-            '--clang-tidy',\n-            '--background-index',\n-            '--offset-encoding=utf-8',\n-          },\n-          root_markers = { '.clangd', 'compile_commands.json' },\n-          filetypes = { 'c', 'cpp' },\n+    • Add root markers and capabilities for \"clangd\": >lua\n+      vim.lsp.config('clangd', {\n+      root_markers = { '.clang-format', 'compile_commands.json' },\n+      capabilities = {\n+        textDocument = {\n+          completion = {\n+            completionItem = {\n+              snippetSupport = true,\n+            }\n+          }\n         }\n+      }\n+    })\n+<\n+    • (Re-)define the \"clangd\" configuration (overrides the resolved chain): >lua\n+      vim.lsp.config.clangd = {",
            "html_url": "https://github.com/neovim/neovim/pull/33122#discussion_r2020245607",
            "id": 2020245607,
            "line": 887,
            "node_id": "PRRC_kwDOAPphoM54aoBn",
            "original_commit_id": "7505946a590017fb218d806ac11f427487585746",
            "original_line": 887,
            "original_position": 152,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 152,
            "pull_request_review_id": 2727999888,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020245607/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-30T20:28:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020245607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33122#discussion_r2020277199"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020277199"
                }
            },
            "author_association": "MEMBER",
            "body": "I think the \"which links to\" part should be removed, as it depends on the colorscheme.",
            "commit_id": "7505946a590017fb218d806ac11f427487585746",
            "created_at": "2025-03-30T23:06:44Z",
            "diff_hunk": "@@ -3492,40 +3492,39 @@ nvim_open_win({buffer}, {enter}, {config})                   *nvim_open_win()*\n                       empty. The end-of-buffer region is hidden by setting\n                       `eob` flag of 'fillchars' to a space char, and clearing\n                       the |hl-EndOfBuffer| region in 'winhighlight'.\n-                  • border: Style of (optional) window border. This can either\n-                    be a string or an array. The string values are the same as\n-                    those described in 'winborder'. If it is an array, it\n-                    should have a length of eight or any divisor of eight. The\n-                    array will specify the eight chars building up the border\n-                    in a clockwise fashion starting with the top-left corner.\n-                    As an example, the double box style could be specified as: >\n-                     [ \"╔\", \"═\" ,\"╗\", \"║\", \"╝\", \"═\", \"╚\", \"║\" ].\n+                  • border: (`string|string[]`) (defaults to 'winborder'\n+                    option) Window border. The string form accepts the same\n+                    values as the 'winborder' option. The array form must have\n+                    a length of eight or any divisor of eight, specifying the\n+                    chars that form the border in a clockwise fashion starting\n+                    from the top-left corner. For example, the double-box\n+                    style can be specified as: >\n+                    [ \"╔\", \"═\" ,\"╗\", \"║\", \"╝\", \"═\", \"╚\", \"║\" ].\n <\n-                    If the number of chars are less than eight, they will be\n-                    repeated. Thus an ASCII border could be specified as >\n-                     [ \"/\", \"-\", \\\"\\\\\\\\\\\", \"|\" ],\n+                    If fewer than eight chars are given, they will be\n+                    repeated. An ASCII border could be specified as: >\n+                    [ \"/\", \"-\", \\\"\\\\\\\\\\\", \"|\" ],\n <\n-                    or all chars the same as >\n-                     [ \"x\" ].\n+                    Or one char for all sides: >\n+                    [ \"x\" ].\n <\n-                    An empty string can be used to turn off a specific border,\n-                    for instance, >\n-                     [ \"\", \"\", \"\", \">\", \"\", \"\", \"\", \"<\" ]\n+                    Empty string can be used to hide a specific border. This\n+                    example will show only vertical borders, not horizontal: >\n+                    [ \"\", \"\", \"\", \">\", \"\", \"\", \"\", \"<\" ]\n <\n-                    will only make vertical borders but not horizontal ones.\n-                    By default, `FloatBorder` highlight is used, which links\n-                    to `WinSeparator` when not defined. It could also be\n-                    specified by character: >\n-                     [ [\"+\", \"MyCorner\"], [\"x\", \"MyBorder\"] ].\n+                    By default, |hl-FloatBorder| highlight is used, which\n+                    links to |hl-WinSeparator| when not defined. Each border",
            "html_url": "https://github.com/neovim/neovim/pull/33122#discussion_r2020277199",
            "id": 2020277199,
            "line": 3516,
            "node_id": "PRRC_kwDOAPphoM54avvP",
            "original_commit_id": "7505946a590017fb218d806ac11f427487585746",
            "original_line": 3516,
            "original_position": 46,
            "original_start_line": 3515,
            "path": "runtime/doc/api.txt",
            "position": 46,
            "pull_request_review_id": 2728036692,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020277199/reactions"
            },
            "side": "RIGHT",
            "start_line": 3515,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-30T23:06:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020277199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33122#discussion_r2020277655"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020277655"
                }
            },
            "author_association": "MEMBER",
            "body": "Wait no. It links to `NormalFloat` after `hi clear FloatBorder`.",
            "commit_id": "7505946a590017fb218d806ac11f427487585746",
            "created_at": "2025-03-30T23:09:12Z",
            "diff_hunk": "@@ -3492,40 +3492,39 @@ nvim_open_win({buffer}, {enter}, {config})                   *nvim_open_win()*\n                       empty. The end-of-buffer region is hidden by setting\n                       `eob` flag of 'fillchars' to a space char, and clearing\n                       the |hl-EndOfBuffer| region in 'winhighlight'.\n-                  • border: Style of (optional) window border. This can either\n-                    be a string or an array. The string values are the same as\n-                    those described in 'winborder'. If it is an array, it\n-                    should have a length of eight or any divisor of eight. The\n-                    array will specify the eight chars building up the border\n-                    in a clockwise fashion starting with the top-left corner.\n-                    As an example, the double box style could be specified as: >\n-                     [ \"╔\", \"═\" ,\"╗\", \"║\", \"╝\", \"═\", \"╚\", \"║\" ].\n+                  • border: (`string|string[]`) (defaults to 'winborder'\n+                    option) Window border. The string form accepts the same\n+                    values as the 'winborder' option. The array form must have\n+                    a length of eight or any divisor of eight, specifying the\n+                    chars that form the border in a clockwise fashion starting\n+                    from the top-left corner. For example, the double-box\n+                    style can be specified as: >\n+                    [ \"╔\", \"═\" ,\"╗\", \"║\", \"╝\", \"═\", \"╚\", \"║\" ].\n <\n-                    If the number of chars are less than eight, they will be\n-                    repeated. Thus an ASCII border could be specified as >\n-                     [ \"/\", \"-\", \\\"\\\\\\\\\\\", \"|\" ],\n+                    If fewer than eight chars are given, they will be\n+                    repeated. An ASCII border could be specified as: >\n+                    [ \"/\", \"-\", \\\"\\\\\\\\\\\", \"|\" ],\n <\n-                    or all chars the same as >\n-                     [ \"x\" ].\n+                    Or one char for all sides: >\n+                    [ \"x\" ].\n <\n-                    An empty string can be used to turn off a specific border,\n-                    for instance, >\n-                     [ \"\", \"\", \"\", \">\", \"\", \"\", \"\", \"<\" ]\n+                    Empty string can be used to hide a specific border. This\n+                    example will show only vertical borders, not horizontal: >\n+                    [ \"\", \"\", \"\", \">\", \"\", \"\", \"\", \"<\" ]\n <\n-                    will only make vertical borders but not horizontal ones.\n-                    By default, `FloatBorder` highlight is used, which links\n-                    to `WinSeparator` when not defined. It could also be\n-                    specified by character: >\n-                     [ [\"+\", \"MyCorner\"], [\"x\", \"MyBorder\"] ].\n+                    By default, |hl-FloatBorder| highlight is used, which\n+                    links to |hl-WinSeparator| when not defined. Each border",
            "html_url": "https://github.com/neovim/neovim/pull/33122#discussion_r2020277655",
            "id": 2020277655,
            "in_reply_to_id": 2020277199,
            "line": 3516,
            "node_id": "PRRC_kwDOAPphoM54av2X",
            "original_commit_id": "7505946a590017fb218d806ac11f427487585746",
            "original_line": 3516,
            "original_position": 46,
            "original_start_line": 3515,
            "path": "runtime/doc/api.txt",
            "position": 46,
            "pull_request_review_id": 2728037310,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020277655/reactions"
            },
            "side": "RIGHT",
            "start_line": 3515,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-03-30T23:09:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2020277655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33122/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33122/commits",
    "created_at": "2025-03-28T12:41:01Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33122.diff",
    "draft": false,
    "head": {
        "label": "justinmk:doc2",
        "ref": "doc2",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/justinmk/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/justinmk/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/justinmk/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/justinmk/neovim/branches{/branch}",
            "clone_url": "https://github.com/justinmk/neovim.git",
            "collaborators_url": "https://api.github.com/repos/justinmk/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/justinmk/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/justinmk/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/justinmk/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/justinmk/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/justinmk/neovim/contributors",
            "created_at": "2014-02-28T23:17:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/justinmk/neovim/deployments",
            "description": "somewhere in todo.txt",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/justinmk/neovim/downloads",
            "events_url": "https://api.github.com/repos/justinmk/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/justinmk/neovim/forks",
            "full_name": "justinmk/neovim",
            "git_commits_url": "https://api.github.com/repos/justinmk/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/justinmk/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/justinmk/neovim/git/tags{/sha}",
            "git_url": "git://github.com/justinmk/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "http://neovim.io",
            "hooks_url": "https://api.github.com/repos/justinmk/neovim/hooks",
            "html_url": "https://github.com/justinmk/neovim",
            "id": 17302877,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/justinmk/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/justinmk/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/justinmk/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/justinmk/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/justinmk/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/justinmk/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/justinmk/neovim/merges",
            "milestones_url": "https://api.github.com/repos/justinmk/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzMwMjg3Nw==",
            "notifications_url": "https://api.github.com/repos/justinmk/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/justinmk/neovim/pulls{/number}",
            "pushed_at": "2025-03-31T14:12:00Z",
            "releases_url": "https://api.github.com/repos/justinmk/neovim/releases{/id}",
            "size": 307419,
            "ssh_url": "git@github.com:justinmk/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/justinmk/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/justinmk/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/justinmk/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/justinmk/neovim/subscription",
            "svn_url": "https://github.com/justinmk/neovim",
            "tags_url": "https://api.github.com/repos/justinmk/neovim/tags",
            "teams_url": "https://api.github.com/repos/justinmk/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/justinmk/neovim/git/trees{/sha}",
            "updated_at": "2025-01-13T16:10:06Z",
            "url": "https://api.github.com/repos/justinmk/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "7505946a590017fb218d806ac11f427487585746",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33122",
    "id": 2425208898,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33122",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "b41e066aa124b5feb428877c7a35776ce4d3035c",
    "merged_at": "2025-03-30T20:29:37Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6QjcBC",
    "number": 33122,
    "patch_url": "https://github.com/neovim/neovim/pull/33122.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33122/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7505946a590017fb218d806ac11f427487585746",
    "title": "docs: lsp config/commands",
    "updated_at": "2025-03-30T23:09:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33122",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}