{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34940/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34940/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34940"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34940"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34940/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b8770197ba4cf6f5327d408e27e96c15c286f953"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6262,
            "forks_count": 6262,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1971,
            "open_issues_count": 1971,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-19T00:45:15Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 338530,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92074,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-19T01:56:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92074,
            "watchers_count": 92074,
            "web_commit_signoff_required": false
        },
        "sha": "5f8d4a248a97b7beb26a097811dce92f1b18e260",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This PR migrates the spell file download logic from Vim script to Lua, removing the dependency on netrw and enabling spell file downloads even when netrw is disabled. Closes #7189 .\r\n\r\n## Implementation details\r\n- Migrates the existing Vimscript logic (`spellfile.vim`) fully to Lua.\r\n- Uses `vim.net.request()` for downloading of spell files instead of relying on `:Nread` or `netrw`.\r\n- Cleans up by removing old `spellfile.vim` and related code.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2212781515"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2212781515"
                }
            },
            "author_association": "MEMBER",
            "body": "Since `plugin/` files are loaded unconditionally on startup, they should not eagerly `require` optional modules. Instead, use `require('vim.net').request(...)` within the functions so that the module is only pulled in when something is actually downloaded.",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-07-17T09:06:41Z",
            "diff_hunk": "@@ -0,0 +1,6 @@\n+-- Built-in plugin to download missing spell files\n+-- Migrated from old Vimscript (spellfile.vim)\n+\n+local M = {}\n+local net = require(\"vim.net\")",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2212781515",
            "id": 2212781515,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6D5F3L",
            "original_commit_id": "1107670e1fab7f730d455d070c4c1ee8e5e288a5",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/plugin/nvim/spell.lua",
            "position": null,
            "pull_request_review_id": 3028634548,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2212781515/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-17T09:06:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2212781515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280579381"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579381"
                }
            },
            "author_association": "MEMBER",
            "body": "why is this a configurable setting? if it's for testing, the tests should just modify the 'runtimepath' of the Nvim test instance. `n.clear()` starts a new Nvim for each test (see other tests for example)",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T20:12:13Z",
            "diff_hunk": "@@ -0,0 +1,281 @@\n+local M = {}\n+\n+--- @class SpellfileConfig\n+--- @field url string\n+--- @field rtp string[]\n+--- @field encoding string\n+--- @field timeout_ms integer\n+\n+---@class SpellInfo\n+---@field files string[]\n+---@field key string\n+---@field lang string\n+---@field encoding string\n+---@field dir string\n+\n+---@type SpellfileConfig\n+M.config = {\n+  url = 'https://ftp.nluug.nl/pub/vim/runtime/spell',\n+  rtp = vim.opt.rtp:get(),",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280579381",
            "id": 2280579381,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H7uE1",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 19,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/lua/vim/spellfile.lua",
            "position": null,
            "pull_request_review_id": 3126026702,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579381/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T20:12:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280579438"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579438"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\n    n.clear()\n```",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T20:12:31Z",
            "diff_hunk": "@@ -0,0 +1,166 @@\n+local n = require('test.functional.testnvim')()\n+local exec_lua = n.exec_lua\n+\n+describe('vim.spellfile', function()\n+  before_each(function()\n+    n:clear()",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280579438",
            "id": 2280579438,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H7uFu",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 6,
            "original_position": 6,
            "original_start_line": null,
            "path": "test/functional/lua/spellfile_spec.lua",
            "position": null,
            "pull_request_review_id": 3126026744,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579438/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T20:12:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280579659"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579659"
                }
            },
            "author_association": "MEMBER",
            "body": "This file should live in `runtime/lua/nvim/`. It's not part of the `vim.*` stdlib, it's just a plugin.",
            "commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "created_at": "2025-08-16T20:13:37Z",
            "diff_hunk": "",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280579659",
            "id": 2280579659,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM6H7uJL",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/lua/vim/spellfile.lua",
            "position": 1,
            "pull_request_review_id": 3126026906,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579659/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "file",
            "updated_at": "2025-08-16T20:13:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280579659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580201"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580201"
                }
            },
            "author_association": "MEMBER",
            "body": "The old code referenced `&encoding` because the 'encoding' option of Vim is configurable. In Nvim it's always utf-8. So I think we don't need this parameter at all.\n\nIf you want to keep the logic as-is, you can set `local encoding = 'utf-8'` at the top of this module. But it shouldn't be a public config setting.",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T20:16:14Z",
            "diff_hunk": "@@ -0,0 +1,281 @@\n+local M = {}\n+\n+--- @class SpellfileConfig\n+--- @field url string\n+--- @field rtp string[]\n+--- @field encoding string\n+--- @field timeout_ms integer\n+\n+---@class SpellInfo\n+---@field files string[]\n+---@field key string\n+---@field lang string\n+---@field encoding string\n+---@field dir string\n+\n+---@type SpellfileConfig\n+M.config = {\n+  url = 'https://ftp.nluug.nl/pub/vim/runtime/spell',\n+  rtp = vim.opt.rtp:get(),\n+  encoding = 'utf-8',",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580201",
            "id": 2280580201,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H7uRp",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 20,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/spellfile.lua",
            "position": null,
            "pull_request_review_id": 3126027423,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580201/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T20:16:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580292"
                }
            },
            "author_association": "MEMBER",
            "body": "why is this on the public interface?",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T20:16:30Z",
            "diff_hunk": "@@ -0,0 +1,281 @@\n+local M = {}\n+\n+--- @class SpellfileConfig\n+--- @field url string\n+--- @field rtp string[]\n+--- @field encoding string\n+--- @field timeout_ms integer\n+\n+---@class SpellInfo\n+---@field files string[]\n+---@field key string\n+---@field lang string\n+---@field encoding string\n+---@field dir string\n+\n+---@type SpellfileConfig\n+M.config = {\n+  url = 'https://ftp.nluug.nl/pub/vim/runtime/spell',\n+  rtp = vim.opt.rtp:get(),\n+  encoding = 'utf-8',\n+  timeout_ms = 15000,\n+}\n+\n+---@type table<string, boolean>\n+M.done = {}",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580292",
            "id": 2280580292,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H7uTE",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 25,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/spellfile.lua",
            "position": null,
            "pull_request_review_id": 3126027463,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580292/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T20:16:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580370"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580370"
                }
            },
            "author_association": "MEMBER",
            "body": "use `t.eq` and `t.ok`, don't use the `assert` module directly",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T20:17:05Z",
            "diff_hunk": "@@ -0,0 +1,166 @@\n+local n = require('test.functional.testnvim')()\n+local exec_lua = n.exec_lua\n+\n+describe('vim.spellfile', function()\n+  before_each(function()\n+    n:clear()\n+  end)\n+\n+  it('no-op when .spl and .sug already exist', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(p) return p == '/rtp/spell' and 1 or 0 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return true end\n+      else\n+        vim.loop.fs_access = function(_,_) return true end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {\n+        ['/rtp/spell/en_gb.utf-8.spl'] = { type='file', size=111 },\n+        ['/rtp/spell/en_gb.utf-8.sug'] = { type='file', size=222 },\n+      }\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      local prompted = false\n+      vim.fn.input = function() prompted = true; return 'n' end\n+\n+      local requests = 0\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(...) requests = requests + 1 end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      return { prompted = prompted, requests = requests }\n+    ]])\n+\n+    assert.is_false(out.prompted)\n+    assert.are.same(0, out.requests)\n+  end)\n+\n+  it('downloads UTF-8 .spl to fallback dir, sug 404 is non-fatal, reloads', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp1', '/rtp2' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(_) return 0 end\n+      vim.fn.stdpath = function(k) assert(k=='data'); return '/tmp' end\n+      vim.fn.mkdir = function(_) return 1 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return false end\n+      else\n+        vim.loop.fs_access = function(_,_) return false end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {}\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      vim.fn.input = function() return 'y' end\n+\n+      local reloaded = false\n+      local orig_cmd = vim.cmd\n+      vim.cmd = function(c)\n+        if c:match('setlocal%s+spell!') then reloaded = true end\n+      end\n+\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(url, opts, cb)\n+        local name = url:match('/([^/]+)$')\n+        if name:find('%.spl$') then\n+          FS[opts.outpath] = { type='file', size=123 }\n+          cb(nil, { status = 200 })\n+        else\n+          cb(nil, { status = 404 }) -- .sug missing is OK\n+        end\n+      end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      vim.cmd = orig_cmd\n+\n+      local spl = '/tmp/site/spell/en_gb.utf-8.spl'\n+      local sug = '/tmp/site/spell/en_gb.utf-8.sug'\n+      return {\n+        spl_present = FS[spl] ~= nil,\n+        sug_present = FS[sug] ~= nil,\n+        reloaded = reloaded,\n+      }\n+    ]])\n+\n+    assert.is_true(out.spl_present)\n+    assert.is_false(out.sug_present)\n+    assert.is_true(out.reloaded)\n+  end)\n+\n+  it('dual-fail: UTF-8 and ASCII 404 -> warn once, mark done, no reload', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(_) return 0 end\n+      vim.fn.stdpath = function(k) assert(k=='data'); return '/tmp' end\n+      vim.fn.mkdir = function(_) return 1 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return false end\n+        vim.uv.fs_stat = function(_) return nil end\n+      else\n+        vim.loop.fs_access = function(_,_) return false end\n+        vim.loop.fs_stat = function(_) return nil end\n+        vim.uv = vim.loop\n+      end\n+\n+      vim.fn.input = function() return 'y' end\n+\n+      local warns = 0\n+      local orig_notify = vim.notify\n+      vim.notify = function(_, lvl)\n+        if lvl and lvl >= vim.log.levels.WARN then warns = warns + 1 end\n+      end\n+\n+      local reloaded = false\n+      local orig_cmd = vim.cmd\n+      vim.cmd = function(c)\n+        if c:match('setlocal%s+spell!') then reloaded = true end\n+      end\n+\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(_, _, cb) cb(nil, { status = 404 }) end\n+\n+      local key = spellfile.parse('xx').key\n+      spellfile.load_file('xx')\n+      local done = spellfile.done[key] == true\n+\n+      vim.net = orig_net\n+      vim.notify = orig_notify\n+      vim.cmd = orig_cmd\n+\n+      return { warns = warns, done = done, reloaded = reloaded }\n+    ]])\n+\n+    assert.are.same(1, out.warns)\n+    assert.is_true(out.done)\n+    assert.is_false(out.reloaded)",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580370",
            "id": 2280580370,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H7uUS",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 164,
            "original_position": 164,
            "original_start_line": 162,
            "path": "test/functional/lua/spellfile_spec.lua",
            "position": null,
            "pull_request_review_id": 3126027594,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580370/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-16T20:17:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580698"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580698"
                }
            },
            "author_association": "MEMBER",
            "body": "where did this come from? `vim.uv` is always available.\n\nif this code is generated by AI, please review it yourself before asking us to review.",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T20:18:34Z",
            "diff_hunk": "@@ -0,0 +1,166 @@\n+local n = require('test.functional.testnvim')()\n+local exec_lua = n.exec_lua\n+\n+describe('vim.spellfile', function()\n+  before_each(function()\n+    n:clear()\n+  end)\n+\n+  it('no-op when .spl and .sug already exist', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(p) return p == '/rtp/spell' and 1 or 0 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return true end\n+      else\n+        vim.loop.fs_access = function(_,_) return true end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {\n+        ['/rtp/spell/en_gb.utf-8.spl'] = { type='file', size=111 },\n+        ['/rtp/spell/en_gb.utf-8.sug'] = { type='file', size=222 },\n+      }\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      local prompted = false\n+      vim.fn.input = function() prompted = true; return 'n' end\n+\n+      local requests = 0\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(...) requests = requests + 1 end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      return { prompted = prompted, requests = requests }\n+    ]])\n+\n+    assert.is_false(out.prompted)\n+    assert.are.same(0, out.requests)\n+  end)\n+\n+  it('downloads UTF-8 .spl to fallback dir, sug 404 is non-fatal, reloads', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp1', '/rtp2' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(_) return 0 end\n+      vim.fn.stdpath = function(k) assert(k=='data'); return '/tmp' end\n+      vim.fn.mkdir = function(_) return 1 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return false end\n+      else\n+        vim.loop.fs_access = function(_,_) return false end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {}\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      vim.fn.input = function() return 'y' end\n+\n+      local reloaded = false\n+      local orig_cmd = vim.cmd\n+      vim.cmd = function(c)\n+        if c:match('setlocal%s+spell!') then reloaded = true end\n+      end\n+\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(url, opts, cb)\n+        local name = url:match('/([^/]+)$')\n+        if name:find('%.spl$') then\n+          FS[opts.outpath] = { type='file', size=123 }\n+          cb(nil, { status = 200 })\n+        else\n+          cb(nil, { status = 404 }) -- .sug missing is OK\n+        end\n+      end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      vim.cmd = orig_cmd\n+\n+      local spl = '/tmp/site/spell/en_gb.utf-8.spl'\n+      local sug = '/tmp/site/spell/en_gb.utf-8.sug'\n+      return {\n+        spl_present = FS[spl] ~= nil,\n+        sug_present = FS[sug] ~= nil,\n+        reloaded = reloaded,\n+      }\n+    ]])\n+\n+    assert.is_true(out.spl_present)\n+    assert.is_false(out.sug_present)\n+    assert.is_true(out.reloaded)\n+  end)\n+\n+  it('dual-fail: UTF-8 and ASCII 404 -> warn once, mark done, no reload', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(_) return 0 end\n+      vim.fn.stdpath = function(k) assert(k=='data'); return '/tmp' end\n+      vim.fn.mkdir = function(_) return 1 end\n+      if vim.uv then",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580698",
            "id": 2280580698,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H7uZa",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 124,
            "original_position": 124,
            "original_start_line": null,
            "path": "test/functional/lua/spellfile_spec.lua",
            "position": null,
            "pull_request_review_id": 3126027980,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580698/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T20:18:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580698",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580875"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580875"
                }
            },
            "author_association": "MEMBER",
            "body": "this probably came from AI. look at existing test files to understand the codebase conventions.",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T20:19:10Z",
            "diff_hunk": "@@ -0,0 +1,166 @@\n+local n = require('test.functional.testnvim')()\n+local exec_lua = n.exec_lua\n+\n+describe('vim.spellfile', function()\n+  before_each(function()\n+    n:clear()\n+  end)\n+\n+  it('no-op when .spl and .sug already exist', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(p) return p == '/rtp/spell' and 1 or 0 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return true end\n+      else\n+        vim.loop.fs_access = function(_,_) return true end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {\n+        ['/rtp/spell/en_gb.utf-8.spl'] = { type='file', size=111 },\n+        ['/rtp/spell/en_gb.utf-8.sug'] = { type='file', size=222 },\n+      }\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      local prompted = false\n+      vim.fn.input = function() prompted = true; return 'n' end\n+\n+      local requests = 0\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(...) requests = requests + 1 end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      return { prompted = prompted, requests = requests }\n+    ]])\n+\n+    assert.is_false(out.prompted)\n+    assert.are.same(0, out.requests)\n+  end)\n+\n+  it('downloads UTF-8 .spl to fallback dir, sug 404 is non-fatal, reloads', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp1', '/rtp2' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(_) return 0 end\n+      vim.fn.stdpath = function(k) assert(k=='data'); return '/tmp' end\n+      vim.fn.mkdir = function(_) return 1 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return false end\n+      else\n+        vim.loop.fs_access = function(_,_) return false end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {}\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      vim.fn.input = function() return 'y' end\n+\n+      local reloaded = false\n+      local orig_cmd = vim.cmd\n+      vim.cmd = function(c)\n+        if c:match('setlocal%s+spell!') then reloaded = true end\n+      end\n+\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(url, opts, cb)\n+        local name = url:match('/([^/]+)$')\n+        if name:find('%.spl$') then\n+          FS[opts.outpath] = { type='file', size=123 }\n+          cb(nil, { status = 200 })\n+        else\n+          cb(nil, { status = 404 }) -- .sug missing is OK\n+        end\n+      end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      vim.cmd = orig_cmd\n+\n+      local spl = '/tmp/site/spell/en_gb.utf-8.spl'\n+      local sug = '/tmp/site/spell/en_gb.utf-8.sug'\n+      return {\n+        spl_present = FS[spl] ~= nil,\n+        sug_present = FS[sug] ~= nil,\n+        reloaded = reloaded,\n+      }\n+    ]])\n+\n+    assert.is_true(out.spl_present)\n+    assert.is_false(out.sug_present)\n+    assert.is_true(out.reloaded)",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280580875",
            "id": 2280580875,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H7ucL",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 112,
            "original_position": 112,
            "original_start_line": null,
            "path": "test/functional/lua/spellfile_spec.lua",
            "position": null,
            "pull_request_review_id": 3126028210,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580875/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T20:19:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280580875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280618488"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280618488"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thank you, I ended up hardcoding utf-8 as its used only in two functions!",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T21:55:50Z",
            "diff_hunk": "@@ -0,0 +1,281 @@\n+local M = {}\n+\n+--- @class SpellfileConfig\n+--- @field url string\n+--- @field rtp string[]\n+--- @field encoding string\n+--- @field timeout_ms integer\n+\n+---@class SpellInfo\n+---@field files string[]\n+---@field key string\n+---@field lang string\n+---@field encoding string\n+---@field dir string\n+\n+---@type SpellfileConfig\n+M.config = {\n+  url = 'https://ftp.nluug.nl/pub/vim/runtime/spell',\n+  rtp = vim.opt.rtp:get(),\n+  encoding = 'utf-8',",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280618488",
            "id": 2280618488,
            "in_reply_to_id": 2280580201,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H73n4",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 20,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/spellfile.lua",
            "position": null,
            "pull_request_review_id": 3126076896,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280618488/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T21:56:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280618488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280619245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280619245"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Solved, would a getter like `getDone` be good? I'm accessing this attr in `spellfile_spec.lua`.",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T21:59:39Z",
            "diff_hunk": "@@ -0,0 +1,281 @@\n+local M = {}\n+\n+--- @class SpellfileConfig\n+--- @field url string\n+--- @field rtp string[]\n+--- @field encoding string\n+--- @field timeout_ms integer\n+\n+---@class SpellInfo\n+---@field files string[]\n+---@field key string\n+---@field lang string\n+---@field encoding string\n+---@field dir string\n+\n+---@type SpellfileConfig\n+M.config = {\n+  url = 'https://ftp.nluug.nl/pub/vim/runtime/spell',\n+  rtp = vim.opt.rtp:get(),\n+  encoding = 'utf-8',\n+  timeout_ms = 15000,\n+}\n+\n+---@type table<string, boolean>\n+M.done = {}",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280619245",
            "id": 2280619245,
            "in_reply_to_id": 2280580292,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H73zt",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 25,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/spellfile.lua",
            "position": null,
            "pull_request_review_id": 3126077537,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280619245/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T21:59:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280619245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280619406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280619406"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Removed, thank you! it was redundant...",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T22:00:18Z",
            "diff_hunk": "@@ -0,0 +1,166 @@\n+local n = require('test.functional.testnvim')()\n+local exec_lua = n.exec_lua\n+\n+describe('vim.spellfile', function()\n+  before_each(function()\n+    n:clear()\n+  end)\n+\n+  it('no-op when .spl and .sug already exist', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(p) return p == '/rtp/spell' and 1 or 0 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return true end\n+      else\n+        vim.loop.fs_access = function(_,_) return true end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {\n+        ['/rtp/spell/en_gb.utf-8.spl'] = { type='file', size=111 },\n+        ['/rtp/spell/en_gb.utf-8.sug'] = { type='file', size=222 },\n+      }\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      local prompted = false\n+      vim.fn.input = function() prompted = true; return 'n' end\n+\n+      local requests = 0\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(...) requests = requests + 1 end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      return { prompted = prompted, requests = requests }\n+    ]])\n+\n+    assert.is_false(out.prompted)\n+    assert.are.same(0, out.requests)\n+  end)\n+\n+  it('downloads UTF-8 .spl to fallback dir, sug 404 is non-fatal, reloads', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp1', '/rtp2' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(_) return 0 end\n+      vim.fn.stdpath = function(k) assert(k=='data'); return '/tmp' end\n+      vim.fn.mkdir = function(_) return 1 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return false end\n+      else\n+        vim.loop.fs_access = function(_,_) return false end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {}\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      vim.fn.input = function() return 'y' end\n+\n+      local reloaded = false\n+      local orig_cmd = vim.cmd\n+      vim.cmd = function(c)\n+        if c:match('setlocal%s+spell!') then reloaded = true end\n+      end\n+\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(url, opts, cb)\n+        local name = url:match('/([^/]+)$')\n+        if name:find('%.spl$') then\n+          FS[opts.outpath] = { type='file', size=123 }\n+          cb(nil, { status = 200 })\n+        else\n+          cb(nil, { status = 404 }) -- .sug missing is OK\n+        end\n+      end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      vim.cmd = orig_cmd\n+\n+      local spl = '/tmp/site/spell/en_gb.utf-8.spl'\n+      local sug = '/tmp/site/spell/en_gb.utf-8.sug'\n+      return {\n+        spl_present = FS[spl] ~= nil,\n+        sug_present = FS[sug] ~= nil,\n+        reloaded = reloaded,\n+      }\n+    ]])\n+\n+    assert.is_true(out.spl_present)\n+    assert.is_false(out.sug_present)\n+    assert.is_true(out.reloaded)\n+  end)\n+\n+  it('dual-fail: UTF-8 and ASCII 404 -> warn once, mark done, no reload', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(_) return 0 end\n+      vim.fn.stdpath = function(k) assert(k=='data'); return '/tmp' end\n+      vim.fn.mkdir = function(_) return 1 end\n+      if vim.uv then",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280619406",
            "id": 2280619406,
            "in_reply_to_id": 2280580698,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H732O",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 124,
            "original_position": 124,
            "original_start_line": null,
            "path": "test/functional/lua/spellfile_spec.lua",
            "position": null,
            "pull_request_review_id": 3126077621,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280619406/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T22:00:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280619406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34940#discussion_r2280620425"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34940"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280620425"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is the issue the assert pattern or the method? I updated `spellfile_spec.lua` to use `t.eq`!",
            "commit_id": "b8770197ba4cf6f5327d408e27e96c15c286f953",
            "created_at": "2025-08-16T22:04:07Z",
            "diff_hunk": "@@ -0,0 +1,166 @@\n+local n = require('test.functional.testnvim')()\n+local exec_lua = n.exec_lua\n+\n+describe('vim.spellfile', function()\n+  before_each(function()\n+    n:clear()\n+  end)\n+\n+  it('no-op when .spl and .sug already exist', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(p) return p == '/rtp/spell' and 1 or 0 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return true end\n+      else\n+        vim.loop.fs_access = function(_,_) return true end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {\n+        ['/rtp/spell/en_gb.utf-8.spl'] = { type='file', size=111 },\n+        ['/rtp/spell/en_gb.utf-8.sug'] = { type='file', size=222 },\n+      }\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      local prompted = false\n+      vim.fn.input = function() prompted = true; return 'n' end\n+\n+      local requests = 0\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(...) requests = requests + 1 end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      return { prompted = prompted, requests = requests }\n+    ]])\n+\n+    assert.is_false(out.prompted)\n+    assert.are.same(0, out.requests)\n+  end)\n+\n+  it('downloads UTF-8 .spl to fallback dir, sug 404 is non-fatal, reloads', function()\n+    local out = exec_lua([[\n+      local spellfile = require('vim.spellfile')\n+\n+      spellfile.config.rtp = { '/rtp1', '/rtp2' }\n+      vim.fn.fnamemodify = function(p, _) return p end\n+      vim.fn.isdirectory = function(_) return 0 end\n+      vim.fn.stdpath = function(k) assert(k=='data'); return '/tmp' end\n+      vim.fn.mkdir = function(_) return 1 end\n+      if vim.uv then\n+        vim.uv.fs_access = function(_,_) return false end\n+      else\n+        vim.loop.fs_access = function(_,_) return false end\n+        vim.uv = vim.loop\n+      end\n+\n+      local FS = {}\n+      if vim.uv then\n+        vim.uv.fs_stat = function(p) return FS[p] end\n+      else\n+        vim.loop.fs_stat = function(p) return FS[p] end\n+        vim.uv = vim.loop\n+      end\n+\n+      vim.fn.input = function() return 'y' end\n+\n+      local reloaded = false\n+      local orig_cmd = vim.cmd\n+      vim.cmd = function(c)\n+        if c:match('setlocal%s+spell!') then reloaded = true end\n+      end\n+\n+      local orig_net = vim.net\n+      vim.net = vim.net or {}\n+      vim.net.request = function(url, opts, cb)\n+        local name = url:match('/([^/]+)$')\n+        if name:find('%.spl$') then\n+          FS[opts.outpath] = { type='file', size=123 }\n+          cb(nil, { status = 200 })\n+        else\n+          cb(nil, { status = 404 }) -- .sug missing is OK\n+        end\n+      end\n+\n+      spellfile.load_file('en_gb')\n+\n+      vim.net = orig_net\n+      vim.cmd = orig_cmd\n+\n+      local spl = '/tmp/site/spell/en_gb.utf-8.spl'\n+      local sug = '/tmp/site/spell/en_gb.utf-8.sug'\n+      return {\n+        spl_present = FS[spl] ~= nil,\n+        sug_present = FS[sug] ~= nil,\n+        reloaded = reloaded,\n+      }\n+    ]])\n+\n+    assert.is_true(out.spl_present)\n+    assert.is_false(out.sug_present)\n+    assert.is_true(out.reloaded)",
            "html_url": "https://github.com/neovim/neovim/pull/34940#discussion_r2280620425",
            "id": 2280620425,
            "in_reply_to_id": 2280580875,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H74GJ",
            "original_commit_id": "a9385a25157bdb3f6faeabdaf6fb163506bf537d",
            "original_line": 112,
            "original_position": 112,
            "original_start_line": null,
            "path": "test/functional/lua/spellfile_spec.lua",
            "position": null,
            "pull_request_review_id": 3126079162,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280620425/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-16T22:04:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280620425",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "This is way too much code. Please choose the most high-value tests and drop the rest. And we 100% aren't going to add 4 new test files just for spell download.",
            "created_at": "2025-08-16T19:29:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/34940#issuecomment-3193862813",
            "id": 3193862813,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34940",
            "node_id": "IC_kwDOAPphoM6-Xnqd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193862813/reactions"
            },
            "updated_at": "2025-08-16T19:29:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193862813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This is way too much code. Please choose the most high-value tests and drop the rest. And we 100% aren't going to add 4 new test files just for spell download.\r\n\r\nFair point...trimmed to one spec (`spellfile_spec.lua`) with 3 high-value offline tests (no operation, download success, dual fail) and dropped the rest.",
            "created_at": "2025-08-16T19:56:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/34940#issuecomment-3193876981",
            "id": 3193876981,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34940",
            "node_id": "IC_kwDOAPphoM6-XrH1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193876981/reactions"
            },
            "updated_at": "2025-08-16T19:57:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193876981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks, pushed new updates. I originally used [#29552](https://github.com/neovim/neovim/pull/29552) as a reference for the tests. I aligned them with current conventions (rtp setup like `runtime_spec.lua` and using `t.eq`) and also addressed the rest of the feedback (forced utf-8, redundant code like checking for `uv.loop`..., _done made private). Let me know if you prefer a different test pattern for the test suite!",
            "created_at": "2025-08-16T22:42:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/34940#issuecomment-3193946556",
            "id": 3193946556,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34940",
            "node_id": "IC_kwDOAPphoM6-X8G8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193946556/reactions"
            },
            "updated_at": "2025-08-16T23:02:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3193946556",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34940/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34940/commits",
    "created_at": "2025-07-15T00:08:36Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34940.diff",
    "draft": false,
    "head": {
        "label": "tampueroc:feat/spellfile-lua-download-7189",
        "ref": "feat/spellfile-lua-download-7189",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tampueroc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tampueroc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tampueroc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tampueroc/neovim/branches{/branch}",
            "clone_url": "https://github.com/tampueroc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tampueroc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tampueroc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tampueroc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tampueroc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tampueroc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tampueroc/neovim/contributors",
            "created_at": "2025-05-01T16:36:34Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tampueroc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tampueroc/neovim/downloads",
            "events_url": "https://api.github.com/repos/tampueroc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tampueroc/neovim/forks",
            "full_name": "tampueroc/neovim",
            "git_commits_url": "https://api.github.com/repos/tampueroc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tampueroc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tampueroc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tampueroc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/tampueroc/neovim/hooks",
            "html_url": "https://github.com/tampueroc/neovim",
            "id": 976180439,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tampueroc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tampueroc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tampueroc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tampueroc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tampueroc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/tampueroc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tampueroc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tampueroc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOi9U1w",
            "notifications_url": "https://api.github.com/repos/tampueroc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tampueroc/neovim/pulls{/number}",
            "pushed_at": "2025-08-16T22:23:48Z",
            "releases_url": "https://api.github.com/repos/tampueroc/neovim/releases{/id}",
            "size": 322994,
            "ssh_url": "git@github.com:tampueroc/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/tampueroc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tampueroc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tampueroc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tampueroc/neovim/subscription",
            "svn_url": "https://github.com/tampueroc/neovim",
            "tags_url": "https://api.github.com/repos/tampueroc/neovim/tags",
            "teams_url": "https://api.github.com/repos/tampueroc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tampueroc/neovim/git/trees{/sha}",
            "updated_at": "2025-07-14T23:47:40Z",
            "url": "https://api.github.com/repos/tampueroc/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b8770197ba4cf6f5327d408e27e96c15c286f953",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
            "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
            "followers_url": "https://api.github.com/users/tampueroc/followers",
            "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
            "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tampueroc",
            "id": 46233260,
            "login": "tampueroc",
            "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
            "organizations_url": "https://api.github.com/users/tampueroc/orgs",
            "received_events_url": "https://api.github.com/users/tampueroc/received_events",
            "repos_url": "https://api.github.com/users/tampueroc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tampueroc",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34940",
    "id": 2665677724,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34940",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "spellcheck",
            "id": 1953742452,
            "name": "spell",
            "node_id": "MDU6TGFiZWwxOTUzNzQyNDUy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/spell"
        }
    ],
    "locked": false,
    "merge_commit_sha": "49b9d03ecc863e4c179fee0dce82f2a719f549c1",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6e4wOc",
    "number": 34940,
    "patch_url": "https://github.com/neovim/neovim/pull/34940.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34940/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b8770197ba4cf6f5327d408e27e96c15c286f953",
    "title": "refactor(spell): migrate spellfile download logic to Lua and remove netrw dependency",
    "updated_at": "2025-08-16T23:02:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34940",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
        "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
        "followers_url": "https://api.github.com/users/tampueroc/followers",
        "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
        "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tampueroc",
        "id": 46233260,
        "login": "tampueroc",
        "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
        "organizations_url": "https://api.github.com/users/tampueroc/orgs",
        "received_events_url": "https://api.github.com/users/tampueroc/received_events",
        "repos_url": "https://api.github.com/users/tampueroc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tampueroc",
        "user_view_type": "public"
    }
}