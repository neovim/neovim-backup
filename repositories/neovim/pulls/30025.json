{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30025/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30025/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30025"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30025"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30025/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30025"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/e38ab71c89ce24835b1bbee011ec7263c2063862"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6134,
            "forks_count": 6134,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1965,
            "open_issues_count": 1965,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-17T02:49:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 328511,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90375,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-17T02:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90375,
            "watchers_count": 90375,
            "web_commit_signoff_required": false
        },
        "sha": "8df6736ca14d09f87cf0a8486758ac5708819434",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem:\r\nResults for `textDocument/definition` from clients aren't required to be\r\nsorted by best match. However `'tagfunc'` jumps to the first match.\r\n\r\nSolution:\r\nSort results using an algorithm that uses the Levenstien distance of\r\npaths.\r\n\r\n---\r\n\r\n## Status\r\n\r\n- Need clarification from the LSP spec: https://github.com/microsoft/language-server-protocol/issues/1999\r\n- Fixed ordering in LuaLS: https://github.com/LuaLS/lua-language-server/pull/2792\r\n\r\nKeeping this PR open as an issue until we know how to proceed.\r\n",
    "closed_at": "2024-09-01T11:39:34Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30025#discussion_r1714558512"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30025"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1714558512"
                }
            },
            "author_association": "MEMBER",
            "body": "Just thinking here but I feel like this function might be helpful in other places (perhaps for sorting completions?). We can keep it local to this module for now but it might be a good idea to abstract it later.",
            "commit_id": "e38ab71c89ce24835b1bbee011ec7263c2063862",
            "created_at": "2024-08-13T02:01:32Z",
            "diff_hunk": "@@ -18,26 +18,71 @@ local function mk_tag_item(name, range, uri, offset_encoding)\n   }\n end\n \n+--- Returns the Levenshtein distance between the two given string arrays\n+--- @param a string[]\n+--- @param b string[]\n+--- @return number\n+local function levenshtein_distance(a, b)",
            "html_url": "https://github.com/neovim/neovim/pull/30025#discussion_r1714558512",
            "id": 1714558512,
            "line": 25,
            "node_id": "PRRC_kwDOAPphoM5mMhYw",
            "original_commit_id": "e38ab71c89ce24835b1bbee011ec7263c2063862",
            "original_line": 25,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_tagfunc.lua",
            "position": 8,
            "pull_request_review_id": 2234322949,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30025",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1714558512/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-13T02:02:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1714558512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30025#discussion_r1714558866"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30025"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1714558866"
                }
            },
            "author_association": "MEMBER",
            "body": "Might be a good idea to create an alias for this object type since you repeat it in several places.",
            "commit_id": "e38ab71c89ce24835b1bbee011ec7263c2063862",
            "created_at": "2024-08-13T02:02:13Z",
            "diff_hunk": "@@ -47,18 +92,21 @@ local function query_definition(pattern)\n       end\n     end\n   end\n+\n   return results\n end\n \n ---@param pattern string\n----@return table[]\n+---@return {name: string, filename: string, cmd: string, kind?: string}[]",
            "html_url": "https://github.com/neovim/neovim/pull/30025#discussion_r1714558866",
            "id": 1714558866,
            "line": 100,
            "node_id": "PRRC_kwDOAPphoM5mMheS",
            "original_commit_id": "e38ab71c89ce24835b1bbee011ec7263c2063862",
            "original_line": 100,
            "original_position": 84,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_tagfunc.lua",
            "position": 84,
            "pull_request_review_id": 2234322949,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30025",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1714558866/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-13T02:02:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1714558866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "An example of this is to press `<C-]>` on `M` on the last line of `runtime/lua/vim/lsp/handlers.lua`.",
            "created_at": "2024-08-11T11:04:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282719796",
            "id": 2282719796,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6ID4o0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282719796/reactions"
            },
            "updated_at": "2024-08-11T11:04:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282719796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> An example of this is to press <C-]> on M on the last line of runtime/lua/vim/lsp/handlers.lua.\r\n\r\nFor me this jumps to line 9 both with and without this change. Am I missing something?\r\n\r\nI'm a bit afraid that a change like this would make the results worse for some language servers which already sort & score the results taking language semantics into account",
            "created_at": "2024-08-11T11:35:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282728093",
            "id": 2282728093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6ID6qd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282728093/reactions"
            },
            "updated_at": "2024-08-11T11:50:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282728093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For me it returns\r\n\r\n```\r\n{ {\r\n    cmd = \"/\\\\%12l\\\\%24c/\",\r\n    filename = \"/Users/lewis/.cache/lua-language-server/meta/LuaJIT en-us utf8/builtin.lua\",\r\n    name = \"M\"\r\n  }, {\r\n    cmd = \"/\\\\%9l\\\\%7c/\",\r\n    filename = \"/Users/lewis/projects/neovim/runtime/lua/vim/lsp/handlers.lua\",\r\n    name = \"M\"\r\n  } }\r\n```\r\n\r\nAre you using an up-to-date version of LuaLS? I'm on 3.10.3.\r\n\r\n> I'm a bit afraid that a change like this would make the results worse for some language servers which already sort & score the results taking language semantics into account\r\n\r\nThe spec doesn't specify this, so we can't assume that they do, ~if they even do~. And for servers that don't ~(like LuaLS)~ we can't reasonably ask them to order these.\r\n\r\n~The alternative would be to adjust the default tagfunc behaviour to list multiple matches in the quickfix/location list, just as `vim.lsp.buf.definition()` does?~ (EDIT: `g<C-]>` does this, but could be better).",
            "created_at": "2024-08-11T13:38:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282764472",
            "id": 2282764472,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IEDi4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282764472/reactions"
            },
            "updated_at": "2024-08-11T16:08:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282764472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Are you using an up-to-date version of LuaLS? I'm on 3.10.3.\r\n\r\n3.10.3 here too.\r\nNot sure what your `LuaJIT en-us utf8/builtin.lua\"` is, but that looks incorrect in any case?\r\n\r\n> The spec doesn't specify this, so we can't assume that they do, if they even do. And for servers that don't (like LuaLS) we can't reasonably ask them to order these.\r\n\r\nBut the opposite is also true. We cannot assume that they don't. Lists have innate ordering and language servers can make use of that.\r\nThe spec currently leaves it open. For completions there was a longish discussion because of that which led to the addition of a sortText property (https://github.com/microsoft/language-server-protocol/issues/898)\r\n\r\n> The alternative would be to adjust the default tagfunc behaviour to list multiple matches in the quickfix/location list, just as vim.lsp.buf.definition() does?\r\n\r\nSounds a bit like what `tjump`/ `g ctrl-]` already do?\r\n(Having a better UI for tjump would be great. Either quickfix list or vim.ui.select would probably be an improvement)\r\n",
            "created_at": "2024-08-11T14:04:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282771766",
            "id": 2282771766,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IEFU2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282771766/reactions"
            },
            "updated_at": "2024-08-11T14:14:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282771766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> 3.10.3 here too.\r\n\r\nAre you doing any other setup? And are you using the `.luarc.json` in the top level? My config is essentially just:\r\n\r\n```lua\r\napi.nvim_create_autocmd('FileType', {\r\n  pattern = { 'lua' },\r\n  callback = function(args)\r\n    vim.lsp.start({\r\n      cmd = { 'lua-language-server' },\r\n      root_dir = vim.fs.root(args.buf, { '.git', '.luarc.json', '.luarc.jsonc' })\r\n  })\r\n  end\r\n})\r\n```\r\n\r\n> Not sure what your LuaJIT en-us utf8/builtin.lua\" is, but that looks incorrect in any case?\r\n\r\n```lua\r\n---@meta _\r\n\r\n---@class unknown\r\n---@class any\r\n---@class nil\r\n---@class boolean\r\n---@class true: boolean\r\n---@class false: boolean\r\n---@class number\r\n---@class integer: number\r\n---@class thread\r\n---@class table<K, V>: { [K]: V }\r\n---@class string: stringlib\r\n---@class userdata\r\n---@class lightuserdata\r\n---@class function\r\n```\r\n\r\nWhich is technically correct because `M` is a table.\r\n\r\n---\r\n\r\n> But the opposite is also true. We cannot assume that they don't. Lists have innate ordering and language servers can make use of that.\r\nThe spec currently leaves it open. \r\n\r\nI think this is quite a stretch, and also too speculative. Also the spec doesn't have \"set\" as a type, so anything that is actually a \"set\", is specified as a \"list\".\r\n\r\nThis issue only exists because we've decided to utilize `'tagfunc'` which **requires** that the matches are sorted. I would expect most other editors to **not** do this and present the users with the choices.\r\n\r\nFrom what I can tell, vscode actually prefers the last result sent by the server:\r\n\r\n<img width=\"1094\" alt=\"image\" src=\"https://github.com/user-attachments/assets/0cddf655-84ed-4f25-aff6-c1ea07b99c4f\">\r\n\r\n---\r\n\r\n> Sounds a bit like what tjump/ g ctrl-] already do?\r\n\r\nIt's pretty bad:\r\n\r\n<img width=\"759\" alt=\"image\" src=\"https://github.com/user-attachments/assets/287ff6be-9216-4541-86d3-3da292e5f024\">\r\n\r\nI much prefer what `vim.lsp.buf.definition()` does:\r\n\r\n<img width=\"758\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6d56b897-58cb-4dea-bb17-85865a14c01b\">\r\n\r\nWhich also could be better.\r\n\r\ntrouble.nvim provides the best experience:\r\n\r\n<img width=\"758\" alt=\"image\" src=\"https://github.com/user-attachments/assets/cff08fc1-6ec8-452f-86db-0e08a1bf8151\">\r\n\r\n\r\nWhat's the path forward here? Either we sort the matches, or we improve the default `<C-]>`. The current behaviour of `<C-]>` isn't good enough, and requires undefined behaviour of the spec to work properly. And knowing how LuaLS is mostly built for vs-code, it's quite likely they're sorting with \"best match last\".",
            "created_at": "2024-08-11T14:36:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282782339",
            "id": 2282782339,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IEH6D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282782339/reactions"
            },
            "updated_at": "2024-08-11T14:36:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282782339",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Concrete examples that illustrate that there are language servers sorting the results:\r\n\r\n- https://github.com/llvm/llvm-project/blob/5286656609418c766272ff78e62fda41671ef4cb/clang-tools-extra/clangd/FindSymbols.cpp#L84 (looks like they also expose the score, which isn't covered in the spec)\r\n- https://github.com/davidhalter/jedi/blob/91ffdead3291263a356a66e40c7e82cfa431107f/jedi/api/helpers.py#L45 (this is used by pylsp)\r\n\r\nSo it's possible that if we'd merge this we'd get a regression report because the behaviour with another language server got worse\r\n\r\n> I think this is quite a stretch, and also too speculative\r\n\r\nI don't think so given the related completion ordering discussions where language server authors assumed that clients don't re-order\r\n\r\n\r\nPaths forwards:\r\n- Ask for spec clarification\r\n- Use g ctrl-] or lsp.definition (which also allows you to customise the behaviour via on_list)\r\n- Improve tjump UI\r\n\r\n>  Either we sort the matches\r\n\r\nGiven that language servers are in a much better position to provide a good ordering due to their knowledge of language semantics I don't think the client should be responsible for sorting the result\r\n\r\n> or we improve the default <C-]>. \r\n\r\nThat's explicity defined as jumping to the first match. Given that tagfunc has other uses than lsp and the existence of g C-] this doesn't seem like a good option to me\r\n",
            "created_at": "2024-08-11T14:51:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282786446",
            "id": 2282786446,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IEI6O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282786446/reactions"
            },
            "updated_at": "2024-08-11T14:57:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282786446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looks like luals sorts them too:\r\n\r\nhttps://github.com/LuaLS/lua-language-server/blob/aaf16240f77bb75a3d8db89c2a99934c8b6022ee/script/core/definition.lua#L10\r\n\r\nIf I interpret that right it seems the ordering actually depends on your filesystem paths - that would explain why you get a different ordering than I do. (In my case the builtin is in `/tmp/`, which comes after `/home`). This seems a bit like a luals problem to me.",
            "created_at": "2024-08-11T14:57:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282788057",
            "id": 2282788057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IEJTZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282788057/reactions"
            },
            "updated_at": "2024-08-11T15:15:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282788057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think so given the related completion ordering discussions where language server authors assumed that clients don't re-order\r\n\r\nAuthors shouldn't assume anything. The spec covers it, or it doesn't. If the spec had unordered sets or lists, then those kinds of assumptions are more justified.\r\n\r\n> Use g ctrl-] or lsp.definition (which also allows you to customise the behaviour via on_list)\r\n\r\nSo that would imply we keep `vim.lsp.definition` and never deprecate it in favour of `vim.lsp.tagfunc`? This also begs if `vim.lsp.tagfunc` is a good enough default for \"go to definition\" (not `'tagfunc'`).\r\n\r\n> Given that language servers are in a much better position to provide a good ordering due to their knowledge of language semantics I don't think the client should be responsible for sorting the result\r\n\r\nAgreed, but the spec doesn't specify this.\r\n\r\nI've asked for clarification here: https://github.com/microsoft/language-server-protocol/issues/1999\r\n\r\n\r\n",
            "created_at": "2024-08-11T15:16:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282793920",
            "id": 2282793920,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IEKvA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282793920/reactions"
            },
            "updated_at": "2024-08-11T15:19:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282793920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If I interpret that right it seems the ordering actually depends on your filesystem paths - that would explain why you get a different ordering than I do. (In my case the builtin is in /tmp/, which comes after /home). This seems a bit like a luals problem to me.\r\n\r\nInteresting. So why does vs-code choose the correct path which has the builtin in `~/.vscode`?",
            "created_at": "2024-08-11T15:18:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282794402",
            "id": 2282794402,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IEK2i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282794402/reactions"
            },
            "updated_at": "2024-08-11T15:19:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282794402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Authors shouldn't assume anything. \r\n\r\nThey shouldn't. But idealism doesn't match practice. People make assumptions all the time. (Like how this PR made the assumption that a client is free to re-order :p) \r\n\r\n> So that would imply we keep vim.lsp.definition and never deprecate it in favour of vim.lsp.tagfunc? This also begs if vim.lsp.tagfunc is a good enough default for \"go to definition\" (not 'tagfunc').\r\n\r\nI had asked in chat some time ago if people use lsp.definition and why because I was also thinking we could remove lsp.definition. I don't remember all the details but the conclusion was that we shouldn't' remove lsp.definition.\r\n\r\n> Interesting. So why does vs-code choose the correct path which has the builtin in ~/.vscode?\r\n\r\nIn your screenshot it also shows the builtin as first result. My best guess would be that handlers is expanded and used first because it's open. So it would be a combination of retaining the result in order but also considering the open file. \r\n\r\n(Which I guess we could do in lsp.definition as default. Open the quickfix and pre-select the first entry matching the current file without changing the ordering. But I can imagine some would still prefer it not selecting any choice at all)",
            "created_at": "2024-08-11T15:30:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282797551",
            "id": 2282797551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IELnv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282797551/reactions"
            },
            "updated_at": "2024-08-11T15:33:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282797551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> They shouldn't. But idealism doesn't match practice. People make assumptions all the time. (Like how this PR made the assumption that a client is free to re-order :p)\r\n\r\nI came to the conclusion that if ordering isn't explicit, then the client must handle the results as unordered, since a client needs to cater for the lowest common denominator.\r\n\r\nThe spec is quite explicit about the ordering of completions and text edits.\r\n\r\nSince LuaLS explicitly orders the results, I'll raise a PR to fix it there. (EDIT: https://github.com/LuaLS/lua-language-server/pull/2792)",
            "created_at": "2024-08-11T15:41:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/30025#issuecomment-2282800457",
            "id": 2282800457,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
            "node_id": "IC_kwDOAPphoM6IEMVJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282800457/reactions"
            },
            "updated_at": "2024-08-11T15:58:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282800457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30025/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30025/commits",
    "created_at": "2024-08-11T11:03:11Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30025.diff",
    "draft": true,
    "head": {
        "label": "lewis6991:feat/lsp_sort_tags",
        "ref": "feat/lsp_sort_tags",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2025-06-16T15:57:45Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 320472,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2025-01-29T11:45:46Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "e38ab71c89ce24835b1bbee011ec7263c2063862",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30025",
    "id": 2013775882,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30025",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "d83fc17806c081c097c79cca038c1c0c693443f1",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM54B8gK",
    "number": 30025,
    "patch_url": "https://github.com/neovim/neovim/pull/30025.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30025/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/e38ab71c89ce24835b1bbee011ec7263c2063862",
    "title": "feat(lsp): sort results in vim.lsp.tagfunc",
    "updated_at": "2025-06-15T10:24:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30025",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    }
}