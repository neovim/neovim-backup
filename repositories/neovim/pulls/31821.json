{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31821/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31821/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31821"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31821"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31821/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/0a4ea873994d38ac23ee9a524c4a4273635f89ab"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5811,
            "forks_count": 5811,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1839,
            "open_issues_count": 1839,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T23:17:24Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 303311,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85218,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-14T02:06:03Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85218,
            "watchers_count": 85218,
            "web_commit_signoff_required": false
        },
        "sha": "43d552c56648bc3125c7509b3d708b6bf6c0c09c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "**Problem:** The treesitter `foldexpr` calls `get_parser()` for each line in the buffer when calculating folds. This can be incredibly slow for buffers where a parser cannot be found (because the result is not cached), and exponentially more so when the user has many `runtimepath`s.\r\n\r\n**Solution:** Only fetch the parser when it is needed; that is, only when initializing fold data for a buffer.\r\n\r\nclose #27422\r\n\r\n---\r\n\r\nThere was some discussion about this in #30164 and #27422 (which I believe this can supercede). It was kind of determined that users should just not set `vim.treesitter.foldexpr()` for buffers where a parser cannot be found. But this change easily fixes that performance issue, and allows users to just globally set the foldexpr to the treesitter one without a second thought.\r\n\r\nFor reference, I have this in my config to prevent extremely slow buffer loading:\r\n\r\n```lua\r\ncreate_autocmd('FileType', {\r\n  callback = function(ev)\r\n    local lang = vim.treesitter.language.get_lang(vim.bo[ev.buf].ft) --[[@as string]]\r\n    if\r\n      vim.treesitter.get_parser(ev.buf, lang, { error = false })\r\n      and vim.treesitter.query.get(lang, 'folds')\r\n    then\r\n      vim.wo.foldexpr = 'v:lua.vim.treesitter.foldexpr()'\r\n    end\r\n  end,\r\n})\r\n```\r\n\r\nthat is not intuitive for the user. Being able to just set the foldexpr globally is a great help.\r\n\r\nEffectively, this PR changes the situation from:\r\n\r\n- Set the foldexpr globally and be punished when a parser cannot be found for your buffer\r\n\r\nto:\r\n\r\n- Set the foldexpr globally and if no parser is found, you will incur no performance hit\r\n\r\n---\r\n\r\n#### Benchmark\r\n\r\nWhen running `nvim --clean +'lua vim.wo.foldmethod=\"expr\"; vim.wo.foldexpr=\"v:lua.vim.treesitter.foldexpr()\"'` on [the big linux file™](https://raw.githubusercontent.com/torvalds/linux/master/drivers/gpu/drm/amd/include/asic_reg/dcn/dcn_3_2_0_sh_mask.h) (renamed to `.txt` to show the case of no parser being found):\r\n\r\n<details>\r\n  <summary>Show results</summary>\r\n\r\n**Before:**\r\n\r\n```\r\n--- Startup times for process: Primary (or UI client) ---\r\n\r\ntimes in msec\r\n clock   self+sourced   self:  sourced script\r\n clock   elapsed:              other lines\r\n\r\n000.002  000.002: --- NVIM STARTING ---\r\n000.173  000.171: event init\r\n000.313  000.140: early init\r\n000.363  000.050: locale set\r\n000.429  000.065: init first window\r\n001.070  000.641: inits 1\r\n001.078  000.008: window checked\r\n001.133  000.055: parsing arguments\r\n007.866  006.356  006.356: require('vim.shared')\r\n008.317  000.044  000.044: require('vim.inspect')\r\n008.573  000.247  000.247: require('vim._options')\r\n008.581  000.710  000.419: require('vim._editor')\r\n008.582  007.094  000.028: require('vim._init_packages')\r\n008.585  000.359: init lua interpreter\r\n010.109  001.523: nvim_ui_attach\r\n010.543  000.435: nvim_set_client_info\r\n010.546  000.002: --- NVIM STARTED ---\r\n\r\n--- Startup times for process: Embedded ---\r\n\r\ntimes in msec\r\n clock   self+sourced   self:  sourced script\r\n clock   elapsed:              other lines\r\n\r\n000.002  000.002: --- NVIM STARTING ---\r\n000.101  000.099: event init\r\n000.170  000.069: early init\r\n000.208  000.038: locale set\r\n000.239  000.031: init first window\r\n000.725  000.487: inits 1\r\n000.736  000.011: window checked\r\n000.765  000.028: parsing arguments\r\n006.009  004.945  004.945: require('vim.shared')\r\n006.424  000.038  000.038: require('vim.inspect')\r\n006.677  000.245  000.245: require('vim._options')\r\n006.680  000.667  000.385: require('vim._editor')\r\n006.682  005.636  000.024: require('vim._init_packages')\r\n006.684  000.284: init lua interpreter\r\n006.768  000.083: expanding arguments\r\n006.817  000.050: inits 2\r\n007.079  000.261: init highlight\r\n007.081  000.002: waiting for UI\r\n007.288  000.207: done waiting for UI\r\n007.302  000.014: clear screen\r\n007.665  000.042  000.042: require('vim.keymap')\r\n008.203  000.899  000.857: require('vim._defaults')\r\n008.205  000.005: init default mappings & autocommands\r\n008.294  000.038  000.038: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/ftplugin.vim\r\n008.357  000.019  000.019: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/indent.vim\r\n008.363  000.101: sourcing vimrc file(s)\r\n008.528  000.009  000.009: sourcing /nix/store/frnxwjw9lpsycd6qqk974la85426syaa-ghostty-1.0.0/share/nvim/site/ftdetect/ghostty.vim\r\n008.627  000.009  000.009: sourcing /etc/profiles/per-user/whoami/share/nvim/site/ftdetect/ghostty.vim\r\n008.642  000.241  000.222: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/filetype.lua\r\n008.776  000.056  000.056: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/syntax/synload.vim\r\n008.890  000.220  000.164: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/syntax/syntax.vim\r\n012.557  000.378  000.378: sourcing /etc/profiles/per-user/whoami/share/nvim/site/plugin/fzf.vim\r\n012.981  000.121  000.121: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/gzip.vim\r\n015.451  000.154  000.154: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/pack/dist/opt/matchit/plugin/matchit.vim\r\n015.995  002.996  002.841: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/matchit.vim\r\n016.120  000.107  000.107: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/matchparen.vim\r\n016.338  000.203  000.203: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/netrwPlugin.vim\r\n016.401  000.039  000.039: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/rplugin.vim\r\n016.467  000.047  000.047: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/shada.vim\r\n016.507  000.013  000.013: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/spellfile.vim\r\n016.595  000.069  000.069: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/tarPlugin.vim\r\n016.634  000.011  000.011: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/tutor.vim\r\n016.785  000.128  000.128: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/zipPlugin.vim\r\n016.865  000.038  000.038: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/editorconfig.lua\r\n016.928  000.040  000.040: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/man.lua\r\n021.682  004.695  004.695: require('vim.termcap')\r\n021.735  000.040  000.040: require('vim.text')\r\n021.746  004.798  000.063: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/osc52.lua\r\n021.806  000.036  000.036: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/tohtml.lua\r\n021.857  004.009: loading rtp plugins\r\n023.778  001.921: loading packages\r\n023.780  000.002: loading after plugins\r\n023.799  000.019: inits 3\r\n023.806  000.007: reading ShaDa\r\n105.599  001.897  001.897: require('vim.filetype')\r\n106.558  000.793  000.793: require('vim.filetype.detect')\r\n107.209  000.038  000.038: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/ftplugin/text.vim\r\n108.299  000.046  000.046: require('vim.F')\r\n108.485  000.180  000.180: require('editorconfig')\r\n108.750  000.261  000.261: require('vim.fs')\r\n109.293  082.270: opening buffers\r\n109.321  000.028: BufEnter autocommands\r\n109.326  000.005: editing files in windows\r\n109.348  000.023: executing command arguments\r\n110.671  000.080  000.080: require('vim.treesitter.language')\r\n110.692  000.017  000.017: require('vim.func')\r\n110.728  000.030  000.030: require('vim.func._memoize')\r\n110.743  000.438  000.312: require('vim.treesitter.query')\r\n110.816  000.071  000.071: require('vim.treesitter._range')\r\n110.824  000.810  000.300: require('vim.treesitter.languagetree')\r\n110.829  000.997  000.188: require('vim.treesitter')\r\n110.992  000.159  000.159: require('vim.treesitter._fold')\r\n8337.082  8226.577: VimEnter autocommands\r\n8337.095  000.013: UIEnter autocommands\r\n8337.097  000.002: before starting main loop\r\n8337.737  000.640: first screen update\r\n8337.741  000.004: --- NVIM STARTED ---\r\n```\r\n\r\n**After:**\r\n\r\n```\r\n--- Startup times for process: Primary (or UI client) ---\r\n\r\ntimes in msec\r\n clock   self+sourced   self:  sourced script\r\n clock   elapsed:              other lines\r\n\r\n000.002  000.002: --- NVIM STARTING ---\r\n000.125  000.122: event init\r\n000.228  000.103: early init\r\n000.271  000.043: locale set\r\n000.318  000.047: init first window\r\n000.874  000.556: inits 1\r\n000.880  000.006: window checked\r\n000.923  000.043: parsing arguments\r\n006.988  005.754  005.754: require('vim.shared')\r\n007.460  000.040  000.040: require('vim.inspect')\r\n007.773  000.300  000.300: require('vim._options')\r\n007.777  000.782  000.442: require('vim._editor')\r\n007.778  006.562  000.026: require('vim._init_packages')\r\n007.783  000.298: init lua interpreter\r\n009.557  001.774: nvim_ui_attach\r\n010.079  000.522: nvim_set_client_info\r\n010.081  000.002: --- NVIM STARTED ---\r\n\r\n--- Startup times for process: Embedded ---\r\n\r\ntimes in msec\r\n clock   self+sourced   self:  sourced script\r\n clock   elapsed:              other lines\r\n\r\n000.001  000.001: --- NVIM STARTING ---\r\n000.128  000.127: event init\r\n000.242  000.114: early init\r\n000.290  000.047: locale set\r\n000.336  000.046: init first window\r\n000.911  000.575: inits 1\r\n000.923  000.012: window checked\r\n000.964  000.042: parsing arguments\r\n007.379  006.053  006.053: require('vim.shared')\r\n007.818  000.039  000.039: require('vim.inspect')\r\n008.057  000.229  000.229: require('vim._options')\r\n008.061  000.678  000.410: require('vim._editor')\r\n008.063  006.776  000.045: require('vim._init_packages')\r\n008.065  000.325: init lua interpreter\r\n008.171  000.106: expanding arguments\r\n008.217  000.046: inits 2\r\n008.483  000.266: init highlight\r\n008.486  000.002: waiting for UI\r\n008.709  000.223: done waiting for UI\r\n008.724  000.015: clear screen\r\n009.107  000.044  000.044: require('vim.keymap')\r\n009.697  000.970  000.926: require('vim._defaults')\r\n009.700  000.006: init default mappings & autocommands\r\n009.865  000.101  000.101: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/ftplugin.vim\r\n009.938  000.019  000.019: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/indent.vim\r\n009.946  000.126: sourcing vimrc file(s)\r\n010.192  000.026  000.026: sourcing /nix/store/frnxwjw9lpsycd6qqk974la85426syaa-ghostty-1.0.0/share/nvim/site/ftdetect/ghostty.vim\r\n010.313  000.006  000.006: sourcing /etc/profiles/per-user/whoami/share/nvim/site/ftdetect/ghostty.vim\r\n010.331  000.328  000.296: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/filetype.lua\r\n010.543  000.080  000.080: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/syntax/synload.vim\r\n010.738  000.359  000.279: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/syntax/syntax.vim\r\n013.913  000.397  000.397: sourcing /etc/profiles/per-user/whoami/share/nvim/site/plugin/fzf.vim\r\n014.367  000.140  000.140: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/gzip.vim\r\n016.717  000.139  000.139: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/pack/dist/opt/matchit/plugin/matchit.vim\r\n017.245  002.858  002.719: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/matchit.vim\r\n017.367  000.104  000.104: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/matchparen.vim\r\n017.587  000.205  000.205: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/netrwPlugin.vim\r\n017.648  000.038  000.038: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/rplugin.vim\r\n017.713  000.046  000.046: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/shada.vim\r\n017.750  000.012  000.012: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/spellfile.vim\r\n017.838  000.068  000.068: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/tarPlugin.vim\r\n017.876  000.011  000.011: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/tutor.vim\r\n018.016  000.120  000.120: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/zipPlugin.vim\r\n018.072  000.027  000.027: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/editorconfig.lua\r\n018.134  000.040  000.040: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/man.lua\r\n022.922  004.731  004.731: require('vim.termcap')\r\n022.969  000.038  000.038: require('vim.text')\r\n022.984  004.831  000.062: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/osc52.lua\r\n023.025  000.020  000.020: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/plugin/tohtml.lua\r\n023.074  003.524: loading rtp plugins\r\n025.021  001.947: loading packages\r\n025.023  000.002: loading after plugins\r\n025.032  000.008: inits 3\r\n025.039  000.007: reading ShaDa\r\n107.962  001.548  001.548: require('vim.filetype')\r\n108.912  000.814  000.814: require('vim.filetype.detect')\r\n109.479  000.033  000.033: sourcing /home/whoami/Documents/CodeProjects/neovim/runtime/ftplugin/text.vim\r\n110.598  000.050  000.050: require('vim.F')\r\n110.782  000.179  000.179: require('editorconfig')\r\n110.971  000.185  000.185: require('vim.fs')\r\n111.118  083.269: opening buffers\r\n111.138  000.020: BufEnter autocommands\r\n111.140  000.002: editing files in windows\r\n111.155  000.014: executing command arguments\r\n111.988  000.056  000.056: require('vim.treesitter.language')\r\n112.007  000.015  000.015: require('vim.func')\r\n112.049  000.038  000.038: require('vim.func._memoize')\r\n112.059  000.389  000.280: require('vim.treesitter.query')\r\n112.119  000.058  000.058: require('vim.treesitter._range')\r\n112.125  000.709  000.261: require('vim.treesitter.languagetree')\r\n112.128  000.842  000.133: require('vim.treesitter')\r\n112.284  000.153  000.153: require('vim.treesitter._fold')\r\n303.373  191.223: VimEnter autocommands\r\n303.381  000.008: UIEnter autocommands\r\n303.384  000.002: before starting main loop\r\n303.952  000.569: first screen update\r\n303.956  000.004: --- NVIM STARTED ---\r\n```\r\n\r\n</details>",
    "closed_at": "2025-01-07T15:43:46Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1900454863"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900454863"
                }
            },
            "author_association": "MEMBER",
            "body": "In this local function `compute_folds_levels()`: `ts.get_parser` is called:\r\n\r\n```\r\n  local parser = assert(ts.get_parser(bufnr, nil, { error = false }))\r\n```\r\n\r\nso it looks like 354-358 lines would never be called, instead a error would have been raised. (but might be suppressed if called from a \"foldexpr\")",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-01T20:10:43Z",
            "diff_hunk": "@@ -347,15 +347,15 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n     compute_folds_levels(bufnr, foldinfos[bufnr])",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1900454863",
            "id": 1900454863,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xRqPP",
            "original_commit_id": "8f49a5369f15c40d29add90082b0ccd59f1b3908",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2526923034,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900454863/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-01T20:17:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900454863",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1900471739"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900471739"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah nice catch, thanks",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-01T22:43:04Z",
            "diff_hunk": "@@ -347,15 +347,15 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n     compute_folds_levels(bufnr, foldinfos[bufnr])",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1900471739",
            "id": 1900471739,
            "in_reply_to_id": 1900454863,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xRuW7",
            "original_commit_id": "8f49a5369f15c40d29add90082b0ccd59f1b3908",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2526938896,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900471739/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-01T22:43:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900471739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1900769155"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900769155"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "nit: foldinfo for bufer without parser won't be cleaned up when the buffer is deleted.\r\n\r\nI suggest registering a BufUnload autocmd (or similar) to clean up the foldinfo.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T11:10:57Z",
            "diff_hunk": "@@ -347,13 +347,14 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })\n+\n+    if not parser then",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1900769155",
            "id": 1900769155,
            "line": 369,
            "node_id": "PRRC_kwDOAPphoM5xS2-D",
            "original_commit_id": "784e513dd7f1ce969f926d483274c4846ca4a948",
            "original_line": 369,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": 54,
            "pull_request_review_id": 2527393819,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900769155/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T11:10:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1900769155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901120721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901120721"
                }
            },
            "author_association": "MEMBER",
            "body": "\r\nBetter to give rough numbers when possible. Based on your startup time example I'm going to call this a 10x speedup :)\r\n\r\n\r\n```suggestion\r\n• 10x speedup for |vim.treesitter.foldexpr()| (especially when no parser exists\r\n  for the buffer).\r\n```",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T17:52:48Z",
            "diff_hunk": "@@ -284,6 +284,9 @@ PERFORMANCE\n   highlighting.\n • LSP diagnostics and inlay hints are de-duplicated (new requests cancel\n   inflight requests). This greatly improves performance with slow LSP servers.\n+• Significantly reduced fold calculation time for large buffers using\n+  |vim.treesitter.foldexpr()| (especially when no parser exists for the\n+  buffer).",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901120721",
            "id": 1901120721,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUMzR",
            "original_commit_id": "5190d48ecb41e1e6196dbf2e9077f415f1bc5d36",
            "original_line": 288,
            "original_position": 6,
            "original_start_line": 287,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2527982323,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901120721/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-02T17:52:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901120721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901147605"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901147605"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure that makes sense (though just gonna mention, for me with around 30+ plugins it is more like a 100x speed up :laughing: )",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T18:24:25Z",
            "diff_hunk": "@@ -284,6 +284,9 @@ PERFORMANCE\n   highlighting.\n • LSP diagnostics and inlay hints are de-duplicated (new requests cancel\n   inflight requests). This greatly improves performance with slow LSP servers.\n+• Significantly reduced fold calculation time for large buffers using\n+  |vim.treesitter.foldexpr()| (especially when no parser exists for the\n+  buffer).",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901147605",
            "id": 1901147605,
            "in_reply_to_id": 1901120721,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUTXV",
            "original_commit_id": "5190d48ecb41e1e6196dbf2e9077f415f1bc5d36",
            "original_line": 288,
            "original_position": 6,
            "original_start_line": 287,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2528030278,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901147605/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-02T18:24:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901147605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901151982"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901151982"
                }
            },
            "author_association": "MEMBER",
            "body": "exec_lua can take functions",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T18:30:27Z",
            "diff_hunk": "@@ -767,4 +767,36 @@ t2]])\n     ]],\n     }\n   end)\n+\n+  it(\"doesn't call get_parser too often when parser is not available\", function()\n+    -- spy on vim.treesitter.get_parser() to keep track of how many times it is called\n+    exec_lua [[",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901151982",
            "id": 1901151982,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUUbu",
            "original_commit_id": "d6a3b0e41be3099f4be393b13372160af1fd50ab",
            "original_line": 773,
            "original_position": 7,
            "original_start_line": null,
            "path": "test/functional/treesitter/fold_spec.lua",
            "position": null,
            "pull_request_review_id": 2528037337,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901151982/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T18:33:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901151982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901164849"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901164849"
                }
            },
            "author_association": "MEMBER",
            "body": "Did you consider just wrapping this with memorize instead? The benefit is that if a parser becomes available, then folding will work as normal as the cache will be invalidated on gc.\n\nI guess one could argue that treesitter folding shouldn't be enabled unless a parser is available.\n\nAnother idea would be to store a reference to the parser in foldinfo and check that first? And then always check for a parser if one wasn't stored in foldinfo. Would still need to autocmd, but at least it would work if a parser is installed during the nvim session.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T18:46:13Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901164849",
            "id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUXkx",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528057768,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901164849/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T18:47:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901164849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901177762"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901177762"
                }
            },
            "author_association": "MEMBER",
            "body": "> Did you consider just wrapping this with memorize instead\r\n\r\nI did, but I think it should wait until #30227 because in my experience the collections are quite frequent and thus the memoization gains are not as strong\r\n\r\n> Another idea would be to store a reference to the parser in foldinfo\r\n\r\nThat's a really good idea. But how would it detect parser installation during nvim session?",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T19:03:44Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901177762",
            "id": 1901177762,
            "in_reply_to_id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUaui",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528081039,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901177762/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T19:03:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901177762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901184121"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901184121"
                }
            },
            "author_association": "MEMBER",
            "body": "It wouldn't; the next fold update would just call get_parser and it will be available.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T19:13:04Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901184121",
            "id": 1901184121,
            "in_reply_to_id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUcR5",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528091283,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901184121/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T19:13:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901184121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901220722"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901220722"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry, I don't understand. How would it know to call get_parser again (without continually calling it)?",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T20:05:49Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901220722",
            "id": 1901220722,
            "in_reply_to_id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUlNy",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528150560,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901220722/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T20:05:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901220722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901225373"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901225373"
                }
            },
            "author_association": "MEMBER",
            "body": "I said:\n\n> And then always check for a parser if one wasn't stored in foldinfo. \n\nSo you would always check for it.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T20:13:19Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901225373",
            "id": 1901225373,
            "in_reply_to_id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUmWd",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528158269,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901225373/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T20:13:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901225373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901226758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901226758"
                }
            },
            "author_association": "MEMBER",
            "body": "Then how would this be different from the existing implementation? Right now (before this PR) we always check if get_parser() is nil. If we just store it in foldinfo, then always check that it exists (and if not, call `get_parser()`), we run into the same issue as before, no?",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T20:15:38Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901226758",
            "id": 1901226758,
            "in_reply_to_id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUmsG",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528160660,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901226758/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T20:15:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901226758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901228872"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901228872"
                }
            },
            "author_association": "MEMBER",
            "body": "This was essentially discussed in #27422. We should aim for an implementation that can handle a parser becoming available during a session. It looks like this PR doesn't allow it atm, so I'm not sure what it does instead of #27422",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T20:18:58Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901228872",
            "id": 1901228872,
            "in_reply_to_id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUnNI",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528164026,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901228872/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T20:19:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901228872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901237322"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901237322"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we can solve this by moving the `BufUnload` autocmd outside the `if not parser` block so it always runs. That way it essentially acts as a cache check and the discussed `:e` will properly refresh folds upon a new parser (and not poll for a parser on every line)\r\n\r\nI'll add a test ",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T20:30:27Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901237322",
            "id": 1901237322,
            "in_reply_to_id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUpRK",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528178890,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901237322/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T20:30:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901237322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1901241233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901241233"
                }
            },
            "author_association": "MEMBER",
            "body": "Another idea would be to cache the parser in a `table<buf,parser>` and to clear this cache in a `vim.schedule`. This will make it so get_parser is only called once per fold update which should give you the ~30x speedup.\n\nEDIT: instead of a separate table, just store it in foldinfo like I suggested above.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-02T20:36:37Z",
            "diff_hunk": "@@ -347,13 +347,21 @@ function M.foldexpr(lnum)\n   lnum = lnum or vim.v.lnum\n   local bufnr = api.nvim_get_current_buf()\n \n-  local parser = ts.get_parser(bufnr, nil, { error = false })\n-  if not parser then\n-    return '0'\n-  end\n-\n   if not foldinfos[bufnr] then\n     foldinfos[bufnr] = FoldInfo.new()\n+    local parser = ts.get_parser(bufnr, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1901241233",
            "id": 1901241233,
            "in_reply_to_id": 1901164849,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5xUqOR",
            "original_commit_id": "90fb29ef9384feb8b3a74298a8f047f7e444a597",
            "original_line": 352,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": null,
            "pull_request_review_id": 2528185337,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901241233/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-02T20:41:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1901241233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1904893321"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1904893321"
                }
            },
            "author_association": "MEMBER",
            "body": "I would omit the `10x` here since the performance gain depends on a lot of factors (the OS, hardware, anti-viruses etc).",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-07T04:31:50Z",
            "diff_hunk": "@@ -284,6 +284,8 @@ PERFORMANCE\n   highlighting.\n • LSP diagnostics and inlay hints are de-duplicated (new requests cancel\n   inflight requests). This greatly improves performance with slow LSP servers.\n+• 10x speedup for |vim.treesitter.foldexpr()| (when no parser exists for the",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1904893321",
            "id": 1904893321,
            "line": 287,
            "node_id": "PRRC_kwDOAPphoM5xil2J",
            "original_commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "original_line": 287,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 2533364504,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1904893321/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T04:42:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1904893321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1904896076"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1904896076"
                }
            },
            "author_association": "MEMBER",
            "body": "Right now the `assert` makes the user aware that `get_parser` returned `nil`. Is it okay to change this to a silent return?",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-07T04:37:11Z",
            "diff_hunk": "@@ -69,7 +74,10 @@ local function compute_folds_levels(bufnr, info, srow, erow, parse_injections)\n   srow = srow or 0\n   erow = erow or api.nvim_buf_line_count(bufnr)\n \n-  local parser = assert(ts.get_parser(bufnr, nil, { error = false }))\n+  local parser = info.parser\n+  if not parser then",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1904896076",
            "id": 1904896076,
            "line": 78,
            "node_id": "PRRC_kwDOAPphoM5ximhM",
            "original_commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "original_line": 78,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": 27,
            "pull_request_review_id": 2533364504,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1904896076/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T04:42:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1904896076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1905387593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905387593"
                }
            },
            "author_association": "MEMBER",
            "body": "It doesn't need to be exact but mentioning a rough estimate is more impactful than just \"improved performance\". If this matches some benchmarks then it's good.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-07T12:31:46Z",
            "diff_hunk": "@@ -284,6 +284,8 @@ PERFORMANCE\n   highlighting.\n • LSP diagnostics and inlay hints are de-duplicated (new requests cancel\n   inflight requests). This greatly improves performance with slow LSP servers.\n+• 10x speedup for |vim.treesitter.foldexpr()| (when no parser exists for the",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1905387593",
            "id": 1905387593,
            "in_reply_to_id": 1904893321,
            "line": 287,
            "node_id": "PRRC_kwDOAPphoM5xkehJ",
            "original_commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "original_line": 287,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 2534221586,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905387593/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T12:32:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905387593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1905638513"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905638513"
                }
            },
            "author_association": "MEMBER",
            "body": "I think so; I didn't know until wookayin pointed it out that asserts/errors triggered in the foldexpr don't even get sent to the user, and just fail silently. So from the user's perspective, the behavior should appear the same still",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-07T15:33:58Z",
            "diff_hunk": "@@ -69,7 +74,10 @@ local function compute_folds_levels(bufnr, info, srow, erow, parse_injections)\n   srow = srow or 0\n   erow = erow or api.nvim_buf_line_count(bufnr)\n \n-  local parser = assert(ts.get_parser(bufnr, nil, { error = false }))\n+  local parser = info.parser\n+  if not parser then",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1905638513",
            "id": 1905638513,
            "in_reply_to_id": 1904896076,
            "line": 78,
            "node_id": "PRRC_kwDOAPphoM5xlbxx",
            "original_commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "original_line": 78,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": 27,
            "pull_request_review_id": 2534655758,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905638513/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T15:33:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905638513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1905778414"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905778414"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm personally not a fan of mentioning stats like these without specifying the conditions of the benchmark tests. Without the context from this PR, a `10x speedup` almost sounds like a buzz headline.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-07T16:53:28Z",
            "diff_hunk": "@@ -284,6 +284,8 @@ PERFORMANCE\n   highlighting.\n • LSP diagnostics and inlay hints are de-duplicated (new requests cancel\n   inflight requests). This greatly improves performance with slow LSP servers.\n+• 10x speedup for |vim.treesitter.foldexpr()| (when no parser exists for the",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1905778414",
            "id": 1905778414,
            "in_reply_to_id": 1904893321,
            "line": 287,
            "node_id": "PRRC_kwDOAPphoM5xl97u",
            "original_commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "original_line": 287,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 2534918348,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905778414/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T16:53:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905778414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1905784377"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905784377"
                }
            },
            "author_association": "MEMBER",
            "body": "it is a buzz headline. all performance comparisons are inherently squishy. that isn't a reason to permanently avoid mentioning any concrete numbers.\r\n\r\nthe stakes are low. the news file is intended to gives users an idea of improvements, it doesn't need to be overly strict about performance details.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-07T16:57:37Z",
            "diff_hunk": "@@ -284,6 +284,8 @@ PERFORMANCE\n   highlighting.\n • LSP diagnostics and inlay hints are de-duplicated (new requests cancel\n   inflight requests). This greatly improves performance with slow LSP servers.\n+• 10x speedup for |vim.treesitter.foldexpr()| (when no parser exists for the",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1905784377",
            "id": 1905784377,
            "in_reply_to_id": 1904893321,
            "line": 287,
            "node_id": "PRRC_kwDOAPphoM5xl_Y5",
            "original_commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "original_line": 287,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 2534928360,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905784377/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T16:59:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905784377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31821#discussion_r1905806428"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31821"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905806428"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair enough. If the goal of the headline is to get people excited, then I'll stop complaining here.",
            "commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "created_at": "2025-01-07T17:15:44Z",
            "diff_hunk": "@@ -284,6 +284,8 @@ PERFORMANCE\n   highlighting.\n • LSP diagnostics and inlay hints are de-duplicated (new requests cancel\n   inflight requests). This greatly improves performance with slow LSP servers.\n+• 10x speedup for |vim.treesitter.foldexpr()| (when no parser exists for the",
            "html_url": "https://github.com/neovim/neovim/pull/31821#discussion_r1905806428",
            "id": 1905806428,
            "in_reply_to_id": 1904893321,
            "line": 287,
            "node_id": "PRRC_kwDOAPphoM5xmExc",
            "original_commit_id": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
            "original_line": 287,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 2534967834,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905806428/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-07T17:15:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1905806428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Is it worth grabbing the test from https://github.com/neovim/neovim/pull/27422 ?",
            "created_at": "2025-01-02T17:54:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/31821#issuecomment-2568152503",
            "id": 2568152503,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31821",
            "node_id": "IC_kwDOAPphoM6ZEuW3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568152503/reactions"
            },
            "updated_at": "2025-01-02T17:54:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568152503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh nice, yeah thx",
            "created_at": "2025-01-02T18:21:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/31821#issuecomment-2568184811",
            "id": 2568184811,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31821",
            "node_id": "IC_kwDOAPphoM6ZE2Pr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568184811/reactions"
            },
            "updated_at": "2025-01-02T18:21:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2568184811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For my own learning: Are injections relevant here? Or is only the root parser needed for `foldexpr`?",
            "created_at": "2025-01-07T04:43:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/31821#issuecomment-2574382050",
            "id": 2574382050,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31821",
            "node_id": "IC_kwDOAPphoM6ZcfPi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2574382050/reactions"
            },
            "updated_at": "2025-01-07T04:43:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2574382050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Anything blocking this? Can the memoize change be a followup?\r\n\r\nYeah I think this is good to go :+1: \r\n\r\n> For my own learning: Are injections relevant here? Or is only the root parser needed for `foldexpr`?\r\n\r\nInjections are accounted for; the root parser has a `parser:for_each_tree()` call which runs the fold calculation function for each child (injected) tree",
            "created_at": "2025-01-07T15:35:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31821#issuecomment-2575596797",
            "id": 2575596797,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31821",
            "node_id": "IC_kwDOAPphoM6ZhHz9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575596797/reactions"
            },
            "updated_at": "2025-01-07T15:35:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575596797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let's iterate in followups then. Good job!",
            "created_at": "2025-01-07T15:44:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/31821#issuecomment-2575616540",
            "id": 2575616540,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31821",
            "node_id": "IC_kwDOAPphoM6ZhMoc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575616540/reactions"
            },
            "updated_at": "2025-01-07T15:44:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575616540",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31821/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31821/commits",
    "created_at": "2025-01-01T19:55:52Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31821.diff",
    "draft": false,
    "head": {
        "label": "ribru17:fold_perf",
        "ref": "fold_perf",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T18:53:41Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 296039,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-01-13T16:14:33Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "0a4ea873994d38ac23ee9a524c4a4273635f89ab",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31821",
    "id": 2257192951,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31821",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "d9ee0d2984e5fc30cb032785d32f42c72c7e64e1",
    "merged_at": "2025-01-07T15:43:46Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 131,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 59,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-01-11T10:49:46Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM6Gigf3",
    "number": 31821,
    "patch_url": "https://github.com/neovim/neovim/pull/31821.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31821/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/0a4ea873994d38ac23ee9a524c4a4273635f89ab",
    "title": "perf(treesitter): don't fetch parser for each fold line",
    "updated_at": "2025-01-07T17:15:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31821",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}