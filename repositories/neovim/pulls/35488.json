{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35488/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35488/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35488"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35488"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35488/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d2a2b292ba4b11a40536659e6e9c9d70944dd33a"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6310,
            "forks_count": 6310,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1996,
            "open_issues_count": 1996,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-09T01:58:55Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 341252,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92608,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-09T02:05:07Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92608,
            "watchers_count": 92608,
            "web_commit_signoff_required": false
        },
        "sha": "431004dda2bbfe1565afcaa5117a0287317b0215",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This PR allows Neovim to run at the same priority as GUI applications on macOS. This makes Neovim as responsive as other apps are when the system is under load. The video below is from vim/vim#18120 and as such displays Vim instead of Neovim, but the effect is the same.\r\n\r\nhttps://github.com/user-attachments/assets/c3694125-81fd-43a8-882b-0f8b70357b18\r\n\r\nThe left terminal is before, and the right terminal is after. At first the system isn’t under load and both Vim instances scroll smoothly. Once I start a test program which pins all the cores of my machine, the left Vim instance’s responsiveness falls dramatically while the right one is barely affected.\r\n\r\nPlease let me know if I’ve put the code in the wrong spot, or if I should expand on how this change works. Thanks!",
    "closed_at": "2025-09-03T01:34:47Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2315361057"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315361057"
                }
            },
            "author_association": "MEMBER",
            "body": "If the main thread's priority doesn't need adjusting, what does this actually adjust? Usually there are no other threads.",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-02T08:41:58Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Apply a priority appropriate for interactive work to the Nvim process.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // Inform the macOS scheduler that Nvim renders UI, and so shouldn’t have its threads’ quality\n+  // of service classes clamped. The main thread runs at User Interactive by default so we don’t\n+  // need to adjust that.\n+  integer_t policy = TASK_DEFAULT_APPLICATION;\n+  task_policy_set(mach_task_self(), TASK_CATEGORY_POLICY, &policy, 1);",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2315361057",
            "id": 2315361057,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6KAZsh",
            "original_commit_id": "b623c518fb615038233416a87a14b6e04e87698a",
            "original_line": 382,
            "original_position": 23,
            "original_start_line": 378,
            "path": "src/nvim/os/env.c",
            "position": 1,
            "pull_request_review_id": 3175495317,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315361057/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-02T08:43:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315361057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2315531097"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315531097"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "By default, processes have the `TASK_UNSPECIFIED` “role”, which means all of the process’s threads are clamped to Default QoS. Setting the role to `TASK_DEFAULT_APPLICATION` removes this clamp.",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-02T09:41:13Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Apply a priority appropriate for interactive work to the Nvim process.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // Inform the macOS scheduler that Nvim renders UI, and so shouldn’t have its threads’ quality\n+  // of service classes clamped. The main thread runs at User Interactive by default so we don’t\n+  // need to adjust that.\n+  integer_t policy = TASK_DEFAULT_APPLICATION;\n+  task_policy_set(mach_task_self(), TASK_CATEGORY_POLICY, &policy, 1);",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2315531097",
            "id": 2315531097,
            "in_reply_to_id": 2315361057,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6KBDNZ",
            "original_commit_id": "b623c518fb615038233416a87a14b6e04e87698a",
            "original_line": 382,
            "original_position": 23,
            "original_start_line": 378,
            "path": "src/nvim/os/env.c",
            "position": 1,
            "pull_request_review_id": 3175731975,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315531097/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-02T09:41:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315531097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4",
                "events_url": "https://api.github.com/users/lunacookies/events{/privacy}",
                "followers_url": "https://api.github.com/users/lunacookies/followers",
                "following_url": "https://api.github.com/users/lunacookies/following{/other_user}",
                "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lunacookies",
                "id": 31783266,
                "login": "lunacookies",
                "node_id": "MDQ6VXNlcjMxNzgzMjY2",
                "organizations_url": "https://api.github.com/users/lunacookies/orgs",
                "received_events_url": "https://api.github.com/users/lunacookies/received_events",
                "repos_url": "https://api.github.com/users/lunacookies/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lunacookies",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2315973971"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315973971"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n/// Signals to the OS that Nvim is an application for \"interactive work\"\r\n/// which should be prioritized similar to a GUI app.\r\n```",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-02T12:44:07Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Apply a priority appropriate for interactive work to the Nvim process.",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2315973971",
            "id": 2315973971,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6KCvVT",
            "original_commit_id": "6a04a919680f9e3b4f236273ba9cd7e7fe42c65b",
            "original_line": 374,
            "original_position": 15,
            "original_start_line": null,
            "path": "src/nvim/os/env.c",
            "position": 1,
            "pull_request_review_id": 3176383848,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315973971/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-02T12:44:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315973971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2315980312"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315980312"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  // By default, processes have the TASK_UNSPECIFIED \"role\", which means all of its threads are\r\n  // clamped to Default QoS. Setting the role to TASK_DEFAULT_APPLICATION removes this clamp.\r\n```",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-02T12:46:29Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Apply a priority appropriate for interactive work to the Nvim process.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // Inform the macOS scheduler that Nvim renders UI, and so shouldn’t have its threads’ quality\n+  // of service classes clamped. The main thread runs at User Interactive by default so we don’t\n+  // need to adjust that.",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2315980312",
            "id": 2315980312,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6KCw4Y",
            "original_commit_id": "6a04a919680f9e3b4f236273ba9cd7e7fe42c65b",
            "original_line": 380,
            "original_position": 21,
            "original_start_line": 378,
            "path": "src/nvim/os/env.c",
            "position": 1,
            "pull_request_review_id": 3176393308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315980312/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-02T12:46:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315980312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2316474365"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2316474365"
                }
            },
            "author_association": "MEMBER",
            "body": "I still don't understand. So does this do anything to the main thread or not? If yes, then what is the point of the last sentence in this comment?",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-02T15:40:26Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Apply a priority appropriate for interactive work to the Nvim process.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // Inform the macOS scheduler that Nvim renders UI, and so shouldn’t have its threads’ quality\n+  // of service classes clamped. The main thread runs at User Interactive by default so we don’t\n+  // need to adjust that.\n+  integer_t policy = TASK_DEFAULT_APPLICATION;\n+  task_policy_set(mach_task_self(), TASK_CATEGORY_POLICY, &policy, 1);",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2316474365",
            "id": 2316474365,
            "in_reply_to_id": 2315361057,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6KEpf9",
            "original_commit_id": "b623c518fb615038233416a87a14b6e04e87698a",
            "original_line": 382,
            "original_position": 23,
            "original_start_line": 378,
            "path": "src/nvim/os/env.c",
            "position": 1,
            "pull_request_review_id": 3177129490,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2316474365/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-02T15:41:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2316474365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2317357349"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2317357349"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It doesn’t _directly_ do anything to the main thread, but does have the side effect of letting the main thread run at its actual QoS by removing the process-wide QoS clamp.",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-02T22:58:40Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Apply a priority appropriate for interactive work to the Nvim process.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // Inform the macOS scheduler that Nvim renders UI, and so shouldn’t have its threads’ quality\n+  // of service classes clamped. The main thread runs at User Interactive by default so we don’t\n+  // need to adjust that.\n+  integer_t policy = TASK_DEFAULT_APPLICATION;\n+  task_policy_set(mach_task_self(), TASK_CATEGORY_POLICY, &policy, 1);",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2317357349",
            "id": 2317357349,
            "in_reply_to_id": 2315361057,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6KIBEl",
            "original_commit_id": "b623c518fb615038233416a87a14b6e04e87698a",
            "original_line": 382,
            "original_position": 23,
            "original_start_line": 378,
            "path": "src/nvim/os/env.c",
            "position": 1,
            "pull_request_review_id": 3178394594,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2317357349/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-02T22:58:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2317357349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4",
                "events_url": "https://api.github.com/users/lunacookies/events{/privacy}",
                "followers_url": "https://api.github.com/users/lunacookies/followers",
                "following_url": "https://api.github.com/users/lunacookies/following{/other_user}",
                "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lunacookies",
                "id": 31783266,
                "login": "lunacookies",
                "node_id": "MDQ6VXNlcjMxNzgzMjY2",
                "organizations_url": "https://api.github.com/users/lunacookies/orgs",
                "received_events_url": "https://api.github.com/users/lunacookies/received_events",
                "repos_url": "https://api.github.com/users/lunacookies/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lunacookies",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2319834712"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2319834712"
                }
            },
            "author_association": "MEMBER",
            "body": "As a follow up, we may want to consider switching to the newer Quality of Service APIs. See https://developer.apple.com/documentation/apple-silicon/tuning-your-code-s-performance-for-apple-silicon:\r\n\r\n>If you manually configure your thread’s priority using pthread_setschedparam, setpriority, or thread_set_policy, transition to APIs that set QoS classes instead.\r\n\r\nWe can also make this a bit more sophisticated by using the \"User interactive\" QoS class when Neovim is focused, and transition to the \"Utility\" or \"Background\" QoS class when unfocused (see https://developer.apple.com/library/archive/documentation/Performance/Conceptual/power_efficiency_guidelines_osx/PrioritizeWorkAtTheTaskLevel.html).",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-03T18:23:14Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Signals to the OS that Nvim is an application for \"interactive work\"\n+/// which should be prioritized similar to a GUI app.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // By default, processes have the TASK_UNSPECIFIED \"role\", which means all of its threads are\n+  // clamped to Default QoS. Setting the role to TASK_DEFAULT_APPLICATION removes this clamp.\n+  integer_t policy = TASK_DEFAULT_APPLICATION;\n+  task_policy_set(mach_task_self(), TASK_CATEGORY_POLICY, &policy, 1);",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2319834712",
            "id": 2319834712,
            "line": 382,
            "node_id": "PRRC_kwDOAPphoM6KRd5Y",
            "original_commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "original_line": 382,
            "original_position": 23,
            "original_start_line": null,
            "path": "src/nvim/os/env.c",
            "position": 23,
            "pull_request_review_id": 3181926929,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2319834712/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-03T18:24:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2319834712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2320937752"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2320937752"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "QoS APIs _complement_ the task policy API I’ve used here, rather than supersede it. QoS is set on a per-thread basis, while the task policy APIs apply to entire processes (Mach calls them tasks). By default the main thread of non-daemon processes is assigned User Interactive QoS, which is perfect for Neovim’s purposes – no change needed there. By default, processes are assigned the `TASK_UNSPECIFIED` _role_ which applies a QoS ceiling to all the process’s threads, limiting them to Default QoS or lower. This means that Neovim’s main thread has effectively been running at Default all this time. If you’re a GUI app, you’re instead assigned `TASK_FOREGROUND_APPLICATION` when focused and `TASK_BACKGROUND_APPLICATION` when unfocused. Both of these have no QoS ceiling, which is what we want if the main thread is to run at User Interactive.\r\n\r\nChanging the main thread’s QoS class to Utility or Background when unfocused wouldn’t be appropriate, since the purpose of Neovim’s main thread doesn’t change depending on focus; focused or unfocused, the main thread is still responsible for handling events and putting stuff on the screen, and so should use User Interactive.\r\n\r\nThis PR assigns `TASK_DEFAULT_APPLICATION` to Neovim. `TASK_DEFAULT_APPLICATION` is a stand-in for `TASK_FOREGROUND_APPLICATION` and `TASK_BACKGROUND_APPLICATION` for cases when the focus state is unknown. It also doesn’t impose a QoS ceiling. If we want to be extra fancy, we could follow GUI apps and set the appropriate role when focus state changes.\r\n\r\nIt’d be great if Neovim started using the QoS APIs in various places to classify the non-UI work it does! This is just not the place for that.",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-04T06:11:17Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Signals to the OS that Nvim is an application for \"interactive work\"\n+/// which should be prioritized similar to a GUI app.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // By default, processes have the TASK_UNSPECIFIED \"role\", which means all of its threads are\n+  // clamped to Default QoS. Setting the role to TASK_DEFAULT_APPLICATION removes this clamp.\n+  integer_t policy = TASK_DEFAULT_APPLICATION;\n+  task_policy_set(mach_task_self(), TASK_CATEGORY_POLICY, &policy, 1);",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2320937752",
            "id": 2320937752,
            "in_reply_to_id": 2319834712,
            "line": 382,
            "node_id": "PRRC_kwDOAPphoM6KVrMY",
            "original_commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "original_line": 382,
            "original_position": 23,
            "original_start_line": null,
            "path": "src/nvim/os/env.c",
            "position": 23,
            "pull_request_review_id": 3183585336,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2320937752/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-04T06:12:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2320937752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4",
                "events_url": "https://api.github.com/users/lunacookies/events{/privacy}",
                "followers_url": "https://api.github.com/users/lunacookies/followers",
                "following_url": "https://api.github.com/users/lunacookies/following{/other_user}",
                "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lunacookies",
                "id": 31783266,
                "login": "lunacookies",
                "node_id": "MDQ6VXNlcjMxNzgzMjY2",
                "organizations_url": "https://api.github.com/users/lunacookies/orgs",
                "received_events_url": "https://api.github.com/users/lunacookies/received_events",
                "repos_url": "https://api.github.com/users/lunacookies/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lunacookies",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2322237957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2322237957"
                }
            },
            "author_association": "MEMBER",
            "body": "Thanks for that detailed info. Do you have any documentation or references you can share where I can read more about this? Other than the links I already quoted above, I couldn't find much. And the [developer docs](https://developer.apple.com/documentation/kernel/1537790-task_policy_set) for this are abysmal.\r\n\r\n>Changing the main thread’s QoS class to Utility or Background when unfocused wouldn’t be appropriate, since the purpose of Neovim’s main thread doesn’t change depending on focus; focused or unfocused, the main thread is still responsible for handling events and putting stuff on the screen, and so should use User Interactive.\r\n\r\nThe purpose doesn't change, but the \"priority\" does. If it's not focused, then it's not interactive because it's not receiving user input. And my understanding is that these QoS APIs are used to move processes to suitable cores. If Neovim is unfocused and not receiving any user input (which also means the screen is unlikely to change) then putting it onto a slower, more energy efficient core is acceptable if it minimizes energy usage.\r\n\r\nGranted it may not matter since even on a high performance core, the nvim process should already be mostly sleeping when idle. It'd be cool to experiment with this in Instruments and get some actual energy usage data :nerd_face:  ",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-04T13:47:35Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Signals to the OS that Nvim is an application for \"interactive work\"\n+/// which should be prioritized similar to a GUI app.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // By default, processes have the TASK_UNSPECIFIED \"role\", which means all of its threads are\n+  // clamped to Default QoS. Setting the role to TASK_DEFAULT_APPLICATION removes this clamp.\n+  integer_t policy = TASK_DEFAULT_APPLICATION;\n+  task_policy_set(mach_task_self(), TASK_CATEGORY_POLICY, &policy, 1);",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2322237957",
            "id": 2322237957,
            "in_reply_to_id": 2319834712,
            "line": 382,
            "node_id": "PRRC_kwDOAPphoM6KaooF",
            "original_commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "original_line": 382,
            "original_position": 23,
            "original_start_line": null,
            "path": "src/nvim/os/env.c",
            "position": 23,
            "pull_request_review_id": 3185414752,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2322237957/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-04T13:47:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2322237957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35488#discussion_r2322570197"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35488"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2322570197"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Thanks for that detailed info.\r\n\r\nHappy to help! I’ve been researching this area for the last couple years so if you have any questions I’d love to try answering them :)\r\n\r\n> Do you have any documentation or references you can share where I can read more about this? Other than the links I already quoted above, I couldn't find much. And the [developer docs](https://developer.apple.com/documentation/kernel/1537790-task_policy_set) for this are abysmal.\r\n\r\nWhenever the developer docs don’t have enough info, try looking at the headers. For instance, `mach/task_policy.h` says:\r\n\r\n> `TASK_UNSPECIFIED` is the default, since the role is not inherited from the parent.\r\n>\r\n> `TASK_FOREGROUND_APPLICATION` should be assigned when the task is a normal UI application in the foreground from the HI point of view. N.B. There may be more than one of these at a given time.\r\n>\r\n> `TASK_BACKGROUND_APPLICATION` should be assigned when the task is a normal UI application in the background from the HI point of view.\r\n>\r\n> `TASK_CONTROL_APPLICATION` should be assigned to the unique UI application which implements the pop-up application dialog. There can only be one task at a time with this designation, which is assigned FCFS.\r\n>\r\n> `TASK_GRAPHICS_SERVER` should be assigned to the graphics management (window) server.  There can only be one task at a time with this designation, which is assigned FCFS.\r\n\r\nAdditionally, the sources of [XNU](https://github.com/apple-oss-distributions/xnu), [Dispatch](https://github.com/apple-oss-distributions/libdispatch) and [libplatform](https://github.com/apple-oss-distributions/libplatform) are especially informative. In particular I think you’d find the [scheduler docs](https://github.com/apple-oss-distributions/xnu/blob/e3723e1f17661b24996789d8afc084c0c3303b26/doc/scheduler/sched_clutch_edge.md) and [this code](https://github.com/apple-oss-distributions/xnu/blob/e3723e1f17661b24996789d8afc084c0c3303b26/osfmk/kern/task_policy.c#L833) interesting. Learning this stuff just takes a lot of experimentation (try running a spinloop at Background, then at Utility, etc and observe processor behavior with `powermetrics`; try running `taskinfo` on different processes and see what it says) and digging through old Twitter threads from Apple engineers. I also have an [overview blog post](https://blog.xoria.org/macos-tips-threading/) :D\r\n\r\n> The purpose doesn't change, but the \"priority\" does.\r\n\r\nAssigning thread priority is actually the job of the kernel! Lots of things feed into a thread’s final priority, including QoS, task role, QoS inheritance, priority inheritance, importance boosting, etc. Don’t think of priority as something you set directly: instead, you tell the OS the purpose of your thread (QoS) and the role your process plays (task role), and let it figure out the priority. For example, User Interactive threads of foreground apps [get a higher priority](https://github.com/apple-oss-distributions/xnu/blob/e3723e1f17661b24996789d8afc084c0c3303b26/osfmk/kern/sched.h#L160-L161) than those of background apps. It’s worth pointing out that thread priority is a specific numeric value that’s an input into the scheduling algorithm, and is independent of QoS and all the things that affects.\r\n\r\n> If it's not focused, then it's not interactive because it's not receiving user input. And my understanding is that these QoS APIs are used to move processes to suitable cores. If Neovim is unfocused and not receiving any user input (which also means the screen is unlikely to change) then putting it onto a slower, more energy efficient core is acceptable if it minimizes energy usage. … It'd be cool to experiment with this in Instruments and get some actual energy usage data\r\n\r\nWhile QoS does play a role in CPU frequency and choosing which core to schedule work on, probably its most significant effect is on _latency_ (which in turn saves energy if you increase latency for things that don’t care). While Background (and the private Maintenance QoS class) are locked to e-cores, all other QoS classes are free to use the p-cores all the way up to their maximum frequency, given a sustained workload (at least in my testing). Compared to User Interactive, Utility will [take 4× longer to get on core](https://github.com/apple-oss-distributions/xnu/blob/e3723e1f17661b24996789d8afc084c0c3303b26/osfmk/kern/sched_clutch.c#L184-L225), will [stay on core for 60% less time](https://github.com/apple-oss-distributions/xnu/blob/e3723e1f17661b24996789d8afc084c0c3303b26/osfmk/kern/sched_clutch.c#L227-L255), will [have its timers coalesced up to 75× more](https://github.com/apple-oss-distributions/xnu/blob/e3723e1f17661b24996789d8afc084c0c3303b26/osfmk/arm/arm_timer.c#L291-L301), and will even in hardware have its memory accesses served later (not sure on this one, there is [a patent](https://patents.google.com/patent/US9053058B2/en)).\r\n\r\nWindow resizes, clicks (using ⌘), hovers and UI updates can still occur in unfocused windows, so they still need to respond to user events and render UI. Responding to user events and updating the display should have low latency, and hey whaddaya know User Interactive fits that description. QoS should be chosen based on the semantics of what you’re doing, rather than any particular effect it might have. Neovim would also ideally switch its task role from `TASK_FOREGROUND_APPLICATION` to `TASK_BACKGROUND_APPLICATION` which would result in the scheduler slightly lowering thread priorities (which, again, are separate from QoS!) as necessary.",
            "commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "created_at": "2025-09-04T15:32:33Z",
            "diff_hunk": "@@ -367,6 +371,18 @@ int64_t os_get_pid(void)\n #endif\n }\n \n+/// Signals to the OS that Nvim is an application for \"interactive work\"\n+/// which should be prioritized similar to a GUI app.\n+void os_hint_priority(void)\n+{\n+#ifdef __APPLE__\n+  // By default, processes have the TASK_UNSPECIFIED \"role\", which means all of its threads are\n+  // clamped to Default QoS. Setting the role to TASK_DEFAULT_APPLICATION removes this clamp.\n+  integer_t policy = TASK_DEFAULT_APPLICATION;\n+  task_policy_set(mach_task_self(), TASK_CATEGORY_POLICY, &policy, 1);",
            "html_url": "https://github.com/neovim/neovim/pull/35488#discussion_r2322570197",
            "id": 2322570197,
            "in_reply_to_id": 2319834712,
            "line": 382,
            "node_id": "PRRC_kwDOAPphoM6Kb5vV",
            "original_commit_id": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
            "original_line": 382,
            "original_position": 23,
            "original_start_line": null,
            "path": "src/nvim/os/env.c",
            "position": 23,
            "pull_request_review_id": 3185891004,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2322570197/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-04T15:35:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2322570197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4",
                "events_url": "https://api.github.com/users/lunacookies/events{/privacy}",
                "followers_url": "https://api.github.com/users/lunacookies/followers",
                "following_url": "https://api.github.com/users/lunacookies/following{/other_user}",
                "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lunacookies",
                "id": 31783266,
                "login": "lunacookies",
                "node_id": "MDQ6VXNlcjMxNzgzMjY2",
                "organizations_url": "https://api.github.com/users/lunacookies/orgs",
                "received_events_url": "https://api.github.com/users/lunacookies/received_events",
                "repos_url": "https://api.github.com/users/lunacookies/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lunacookies",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Nice, a turbo button :) os-specific stuff usually lives `src/nvim/os/` , I guess maybe it fits in `env.c`. Name could be `os_hint_priority` , or whatever you can think of. For linux/windows it's a no-op, but there might be something analogous for those (future)?\r\n\r\nThe discussion in https://github.com/vim/vim/pull/18120 is overthinking it. Fullscreen interactive TUI apps should have the same priority as any other GUI app.",
            "created_at": "2025-09-02T05:45:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/35488#issuecomment-3243859144",
            "id": 3243859144,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35488",
            "node_id": "IC_kwDOAPphoM7BWVzI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243859144/reactions"
            },
            "updated_at": "2025-09-02T05:48:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3243859144",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> os-specific stuff usually lives `src/nvim/os/` , I guess maybe it fits in `env.c`. Name could be `os_hint_priority` , or whatever you can think of.\r\n\r\nDone.\r\n\r\n> For linux/windows it's a no-op, but there might be something analogous for those (future)?\r\n\r\nUnfortunately I’m not familiar with either of those operating systems, so I wouldn’t know :)\r\n\r\n> The discussion in [vim/vim#18120](https://github.com/vim/vim/pull/18120) is overthinking it. Fullscreen interactive TUI apps should have the same priority as any other GUI app.\r\n\r\nI agree wholeheartedly!",
            "created_at": "2025-09-02T07:40:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/35488#issuecomment-3244160285",
            "id": 3244160285,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35488",
            "node_id": "IC_kwDOAPphoM7BXfUd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3244160285/reactions"
            },
            "updated_at": "2025-09-02T07:40:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3244160285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4",
                "events_url": "https://api.github.com/users/lunacookies/events{/privacy}",
                "followers_url": "https://api.github.com/users/lunacookies/followers",
                "following_url": "https://api.github.com/users/lunacookies/following{/other_user}",
                "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lunacookies",
                "id": 31783266,
                "login": "lunacookies",
                "node_id": "MDQ6VXNlcjMxNzgzMjY2",
                "organizations_url": "https://api.github.com/users/lunacookies/orgs",
                "received_events_url": "https://api.github.com/users/lunacookies/received_events",
                "repos_url": "https://api.github.com/users/lunacookies/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lunacookies",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Successfully created backport PR for `release-0.11`:\n- #35607",
            "created_at": "2025-09-03T01:35:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/35488#issuecomment-3247388498",
            "id": 3247388498,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35488",
            "node_id": "IC_kwDOAPphoM7BjzdS",
            "performed_via_github_app": {
                "client_id": "Iv23lig4DyAliuVagKSN",
                "created_at": "2024-07-16T09:59:15Z",
                "description": "",
                "events": [],
                "external_url": "https://neovim.io/",
                "html_url": "https://github.com/apps/neovim-backports",
                "id": 946290,
                "name": "neovim backports",
                "node_id": "A_kwHOAGK_Pc4ADnBy",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                    "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                    "followers_url": "https://api.github.com/users/neovim/followers",
                    "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                    "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                    "gravatar_id": "",
                    "html_url": "https://github.com/neovim",
                    "id": 6471485,
                    "login": "neovim",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                    "organizations_url": "https://api.github.com/users/neovim/orgs",
                    "received_events_url": "https://api.github.com/users/neovim/received_events",
                    "repos_url": "https://api.github.com/users/neovim/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                    "type": "Organization",
                    "url": "https://api.github.com/users/neovim",
                    "user_view_type": "public"
                },
                "permissions": {
                    "contents": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                },
                "slug": "neovim-backports",
                "updated_at": "2024-09-11T10:04:42Z"
            },
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3247388498/reactions"
            },
            "updated_at": "2025-09-03T01:35:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3247388498",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/946290?v=4",
                "events_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/neovim-backports",
                "id": 175700243,
                "login": "neovim-backports[bot]",
                "node_id": "BOT_kgDOCnj5Ew",
                "organizations_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/neovim-backports%5Bbot%5D",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35488/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35488/commits",
    "created_at": "2025-08-26T09:44:51Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35488.diff",
    "draft": false,
    "head": {
        "label": "lunacookies:dont-clamp-qos",
        "ref": "dont-clamp-qos",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lunacookies/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lunacookies/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lunacookies/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lunacookies/neovim/branches{/branch}",
            "clone_url": "https://github.com/lunacookies/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lunacookies/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lunacookies/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lunacookies/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lunacookies/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lunacookies/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lunacookies/neovim/contributors",
            "created_at": "2025-08-26T08:37:34Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lunacookies/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lunacookies/neovim/downloads",
            "events_url": "https://api.github.com/repos/lunacookies/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lunacookies/neovim/forks",
            "full_name": "lunacookies/neovim",
            "git_commits_url": "https://api.github.com/repos/lunacookies/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lunacookies/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lunacookies/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lunacookies/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lunacookies/neovim/hooks",
            "html_url": "https://github.com/lunacookies/neovim",
            "id": 1044807828,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lunacookies/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lunacookies/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lunacookies/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lunacookies/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lunacookies/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lunacookies/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lunacookies/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lunacookies/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOPkaAlA",
            "notifications_url": "https://api.github.com/repos/lunacookies/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4",
                "events_url": "https://api.github.com/users/lunacookies/events{/privacy}",
                "followers_url": "https://api.github.com/users/lunacookies/followers",
                "following_url": "https://api.github.com/users/lunacookies/following{/other_user}",
                "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lunacookies",
                "id": 31783266,
                "login": "lunacookies",
                "node_id": "MDQ6VXNlcjMxNzgzMjY2",
                "organizations_url": "https://api.github.com/users/lunacookies/orgs",
                "received_events_url": "https://api.github.com/users/lunacookies/received_events",
                "repos_url": "https://api.github.com/users/lunacookies/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lunacookies",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lunacookies/neovim/pulls{/number}",
            "pushed_at": "2025-09-03T11:27:46Z",
            "releases_url": "https://api.github.com/repos/lunacookies/neovim/releases{/id}",
            "size": 329727,
            "ssh_url": "git@github.com:lunacookies/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lunacookies/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lunacookies/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lunacookies/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lunacookies/neovim/subscription",
            "svn_url": "https://github.com/lunacookies/neovim",
            "tags_url": "https://api.github.com/repos/lunacookies/neovim/tags",
            "teams_url": "https://api.github.com/repos/lunacookies/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lunacookies/neovim/git/trees{/sha}",
            "updated_at": "2025-09-02T09:44:00Z",
            "url": "https://api.github.com/repos/lunacookies/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4",
            "events_url": "https://api.github.com/users/lunacookies/events{/privacy}",
            "followers_url": "https://api.github.com/users/lunacookies/followers",
            "following_url": "https://api.github.com/users/lunacookies/following{/other_user}",
            "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lunacookies",
            "id": 31783266,
            "login": "lunacookies",
            "node_id": "MDQ6VXNlcjMxNzgzMjY2",
            "organizations_url": "https://api.github.com/users/lunacookies/orgs",
            "received_events_url": "https://api.github.com/users/lunacookies/received_events",
            "repos_url": "https://api.github.com/users/lunacookies/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lunacookies",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35488",
    "id": 2774523209,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35488",
    "labels": [
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 8431892071,
            "name": "ci:backport release-0.11",
            "node_id": "LA_kwDOAPphoM8AAAAB9pR2Zw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:backport%20release-0.11"
        }
    ],
    "locked": false,
    "merge_commit_sha": "f9ce939bf53b84f7e6e4ecca3875dd0c378991db",
    "merged_at": "2025-09-03T01:34:47Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6lX91J",
    "number": 35488,
    "patch_url": "https://github.com/neovim/neovim/pull/35488.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35488/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d2a2b292ba4b11a40536659e6e9c9d70944dd33a",
    "title": "perf: scheduler priority clamping on macOS",
    "updated_at": "2025-09-04T15:32:33Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35488",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4",
        "events_url": "https://api.github.com/users/lunacookies/events{/privacy}",
        "followers_url": "https://api.github.com/users/lunacookies/followers",
        "following_url": "https://api.github.com/users/lunacookies/following{/other_user}",
        "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lunacookies",
        "id": 31783266,
        "login": "lunacookies",
        "node_id": "MDQ6VXNlcjMxNzgzMjY2",
        "organizations_url": "https://api.github.com/users/lunacookies/orgs",
        "received_events_url": "https://api.github.com/users/lunacookies/received_events",
        "repos_url": "https://api.github.com/users/lunacookies/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lunacookies",
        "user_view_type": "public"
    }
}