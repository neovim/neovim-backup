{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33702/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33702/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33702"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33702"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33702/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ab35e412bf71475d613b4e46c8c3f596b480c567"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6116,
            "forks_count": 6116,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1969,
            "open_issues_count": 1969,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-10T00:47:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 327001,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90210,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-10T02:19:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90210,
            "watchers_count": 90210,
            "web_commit_signoff_required": false
        },
        "sha": "0ab0cdb2dabc551f836851aa85d06e927c42d92a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "IIUC, the intent `vim.lsp.enable` is for it to be called once early during startup. However, I have a noisy LSP that I'd like to be able to turn off when it's distracting and on when it's useful. I want this enable/disabling to affect all current and future buffers, and `vim.lsp.enable` seems like a reasonable place to put that logic.\r\n\r\nfixes https://github.com/neovim/neovim/issues/33701\r\nfixes https://github.com/neovim/neovim/issues/33116\r\n\r\n<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\n",
    "closed_at": "2025-04-30T23:57:29Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2065897279"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2065897279"
                }
            },
            "author_association": "MEMBER",
            "body": " ci failure, this needs to be done in `exec_lua()` so it runs in the test Nvim process, not the test runner.\r\n\r\n```\r\ntest/functional/plugin/lsp_spec.lua:6426: attempt to index field 'lsp' (a nil value)\r\n\r\nstack traceback:\r\n\ttest/functional/plugin/lsp_spec.lua:6426: in function <test/functional/plugin/lsp_spec.lua:6376>\r\n```\r\n\r\n",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-04-29T09:18:47Z",
            "diff_hunk": "@@ -6373,6 +6373,67 @@ describe('LSP', function()\n       )\n     end)\n \n+    it('attaches/detaches preexisting buffers', function()\n+      exec_lua(create_server_definition)\n+\n+      local tmp1 = t.tmpname(true)\n+      local tmp2 = t.tmpname(true)\n+\n+      exec_lua(function()\n+        vim.cmd.edit(tmp1)\n+        vim.bo.filetype = 'foo'\n+        _G.foo_buf = vim.api.nvim_get_current_buf()\n+\n+        vim.cmd.edit(tmp2)\n+        vim.bo.filetype = 'bar'\n+        _G.bar_buf = vim.api.nvim_get_current_buf()\n+\n+        local server = _G._create_server({\n+          handlers = {\n+            initialize = function(_, _, callback)\n+              callback(nil, { capabilities = {} })\n+            end,\n+          },\n+        })\n+\n+        vim.lsp.config('foo', {\n+          cmd = server.cmd,\n+          filetypes = { 'foo' },\n+          root_markers = { '.foorc' },\n+        })\n+\n+        vim.lsp.config('bar', {\n+          cmd = server.cmd,\n+          filetypes = { 'bar' },\n+          root_markers = { '.foorc' },\n+        })\n+\n+        vim.lsp.enable('foo')\n+        vim.lsp.enable('bar')\n+      end)\n+\n+      eq(\n+        { 1, 'foo', 1, 'bar' },\n+        exec_lua(function()\n+          local foos = vim.lsp.get_clients({ bufnr = assert(_G.foo_buf) })\n+          local bars = vim.lsp.get_clients({ bufnr = assert(_G.bar_buf) })\n+          return { #foos, foos[1].name, #bars, bars[1].name }\n+        end)\n+      )\n+\n+      -- Now disable the 'foo' lsp and confirm that it's detached from the buffer it was previous\n+      -- attached to.\n+      vim.lsp.enable('foo', false)",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2065897279",
            "id": 2065897279,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57Ixc_",
            "original_commit_id": "57dda25483512cf74acb9222fa4bd1b1271c497d",
            "original_line": 6426,
            "original_position": 63,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 2802683056,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2065897279/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-29T09:19:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2065897279",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2067589740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2067589740"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Urg, how embarrassing. Sorry about that. I was jumping between branches all day yesterday and must have somehow not run the latest version of this test.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-04-29T23:39:04Z",
            "diff_hunk": "@@ -6373,6 +6373,67 @@ describe('LSP', function()\n       )\n     end)\n \n+    it('attaches/detaches preexisting buffers', function()\n+      exec_lua(create_server_definition)\n+\n+      local tmp1 = t.tmpname(true)\n+      local tmp2 = t.tmpname(true)\n+\n+      exec_lua(function()\n+        vim.cmd.edit(tmp1)\n+        vim.bo.filetype = 'foo'\n+        _G.foo_buf = vim.api.nvim_get_current_buf()\n+\n+        vim.cmd.edit(tmp2)\n+        vim.bo.filetype = 'bar'\n+        _G.bar_buf = vim.api.nvim_get_current_buf()\n+\n+        local server = _G._create_server({\n+          handlers = {\n+            initialize = function(_, _, callback)\n+              callback(nil, { capabilities = {} })\n+            end,\n+          },\n+        })\n+\n+        vim.lsp.config('foo', {\n+          cmd = server.cmd,\n+          filetypes = { 'foo' },\n+          root_markers = { '.foorc' },\n+        })\n+\n+        vim.lsp.config('bar', {\n+          cmd = server.cmd,\n+          filetypes = { 'bar' },\n+          root_markers = { '.foorc' },\n+        })\n+\n+        vim.lsp.enable('foo')\n+        vim.lsp.enable('bar')\n+      end)\n+\n+      eq(\n+        { 1, 'foo', 1, 'bar' },\n+        exec_lua(function()\n+          local foos = vim.lsp.get_clients({ bufnr = assert(_G.foo_buf) })\n+          local bars = vim.lsp.get_clients({ bufnr = assert(_G.bar_buf) })\n+          return { #foos, foos[1].name, #bars, bars[1].name }\n+        end)\n+      )\n+\n+      -- Now disable the 'foo' lsp and confirm that it's detached from the buffer it was previous\n+      -- attached to.\n+      vim.lsp.enable('foo', false)",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2067589740",
            "id": 2067589740,
            "in_reply_to_id": 2065897279,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57POps",
            "original_commit_id": "57dda25483512cf74acb9222fa4bd1b1271c497d",
            "original_line": 6426,
            "original_position": 63,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 2805329283,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2067589740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-29T23:39:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2067589740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2069672510"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2069672510"
                }
            },
            "author_association": "MEMBER",
            "body": "normally in favor of ternaries but in this case, is this clearer?\r\n\r\n```suggestion\r\n  elseif not lsp_enable_autocmd_id then\r\n    -- Only ever create autocmd once to reuse computation of config merging.\r\n    lsp_enable_autocmd_id = api.nvim_create_autocmd('FileType', {\r\n```",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-04-30T23:47:39Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2069672510",
            "id": 2069672510,
            "line": 588,
            "node_id": "PRRC_kwDOAPphoM57XLI-",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 588,
            "original_position": 13,
            "original_start_line": 585,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 13,
            "pull_request_review_id": 2808838054,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2069672510/reactions"
            },
            "side": "RIGHT",
            "start_line": 585,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-30T23:47:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2069672510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2069737344"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2069737344"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I agree the ternary is dense. I also didn't write it, and it looks like you've merged the PR :) ",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-05-01T01:16:35Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2069737344",
            "id": 2069737344,
            "in_reply_to_id": 2069672510,
            "line": 588,
            "node_id": "PRRC_kwDOAPphoM57Xa-A",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 588,
            "original_position": 13,
            "original_start_line": 585,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 13,
            "pull_request_review_id": 2808942769,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2069737344/reactions"
            },
            "side": "RIGHT",
            "start_line": 585,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-01T01:16:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2069737344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2128539018"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2128539018"
                }
            },
            "author_association": "NONE",
            "body": "This change causes the first buffer opened by Neovim to not get a filetype if a user has the following configuration\r\n```lua\r\n{\r\n\t\t\t\"neovim/nvim-lspconfig\",\r\n\t\t\tevent = \"BufReadPost\",\r\n\t\t\tconfig = function()\r\n\t\t\t\t\tvim.lsp.enable({ \"lua_ls\" })\r\n\t\t\tend,\r\n\t\t},\r\n```\r\nIf the call above is `vim.schedule`d or `vim.api.nvim_command('doautoall nvim.lsp.enable FileType')` is `vim.schedule`d, then it works correctly. I'm not sure what the desired behavior should be, that's why I'm asking here first instead of just creating an issue.\r\n\r\ncc @justinmk (apologies for the ping, I just saw that you were mainly involved in this PR from Neovim core team). I'm just asking for how this should be dealt.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-05T10:43:25Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2128539018",
            "id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5-3u2K",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2899798581,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2128539018/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-05T10:43:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2128539018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2131192653"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2131192653"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> This change causes the first buffer opened by Neovim to not get a filetype if a user has the following configuration\r\n\r\nHave you been able to root cause why this is?\r\n\r\n@dpetka2001, you shouldn't be calling `vim.lsp.enable` in a `BufReadPost`. It's meant to happen once early on when your neovim starts up.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-06T01:00:55Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2131192653",
            "id": 2131192653,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_B2tN",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2903362875,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2131192653/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-06T01:00:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2131192653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2131616817"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2131616817"
                }
            },
            "author_association": "NONE",
            "body": "The previous commit https://github.com/neovim/neovim/commit/fae4abd2f4bd8f97167ea9f7a327d69c9f0afbfd does not have this problem. The problem was introduced because of calling directly `vim.api.nvim_command('doautoall nvim.lsp.enable FileType')`.\r\n\r\nFrom its help it mentions\r\n> enable({name}, {enable})                                    *vim.lsp.enable()*\r\n    Auto-starts LSP when a buffer is opened, based on the |lsp-config|\r\n    `filetypes`, `root_markers`, and `root_dir` fields.\r\n\r\n`BufReadPost` gets emitted when a buffer is opened. The problem is that the filetype detection fails with the first buffer, whereas that wasn't the case previously.\r\n\r\nIn the previous commit the autocmd would still get created and left up to Neovim when it would execute.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-06T06:51:18Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2131616817",
            "id": 2131616817,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_DeQx",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2903963969,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2131616817/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-06T06:53:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2131616817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2132157490"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132157490"
                }
            },
            "author_association": "MEMBER",
            "body": "> From its help it mentions\r\n> \r\n> > enable({name}, {enable})                                    _vim.lsp.enable()_\r\n> > Auto-starts LSP when a buffer is opened, based on the |lsp-config|\r\n> > `filetypes`, `root_markers`, and `root_dir` fields.\r\n\r\nThat help doc is explaining that enable() sets up the filetype-detection. \r\n\r\n> The problem is that the filetype detection fails with the first buffer, \r\n\r\nThat doesn't sound related to enable() in particular.\r\n\r\nAFAICT, your setup expects BufReadPost to happen after 'filetype' is set. But on startup for buffer 1, that isn't the case:\r\n\r\n    nvim --clean --cmd \"au BufReadPost * echom 'ft=' &filetype\" .tmux.conf\r\n\r\nThat has nothing to do with vim.lsp.enable(). The fact that your setup accidentally worked before seems irrelevant. The core issue is that the ordering of BufReadPost and FileType are different during startup vs after startup.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-06T13:02:00Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2132157490",
            "id": 2132157490,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_FiQy",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2904856995,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132157490/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-06T13:03:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132157490",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2132380726"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132380726"
                }
            },
            "author_association": "NONE",
            "body": "With the following repro\r\n```lua\r\nvim.api.nvim_create_autocmd(\"BufReadPost\", {\r\n\tcallback = function()\r\n\t\tvim.lsp.enable({ \"lua_ls\" })\r\n\tend,\r\n})\r\n```\r\nThe problem occurs when you do `nvim --clean -u repro.lua` and then from the Neovim startup page you do `:e repro.lua` to open the buffer. If you then do `set ft?` you will see it prints out `filetype=`.\r\n\r\nIf you do `nvim --clean -u repro.lua repro.lua` directly and then you do `set ft?` you will see it prints `filetype=lua`. So, no problem if you open Neovim with a file argument.\r\n\r\nIf you comment out that specific line that does `doautocmdall` (or even `vim.schedule` the `doautocmdall`) the first case where you do `nvim --clean -u repro.lua` will also detect correctly the filetype. \r\n\r\nThe line that was added `vim.api.nvim_command('doautoall nvim.lsp.enable FileType')` causes a different behavior for the filetype detection of the first buffer in the 2 cases above.\r\n\r\nYou can verify what I said with the `repro.lua` provided and the steps mentioned. I also `vim.schedule`d the call to `vim.api.nvim_command('doautoall nvim.lsp.enable FileType')` and the filetype detection occurred correctly in the first case with `nvim --clean -u repro.lua` and then `:e repro.lua` and `:set ft?`.\r\n\r\nIs the behavior in the 2 aforementioned cases expected? With commit https://github.com/neovim/neovim/commit/fae4abd2f4bd8f97167ea9f7a327d69c9f0afbfd this didn't happen. ",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-06T15:12:00Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2132380726",
            "id": 2132380726,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_GYw2",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2905232549,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132380726/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-06T15:15:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132380726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2132389854"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132389854"
                }
            },
            "author_association": "MEMBER",
            "body": "That's not how it's supposed to be used, so no wonder this doesn't work.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-06T15:17:48Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2132389854",
            "id": 2132389854,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_Ga_e",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2905248053,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132389854/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-06T15:17:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132389854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2132412537"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132412537"
                }
            },
            "author_association": "NONE",
            "body": "Yes, I'm trying to understand why this happens. I did not insinuate this is an issue. I myself wasn't sure if this was an issue or not, that's why I did not create an unnecessary issue and instead preferred to ask here. \r\n\r\nWhy does the line `vim.api.nvim_command('doautoall nvim.lsp.enable FileType')` affect the filetype detection as opposed to how it used to work.\r\n\r\nI used a Vimscript script to log the execution of the events when Neovim opens. The script is available in this [gist](https://gist.github.com/dpetka2001/afb03d807c15252adf64a25b1eb10e87). I'm not saying someone should check it.\r\n\r\nBut with the above script and opening Neovim with `nvim -c \"LogAutocmds\"` I can see that the `FileType` event occurs before `BufReadPost`. Whereas if I open Neovim with `nvim -c \"LogAutocmds\" some_file.lua` I can see that there's only a `FileType` event after a `BufNew` event and no `BufReadPost` event in this case.\r\nThis is just to show how I tried to understand how the order of the 2 events gets executed when you open Neovim with a file argument or not.\r\n\r\nAgain my question here is why does the addition of line `vim.api.nvim_command('doautoall nvim.lsp.enable FileType')` cause different behavior with regards to filetype detection. \r\n\r\nI would appreciate if someone can shed some light. I'm genuinely asking for information to understand. I totally understand that I'm asking for some of your personal time, so if nobody can give additional info that's totally acceptable as you can only interact with so many Neovim users.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-06T15:31:59Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2132412537",
            "id": 2132412537,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_Ggh5",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2905284853,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132412537/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-06T15:32:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132412537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2132888876"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132888876"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Totally appreciate the curiosity here, @dpetka2001. I do not know what's going on here.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-06T20:45:48Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2132888876",
            "id": 2132888876,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_IU0s",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2906110847,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132888876/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-06T20:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132888876",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2132914236"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132914236"
                }
            },
            "author_association": "NONE",
            "body": "@jfly If you do\r\n```lua\r\nvim.schedule(function()\r\n  vim.api.nvim_command('doautoall nvim.lsp.enable FileType')\r\nend)\r\n```\r\nDoes it have any negative effect for the reason that you created this PR? Because if you use `vim.schedule` then the filetype detection works as expected.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-06T21:11:49Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2132914236",
            "id": 2132914236,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_IbA8",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2906154879,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132914236/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-06T21:11:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2132914236",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12776461?v=4",
                "events_url": "https://api.github.com/users/dpetka2001/events{/privacy}",
                "followers_url": "https://api.github.com/users/dpetka2001/followers",
                "following_url": "https://api.github.com/users/dpetka2001/following{/other_user}",
                "gists_url": "https://api.github.com/users/dpetka2001/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dpetka2001",
                "id": 12776461,
                "login": "dpetka2001",
                "node_id": "MDQ6VXNlcjEyNzc2NDYx",
                "organizations_url": "https://api.github.com/users/dpetka2001/orgs",
                "received_events_url": "https://api.github.com/users/dpetka2001/received_events",
                "repos_url": "https://api.github.com/users/dpetka2001/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dpetka2001/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dpetka2001/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dpetka2001",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33702#discussion_r2133139557"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33702"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2133139557"
                }
            },
            "author_association": "MEMBER",
            "body": "we can try that change, feel free to send a pr. with a concise and clear Problem/Solution explanation. not the wall of text above.",
            "commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "created_at": "2025-06-07T01:02:27Z",
            "diff_hunk": "@@ -577,21 +577,32 @@ function lsp.enable(name, enable)\n   end\n \n   if not next(lsp._enabled_configs) then\n+    -- If there are no remaining LSPs enabled, remove the enable autocmd.\n     if lsp_enable_autocmd_id then\n       api.nvim_del_autocmd(lsp_enable_autocmd_id)\n       lsp_enable_autocmd_id = nil\n     end\n-    return\n+  else\n+    -- Only ever create autocmd once to reuse computation of config merging.\n+    lsp_enable_autocmd_id = lsp_enable_autocmd_id\n+      or api.nvim_create_autocmd('FileType', {\n+        group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n+        callback = function(args)\n+          lsp_enable_callback(args.buf)\n+        end,\n+      })\n   end\n \n-  -- Only ever create autocmd once to reuse computation of config merging.\n-  lsp_enable_autocmd_id = lsp_enable_autocmd_id\n-    or api.nvim_create_autocmd('FileType', {\n-      group = api.nvim_create_augroup('nvim.lsp.enable', {}),\n-      callback = function(args)\n-        lsp_enable_callback(args.buf)\n-      end,\n-    })\n+  -- Ensure any pre-existing buffers start/stop their LSP clients.\n+  if enable ~= false then\n+    vim.api.nvim_command('doautoall nvim.lsp.enable FileType')",
            "html_url": "https://github.com/neovim/neovim/pull/33702#discussion_r2133139557",
            "id": 2133139557,
            "in_reply_to_id": 2128539018,
            "line": 598,
            "node_id": "PRRC_kwDOAPphoM5_JSBl",
            "original_commit_id": "ab35e412bf71475d613b4e46c8c3f596b480c567",
            "original_line": 598,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 31,
            "pull_request_review_id": 2906504261,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2133139557/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-07T01:02:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2133139557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "Successfully created backport PR for `release-0.11`:\n- #33739",
            "created_at": "2025-05-01T00:01:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/33702#issuecomment-2843758519",
            "id": 2843758519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33702",
            "node_id": "IC_kwDOAPphoM6pgE-3",
            "performed_via_github_app": {
                "client_id": "Iv23lig4DyAliuVagKSN",
                "created_at": "2024-07-16T09:59:15Z",
                "description": "",
                "events": [],
                "external_url": "https://neovim.io/",
                "html_url": "https://github.com/apps/neovim-backports",
                "id": 946290,
                "name": "neovim backports",
                "node_id": "A_kwHOAGK_Pc4ADnBy",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                    "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                    "followers_url": "https://api.github.com/users/neovim/followers",
                    "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                    "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                    "gravatar_id": "",
                    "html_url": "https://github.com/neovim",
                    "id": 6471485,
                    "login": "neovim",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                    "organizations_url": "https://api.github.com/users/neovim/orgs",
                    "received_events_url": "https://api.github.com/users/neovim/received_events",
                    "repos_url": "https://api.github.com/users/neovim/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                    "type": "Organization",
                    "url": "https://api.github.com/users/neovim",
                    "user_view_type": "public"
                },
                "permissions": {
                    "contents": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                },
                "slug": "neovim-backports",
                "updated_at": "2024-09-11T10:04:42Z"
            },
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2843758519/reactions"
            },
            "updated_at": "2025-05-01T00:01:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2843758519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/946290?v=4",
                "events_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/neovim-backports",
                "id": 175700243,
                "login": "neovim-backports[bot]",
                "node_id": "BOT_kgDOCnj5Ew",
                "organizations_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/neovim-backports%5Bbot%5D",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33702/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33702/commits",
    "created_at": "2025-04-29T01:37:56Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33702.diff",
    "draft": false,
    "head": {
        "label": "jfly:issue-33701",
        "ref": "issue-33701",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/jfly/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/jfly/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/jfly/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/jfly/neovim/branches{/branch}",
            "clone_url": "https://github.com/jfly/neovim.git",
            "collaborators_url": "https://api.github.com/repos/jfly/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/jfly/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/jfly/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/jfly/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/jfly/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/jfly/neovim/contributors",
            "created_at": "2024-10-10T20:54:06Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/jfly/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/jfly/neovim/downloads",
            "events_url": "https://api.github.com/repos/jfly/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/jfly/neovim/forks",
            "full_name": "jfly/neovim",
            "git_commits_url": "https://api.github.com/repos/jfly/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/jfly/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/jfly/neovim/git/tags{/sha}",
            "git_url": "git://github.com/jfly/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/jfly/neovim/hooks",
            "html_url": "https://github.com/jfly/neovim",
            "id": 870882602,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/jfly/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/jfly/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/jfly/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/jfly/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/jfly/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/jfly/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/jfly/neovim/merges",
            "milestones_url": "https://api.github.com/repos/jfly/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOM-idKg",
            "notifications_url": "https://api.github.com/repos/jfly/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/jfly/neovim/pulls{/number}",
            "pushed_at": "2025-05-08T01:04:45Z",
            "releases_url": "https://api.github.com/repos/jfly/neovim/releases{/id}",
            "size": 313020,
            "ssh_url": "git@github.com:jfly/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/jfly/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/jfly/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/jfly/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/jfly/neovim/subscription",
            "svn_url": "https://github.com/jfly/neovim",
            "tags_url": "https://api.github.com/repos/jfly/neovim/tags",
            "teams_url": "https://api.github.com/repos/jfly/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/jfly/neovim/git/trees{/sha}",
            "updated_at": "2024-10-10T20:54:06Z",
            "url": "https://api.github.com/repos/jfly/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ab35e412bf71475d613b4e46c8c3f596b480c567",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
            "events_url": "https://api.github.com/users/jfly/events{/privacy}",
            "followers_url": "https://api.github.com/users/jfly/followers",
            "following_url": "https://api.github.com/users/jfly/following{/other_user}",
            "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/jfly",
            "id": 277474,
            "login": "jfly",
            "node_id": "MDQ6VXNlcjI3NzQ3NA==",
            "organizations_url": "https://api.github.com/users/jfly/orgs",
            "received_events_url": "https://api.github.com/users/jfly/received_events",
            "repos_url": "https://api.github.com/users/jfly/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/jfly",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33702",
    "id": 2487428529,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33702",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 8431892071,
            "name": "ci:backport release-0.11",
            "node_id": "LA_kwDOAPphoM8AAAAB9pR2Zw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:backport%20release-0.11"
        }
    ],
    "locked": false,
    "merge_commit_sha": "4bc7bac8842582cc1239373994327d5537155ec0",
    "merged_at": "2025-04-30T23:57:29Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6UQyWx",
    "number": 33702,
    "patch_url": "https://github.com/neovim/neovim/pull/33702.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33702/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ab35e412bf71475d613b4e46c8c3f596b480c567",
    "title": "Start and stop LSPs as necessary during `vim.lsp.enable`",
    "updated_at": "2025-06-07T01:02:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33702",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
        "events_url": "https://api.github.com/users/jfly/events{/privacy}",
        "followers_url": "https://api.github.com/users/jfly/followers",
        "following_url": "https://api.github.com/users/jfly/following{/other_user}",
        "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jfly",
        "id": 277474,
        "login": "jfly",
        "node_id": "MDQ6VXNlcjI3NzQ3NA==",
        "organizations_url": "https://api.github.com/users/jfly/orgs",
        "received_events_url": "https://api.github.com/users/jfly/received_events",
        "repos_url": "https://api.github.com/users/jfly/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jfly",
        "user_view_type": "public"
    }
}