{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32038/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32038/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32038"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32038"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32038/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32038"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/819337a13f73bb9dcd82fd51f81f062bd69ab6db"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5823,
            "forks_count": 5823,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1843,
            "open_issues_count": 1843,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-21T00:10:15Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 304457,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85427,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-21T01:35:11Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85427,
            "watchers_count": 85427,
            "web_commit_signoff_required": false
        },
        "sha": "fb564ddff0b4ec9dad5afa7548777af1c3044273",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This commit adds basic support for the kitty keyboard protocol to Neovim's builtin terminal. For now only the first mode (\"Disambiguate escape codes\") is supported.\r\n\r\nResolves: https://github.com/neovim/neovim/issues/18735\r\nResolves: https://github.com/neovim/neovim/issues/24093\r\nResolves: https://github.com/neovim/neovim/issues/32019\r\n\r\nCSIu encoding is now disabled by default unless an application in the terminal opts into it.",
    "closed_at": "2025-01-17T00:33:22Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32038#discussion_r1917404124"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32038"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917404124"
                }
            },
            "author_association": "MEMBER",
            "body": "This test fails on Windows.\r\n\r\nWith help from @dundargoc, we determined that vterm never sees the query from the nested Nvim instance to detect if the kitty keyboard protocol is supported. Thus vterm never enables the \"disambiguate\" mode, so `<C-I>` and `<Tab>` are sent with the legacy encoding.\r\n\r\nIt gets stranger: requesting a primary device attributes report (DA1) in the nested terminal with `` Write-Host \"`e[c\" `` _should_ return `CSI ? 1;2c` (see [here](https://github.com/neovim/neovim/blob/5801cbd1af65ff9de1602bbd4cb66e76b6bf4328/src/nvim/vterm/state.c#L1388)), but @dundargoc instead received `CSI ?61;6;7;21;22;23;24;28;32;42c`. There is something fishy going on between the shell and vterm on Windows. Probably something with Windows' PTY emulation (which I don't claim to understand at all).\r\n\r\nI feel comfortable skipping this since the entire `terminal/tui_spec.lua` file is already skipped on Windows. @dundargoc also confirmed that the terminal on Windows is still fully functional, so this doesn't regress anything other than an inability to distinguish `<C-I>` and `<Tab>` in nested Neovim instances, which was already the case anyway until https://github.com/neovim/neovim/pull/31932 was recently merged.\r\n\r\n",
            "commit_id": "819337a13f73bb9dcd82fd51f81f062bd69ab6db",
            "created_at": "2025-01-15T22:14:47Z",
            "diff_hunk": "@@ -629,6 +629,9 @@ describe('terminal input', function()\n   -- TODO(bfredl): getcharstr() erases the distinction between <C-I> and <Tab>.\n   -- If it was enhanced or replaced this could get folded into the test above.\n   it('can send TAB/C-I and ESC/C-[ separately', function()\n+    if skip(is_os('win'), \"The escape sequence to enable kitty keyboard mode doesn't work on Windows\") then\n+      return\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/32038#discussion_r1917404124",
            "id": 1917404124,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ySUPc",
            "original_commit_id": "fef9d3be0936298f322c5a7cc03bb7319cf1a135",
            "original_line": 639,
            "original_position": 6,
            "original_start_line": 632,
            "path": "test/functional/terminal/buffer_spec.lua",
            "position": null,
            "pull_request_review_id": 2554133415,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32038",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917404124/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-15T22:42:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917404124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32038#discussion_r1917424283"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32038"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917424283"
                }
            },
            "author_association": "MEMBER",
            "body": "This was tested with `pwsh`, meaning powershell version 7 and not the default powershell as the default version can't interpret escape code.",
            "commit_id": "819337a13f73bb9dcd82fd51f81f062bd69ab6db",
            "created_at": "2025-01-15T22:35:21Z",
            "diff_hunk": "@@ -629,6 +629,9 @@ describe('terminal input', function()\n   -- TODO(bfredl): getcharstr() erases the distinction between <C-I> and <Tab>.\n   -- If it was enhanced or replaced this could get folded into the test above.\n   it('can send TAB/C-I and ESC/C-[ separately', function()\n+    if skip(is_os('win'), \"The escape sequence to enable kitty keyboard mode doesn't work on Windows\") then\n+      return\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/32038#discussion_r1917424283",
            "id": 1917424283,
            "in_reply_to_id": 1917404124,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ySZKb",
            "original_commit_id": "fef9d3be0936298f322c5a7cc03bb7319cf1a135",
            "original_line": 639,
            "original_position": 6,
            "original_start_line": 632,
            "path": "test/functional/terminal/buffer_spec.lua",
            "position": null,
            "pull_request_review_id": 2554182810,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32038",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917424283/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-15T22:35:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917424283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32038#discussion_r1917445341"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32038"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917445341"
                }
            },
            "author_association": "MEMBER",
            "body": "> It gets stranger: requesting a primary device attributes report (DA1) in the nested terminal with `` Write-Host \"`e[c\" `` _should_ return `CSI ? 1;2c` (see [here](https://github.com/neovim/neovim/blob/5801cbd1af65ff9de1602bbd4cb66e76b6bf4328/src/nvim/vterm/state.c#L1388)), but @dundargoc instead received `CSI ?61;6;7;21;22;23;24;28;32;42c`. There is something fishy going on between the shell and vterm on Windows. Probably something with Windows' PTY emulation (which I don't claim to understand at all).\r\n\r\nThis is where this reply comes from https://github.com/microsoft/terminal/blob/25392ea6042242eceeb95cca29ca18784cf0ee7b/src/terminal/adapter/adaptDispatch.cpp#L1494\r\n\r\nIt does indeed look like the ConPTY layer in Windows is intercepting some of these sequences and sending its own responses rather than delegating to libvterm. So either libvterm never receives the kitty keyboard query, or it receives it but Nvim never gets the response (I'm not sure which right now).\r\n\r\n",
            "commit_id": "819337a13f73bb9dcd82fd51f81f062bd69ab6db",
            "created_at": "2025-01-15T22:58:12Z",
            "diff_hunk": "@@ -629,6 +629,9 @@ describe('terminal input', function()\n   -- TODO(bfredl): getcharstr() erases the distinction between <C-I> and <Tab>.\n   -- If it was enhanced or replaced this could get folded into the test above.\n   it('can send TAB/C-I and ESC/C-[ separately', function()\n+    if skip(is_os('win'), \"The escape sequence to enable kitty keyboard mode doesn't work on Windows\") then\n+      return\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/32038#discussion_r1917445341",
            "id": 1917445341,
            "in_reply_to_id": 1917404124,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ySeTd",
            "original_commit_id": "fef9d3be0936298f322c5a7cc03bb7319cf1a135",
            "original_line": 639,
            "original_position": 6,
            "original_start_line": 632,
            "path": "test/functional/terminal/buffer_spec.lua",
            "position": null,
            "pull_request_review_id": 2554230769,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32038",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917445341/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-15T22:58:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1917445341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32038#discussion_r1918704972"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32038"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1918704972"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    -- Disambiguate escape codes disabled\r\n```",
            "commit_id": "819337a13f73bb9dcd82fd51f81f062bd69ab6db",
            "created_at": "2025-01-16T14:54:50Z",
            "diff_hunk": "@@ -2478,6 +2555,77 @@ putglyph 1f3f4,200d,2620,fe0f 2 0,4]])\n     expect_output('\\x1b[I')\n     vterm.vterm_state_focus_out(state)\n     expect_output('\\x1b[O')\n+\n+    -- Disambiguate escape codes enabled",
            "html_url": "https://github.com/neovim/neovim/pull/32038#discussion_r1918704972",
            "id": 1918704972,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yXR1M",
            "original_commit_id": "9dfd9ec5ab50dfcf316236fdd05a9d95a25dbb45",
            "original_line": 2559,
            "original_position": 246,
            "original_start_line": null,
            "path": "test/unit/vterm_spec.lua",
            "position": null,
            "pull_request_review_id": 2556409424,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32038",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1918704972/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-16T14:54:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1918704972",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32038#discussion_r1919308961"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32038"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1919308961"
                }
            },
            "author_association": "MEMBER",
            "body": "0x5f is \\_, Ctrl+\\_ is 0x1f.\r\n```suggestion\r\n      c = 0x1f;\r\n```",
            "commit_id": "819337a13f73bb9dcd82fd51f81f062bd69ab6db",
            "created_at": "2025-01-16T22:14:48Z",
            "diff_hunk": "@@ -10,54 +10,77 @@\n # include \"vterm/keyboard.c.generated.h\"\n #endif\n \n+static VTermKeyEncodingFlags vterm_state_get_key_encoding_flags(const VTermState *state)\n+{\n+  int screen = state->mode.alt_screen ? BUFIDX_ALTSCREEN : BUFIDX_PRIMARY;\n+  const struct VTermKeyEncodingStack *stack = &state->key_encoding_stacks[screen];\n+  assert(stack->size > 0);\n+  return stack->items[stack->size - 1];\n+}\n+\n void vterm_keyboard_unichar(VTerm *vt, uint32_t c, VTermModifier mod)\n {\n-  // The shift modifier is never important for Unicode characters apart from Space\n-  if (c != ' ') {\n-    mod &= (unsigned)~VTERM_MOD_SHIFT;\n+  bool passthru = false;\n+  if (c == ' ') {\n+    // Space is passed through only when there are no modifiers (including shift)\n+    passthru = mod == VTERM_MOD_NONE;\n+  } else {\n+    // Otherwise pass through when there are no modifiers (ignoring shift)\n+    passthru = (mod & (unsigned)~VTERM_MOD_SHIFT) == 0;\n   }\n \n-  if (mod == 0) {\n-    // Normal text - ignore just shift\n+  if (passthru) {\n     char str[6];\n     int seqlen = fill_utf8((int)c, str);\n     vterm_push_output_bytes(vt, str, (size_t)seqlen);\n     return;\n   }\n \n-  int needs_CSIu;\n-  switch (c) {\n-  // Special Ctrl- letters that can't be represented elsewise\n-  case 'i':\n-  case 'j':\n-  case 'm':\n-  case '[':\n-    needs_CSIu = 1;\n-    break;\n-  // Ctrl-\\ ] ^ _ don't need CSUu\n-  case '\\\\':\n-  case ']':\n-  case '^':\n-  case '_':\n-    needs_CSIu = 0;\n-    break;\n-  // Shift-space needs CSIu\n-  case ' ':\n-    needs_CSIu = !!(mod & VTERM_MOD_SHIFT);\n-    break;\n-  // All other characters needs CSIu except for letters a-z\n-  default:\n-    needs_CSIu = (c < 'a' || c > 'z');\n-  }\n+  VTermKeyEncodingFlags flags = vterm_state_get_key_encoding_flags(vt->state);\n+  if (flags.disambiguate) {\n+    // Always use unshifted codepoint\n+    if (c >= 'A' && c <= 'Z') {\n+      c += 'a' - 'A';\n+      mod |= VTERM_MOD_SHIFT;\n+    }\n \n-  // ALT we can just prefix with ESC; anything else requires CSI u\n-  if (needs_CSIu && (mod & (unsigned)~VTERM_MOD_ALT)) {\n     vterm_push_output_sprintf_ctrl(vt, C1_CSI, \"%d;%du\", c, mod + 1);\n     return;\n   }\n \n   if (mod & VTERM_MOD_CTRL) {\n-    c &= 0x1f;\n+    // Handle special cases. These are taken from kitty, but seem mostly\n+    // consistent across terminals.\n+    switch (c) {\n+    case '2':\n+    case ' ':\n+      // Ctrl+2 is NUL to match Ctrl+@ (which is Shift+2 on US keyboards)\n+      // Ctrl+Space is also NUL for some reason\n+      c = 0x00;\n+      break;\n+    case '3':\n+    case '4':\n+    case '5':\n+    case '6':\n+    case '7':\n+      // Ctrl+3 through Ctrl+7 are sequential starting from 0x1b. Importantly,\n+      // this means that Ctrl+6 emits 0x1e (the same as Ctrl+^ on US keyboards)\n+      c = 0x1b + c - '3';\n+      break;\n+    case '8':\n+      // Ctrl+8 is DEL\n+      c = 0x7f;\n+      break;\n+    case '/':\n+      // Ctrl+/ is equivalent to Ctrl+_ for historic reasons\n+      c = 0x5f;",
            "html_url": "https://github.com/neovim/neovim/pull/32038#discussion_r1919308961",
            "id": 1919308961,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yZlSh",
            "original_commit_id": "05cae93cd7a5c1962b26997a5370a7196ff661db",
            "original_line": 76,
            "original_position": 99,
            "original_start_line": null,
            "path": "src/nvim/vterm/keyboard.c",
            "position": null,
            "pull_request_review_id": 2557519501,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32038",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1919308961/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-16T22:14:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1919308961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32038#discussion_r1919331102"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32038"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1919331102"
                }
            },
            "author_association": "MEMBER",
            "body": "Nice catch, thanks.",
            "commit_id": "819337a13f73bb9dcd82fd51f81f062bd69ab6db",
            "created_at": "2025-01-16T22:39:29Z",
            "diff_hunk": "@@ -10,54 +10,77 @@\n # include \"vterm/keyboard.c.generated.h\"\n #endif\n \n+static VTermKeyEncodingFlags vterm_state_get_key_encoding_flags(const VTermState *state)\n+{\n+  int screen = state->mode.alt_screen ? BUFIDX_ALTSCREEN : BUFIDX_PRIMARY;\n+  const struct VTermKeyEncodingStack *stack = &state->key_encoding_stacks[screen];\n+  assert(stack->size > 0);\n+  return stack->items[stack->size - 1];\n+}\n+\n void vterm_keyboard_unichar(VTerm *vt, uint32_t c, VTermModifier mod)\n {\n-  // The shift modifier is never important for Unicode characters apart from Space\n-  if (c != ' ') {\n-    mod &= (unsigned)~VTERM_MOD_SHIFT;\n+  bool passthru = false;\n+  if (c == ' ') {\n+    // Space is passed through only when there are no modifiers (including shift)\n+    passthru = mod == VTERM_MOD_NONE;\n+  } else {\n+    // Otherwise pass through when there are no modifiers (ignoring shift)\n+    passthru = (mod & (unsigned)~VTERM_MOD_SHIFT) == 0;\n   }\n \n-  if (mod == 0) {\n-    // Normal text - ignore just shift\n+  if (passthru) {\n     char str[6];\n     int seqlen = fill_utf8((int)c, str);\n     vterm_push_output_bytes(vt, str, (size_t)seqlen);\n     return;\n   }\n \n-  int needs_CSIu;\n-  switch (c) {\n-  // Special Ctrl- letters that can't be represented elsewise\n-  case 'i':\n-  case 'j':\n-  case 'm':\n-  case '[':\n-    needs_CSIu = 1;\n-    break;\n-  // Ctrl-\\ ] ^ _ don't need CSUu\n-  case '\\\\':\n-  case ']':\n-  case '^':\n-  case '_':\n-    needs_CSIu = 0;\n-    break;\n-  // Shift-space needs CSIu\n-  case ' ':\n-    needs_CSIu = !!(mod & VTERM_MOD_SHIFT);\n-    break;\n-  // All other characters needs CSIu except for letters a-z\n-  default:\n-    needs_CSIu = (c < 'a' || c > 'z');\n-  }\n+  VTermKeyEncodingFlags flags = vterm_state_get_key_encoding_flags(vt->state);\n+  if (flags.disambiguate) {\n+    // Always use unshifted codepoint\n+    if (c >= 'A' && c <= 'Z') {\n+      c += 'a' - 'A';\n+      mod |= VTERM_MOD_SHIFT;\n+    }\n \n-  // ALT we can just prefix with ESC; anything else requires CSI u\n-  if (needs_CSIu && (mod & (unsigned)~VTERM_MOD_ALT)) {\n     vterm_push_output_sprintf_ctrl(vt, C1_CSI, \"%d;%du\", c, mod + 1);\n     return;\n   }\n \n   if (mod & VTERM_MOD_CTRL) {\n-    c &= 0x1f;\n+    // Handle special cases. These are taken from kitty, but seem mostly\n+    // consistent across terminals.\n+    switch (c) {\n+    case '2':\n+    case ' ':\n+      // Ctrl+2 is NUL to match Ctrl+@ (which is Shift+2 on US keyboards)\n+      // Ctrl+Space is also NUL for some reason\n+      c = 0x00;\n+      break;\n+    case '3':\n+    case '4':\n+    case '5':\n+    case '6':\n+    case '7':\n+      // Ctrl+3 through Ctrl+7 are sequential starting from 0x1b. Importantly,\n+      // this means that Ctrl+6 emits 0x1e (the same as Ctrl+^ on US keyboards)\n+      c = 0x1b + c - '3';\n+      break;\n+    case '8':\n+      // Ctrl+8 is DEL\n+      c = 0x7f;\n+      break;\n+    case '/':\n+      // Ctrl+/ is equivalent to Ctrl+_ for historic reasons\n+      c = 0x5f;",
            "html_url": "https://github.com/neovim/neovim/pull/32038#discussion_r1919331102",
            "id": 1919331102,
            "in_reply_to_id": 1919308961,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yZqse",
            "original_commit_id": "05cae93cd7a5c1962b26997a5370a7196ff661db",
            "original_line": 76,
            "original_position": 99,
            "original_start_line": null,
            "path": "src/nvim/vterm/keyboard.c",
            "position": null,
            "pull_request_review_id": 2557555734,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32038",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1919331102/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-16T22:39:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1919331102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "To match the requirements of kitty keyboard protocol (any key with a Ctrl modifier is sent as CSI u), you need some other changes:\r\n```diff\r\ndiff --git a/src/nvim/getchar.c b/src/nvim/getchar.c\r\nindex 6cf4556a9f..516de37444 100644\r\n--- a/src/nvim/getchar.c\r\n+++ b/src/nvim/getchar.c\r\n@@ -1518,11 +1518,9 @@ int merge_modifiers(int c_arg, int *modifiers)\r\n \r\n   if (*modifiers & MOD_MASK_CTRL) {\r\n     if ((c >= '`' && c <= 0x7f) || (c >= '@' && c <= '_')) {\r\n-      if (!(State & MODE_TERMINAL) || !(c == 'I' || c == 'J' || c == 'M' || c == '[')) {\r\n-        c &= 0x1f;\r\n-        if (c == NUL) {\r\n-          c = K_ZERO;\r\n-        }\r\n+      c &= 0x1f;\r\n+      if (c == NUL) {\r\n+        c = K_ZERO;\r\n       }\r\n     } else if (c == '6') {\r\n       // CTRL-6 is equivalent to CTRL-^\r\n@@ -2058,6 +2056,10 @@ static bool at_ins_compl_key(void)\r\n /// @return  the length of the replaced bytes, 0 if nothing changed, -1 for error.\r\n static int check_simplify_modifier(int max_offset)\r\n {\r\n+  if (State & MODE_TERMINAL) {\r\n+    return 0;\r\n+  }\r\n+\r\n   for (int offset = 0; offset < max_offset; offset++) {\r\n     if (offset + 3 >= typebuf.tb_len) {\r\n       break;\r\ndiff --git a/src/nvim/terminal.c b/src/nvim/terminal.c\r\nindex fb8565e534..09099ac5b2 100644\r\n--- a/src/nvim/terminal.c\r\n+++ b/src/nvim/terminal.c\r\n@@ -783,7 +783,10 @@ static int terminal_execute(VimState *state, int key)\r\n {\r\n   TerminalState *s = (TerminalState *)state;\r\n \r\n-  switch (key) {\r\n+  int tmp_mod_mask = mod_mask;\r\n+  int mod_key = merge_modifiers(key, &tmp_mod_mask);\r\n+\r\n+  switch (mod_key) {\r\n   case K_LEFTMOUSE:\r\n   case K_LEFTDRAG:\r\n   case K_LEFTRELEASE:\r\n@@ -841,13 +844,13 @@ static int terminal_execute(VimState *state, int key)\r\n     FALLTHROUGH;\r\n \r\n   default:\r\n-    if (key == Ctrl_C) {\r\n+    if (mod_key == Ctrl_C) {\r\n       // terminal_enter() always sets `mapped_ctrl_c` to avoid `got_int`. 8eeda7169aa4\r\n       // But `got_int` may be set elsewhere, e.g. by interrupt() or an autocommand,\r\n       // so ensure that it is cleared.\r\n       got_int = false;\r\n     }\r\n-    if (key == Ctrl_BSL && !s->got_bsl) {\r\n+    if (mod_key == Ctrl_BSL && !s->got_bsl) {\r\n       s->got_bsl = true;\r\n       break;\r\n     }\r\n```\r\n\r\nHowever with this patch the problem that currently happens with Ctrl-/ in #18735 may now also happen with Ctrl-6.\r\n\r\nOther Ctrl-digits also behave strangely in this PR, with or without the patch above.",
            "created_at": "2025-01-16T04:57:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/32038#issuecomment-2594538063",
            "id": 2594538063,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32038",
            "node_id": "IC_kwDOAPphoM6apYJP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2594538063/reactions"
            },
            "updated_at": "2025-01-16T05:19:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2594538063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Note: I meant Ctrl-digits behave strangely when kitty keyboard protocol is disabled.",
            "created_at": "2025-01-16T14:43:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/32038#issuecomment-2595916272",
            "id": 2595916272,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32038",
            "node_id": "IC_kwDOAPphoM6auonw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2595916272/reactions"
            },
            "updated_at": "2025-01-16T14:43:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2595916272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Note: I meant Ctrl-digits behave strangely when kitty keyboard protocol is disabled.\r\n\r\nYes I noticed the same thing. As far as I can tell there is no real rhyme or reason to how Ctrl+digits are encoded, it seems to be special case handling to match expected historic behavior. I've updated vterm to copy what kitty does ([Ghostty too](https://github.com/ghostty-org/ghostty/blob/ff9414d9ea7b16a375d41cde8f6f193de7e5db72/src/input/KeyEncoder.zig#L635-L688), which itself copies kitty), so this should be working now. If you can find a reference to a better way that these keys should be encoded please let me know...",
            "created_at": "2025-01-16T14:52:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/32038#issuecomment-2595937368",
            "id": 2595937368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32038",
            "node_id": "IC_kwDOAPphoM6autxY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2595937368/reactions"
            },
            "updated_at": "2025-01-16T14:54:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2595937368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32038/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32038/commits",
    "created_at": "2025-01-15T17:10:17Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32038.diff",
    "draft": false,
    "head": {
        "label": "gpanders:push-nsrttwwnsqvm",
        "ref": "push-nsrttwwnsqvm",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2025-01-18T13:43:30Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 296410,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2025-01-11T19:57:11Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "819337a13f73bb9dcd82fd51f81f062bd69ab6db",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32038",
    "id": 2279689756,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32038",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "bf098c12e3078df49fd7dee5ba7c2100a211d4c8",
    "merged_at": "2025-01-17T00:33:22Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 138,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 57,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-01-17T23:02:36Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM6H4U4c",
    "number": 32038,
    "patch_url": "https://github.com/neovim/neovim/pull/32038.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32038/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/819337a13f73bb9dcd82fd51f81f062bd69ab6db",
    "title": "feat(terminal): add support for kitty keyboard protocol",
    "updated_at": "2025-01-17T00:33:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32038",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    }
}