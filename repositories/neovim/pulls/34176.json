{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34176/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34176/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34176"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34176"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34176/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34176"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ecf24587c665bede8ae6d14712dba1f5b99ba1e5"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6114,
            "forks_count": 6114,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1972,
            "open_issues_count": 1972,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-03T01:03:43Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 326078,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89994,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-03T02:10:49Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89994,
            "watchers_count": 89994,
            "web_commit_signoff_required": false
        },
        "sha": "f2373a89d78356423a84e9636d6949b5322ecc69",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem:\r\n\r\nCurrently undefined behavior can occur when `string_fragment()` is called with `OSC_COMMAND`. This is because when the state changes to `OSC_COMMAND`, `string_initial` is set to true. Then in some cases, directly after this `string_initial` will be set back to false before the on_osc callback is called, this leads to `term_settermprop()` never initializing the title.\r\n\r\nSolution:\r\n\r\nIn all of the no-op cases in `string_fragment()` currently, we continue to the end of the function where `vt->parser.string_initial` is set to false. This change makes it so that the function returns in the no-op cases instead.\r\n\r\nNote:\r\n\r\nThis change also adds a test with a byte sequence from the file in #34028 that caused nvim to crash. This byte sequences is the shortest sequence I could trim down from that file that still would trigger the crash. There are also two other tests I added which validate that setting the title with OSC-0 and OSC-2 still works.\r\n\r\nFixes: #34028\r\n\r\n<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\n",
    "closed_at": "2025-05-29T18:29:17Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34176#discussion_r2107562040"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107562040"
                }
            },
            "author_association": "MEMBER",
            "body": "All three of these tests pass on master without your change, so I don't think these reproduce the issue you're describing.",
            "commit_id": "ecf24587c665bede8ae6d14712dba1f5b99ba1e5",
            "created_at": "2025-05-26T15:24:02Z",
            "diff_hunk": "@@ -12,4 +16,36 @@ describe(':terminal', function()\n     api.nvim_chan_send(chan, '\\027]8;;https://example.com\\027\\\\Example\\027]8;;\\027\\n')\n     assert_alive()\n   end)\n+\n+  it('handles OSC-2 title setting', function()\n+    -- OSC-2 should set title.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '2;This title set with OSC 2' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 2')\n+    assert_alive()\n+  end)\n+\n+  it('handles OSC-0 title and icon setting', function()\n+    -- OSC-0 should set title and icon name to the same string. We currently ignore the icon name,\n+    -- but the title should still be reflected.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '0;This title set with OSC 0' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 0')\n+    assert_alive()\n+  end)\n+\n+  it('handles control character following OSC prefix #34028', function()\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. NUL .. '0;aaaaaaaaaaaaaaaaaaaaaaaaaaa\\r\\n'\n+    --                          ^ Having a ctrl char following the OSC_PREFIX causes\n+    --                            `string_fragment()` to be called while in OSC_COMMAND mode.\n+    api.nvim_chan_send(chan, input)\n+    assert_alive()\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/34176#discussion_r2107562040",
            "id": 2107562040,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59ntg4",
            "original_commit_id": "306995937d6ec7027a4dcbb1c4d6862019b473f6",
            "original_line": 62,
            "original_position": 46,
            "original_start_line": 20,
            "path": "test/functional/terminal/parser_spec.lua",
            "position": null,
            "pull_request_review_id": 2868763927,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107562040/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-26T15:24:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107562040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34176#discussion_r2107590909"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107590909"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I did just make a super small modification from when you last reviewed this to make this more clear, but I've been testing that the `handles control character following OSC prefix` test fails when I change the line in vterm/parser.c back to break.\r\n\r\nThe other two tests are expected to work on latest master however, they just test that a normal OSC-0 and OSC-2 sequence sets the title to verify there are no regressions.\r\n\r\nI just verified this again and this is what I get:\r\n```\r\n[I] gf@arch:~/C/neovim=>TEST_FILE=\"test/functional/terminal/parser_spec.lua\" cmake --build build --target functionaltest\r\n[  0%] Built target update_version_stamp\r\n[  6%] Built target nlua0\r\n[  6%] Generating auto/api/private/dispatch_wrappers.c.generated.h, ../../include/api/private/dispatch_wrappers.h.generated.h\r\n[  6%] Generating auto/autocmd.c.generated.h, ../../include/autocmd.h.generated.h\r\n[  6%] Generating auto/version.c.generated.h, ../../include/version.h.generated.h\r\n[  6%] Generating auto/vterm/parser.c.generated.h, ../../include/vterm/parser.h.generated.h\r\n[  6%] Generating auto/api/private/dispatch_wrappers.c.generated.h, ../../include/api/private/dispatch_wrappers.h.generated.h\r\n[  6%] Generating auto/autocmd.c.generated.h, ../../include/autocmd.h.generated.h\r\n[  6%] Generating auto/version.c.generated.h, ../../include/version.h.generated.h\r\n[  6%] Generating auto/vterm/parser.c.generated.h, ../../include/vterm/parser.h.generated.h\r\n[100%] Built target nvim_bin\r\n[100%] Built target streams-test\r\n[100%] Built target nvim_runtime_deps\r\n[100%] Built target nvim_runtime\r\n[100%] Built target nvim\r\n[100%] Built target lua_dev_deps\r\n[100%] Built target tty-test\r\n[100%] Built target shell-test\r\n[100%] Built target pwsh-test\r\n[100%] Built target printargs-test\r\n[100%] Built target printenv-test\r\n-------- Global test environment setup.\r\n-------- Running tests from test/functional/terminal/parser_spec.lua\r\nRUN      T1 :terminal handles invalid OSC terminators #30084: 5.00 ms OK\r\nRUN      T2 :terminal handles OSC-2 title setting: 5.00 ms OK\r\nRUN      T3 :terminal handles OSC-0 title and icon setting: 4.00 ms OK\r\nRUN      T4 :terminal handles control character following OSC prefix #34028: 152.00 ms ERR\r\ntest/functional/testnvim.lua:139: EOF was received from Nvim. Likely the Nvim process crashed. stderr:\r\nrealloc(): invalid next size\r\n\r\n\r\nstack traceback:\r\n        test/functional/testnvim.lua:139: in function 'nvim_chan_send'\r\n        test/functional/terminal/parser_spec.lua:51: in function <test/functional/terminal/parser_spec.lua:43>\r\n\r\n-------- 4 tests from test/functional/terminal/parser_spec.lua (169.00 ms total)\r\n\r\n-------- Global test environment teardown.\r\n======== 4 tests from 1 test file ran. (170.00 ms total)\r\nPASSED   3 tests.\r\nERROR    1 error, listed below:\r\nERROR    test/functional/terminal/parser_spec.lua @ 43: :terminal handles control character following OSC prefix #34028\r\ntest/functional/testnvim.lua:139: EOF was received from Nvim. Likely the Nvim process crashed. stderr:\r\nrealloc(): invalid next size\r\n\r\n\r\nstack traceback:\r\n        test/functional/testnvim.lua:139: in function 'nvim_chan_send'\r\n        test/functional/terminal/parser_spec.lua:51: in function <test/functional/terminal/parser_spec.lua:43>\r\n\r\n\r\n 1 ERROR\r\n------------------------------------------------------------------------------\r\n$NVIM_LOG_FILE: /home/gabe/Code/neovim/build/.nvimlog\r\n(last 10 lines)\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 state_enter:99: input: K_EVENT\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 handle_nvim_open_term:8181: RPC: ch 1: invoke nvim_open_term\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 RPC: -> 1: [response]  id=0\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 may_trigger_safestate:307: SafeState: Start triggering\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 receive_msgpack:210: ch 1: parsing 56 bytes from msgpack Stream: 0x5ea10563f830\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 RPC: <- 1: [request]   id=1: nvim_chan_send\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 handle_request:347: RPC: scheduled nvim_chan_send\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 inbuf_poll:516: blocking... events=false\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 state_enter:99: input: K_EVENT\r\nDBG 2025-05-26T11:42:07.987 T4.2889138.0 handle_nvim_chan_send:8236: RPC: ch 1: invoke nvim_chan_send\r\n------------------------------------------------------------------------------\r\nE5113: Lua chunk:\r\n-- Tests exited non-zero: 1\r\nCMake Error at /home/gabe/Code/neovim/cmake/RunTests.cmake:98 (message):\r\n  functional tests failed with error: 1\r\n\r\n\r\nmake[3]: *** [test/CMakeFiles/functionaltest.dir/build.make:75: test/CMakeFiles/functionaltest] Error 1\r\nmake[2]: *** [CMakeFiles/Makefile2:1443: test/CMakeFiles/functionaltest.dir/all] Error 2\r\nmake[1]: *** [CMakeFiles/Makefile2:1450: test/CMakeFiles/functionaltest.dir/rule] Error 2\r\nmake: *** [Makefile:645: functionaltest] Error 2\r\n```\r\nWould you mind trying this one more time with the tests in their current state when you change the return back to a break?\r\n\r\nOne thing I would like to note, is that it's very possible that depending on the platform and the realloc implementation, you might need to make that series of 27 a's a bit longer in order for realloc to notice that it's metadata has been overwritten.\r\n\r\nCan I ask what platform you are on?",
            "commit_id": "ecf24587c665bede8ae6d14712dba1f5b99ba1e5",
            "created_at": "2025-05-26T15:49:15Z",
            "diff_hunk": "@@ -12,4 +16,36 @@ describe(':terminal', function()\n     api.nvim_chan_send(chan, '\\027]8;;https://example.com\\027\\\\Example\\027]8;;\\027\\n')\n     assert_alive()\n   end)\n+\n+  it('handles OSC-2 title setting', function()\n+    -- OSC-2 should set title.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '2;This title set with OSC 2' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 2')\n+    assert_alive()\n+  end)\n+\n+  it('handles OSC-0 title and icon setting', function()\n+    -- OSC-0 should set title and icon name to the same string. We currently ignore the icon name,\n+    -- but the title should still be reflected.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '0;This title set with OSC 0' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 0')\n+    assert_alive()\n+  end)\n+\n+  it('handles control character following OSC prefix #34028', function()\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. NUL .. '0;aaaaaaaaaaaaaaaaaaaaaaaaaaa\\r\\n'\n+    --                          ^ Having a ctrl char following the OSC_PREFIX causes\n+    --                            `string_fragment()` to be called while in OSC_COMMAND mode.\n+    api.nvim_chan_send(chan, input)\n+    assert_alive()\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/34176#discussion_r2107590909",
            "id": 2107590909,
            "in_reply_to_id": 2107562040,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59n0j9",
            "original_commit_id": "306995937d6ec7027a4dcbb1c4d6862019b473f6",
            "original_line": 62,
            "original_position": 46,
            "original_start_line": 20,
            "path": "test/functional/terminal/parser_spec.lua",
            "position": null,
            "pull_request_review_id": 2868805655,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107590909/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-26T15:51:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107590909",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86860060?v=4",
                "events_url": "https://api.github.com/users/The-Briel-Deal/events{/privacy}",
                "followers_url": "https://api.github.com/users/The-Briel-Deal/followers",
                "following_url": "https://api.github.com/users/The-Briel-Deal/following{/other_user}",
                "gists_url": "https://api.github.com/users/The-Briel-Deal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/The-Briel-Deal",
                "id": 86860060,
                "login": "The-Briel-Deal",
                "node_id": "MDQ6VXNlcjg2ODYwMDYw",
                "organizations_url": "https://api.github.com/users/The-Briel-Deal/orgs",
                "received_events_url": "https://api.github.com/users/The-Briel-Deal/received_events",
                "repos_url": "https://api.github.com/users/The-Briel-Deal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/The-Briel-Deal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/The-Briel-Deal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/The-Briel-Deal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34176#discussion_r2107609764"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107609764"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I also just created another branch rebased off latest master where I changed the return back to a break, and I ran the CI tests against it. I'm curious if this will reproduce the issue on some platforms but not others.\r\n\r\nhttps://github.com/The-Briel-Deal/neovim/tree/testing_long_cat_crash_in_ci\r\n\r\nhttps://github.com/The-Briel-Deal/neovim/actions/runs/15258010280\r\n\r\nIt looks like the issue was reproduced on ubuntu gcc https://github.com/The-Briel-Deal/neovim/actions/runs/15258010280/job/42910216541\r\n\r\nBut the functional tests succeeded on MacOS arm clang https://github.com/The-Briel-Deal/neovim/actions/runs/15258010280/job/42910216549\r\n\r\nSo i'm wondering if you are on an apple silicon mac? It seems like it isn't a clang vs gcc thing since the tests reproduce the issue on clang and gcc with my x86 arch linux machine.",
            "commit_id": "ecf24587c665bede8ae6d14712dba1f5b99ba1e5",
            "created_at": "2025-05-26T16:05:58Z",
            "diff_hunk": "@@ -12,4 +16,36 @@ describe(':terminal', function()\n     api.nvim_chan_send(chan, '\\027]8;;https://example.com\\027\\\\Example\\027]8;;\\027\\n')\n     assert_alive()\n   end)\n+\n+  it('handles OSC-2 title setting', function()\n+    -- OSC-2 should set title.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '2;This title set with OSC 2' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 2')\n+    assert_alive()\n+  end)\n+\n+  it('handles OSC-0 title and icon setting', function()\n+    -- OSC-0 should set title and icon name to the same string. We currently ignore the icon name,\n+    -- but the title should still be reflected.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '0;This title set with OSC 0' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 0')\n+    assert_alive()\n+  end)\n+\n+  it('handles control character following OSC prefix #34028', function()\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. NUL .. '0;aaaaaaaaaaaaaaaaaaaaaaaaaaa\\r\\n'\n+    --                          ^ Having a ctrl char following the OSC_PREFIX causes\n+    --                            `string_fragment()` to be called while in OSC_COMMAND mode.\n+    api.nvim_chan_send(chan, input)\n+    assert_alive()\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/34176#discussion_r2107609764",
            "id": 2107609764,
            "in_reply_to_id": 2107562040,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59n5Kk",
            "original_commit_id": "306995937d6ec7027a4dcbb1c4d6862019b473f6",
            "original_line": 62,
            "original_position": 46,
            "original_start_line": 20,
            "path": "test/functional/terminal/parser_spec.lua",
            "position": null,
            "pull_request_review_id": 2868832282,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107609764/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-26T16:17:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2107609764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86860060?v=4",
                "events_url": "https://api.github.com/users/The-Briel-Deal/events{/privacy}",
                "followers_url": "https://api.github.com/users/The-Briel-Deal/followers",
                "following_url": "https://api.github.com/users/The-Briel-Deal/following{/other_user}",
                "gists_url": "https://api.github.com/users/The-Briel-Deal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/The-Briel-Deal",
                "id": 86860060,
                "login": "The-Briel-Deal",
                "node_id": "MDQ6VXNlcjg2ODYwMDYw",
                "organizations_url": "https://api.github.com/users/The-Briel-Deal/orgs",
                "received_events_url": "https://api.github.com/users/The-Briel-Deal/received_events",
                "repos_url": "https://api.github.com/users/The-Briel-Deal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/The-Briel-Deal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/The-Briel-Deal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/The-Briel-Deal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34176#discussion_r2114521269"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114521269"
                }
            },
            "author_association": "MEMBER",
            "body": "> So i'm wondering if you are on an apple silicon mac?\r\n\r\nIndeed I am. Thanks for looking into this.",
            "commit_id": "ecf24587c665bede8ae6d14712dba1f5b99ba1e5",
            "created_at": "2025-05-29T18:28:56Z",
            "diff_hunk": "@@ -12,4 +16,36 @@ describe(':terminal', function()\n     api.nvim_chan_send(chan, '\\027]8;;https://example.com\\027\\\\Example\\027]8;;\\027\\n')\n     assert_alive()\n   end)\n+\n+  it('handles OSC-2 title setting', function()\n+    -- OSC-2 should set title.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '2;This title set with OSC 2' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 2')\n+    assert_alive()\n+  end)\n+\n+  it('handles OSC-0 title and icon setting', function()\n+    -- OSC-0 should set title and icon name to the same string. We currently ignore the icon name,\n+    -- but the title should still be reflected.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '0;This title set with OSC 0' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 0')\n+    assert_alive()\n+  end)\n+\n+  it('handles control character following OSC prefix #34028', function()\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. NUL .. '0;aaaaaaaaaaaaaaaaaaaaaaaaaaa\\r\\n'\n+    --                          ^ Having a ctrl char following the OSC_PREFIX causes\n+    --                            `string_fragment()` to be called while in OSC_COMMAND mode.\n+    api.nvim_chan_send(chan, input)\n+    assert_alive()\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/34176#discussion_r2114521269",
            "id": 2114521269,
            "in_reply_to_id": 2107562040,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-CQi1",
            "original_commit_id": "306995937d6ec7027a4dcbb1c4d6862019b473f6",
            "original_line": 62,
            "original_position": 46,
            "original_start_line": 20,
            "path": "test/functional/terminal/parser_spec.lua",
            "position": null,
            "pull_request_review_id": 2879230397,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114521269/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-29T18:28:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114521269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34176#discussion_r2114865086"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34176"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114865086"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for coming back to this and approving the change! Probably just a weird difference in the system's malloc implementations.",
            "commit_id": "ecf24587c665bede8ae6d14712dba1f5b99ba1e5",
            "created_at": "2025-05-29T22:57:38Z",
            "diff_hunk": "@@ -12,4 +16,36 @@ describe(':terminal', function()\n     api.nvim_chan_send(chan, '\\027]8;;https://example.com\\027\\\\Example\\027]8;;\\027\\n')\n     assert_alive()\n   end)\n+\n+  it('handles OSC-2 title setting', function()\n+    -- OSC-2 should set title.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '2;This title set with OSC 2' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 2')\n+    assert_alive()\n+  end)\n+\n+  it('handles OSC-0 title and icon setting', function()\n+    -- OSC-0 should set title and icon name to the same string. We currently ignore the icon name,\n+    -- but the title should still be reflected.\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. '0;This title set with OSC 0' .. BEL\n+    api.nvim_chan_send(chan, input)\n+    --- @type string\n+    local term_title = api.nvim_buf_get_var(0, 'term_title')\n+    assert.Equal(term_title, 'This title set with OSC 0')\n+    assert_alive()\n+  end)\n+\n+  it('handles control character following OSC prefix #34028', function()\n+    local chan = api.nvim_open_term(0, {})\n+    local input = OSC_PREFIX .. NUL .. '0;aaaaaaaaaaaaaaaaaaaaaaaaaaa\\r\\n'\n+    --                          ^ Having a ctrl char following the OSC_PREFIX causes\n+    --                            `string_fragment()` to be called while in OSC_COMMAND mode.\n+    api.nvim_chan_send(chan, input)\n+    assert_alive()\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/34176#discussion_r2114865086",
            "id": 2114865086,
            "in_reply_to_id": 2107562040,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-Dke-",
            "original_commit_id": "306995937d6ec7027a4dcbb1c4d6862019b473f6",
            "original_line": 62,
            "original_position": 46,
            "original_start_line": 20,
            "path": "test/functional/terminal/parser_spec.lua",
            "position": null,
            "pull_request_review_id": 2879786696,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34176",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114865086/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-29T22:57:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2114865086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86860060?v=4",
                "events_url": "https://api.github.com/users/The-Briel-Deal/events{/privacy}",
                "followers_url": "https://api.github.com/users/The-Briel-Deal/followers",
                "following_url": "https://api.github.com/users/The-Briel-Deal/following{/other_user}",
                "gists_url": "https://api.github.com/users/The-Briel-Deal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/The-Briel-Deal",
                "id": 86860060,
                "login": "The-Briel-Deal",
                "node_id": "MDQ6VXNlcjg2ODYwMDYw",
                "organizations_url": "https://api.github.com/users/The-Briel-Deal/orgs",
                "received_events_url": "https://api.github.com/users/The-Briel-Deal/received_events",
                "repos_url": "https://api.github.com/users/The-Briel-Deal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/The-Briel-Deal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/The-Briel-Deal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/The-Briel-Deal",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I addressed the unrelated reason the lint check is failing here https://github.com/neovim/neovim/pull/34180.",
            "created_at": "2025-05-26T00:48:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/34176#issuecomment-2908221736",
            "id": 2908221736,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34176",
            "node_id": "IC_kwDOAPphoM6tV_Eo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2908221736/reactions"
            },
            "updated_at": "2025-05-26T00:48:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2908221736",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86860060?v=4",
                "events_url": "https://api.github.com/users/The-Briel-Deal/events{/privacy}",
                "followers_url": "https://api.github.com/users/The-Briel-Deal/followers",
                "following_url": "https://api.github.com/users/The-Briel-Deal/following{/other_user}",
                "gists_url": "https://api.github.com/users/The-Briel-Deal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/The-Briel-Deal",
                "id": 86860060,
                "login": "The-Briel-Deal",
                "node_id": "MDQ6VXNlcjg2ODYwMDYw",
                "organizations_url": "https://api.github.com/users/The-Briel-Deal/orgs",
                "received_events_url": "https://api.github.com/users/The-Briel-Deal/received_events",
                "repos_url": "https://api.github.com/users/The-Briel-Deal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/The-Briel-Deal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/The-Briel-Deal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/The-Briel-Deal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hey @gpanders! I just wanted to follow up on this patch. I extended the test case with a second portion which pushes a longer string if the first one succeeds to make sure the test case reproduces the issue on MacOS and Windows as well. Let me know if you have any more questions on this!\r\n\r\nI'm pretty sure the reason you weren't able to reproduce this the first time is because the test triggered the crash on Linux but not MacOS and Windows ([see this CI run where I verified this](https://github.com/The-Briel-Deal/neovim/actions/runs/15258010280)).",
            "created_at": "2025-05-28T22:35:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/34176#issuecomment-2917767593",
            "id": 2917767593,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34176",
            "node_id": "IC_kwDOAPphoM6t6Zmp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917767593/reactions"
            },
            "updated_at": "2025-05-29T22:54:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2917767593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86860060?v=4",
                "events_url": "https://api.github.com/users/The-Briel-Deal/events{/privacy}",
                "followers_url": "https://api.github.com/users/The-Briel-Deal/followers",
                "following_url": "https://api.github.com/users/The-Briel-Deal/following{/other_user}",
                "gists_url": "https://api.github.com/users/The-Briel-Deal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/The-Briel-Deal",
                "id": 86860060,
                "login": "The-Briel-Deal",
                "node_id": "MDQ6VXNlcjg2ODYwMDYw",
                "organizations_url": "https://api.github.com/users/The-Briel-Deal/orgs",
                "received_events_url": "https://api.github.com/users/The-Briel-Deal/received_events",
                "repos_url": "https://api.github.com/users/The-Briel-Deal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/The-Briel-Deal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/The-Briel-Deal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/The-Briel-Deal",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34176/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34176/commits",
    "created_at": "2025-05-25T22:02:58Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34176.diff",
    "draft": false,
    "head": {
        "label": "The-Briel-Deal:long_cat_crash",
        "ref": "long_cat_crash",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/The-Briel-Deal/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/The-Briel-Deal/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/The-Briel-Deal/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/The-Briel-Deal/neovim/branches{/branch}",
            "clone_url": "https://github.com/The-Briel-Deal/neovim.git",
            "collaborators_url": "https://api.github.com/repos/The-Briel-Deal/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/The-Briel-Deal/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/The-Briel-Deal/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/The-Briel-Deal/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/The-Briel-Deal/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/The-Briel-Deal/neovim/contributors",
            "created_at": "2025-05-18T21:03:27Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/The-Briel-Deal/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/The-Briel-Deal/neovim/downloads",
            "events_url": "https://api.github.com/repos/The-Briel-Deal/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/The-Briel-Deal/neovim/forks",
            "full_name": "The-Briel-Deal/neovim",
            "git_commits_url": "https://api.github.com/repos/The-Briel-Deal/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/The-Briel-Deal/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/The-Briel-Deal/neovim/git/tags{/sha}",
            "git_url": "git://github.com/The-Briel-Deal/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/The-Briel-Deal/neovim/hooks",
            "html_url": "https://github.com/The-Briel-Deal/neovim",
            "id": 985946130,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/The-Briel-Deal/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/The-Briel-Deal/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/The-Briel-Deal/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/The-Briel-Deal/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/The-Briel-Deal/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/The-Briel-Deal/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/The-Briel-Deal/neovim/merges",
            "milestones_url": "https://api.github.com/repos/The-Briel-Deal/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOsRYEg",
            "notifications_url": "https://api.github.com/repos/The-Briel-Deal/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86860060?v=4",
                "events_url": "https://api.github.com/users/The-Briel-Deal/events{/privacy}",
                "followers_url": "https://api.github.com/users/The-Briel-Deal/followers",
                "following_url": "https://api.github.com/users/The-Briel-Deal/following{/other_user}",
                "gists_url": "https://api.github.com/users/The-Briel-Deal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/The-Briel-Deal",
                "id": 86860060,
                "login": "The-Briel-Deal",
                "node_id": "MDQ6VXNlcjg2ODYwMDYw",
                "organizations_url": "https://api.github.com/users/The-Briel-Deal/orgs",
                "received_events_url": "https://api.github.com/users/The-Briel-Deal/received_events",
                "repos_url": "https://api.github.com/users/The-Briel-Deal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/The-Briel-Deal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/The-Briel-Deal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/The-Briel-Deal",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/The-Briel-Deal/neovim/pulls{/number}",
            "pushed_at": "2025-06-02T05:35:17Z",
            "releases_url": "https://api.github.com/repos/The-Briel-Deal/neovim/releases{/id}",
            "size": 315527,
            "ssh_url": "git@github.com:The-Briel-Deal/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/The-Briel-Deal/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/The-Briel-Deal/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/The-Briel-Deal/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/The-Briel-Deal/neovim/subscription",
            "svn_url": "https://github.com/The-Briel-Deal/neovim",
            "tags_url": "https://api.github.com/repos/The-Briel-Deal/neovim/tags",
            "teams_url": "https://api.github.com/repos/The-Briel-Deal/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/The-Briel-Deal/neovim/git/trees{/sha}",
            "updated_at": "2025-05-25T15:12:15Z",
            "url": "https://api.github.com/repos/The-Briel-Deal/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ecf24587c665bede8ae6d14712dba1f5b99ba1e5",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/86860060?v=4",
            "events_url": "https://api.github.com/users/The-Briel-Deal/events{/privacy}",
            "followers_url": "https://api.github.com/users/The-Briel-Deal/followers",
            "following_url": "https://api.github.com/users/The-Briel-Deal/following{/other_user}",
            "gists_url": "https://api.github.com/users/The-Briel-Deal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/The-Briel-Deal",
            "id": 86860060,
            "login": "The-Briel-Deal",
            "node_id": "MDQ6VXNlcjg2ODYwMDYw",
            "organizations_url": "https://api.github.com/users/The-Briel-Deal/orgs",
            "received_events_url": "https://api.github.com/users/The-Briel-Deal/received_events",
            "repos_url": "https://api.github.com/users/The-Briel-Deal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/The-Briel-Deal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/The-Briel-Deal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/The-Briel-Deal",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34176",
    "id": 2542669269,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34176",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b28bbee539625f9bcbf128e8da400d1d55b499ff",
    "merged_at": "2025-05-29T18:29:17Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6Xjg3V",
    "number": 34176,
    "patch_url": "https://github.com/neovim/neovim/pull/34176.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34176/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ecf24587c665bede8ae6d14712dba1f5b99ba1e5",
    "title": "fix(terminal): skip setting `string_initial` to false on no-op",
    "updated_at": "2025-05-29T22:57:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34176",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/86860060?v=4",
        "events_url": "https://api.github.com/users/The-Briel-Deal/events{/privacy}",
        "followers_url": "https://api.github.com/users/The-Briel-Deal/followers",
        "following_url": "https://api.github.com/users/The-Briel-Deal/following{/other_user}",
        "gists_url": "https://api.github.com/users/The-Briel-Deal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/The-Briel-Deal",
        "id": 86860060,
        "login": "The-Briel-Deal",
        "node_id": "MDQ6VXNlcjg2ODYwMDYw",
        "organizations_url": "https://api.github.com/users/The-Briel-Deal/orgs",
        "received_events_url": "https://api.github.com/users/The-Briel-Deal/received_events",
        "repos_url": "https://api.github.com/users/The-Briel-Deal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/The-Briel-Deal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/The-Briel-Deal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/The-Briel-Deal",
        "user_view_type": "public"
    }
}