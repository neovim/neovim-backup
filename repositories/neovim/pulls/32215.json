{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32215/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32215/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32215"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32215"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32215/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8020ac5b6b032611372c4cd28e6665928b95a845"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5841,
            "forks_count": 5841,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1854,
            "open_issues_count": 1854,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-04T02:07:35Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 307298,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85859,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-04T02:07:39Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85859,
            "watchers_count": 85859,
            "web_commit_signoff_required": false
        },
        "sha": "6711fa27ca6e822bfd2394ec513671617cc53efd",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "The current generation script uses `@alias` for enum constants, but we also have tables for these in the non-meta `protocol.lua` file. This PR moves the auto-generated enum definitions from `_meta/protocol.lua` to `protocol.lua`, fixing the \"duplicate definitions\" LuaLS errors and easing the maintenance of these constants.\r\n\r\nNote that some other unrelated changes (like typo fixes) are included here since I ran the generation script.",
    "closed_at": "2025-01-29T19:13:29Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32215#discussion_r1932549491"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932549491"
                }
            },
            "author_association": "MEMBER",
            "body": "Is there potential to reduce the amount of bi-directional mappins? If I remember right the plan was to mostly remove those.",
            "commit_id": "8020ac5b6b032611372c4cd28e6665928b95a845",
            "created_at": "2025-01-28T17:04:41Z",
            "diff_hunk": "@@ -629,6 +326,733 @@ function protocol.resolve_capabilities(server_capabilities)\n end\n \n -- Generated by gen_lsp.lua, keep at end of file.\n+---A set of predefined token types. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenTypes\n+protocol.SemanticTokenTypes = {\n+  ['namespace'] = 'namespace',\n+  ['type'] = 'type',\n+  ['class'] = 'class',\n+  ['enum'] = 'enum',\n+  ['interface'] = 'interface',\n+  ['struct'] = 'struct',\n+  ['typeParameter'] = 'typeParameter',\n+  ['parameter'] = 'parameter',\n+  ['variable'] = 'variable',\n+  ['property'] = 'property',\n+  ['enumMember'] = 'enumMember',\n+  ['event'] = 'event',\n+  ['function'] = 'function',\n+  ['method'] = 'method',\n+  ['macro'] = 'macro',\n+  ['keyword'] = 'keyword',\n+  ['modifier'] = 'modifier',\n+  ['comment'] = 'comment',\n+  ['string'] = 'string',\n+  ['number'] = 'number',\n+  ['regexp'] = 'regexp',\n+  ['operator'] = 'operator',\n+  ['decorator'] = 'decorator',\n+  ['label'] = 'label',\n+}\n+\n+---A set of predefined token modifiers. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenModifiers\n+protocol.SemanticTokenModifiers = {\n+  ['declaration'] = 'declaration',\n+  ['definition'] = 'definition',\n+  ['readonly'] = 'readonly',\n+  ['static'] = 'static',\n+  ['deprecated'] = 'deprecated',\n+  ['abstract'] = 'abstract',\n+  ['async'] = 'async',\n+  ['modification'] = 'modification',\n+  ['documentation'] = 'documentation',\n+  ['defaultLibrary'] = 'defaultLibrary',\n+}\n+\n+---The document diagnostic report kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.DocumentDiagnosticReportKind\n+protocol.DocumentDiagnosticReportKind = {\n+  ['Full'] = 'full',\n+  ['full'] = 'Full',\n+  ['Unchanged'] = 'unchanged',\n+  ['unchanged'] = 'Unchanged',\n+}\n+\n+---Predefined error codes.\n+---@nodoc\n+---@enum lsp.ErrorCodes\n+protocol.ErrorCodes = {\n+  ['ParseError'] = -32700,\n+  [-32700] = 'ParseError',\n+  ['InvalidRequest'] = -32600,\n+  [-32600] = 'InvalidRequest',\n+  ['MethodNotFound'] = -32601,\n+  [-32601] = 'MethodNotFound',\n+  ['InvalidParams'] = -32602,\n+  [-32602] = 'InvalidParams',\n+  ['InternalError'] = -32603,\n+  [-32603] = 'InternalError',\n+  ['ServerNotInitialized'] = -32002,\n+  [-32002] = 'ServerNotInitialized',\n+  ['UnknownErrorCode'] = -32001,\n+  [-32001] = 'UnknownErrorCode',\n+}\n+\n+---@nodoc\n+---@enum lsp.LSPErrorCodes\n+protocol.LSPErrorCodes = {\n+  ['RequestFailed'] = -32803,\n+  [-32803] = 'RequestFailed',\n+  ['ServerCancelled'] = -32802,\n+  [-32802] = 'ServerCancelled',\n+  ['ContentModified'] = -32801,\n+  [-32801] = 'ContentModified',\n+  ['RequestCancelled'] = -32800,\n+  [-32800] = 'RequestCancelled',\n+}\n+\n+---A set of predefined range kinds.\n+---@nodoc\n+---@enum lsp.FoldingRangeKind\n+protocol.FoldingRangeKind = {\n+  ['Comment'] = 'comment',\n+  ['comment'] = 'Comment',\n+  ['Imports'] = 'imports',\n+  ['imports'] = 'Imports',\n+  ['Region'] = 'region',\n+  ['region'] = 'Region',\n+}\n+\n+---A symbol kind.\n+---@nodoc\n+---@enum lsp.SymbolKind\n+protocol.SymbolKind = {\n+  ['File'] = 1,\n+  [1] = 'File',\n+  ['Module'] = 2,\n+  [2] = 'Module',\n+  ['Namespace'] = 3,\n+  [3] = 'Namespace',\n+  ['Package'] = 4,\n+  [4] = 'Package',\n+  ['Class'] = 5,\n+  [5] = 'Class',\n+  ['Method'] = 6,\n+  [6] = 'Method',\n+  ['Property'] = 7,\n+  [7] = 'Property',\n+  ['Field'] = 8,\n+  [8] = 'Field',\n+  ['Constructor'] = 9,\n+  [9] = 'Constructor',\n+  ['Enum'] = 10,\n+  [10] = 'Enum',\n+  ['Interface'] = 11,\n+  [11] = 'Interface',\n+  ['Function'] = 12,\n+  [12] = 'Function',\n+  ['Variable'] = 13,\n+  [13] = 'Variable',\n+  ['Constant'] = 14,\n+  [14] = 'Constant',\n+  ['String'] = 15,\n+  [15] = 'String',\n+  ['Number'] = 16,\n+  [16] = 'Number',\n+  ['Boolean'] = 17,\n+  [17] = 'Boolean',\n+  ['Array'] = 18,\n+  [18] = 'Array',\n+  ['Object'] = 19,\n+  [19] = 'Object',\n+  ['Key'] = 20,\n+  [20] = 'Key',\n+  ['Null'] = 21,\n+  [21] = 'Null',\n+  ['EnumMember'] = 22,\n+  [22] = 'EnumMember',\n+  ['Struct'] = 23,\n+  [23] = 'Struct',\n+  ['Event'] = 24,\n+  [24] = 'Event',\n+  ['Operator'] = 25,\n+  [25] = 'Operator',\n+  ['TypeParameter'] = 26,\n+  [26] = 'TypeParameter',\n+}\n+\n+---Symbol tags are extra annotations that tweak the rendering of a symbol.\n+---\n+---@since 3.16\n+---@nodoc\n+---@enum lsp.SymbolTag\n+protocol.SymbolTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Moniker uniqueness level to define scope of the moniker.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.UniquenessLevel\n+protocol.UniquenessLevel = {\n+  ['document'] = 'document',\n+  ['project'] = 'project',\n+  ['group'] = 'group',\n+  ['scheme'] = 'scheme',\n+  ['global'] = 'global',\n+}\n+\n+---The moniker kind.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.MonikerKind\n+protocol.MonikerKind = {\n+  ['import'] = 'import',\n+  ['export'] = 'export',\n+  ['local'] = 'local',\n+}\n+\n+---Inlay hint kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.InlayHintKind\n+protocol.InlayHintKind = {\n+  ['Type'] = 1,\n+  [1] = 'Type',\n+  ['Parameter'] = 2,\n+  [2] = 'Parameter',\n+}\n+\n+---The message type\n+---@nodoc\n+---@enum lsp.MessageType\n+protocol.MessageType = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Info'] = 3,\n+  [3] = 'Info',\n+  ['Log'] = 4,\n+  [4] = 'Log',\n+  ['Debug'] = 5,\n+  [5] = 'Debug',\n+}\n+\n+---Defines how the host (editor) should sync\n+---document changes to the language server.\n+---@nodoc\n+---@enum lsp.TextDocumentSyncKind\n+protocol.TextDocumentSyncKind = {\n+  ['None'] = 0,\n+  [0] = 'None',\n+  ['Full'] = 1,\n+  [1] = 'Full',\n+  ['Incremental'] = 2,\n+  [2] = 'Incremental',\n+}\n+\n+---Represents reasons why a text document is saved.\n+---@nodoc\n+---@enum lsp.TextDocumentSaveReason\n+protocol.TextDocumentSaveReason = {\n+  ['Manual'] = 1,\n+  [1] = 'Manual',\n+  ['AfterDelay'] = 2,\n+  [2] = 'AfterDelay',\n+  ['FocusOut'] = 3,\n+  [3] = 'FocusOut',\n+}\n+\n+---The kind of a completion entry.\n+---@nodoc\n+---@enum lsp.CompletionItemKind\n+protocol.CompletionItemKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Method'] = 2,\n+  [2] = 'Method',\n+  ['Function'] = 3,\n+  [3] = 'Function',\n+  ['Constructor'] = 4,\n+  [4] = 'Constructor',\n+  ['Field'] = 5,\n+  [5] = 'Field',\n+  ['Variable'] = 6,\n+  [6] = 'Variable',\n+  ['Class'] = 7,\n+  [7] = 'Class',\n+  ['Interface'] = 8,\n+  [8] = 'Interface',\n+  ['Module'] = 9,\n+  [9] = 'Module',\n+  ['Property'] = 10,\n+  [10] = 'Property',\n+  ['Unit'] = 11,\n+  [11] = 'Unit',\n+  ['Value'] = 12,\n+  [12] = 'Value',\n+  ['Enum'] = 13,\n+  [13] = 'Enum',\n+  ['Keyword'] = 14,\n+  [14] = 'Keyword',\n+  ['Snippet'] = 15,\n+  [15] = 'Snippet',\n+  ['Color'] = 16,\n+  [16] = 'Color',\n+  ['File'] = 17,\n+  [17] = 'File',\n+  ['Reference'] = 18,\n+  [18] = 'Reference',\n+  ['Folder'] = 19,\n+  [19] = 'Folder',\n+  ['EnumMember'] = 20,\n+  [20] = 'EnumMember',\n+  ['Constant'] = 21,\n+  [21] = 'Constant',\n+  ['Struct'] = 22,\n+  [22] = 'Struct',\n+  ['Event'] = 23,\n+  [23] = 'Event',\n+  ['Operator'] = 24,\n+  [24] = 'Operator',\n+  ['TypeParameter'] = 25,\n+  [25] = 'TypeParameter',\n+}\n+\n+---Completion item tags are extra annotations that tweak the rendering of a completion\n+---item.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.CompletionItemTag\n+protocol.CompletionItemTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Defines whether the insert text in a completion item should be interpreted as\n+---plain text or a snippet.\n+---@nodoc\n+---@enum lsp.InsertTextFormat\n+protocol.InsertTextFormat = {\n+  ['PlainText'] = 1,\n+  [1] = 'PlainText',\n+  ['Snippet'] = 2,\n+  [2] = 'Snippet',\n+}\n+\n+---How whitespace and indentation is handled during completion\n+---item insertion.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.InsertTextMode\n+protocol.InsertTextMode = {\n+  ['asIs'] = 1,\n+  [1] = 'asIs',\n+  ['adjustIndentation'] = 2,\n+  [2] = 'adjustIndentation',\n+}\n+\n+---A document highlight kind.\n+---@nodoc\n+---@enum lsp.DocumentHighlightKind\n+protocol.DocumentHighlightKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Read'] = 2,\n+  [2] = 'Read',\n+  ['Write'] = 3,\n+  [3] = 'Write',\n+}\n+\n+---A set of predefined code action kinds\n+---@nodoc\n+---@enum lsp.CodeActionKind\n+protocol.CodeActionKind = {\n+  ['Empty'] = '',\n+  [''] = 'Empty',\n+  ['QuickFix'] = 'quickfix',\n+  ['quickfix'] = 'QuickFix',\n+  ['Refactor'] = 'refactor',\n+  ['refactor'] = 'Refactor',\n+  ['RefactorExtract'] = 'refactor.extract',\n+  ['refactor.extract'] = 'RefactorExtract',\n+  ['RefactorInline'] = 'refactor.inline',\n+  ['refactor.inline'] = 'RefactorInline',\n+  ['RefactorMove'] = 'refactor.move',\n+  ['refactor.move'] = 'RefactorMove',\n+  ['RefactorRewrite'] = 'refactor.rewrite',\n+  ['refactor.rewrite'] = 'RefactorRewrite',\n+  ['Source'] = 'source',\n+  ['source'] = 'Source',\n+  ['SourceOrganizeImports'] = 'source.organizeImports',\n+  ['source.organizeImports'] = 'SourceOrganizeImports',\n+  ['SourceFixAll'] = 'source.fixAll',\n+  ['source.fixAll'] = 'SourceFixAll',\n+  ['Notebook'] = 'notebook',\n+  ['notebook'] = 'Notebook',\n+}\n+\n+---Code action tags are extra annotations that tweak the behavior of a code action.\n+---\n+---@since 3.18.0 - proposed\n+---@nodoc\n+---@enum lsp.CodeActionTag\n+protocol.CodeActionTag = {\n+  ['LLMGenerated'] = 1,\n+  [1] = 'LLMGenerated',\n+}\n+\n+---@nodoc\n+---@enum lsp.TraceValue\n+protocol.TraceValue = {\n+  ['Off'] = 'off',\n+  ['off'] = 'Off',\n+  ['Messages'] = 'messages',\n+  ['messages'] = 'Messages',\n+  ['Verbose'] = 'verbose',\n+  ['verbose'] = 'Verbose',\n+}\n+\n+---Describes the content type that a client supports in various\n+---result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n+---\n+---Please note that `MarkupKinds` must not start with a `$`. This kinds\n+---are reserved for internal usage.\n+---@nodoc\n+---@enum lsp.MarkupKind\n+protocol.MarkupKind = {\n+  ['PlainText'] = 'plaintext',\n+  ['plaintext'] = 'PlainText',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+}\n+\n+---Predefined Language kinds\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.LanguageKind\n+protocol.LanguageKind = {\n+  ['ABAP'] = 'abap',\n+  ['abap'] = 'ABAP',\n+  ['WindowsBat'] = 'bat',\n+  ['bat'] = 'WindowsBat',\n+  ['BibTeX'] = 'bibtex',\n+  ['bibtex'] = 'BibTeX',\n+  ['Clojure'] = 'clojure',\n+  ['clojure'] = 'Clojure',\n+  ['Coffeescript'] = 'coffeescript',\n+  ['coffeescript'] = 'Coffeescript',\n+  ['C'] = 'c',\n+  ['c'] = 'C',\n+  ['CPP'] = 'cpp',\n+  ['cpp'] = 'CPP',\n+  ['CSharp'] = 'csharp',\n+  ['csharp'] = 'CSharp',\n+  ['CSS'] = 'css',\n+  ['css'] = 'CSS',\n+  ['D'] = 'd',\n+  ['d'] = 'D',\n+  ['Delphi'] = 'pascal',\n+  ['pascal'] = 'Delphi',\n+  ['Diff'] = 'diff',\n+  ['diff'] = 'Diff',\n+  ['Dart'] = 'dart',\n+  ['dart'] = 'Dart',\n+  ['Dockerfile'] = 'dockerfile',\n+  ['dockerfile'] = 'Dockerfile',\n+  ['Elixir'] = 'elixir',\n+  ['elixir'] = 'Elixir',\n+  ['Erlang'] = 'erlang',\n+  ['erlang'] = 'Erlang',\n+  ['FSharp'] = 'fsharp',\n+  ['fsharp'] = 'FSharp',\n+  ['GitCommit'] = 'git-commit',\n+  ['git-commit'] = 'GitCommit',\n+  ['GitRebase'] = 'rebase',\n+  ['rebase'] = 'GitRebase',\n+  ['Go'] = 'go',\n+  ['go'] = 'Go',\n+  ['Groovy'] = 'groovy',\n+  ['groovy'] = 'Groovy',\n+  ['Handlebars'] = 'handlebars',\n+  ['handlebars'] = 'Handlebars',\n+  ['Haskell'] = 'haskell',\n+  ['haskell'] = 'Haskell',\n+  ['HTML'] = 'html',\n+  ['html'] = 'HTML',\n+  ['Ini'] = 'ini',\n+  ['ini'] = 'Ini',\n+  ['Java'] = 'java',\n+  ['java'] = 'Java',\n+  ['JavaScript'] = 'javascript',\n+  ['javascript'] = 'JavaScript',\n+  ['JavaScriptReact'] = 'javascriptreact',\n+  ['javascriptreact'] = 'JavaScriptReact',\n+  ['JSON'] = 'json',\n+  ['json'] = 'JSON',\n+  ['LaTeX'] = 'latex',\n+  ['latex'] = 'LaTeX',\n+  ['Less'] = 'less',\n+  ['less'] = 'Less',\n+  ['Lua'] = 'lua',\n+  ['lua'] = 'Lua',\n+  ['Makefile'] = 'makefile',\n+  ['makefile'] = 'Makefile',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+  ['ObjectiveC'] = 'objective-c',\n+  ['objective-c'] = 'ObjectiveC',\n+  ['ObjectiveCPP'] = 'objective-cpp',\n+  ['objective-cpp'] = 'ObjectiveCPP',\n+  ['Pascal'] = 'pascal',\n+  ['pascal'] = 'Pascal',\n+  ['Perl'] = 'perl',\n+  ['perl'] = 'Perl',\n+  ['Perl6'] = 'perl6',\n+  ['perl6'] = 'Perl6',\n+  ['PHP'] = 'php',\n+  ['php'] = 'PHP',\n+  ['Powershell'] = 'powershell',\n+  ['powershell'] = 'Powershell',\n+  ['Pug'] = 'jade',\n+  ['jade'] = 'Pug',\n+  ['Python'] = 'python',\n+  ['python'] = 'Python',\n+  ['R'] = 'r',\n+  ['r'] = 'R',\n+  ['Razor'] = 'razor',\n+  ['razor'] = 'Razor',\n+  ['Ruby'] = 'ruby',\n+  ['ruby'] = 'Ruby',\n+  ['Rust'] = 'rust',\n+  ['rust'] = 'Rust',\n+  ['SCSS'] = 'scss',\n+  ['scss'] = 'SCSS',\n+  ['SASS'] = 'sass',\n+  ['sass'] = 'SASS',\n+  ['Scala'] = 'scala',\n+  ['scala'] = 'Scala',\n+  ['ShaderLab'] = 'shaderlab',\n+  ['shaderlab'] = 'ShaderLab',\n+  ['ShellScript'] = 'shellscript',\n+  ['shellscript'] = 'ShellScript',\n+  ['SQL'] = 'sql',\n+  ['sql'] = 'SQL',\n+  ['Swift'] = 'swift',\n+  ['swift'] = 'Swift',\n+  ['TypeScript'] = 'typescript',\n+  ['typescript'] = 'TypeScript',\n+  ['TypeScriptReact'] = 'typescriptreact',\n+  ['typescriptreact'] = 'TypeScriptReact',\n+  ['TeX'] = 'tex',\n+  ['tex'] = 'TeX',\n+  ['VisualBasic'] = 'vb',\n+  ['vb'] = 'VisualBasic',\n+  ['XML'] = 'xml',\n+  ['xml'] = 'XML',\n+  ['XSL'] = 'xsl',\n+  ['xsl'] = 'XSL',\n+  ['YAML'] = 'yaml',\n+  ['yaml'] = 'YAML',\n+}\n+\n+---Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n+---\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.InlineCompletionTriggerKind\n+protocol.InlineCompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A set of predefined position encoding kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.PositionEncodingKind\n+protocol.PositionEncodingKind = {\n+  ['UTF8'] = 'utf-8',\n+  ['utf-8'] = 'UTF8',\n+  ['UTF16'] = 'utf-16',\n+  ['utf-16'] = 'UTF16',\n+  ['UTF32'] = 'utf-32',\n+  ['utf-32'] = 'UTF32',\n+}\n+\n+---The file event type\n+---@nodoc\n+---@enum lsp.FileChangeType\n+protocol.FileChangeType = {\n+  ['Created'] = 1,\n+  [1] = 'Created',\n+  ['Changed'] = 2,\n+  [2] = 'Changed',\n+  ['Deleted'] = 3,\n+  [3] = 'Deleted',\n+}\n+\n+---@nodoc\n+---@enum lsp.WatchKind\n+protocol.WatchKind = {\n+  ['Create'] = 1,\n+  [1] = 'Create',\n+  ['Change'] = 2,\n+  [2] = 'Change',\n+  ['Delete'] = 4,\n+  [4] = 'Delete',\n+}\n+\n+---The diagnostic's severity.\n+---@nodoc\n+---@enum lsp.DiagnosticSeverity\n+protocol.DiagnosticSeverity = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Information'] = 3,\n+  [3] = 'Information',\n+  ['Hint'] = 4,\n+  [4] = 'Hint',\n+}\n+\n+---The diagnostic tags.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.DiagnosticTag\n+protocol.DiagnosticTag = {\n+  ['Unnecessary'] = 1,\n+  [1] = 'Unnecessary',\n+  ['Deprecated'] = 2,\n+  [2] = 'Deprecated',\n+}\n+\n+---How a completion was triggered\n+---@nodoc\n+---@enum lsp.CompletionTriggerKind\n+protocol.CompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['TriggerForIncompleteCompletions'] = 3,\n+  [3] = 'TriggerForIncompleteCompletions',\n+}\n+\n+---How a signature help was triggered.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.SignatureHelpTriggerKind\n+protocol.SignatureHelpTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['ContentChange'] = 3,\n+  [3] = 'ContentChange',\n+}\n+\n+---The reason why code actions were requested.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.CodeActionTriggerKind\n+protocol.CodeActionTriggerKind = {\n+  ['Invoked'] = 1,",
            "html_url": "https://github.com/neovim/neovim/pull/32215#discussion_r1932549491",
            "id": 1932549491,
            "line": 901,
            "node_id": "PRRC_kwDOAPphoM5zMF1z",
            "original_commit_id": "eb4a8a9b8c5dfc8d6a36e44575394a6f4c33a190",
            "original_line": 901,
            "original_position": 1088,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": 994,
            "pull_request_review_id": 2578909582,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932549491/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-28T17:04:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932549491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32215#discussion_r1932643988"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932643988"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not sure I like these kinds of mappings where the key and value are the same. Would it be possible to just generate enums for only... well enums, mappings that map a human readable key string to some magic value, mainly integers.\n\nE.g. `lsp.SymbolKinds` and `lsp.ErrorCodes`",
            "commit_id": "8020ac5b6b032611372c4cd28e6665928b95a845",
            "created_at": "2025-01-28T18:07:46Z",
            "diff_hunk": "@@ -629,6 +326,733 @@ function protocol.resolve_capabilities(server_capabilities)\n end\n \n -- Generated by gen_lsp.lua, keep at end of file.\n+---A set of predefined token types. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenTypes\n+protocol.SemanticTokenTypes = {\n+  ['namespace'] = 'namespace',\n+  ['type'] = 'type',\n+  ['class'] = 'class',\n+  ['enum'] = 'enum',\n+  ['interface'] = 'interface',\n+  ['struct'] = 'struct',\n+  ['typeParameter'] = 'typeParameter',\n+  ['parameter'] = 'parameter',\n+  ['variable'] = 'variable',\n+  ['property'] = 'property',\n+  ['enumMember'] = 'enumMember',\n+  ['event'] = 'event',\n+  ['function'] = 'function',\n+  ['method'] = 'method',\n+  ['macro'] = 'macro',\n+  ['keyword'] = 'keyword',\n+  ['modifier'] = 'modifier',\n+  ['comment'] = 'comment',\n+  ['string'] = 'string',\n+  ['number'] = 'number',\n+  ['regexp'] = 'regexp',\n+  ['operator'] = 'operator',\n+  ['decorator'] = 'decorator',\n+  ['label'] = 'label',\n+}\n+\n+---A set of predefined token modifiers. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenModifiers\n+protocol.SemanticTokenModifiers = {\n+  ['declaration'] = 'declaration',\n+  ['definition'] = 'definition',\n+  ['readonly'] = 'readonly',\n+  ['static'] = 'static',\n+  ['deprecated'] = 'deprecated',\n+  ['abstract'] = 'abstract',\n+  ['async'] = 'async',\n+  ['modification'] = 'modification',\n+  ['documentation'] = 'documentation',\n+  ['defaultLibrary'] = 'defaultLibrary',\n+}\n+\n+---The document diagnostic report kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.DocumentDiagnosticReportKind\n+protocol.DocumentDiagnosticReportKind = {\n+  ['Full'] = 'full',\n+  ['full'] = 'Full',\n+  ['Unchanged'] = 'unchanged',\n+  ['unchanged'] = 'Unchanged',\n+}\n+\n+---Predefined error codes.\n+---@nodoc\n+---@enum lsp.ErrorCodes\n+protocol.ErrorCodes = {\n+  ['ParseError'] = -32700,\n+  [-32700] = 'ParseError',\n+  ['InvalidRequest'] = -32600,\n+  [-32600] = 'InvalidRequest',\n+  ['MethodNotFound'] = -32601,\n+  [-32601] = 'MethodNotFound',\n+  ['InvalidParams'] = -32602,\n+  [-32602] = 'InvalidParams',\n+  ['InternalError'] = -32603,\n+  [-32603] = 'InternalError',\n+  ['ServerNotInitialized'] = -32002,\n+  [-32002] = 'ServerNotInitialized',\n+  ['UnknownErrorCode'] = -32001,\n+  [-32001] = 'UnknownErrorCode',\n+}\n+\n+---@nodoc\n+---@enum lsp.LSPErrorCodes\n+protocol.LSPErrorCodes = {\n+  ['RequestFailed'] = -32803,\n+  [-32803] = 'RequestFailed',\n+  ['ServerCancelled'] = -32802,\n+  [-32802] = 'ServerCancelled',\n+  ['ContentModified'] = -32801,\n+  [-32801] = 'ContentModified',\n+  ['RequestCancelled'] = -32800,\n+  [-32800] = 'RequestCancelled',\n+}\n+\n+---A set of predefined range kinds.\n+---@nodoc\n+---@enum lsp.FoldingRangeKind\n+protocol.FoldingRangeKind = {\n+  ['Comment'] = 'comment',\n+  ['comment'] = 'Comment',\n+  ['Imports'] = 'imports',\n+  ['imports'] = 'Imports',\n+  ['Region'] = 'region',\n+  ['region'] = 'Region',\n+}\n+\n+---A symbol kind.\n+---@nodoc\n+---@enum lsp.SymbolKind\n+protocol.SymbolKind = {\n+  ['File'] = 1,\n+  [1] = 'File',\n+  ['Module'] = 2,\n+  [2] = 'Module',\n+  ['Namespace'] = 3,\n+  [3] = 'Namespace',\n+  ['Package'] = 4,\n+  [4] = 'Package',\n+  ['Class'] = 5,\n+  [5] = 'Class',\n+  ['Method'] = 6,\n+  [6] = 'Method',\n+  ['Property'] = 7,\n+  [7] = 'Property',\n+  ['Field'] = 8,\n+  [8] = 'Field',\n+  ['Constructor'] = 9,\n+  [9] = 'Constructor',\n+  ['Enum'] = 10,\n+  [10] = 'Enum',\n+  ['Interface'] = 11,\n+  [11] = 'Interface',\n+  ['Function'] = 12,\n+  [12] = 'Function',\n+  ['Variable'] = 13,\n+  [13] = 'Variable',\n+  ['Constant'] = 14,\n+  [14] = 'Constant',\n+  ['String'] = 15,\n+  [15] = 'String',\n+  ['Number'] = 16,\n+  [16] = 'Number',\n+  ['Boolean'] = 17,\n+  [17] = 'Boolean',\n+  ['Array'] = 18,\n+  [18] = 'Array',\n+  ['Object'] = 19,\n+  [19] = 'Object',\n+  ['Key'] = 20,\n+  [20] = 'Key',\n+  ['Null'] = 21,\n+  [21] = 'Null',\n+  ['EnumMember'] = 22,\n+  [22] = 'EnumMember',\n+  ['Struct'] = 23,\n+  [23] = 'Struct',\n+  ['Event'] = 24,\n+  [24] = 'Event',\n+  ['Operator'] = 25,\n+  [25] = 'Operator',\n+  ['TypeParameter'] = 26,\n+  [26] = 'TypeParameter',\n+}\n+\n+---Symbol tags are extra annotations that tweak the rendering of a symbol.\n+---\n+---@since 3.16\n+---@nodoc\n+---@enum lsp.SymbolTag\n+protocol.SymbolTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Moniker uniqueness level to define scope of the moniker.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.UniquenessLevel\n+protocol.UniquenessLevel = {\n+  ['document'] = 'document',\n+  ['project'] = 'project',\n+  ['group'] = 'group',\n+  ['scheme'] = 'scheme',\n+  ['global'] = 'global',\n+}\n+\n+---The moniker kind.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.MonikerKind\n+protocol.MonikerKind = {\n+  ['import'] = 'import',\n+  ['export'] = 'export',\n+  ['local'] = 'local',\n+}\n+\n+---Inlay hint kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.InlayHintKind\n+protocol.InlayHintKind = {\n+  ['Type'] = 1,\n+  [1] = 'Type',\n+  ['Parameter'] = 2,\n+  [2] = 'Parameter',\n+}\n+\n+---The message type\n+---@nodoc\n+---@enum lsp.MessageType\n+protocol.MessageType = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Info'] = 3,\n+  [3] = 'Info',\n+  ['Log'] = 4,\n+  [4] = 'Log',\n+  ['Debug'] = 5,\n+  [5] = 'Debug',\n+}\n+\n+---Defines how the host (editor) should sync\n+---document changes to the language server.\n+---@nodoc\n+---@enum lsp.TextDocumentSyncKind\n+protocol.TextDocumentSyncKind = {\n+  ['None'] = 0,\n+  [0] = 'None',\n+  ['Full'] = 1,\n+  [1] = 'Full',\n+  ['Incremental'] = 2,\n+  [2] = 'Incremental',\n+}\n+\n+---Represents reasons why a text document is saved.\n+---@nodoc\n+---@enum lsp.TextDocumentSaveReason\n+protocol.TextDocumentSaveReason = {\n+  ['Manual'] = 1,\n+  [1] = 'Manual',\n+  ['AfterDelay'] = 2,\n+  [2] = 'AfterDelay',\n+  ['FocusOut'] = 3,\n+  [3] = 'FocusOut',\n+}\n+\n+---The kind of a completion entry.\n+---@nodoc\n+---@enum lsp.CompletionItemKind\n+protocol.CompletionItemKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Method'] = 2,\n+  [2] = 'Method',\n+  ['Function'] = 3,\n+  [3] = 'Function',\n+  ['Constructor'] = 4,\n+  [4] = 'Constructor',\n+  ['Field'] = 5,\n+  [5] = 'Field',\n+  ['Variable'] = 6,\n+  [6] = 'Variable',\n+  ['Class'] = 7,\n+  [7] = 'Class',\n+  ['Interface'] = 8,\n+  [8] = 'Interface',\n+  ['Module'] = 9,\n+  [9] = 'Module',\n+  ['Property'] = 10,\n+  [10] = 'Property',\n+  ['Unit'] = 11,\n+  [11] = 'Unit',\n+  ['Value'] = 12,\n+  [12] = 'Value',\n+  ['Enum'] = 13,\n+  [13] = 'Enum',\n+  ['Keyword'] = 14,\n+  [14] = 'Keyword',\n+  ['Snippet'] = 15,\n+  [15] = 'Snippet',\n+  ['Color'] = 16,\n+  [16] = 'Color',\n+  ['File'] = 17,\n+  [17] = 'File',\n+  ['Reference'] = 18,\n+  [18] = 'Reference',\n+  ['Folder'] = 19,\n+  [19] = 'Folder',\n+  ['EnumMember'] = 20,\n+  [20] = 'EnumMember',\n+  ['Constant'] = 21,\n+  [21] = 'Constant',\n+  ['Struct'] = 22,\n+  [22] = 'Struct',\n+  ['Event'] = 23,\n+  [23] = 'Event',\n+  ['Operator'] = 24,\n+  [24] = 'Operator',\n+  ['TypeParameter'] = 25,\n+  [25] = 'TypeParameter',\n+}\n+\n+---Completion item tags are extra annotations that tweak the rendering of a completion\n+---item.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.CompletionItemTag\n+protocol.CompletionItemTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Defines whether the insert text in a completion item should be interpreted as\n+---plain text or a snippet.\n+---@nodoc\n+---@enum lsp.InsertTextFormat\n+protocol.InsertTextFormat = {\n+  ['PlainText'] = 1,\n+  [1] = 'PlainText',\n+  ['Snippet'] = 2,\n+  [2] = 'Snippet',\n+}\n+\n+---How whitespace and indentation is handled during completion\n+---item insertion.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.InsertTextMode\n+protocol.InsertTextMode = {\n+  ['asIs'] = 1,\n+  [1] = 'asIs',\n+  ['adjustIndentation'] = 2,\n+  [2] = 'adjustIndentation',\n+}\n+\n+---A document highlight kind.\n+---@nodoc\n+---@enum lsp.DocumentHighlightKind\n+protocol.DocumentHighlightKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Read'] = 2,\n+  [2] = 'Read',\n+  ['Write'] = 3,\n+  [3] = 'Write',\n+}\n+\n+---A set of predefined code action kinds\n+---@nodoc\n+---@enum lsp.CodeActionKind\n+protocol.CodeActionKind = {\n+  ['Empty'] = '',\n+  [''] = 'Empty',\n+  ['QuickFix'] = 'quickfix',\n+  ['quickfix'] = 'QuickFix',\n+  ['Refactor'] = 'refactor',\n+  ['refactor'] = 'Refactor',\n+  ['RefactorExtract'] = 'refactor.extract',\n+  ['refactor.extract'] = 'RefactorExtract',\n+  ['RefactorInline'] = 'refactor.inline',\n+  ['refactor.inline'] = 'RefactorInline',\n+  ['RefactorMove'] = 'refactor.move',\n+  ['refactor.move'] = 'RefactorMove',\n+  ['RefactorRewrite'] = 'refactor.rewrite',\n+  ['refactor.rewrite'] = 'RefactorRewrite',\n+  ['Source'] = 'source',\n+  ['source'] = 'Source',\n+  ['SourceOrganizeImports'] = 'source.organizeImports',\n+  ['source.organizeImports'] = 'SourceOrganizeImports',\n+  ['SourceFixAll'] = 'source.fixAll',\n+  ['source.fixAll'] = 'SourceFixAll',\n+  ['Notebook'] = 'notebook',\n+  ['notebook'] = 'Notebook',\n+}\n+\n+---Code action tags are extra annotations that tweak the behavior of a code action.\n+---\n+---@since 3.18.0 - proposed\n+---@nodoc\n+---@enum lsp.CodeActionTag\n+protocol.CodeActionTag = {\n+  ['LLMGenerated'] = 1,\n+  [1] = 'LLMGenerated',\n+}\n+\n+---@nodoc\n+---@enum lsp.TraceValue\n+protocol.TraceValue = {\n+  ['Off'] = 'off',\n+  ['off'] = 'Off',\n+  ['Messages'] = 'messages',\n+  ['messages'] = 'Messages',\n+  ['Verbose'] = 'verbose',\n+  ['verbose'] = 'Verbose',\n+}\n+\n+---Describes the content type that a client supports in various\n+---result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n+---\n+---Please note that `MarkupKinds` must not start with a `$`. This kinds\n+---are reserved for internal usage.\n+---@nodoc\n+---@enum lsp.MarkupKind\n+protocol.MarkupKind = {\n+  ['PlainText'] = 'plaintext',\n+  ['plaintext'] = 'PlainText',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+}\n+\n+---Predefined Language kinds\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.LanguageKind\n+protocol.LanguageKind = {\n+  ['ABAP'] = 'abap',\n+  ['abap'] = 'ABAP',\n+  ['WindowsBat'] = 'bat',\n+  ['bat'] = 'WindowsBat',\n+  ['BibTeX'] = 'bibtex',\n+  ['bibtex'] = 'BibTeX',\n+  ['Clojure'] = 'clojure',\n+  ['clojure'] = 'Clojure',\n+  ['Coffeescript'] = 'coffeescript',\n+  ['coffeescript'] = 'Coffeescript',\n+  ['C'] = 'c',\n+  ['c'] = 'C',\n+  ['CPP'] = 'cpp',\n+  ['cpp'] = 'CPP',\n+  ['CSharp'] = 'csharp',\n+  ['csharp'] = 'CSharp',\n+  ['CSS'] = 'css',\n+  ['css'] = 'CSS',\n+  ['D'] = 'd',\n+  ['d'] = 'D',\n+  ['Delphi'] = 'pascal',\n+  ['pascal'] = 'Delphi',\n+  ['Diff'] = 'diff',\n+  ['diff'] = 'Diff',\n+  ['Dart'] = 'dart',\n+  ['dart'] = 'Dart',\n+  ['Dockerfile'] = 'dockerfile',\n+  ['dockerfile'] = 'Dockerfile',\n+  ['Elixir'] = 'elixir',\n+  ['elixir'] = 'Elixir',\n+  ['Erlang'] = 'erlang',\n+  ['erlang'] = 'Erlang',\n+  ['FSharp'] = 'fsharp',\n+  ['fsharp'] = 'FSharp',\n+  ['GitCommit'] = 'git-commit',\n+  ['git-commit'] = 'GitCommit',\n+  ['GitRebase'] = 'rebase',\n+  ['rebase'] = 'GitRebase',\n+  ['Go'] = 'go',\n+  ['go'] = 'Go',\n+  ['Groovy'] = 'groovy',\n+  ['groovy'] = 'Groovy',\n+  ['Handlebars'] = 'handlebars',\n+  ['handlebars'] = 'Handlebars',\n+  ['Haskell'] = 'haskell',\n+  ['haskell'] = 'Haskell',\n+  ['HTML'] = 'html',\n+  ['html'] = 'HTML',\n+  ['Ini'] = 'ini',\n+  ['ini'] = 'Ini',\n+  ['Java'] = 'java',\n+  ['java'] = 'Java',\n+  ['JavaScript'] = 'javascript',\n+  ['javascript'] = 'JavaScript',\n+  ['JavaScriptReact'] = 'javascriptreact',\n+  ['javascriptreact'] = 'JavaScriptReact',\n+  ['JSON'] = 'json',\n+  ['json'] = 'JSON',\n+  ['LaTeX'] = 'latex',\n+  ['latex'] = 'LaTeX',\n+  ['Less'] = 'less',\n+  ['less'] = 'Less',\n+  ['Lua'] = 'lua',\n+  ['lua'] = 'Lua',\n+  ['Makefile'] = 'makefile',\n+  ['makefile'] = 'Makefile',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+  ['ObjectiveC'] = 'objective-c',\n+  ['objective-c'] = 'ObjectiveC',\n+  ['ObjectiveCPP'] = 'objective-cpp',\n+  ['objective-cpp'] = 'ObjectiveCPP',\n+  ['Pascal'] = 'pascal',\n+  ['pascal'] = 'Pascal',\n+  ['Perl'] = 'perl',\n+  ['perl'] = 'Perl',\n+  ['Perl6'] = 'perl6',\n+  ['perl6'] = 'Perl6',\n+  ['PHP'] = 'php',\n+  ['php'] = 'PHP',\n+  ['Powershell'] = 'powershell',\n+  ['powershell'] = 'Powershell',\n+  ['Pug'] = 'jade',\n+  ['jade'] = 'Pug',\n+  ['Python'] = 'python',\n+  ['python'] = 'Python',\n+  ['R'] = 'r',\n+  ['r'] = 'R',\n+  ['Razor'] = 'razor',\n+  ['razor'] = 'Razor',\n+  ['Ruby'] = 'ruby',\n+  ['ruby'] = 'Ruby',\n+  ['Rust'] = 'rust',\n+  ['rust'] = 'Rust',\n+  ['SCSS'] = 'scss',\n+  ['scss'] = 'SCSS',\n+  ['SASS'] = 'sass',\n+  ['sass'] = 'SASS',\n+  ['Scala'] = 'scala',\n+  ['scala'] = 'Scala',\n+  ['ShaderLab'] = 'shaderlab',\n+  ['shaderlab'] = 'ShaderLab',\n+  ['ShellScript'] = 'shellscript',\n+  ['shellscript'] = 'ShellScript',\n+  ['SQL'] = 'sql',\n+  ['sql'] = 'SQL',\n+  ['Swift'] = 'swift',\n+  ['swift'] = 'Swift',\n+  ['TypeScript'] = 'typescript',\n+  ['typescript'] = 'TypeScript',\n+  ['TypeScriptReact'] = 'typescriptreact',\n+  ['typescriptreact'] = 'TypeScriptReact',\n+  ['TeX'] = 'tex',\n+  ['tex'] = 'TeX',\n+  ['VisualBasic'] = 'vb',\n+  ['vb'] = 'VisualBasic',\n+  ['XML'] = 'xml',\n+  ['xml'] = 'XML',\n+  ['XSL'] = 'xsl',\n+  ['xsl'] = 'XSL',\n+  ['YAML'] = 'yaml',\n+  ['yaml'] = 'YAML',\n+}\n+\n+---Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n+---\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.InlineCompletionTriggerKind\n+protocol.InlineCompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A set of predefined position encoding kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.PositionEncodingKind\n+protocol.PositionEncodingKind = {\n+  ['UTF8'] = 'utf-8',\n+  ['utf-8'] = 'UTF8',\n+  ['UTF16'] = 'utf-16',\n+  ['utf-16'] = 'UTF16',\n+  ['UTF32'] = 'utf-32',\n+  ['utf-32'] = 'UTF32',\n+}\n+\n+---The file event type\n+---@nodoc\n+---@enum lsp.FileChangeType\n+protocol.FileChangeType = {\n+  ['Created'] = 1,\n+  [1] = 'Created',\n+  ['Changed'] = 2,\n+  [2] = 'Changed',\n+  ['Deleted'] = 3,\n+  [3] = 'Deleted',\n+}\n+\n+---@nodoc\n+---@enum lsp.WatchKind\n+protocol.WatchKind = {\n+  ['Create'] = 1,\n+  [1] = 'Create',\n+  ['Change'] = 2,\n+  [2] = 'Change',\n+  ['Delete'] = 4,\n+  [4] = 'Delete',\n+}\n+\n+---The diagnostic's severity.\n+---@nodoc\n+---@enum lsp.DiagnosticSeverity\n+protocol.DiagnosticSeverity = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Information'] = 3,\n+  [3] = 'Information',\n+  ['Hint'] = 4,\n+  [4] = 'Hint',\n+}\n+\n+---The diagnostic tags.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.DiagnosticTag\n+protocol.DiagnosticTag = {\n+  ['Unnecessary'] = 1,\n+  [1] = 'Unnecessary',\n+  ['Deprecated'] = 2,\n+  [2] = 'Deprecated',\n+}\n+\n+---How a completion was triggered\n+---@nodoc\n+---@enum lsp.CompletionTriggerKind\n+protocol.CompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['TriggerForIncompleteCompletions'] = 3,\n+  [3] = 'TriggerForIncompleteCompletions',\n+}\n+\n+---How a signature help was triggered.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.SignatureHelpTriggerKind\n+protocol.SignatureHelpTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['ContentChange'] = 3,\n+  [3] = 'ContentChange',\n+}\n+\n+---The reason why code actions were requested.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.CodeActionTriggerKind\n+protocol.CodeActionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A pattern kind describing if a glob pattern matches a file a folder or\n+---both.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.FileOperationPatternKind\n+protocol.FileOperationPatternKind = {\n+  ['file'] = 'file',\n+  ['folder'] = 'folder',\n+}\n+\n+---A notebook cell kind.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.NotebookCellKind\n+protocol.NotebookCellKind = {\n+  ['Markup'] = 1,\n+  [1] = 'Markup',\n+  ['Code'] = 2,\n+  [2] = 'Code',\n+}\n+\n+---@nodoc\n+---@enum lsp.ResourceOperationKind\n+protocol.ResourceOperationKind = {\n+  ['Create'] = 'create',",
            "html_url": "https://github.com/neovim/neovim/pull/32215#discussion_r1932643988",
            "id": 1932643988,
            "line": 933,
            "node_id": "PRRC_kwDOAPphoM5zMc6U",
            "original_commit_id": "eb4a8a9b8c5dfc8d6a36e44575394a6f4c33a190",
            "original_line": 933,
            "original_position": 1120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": 1026,
            "pull_request_review_id": 2579064541,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932643988/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-28T18:10:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932643988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32215#discussion_r1932715520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932715520"
                }
            },
            "author_association": "MEMBER",
            "body": "Perhaps we could filter this better. I was just trying to preserve the existing behavior.",
            "commit_id": "8020ac5b6b032611372c4cd28e6665928b95a845",
            "created_at": "2025-01-28T19:05:57Z",
            "diff_hunk": "@@ -629,6 +326,733 @@ function protocol.resolve_capabilities(server_capabilities)\n end\n \n -- Generated by gen_lsp.lua, keep at end of file.\n+---A set of predefined token types. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenTypes\n+protocol.SemanticTokenTypes = {\n+  ['namespace'] = 'namespace',\n+  ['type'] = 'type',\n+  ['class'] = 'class',\n+  ['enum'] = 'enum',\n+  ['interface'] = 'interface',\n+  ['struct'] = 'struct',\n+  ['typeParameter'] = 'typeParameter',\n+  ['parameter'] = 'parameter',\n+  ['variable'] = 'variable',\n+  ['property'] = 'property',\n+  ['enumMember'] = 'enumMember',\n+  ['event'] = 'event',\n+  ['function'] = 'function',\n+  ['method'] = 'method',\n+  ['macro'] = 'macro',\n+  ['keyword'] = 'keyword',\n+  ['modifier'] = 'modifier',\n+  ['comment'] = 'comment',\n+  ['string'] = 'string',\n+  ['number'] = 'number',\n+  ['regexp'] = 'regexp',\n+  ['operator'] = 'operator',\n+  ['decorator'] = 'decorator',\n+  ['label'] = 'label',\n+}\n+\n+---A set of predefined token modifiers. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenModifiers\n+protocol.SemanticTokenModifiers = {\n+  ['declaration'] = 'declaration',\n+  ['definition'] = 'definition',\n+  ['readonly'] = 'readonly',\n+  ['static'] = 'static',\n+  ['deprecated'] = 'deprecated',\n+  ['abstract'] = 'abstract',\n+  ['async'] = 'async',\n+  ['modification'] = 'modification',\n+  ['documentation'] = 'documentation',\n+  ['defaultLibrary'] = 'defaultLibrary',\n+}\n+\n+---The document diagnostic report kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.DocumentDiagnosticReportKind\n+protocol.DocumentDiagnosticReportKind = {\n+  ['Full'] = 'full',\n+  ['full'] = 'Full',\n+  ['Unchanged'] = 'unchanged',\n+  ['unchanged'] = 'Unchanged',\n+}\n+\n+---Predefined error codes.\n+---@nodoc\n+---@enum lsp.ErrorCodes\n+protocol.ErrorCodes = {\n+  ['ParseError'] = -32700,\n+  [-32700] = 'ParseError',\n+  ['InvalidRequest'] = -32600,\n+  [-32600] = 'InvalidRequest',\n+  ['MethodNotFound'] = -32601,\n+  [-32601] = 'MethodNotFound',\n+  ['InvalidParams'] = -32602,\n+  [-32602] = 'InvalidParams',\n+  ['InternalError'] = -32603,\n+  [-32603] = 'InternalError',\n+  ['ServerNotInitialized'] = -32002,\n+  [-32002] = 'ServerNotInitialized',\n+  ['UnknownErrorCode'] = -32001,\n+  [-32001] = 'UnknownErrorCode',\n+}\n+\n+---@nodoc\n+---@enum lsp.LSPErrorCodes\n+protocol.LSPErrorCodes = {\n+  ['RequestFailed'] = -32803,\n+  [-32803] = 'RequestFailed',\n+  ['ServerCancelled'] = -32802,\n+  [-32802] = 'ServerCancelled',\n+  ['ContentModified'] = -32801,\n+  [-32801] = 'ContentModified',\n+  ['RequestCancelled'] = -32800,\n+  [-32800] = 'RequestCancelled',\n+}\n+\n+---A set of predefined range kinds.\n+---@nodoc\n+---@enum lsp.FoldingRangeKind\n+protocol.FoldingRangeKind = {\n+  ['Comment'] = 'comment',\n+  ['comment'] = 'Comment',\n+  ['Imports'] = 'imports',\n+  ['imports'] = 'Imports',\n+  ['Region'] = 'region',\n+  ['region'] = 'Region',\n+}\n+\n+---A symbol kind.\n+---@nodoc\n+---@enum lsp.SymbolKind\n+protocol.SymbolKind = {\n+  ['File'] = 1,\n+  [1] = 'File',\n+  ['Module'] = 2,\n+  [2] = 'Module',\n+  ['Namespace'] = 3,\n+  [3] = 'Namespace',\n+  ['Package'] = 4,\n+  [4] = 'Package',\n+  ['Class'] = 5,\n+  [5] = 'Class',\n+  ['Method'] = 6,\n+  [6] = 'Method',\n+  ['Property'] = 7,\n+  [7] = 'Property',\n+  ['Field'] = 8,\n+  [8] = 'Field',\n+  ['Constructor'] = 9,\n+  [9] = 'Constructor',\n+  ['Enum'] = 10,\n+  [10] = 'Enum',\n+  ['Interface'] = 11,\n+  [11] = 'Interface',\n+  ['Function'] = 12,\n+  [12] = 'Function',\n+  ['Variable'] = 13,\n+  [13] = 'Variable',\n+  ['Constant'] = 14,\n+  [14] = 'Constant',\n+  ['String'] = 15,\n+  [15] = 'String',\n+  ['Number'] = 16,\n+  [16] = 'Number',\n+  ['Boolean'] = 17,\n+  [17] = 'Boolean',\n+  ['Array'] = 18,\n+  [18] = 'Array',\n+  ['Object'] = 19,\n+  [19] = 'Object',\n+  ['Key'] = 20,\n+  [20] = 'Key',\n+  ['Null'] = 21,\n+  [21] = 'Null',\n+  ['EnumMember'] = 22,\n+  [22] = 'EnumMember',\n+  ['Struct'] = 23,\n+  [23] = 'Struct',\n+  ['Event'] = 24,\n+  [24] = 'Event',\n+  ['Operator'] = 25,\n+  [25] = 'Operator',\n+  ['TypeParameter'] = 26,\n+  [26] = 'TypeParameter',\n+}\n+\n+---Symbol tags are extra annotations that tweak the rendering of a symbol.\n+---\n+---@since 3.16\n+---@nodoc\n+---@enum lsp.SymbolTag\n+protocol.SymbolTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Moniker uniqueness level to define scope of the moniker.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.UniquenessLevel\n+protocol.UniquenessLevel = {\n+  ['document'] = 'document',\n+  ['project'] = 'project',\n+  ['group'] = 'group',\n+  ['scheme'] = 'scheme',\n+  ['global'] = 'global',\n+}\n+\n+---The moniker kind.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.MonikerKind\n+protocol.MonikerKind = {\n+  ['import'] = 'import',\n+  ['export'] = 'export',\n+  ['local'] = 'local',\n+}\n+\n+---Inlay hint kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.InlayHintKind\n+protocol.InlayHintKind = {\n+  ['Type'] = 1,\n+  [1] = 'Type',\n+  ['Parameter'] = 2,\n+  [2] = 'Parameter',\n+}\n+\n+---The message type\n+---@nodoc\n+---@enum lsp.MessageType\n+protocol.MessageType = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Info'] = 3,\n+  [3] = 'Info',\n+  ['Log'] = 4,\n+  [4] = 'Log',\n+  ['Debug'] = 5,\n+  [5] = 'Debug',\n+}\n+\n+---Defines how the host (editor) should sync\n+---document changes to the language server.\n+---@nodoc\n+---@enum lsp.TextDocumentSyncKind\n+protocol.TextDocumentSyncKind = {\n+  ['None'] = 0,\n+  [0] = 'None',\n+  ['Full'] = 1,\n+  [1] = 'Full',\n+  ['Incremental'] = 2,\n+  [2] = 'Incremental',\n+}\n+\n+---Represents reasons why a text document is saved.\n+---@nodoc\n+---@enum lsp.TextDocumentSaveReason\n+protocol.TextDocumentSaveReason = {\n+  ['Manual'] = 1,\n+  [1] = 'Manual',\n+  ['AfterDelay'] = 2,\n+  [2] = 'AfterDelay',\n+  ['FocusOut'] = 3,\n+  [3] = 'FocusOut',\n+}\n+\n+---The kind of a completion entry.\n+---@nodoc\n+---@enum lsp.CompletionItemKind\n+protocol.CompletionItemKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Method'] = 2,\n+  [2] = 'Method',\n+  ['Function'] = 3,\n+  [3] = 'Function',\n+  ['Constructor'] = 4,\n+  [4] = 'Constructor',\n+  ['Field'] = 5,\n+  [5] = 'Field',\n+  ['Variable'] = 6,\n+  [6] = 'Variable',\n+  ['Class'] = 7,\n+  [7] = 'Class',\n+  ['Interface'] = 8,\n+  [8] = 'Interface',\n+  ['Module'] = 9,\n+  [9] = 'Module',\n+  ['Property'] = 10,\n+  [10] = 'Property',\n+  ['Unit'] = 11,\n+  [11] = 'Unit',\n+  ['Value'] = 12,\n+  [12] = 'Value',\n+  ['Enum'] = 13,\n+  [13] = 'Enum',\n+  ['Keyword'] = 14,\n+  [14] = 'Keyword',\n+  ['Snippet'] = 15,\n+  [15] = 'Snippet',\n+  ['Color'] = 16,\n+  [16] = 'Color',\n+  ['File'] = 17,\n+  [17] = 'File',\n+  ['Reference'] = 18,\n+  [18] = 'Reference',\n+  ['Folder'] = 19,\n+  [19] = 'Folder',\n+  ['EnumMember'] = 20,\n+  [20] = 'EnumMember',\n+  ['Constant'] = 21,\n+  [21] = 'Constant',\n+  ['Struct'] = 22,\n+  [22] = 'Struct',\n+  ['Event'] = 23,\n+  [23] = 'Event',\n+  ['Operator'] = 24,\n+  [24] = 'Operator',\n+  ['TypeParameter'] = 25,\n+  [25] = 'TypeParameter',\n+}\n+\n+---Completion item tags are extra annotations that tweak the rendering of a completion\n+---item.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.CompletionItemTag\n+protocol.CompletionItemTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Defines whether the insert text in a completion item should be interpreted as\n+---plain text or a snippet.\n+---@nodoc\n+---@enum lsp.InsertTextFormat\n+protocol.InsertTextFormat = {\n+  ['PlainText'] = 1,\n+  [1] = 'PlainText',\n+  ['Snippet'] = 2,\n+  [2] = 'Snippet',\n+}\n+\n+---How whitespace and indentation is handled during completion\n+---item insertion.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.InsertTextMode\n+protocol.InsertTextMode = {\n+  ['asIs'] = 1,\n+  [1] = 'asIs',\n+  ['adjustIndentation'] = 2,\n+  [2] = 'adjustIndentation',\n+}\n+\n+---A document highlight kind.\n+---@nodoc\n+---@enum lsp.DocumentHighlightKind\n+protocol.DocumentHighlightKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Read'] = 2,\n+  [2] = 'Read',\n+  ['Write'] = 3,\n+  [3] = 'Write',\n+}\n+\n+---A set of predefined code action kinds\n+---@nodoc\n+---@enum lsp.CodeActionKind\n+protocol.CodeActionKind = {\n+  ['Empty'] = '',\n+  [''] = 'Empty',\n+  ['QuickFix'] = 'quickfix',\n+  ['quickfix'] = 'QuickFix',\n+  ['Refactor'] = 'refactor',\n+  ['refactor'] = 'Refactor',\n+  ['RefactorExtract'] = 'refactor.extract',\n+  ['refactor.extract'] = 'RefactorExtract',\n+  ['RefactorInline'] = 'refactor.inline',\n+  ['refactor.inline'] = 'RefactorInline',\n+  ['RefactorMove'] = 'refactor.move',\n+  ['refactor.move'] = 'RefactorMove',\n+  ['RefactorRewrite'] = 'refactor.rewrite',\n+  ['refactor.rewrite'] = 'RefactorRewrite',\n+  ['Source'] = 'source',\n+  ['source'] = 'Source',\n+  ['SourceOrganizeImports'] = 'source.organizeImports',\n+  ['source.organizeImports'] = 'SourceOrganizeImports',\n+  ['SourceFixAll'] = 'source.fixAll',\n+  ['source.fixAll'] = 'SourceFixAll',\n+  ['Notebook'] = 'notebook',\n+  ['notebook'] = 'Notebook',\n+}\n+\n+---Code action tags are extra annotations that tweak the behavior of a code action.\n+---\n+---@since 3.18.0 - proposed\n+---@nodoc\n+---@enum lsp.CodeActionTag\n+protocol.CodeActionTag = {\n+  ['LLMGenerated'] = 1,\n+  [1] = 'LLMGenerated',\n+}\n+\n+---@nodoc\n+---@enum lsp.TraceValue\n+protocol.TraceValue = {\n+  ['Off'] = 'off',\n+  ['off'] = 'Off',\n+  ['Messages'] = 'messages',\n+  ['messages'] = 'Messages',\n+  ['Verbose'] = 'verbose',\n+  ['verbose'] = 'Verbose',\n+}\n+\n+---Describes the content type that a client supports in various\n+---result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n+---\n+---Please note that `MarkupKinds` must not start with a `$`. This kinds\n+---are reserved for internal usage.\n+---@nodoc\n+---@enum lsp.MarkupKind\n+protocol.MarkupKind = {\n+  ['PlainText'] = 'plaintext',\n+  ['plaintext'] = 'PlainText',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+}\n+\n+---Predefined Language kinds\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.LanguageKind\n+protocol.LanguageKind = {\n+  ['ABAP'] = 'abap',\n+  ['abap'] = 'ABAP',\n+  ['WindowsBat'] = 'bat',\n+  ['bat'] = 'WindowsBat',\n+  ['BibTeX'] = 'bibtex',\n+  ['bibtex'] = 'BibTeX',\n+  ['Clojure'] = 'clojure',\n+  ['clojure'] = 'Clojure',\n+  ['Coffeescript'] = 'coffeescript',\n+  ['coffeescript'] = 'Coffeescript',\n+  ['C'] = 'c',\n+  ['c'] = 'C',\n+  ['CPP'] = 'cpp',\n+  ['cpp'] = 'CPP',\n+  ['CSharp'] = 'csharp',\n+  ['csharp'] = 'CSharp',\n+  ['CSS'] = 'css',\n+  ['css'] = 'CSS',\n+  ['D'] = 'd',\n+  ['d'] = 'D',\n+  ['Delphi'] = 'pascal',\n+  ['pascal'] = 'Delphi',\n+  ['Diff'] = 'diff',\n+  ['diff'] = 'Diff',\n+  ['Dart'] = 'dart',\n+  ['dart'] = 'Dart',\n+  ['Dockerfile'] = 'dockerfile',\n+  ['dockerfile'] = 'Dockerfile',\n+  ['Elixir'] = 'elixir',\n+  ['elixir'] = 'Elixir',\n+  ['Erlang'] = 'erlang',\n+  ['erlang'] = 'Erlang',\n+  ['FSharp'] = 'fsharp',\n+  ['fsharp'] = 'FSharp',\n+  ['GitCommit'] = 'git-commit',\n+  ['git-commit'] = 'GitCommit',\n+  ['GitRebase'] = 'rebase',\n+  ['rebase'] = 'GitRebase',\n+  ['Go'] = 'go',\n+  ['go'] = 'Go',\n+  ['Groovy'] = 'groovy',\n+  ['groovy'] = 'Groovy',\n+  ['Handlebars'] = 'handlebars',\n+  ['handlebars'] = 'Handlebars',\n+  ['Haskell'] = 'haskell',\n+  ['haskell'] = 'Haskell',\n+  ['HTML'] = 'html',\n+  ['html'] = 'HTML',\n+  ['Ini'] = 'ini',\n+  ['ini'] = 'Ini',\n+  ['Java'] = 'java',\n+  ['java'] = 'Java',\n+  ['JavaScript'] = 'javascript',\n+  ['javascript'] = 'JavaScript',\n+  ['JavaScriptReact'] = 'javascriptreact',\n+  ['javascriptreact'] = 'JavaScriptReact',\n+  ['JSON'] = 'json',\n+  ['json'] = 'JSON',\n+  ['LaTeX'] = 'latex',\n+  ['latex'] = 'LaTeX',\n+  ['Less'] = 'less',\n+  ['less'] = 'Less',\n+  ['Lua'] = 'lua',\n+  ['lua'] = 'Lua',\n+  ['Makefile'] = 'makefile',\n+  ['makefile'] = 'Makefile',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+  ['ObjectiveC'] = 'objective-c',\n+  ['objective-c'] = 'ObjectiveC',\n+  ['ObjectiveCPP'] = 'objective-cpp',\n+  ['objective-cpp'] = 'ObjectiveCPP',\n+  ['Pascal'] = 'pascal',\n+  ['pascal'] = 'Pascal',\n+  ['Perl'] = 'perl',\n+  ['perl'] = 'Perl',\n+  ['Perl6'] = 'perl6',\n+  ['perl6'] = 'Perl6',\n+  ['PHP'] = 'php',\n+  ['php'] = 'PHP',\n+  ['Powershell'] = 'powershell',\n+  ['powershell'] = 'Powershell',\n+  ['Pug'] = 'jade',\n+  ['jade'] = 'Pug',\n+  ['Python'] = 'python',\n+  ['python'] = 'Python',\n+  ['R'] = 'r',\n+  ['r'] = 'R',\n+  ['Razor'] = 'razor',\n+  ['razor'] = 'Razor',\n+  ['Ruby'] = 'ruby',\n+  ['ruby'] = 'Ruby',\n+  ['Rust'] = 'rust',\n+  ['rust'] = 'Rust',\n+  ['SCSS'] = 'scss',\n+  ['scss'] = 'SCSS',\n+  ['SASS'] = 'sass',\n+  ['sass'] = 'SASS',\n+  ['Scala'] = 'scala',\n+  ['scala'] = 'Scala',\n+  ['ShaderLab'] = 'shaderlab',\n+  ['shaderlab'] = 'ShaderLab',\n+  ['ShellScript'] = 'shellscript',\n+  ['shellscript'] = 'ShellScript',\n+  ['SQL'] = 'sql',\n+  ['sql'] = 'SQL',\n+  ['Swift'] = 'swift',\n+  ['swift'] = 'Swift',\n+  ['TypeScript'] = 'typescript',\n+  ['typescript'] = 'TypeScript',\n+  ['TypeScriptReact'] = 'typescriptreact',\n+  ['typescriptreact'] = 'TypeScriptReact',\n+  ['TeX'] = 'tex',\n+  ['tex'] = 'TeX',\n+  ['VisualBasic'] = 'vb',\n+  ['vb'] = 'VisualBasic',\n+  ['XML'] = 'xml',\n+  ['xml'] = 'XML',\n+  ['XSL'] = 'xsl',\n+  ['xsl'] = 'XSL',\n+  ['YAML'] = 'yaml',\n+  ['yaml'] = 'YAML',\n+}\n+\n+---Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n+---\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.InlineCompletionTriggerKind\n+protocol.InlineCompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A set of predefined position encoding kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.PositionEncodingKind\n+protocol.PositionEncodingKind = {\n+  ['UTF8'] = 'utf-8',\n+  ['utf-8'] = 'UTF8',\n+  ['UTF16'] = 'utf-16',\n+  ['utf-16'] = 'UTF16',\n+  ['UTF32'] = 'utf-32',\n+  ['utf-32'] = 'UTF32',\n+}\n+\n+---The file event type\n+---@nodoc\n+---@enum lsp.FileChangeType\n+protocol.FileChangeType = {\n+  ['Created'] = 1,\n+  [1] = 'Created',\n+  ['Changed'] = 2,\n+  [2] = 'Changed',\n+  ['Deleted'] = 3,\n+  [3] = 'Deleted',\n+}\n+\n+---@nodoc\n+---@enum lsp.WatchKind\n+protocol.WatchKind = {\n+  ['Create'] = 1,\n+  [1] = 'Create',\n+  ['Change'] = 2,\n+  [2] = 'Change',\n+  ['Delete'] = 4,\n+  [4] = 'Delete',\n+}\n+\n+---The diagnostic's severity.\n+---@nodoc\n+---@enum lsp.DiagnosticSeverity\n+protocol.DiagnosticSeverity = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Information'] = 3,\n+  [3] = 'Information',\n+  ['Hint'] = 4,\n+  [4] = 'Hint',\n+}\n+\n+---The diagnostic tags.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.DiagnosticTag\n+protocol.DiagnosticTag = {\n+  ['Unnecessary'] = 1,\n+  [1] = 'Unnecessary',\n+  ['Deprecated'] = 2,\n+  [2] = 'Deprecated',\n+}\n+\n+---How a completion was triggered\n+---@nodoc\n+---@enum lsp.CompletionTriggerKind\n+protocol.CompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['TriggerForIncompleteCompletions'] = 3,\n+  [3] = 'TriggerForIncompleteCompletions',\n+}\n+\n+---How a signature help was triggered.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.SignatureHelpTriggerKind\n+protocol.SignatureHelpTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['ContentChange'] = 3,\n+  [3] = 'ContentChange',\n+}\n+\n+---The reason why code actions were requested.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.CodeActionTriggerKind\n+protocol.CodeActionTriggerKind = {\n+  ['Invoked'] = 1,",
            "html_url": "https://github.com/neovim/neovim/pull/32215#discussion_r1932715520",
            "id": 1932715520,
            "in_reply_to_id": 1932549491,
            "line": 901,
            "node_id": "PRRC_kwDOAPphoM5zMuYA",
            "original_commit_id": "eb4a8a9b8c5dfc8d6a36e44575394a6f4c33a190",
            "original_line": 901,
            "original_position": 1088,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": 994,
            "pull_request_review_id": 2579182791,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932715520/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-28T19:05:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1932715520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32215#discussion_r1933237391"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1933237391"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair enough. I've modified the script to only generate the reverse lookup if the value is a number.\r\n\r\nI still need to fix the tests.",
            "commit_id": "8020ac5b6b032611372c4cd28e6665928b95a845",
            "created_at": "2025-01-29T04:07:54Z",
            "diff_hunk": "@@ -629,6 +326,733 @@ function protocol.resolve_capabilities(server_capabilities)\n end\n \n -- Generated by gen_lsp.lua, keep at end of file.\n+---A set of predefined token types. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenTypes\n+protocol.SemanticTokenTypes = {\n+  ['namespace'] = 'namespace',\n+  ['type'] = 'type',\n+  ['class'] = 'class',\n+  ['enum'] = 'enum',\n+  ['interface'] = 'interface',\n+  ['struct'] = 'struct',\n+  ['typeParameter'] = 'typeParameter',\n+  ['parameter'] = 'parameter',\n+  ['variable'] = 'variable',\n+  ['property'] = 'property',\n+  ['enumMember'] = 'enumMember',\n+  ['event'] = 'event',\n+  ['function'] = 'function',\n+  ['method'] = 'method',\n+  ['macro'] = 'macro',\n+  ['keyword'] = 'keyword',\n+  ['modifier'] = 'modifier',\n+  ['comment'] = 'comment',\n+  ['string'] = 'string',\n+  ['number'] = 'number',\n+  ['regexp'] = 'regexp',\n+  ['operator'] = 'operator',\n+  ['decorator'] = 'decorator',\n+  ['label'] = 'label',\n+}\n+\n+---A set of predefined token modifiers. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenModifiers\n+protocol.SemanticTokenModifiers = {\n+  ['declaration'] = 'declaration',\n+  ['definition'] = 'definition',\n+  ['readonly'] = 'readonly',\n+  ['static'] = 'static',\n+  ['deprecated'] = 'deprecated',\n+  ['abstract'] = 'abstract',\n+  ['async'] = 'async',\n+  ['modification'] = 'modification',\n+  ['documentation'] = 'documentation',\n+  ['defaultLibrary'] = 'defaultLibrary',\n+}\n+\n+---The document diagnostic report kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.DocumentDiagnosticReportKind\n+protocol.DocumentDiagnosticReportKind = {\n+  ['Full'] = 'full',\n+  ['full'] = 'Full',\n+  ['Unchanged'] = 'unchanged',\n+  ['unchanged'] = 'Unchanged',\n+}\n+\n+---Predefined error codes.\n+---@nodoc\n+---@enum lsp.ErrorCodes\n+protocol.ErrorCodes = {\n+  ['ParseError'] = -32700,\n+  [-32700] = 'ParseError',\n+  ['InvalidRequest'] = -32600,\n+  [-32600] = 'InvalidRequest',\n+  ['MethodNotFound'] = -32601,\n+  [-32601] = 'MethodNotFound',\n+  ['InvalidParams'] = -32602,\n+  [-32602] = 'InvalidParams',\n+  ['InternalError'] = -32603,\n+  [-32603] = 'InternalError',\n+  ['ServerNotInitialized'] = -32002,\n+  [-32002] = 'ServerNotInitialized',\n+  ['UnknownErrorCode'] = -32001,\n+  [-32001] = 'UnknownErrorCode',\n+}\n+\n+---@nodoc\n+---@enum lsp.LSPErrorCodes\n+protocol.LSPErrorCodes = {\n+  ['RequestFailed'] = -32803,\n+  [-32803] = 'RequestFailed',\n+  ['ServerCancelled'] = -32802,\n+  [-32802] = 'ServerCancelled',\n+  ['ContentModified'] = -32801,\n+  [-32801] = 'ContentModified',\n+  ['RequestCancelled'] = -32800,\n+  [-32800] = 'RequestCancelled',\n+}\n+\n+---A set of predefined range kinds.\n+---@nodoc\n+---@enum lsp.FoldingRangeKind\n+protocol.FoldingRangeKind = {\n+  ['Comment'] = 'comment',\n+  ['comment'] = 'Comment',\n+  ['Imports'] = 'imports',\n+  ['imports'] = 'Imports',\n+  ['Region'] = 'region',\n+  ['region'] = 'Region',\n+}\n+\n+---A symbol kind.\n+---@nodoc\n+---@enum lsp.SymbolKind\n+protocol.SymbolKind = {\n+  ['File'] = 1,\n+  [1] = 'File',\n+  ['Module'] = 2,\n+  [2] = 'Module',\n+  ['Namespace'] = 3,\n+  [3] = 'Namespace',\n+  ['Package'] = 4,\n+  [4] = 'Package',\n+  ['Class'] = 5,\n+  [5] = 'Class',\n+  ['Method'] = 6,\n+  [6] = 'Method',\n+  ['Property'] = 7,\n+  [7] = 'Property',\n+  ['Field'] = 8,\n+  [8] = 'Field',\n+  ['Constructor'] = 9,\n+  [9] = 'Constructor',\n+  ['Enum'] = 10,\n+  [10] = 'Enum',\n+  ['Interface'] = 11,\n+  [11] = 'Interface',\n+  ['Function'] = 12,\n+  [12] = 'Function',\n+  ['Variable'] = 13,\n+  [13] = 'Variable',\n+  ['Constant'] = 14,\n+  [14] = 'Constant',\n+  ['String'] = 15,\n+  [15] = 'String',\n+  ['Number'] = 16,\n+  [16] = 'Number',\n+  ['Boolean'] = 17,\n+  [17] = 'Boolean',\n+  ['Array'] = 18,\n+  [18] = 'Array',\n+  ['Object'] = 19,\n+  [19] = 'Object',\n+  ['Key'] = 20,\n+  [20] = 'Key',\n+  ['Null'] = 21,\n+  [21] = 'Null',\n+  ['EnumMember'] = 22,\n+  [22] = 'EnumMember',\n+  ['Struct'] = 23,\n+  [23] = 'Struct',\n+  ['Event'] = 24,\n+  [24] = 'Event',\n+  ['Operator'] = 25,\n+  [25] = 'Operator',\n+  ['TypeParameter'] = 26,\n+  [26] = 'TypeParameter',\n+}\n+\n+---Symbol tags are extra annotations that tweak the rendering of a symbol.\n+---\n+---@since 3.16\n+---@nodoc\n+---@enum lsp.SymbolTag\n+protocol.SymbolTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Moniker uniqueness level to define scope of the moniker.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.UniquenessLevel\n+protocol.UniquenessLevel = {\n+  ['document'] = 'document',\n+  ['project'] = 'project',\n+  ['group'] = 'group',\n+  ['scheme'] = 'scheme',\n+  ['global'] = 'global',\n+}\n+\n+---The moniker kind.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.MonikerKind\n+protocol.MonikerKind = {\n+  ['import'] = 'import',\n+  ['export'] = 'export',\n+  ['local'] = 'local',\n+}\n+\n+---Inlay hint kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.InlayHintKind\n+protocol.InlayHintKind = {\n+  ['Type'] = 1,\n+  [1] = 'Type',\n+  ['Parameter'] = 2,\n+  [2] = 'Parameter',\n+}\n+\n+---The message type\n+---@nodoc\n+---@enum lsp.MessageType\n+protocol.MessageType = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Info'] = 3,\n+  [3] = 'Info',\n+  ['Log'] = 4,\n+  [4] = 'Log',\n+  ['Debug'] = 5,\n+  [5] = 'Debug',\n+}\n+\n+---Defines how the host (editor) should sync\n+---document changes to the language server.\n+---@nodoc\n+---@enum lsp.TextDocumentSyncKind\n+protocol.TextDocumentSyncKind = {\n+  ['None'] = 0,\n+  [0] = 'None',\n+  ['Full'] = 1,\n+  [1] = 'Full',\n+  ['Incremental'] = 2,\n+  [2] = 'Incremental',\n+}\n+\n+---Represents reasons why a text document is saved.\n+---@nodoc\n+---@enum lsp.TextDocumentSaveReason\n+protocol.TextDocumentSaveReason = {\n+  ['Manual'] = 1,\n+  [1] = 'Manual',\n+  ['AfterDelay'] = 2,\n+  [2] = 'AfterDelay',\n+  ['FocusOut'] = 3,\n+  [3] = 'FocusOut',\n+}\n+\n+---The kind of a completion entry.\n+---@nodoc\n+---@enum lsp.CompletionItemKind\n+protocol.CompletionItemKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Method'] = 2,\n+  [2] = 'Method',\n+  ['Function'] = 3,\n+  [3] = 'Function',\n+  ['Constructor'] = 4,\n+  [4] = 'Constructor',\n+  ['Field'] = 5,\n+  [5] = 'Field',\n+  ['Variable'] = 6,\n+  [6] = 'Variable',\n+  ['Class'] = 7,\n+  [7] = 'Class',\n+  ['Interface'] = 8,\n+  [8] = 'Interface',\n+  ['Module'] = 9,\n+  [9] = 'Module',\n+  ['Property'] = 10,\n+  [10] = 'Property',\n+  ['Unit'] = 11,\n+  [11] = 'Unit',\n+  ['Value'] = 12,\n+  [12] = 'Value',\n+  ['Enum'] = 13,\n+  [13] = 'Enum',\n+  ['Keyword'] = 14,\n+  [14] = 'Keyword',\n+  ['Snippet'] = 15,\n+  [15] = 'Snippet',\n+  ['Color'] = 16,\n+  [16] = 'Color',\n+  ['File'] = 17,\n+  [17] = 'File',\n+  ['Reference'] = 18,\n+  [18] = 'Reference',\n+  ['Folder'] = 19,\n+  [19] = 'Folder',\n+  ['EnumMember'] = 20,\n+  [20] = 'EnumMember',\n+  ['Constant'] = 21,\n+  [21] = 'Constant',\n+  ['Struct'] = 22,\n+  [22] = 'Struct',\n+  ['Event'] = 23,\n+  [23] = 'Event',\n+  ['Operator'] = 24,\n+  [24] = 'Operator',\n+  ['TypeParameter'] = 25,\n+  [25] = 'TypeParameter',\n+}\n+\n+---Completion item tags are extra annotations that tweak the rendering of a completion\n+---item.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.CompletionItemTag\n+protocol.CompletionItemTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Defines whether the insert text in a completion item should be interpreted as\n+---plain text or a snippet.\n+---@nodoc\n+---@enum lsp.InsertTextFormat\n+protocol.InsertTextFormat = {\n+  ['PlainText'] = 1,\n+  [1] = 'PlainText',\n+  ['Snippet'] = 2,\n+  [2] = 'Snippet',\n+}\n+\n+---How whitespace and indentation is handled during completion\n+---item insertion.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.InsertTextMode\n+protocol.InsertTextMode = {\n+  ['asIs'] = 1,\n+  [1] = 'asIs',\n+  ['adjustIndentation'] = 2,\n+  [2] = 'adjustIndentation',\n+}\n+\n+---A document highlight kind.\n+---@nodoc\n+---@enum lsp.DocumentHighlightKind\n+protocol.DocumentHighlightKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Read'] = 2,\n+  [2] = 'Read',\n+  ['Write'] = 3,\n+  [3] = 'Write',\n+}\n+\n+---A set of predefined code action kinds\n+---@nodoc\n+---@enum lsp.CodeActionKind\n+protocol.CodeActionKind = {\n+  ['Empty'] = '',\n+  [''] = 'Empty',\n+  ['QuickFix'] = 'quickfix',\n+  ['quickfix'] = 'QuickFix',\n+  ['Refactor'] = 'refactor',\n+  ['refactor'] = 'Refactor',\n+  ['RefactorExtract'] = 'refactor.extract',\n+  ['refactor.extract'] = 'RefactorExtract',\n+  ['RefactorInline'] = 'refactor.inline',\n+  ['refactor.inline'] = 'RefactorInline',\n+  ['RefactorMove'] = 'refactor.move',\n+  ['refactor.move'] = 'RefactorMove',\n+  ['RefactorRewrite'] = 'refactor.rewrite',\n+  ['refactor.rewrite'] = 'RefactorRewrite',\n+  ['Source'] = 'source',\n+  ['source'] = 'Source',\n+  ['SourceOrganizeImports'] = 'source.organizeImports',\n+  ['source.organizeImports'] = 'SourceOrganizeImports',\n+  ['SourceFixAll'] = 'source.fixAll',\n+  ['source.fixAll'] = 'SourceFixAll',\n+  ['Notebook'] = 'notebook',\n+  ['notebook'] = 'Notebook',\n+}\n+\n+---Code action tags are extra annotations that tweak the behavior of a code action.\n+---\n+---@since 3.18.0 - proposed\n+---@nodoc\n+---@enum lsp.CodeActionTag\n+protocol.CodeActionTag = {\n+  ['LLMGenerated'] = 1,\n+  [1] = 'LLMGenerated',\n+}\n+\n+---@nodoc\n+---@enum lsp.TraceValue\n+protocol.TraceValue = {\n+  ['Off'] = 'off',\n+  ['off'] = 'Off',\n+  ['Messages'] = 'messages',\n+  ['messages'] = 'Messages',\n+  ['Verbose'] = 'verbose',\n+  ['verbose'] = 'Verbose',\n+}\n+\n+---Describes the content type that a client supports in various\n+---result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n+---\n+---Please note that `MarkupKinds` must not start with a `$`. This kinds\n+---are reserved for internal usage.\n+---@nodoc\n+---@enum lsp.MarkupKind\n+protocol.MarkupKind = {\n+  ['PlainText'] = 'plaintext',\n+  ['plaintext'] = 'PlainText',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+}\n+\n+---Predefined Language kinds\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.LanguageKind\n+protocol.LanguageKind = {\n+  ['ABAP'] = 'abap',\n+  ['abap'] = 'ABAP',\n+  ['WindowsBat'] = 'bat',\n+  ['bat'] = 'WindowsBat',\n+  ['BibTeX'] = 'bibtex',\n+  ['bibtex'] = 'BibTeX',\n+  ['Clojure'] = 'clojure',\n+  ['clojure'] = 'Clojure',\n+  ['Coffeescript'] = 'coffeescript',\n+  ['coffeescript'] = 'Coffeescript',\n+  ['C'] = 'c',\n+  ['c'] = 'C',\n+  ['CPP'] = 'cpp',\n+  ['cpp'] = 'CPP',\n+  ['CSharp'] = 'csharp',\n+  ['csharp'] = 'CSharp',\n+  ['CSS'] = 'css',\n+  ['css'] = 'CSS',\n+  ['D'] = 'd',\n+  ['d'] = 'D',\n+  ['Delphi'] = 'pascal',\n+  ['pascal'] = 'Delphi',\n+  ['Diff'] = 'diff',\n+  ['diff'] = 'Diff',\n+  ['Dart'] = 'dart',\n+  ['dart'] = 'Dart',\n+  ['Dockerfile'] = 'dockerfile',\n+  ['dockerfile'] = 'Dockerfile',\n+  ['Elixir'] = 'elixir',\n+  ['elixir'] = 'Elixir',\n+  ['Erlang'] = 'erlang',\n+  ['erlang'] = 'Erlang',\n+  ['FSharp'] = 'fsharp',\n+  ['fsharp'] = 'FSharp',\n+  ['GitCommit'] = 'git-commit',\n+  ['git-commit'] = 'GitCommit',\n+  ['GitRebase'] = 'rebase',\n+  ['rebase'] = 'GitRebase',\n+  ['Go'] = 'go',\n+  ['go'] = 'Go',\n+  ['Groovy'] = 'groovy',\n+  ['groovy'] = 'Groovy',\n+  ['Handlebars'] = 'handlebars',\n+  ['handlebars'] = 'Handlebars',\n+  ['Haskell'] = 'haskell',\n+  ['haskell'] = 'Haskell',\n+  ['HTML'] = 'html',\n+  ['html'] = 'HTML',\n+  ['Ini'] = 'ini',\n+  ['ini'] = 'Ini',\n+  ['Java'] = 'java',\n+  ['java'] = 'Java',\n+  ['JavaScript'] = 'javascript',\n+  ['javascript'] = 'JavaScript',\n+  ['JavaScriptReact'] = 'javascriptreact',\n+  ['javascriptreact'] = 'JavaScriptReact',\n+  ['JSON'] = 'json',\n+  ['json'] = 'JSON',\n+  ['LaTeX'] = 'latex',\n+  ['latex'] = 'LaTeX',\n+  ['Less'] = 'less',\n+  ['less'] = 'Less',\n+  ['Lua'] = 'lua',\n+  ['lua'] = 'Lua',\n+  ['Makefile'] = 'makefile',\n+  ['makefile'] = 'Makefile',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+  ['ObjectiveC'] = 'objective-c',\n+  ['objective-c'] = 'ObjectiveC',\n+  ['ObjectiveCPP'] = 'objective-cpp',\n+  ['objective-cpp'] = 'ObjectiveCPP',\n+  ['Pascal'] = 'pascal',\n+  ['pascal'] = 'Pascal',\n+  ['Perl'] = 'perl',\n+  ['perl'] = 'Perl',\n+  ['Perl6'] = 'perl6',\n+  ['perl6'] = 'Perl6',\n+  ['PHP'] = 'php',\n+  ['php'] = 'PHP',\n+  ['Powershell'] = 'powershell',\n+  ['powershell'] = 'Powershell',\n+  ['Pug'] = 'jade',\n+  ['jade'] = 'Pug',\n+  ['Python'] = 'python',\n+  ['python'] = 'Python',\n+  ['R'] = 'r',\n+  ['r'] = 'R',\n+  ['Razor'] = 'razor',\n+  ['razor'] = 'Razor',\n+  ['Ruby'] = 'ruby',\n+  ['ruby'] = 'Ruby',\n+  ['Rust'] = 'rust',\n+  ['rust'] = 'Rust',\n+  ['SCSS'] = 'scss',\n+  ['scss'] = 'SCSS',\n+  ['SASS'] = 'sass',\n+  ['sass'] = 'SASS',\n+  ['Scala'] = 'scala',\n+  ['scala'] = 'Scala',\n+  ['ShaderLab'] = 'shaderlab',\n+  ['shaderlab'] = 'ShaderLab',\n+  ['ShellScript'] = 'shellscript',\n+  ['shellscript'] = 'ShellScript',\n+  ['SQL'] = 'sql',\n+  ['sql'] = 'SQL',\n+  ['Swift'] = 'swift',\n+  ['swift'] = 'Swift',\n+  ['TypeScript'] = 'typescript',\n+  ['typescript'] = 'TypeScript',\n+  ['TypeScriptReact'] = 'typescriptreact',\n+  ['typescriptreact'] = 'TypeScriptReact',\n+  ['TeX'] = 'tex',\n+  ['tex'] = 'TeX',\n+  ['VisualBasic'] = 'vb',\n+  ['vb'] = 'VisualBasic',\n+  ['XML'] = 'xml',\n+  ['xml'] = 'XML',\n+  ['XSL'] = 'xsl',\n+  ['xsl'] = 'XSL',\n+  ['YAML'] = 'yaml',\n+  ['yaml'] = 'YAML',\n+}\n+\n+---Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n+---\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.InlineCompletionTriggerKind\n+protocol.InlineCompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A set of predefined position encoding kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.PositionEncodingKind\n+protocol.PositionEncodingKind = {\n+  ['UTF8'] = 'utf-8',\n+  ['utf-8'] = 'UTF8',\n+  ['UTF16'] = 'utf-16',\n+  ['utf-16'] = 'UTF16',\n+  ['UTF32'] = 'utf-32',\n+  ['utf-32'] = 'UTF32',\n+}\n+\n+---The file event type\n+---@nodoc\n+---@enum lsp.FileChangeType\n+protocol.FileChangeType = {\n+  ['Created'] = 1,\n+  [1] = 'Created',\n+  ['Changed'] = 2,\n+  [2] = 'Changed',\n+  ['Deleted'] = 3,\n+  [3] = 'Deleted',\n+}\n+\n+---@nodoc\n+---@enum lsp.WatchKind\n+protocol.WatchKind = {\n+  ['Create'] = 1,\n+  [1] = 'Create',\n+  ['Change'] = 2,\n+  [2] = 'Change',\n+  ['Delete'] = 4,\n+  [4] = 'Delete',\n+}\n+\n+---The diagnostic's severity.\n+---@nodoc\n+---@enum lsp.DiagnosticSeverity\n+protocol.DiagnosticSeverity = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Information'] = 3,\n+  [3] = 'Information',\n+  ['Hint'] = 4,\n+  [4] = 'Hint',\n+}\n+\n+---The diagnostic tags.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.DiagnosticTag\n+protocol.DiagnosticTag = {\n+  ['Unnecessary'] = 1,\n+  [1] = 'Unnecessary',\n+  ['Deprecated'] = 2,\n+  [2] = 'Deprecated',\n+}\n+\n+---How a completion was triggered\n+---@nodoc\n+---@enum lsp.CompletionTriggerKind\n+protocol.CompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['TriggerForIncompleteCompletions'] = 3,\n+  [3] = 'TriggerForIncompleteCompletions',\n+}\n+\n+---How a signature help was triggered.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.SignatureHelpTriggerKind\n+protocol.SignatureHelpTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['ContentChange'] = 3,\n+  [3] = 'ContentChange',\n+}\n+\n+---The reason why code actions were requested.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.CodeActionTriggerKind\n+protocol.CodeActionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A pattern kind describing if a glob pattern matches a file a folder or\n+---both.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.FileOperationPatternKind\n+protocol.FileOperationPatternKind = {\n+  ['file'] = 'file',\n+  ['folder'] = 'folder',\n+}\n+\n+---A notebook cell kind.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.NotebookCellKind\n+protocol.NotebookCellKind = {\n+  ['Markup'] = 1,\n+  [1] = 'Markup',\n+  ['Code'] = 2,\n+  [2] = 'Code',\n+}\n+\n+---@nodoc\n+---@enum lsp.ResourceOperationKind\n+protocol.ResourceOperationKind = {\n+  ['Create'] = 'create',",
            "html_url": "https://github.com/neovim/neovim/pull/32215#discussion_r1933237391",
            "id": 1933237391,
            "in_reply_to_id": 1932643988,
            "line": 933,
            "node_id": "PRRC_kwDOAPphoM5zOtyP",
            "original_commit_id": "eb4a8a9b8c5dfc8d6a36e44575394a6f4c33a190",
            "original_line": 933,
            "original_position": 1120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": 1026,
            "pull_request_review_id": 2579953005,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1933237391/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-29T04:07:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1933237391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32215#discussion_r1934091050"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934091050"
                }
            },
            "author_association": "MEMBER",
            "body": "I didn't mean just for reverse lookup but also types like:\r\n\r\n```lua\r\n---@enum lsp.SemanticTokenTypes\r\nprotocol.SemanticTokenTypes = {\r\n  ['namespace'] = 'namespace',\r\n  ['type'] = 'type',\r\n  ['class'] = 'class',\r\n  ['enum'] = 'enum',\r\n  ['interface'] = 'interface',\r\n  ['struct'] = 'struct',\r\n  ['typeParameter'] = 'typeParameter',\r\n  ['parameter'] = 'parameter',\r\n  ['variable'] = 'variable',\r\n  ['property'] = 'property',\r\n  ['enumMember'] = 'enumMember',\r\n  ['event'] = 'event',\r\n  ['function'] = 'function',\r\n  ['method'] = 'method',\r\n  ['macro'] = 'macro',\r\n  ['keyword'] = 'keyword',\r\n  ['modifier'] = 'modifier',\r\n  ['comment'] = 'comment',\r\n  ['string'] = 'string',\r\n  ['number'] = 'number',\r\n  ['regexp'] = 'regexp',\r\n  ['operator'] = 'operator',\r\n  ['decorator'] = 'decorator',\r\n  ['label'] = 'label',\r\n}\r\n```\r\n\r\nI think types like this work better as an alias like they were before as the table definition here doesn't provide any benefit, and IMO just creates an extra (redundant) middle-man. E.g. why would anyone write `type = vim.lsp.protocol.SemanticTokenTypes.function` instead of `type = 'function'`?\r\n\r\nThe `lsp.SymbolKinds` enum abstracts the numbers into human readable strings, so the table is doing something useful.",
            "commit_id": "8020ac5b6b032611372c4cd28e6665928b95a845",
            "created_at": "2025-01-29T15:21:59Z",
            "diff_hunk": "@@ -629,6 +326,733 @@ function protocol.resolve_capabilities(server_capabilities)\n end\n \n -- Generated by gen_lsp.lua, keep at end of file.\n+---A set of predefined token types. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenTypes\n+protocol.SemanticTokenTypes = {\n+  ['namespace'] = 'namespace',\n+  ['type'] = 'type',\n+  ['class'] = 'class',\n+  ['enum'] = 'enum',\n+  ['interface'] = 'interface',\n+  ['struct'] = 'struct',\n+  ['typeParameter'] = 'typeParameter',\n+  ['parameter'] = 'parameter',\n+  ['variable'] = 'variable',\n+  ['property'] = 'property',\n+  ['enumMember'] = 'enumMember',\n+  ['event'] = 'event',\n+  ['function'] = 'function',\n+  ['method'] = 'method',\n+  ['macro'] = 'macro',\n+  ['keyword'] = 'keyword',\n+  ['modifier'] = 'modifier',\n+  ['comment'] = 'comment',\n+  ['string'] = 'string',\n+  ['number'] = 'number',\n+  ['regexp'] = 'regexp',\n+  ['operator'] = 'operator',\n+  ['decorator'] = 'decorator',\n+  ['label'] = 'label',\n+}\n+\n+---A set of predefined token modifiers. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenModifiers\n+protocol.SemanticTokenModifiers = {\n+  ['declaration'] = 'declaration',\n+  ['definition'] = 'definition',\n+  ['readonly'] = 'readonly',\n+  ['static'] = 'static',\n+  ['deprecated'] = 'deprecated',\n+  ['abstract'] = 'abstract',\n+  ['async'] = 'async',\n+  ['modification'] = 'modification',\n+  ['documentation'] = 'documentation',\n+  ['defaultLibrary'] = 'defaultLibrary',\n+}\n+\n+---The document diagnostic report kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.DocumentDiagnosticReportKind\n+protocol.DocumentDiagnosticReportKind = {\n+  ['Full'] = 'full',\n+  ['full'] = 'Full',\n+  ['Unchanged'] = 'unchanged',\n+  ['unchanged'] = 'Unchanged',\n+}\n+\n+---Predefined error codes.\n+---@nodoc\n+---@enum lsp.ErrorCodes\n+protocol.ErrorCodes = {\n+  ['ParseError'] = -32700,\n+  [-32700] = 'ParseError',\n+  ['InvalidRequest'] = -32600,\n+  [-32600] = 'InvalidRequest',\n+  ['MethodNotFound'] = -32601,\n+  [-32601] = 'MethodNotFound',\n+  ['InvalidParams'] = -32602,\n+  [-32602] = 'InvalidParams',\n+  ['InternalError'] = -32603,\n+  [-32603] = 'InternalError',\n+  ['ServerNotInitialized'] = -32002,\n+  [-32002] = 'ServerNotInitialized',\n+  ['UnknownErrorCode'] = -32001,\n+  [-32001] = 'UnknownErrorCode',\n+}\n+\n+---@nodoc\n+---@enum lsp.LSPErrorCodes\n+protocol.LSPErrorCodes = {\n+  ['RequestFailed'] = -32803,\n+  [-32803] = 'RequestFailed',\n+  ['ServerCancelled'] = -32802,\n+  [-32802] = 'ServerCancelled',\n+  ['ContentModified'] = -32801,\n+  [-32801] = 'ContentModified',\n+  ['RequestCancelled'] = -32800,\n+  [-32800] = 'RequestCancelled',\n+}\n+\n+---A set of predefined range kinds.\n+---@nodoc\n+---@enum lsp.FoldingRangeKind\n+protocol.FoldingRangeKind = {\n+  ['Comment'] = 'comment',\n+  ['comment'] = 'Comment',\n+  ['Imports'] = 'imports',\n+  ['imports'] = 'Imports',\n+  ['Region'] = 'region',\n+  ['region'] = 'Region',\n+}\n+\n+---A symbol kind.\n+---@nodoc\n+---@enum lsp.SymbolKind\n+protocol.SymbolKind = {\n+  ['File'] = 1,\n+  [1] = 'File',\n+  ['Module'] = 2,\n+  [2] = 'Module',\n+  ['Namespace'] = 3,\n+  [3] = 'Namespace',\n+  ['Package'] = 4,\n+  [4] = 'Package',\n+  ['Class'] = 5,\n+  [5] = 'Class',\n+  ['Method'] = 6,\n+  [6] = 'Method',\n+  ['Property'] = 7,\n+  [7] = 'Property',\n+  ['Field'] = 8,\n+  [8] = 'Field',\n+  ['Constructor'] = 9,\n+  [9] = 'Constructor',\n+  ['Enum'] = 10,\n+  [10] = 'Enum',\n+  ['Interface'] = 11,\n+  [11] = 'Interface',\n+  ['Function'] = 12,\n+  [12] = 'Function',\n+  ['Variable'] = 13,\n+  [13] = 'Variable',\n+  ['Constant'] = 14,\n+  [14] = 'Constant',\n+  ['String'] = 15,\n+  [15] = 'String',\n+  ['Number'] = 16,\n+  [16] = 'Number',\n+  ['Boolean'] = 17,\n+  [17] = 'Boolean',\n+  ['Array'] = 18,\n+  [18] = 'Array',\n+  ['Object'] = 19,\n+  [19] = 'Object',\n+  ['Key'] = 20,\n+  [20] = 'Key',\n+  ['Null'] = 21,\n+  [21] = 'Null',\n+  ['EnumMember'] = 22,\n+  [22] = 'EnumMember',\n+  ['Struct'] = 23,\n+  [23] = 'Struct',\n+  ['Event'] = 24,\n+  [24] = 'Event',\n+  ['Operator'] = 25,\n+  [25] = 'Operator',\n+  ['TypeParameter'] = 26,\n+  [26] = 'TypeParameter',\n+}\n+\n+---Symbol tags are extra annotations that tweak the rendering of a symbol.\n+---\n+---@since 3.16\n+---@nodoc\n+---@enum lsp.SymbolTag\n+protocol.SymbolTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Moniker uniqueness level to define scope of the moniker.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.UniquenessLevel\n+protocol.UniquenessLevel = {\n+  ['document'] = 'document',\n+  ['project'] = 'project',\n+  ['group'] = 'group',\n+  ['scheme'] = 'scheme',\n+  ['global'] = 'global',\n+}\n+\n+---The moniker kind.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.MonikerKind\n+protocol.MonikerKind = {\n+  ['import'] = 'import',\n+  ['export'] = 'export',\n+  ['local'] = 'local',\n+}\n+\n+---Inlay hint kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.InlayHintKind\n+protocol.InlayHintKind = {\n+  ['Type'] = 1,\n+  [1] = 'Type',\n+  ['Parameter'] = 2,\n+  [2] = 'Parameter',\n+}\n+\n+---The message type\n+---@nodoc\n+---@enum lsp.MessageType\n+protocol.MessageType = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Info'] = 3,\n+  [3] = 'Info',\n+  ['Log'] = 4,\n+  [4] = 'Log',\n+  ['Debug'] = 5,\n+  [5] = 'Debug',\n+}\n+\n+---Defines how the host (editor) should sync\n+---document changes to the language server.\n+---@nodoc\n+---@enum lsp.TextDocumentSyncKind\n+protocol.TextDocumentSyncKind = {\n+  ['None'] = 0,\n+  [0] = 'None',\n+  ['Full'] = 1,\n+  [1] = 'Full',\n+  ['Incremental'] = 2,\n+  [2] = 'Incremental',\n+}\n+\n+---Represents reasons why a text document is saved.\n+---@nodoc\n+---@enum lsp.TextDocumentSaveReason\n+protocol.TextDocumentSaveReason = {\n+  ['Manual'] = 1,\n+  [1] = 'Manual',\n+  ['AfterDelay'] = 2,\n+  [2] = 'AfterDelay',\n+  ['FocusOut'] = 3,\n+  [3] = 'FocusOut',\n+}\n+\n+---The kind of a completion entry.\n+---@nodoc\n+---@enum lsp.CompletionItemKind\n+protocol.CompletionItemKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Method'] = 2,\n+  [2] = 'Method',\n+  ['Function'] = 3,\n+  [3] = 'Function',\n+  ['Constructor'] = 4,\n+  [4] = 'Constructor',\n+  ['Field'] = 5,\n+  [5] = 'Field',\n+  ['Variable'] = 6,\n+  [6] = 'Variable',\n+  ['Class'] = 7,\n+  [7] = 'Class',\n+  ['Interface'] = 8,\n+  [8] = 'Interface',\n+  ['Module'] = 9,\n+  [9] = 'Module',\n+  ['Property'] = 10,\n+  [10] = 'Property',\n+  ['Unit'] = 11,\n+  [11] = 'Unit',\n+  ['Value'] = 12,\n+  [12] = 'Value',\n+  ['Enum'] = 13,\n+  [13] = 'Enum',\n+  ['Keyword'] = 14,\n+  [14] = 'Keyword',\n+  ['Snippet'] = 15,\n+  [15] = 'Snippet',\n+  ['Color'] = 16,\n+  [16] = 'Color',\n+  ['File'] = 17,\n+  [17] = 'File',\n+  ['Reference'] = 18,\n+  [18] = 'Reference',\n+  ['Folder'] = 19,\n+  [19] = 'Folder',\n+  ['EnumMember'] = 20,\n+  [20] = 'EnumMember',\n+  ['Constant'] = 21,\n+  [21] = 'Constant',\n+  ['Struct'] = 22,\n+  [22] = 'Struct',\n+  ['Event'] = 23,\n+  [23] = 'Event',\n+  ['Operator'] = 24,\n+  [24] = 'Operator',\n+  ['TypeParameter'] = 25,\n+  [25] = 'TypeParameter',\n+}\n+\n+---Completion item tags are extra annotations that tweak the rendering of a completion\n+---item.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.CompletionItemTag\n+protocol.CompletionItemTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Defines whether the insert text in a completion item should be interpreted as\n+---plain text or a snippet.\n+---@nodoc\n+---@enum lsp.InsertTextFormat\n+protocol.InsertTextFormat = {\n+  ['PlainText'] = 1,\n+  [1] = 'PlainText',\n+  ['Snippet'] = 2,\n+  [2] = 'Snippet',\n+}\n+\n+---How whitespace and indentation is handled during completion\n+---item insertion.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.InsertTextMode\n+protocol.InsertTextMode = {\n+  ['asIs'] = 1,\n+  [1] = 'asIs',\n+  ['adjustIndentation'] = 2,\n+  [2] = 'adjustIndentation',\n+}\n+\n+---A document highlight kind.\n+---@nodoc\n+---@enum lsp.DocumentHighlightKind\n+protocol.DocumentHighlightKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Read'] = 2,\n+  [2] = 'Read',\n+  ['Write'] = 3,\n+  [3] = 'Write',\n+}\n+\n+---A set of predefined code action kinds\n+---@nodoc\n+---@enum lsp.CodeActionKind\n+protocol.CodeActionKind = {\n+  ['Empty'] = '',\n+  [''] = 'Empty',\n+  ['QuickFix'] = 'quickfix',\n+  ['quickfix'] = 'QuickFix',\n+  ['Refactor'] = 'refactor',\n+  ['refactor'] = 'Refactor',\n+  ['RefactorExtract'] = 'refactor.extract',\n+  ['refactor.extract'] = 'RefactorExtract',\n+  ['RefactorInline'] = 'refactor.inline',\n+  ['refactor.inline'] = 'RefactorInline',\n+  ['RefactorMove'] = 'refactor.move',\n+  ['refactor.move'] = 'RefactorMove',\n+  ['RefactorRewrite'] = 'refactor.rewrite',\n+  ['refactor.rewrite'] = 'RefactorRewrite',\n+  ['Source'] = 'source',\n+  ['source'] = 'Source',\n+  ['SourceOrganizeImports'] = 'source.organizeImports',\n+  ['source.organizeImports'] = 'SourceOrganizeImports',\n+  ['SourceFixAll'] = 'source.fixAll',\n+  ['source.fixAll'] = 'SourceFixAll',\n+  ['Notebook'] = 'notebook',\n+  ['notebook'] = 'Notebook',\n+}\n+\n+---Code action tags are extra annotations that tweak the behavior of a code action.\n+---\n+---@since 3.18.0 - proposed\n+---@nodoc\n+---@enum lsp.CodeActionTag\n+protocol.CodeActionTag = {\n+  ['LLMGenerated'] = 1,\n+  [1] = 'LLMGenerated',\n+}\n+\n+---@nodoc\n+---@enum lsp.TraceValue\n+protocol.TraceValue = {\n+  ['Off'] = 'off',\n+  ['off'] = 'Off',\n+  ['Messages'] = 'messages',\n+  ['messages'] = 'Messages',\n+  ['Verbose'] = 'verbose',\n+  ['verbose'] = 'Verbose',\n+}\n+\n+---Describes the content type that a client supports in various\n+---result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n+---\n+---Please note that `MarkupKinds` must not start with a `$`. This kinds\n+---are reserved for internal usage.\n+---@nodoc\n+---@enum lsp.MarkupKind\n+protocol.MarkupKind = {\n+  ['PlainText'] = 'plaintext',\n+  ['plaintext'] = 'PlainText',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+}\n+\n+---Predefined Language kinds\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.LanguageKind\n+protocol.LanguageKind = {\n+  ['ABAP'] = 'abap',\n+  ['abap'] = 'ABAP',\n+  ['WindowsBat'] = 'bat',\n+  ['bat'] = 'WindowsBat',\n+  ['BibTeX'] = 'bibtex',\n+  ['bibtex'] = 'BibTeX',\n+  ['Clojure'] = 'clojure',\n+  ['clojure'] = 'Clojure',\n+  ['Coffeescript'] = 'coffeescript',\n+  ['coffeescript'] = 'Coffeescript',\n+  ['C'] = 'c',\n+  ['c'] = 'C',\n+  ['CPP'] = 'cpp',\n+  ['cpp'] = 'CPP',\n+  ['CSharp'] = 'csharp',\n+  ['csharp'] = 'CSharp',\n+  ['CSS'] = 'css',\n+  ['css'] = 'CSS',\n+  ['D'] = 'd',\n+  ['d'] = 'D',\n+  ['Delphi'] = 'pascal',\n+  ['pascal'] = 'Delphi',\n+  ['Diff'] = 'diff',\n+  ['diff'] = 'Diff',\n+  ['Dart'] = 'dart',\n+  ['dart'] = 'Dart',\n+  ['Dockerfile'] = 'dockerfile',\n+  ['dockerfile'] = 'Dockerfile',\n+  ['Elixir'] = 'elixir',\n+  ['elixir'] = 'Elixir',\n+  ['Erlang'] = 'erlang',\n+  ['erlang'] = 'Erlang',\n+  ['FSharp'] = 'fsharp',\n+  ['fsharp'] = 'FSharp',\n+  ['GitCommit'] = 'git-commit',\n+  ['git-commit'] = 'GitCommit',\n+  ['GitRebase'] = 'rebase',\n+  ['rebase'] = 'GitRebase',\n+  ['Go'] = 'go',\n+  ['go'] = 'Go',\n+  ['Groovy'] = 'groovy',\n+  ['groovy'] = 'Groovy',\n+  ['Handlebars'] = 'handlebars',\n+  ['handlebars'] = 'Handlebars',\n+  ['Haskell'] = 'haskell',\n+  ['haskell'] = 'Haskell',\n+  ['HTML'] = 'html',\n+  ['html'] = 'HTML',\n+  ['Ini'] = 'ini',\n+  ['ini'] = 'Ini',\n+  ['Java'] = 'java',\n+  ['java'] = 'Java',\n+  ['JavaScript'] = 'javascript',\n+  ['javascript'] = 'JavaScript',\n+  ['JavaScriptReact'] = 'javascriptreact',\n+  ['javascriptreact'] = 'JavaScriptReact',\n+  ['JSON'] = 'json',\n+  ['json'] = 'JSON',\n+  ['LaTeX'] = 'latex',\n+  ['latex'] = 'LaTeX',\n+  ['Less'] = 'less',\n+  ['less'] = 'Less',\n+  ['Lua'] = 'lua',\n+  ['lua'] = 'Lua',\n+  ['Makefile'] = 'makefile',\n+  ['makefile'] = 'Makefile',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+  ['ObjectiveC'] = 'objective-c',\n+  ['objective-c'] = 'ObjectiveC',\n+  ['ObjectiveCPP'] = 'objective-cpp',\n+  ['objective-cpp'] = 'ObjectiveCPP',\n+  ['Pascal'] = 'pascal',\n+  ['pascal'] = 'Pascal',\n+  ['Perl'] = 'perl',\n+  ['perl'] = 'Perl',\n+  ['Perl6'] = 'perl6',\n+  ['perl6'] = 'Perl6',\n+  ['PHP'] = 'php',\n+  ['php'] = 'PHP',\n+  ['Powershell'] = 'powershell',\n+  ['powershell'] = 'Powershell',\n+  ['Pug'] = 'jade',\n+  ['jade'] = 'Pug',\n+  ['Python'] = 'python',\n+  ['python'] = 'Python',\n+  ['R'] = 'r',\n+  ['r'] = 'R',\n+  ['Razor'] = 'razor',\n+  ['razor'] = 'Razor',\n+  ['Ruby'] = 'ruby',\n+  ['ruby'] = 'Ruby',\n+  ['Rust'] = 'rust',\n+  ['rust'] = 'Rust',\n+  ['SCSS'] = 'scss',\n+  ['scss'] = 'SCSS',\n+  ['SASS'] = 'sass',\n+  ['sass'] = 'SASS',\n+  ['Scala'] = 'scala',\n+  ['scala'] = 'Scala',\n+  ['ShaderLab'] = 'shaderlab',\n+  ['shaderlab'] = 'ShaderLab',\n+  ['ShellScript'] = 'shellscript',\n+  ['shellscript'] = 'ShellScript',\n+  ['SQL'] = 'sql',\n+  ['sql'] = 'SQL',\n+  ['Swift'] = 'swift',\n+  ['swift'] = 'Swift',\n+  ['TypeScript'] = 'typescript',\n+  ['typescript'] = 'TypeScript',\n+  ['TypeScriptReact'] = 'typescriptreact',\n+  ['typescriptreact'] = 'TypeScriptReact',\n+  ['TeX'] = 'tex',\n+  ['tex'] = 'TeX',\n+  ['VisualBasic'] = 'vb',\n+  ['vb'] = 'VisualBasic',\n+  ['XML'] = 'xml',\n+  ['xml'] = 'XML',\n+  ['XSL'] = 'xsl',\n+  ['xsl'] = 'XSL',\n+  ['YAML'] = 'yaml',\n+  ['yaml'] = 'YAML',\n+}\n+\n+---Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n+---\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.InlineCompletionTriggerKind\n+protocol.InlineCompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A set of predefined position encoding kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.PositionEncodingKind\n+protocol.PositionEncodingKind = {\n+  ['UTF8'] = 'utf-8',\n+  ['utf-8'] = 'UTF8',\n+  ['UTF16'] = 'utf-16',\n+  ['utf-16'] = 'UTF16',\n+  ['UTF32'] = 'utf-32',\n+  ['utf-32'] = 'UTF32',\n+}\n+\n+---The file event type\n+---@nodoc\n+---@enum lsp.FileChangeType\n+protocol.FileChangeType = {\n+  ['Created'] = 1,\n+  [1] = 'Created',\n+  ['Changed'] = 2,\n+  [2] = 'Changed',\n+  ['Deleted'] = 3,\n+  [3] = 'Deleted',\n+}\n+\n+---@nodoc\n+---@enum lsp.WatchKind\n+protocol.WatchKind = {\n+  ['Create'] = 1,\n+  [1] = 'Create',\n+  ['Change'] = 2,\n+  [2] = 'Change',\n+  ['Delete'] = 4,\n+  [4] = 'Delete',\n+}\n+\n+---The diagnostic's severity.\n+---@nodoc\n+---@enum lsp.DiagnosticSeverity\n+protocol.DiagnosticSeverity = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Information'] = 3,\n+  [3] = 'Information',\n+  ['Hint'] = 4,\n+  [4] = 'Hint',\n+}\n+\n+---The diagnostic tags.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.DiagnosticTag\n+protocol.DiagnosticTag = {\n+  ['Unnecessary'] = 1,\n+  [1] = 'Unnecessary',\n+  ['Deprecated'] = 2,\n+  [2] = 'Deprecated',\n+}\n+\n+---How a completion was triggered\n+---@nodoc\n+---@enum lsp.CompletionTriggerKind\n+protocol.CompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['TriggerForIncompleteCompletions'] = 3,\n+  [3] = 'TriggerForIncompleteCompletions',\n+}\n+\n+---How a signature help was triggered.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.SignatureHelpTriggerKind\n+protocol.SignatureHelpTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['ContentChange'] = 3,\n+  [3] = 'ContentChange',\n+}\n+\n+---The reason why code actions were requested.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.CodeActionTriggerKind\n+protocol.CodeActionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A pattern kind describing if a glob pattern matches a file a folder or\n+---both.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.FileOperationPatternKind\n+protocol.FileOperationPatternKind = {\n+  ['file'] = 'file',\n+  ['folder'] = 'folder',\n+}\n+\n+---A notebook cell kind.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.NotebookCellKind\n+protocol.NotebookCellKind = {\n+  ['Markup'] = 1,\n+  [1] = 'Markup',\n+  ['Code'] = 2,\n+  [2] = 'Code',\n+}\n+\n+---@nodoc\n+---@enum lsp.ResourceOperationKind\n+protocol.ResourceOperationKind = {\n+  ['Create'] = 'create',",
            "html_url": "https://github.com/neovim/neovim/pull/32215#discussion_r1934091050",
            "id": 1934091050,
            "in_reply_to_id": 1932643988,
            "line": 933,
            "node_id": "PRRC_kwDOAPphoM5zR-Mq",
            "original_commit_id": "eb4a8a9b8c5dfc8d6a36e44575394a6f4c33a190",
            "original_line": 933,
            "original_position": 1120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": 1026,
            "pull_request_review_id": 2581400414,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934091050/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-29T15:25:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934091050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32215#discussion_r1934375571"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934375571"
                }
            },
            "author_association": "MEMBER",
            "body": "Note that these are [documented as enums](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#semanticTokenTypes) in the LSP, and I wouldn't like the generation script to treat some enums differently and generate aliases for them instead. My goal with this change is autogenerating as much as we can and simplify these types.\r\n\r\n> E.g. why would anyone write `type = vim.lsp.protocol.SemanticTokenTypes.function` instead of `type = 'function'`?\r\n\r\nI think this is a personal preference. I would prefer the enum.",
            "commit_id": "8020ac5b6b032611372c4cd28e6665928b95a845",
            "created_at": "2025-01-29T18:22:02Z",
            "diff_hunk": "@@ -629,6 +326,733 @@ function protocol.resolve_capabilities(server_capabilities)\n end\n \n -- Generated by gen_lsp.lua, keep at end of file.\n+---A set of predefined token types. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenTypes\n+protocol.SemanticTokenTypes = {\n+  ['namespace'] = 'namespace',\n+  ['type'] = 'type',\n+  ['class'] = 'class',\n+  ['enum'] = 'enum',\n+  ['interface'] = 'interface',\n+  ['struct'] = 'struct',\n+  ['typeParameter'] = 'typeParameter',\n+  ['parameter'] = 'parameter',\n+  ['variable'] = 'variable',\n+  ['property'] = 'property',\n+  ['enumMember'] = 'enumMember',\n+  ['event'] = 'event',\n+  ['function'] = 'function',\n+  ['method'] = 'method',\n+  ['macro'] = 'macro',\n+  ['keyword'] = 'keyword',\n+  ['modifier'] = 'modifier',\n+  ['comment'] = 'comment',\n+  ['string'] = 'string',\n+  ['number'] = 'number',\n+  ['regexp'] = 'regexp',\n+  ['operator'] = 'operator',\n+  ['decorator'] = 'decorator',\n+  ['label'] = 'label',\n+}\n+\n+---A set of predefined token modifiers. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenModifiers\n+protocol.SemanticTokenModifiers = {\n+  ['declaration'] = 'declaration',\n+  ['definition'] = 'definition',\n+  ['readonly'] = 'readonly',\n+  ['static'] = 'static',\n+  ['deprecated'] = 'deprecated',\n+  ['abstract'] = 'abstract',\n+  ['async'] = 'async',\n+  ['modification'] = 'modification',\n+  ['documentation'] = 'documentation',\n+  ['defaultLibrary'] = 'defaultLibrary',\n+}\n+\n+---The document diagnostic report kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.DocumentDiagnosticReportKind\n+protocol.DocumentDiagnosticReportKind = {\n+  ['Full'] = 'full',\n+  ['full'] = 'Full',\n+  ['Unchanged'] = 'unchanged',\n+  ['unchanged'] = 'Unchanged',\n+}\n+\n+---Predefined error codes.\n+---@nodoc\n+---@enum lsp.ErrorCodes\n+protocol.ErrorCodes = {\n+  ['ParseError'] = -32700,\n+  [-32700] = 'ParseError',\n+  ['InvalidRequest'] = -32600,\n+  [-32600] = 'InvalidRequest',\n+  ['MethodNotFound'] = -32601,\n+  [-32601] = 'MethodNotFound',\n+  ['InvalidParams'] = -32602,\n+  [-32602] = 'InvalidParams',\n+  ['InternalError'] = -32603,\n+  [-32603] = 'InternalError',\n+  ['ServerNotInitialized'] = -32002,\n+  [-32002] = 'ServerNotInitialized',\n+  ['UnknownErrorCode'] = -32001,\n+  [-32001] = 'UnknownErrorCode',\n+}\n+\n+---@nodoc\n+---@enum lsp.LSPErrorCodes\n+protocol.LSPErrorCodes = {\n+  ['RequestFailed'] = -32803,\n+  [-32803] = 'RequestFailed',\n+  ['ServerCancelled'] = -32802,\n+  [-32802] = 'ServerCancelled',\n+  ['ContentModified'] = -32801,\n+  [-32801] = 'ContentModified',\n+  ['RequestCancelled'] = -32800,\n+  [-32800] = 'RequestCancelled',\n+}\n+\n+---A set of predefined range kinds.\n+---@nodoc\n+---@enum lsp.FoldingRangeKind\n+protocol.FoldingRangeKind = {\n+  ['Comment'] = 'comment',\n+  ['comment'] = 'Comment',\n+  ['Imports'] = 'imports',\n+  ['imports'] = 'Imports',\n+  ['Region'] = 'region',\n+  ['region'] = 'Region',\n+}\n+\n+---A symbol kind.\n+---@nodoc\n+---@enum lsp.SymbolKind\n+protocol.SymbolKind = {\n+  ['File'] = 1,\n+  [1] = 'File',\n+  ['Module'] = 2,\n+  [2] = 'Module',\n+  ['Namespace'] = 3,\n+  [3] = 'Namespace',\n+  ['Package'] = 4,\n+  [4] = 'Package',\n+  ['Class'] = 5,\n+  [5] = 'Class',\n+  ['Method'] = 6,\n+  [6] = 'Method',\n+  ['Property'] = 7,\n+  [7] = 'Property',\n+  ['Field'] = 8,\n+  [8] = 'Field',\n+  ['Constructor'] = 9,\n+  [9] = 'Constructor',\n+  ['Enum'] = 10,\n+  [10] = 'Enum',\n+  ['Interface'] = 11,\n+  [11] = 'Interface',\n+  ['Function'] = 12,\n+  [12] = 'Function',\n+  ['Variable'] = 13,\n+  [13] = 'Variable',\n+  ['Constant'] = 14,\n+  [14] = 'Constant',\n+  ['String'] = 15,\n+  [15] = 'String',\n+  ['Number'] = 16,\n+  [16] = 'Number',\n+  ['Boolean'] = 17,\n+  [17] = 'Boolean',\n+  ['Array'] = 18,\n+  [18] = 'Array',\n+  ['Object'] = 19,\n+  [19] = 'Object',\n+  ['Key'] = 20,\n+  [20] = 'Key',\n+  ['Null'] = 21,\n+  [21] = 'Null',\n+  ['EnumMember'] = 22,\n+  [22] = 'EnumMember',\n+  ['Struct'] = 23,\n+  [23] = 'Struct',\n+  ['Event'] = 24,\n+  [24] = 'Event',\n+  ['Operator'] = 25,\n+  [25] = 'Operator',\n+  ['TypeParameter'] = 26,\n+  [26] = 'TypeParameter',\n+}\n+\n+---Symbol tags are extra annotations that tweak the rendering of a symbol.\n+---\n+---@since 3.16\n+---@nodoc\n+---@enum lsp.SymbolTag\n+protocol.SymbolTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Moniker uniqueness level to define scope of the moniker.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.UniquenessLevel\n+protocol.UniquenessLevel = {\n+  ['document'] = 'document',\n+  ['project'] = 'project',\n+  ['group'] = 'group',\n+  ['scheme'] = 'scheme',\n+  ['global'] = 'global',\n+}\n+\n+---The moniker kind.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.MonikerKind\n+protocol.MonikerKind = {\n+  ['import'] = 'import',\n+  ['export'] = 'export',\n+  ['local'] = 'local',\n+}\n+\n+---Inlay hint kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.InlayHintKind\n+protocol.InlayHintKind = {\n+  ['Type'] = 1,\n+  [1] = 'Type',\n+  ['Parameter'] = 2,\n+  [2] = 'Parameter',\n+}\n+\n+---The message type\n+---@nodoc\n+---@enum lsp.MessageType\n+protocol.MessageType = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Info'] = 3,\n+  [3] = 'Info',\n+  ['Log'] = 4,\n+  [4] = 'Log',\n+  ['Debug'] = 5,\n+  [5] = 'Debug',\n+}\n+\n+---Defines how the host (editor) should sync\n+---document changes to the language server.\n+---@nodoc\n+---@enum lsp.TextDocumentSyncKind\n+protocol.TextDocumentSyncKind = {\n+  ['None'] = 0,\n+  [0] = 'None',\n+  ['Full'] = 1,\n+  [1] = 'Full',\n+  ['Incremental'] = 2,\n+  [2] = 'Incremental',\n+}\n+\n+---Represents reasons why a text document is saved.\n+---@nodoc\n+---@enum lsp.TextDocumentSaveReason\n+protocol.TextDocumentSaveReason = {\n+  ['Manual'] = 1,\n+  [1] = 'Manual',\n+  ['AfterDelay'] = 2,\n+  [2] = 'AfterDelay',\n+  ['FocusOut'] = 3,\n+  [3] = 'FocusOut',\n+}\n+\n+---The kind of a completion entry.\n+---@nodoc\n+---@enum lsp.CompletionItemKind\n+protocol.CompletionItemKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Method'] = 2,\n+  [2] = 'Method',\n+  ['Function'] = 3,\n+  [3] = 'Function',\n+  ['Constructor'] = 4,\n+  [4] = 'Constructor',\n+  ['Field'] = 5,\n+  [5] = 'Field',\n+  ['Variable'] = 6,\n+  [6] = 'Variable',\n+  ['Class'] = 7,\n+  [7] = 'Class',\n+  ['Interface'] = 8,\n+  [8] = 'Interface',\n+  ['Module'] = 9,\n+  [9] = 'Module',\n+  ['Property'] = 10,\n+  [10] = 'Property',\n+  ['Unit'] = 11,\n+  [11] = 'Unit',\n+  ['Value'] = 12,\n+  [12] = 'Value',\n+  ['Enum'] = 13,\n+  [13] = 'Enum',\n+  ['Keyword'] = 14,\n+  [14] = 'Keyword',\n+  ['Snippet'] = 15,\n+  [15] = 'Snippet',\n+  ['Color'] = 16,\n+  [16] = 'Color',\n+  ['File'] = 17,\n+  [17] = 'File',\n+  ['Reference'] = 18,\n+  [18] = 'Reference',\n+  ['Folder'] = 19,\n+  [19] = 'Folder',\n+  ['EnumMember'] = 20,\n+  [20] = 'EnumMember',\n+  ['Constant'] = 21,\n+  [21] = 'Constant',\n+  ['Struct'] = 22,\n+  [22] = 'Struct',\n+  ['Event'] = 23,\n+  [23] = 'Event',\n+  ['Operator'] = 24,\n+  [24] = 'Operator',\n+  ['TypeParameter'] = 25,\n+  [25] = 'TypeParameter',\n+}\n+\n+---Completion item tags are extra annotations that tweak the rendering of a completion\n+---item.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.CompletionItemTag\n+protocol.CompletionItemTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Defines whether the insert text in a completion item should be interpreted as\n+---plain text or a snippet.\n+---@nodoc\n+---@enum lsp.InsertTextFormat\n+protocol.InsertTextFormat = {\n+  ['PlainText'] = 1,\n+  [1] = 'PlainText',\n+  ['Snippet'] = 2,\n+  [2] = 'Snippet',\n+}\n+\n+---How whitespace and indentation is handled during completion\n+---item insertion.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.InsertTextMode\n+protocol.InsertTextMode = {\n+  ['asIs'] = 1,\n+  [1] = 'asIs',\n+  ['adjustIndentation'] = 2,\n+  [2] = 'adjustIndentation',\n+}\n+\n+---A document highlight kind.\n+---@nodoc\n+---@enum lsp.DocumentHighlightKind\n+protocol.DocumentHighlightKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Read'] = 2,\n+  [2] = 'Read',\n+  ['Write'] = 3,\n+  [3] = 'Write',\n+}\n+\n+---A set of predefined code action kinds\n+---@nodoc\n+---@enum lsp.CodeActionKind\n+protocol.CodeActionKind = {\n+  ['Empty'] = '',\n+  [''] = 'Empty',\n+  ['QuickFix'] = 'quickfix',\n+  ['quickfix'] = 'QuickFix',\n+  ['Refactor'] = 'refactor',\n+  ['refactor'] = 'Refactor',\n+  ['RefactorExtract'] = 'refactor.extract',\n+  ['refactor.extract'] = 'RefactorExtract',\n+  ['RefactorInline'] = 'refactor.inline',\n+  ['refactor.inline'] = 'RefactorInline',\n+  ['RefactorMove'] = 'refactor.move',\n+  ['refactor.move'] = 'RefactorMove',\n+  ['RefactorRewrite'] = 'refactor.rewrite',\n+  ['refactor.rewrite'] = 'RefactorRewrite',\n+  ['Source'] = 'source',\n+  ['source'] = 'Source',\n+  ['SourceOrganizeImports'] = 'source.organizeImports',\n+  ['source.organizeImports'] = 'SourceOrganizeImports',\n+  ['SourceFixAll'] = 'source.fixAll',\n+  ['source.fixAll'] = 'SourceFixAll',\n+  ['Notebook'] = 'notebook',\n+  ['notebook'] = 'Notebook',\n+}\n+\n+---Code action tags are extra annotations that tweak the behavior of a code action.\n+---\n+---@since 3.18.0 - proposed\n+---@nodoc\n+---@enum lsp.CodeActionTag\n+protocol.CodeActionTag = {\n+  ['LLMGenerated'] = 1,\n+  [1] = 'LLMGenerated',\n+}\n+\n+---@nodoc\n+---@enum lsp.TraceValue\n+protocol.TraceValue = {\n+  ['Off'] = 'off',\n+  ['off'] = 'Off',\n+  ['Messages'] = 'messages',\n+  ['messages'] = 'Messages',\n+  ['Verbose'] = 'verbose',\n+  ['verbose'] = 'Verbose',\n+}\n+\n+---Describes the content type that a client supports in various\n+---result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n+---\n+---Please note that `MarkupKinds` must not start with a `$`. This kinds\n+---are reserved for internal usage.\n+---@nodoc\n+---@enum lsp.MarkupKind\n+protocol.MarkupKind = {\n+  ['PlainText'] = 'plaintext',\n+  ['plaintext'] = 'PlainText',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+}\n+\n+---Predefined Language kinds\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.LanguageKind\n+protocol.LanguageKind = {\n+  ['ABAP'] = 'abap',\n+  ['abap'] = 'ABAP',\n+  ['WindowsBat'] = 'bat',\n+  ['bat'] = 'WindowsBat',\n+  ['BibTeX'] = 'bibtex',\n+  ['bibtex'] = 'BibTeX',\n+  ['Clojure'] = 'clojure',\n+  ['clojure'] = 'Clojure',\n+  ['Coffeescript'] = 'coffeescript',\n+  ['coffeescript'] = 'Coffeescript',\n+  ['C'] = 'c',\n+  ['c'] = 'C',\n+  ['CPP'] = 'cpp',\n+  ['cpp'] = 'CPP',\n+  ['CSharp'] = 'csharp',\n+  ['csharp'] = 'CSharp',\n+  ['CSS'] = 'css',\n+  ['css'] = 'CSS',\n+  ['D'] = 'd',\n+  ['d'] = 'D',\n+  ['Delphi'] = 'pascal',\n+  ['pascal'] = 'Delphi',\n+  ['Diff'] = 'diff',\n+  ['diff'] = 'Diff',\n+  ['Dart'] = 'dart',\n+  ['dart'] = 'Dart',\n+  ['Dockerfile'] = 'dockerfile',\n+  ['dockerfile'] = 'Dockerfile',\n+  ['Elixir'] = 'elixir',\n+  ['elixir'] = 'Elixir',\n+  ['Erlang'] = 'erlang',\n+  ['erlang'] = 'Erlang',\n+  ['FSharp'] = 'fsharp',\n+  ['fsharp'] = 'FSharp',\n+  ['GitCommit'] = 'git-commit',\n+  ['git-commit'] = 'GitCommit',\n+  ['GitRebase'] = 'rebase',\n+  ['rebase'] = 'GitRebase',\n+  ['Go'] = 'go',\n+  ['go'] = 'Go',\n+  ['Groovy'] = 'groovy',\n+  ['groovy'] = 'Groovy',\n+  ['Handlebars'] = 'handlebars',\n+  ['handlebars'] = 'Handlebars',\n+  ['Haskell'] = 'haskell',\n+  ['haskell'] = 'Haskell',\n+  ['HTML'] = 'html',\n+  ['html'] = 'HTML',\n+  ['Ini'] = 'ini',\n+  ['ini'] = 'Ini',\n+  ['Java'] = 'java',\n+  ['java'] = 'Java',\n+  ['JavaScript'] = 'javascript',\n+  ['javascript'] = 'JavaScript',\n+  ['JavaScriptReact'] = 'javascriptreact',\n+  ['javascriptreact'] = 'JavaScriptReact',\n+  ['JSON'] = 'json',\n+  ['json'] = 'JSON',\n+  ['LaTeX'] = 'latex',\n+  ['latex'] = 'LaTeX',\n+  ['Less'] = 'less',\n+  ['less'] = 'Less',\n+  ['Lua'] = 'lua',\n+  ['lua'] = 'Lua',\n+  ['Makefile'] = 'makefile',\n+  ['makefile'] = 'Makefile',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+  ['ObjectiveC'] = 'objective-c',\n+  ['objective-c'] = 'ObjectiveC',\n+  ['ObjectiveCPP'] = 'objective-cpp',\n+  ['objective-cpp'] = 'ObjectiveCPP',\n+  ['Pascal'] = 'pascal',\n+  ['pascal'] = 'Pascal',\n+  ['Perl'] = 'perl',\n+  ['perl'] = 'Perl',\n+  ['Perl6'] = 'perl6',\n+  ['perl6'] = 'Perl6',\n+  ['PHP'] = 'php',\n+  ['php'] = 'PHP',\n+  ['Powershell'] = 'powershell',\n+  ['powershell'] = 'Powershell',\n+  ['Pug'] = 'jade',\n+  ['jade'] = 'Pug',\n+  ['Python'] = 'python',\n+  ['python'] = 'Python',\n+  ['R'] = 'r',\n+  ['r'] = 'R',\n+  ['Razor'] = 'razor',\n+  ['razor'] = 'Razor',\n+  ['Ruby'] = 'ruby',\n+  ['ruby'] = 'Ruby',\n+  ['Rust'] = 'rust',\n+  ['rust'] = 'Rust',\n+  ['SCSS'] = 'scss',\n+  ['scss'] = 'SCSS',\n+  ['SASS'] = 'sass',\n+  ['sass'] = 'SASS',\n+  ['Scala'] = 'scala',\n+  ['scala'] = 'Scala',\n+  ['ShaderLab'] = 'shaderlab',\n+  ['shaderlab'] = 'ShaderLab',\n+  ['ShellScript'] = 'shellscript',\n+  ['shellscript'] = 'ShellScript',\n+  ['SQL'] = 'sql',\n+  ['sql'] = 'SQL',\n+  ['Swift'] = 'swift',\n+  ['swift'] = 'Swift',\n+  ['TypeScript'] = 'typescript',\n+  ['typescript'] = 'TypeScript',\n+  ['TypeScriptReact'] = 'typescriptreact',\n+  ['typescriptreact'] = 'TypeScriptReact',\n+  ['TeX'] = 'tex',\n+  ['tex'] = 'TeX',\n+  ['VisualBasic'] = 'vb',\n+  ['vb'] = 'VisualBasic',\n+  ['XML'] = 'xml',\n+  ['xml'] = 'XML',\n+  ['XSL'] = 'xsl',\n+  ['xsl'] = 'XSL',\n+  ['YAML'] = 'yaml',\n+  ['yaml'] = 'YAML',\n+}\n+\n+---Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n+---\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.InlineCompletionTriggerKind\n+protocol.InlineCompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A set of predefined position encoding kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.PositionEncodingKind\n+protocol.PositionEncodingKind = {\n+  ['UTF8'] = 'utf-8',\n+  ['utf-8'] = 'UTF8',\n+  ['UTF16'] = 'utf-16',\n+  ['utf-16'] = 'UTF16',\n+  ['UTF32'] = 'utf-32',\n+  ['utf-32'] = 'UTF32',\n+}\n+\n+---The file event type\n+---@nodoc\n+---@enum lsp.FileChangeType\n+protocol.FileChangeType = {\n+  ['Created'] = 1,\n+  [1] = 'Created',\n+  ['Changed'] = 2,\n+  [2] = 'Changed',\n+  ['Deleted'] = 3,\n+  [3] = 'Deleted',\n+}\n+\n+---@nodoc\n+---@enum lsp.WatchKind\n+protocol.WatchKind = {\n+  ['Create'] = 1,\n+  [1] = 'Create',\n+  ['Change'] = 2,\n+  [2] = 'Change',\n+  ['Delete'] = 4,\n+  [4] = 'Delete',\n+}\n+\n+---The diagnostic's severity.\n+---@nodoc\n+---@enum lsp.DiagnosticSeverity\n+protocol.DiagnosticSeverity = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Information'] = 3,\n+  [3] = 'Information',\n+  ['Hint'] = 4,\n+  [4] = 'Hint',\n+}\n+\n+---The diagnostic tags.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.DiagnosticTag\n+protocol.DiagnosticTag = {\n+  ['Unnecessary'] = 1,\n+  [1] = 'Unnecessary',\n+  ['Deprecated'] = 2,\n+  [2] = 'Deprecated',\n+}\n+\n+---How a completion was triggered\n+---@nodoc\n+---@enum lsp.CompletionTriggerKind\n+protocol.CompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['TriggerForIncompleteCompletions'] = 3,\n+  [3] = 'TriggerForIncompleteCompletions',\n+}\n+\n+---How a signature help was triggered.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.SignatureHelpTriggerKind\n+protocol.SignatureHelpTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['ContentChange'] = 3,\n+  [3] = 'ContentChange',\n+}\n+\n+---The reason why code actions were requested.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.CodeActionTriggerKind\n+protocol.CodeActionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A pattern kind describing if a glob pattern matches a file a folder or\n+---both.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.FileOperationPatternKind\n+protocol.FileOperationPatternKind = {\n+  ['file'] = 'file',\n+  ['folder'] = 'folder',\n+}\n+\n+---A notebook cell kind.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.NotebookCellKind\n+protocol.NotebookCellKind = {\n+  ['Markup'] = 1,\n+  [1] = 'Markup',\n+  ['Code'] = 2,\n+  [2] = 'Code',\n+}\n+\n+---@nodoc\n+---@enum lsp.ResourceOperationKind\n+protocol.ResourceOperationKind = {\n+  ['Create'] = 'create',",
            "html_url": "https://github.com/neovim/neovim/pull/32215#discussion_r1934375571",
            "id": 1934375571,
            "in_reply_to_id": 1932643988,
            "line": 933,
            "node_id": "PRRC_kwDOAPphoM5zTDqT",
            "original_commit_id": "eb4a8a9b8c5dfc8d6a36e44575394a6f4c33a190",
            "original_line": 933,
            "original_position": 1120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": 1026,
            "pull_request_review_id": 2581869747,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934375571/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-29T18:22:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934375571",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32215#discussion_r1934384312"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934384312"
                }
            },
            "author_association": "MEMBER",
            "body": "In that case I prefer what the script did before with all types being maintained in meta files so they have zero impact at runtime.",
            "commit_id": "8020ac5b6b032611372c4cd28e6665928b95a845",
            "created_at": "2025-01-29T18:29:15Z",
            "diff_hunk": "@@ -629,6 +326,733 @@ function protocol.resolve_capabilities(server_capabilities)\n end\n \n -- Generated by gen_lsp.lua, keep at end of file.\n+---A set of predefined token types. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenTypes\n+protocol.SemanticTokenTypes = {\n+  ['namespace'] = 'namespace',\n+  ['type'] = 'type',\n+  ['class'] = 'class',\n+  ['enum'] = 'enum',\n+  ['interface'] = 'interface',\n+  ['struct'] = 'struct',\n+  ['typeParameter'] = 'typeParameter',\n+  ['parameter'] = 'parameter',\n+  ['variable'] = 'variable',\n+  ['property'] = 'property',\n+  ['enumMember'] = 'enumMember',\n+  ['event'] = 'event',\n+  ['function'] = 'function',\n+  ['method'] = 'method',\n+  ['macro'] = 'macro',\n+  ['keyword'] = 'keyword',\n+  ['modifier'] = 'modifier',\n+  ['comment'] = 'comment',\n+  ['string'] = 'string',\n+  ['number'] = 'number',\n+  ['regexp'] = 'regexp',\n+  ['operator'] = 'operator',\n+  ['decorator'] = 'decorator',\n+  ['label'] = 'label',\n+}\n+\n+---A set of predefined token modifiers. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenModifiers\n+protocol.SemanticTokenModifiers = {\n+  ['declaration'] = 'declaration',\n+  ['definition'] = 'definition',\n+  ['readonly'] = 'readonly',\n+  ['static'] = 'static',\n+  ['deprecated'] = 'deprecated',\n+  ['abstract'] = 'abstract',\n+  ['async'] = 'async',\n+  ['modification'] = 'modification',\n+  ['documentation'] = 'documentation',\n+  ['defaultLibrary'] = 'defaultLibrary',\n+}\n+\n+---The document diagnostic report kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.DocumentDiagnosticReportKind\n+protocol.DocumentDiagnosticReportKind = {\n+  ['Full'] = 'full',\n+  ['full'] = 'Full',\n+  ['Unchanged'] = 'unchanged',\n+  ['unchanged'] = 'Unchanged',\n+}\n+\n+---Predefined error codes.\n+---@nodoc\n+---@enum lsp.ErrorCodes\n+protocol.ErrorCodes = {\n+  ['ParseError'] = -32700,\n+  [-32700] = 'ParseError',\n+  ['InvalidRequest'] = -32600,\n+  [-32600] = 'InvalidRequest',\n+  ['MethodNotFound'] = -32601,\n+  [-32601] = 'MethodNotFound',\n+  ['InvalidParams'] = -32602,\n+  [-32602] = 'InvalidParams',\n+  ['InternalError'] = -32603,\n+  [-32603] = 'InternalError',\n+  ['ServerNotInitialized'] = -32002,\n+  [-32002] = 'ServerNotInitialized',\n+  ['UnknownErrorCode'] = -32001,\n+  [-32001] = 'UnknownErrorCode',\n+}\n+\n+---@nodoc\n+---@enum lsp.LSPErrorCodes\n+protocol.LSPErrorCodes = {\n+  ['RequestFailed'] = -32803,\n+  [-32803] = 'RequestFailed',\n+  ['ServerCancelled'] = -32802,\n+  [-32802] = 'ServerCancelled',\n+  ['ContentModified'] = -32801,\n+  [-32801] = 'ContentModified',\n+  ['RequestCancelled'] = -32800,\n+  [-32800] = 'RequestCancelled',\n+}\n+\n+---A set of predefined range kinds.\n+---@nodoc\n+---@enum lsp.FoldingRangeKind\n+protocol.FoldingRangeKind = {\n+  ['Comment'] = 'comment',\n+  ['comment'] = 'Comment',\n+  ['Imports'] = 'imports',\n+  ['imports'] = 'Imports',\n+  ['Region'] = 'region',\n+  ['region'] = 'Region',\n+}\n+\n+---A symbol kind.\n+---@nodoc\n+---@enum lsp.SymbolKind\n+protocol.SymbolKind = {\n+  ['File'] = 1,\n+  [1] = 'File',\n+  ['Module'] = 2,\n+  [2] = 'Module',\n+  ['Namespace'] = 3,\n+  [3] = 'Namespace',\n+  ['Package'] = 4,\n+  [4] = 'Package',\n+  ['Class'] = 5,\n+  [5] = 'Class',\n+  ['Method'] = 6,\n+  [6] = 'Method',\n+  ['Property'] = 7,\n+  [7] = 'Property',\n+  ['Field'] = 8,\n+  [8] = 'Field',\n+  ['Constructor'] = 9,\n+  [9] = 'Constructor',\n+  ['Enum'] = 10,\n+  [10] = 'Enum',\n+  ['Interface'] = 11,\n+  [11] = 'Interface',\n+  ['Function'] = 12,\n+  [12] = 'Function',\n+  ['Variable'] = 13,\n+  [13] = 'Variable',\n+  ['Constant'] = 14,\n+  [14] = 'Constant',\n+  ['String'] = 15,\n+  [15] = 'String',\n+  ['Number'] = 16,\n+  [16] = 'Number',\n+  ['Boolean'] = 17,\n+  [17] = 'Boolean',\n+  ['Array'] = 18,\n+  [18] = 'Array',\n+  ['Object'] = 19,\n+  [19] = 'Object',\n+  ['Key'] = 20,\n+  [20] = 'Key',\n+  ['Null'] = 21,\n+  [21] = 'Null',\n+  ['EnumMember'] = 22,\n+  [22] = 'EnumMember',\n+  ['Struct'] = 23,\n+  [23] = 'Struct',\n+  ['Event'] = 24,\n+  [24] = 'Event',\n+  ['Operator'] = 25,\n+  [25] = 'Operator',\n+  ['TypeParameter'] = 26,\n+  [26] = 'TypeParameter',\n+}\n+\n+---Symbol tags are extra annotations that tweak the rendering of a symbol.\n+---\n+---@since 3.16\n+---@nodoc\n+---@enum lsp.SymbolTag\n+protocol.SymbolTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Moniker uniqueness level to define scope of the moniker.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.UniquenessLevel\n+protocol.UniquenessLevel = {\n+  ['document'] = 'document',\n+  ['project'] = 'project',\n+  ['group'] = 'group',\n+  ['scheme'] = 'scheme',\n+  ['global'] = 'global',\n+}\n+\n+---The moniker kind.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.MonikerKind\n+protocol.MonikerKind = {\n+  ['import'] = 'import',\n+  ['export'] = 'export',\n+  ['local'] = 'local',\n+}\n+\n+---Inlay hint kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.InlayHintKind\n+protocol.InlayHintKind = {\n+  ['Type'] = 1,\n+  [1] = 'Type',\n+  ['Parameter'] = 2,\n+  [2] = 'Parameter',\n+}\n+\n+---The message type\n+---@nodoc\n+---@enum lsp.MessageType\n+protocol.MessageType = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Info'] = 3,\n+  [3] = 'Info',\n+  ['Log'] = 4,\n+  [4] = 'Log',\n+  ['Debug'] = 5,\n+  [5] = 'Debug',\n+}\n+\n+---Defines how the host (editor) should sync\n+---document changes to the language server.\n+---@nodoc\n+---@enum lsp.TextDocumentSyncKind\n+protocol.TextDocumentSyncKind = {\n+  ['None'] = 0,\n+  [0] = 'None',\n+  ['Full'] = 1,\n+  [1] = 'Full',\n+  ['Incremental'] = 2,\n+  [2] = 'Incremental',\n+}\n+\n+---Represents reasons why a text document is saved.\n+---@nodoc\n+---@enum lsp.TextDocumentSaveReason\n+protocol.TextDocumentSaveReason = {\n+  ['Manual'] = 1,\n+  [1] = 'Manual',\n+  ['AfterDelay'] = 2,\n+  [2] = 'AfterDelay',\n+  ['FocusOut'] = 3,\n+  [3] = 'FocusOut',\n+}\n+\n+---The kind of a completion entry.\n+---@nodoc\n+---@enum lsp.CompletionItemKind\n+protocol.CompletionItemKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Method'] = 2,\n+  [2] = 'Method',\n+  ['Function'] = 3,\n+  [3] = 'Function',\n+  ['Constructor'] = 4,\n+  [4] = 'Constructor',\n+  ['Field'] = 5,\n+  [5] = 'Field',\n+  ['Variable'] = 6,\n+  [6] = 'Variable',\n+  ['Class'] = 7,\n+  [7] = 'Class',\n+  ['Interface'] = 8,\n+  [8] = 'Interface',\n+  ['Module'] = 9,\n+  [9] = 'Module',\n+  ['Property'] = 10,\n+  [10] = 'Property',\n+  ['Unit'] = 11,\n+  [11] = 'Unit',\n+  ['Value'] = 12,\n+  [12] = 'Value',\n+  ['Enum'] = 13,\n+  [13] = 'Enum',\n+  ['Keyword'] = 14,\n+  [14] = 'Keyword',\n+  ['Snippet'] = 15,\n+  [15] = 'Snippet',\n+  ['Color'] = 16,\n+  [16] = 'Color',\n+  ['File'] = 17,\n+  [17] = 'File',\n+  ['Reference'] = 18,\n+  [18] = 'Reference',\n+  ['Folder'] = 19,\n+  [19] = 'Folder',\n+  ['EnumMember'] = 20,\n+  [20] = 'EnumMember',\n+  ['Constant'] = 21,\n+  [21] = 'Constant',\n+  ['Struct'] = 22,\n+  [22] = 'Struct',\n+  ['Event'] = 23,\n+  [23] = 'Event',\n+  ['Operator'] = 24,\n+  [24] = 'Operator',\n+  ['TypeParameter'] = 25,\n+  [25] = 'TypeParameter',\n+}\n+\n+---Completion item tags are extra annotations that tweak the rendering of a completion\n+---item.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.CompletionItemTag\n+protocol.CompletionItemTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Defines whether the insert text in a completion item should be interpreted as\n+---plain text or a snippet.\n+---@nodoc\n+---@enum lsp.InsertTextFormat\n+protocol.InsertTextFormat = {\n+  ['PlainText'] = 1,\n+  [1] = 'PlainText',\n+  ['Snippet'] = 2,\n+  [2] = 'Snippet',\n+}\n+\n+---How whitespace and indentation is handled during completion\n+---item insertion.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.InsertTextMode\n+protocol.InsertTextMode = {\n+  ['asIs'] = 1,\n+  [1] = 'asIs',\n+  ['adjustIndentation'] = 2,\n+  [2] = 'adjustIndentation',\n+}\n+\n+---A document highlight kind.\n+---@nodoc\n+---@enum lsp.DocumentHighlightKind\n+protocol.DocumentHighlightKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Read'] = 2,\n+  [2] = 'Read',\n+  ['Write'] = 3,\n+  [3] = 'Write',\n+}\n+\n+---A set of predefined code action kinds\n+---@nodoc\n+---@enum lsp.CodeActionKind\n+protocol.CodeActionKind = {\n+  ['Empty'] = '',\n+  [''] = 'Empty',\n+  ['QuickFix'] = 'quickfix',\n+  ['quickfix'] = 'QuickFix',\n+  ['Refactor'] = 'refactor',\n+  ['refactor'] = 'Refactor',\n+  ['RefactorExtract'] = 'refactor.extract',\n+  ['refactor.extract'] = 'RefactorExtract',\n+  ['RefactorInline'] = 'refactor.inline',\n+  ['refactor.inline'] = 'RefactorInline',\n+  ['RefactorMove'] = 'refactor.move',\n+  ['refactor.move'] = 'RefactorMove',\n+  ['RefactorRewrite'] = 'refactor.rewrite',\n+  ['refactor.rewrite'] = 'RefactorRewrite',\n+  ['Source'] = 'source',\n+  ['source'] = 'Source',\n+  ['SourceOrganizeImports'] = 'source.organizeImports',\n+  ['source.organizeImports'] = 'SourceOrganizeImports',\n+  ['SourceFixAll'] = 'source.fixAll',\n+  ['source.fixAll'] = 'SourceFixAll',\n+  ['Notebook'] = 'notebook',\n+  ['notebook'] = 'Notebook',\n+}\n+\n+---Code action tags are extra annotations that tweak the behavior of a code action.\n+---\n+---@since 3.18.0 - proposed\n+---@nodoc\n+---@enum lsp.CodeActionTag\n+protocol.CodeActionTag = {\n+  ['LLMGenerated'] = 1,\n+  [1] = 'LLMGenerated',\n+}\n+\n+---@nodoc\n+---@enum lsp.TraceValue\n+protocol.TraceValue = {\n+  ['Off'] = 'off',\n+  ['off'] = 'Off',\n+  ['Messages'] = 'messages',\n+  ['messages'] = 'Messages',\n+  ['Verbose'] = 'verbose',\n+  ['verbose'] = 'Verbose',\n+}\n+\n+---Describes the content type that a client supports in various\n+---result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n+---\n+---Please note that `MarkupKinds` must not start with a `$`. This kinds\n+---are reserved for internal usage.\n+---@nodoc\n+---@enum lsp.MarkupKind\n+protocol.MarkupKind = {\n+  ['PlainText'] = 'plaintext',\n+  ['plaintext'] = 'PlainText',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+}\n+\n+---Predefined Language kinds\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.LanguageKind\n+protocol.LanguageKind = {\n+  ['ABAP'] = 'abap',\n+  ['abap'] = 'ABAP',\n+  ['WindowsBat'] = 'bat',\n+  ['bat'] = 'WindowsBat',\n+  ['BibTeX'] = 'bibtex',\n+  ['bibtex'] = 'BibTeX',\n+  ['Clojure'] = 'clojure',\n+  ['clojure'] = 'Clojure',\n+  ['Coffeescript'] = 'coffeescript',\n+  ['coffeescript'] = 'Coffeescript',\n+  ['C'] = 'c',\n+  ['c'] = 'C',\n+  ['CPP'] = 'cpp',\n+  ['cpp'] = 'CPP',\n+  ['CSharp'] = 'csharp',\n+  ['csharp'] = 'CSharp',\n+  ['CSS'] = 'css',\n+  ['css'] = 'CSS',\n+  ['D'] = 'd',\n+  ['d'] = 'D',\n+  ['Delphi'] = 'pascal',\n+  ['pascal'] = 'Delphi',\n+  ['Diff'] = 'diff',\n+  ['diff'] = 'Diff',\n+  ['Dart'] = 'dart',\n+  ['dart'] = 'Dart',\n+  ['Dockerfile'] = 'dockerfile',\n+  ['dockerfile'] = 'Dockerfile',\n+  ['Elixir'] = 'elixir',\n+  ['elixir'] = 'Elixir',\n+  ['Erlang'] = 'erlang',\n+  ['erlang'] = 'Erlang',\n+  ['FSharp'] = 'fsharp',\n+  ['fsharp'] = 'FSharp',\n+  ['GitCommit'] = 'git-commit',\n+  ['git-commit'] = 'GitCommit',\n+  ['GitRebase'] = 'rebase',\n+  ['rebase'] = 'GitRebase',\n+  ['Go'] = 'go',\n+  ['go'] = 'Go',\n+  ['Groovy'] = 'groovy',\n+  ['groovy'] = 'Groovy',\n+  ['Handlebars'] = 'handlebars',\n+  ['handlebars'] = 'Handlebars',\n+  ['Haskell'] = 'haskell',\n+  ['haskell'] = 'Haskell',\n+  ['HTML'] = 'html',\n+  ['html'] = 'HTML',\n+  ['Ini'] = 'ini',\n+  ['ini'] = 'Ini',\n+  ['Java'] = 'java',\n+  ['java'] = 'Java',\n+  ['JavaScript'] = 'javascript',\n+  ['javascript'] = 'JavaScript',\n+  ['JavaScriptReact'] = 'javascriptreact',\n+  ['javascriptreact'] = 'JavaScriptReact',\n+  ['JSON'] = 'json',\n+  ['json'] = 'JSON',\n+  ['LaTeX'] = 'latex',\n+  ['latex'] = 'LaTeX',\n+  ['Less'] = 'less',\n+  ['less'] = 'Less',\n+  ['Lua'] = 'lua',\n+  ['lua'] = 'Lua',\n+  ['Makefile'] = 'makefile',\n+  ['makefile'] = 'Makefile',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+  ['ObjectiveC'] = 'objective-c',\n+  ['objective-c'] = 'ObjectiveC',\n+  ['ObjectiveCPP'] = 'objective-cpp',\n+  ['objective-cpp'] = 'ObjectiveCPP',\n+  ['Pascal'] = 'pascal',\n+  ['pascal'] = 'Pascal',\n+  ['Perl'] = 'perl',\n+  ['perl'] = 'Perl',\n+  ['Perl6'] = 'perl6',\n+  ['perl6'] = 'Perl6',\n+  ['PHP'] = 'php',\n+  ['php'] = 'PHP',\n+  ['Powershell'] = 'powershell',\n+  ['powershell'] = 'Powershell',\n+  ['Pug'] = 'jade',\n+  ['jade'] = 'Pug',\n+  ['Python'] = 'python',\n+  ['python'] = 'Python',\n+  ['R'] = 'r',\n+  ['r'] = 'R',\n+  ['Razor'] = 'razor',\n+  ['razor'] = 'Razor',\n+  ['Ruby'] = 'ruby',\n+  ['ruby'] = 'Ruby',\n+  ['Rust'] = 'rust',\n+  ['rust'] = 'Rust',\n+  ['SCSS'] = 'scss',\n+  ['scss'] = 'SCSS',\n+  ['SASS'] = 'sass',\n+  ['sass'] = 'SASS',\n+  ['Scala'] = 'scala',\n+  ['scala'] = 'Scala',\n+  ['ShaderLab'] = 'shaderlab',\n+  ['shaderlab'] = 'ShaderLab',\n+  ['ShellScript'] = 'shellscript',\n+  ['shellscript'] = 'ShellScript',\n+  ['SQL'] = 'sql',\n+  ['sql'] = 'SQL',\n+  ['Swift'] = 'swift',\n+  ['swift'] = 'Swift',\n+  ['TypeScript'] = 'typescript',\n+  ['typescript'] = 'TypeScript',\n+  ['TypeScriptReact'] = 'typescriptreact',\n+  ['typescriptreact'] = 'TypeScriptReact',\n+  ['TeX'] = 'tex',\n+  ['tex'] = 'TeX',\n+  ['VisualBasic'] = 'vb',\n+  ['vb'] = 'VisualBasic',\n+  ['XML'] = 'xml',\n+  ['xml'] = 'XML',\n+  ['XSL'] = 'xsl',\n+  ['xsl'] = 'XSL',\n+  ['YAML'] = 'yaml',\n+  ['yaml'] = 'YAML',\n+}\n+\n+---Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n+---\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.InlineCompletionTriggerKind\n+protocol.InlineCompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A set of predefined position encoding kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.PositionEncodingKind\n+protocol.PositionEncodingKind = {\n+  ['UTF8'] = 'utf-8',\n+  ['utf-8'] = 'UTF8',\n+  ['UTF16'] = 'utf-16',\n+  ['utf-16'] = 'UTF16',\n+  ['UTF32'] = 'utf-32',\n+  ['utf-32'] = 'UTF32',\n+}\n+\n+---The file event type\n+---@nodoc\n+---@enum lsp.FileChangeType\n+protocol.FileChangeType = {\n+  ['Created'] = 1,\n+  [1] = 'Created',\n+  ['Changed'] = 2,\n+  [2] = 'Changed',\n+  ['Deleted'] = 3,\n+  [3] = 'Deleted',\n+}\n+\n+---@nodoc\n+---@enum lsp.WatchKind\n+protocol.WatchKind = {\n+  ['Create'] = 1,\n+  [1] = 'Create',\n+  ['Change'] = 2,\n+  [2] = 'Change',\n+  ['Delete'] = 4,\n+  [4] = 'Delete',\n+}\n+\n+---The diagnostic's severity.\n+---@nodoc\n+---@enum lsp.DiagnosticSeverity\n+protocol.DiagnosticSeverity = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Information'] = 3,\n+  [3] = 'Information',\n+  ['Hint'] = 4,\n+  [4] = 'Hint',\n+}\n+\n+---The diagnostic tags.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.DiagnosticTag\n+protocol.DiagnosticTag = {\n+  ['Unnecessary'] = 1,\n+  [1] = 'Unnecessary',\n+  ['Deprecated'] = 2,\n+  [2] = 'Deprecated',\n+}\n+\n+---How a completion was triggered\n+---@nodoc\n+---@enum lsp.CompletionTriggerKind\n+protocol.CompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['TriggerForIncompleteCompletions'] = 3,\n+  [3] = 'TriggerForIncompleteCompletions',\n+}\n+\n+---How a signature help was triggered.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.SignatureHelpTriggerKind\n+protocol.SignatureHelpTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['ContentChange'] = 3,\n+  [3] = 'ContentChange',\n+}\n+\n+---The reason why code actions were requested.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.CodeActionTriggerKind\n+protocol.CodeActionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A pattern kind describing if a glob pattern matches a file a folder or\n+---both.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.FileOperationPatternKind\n+protocol.FileOperationPatternKind = {\n+  ['file'] = 'file',\n+  ['folder'] = 'folder',\n+}\n+\n+---A notebook cell kind.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.NotebookCellKind\n+protocol.NotebookCellKind = {\n+  ['Markup'] = 1,\n+  [1] = 'Markup',\n+  ['Code'] = 2,\n+  [2] = 'Code',\n+}\n+\n+---@nodoc\n+---@enum lsp.ResourceOperationKind\n+protocol.ResourceOperationKind = {\n+  ['Create'] = 'create',",
            "html_url": "https://github.com/neovim/neovim/pull/32215#discussion_r1934384312",
            "id": 1934384312,
            "in_reply_to_id": 1932643988,
            "line": 933,
            "node_id": "PRRC_kwDOAPphoM5zTFy4",
            "original_commit_id": "eb4a8a9b8c5dfc8d6a36e44575394a6f4c33a190",
            "original_line": 933,
            "original_position": 1120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": 1026,
            "pull_request_review_id": 2581883956,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934384312/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-29T18:32:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934384312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32215#discussion_r1934441455"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32215"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934441455"
                }
            },
            "author_association": "MEMBER",
            "body": "Well then I’ll just close this PR and won’t waste my time fixing tests.",
            "commit_id": "8020ac5b6b032611372c4cd28e6665928b95a845",
            "created_at": "2025-01-29T19:13:06Z",
            "diff_hunk": "@@ -629,6 +326,733 @@ function protocol.resolve_capabilities(server_capabilities)\n end\n \n -- Generated by gen_lsp.lua, keep at end of file.\n+---A set of predefined token types. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenTypes\n+protocol.SemanticTokenTypes = {\n+  ['namespace'] = 'namespace',\n+  ['type'] = 'type',\n+  ['class'] = 'class',\n+  ['enum'] = 'enum',\n+  ['interface'] = 'interface',\n+  ['struct'] = 'struct',\n+  ['typeParameter'] = 'typeParameter',\n+  ['parameter'] = 'parameter',\n+  ['variable'] = 'variable',\n+  ['property'] = 'property',\n+  ['enumMember'] = 'enumMember',\n+  ['event'] = 'event',\n+  ['function'] = 'function',\n+  ['method'] = 'method',\n+  ['macro'] = 'macro',\n+  ['keyword'] = 'keyword',\n+  ['modifier'] = 'modifier',\n+  ['comment'] = 'comment',\n+  ['string'] = 'string',\n+  ['number'] = 'number',\n+  ['regexp'] = 'regexp',\n+  ['operator'] = 'operator',\n+  ['decorator'] = 'decorator',\n+  ['label'] = 'label',\n+}\n+\n+---A set of predefined token modifiers. This set is not fixed\n+---an clients can specify additional token types via the\n+---corresponding client capabilities.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.SemanticTokenModifiers\n+protocol.SemanticTokenModifiers = {\n+  ['declaration'] = 'declaration',\n+  ['definition'] = 'definition',\n+  ['readonly'] = 'readonly',\n+  ['static'] = 'static',\n+  ['deprecated'] = 'deprecated',\n+  ['abstract'] = 'abstract',\n+  ['async'] = 'async',\n+  ['modification'] = 'modification',\n+  ['documentation'] = 'documentation',\n+  ['defaultLibrary'] = 'defaultLibrary',\n+}\n+\n+---The document diagnostic report kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.DocumentDiagnosticReportKind\n+protocol.DocumentDiagnosticReportKind = {\n+  ['Full'] = 'full',\n+  ['full'] = 'Full',\n+  ['Unchanged'] = 'unchanged',\n+  ['unchanged'] = 'Unchanged',\n+}\n+\n+---Predefined error codes.\n+---@nodoc\n+---@enum lsp.ErrorCodes\n+protocol.ErrorCodes = {\n+  ['ParseError'] = -32700,\n+  [-32700] = 'ParseError',\n+  ['InvalidRequest'] = -32600,\n+  [-32600] = 'InvalidRequest',\n+  ['MethodNotFound'] = -32601,\n+  [-32601] = 'MethodNotFound',\n+  ['InvalidParams'] = -32602,\n+  [-32602] = 'InvalidParams',\n+  ['InternalError'] = -32603,\n+  [-32603] = 'InternalError',\n+  ['ServerNotInitialized'] = -32002,\n+  [-32002] = 'ServerNotInitialized',\n+  ['UnknownErrorCode'] = -32001,\n+  [-32001] = 'UnknownErrorCode',\n+}\n+\n+---@nodoc\n+---@enum lsp.LSPErrorCodes\n+protocol.LSPErrorCodes = {\n+  ['RequestFailed'] = -32803,\n+  [-32803] = 'RequestFailed',\n+  ['ServerCancelled'] = -32802,\n+  [-32802] = 'ServerCancelled',\n+  ['ContentModified'] = -32801,\n+  [-32801] = 'ContentModified',\n+  ['RequestCancelled'] = -32800,\n+  [-32800] = 'RequestCancelled',\n+}\n+\n+---A set of predefined range kinds.\n+---@nodoc\n+---@enum lsp.FoldingRangeKind\n+protocol.FoldingRangeKind = {\n+  ['Comment'] = 'comment',\n+  ['comment'] = 'Comment',\n+  ['Imports'] = 'imports',\n+  ['imports'] = 'Imports',\n+  ['Region'] = 'region',\n+  ['region'] = 'Region',\n+}\n+\n+---A symbol kind.\n+---@nodoc\n+---@enum lsp.SymbolKind\n+protocol.SymbolKind = {\n+  ['File'] = 1,\n+  [1] = 'File',\n+  ['Module'] = 2,\n+  [2] = 'Module',\n+  ['Namespace'] = 3,\n+  [3] = 'Namespace',\n+  ['Package'] = 4,\n+  [4] = 'Package',\n+  ['Class'] = 5,\n+  [5] = 'Class',\n+  ['Method'] = 6,\n+  [6] = 'Method',\n+  ['Property'] = 7,\n+  [7] = 'Property',\n+  ['Field'] = 8,\n+  [8] = 'Field',\n+  ['Constructor'] = 9,\n+  [9] = 'Constructor',\n+  ['Enum'] = 10,\n+  [10] = 'Enum',\n+  ['Interface'] = 11,\n+  [11] = 'Interface',\n+  ['Function'] = 12,\n+  [12] = 'Function',\n+  ['Variable'] = 13,\n+  [13] = 'Variable',\n+  ['Constant'] = 14,\n+  [14] = 'Constant',\n+  ['String'] = 15,\n+  [15] = 'String',\n+  ['Number'] = 16,\n+  [16] = 'Number',\n+  ['Boolean'] = 17,\n+  [17] = 'Boolean',\n+  ['Array'] = 18,\n+  [18] = 'Array',\n+  ['Object'] = 19,\n+  [19] = 'Object',\n+  ['Key'] = 20,\n+  [20] = 'Key',\n+  ['Null'] = 21,\n+  [21] = 'Null',\n+  ['EnumMember'] = 22,\n+  [22] = 'EnumMember',\n+  ['Struct'] = 23,\n+  [23] = 'Struct',\n+  ['Event'] = 24,\n+  [24] = 'Event',\n+  ['Operator'] = 25,\n+  [25] = 'Operator',\n+  ['TypeParameter'] = 26,\n+  [26] = 'TypeParameter',\n+}\n+\n+---Symbol tags are extra annotations that tweak the rendering of a symbol.\n+---\n+---@since 3.16\n+---@nodoc\n+---@enum lsp.SymbolTag\n+protocol.SymbolTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Moniker uniqueness level to define scope of the moniker.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.UniquenessLevel\n+protocol.UniquenessLevel = {\n+  ['document'] = 'document',\n+  ['project'] = 'project',\n+  ['group'] = 'group',\n+  ['scheme'] = 'scheme',\n+  ['global'] = 'global',\n+}\n+\n+---The moniker kind.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.MonikerKind\n+protocol.MonikerKind = {\n+  ['import'] = 'import',\n+  ['export'] = 'export',\n+  ['local'] = 'local',\n+}\n+\n+---Inlay hint kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.InlayHintKind\n+protocol.InlayHintKind = {\n+  ['Type'] = 1,\n+  [1] = 'Type',\n+  ['Parameter'] = 2,\n+  [2] = 'Parameter',\n+}\n+\n+---The message type\n+---@nodoc\n+---@enum lsp.MessageType\n+protocol.MessageType = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Info'] = 3,\n+  [3] = 'Info',\n+  ['Log'] = 4,\n+  [4] = 'Log',\n+  ['Debug'] = 5,\n+  [5] = 'Debug',\n+}\n+\n+---Defines how the host (editor) should sync\n+---document changes to the language server.\n+---@nodoc\n+---@enum lsp.TextDocumentSyncKind\n+protocol.TextDocumentSyncKind = {\n+  ['None'] = 0,\n+  [0] = 'None',\n+  ['Full'] = 1,\n+  [1] = 'Full',\n+  ['Incremental'] = 2,\n+  [2] = 'Incremental',\n+}\n+\n+---Represents reasons why a text document is saved.\n+---@nodoc\n+---@enum lsp.TextDocumentSaveReason\n+protocol.TextDocumentSaveReason = {\n+  ['Manual'] = 1,\n+  [1] = 'Manual',\n+  ['AfterDelay'] = 2,\n+  [2] = 'AfterDelay',\n+  ['FocusOut'] = 3,\n+  [3] = 'FocusOut',\n+}\n+\n+---The kind of a completion entry.\n+---@nodoc\n+---@enum lsp.CompletionItemKind\n+protocol.CompletionItemKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Method'] = 2,\n+  [2] = 'Method',\n+  ['Function'] = 3,\n+  [3] = 'Function',\n+  ['Constructor'] = 4,\n+  [4] = 'Constructor',\n+  ['Field'] = 5,\n+  [5] = 'Field',\n+  ['Variable'] = 6,\n+  [6] = 'Variable',\n+  ['Class'] = 7,\n+  [7] = 'Class',\n+  ['Interface'] = 8,\n+  [8] = 'Interface',\n+  ['Module'] = 9,\n+  [9] = 'Module',\n+  ['Property'] = 10,\n+  [10] = 'Property',\n+  ['Unit'] = 11,\n+  [11] = 'Unit',\n+  ['Value'] = 12,\n+  [12] = 'Value',\n+  ['Enum'] = 13,\n+  [13] = 'Enum',\n+  ['Keyword'] = 14,\n+  [14] = 'Keyword',\n+  ['Snippet'] = 15,\n+  [15] = 'Snippet',\n+  ['Color'] = 16,\n+  [16] = 'Color',\n+  ['File'] = 17,\n+  [17] = 'File',\n+  ['Reference'] = 18,\n+  [18] = 'Reference',\n+  ['Folder'] = 19,\n+  [19] = 'Folder',\n+  ['EnumMember'] = 20,\n+  [20] = 'EnumMember',\n+  ['Constant'] = 21,\n+  [21] = 'Constant',\n+  ['Struct'] = 22,\n+  [22] = 'Struct',\n+  ['Event'] = 23,\n+  [23] = 'Event',\n+  ['Operator'] = 24,\n+  [24] = 'Operator',\n+  ['TypeParameter'] = 25,\n+  [25] = 'TypeParameter',\n+}\n+\n+---Completion item tags are extra annotations that tweak the rendering of a completion\n+---item.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.CompletionItemTag\n+protocol.CompletionItemTag = {\n+  ['Deprecated'] = 1,\n+  [1] = 'Deprecated',\n+}\n+\n+---Defines whether the insert text in a completion item should be interpreted as\n+---plain text or a snippet.\n+---@nodoc\n+---@enum lsp.InsertTextFormat\n+protocol.InsertTextFormat = {\n+  ['PlainText'] = 1,\n+  [1] = 'PlainText',\n+  ['Snippet'] = 2,\n+  [2] = 'Snippet',\n+}\n+\n+---How whitespace and indentation is handled during completion\n+---item insertion.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.InsertTextMode\n+protocol.InsertTextMode = {\n+  ['asIs'] = 1,\n+  [1] = 'asIs',\n+  ['adjustIndentation'] = 2,\n+  [2] = 'adjustIndentation',\n+}\n+\n+---A document highlight kind.\n+---@nodoc\n+---@enum lsp.DocumentHighlightKind\n+protocol.DocumentHighlightKind = {\n+  ['Text'] = 1,\n+  [1] = 'Text',\n+  ['Read'] = 2,\n+  [2] = 'Read',\n+  ['Write'] = 3,\n+  [3] = 'Write',\n+}\n+\n+---A set of predefined code action kinds\n+---@nodoc\n+---@enum lsp.CodeActionKind\n+protocol.CodeActionKind = {\n+  ['Empty'] = '',\n+  [''] = 'Empty',\n+  ['QuickFix'] = 'quickfix',\n+  ['quickfix'] = 'QuickFix',\n+  ['Refactor'] = 'refactor',\n+  ['refactor'] = 'Refactor',\n+  ['RefactorExtract'] = 'refactor.extract',\n+  ['refactor.extract'] = 'RefactorExtract',\n+  ['RefactorInline'] = 'refactor.inline',\n+  ['refactor.inline'] = 'RefactorInline',\n+  ['RefactorMove'] = 'refactor.move',\n+  ['refactor.move'] = 'RefactorMove',\n+  ['RefactorRewrite'] = 'refactor.rewrite',\n+  ['refactor.rewrite'] = 'RefactorRewrite',\n+  ['Source'] = 'source',\n+  ['source'] = 'Source',\n+  ['SourceOrganizeImports'] = 'source.organizeImports',\n+  ['source.organizeImports'] = 'SourceOrganizeImports',\n+  ['SourceFixAll'] = 'source.fixAll',\n+  ['source.fixAll'] = 'SourceFixAll',\n+  ['Notebook'] = 'notebook',\n+  ['notebook'] = 'Notebook',\n+}\n+\n+---Code action tags are extra annotations that tweak the behavior of a code action.\n+---\n+---@since 3.18.0 - proposed\n+---@nodoc\n+---@enum lsp.CodeActionTag\n+protocol.CodeActionTag = {\n+  ['LLMGenerated'] = 1,\n+  [1] = 'LLMGenerated',\n+}\n+\n+---@nodoc\n+---@enum lsp.TraceValue\n+protocol.TraceValue = {\n+  ['Off'] = 'off',\n+  ['off'] = 'Off',\n+  ['Messages'] = 'messages',\n+  ['messages'] = 'Messages',\n+  ['Verbose'] = 'verbose',\n+  ['verbose'] = 'Verbose',\n+}\n+\n+---Describes the content type that a client supports in various\n+---result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n+---\n+---Please note that `MarkupKinds` must not start with a `$`. This kinds\n+---are reserved for internal usage.\n+---@nodoc\n+---@enum lsp.MarkupKind\n+protocol.MarkupKind = {\n+  ['PlainText'] = 'plaintext',\n+  ['plaintext'] = 'PlainText',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+}\n+\n+---Predefined Language kinds\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.LanguageKind\n+protocol.LanguageKind = {\n+  ['ABAP'] = 'abap',\n+  ['abap'] = 'ABAP',\n+  ['WindowsBat'] = 'bat',\n+  ['bat'] = 'WindowsBat',\n+  ['BibTeX'] = 'bibtex',\n+  ['bibtex'] = 'BibTeX',\n+  ['Clojure'] = 'clojure',\n+  ['clojure'] = 'Clojure',\n+  ['Coffeescript'] = 'coffeescript',\n+  ['coffeescript'] = 'Coffeescript',\n+  ['C'] = 'c',\n+  ['c'] = 'C',\n+  ['CPP'] = 'cpp',\n+  ['cpp'] = 'CPP',\n+  ['CSharp'] = 'csharp',\n+  ['csharp'] = 'CSharp',\n+  ['CSS'] = 'css',\n+  ['css'] = 'CSS',\n+  ['D'] = 'd',\n+  ['d'] = 'D',\n+  ['Delphi'] = 'pascal',\n+  ['pascal'] = 'Delphi',\n+  ['Diff'] = 'diff',\n+  ['diff'] = 'Diff',\n+  ['Dart'] = 'dart',\n+  ['dart'] = 'Dart',\n+  ['Dockerfile'] = 'dockerfile',\n+  ['dockerfile'] = 'Dockerfile',\n+  ['Elixir'] = 'elixir',\n+  ['elixir'] = 'Elixir',\n+  ['Erlang'] = 'erlang',\n+  ['erlang'] = 'Erlang',\n+  ['FSharp'] = 'fsharp',\n+  ['fsharp'] = 'FSharp',\n+  ['GitCommit'] = 'git-commit',\n+  ['git-commit'] = 'GitCommit',\n+  ['GitRebase'] = 'rebase',\n+  ['rebase'] = 'GitRebase',\n+  ['Go'] = 'go',\n+  ['go'] = 'Go',\n+  ['Groovy'] = 'groovy',\n+  ['groovy'] = 'Groovy',\n+  ['Handlebars'] = 'handlebars',\n+  ['handlebars'] = 'Handlebars',\n+  ['Haskell'] = 'haskell',\n+  ['haskell'] = 'Haskell',\n+  ['HTML'] = 'html',\n+  ['html'] = 'HTML',\n+  ['Ini'] = 'ini',\n+  ['ini'] = 'Ini',\n+  ['Java'] = 'java',\n+  ['java'] = 'Java',\n+  ['JavaScript'] = 'javascript',\n+  ['javascript'] = 'JavaScript',\n+  ['JavaScriptReact'] = 'javascriptreact',\n+  ['javascriptreact'] = 'JavaScriptReact',\n+  ['JSON'] = 'json',\n+  ['json'] = 'JSON',\n+  ['LaTeX'] = 'latex',\n+  ['latex'] = 'LaTeX',\n+  ['Less'] = 'less',\n+  ['less'] = 'Less',\n+  ['Lua'] = 'lua',\n+  ['lua'] = 'Lua',\n+  ['Makefile'] = 'makefile',\n+  ['makefile'] = 'Makefile',\n+  ['Markdown'] = 'markdown',\n+  ['markdown'] = 'Markdown',\n+  ['ObjectiveC'] = 'objective-c',\n+  ['objective-c'] = 'ObjectiveC',\n+  ['ObjectiveCPP'] = 'objective-cpp',\n+  ['objective-cpp'] = 'ObjectiveCPP',\n+  ['Pascal'] = 'pascal',\n+  ['pascal'] = 'Pascal',\n+  ['Perl'] = 'perl',\n+  ['perl'] = 'Perl',\n+  ['Perl6'] = 'perl6',\n+  ['perl6'] = 'Perl6',\n+  ['PHP'] = 'php',\n+  ['php'] = 'PHP',\n+  ['Powershell'] = 'powershell',\n+  ['powershell'] = 'Powershell',\n+  ['Pug'] = 'jade',\n+  ['jade'] = 'Pug',\n+  ['Python'] = 'python',\n+  ['python'] = 'Python',\n+  ['R'] = 'r',\n+  ['r'] = 'R',\n+  ['Razor'] = 'razor',\n+  ['razor'] = 'Razor',\n+  ['Ruby'] = 'ruby',\n+  ['ruby'] = 'Ruby',\n+  ['Rust'] = 'rust',\n+  ['rust'] = 'Rust',\n+  ['SCSS'] = 'scss',\n+  ['scss'] = 'SCSS',\n+  ['SASS'] = 'sass',\n+  ['sass'] = 'SASS',\n+  ['Scala'] = 'scala',\n+  ['scala'] = 'Scala',\n+  ['ShaderLab'] = 'shaderlab',\n+  ['shaderlab'] = 'ShaderLab',\n+  ['ShellScript'] = 'shellscript',\n+  ['shellscript'] = 'ShellScript',\n+  ['SQL'] = 'sql',\n+  ['sql'] = 'SQL',\n+  ['Swift'] = 'swift',\n+  ['swift'] = 'Swift',\n+  ['TypeScript'] = 'typescript',\n+  ['typescript'] = 'TypeScript',\n+  ['TypeScriptReact'] = 'typescriptreact',\n+  ['typescriptreact'] = 'TypeScriptReact',\n+  ['TeX'] = 'tex',\n+  ['tex'] = 'TeX',\n+  ['VisualBasic'] = 'vb',\n+  ['vb'] = 'VisualBasic',\n+  ['XML'] = 'xml',\n+  ['xml'] = 'XML',\n+  ['XSL'] = 'xsl',\n+  ['xsl'] = 'XSL',\n+  ['YAML'] = 'yaml',\n+  ['yaml'] = 'YAML',\n+}\n+\n+---Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n+---\n+---@since 3.18.0\n+---@proposed\n+---@nodoc\n+---@enum lsp.InlineCompletionTriggerKind\n+protocol.InlineCompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A set of predefined position encoding kinds.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.PositionEncodingKind\n+protocol.PositionEncodingKind = {\n+  ['UTF8'] = 'utf-8',\n+  ['utf-8'] = 'UTF8',\n+  ['UTF16'] = 'utf-16',\n+  ['utf-16'] = 'UTF16',\n+  ['UTF32'] = 'utf-32',\n+  ['utf-32'] = 'UTF32',\n+}\n+\n+---The file event type\n+---@nodoc\n+---@enum lsp.FileChangeType\n+protocol.FileChangeType = {\n+  ['Created'] = 1,\n+  [1] = 'Created',\n+  ['Changed'] = 2,\n+  [2] = 'Changed',\n+  ['Deleted'] = 3,\n+  [3] = 'Deleted',\n+}\n+\n+---@nodoc\n+---@enum lsp.WatchKind\n+protocol.WatchKind = {\n+  ['Create'] = 1,\n+  [1] = 'Create',\n+  ['Change'] = 2,\n+  [2] = 'Change',\n+  ['Delete'] = 4,\n+  [4] = 'Delete',\n+}\n+\n+---The diagnostic's severity.\n+---@nodoc\n+---@enum lsp.DiagnosticSeverity\n+protocol.DiagnosticSeverity = {\n+  ['Error'] = 1,\n+  [1] = 'Error',\n+  ['Warning'] = 2,\n+  [2] = 'Warning',\n+  ['Information'] = 3,\n+  [3] = 'Information',\n+  ['Hint'] = 4,\n+  [4] = 'Hint',\n+}\n+\n+---The diagnostic tags.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.DiagnosticTag\n+protocol.DiagnosticTag = {\n+  ['Unnecessary'] = 1,\n+  [1] = 'Unnecessary',\n+  ['Deprecated'] = 2,\n+  [2] = 'Deprecated',\n+}\n+\n+---How a completion was triggered\n+---@nodoc\n+---@enum lsp.CompletionTriggerKind\n+protocol.CompletionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['TriggerForIncompleteCompletions'] = 3,\n+  [3] = 'TriggerForIncompleteCompletions',\n+}\n+\n+---How a signature help was triggered.\n+---\n+---@since 3.15.0\n+---@nodoc\n+---@enum lsp.SignatureHelpTriggerKind\n+protocol.SignatureHelpTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['TriggerCharacter'] = 2,\n+  [2] = 'TriggerCharacter',\n+  ['ContentChange'] = 3,\n+  [3] = 'ContentChange',\n+}\n+\n+---The reason why code actions were requested.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.CodeActionTriggerKind\n+protocol.CodeActionTriggerKind = {\n+  ['Invoked'] = 1,\n+  [1] = 'Invoked',\n+  ['Automatic'] = 2,\n+  [2] = 'Automatic',\n+}\n+\n+---A pattern kind describing if a glob pattern matches a file a folder or\n+---both.\n+---\n+---@since 3.16.0\n+---@nodoc\n+---@enum lsp.FileOperationPatternKind\n+protocol.FileOperationPatternKind = {\n+  ['file'] = 'file',\n+  ['folder'] = 'folder',\n+}\n+\n+---A notebook cell kind.\n+---\n+---@since 3.17.0\n+---@nodoc\n+---@enum lsp.NotebookCellKind\n+protocol.NotebookCellKind = {\n+  ['Markup'] = 1,\n+  [1] = 'Markup',\n+  ['Code'] = 2,\n+  [2] = 'Code',\n+}\n+\n+---@nodoc\n+---@enum lsp.ResourceOperationKind\n+protocol.ResourceOperationKind = {\n+  ['Create'] = 'create',",
            "html_url": "https://github.com/neovim/neovim/pull/32215#discussion_r1934441455",
            "id": 1934441455,
            "in_reply_to_id": 1932643988,
            "line": 933,
            "node_id": "PRRC_kwDOAPphoM5zTTvv",
            "original_commit_id": "eb4a8a9b8c5dfc8d6a36e44575394a6f4c33a190",
            "original_line": 933,
            "original_position": 1120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": 1026,
            "pull_request_review_id": 2581986809,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934441455/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-29T19:13:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1934441455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> As a user, having the protocol definitions in multiple places was sometimes confusing.\n\nI think that's still the case here. Unless you were referring to the conflicting definitions which were just removed.",
            "created_at": "2025-01-28T18:09:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/32215#issuecomment-2619725805",
            "id": 2619725805,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32215",
            "node_id": "IC_kwDOAPphoM6cJdft",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2619725805/reactions"
            },
            "updated_at": "2025-01-29T15:18:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2619725805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think that's still the case here.\r\n\r\n@lewis6991 I don't think so because I'm removing the ones in the meta file, so they should be no duplicates anymore.\r\n\r\n",
            "created_at": "2025-01-28T19:45:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/32215#issuecomment-2619915590",
            "id": 2619915590,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32215",
            "node_id": "IC_kwDOAPphoM6cKL1G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2619915590/reactions"
            },
            "updated_at": "2025-01-29T15:18:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2619915590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32215/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32215/commits",
    "created_at": "2025-01-26T22:20:14Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32215.diff",
    "draft": false,
    "head": {
        "label": "MariaSolOs:protocol-enums",
        "ref": "protocol-enums",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/MariaSolOs/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/MariaSolOs/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/MariaSolOs/neovim/branches{/branch}",
            "clone_url": "https://github.com/MariaSolOs/neovim.git",
            "collaborators_url": "https://api.github.com/repos/MariaSolOs/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/MariaSolOs/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/MariaSolOs/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/MariaSolOs/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/MariaSolOs/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/MariaSolOs/neovim/contributors",
            "created_at": "2023-08-05T17:10:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/MariaSolOs/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/MariaSolOs/neovim/downloads",
            "events_url": "https://api.github.com/repos/MariaSolOs/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/MariaSolOs/neovim/forks",
            "full_name": "MariaSolOs/neovim",
            "git_commits_url": "https://api.github.com/repos/MariaSolOs/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/MariaSolOs/neovim/git/tags{/sha}",
            "git_url": "git://github.com/MariaSolOs/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/MariaSolOs/neovim/hooks",
            "html_url": "https://github.com/MariaSolOs/neovim",
            "id": 675070403,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/MariaSolOs/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/MariaSolOs/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/MariaSolOs/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/MariaSolOs/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/MariaSolOs/neovim/merges",
            "milestones_url": "https://api.github.com/repos/MariaSolOs/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKDzBww",
            "notifications_url": "https://api.github.com/repos/MariaSolOs/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/MariaSolOs/neovim/pulls{/number}",
            "pushed_at": "2025-02-03T02:35:44Z",
            "releases_url": "https://api.github.com/repos/MariaSolOs/neovim/releases{/id}",
            "size": 298811,
            "ssh_url": "git@github.com:MariaSolOs/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/MariaSolOs/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/MariaSolOs/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/MariaSolOs/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/MariaSolOs/neovim/subscription",
            "svn_url": "https://github.com/MariaSolOs/neovim",
            "tags_url": "https://api.github.com/repos/MariaSolOs/neovim/tags",
            "teams_url": "https://api.github.com/repos/MariaSolOs/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/MariaSolOs/neovim/git/trees{/sha}",
            "updated_at": "2025-02-01T21:36:59Z",
            "url": "https://api.github.com/repos/MariaSolOs/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8020ac5b6b032611372c4cd28e6665928b95a845",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32215",
    "id": 2298834914,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32215",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "5f3172e7d7e7a31b42e2fa9c3f7cbead8e7a662a",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6JBW_i",
    "number": 32215,
    "patch_url": "https://github.com/neovim/neovim/pull/32215.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32215/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8020ac5b6b032611372c4cd28e6665928b95a845",
    "title": "refactor(lsp): use the metamodel to generate protocol constants",
    "updated_at": "2025-01-31T02:41:46Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32215",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
        "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
        "followers_url": "https://api.github.com/users/MariaSolOs/followers",
        "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
        "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MariaSolOs",
        "id": 62502207,
        "login": "MariaSolOs",
        "node_id": "MDQ6VXNlcjYyNTAyMjA3",
        "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
        "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
        "repos_url": "https://api.github.com/users/MariaSolOs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MariaSolOs",
        "user_view_type": "public"
    }
}