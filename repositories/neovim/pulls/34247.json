{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34247/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34247/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34247"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34247"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34247/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34247"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/525c02a89f96a3371b7d5ca711f6971fbbc11585"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6114,
            "forks_count": 6114,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1972,
            "open_issues_count": 1972,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-03T01:03:43Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 326078,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89994,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-03T02:10:49Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89994,
            "watchers_count": 89994,
            "web_commit_signoff_required": false
        },
        "sha": "33b0a004eb20fd5a0013b832414596190c059828",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Close #16012\r\n\r\n#### vim-patch:9.1.1147: preview-window does not scroll correctly\r\n\r\nProblem:  preview-window does not scroll correctly\r\nSolution: init firstline = 0 for a preview window\r\n          (Girish Palya)\r\n\r\nThe 'info' window, which appears during insert-mode completion to display\r\nadditional information, was not scrolling properly when using commands like:\r\n\twin_execute(popup_findinfo(), \"normal! \\<PageDown>\")\r\nThis issue made it impossible to navigate through info window contents using\r\nkeyboard-based scrolling.\r\nThe fix correctly updates the w_firstline value of the popup window, ensuring\r\nproper scrolling behavior. Mouse scrolling was already working as expected and\r\nremains unaffected.\r\n\r\ncloses: vim/vim#16703\r\n\r\nhttps://github.com/vim/vim/commit/12b1eb58abca1eabc4833ad855c8a31d8b40981e\r\n\r\nCo-authored-by: Girish Palya <girishji@gmail.com>\r\n\r\n\r\n#### vim-patch:9.1.1301: completion: cannot configure completion functions with 'complete'\r\n\r\nProblem:  completion: cannot configure completion functions with\r\n          'complete'\r\nSolution: add support for setting completion functions using the f and o\r\n          flag for 'complete' (Girish Palya)\r\n\r\nThis change adds two new values to the `'complete'` (`'cpt'`) option:\r\n- `f` – invokes the function specified by the `'completefunc'` option\r\n- `f{func}` – invokes a specific function `{func}` (can be a string or `Funcref`)\r\n\r\nThese new flags extend keyword completion behavior (e.g., via `<C-N>` /\r\n`<C-P>`) by allowing function-based sources to participate in standard keyword\r\ncompletion.\r\n\r\n**Key behaviors:**\r\n\r\n- Multiple `f{func}` values can be specified, and all will be called in order.\r\n- Functions should follow the interface defined in `:help complete-functions`.\r\n- When using `f{func}`, escaping is required for spaces (with `\\`) and commas\r\n  (with `\\\\`) in `Funcref` names.\r\n- If a function sets `'refresh'` to `'always'`, it will be re-invoked on every\r\n  change to the input text. Otherwise, Vim will attempt to reuse and filter\r\n  existing matches as the input changes, which matches the default behavior of\r\n  other completion sources.\r\n- Matches are inserted at the keyword boundary for consistency with other completion methods.\r\n- If finding matches is time-consuming, `complete_check()` can be used to\r\n  maintain responsiveness.\r\n- Completion matches are gathered in the sequence defined by the `'cpt'`\r\n  option, preserving source priority.\r\n\r\nThis feature increases flexibility of standard completion mechanism and may\r\nreduce the need for external completion plugins for many users.\r\n\r\n**Examples:**\r\n\r\nComplete matches from [LSP](https://github.com/yegappan/lsp) client. Notice the use of `refresh: always` and `function()`.\r\n\r\n```vim\r\nset cpt+=ffunction(\"g:LspCompletor\"\\\\,\\ [5]). # maxitems = 5\r\n\r\ndef! g:LspCompletor(maxitems: number, findstart: number, base: string): any\r\n    if findstart == 1\r\n        return g:LspOmniFunc(findstart, base)\r\n    endif\r\n    return {words: g:LspOmniFunc(findstart, base)->slice(0, maxitems), refresh: 'always'}\r\nenddef\r\nautocmd VimEnter * g:LspOptionsSet({ autoComplete: false, omniComplete: true })\r\n```\r\n\r\nComplete matches from `:iabbrev`.\r\n\r\n```vim\r\nset cpt+=fAbbrevCompletor\r\n\r\ndef! g:AbbrevCompletor(findstart: number, base: string): any\r\n    if findstart > 0\r\n        var prefix = getline('.')->strpart(0, col('.') - 1)->matchstr('\\S\\+$')\r\n        if prefix->empty()\r\n            return -2\r\n        endif\r\n        return col('.') - prefix->len() - 1\r\n    endif\r\n    var lines = execute('ia', 'silent!')\r\n    if lines =~? gettext('No abbreviation found')\r\n        return v:none  # Suppresses warning message\r\n    endif\r\n    var items = []\r\n    for line in lines->split(\"\\n\")\r\n        var m = line->matchlist('\\v^i\\s+\\zs(\\S+)\\s+(.*)$')\r\n        if m->len() > 2 && m[1]->stridx(base) == 0\r\n            items->add({ word: m[1], info: m[2], dup: 1 })\r\n        endif\r\n    endfor\r\n    return items->empty() ? v:none :\r\n        items->sort((v1, v2) => v1.word < v2.word ? -1 : v1.word ==# v2.word ? 0 : 1)\r\nenddef\r\n```\r\n\r\n**Auto-completion:**\r\n\r\nVim's standard completion frequently checks for user input while searching for\r\nnew matches. It is responsive irrespective of file size. This makes it\r\nwell-suited for smooth auto-completion. You can try with above examples:\r\n\r\n```vim\r\nset cot=menuone,popup,noselect inf\r\n\r\nautocmd TextChangedI * InsComplete()\r\n\r\ndef InsComplete()\r\n    if getcharstr(1) == '' && getline('.')->strpart(0, col('.') - 1) =~ '\\k$'\r\n        SkipTextChangedIEvent()\r\n        feedkeys(\"\\<c-n>\", \"n\")\r\n    endif\r\nenddef\r\n\r\ninoremap <silent> <c-e> <c-r>=<SID>SkipTextChangedIEvent()<cr><c-e>\r\n\r\ndef SkipTextChangedIEvent(): string\r\n    # Suppress next event caused by <c-e> (or <c-n> when no matches found)\r\n    set eventignore+=TextChangedI\r\n    timer_start(1, (_) => {\r\n        set eventignore-=TextChangedI\r\n    })\r\n    return ''\r\nenddef\r\n```\r\n\r\ncloses: vim/vim#17065\r\n\r\nhttps://github.com/vim/vim/commit/cbe53191d01926c045a39198b3a9517e3c5077d2\r\n\r\nTemporarily remove bufname completion with #if 0 to make merging easier.\r\n\r\nCo-authored-by: Girish Palya <girishji@gmail.com>\r\nCo-authored-by: Christian Brabandt <cb@256bit.org>\r\nCo-authored-by: glepnir <glephunter@gmail.com>\r\n\r\n\r\n#### vim-patch:9.1.1302: Coverity warns about using uninitialized value\r\n\r\nProblem:  Coverity warns about using uninitialized value\r\n          (Coverity, Tony Mechelynck, after v9.1.1301)\r\nSolution: initialize callback pointer to NULL\r\n\r\nhttps://github.com/vim/vim/commit/d2079cff48117b121cd4afcc91fc14a696bdb142\r\n\r\nCo-authored-by: Christian Brabandt <cb@256bit.org>\r\n\r\n\r\n#### vim-patch:9.1.1311: completion: not possible to limit number of matches\r\n\r\nProblem:  completion: not possible to limit number of matches\r\nSolution: allow to limit the matches for 'complete' sources by using the\r\n          \"{flag}^{limit}\" notation (Girish Palya)\r\n\r\nThis change extends the 'complete'  option to support limiting the\r\nnumber of matches returned from individual completion sources.\r\n\r\n**Rationale:** In large files, certain sources (such as the current\r\nbuffer) can generate an overwhelming number of matches, which may cause\r\nmore relevant results from other sources (e.g., LSP or tags) to be\r\npushed out of view. By specifying per-source match limits, the\r\ncompletion menu remains balanced and diverse, improving visibility and\r\nrelevance of suggestions.\r\n\r\nA caret (`^`) followed by a number can be appended to a source flag to\r\nspecify the maximum number of matches for that source. For example:\r\n```\r\n  :set complete=.^9,w,u,t^5\r\n```\r\nIn this configuration:\r\n- The current buffer (`.`) will return up to 9 matches.\r\n- The tag completion (`t`) will return up to 5 matches.\r\n- Other sources (`w`, `u`) are not limited.\r\n\r\nThis feature is fully backward-compatible and does not affect behavior\r\nwhen the `^count` suffix is not used.\r\n\r\nThe caret (`^`) was chosen as the delimiter because it is least likely\r\nto appear in file names.\r\n\r\ncloses: vim/vim#17087\r\n\r\nhttps://github.com/vim/vim/commit/0ac1eb3555445f4c458c06cef7c411de1c8d1020\r\n\r\nCherry-pick test_options.vim change from patch 9.1.1325.\r\n\r\nCo-authored-by: Girish Palya <girishji@gmail.com>\r\n\r\n\r\n#### vim-patch:9.1.1313: compile warning about uninitialized value\r\n\r\nProblem:  compile warning about uninitialized value\r\n          (Tony Mechelynck, after v9.1.1311)\r\nSolution: initialize variable on declaration\r\n\r\nhttps://github.com/vim/vim/commit/b53d4fb63e0d4d36033d47ec35f2f302931f77ae\r\n\r\nCo-authored-by: Christian Brabandt <cb@256bit.org>\r\n\r\n\r\n#### vim-patch:fa8b7db: runtime(doc): tweak documentation style in options.txt\r\n\r\ncloses: vim/vim#17229\r\n\r\nhttps://github.com/vim/vim/commit/fa8b7db99afad9074e4e1f89b49046836ac61d5b\r\n\r\nCo-authored-by: Hirohito Higashi <h.east.727@gmail.com>\r\n\r\n\r\n#### vim-patch:9.1.1409: using f-flag in 'complete' conflicts with Neovim\r\n\r\nProblem:  using f-flag in 'complete' conflicts with Neovims filename\r\n          completion (glepnir, after v9.1.1301).\r\nSolution: use upper-case \"F\" flag for completion functions\r\n          (Girish Palya).\r\n\r\ncloses: vim/vim#17378\r\n\r\nhttps://github.com/vim/vim/commit/14f6da5ba8d602263fc7bf6cb899c8520f4c3060\r\n\r\nCo-authored-by: Girish Palya <girishji@gmail.com>\r\n\r\n\r\n#### vim-patch:9.1.1410: out-of-bounds access with 'completefunc'\r\n\r\nProblem:  out-of-bounds access with 'completefunc' (csetc)\r\nSolution: check if it is safe to advance cpt_sources_index\r\n          (Girish Palya)\r\n\r\ncloses: vim/vim#17374\r\n\r\nhttps://github.com/vim/vim/commit/7c621052c3f180c1ef70fb7abfdad18245f47fcc\r\n\r\nCo-authored-by: Girish Palya <girishji@gmail.com>\r\nCo-authored-by: @csetc\r\n\r\n\r\n#### vim-patch:9.1.1416: completion limits not respected for fuzzy completions\r\n\r\nProblem:  completion limits not respected when using fuzzy completion\r\n          (Maxim Kim)\r\nSolution: trim completion array (Girish Palya)\r\n\r\ncloses: vim/vim#17386\r\n\r\nhttps://github.com/vim/vim/commit/19ef6b0b4b11a9775f9c90edc68c896034fd2a9d\r\n\r\nCo-authored-by: Girish Palya <girishji@gmail.com>\r\n\r\n\r\n#### vim-patch:9.1.1422: scheduling of complete function can be improved\r\n\r\nProblem:  scheduling of complete function can be improved\r\nSolution: call user completion functions earlier when just determining\r\n          the insertion column (Girish Palya)\r\n\r\nThis change improves the scheduling behavior of async user-defined\r\ncompletion functions (such as `F{func}`, `F`, or `'o'` values in the\r\n`'complete'` option), particularly benefiting LSP clients.\r\n\r\nCurrently, these user functions are invoked twice:\r\n\r\n1. First with `findstart = 1` to determine the completion start\r\n   position.\r\n2. Then with `findstart = 0` to retrieve the actual matches.\r\n\r\nPreviously, both calls were executed back-to-back. With this change, the\r\nfirst call (`findstart = 1`) is performed earlier—before any matches are\r\ngathered from other sources.\r\n\r\nThis adjustment gives event-driven completion sources (e.g., LSP\r\nclients) more time to send their requests while Vim concurrently\r\ncollects matches from other sources like the current buffer.\r\n\r\nNot sure about the real-world performance gains, but this approach\r\nshould, in theory, improve responsiveness and reduce latency for\r\nasynchronous completions.\r\n\r\nTo test, try using yegappan LSP client:\r\n\r\n```vim\r\nset cpt+=o^10\r\nautocmd VimEnter * g:LspOptionsSet({ autoComplete: false, omniComplete: true })\r\n```\r\n\r\nIf you prefer to use 'native' auto-completion (without plugins), try the\r\nfollowing configuration:\r\n\r\n```vim\r\nset cot=menuone,popup,noselect,nearest\r\nautocmd TextChangedI * InsComplete()\r\ndef InsComplete()\r\n  if getcharstr(1) == '' && getline('.')->strpart(0, col('.') - 1) =~ '\\k$'\r\n    SkipTextChangedI()\r\n    feedkeys(\"\\<c-n>\", \"n\")\r\n  endif\r\nenddef\r\ninoremap <silent> <c-e> <c-r>=<SID>SkipTextChangedI()<cr><c-e>\r\ninoremap <silent> <c-y> <c-r>=<SID>SkipTextChangedI()<cr><c-y>\r\ndef SkipTextChangedI(): string\r\n  set eventignore+=TextChangedI\r\n  timer_start(1, (_) => {\r\n    set eventignore-=TextChangedI\r\n  })\r\n  return ''\r\nenddef\r\ninoremap <silent><expr> <tab> pumvisible() ? \"\\<c-n>\" : \"\\<tab>\"\r\ninoremap <silent><expr> <s-tab> pumvisible() ? \"\\<c-p>\" : \"\\<s-tab>\"\r\n```\r\n\r\ncloses: vim/vim#17396\r\n\r\nhttps://github.com/vim/vim/commit/98c29dbfd1c0765cbe5a2fce71072a33ad629f34\r\n\r\nCo-authored-by: Girish Palya <girishji@gmail.com>\r\n\r\n\r\n#### vim-patch:9.1.1424: PMenu selection broken with multi-line selection and limits\r\n\r\nProblem:  PMenu selection broken with multi-line selection and limits\r\n          (Maxim Kim)\r\nSolution: update completion match index when limiting the completion\r\n          sources (Girish Palya)\r\n\r\ncloses: vim/vim#17401\r\n\r\nhttps://github.com/vim/vim/commit/6c40df09e07dced75010be2d7a8e4831f6b9f796\r\n\r\nCo-authored-by: Girish Palya <girishji@gmail.com>\r\n",
    "closed_at": "2025-06-02T23:00:26Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34247#discussion_r2119451083"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34247"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2119451083"
                }
            },
            "author_association": "MEMBER",
            "body": "Are the results from multiple functions (providers) \"merged\"? Presumably it's chronological, and possibly re-sorted as results from each arrive?\r\n\r\nDoes this resolve https://github.com/neovim/neovim/issues/32123 ?",
            "commit_id": "525c02a89f96a3371b7d5ca711f6971fbbc11585",
            "created_at": "2025-06-01T18:59:54Z",
            "diff_hunk": "@@ -1506,6 +1506,28 @@ A jump table for the options with a short description can be found at |Q_op|.\n \t]\ttag completion\n \tt\tsame as \"]\"\n \tf\tscan the buffer names (as opposed to buffer contents)\n+\tF{func}\tcall the function {func}.  Multiple \"F\" flags may be specified.",
            "html_url": "https://github.com/neovim/neovim/pull/34247#discussion_r2119451083",
            "id": 2119451083,
            "line": 1509,
            "node_id": "PRRC_kwDOAPphoM5-VEHL",
            "original_commit_id": "472f1a2e114b7a2e938af495c1b3476ff184cd4d",
            "original_line": 1509,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": 4,
            "pull_request_review_id": 2885961079,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34247",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2119451083/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-02T11:41:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2119451083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34247#discussion_r2120133928"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34247"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120133928"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm implementing asynchronous ins-completion locally. I moved some of the logic from C to Lua, and handled the source collection in the `complete` option asynchronously through coroutine. The F flag is a bit problematic for me. I can't handle it in Lua. Maybe I can skip it... The source of the lua interface can also be a custom lua function or If we complete the built-in inprocess-lsp, it can actually be just a custom handler for textDocument/completion. We just need to merge the results of multiple handlers.",
            "commit_id": "525c02a89f96a3371b7d5ca711f6971fbbc11585",
            "created_at": "2025-06-02T05:55:32Z",
            "diff_hunk": "@@ -1506,6 +1506,28 @@ A jump table for the options with a short description can be found at |Q_op|.\n \t]\ttag completion\n \tt\tsame as \"]\"\n \tf\tscan the buffer names (as opposed to buffer contents)\n+\tF{func}\tcall the function {func}.  Multiple \"F\" flags may be specified.",
            "html_url": "https://github.com/neovim/neovim/pull/34247#discussion_r2120133928",
            "id": 2120133928,
            "in_reply_to_id": 2119451083,
            "line": 1509,
            "node_id": "PRRC_kwDOAPphoM5-Xq0o",
            "original_commit_id": "472f1a2e114b7a2e938af495c1b3476ff184cd4d",
            "original_line": 1509,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": 4,
            "pull_request_review_id": 2886859929,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34247",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120133928/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-02T06:01:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120133928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34247#discussion_r2120266730"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34247"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120266730"
                }
            },
            "author_association": "MEMBER",
            "body": "It seems to work:\r\n```vim\r\nfunc F1(findstart, base)\r\n  if a:findstart\r\n    return col(\".\") - 1\r\n  endif\r\n  return [\"one\", \"two\", \"three\"]\r\nendfunc\r\n\r\nfunc F2(findstart, base)\r\n  if a:findstart\r\n    return col(\".\") - 1\r\n  endif\r\n  return [\"four\", \"five\", \"six\"]\r\nendfunc\r\n\r\nset complete+=FF1,FF2\r\n```\r\nHowever the sorting seem to be a bit strange and is different depending on whether CTRL-N or CTRL-P is pressed. Probably needs some change.",
            "commit_id": "525c02a89f96a3371b7d5ca711f6971fbbc11585",
            "created_at": "2025-06-02T07:16:20Z",
            "diff_hunk": "@@ -1506,6 +1506,28 @@ A jump table for the options with a short description can be found at |Q_op|.\n \t]\ttag completion\n \tt\tsame as \"]\"\n \tf\tscan the buffer names (as opposed to buffer contents)\n+\tF{func}\tcall the function {func}.  Multiple \"F\" flags may be specified.",
            "html_url": "https://github.com/neovim/neovim/pull/34247#discussion_r2120266730",
            "id": 2120266730,
            "in_reply_to_id": 2119451083,
            "line": 1509,
            "node_id": "PRRC_kwDOAPphoM5-YLPq",
            "original_commit_id": "472f1a2e114b7a2e938af495c1b3476ff184cd4d",
            "original_line": 1509,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": 4,
            "pull_request_review_id": 2887074826,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34247",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120266730/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-02T07:16:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120266730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34247/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34247/commits",
    "created_at": "2025-05-31T11:34:55Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34247.diff",
    "draft": false,
    "head": {
        "label": "zeertzjq:vim-9.1.1301",
        "ref": "vim-9.1.1301",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/zeertzjq/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/zeertzjq/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/zeertzjq/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/zeertzjq/neovim/branches{/branch}",
            "clone_url": "https://github.com/zeertzjq/neovim.git",
            "collaborators_url": "https://api.github.com/repos/zeertzjq/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/zeertzjq/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/zeertzjq/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/zeertzjq/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/zeertzjq/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/zeertzjq/neovim/contributors",
            "created_at": "2021-09-27T02:22:45Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/zeertzjq/neovim/deployments",
            "description": null,
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/zeertzjq/neovim/downloads",
            "events_url": "https://api.github.com/repos/zeertzjq/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/zeertzjq/neovim/forks",
            "full_name": "zeertzjq/neovim",
            "git_commits_url": "https://api.github.com/repos/zeertzjq/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/zeertzjq/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/zeertzjq/neovim/git/tags{/sha}",
            "git_url": "git://github.com/zeertzjq/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "",
            "hooks_url": "https://api.github.com/repos/zeertzjq/neovim/hooks",
            "html_url": "https://github.com/zeertzjq/neovim",
            "id": 410715915,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/zeertzjq/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/zeertzjq/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/zeertzjq/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/zeertzjq/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/zeertzjq/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/zeertzjq/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/zeertzjq/neovim/merges",
            "milestones_url": "https://api.github.com/repos/zeertzjq/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGHsHCw",
            "notifications_url": "https://api.github.com/repos/zeertzjq/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/zeertzjq/neovim/pulls{/number}",
            "pushed_at": "2025-06-03T02:46:35Z",
            "releases_url": "https://api.github.com/repos/zeertzjq/neovim/releases{/id}",
            "size": 301442,
            "ssh_url": "git@github.com:zeertzjq/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/zeertzjq/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/zeertzjq/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/zeertzjq/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/zeertzjq/neovim/subscription",
            "svn_url": "https://github.com/zeertzjq/neovim",
            "tags_url": "https://api.github.com/repos/zeertzjq/neovim/tags",
            "teams_url": "https://api.github.com/repos/zeertzjq/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/zeertzjq/neovim/git/trees{/sha}",
            "updated_at": "2025-01-19T11:29:57Z",
            "url": "https://api.github.com/repos/zeertzjq/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "525c02a89f96a3371b7d5ca711f6971fbbc11585",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34247",
    "id": 2556635484,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34247",
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "See https://neovim.io/doc/user/dev_vimpatch.html",
            "id": 843184430,
            "name": "vim-patch",
            "node_id": "MDU6TGFiZWw4NDMxODQ0MzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vim-patch"
        }
    ],
    "locked": false,
    "merge_commit_sha": "9c9c7ae30f50685e62984084767905c7d456cdd9",
    "merged_at": "2025-06-02T23:00:26Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6YYylc",
    "number": 34247,
    "patch_url": "https://github.com/neovim/neovim/pull/34247.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34247/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/525c02a89f96a3371b7d5ca711f6971fbbc11585",
    "title": "vim-patch: various 'complete' features",
    "updated_at": "2025-06-02T23:00:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34247",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    }
}