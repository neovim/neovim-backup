{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34817/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34817/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34817"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34817"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34817/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34817"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/88925cf5f37ca5678259b8a037fb0778bce70b69"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6168,
            "forks_count": 6168,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1965,
            "open_issues_count": 1965,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-07-08T01:56:22Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 332418,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90922,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-08T02:01:52Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90922,
            "watchers_count": 90922,
            "web_commit_signoff_required": false
        },
        "sha": "2e2ac49c57e5c7b35a78ad57a614615e01157623",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem:\r\nIssue #34816, Neovim with FAR Manager + ConEmu\r\n\r\nSolution:\r\nDisable OSC 52 when the terminal is ConEmu and ConEmuHk is enabled\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34817#discussion_r2188604977"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34817"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188604977"
                }
            },
            "author_association": "MEMBER",
            "body": "why not add this to the condition on line 25 ? or line 10, if line 25 is not appropriate.",
            "commit_id": "88925cf5f37ca5678259b8a037fb0778bce70b69",
            "created_at": "2025-07-06T21:00:46Z",
            "diff_hunk": "@@ -29,6 +29,10 @@ vim.api.nvim_create_autocmd('UIEnter', {\n       return\n     end\n \n+    if os.getenv('ConEmuHooks') == 'Enabled' then",
            "html_url": "https://github.com/neovim/neovim/pull/34817#discussion_r2188604977",
            "id": 2188604977,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Cc3Yx",
            "original_commit_id": "3e9a70c3b712411c24b5ea50d290e434e59cb5cc",
            "original_line": 32,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 2991675172,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34817",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188604977/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T21:01:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188604977",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34817#discussion_r2188651848"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34817"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188651848"
                }
            },
            "author_association": "NONE",
            "body": "No strong reason, I wasn't sure what is the preferred practice in neovim.\r\nI tried to separate concerns.\r\n\r\nI merged the test into the one at line 10.\r\n",
            "commit_id": "88925cf5f37ca5678259b8a037fb0778bce70b69",
            "created_at": "2025-07-06T21:47:34Z",
            "diff_hunk": "@@ -29,6 +29,10 @@ vim.api.nvim_create_autocmd('UIEnter', {\n       return\n     end\n \n+    if os.getenv('ConEmuHooks') == 'Enabled' then",
            "html_url": "https://github.com/neovim/neovim/pull/34817#discussion_r2188651848",
            "id": 2188651848,
            "in_reply_to_id": 2188604977,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CdC1I",
            "original_commit_id": "3e9a70c3b712411c24b5ea50d290e434e59cb5cc",
            "original_line": 32,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 2991729561,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34817",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188651848/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T21:47:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188651848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
                "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
                "followers_url": "https://api.github.com/users/mihnita/followers",
                "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
                "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mihnita",
                "id": 1307726,
                "login": "mihnita",
                "node_id": "MDQ6VXNlcjEzMDc3MjY=",
                "organizations_url": "https://api.github.com/users/mihnita/orgs",
                "received_events_url": "https://api.github.com/users/mihnita/received_events",
                "repos_url": "https://api.github.com/users/mihnita/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mihnita",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "I see no reason for FreeBSD to fail.\r\n\r\n---\r\n\r\nIf it helps I can create and share an animated gif with the fix applied.\r\n\r\n",
            "created_at": "2025-07-06T20:18:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3042500623",
            "id": 3042500623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61WOAP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3042500623/reactions"
            },
            "updated_at": "2025-07-06T20:18:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3042500623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
                "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
                "followers_url": "https://api.github.com/users/mihnita/followers",
                "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
                "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mihnita",
                "id": 1307726,
                "login": "mihnita",
                "node_id": "MDQ6VXNlcjEzMDc3MjY=",
                "organizations_url": "https://api.github.com/users/mihnita/orgs",
                "received_events_url": "https://api.github.com/users/mihnita/received_events",
                "repos_url": "https://api.github.com/users/mihnita/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mihnita",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The fix tested (directly in an installed version of Neovim):\r\nhttps://mihai-nita.net/tmp/neovim/NeovimFarConemu_FgColors_Fix.gif\r\n",
            "created_at": "2025-07-06T20:22:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3042505827",
            "id": 3042505827,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61WPRj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3042505827/reactions"
            },
            "updated_at": "2025-07-06T20:22:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3042505827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
                "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
                "followers_url": "https://api.github.com/users/mihnita/followers",
                "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
                "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mihnita",
                "id": 1307726,
                "login": "mihnita",
                "node_id": "MDQ6VXNlcjEzMDc3MjY=",
                "organizations_url": "https://api.github.com/users/mihnita/orgs",
                "received_events_url": "https://api.github.com/users/mihnita/received_events",
                "repos_url": "https://api.github.com/users/mihnita/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mihnita",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@gpanders we have a terminal.app check here, isn't that a good place for this kind of workaround? https://github.com/neovim/neovim/blob/88925cf5f37ca5678259b8a037fb0778bce70b69/runtime/plugin/osc52.lua#L29-L30\r\n",
            "created_at": "2025-07-07T00:23:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3043172983",
            "id": 3043172983,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61YyJ3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043172983/reactions"
            },
            "updated_at": "2025-07-07T00:23:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043172983",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "**Note:** I have zero familiarity with neovim, or lua.\r\nI only started from the commit that introduced the problem to begin with, and that changed `osc52.lua`.\r\nSo if you have any idea on how to approach this, I am happy to do it that way.\r\n\r\n> Why do we need this? OSC 52 is only enabled if the terminal indicates support. And why is the option to explicitly disable OSC 52 manually not sufficient?\r\n\r\nHow is a terminal indicating support?\r\n\r\nThe terminal definitions (including `conemu_terminfo`) seem to be in `src\\nvim\\tui\\terminfo_defs.h`, but there is no indicator for osc 52 support (that I can see).\r\n\r\nI also tried storing something in the clipboard directly with the escape sequences under FAR + ConEmu\r\n(`echo \"\u001b]52;p;SGVsbG8gd29ybGQ=\u001b\\\\\"`)\r\nAnd does not work. So I assume ConEmu does not support OSC 52.\r\n\r\nAlso a search on the ConEmu website, and the sources, does not mention anything about \"OSC\"\r\n\r\nSo at this point I assume that ConEmu does not support OSC 52, and the problem is how to pass that info to Neovim.\r\n\r\nI also checked the dependencies, and `unibilium` knows nothing about conemu.\r\n",
            "created_at": "2025-07-07T01:18:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3043224727",
            "id": 3043224727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61Y-yX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043224727/reactions"
            },
            "updated_at": "2025-07-07T01:18:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043224727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
                "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
                "followers_url": "https://api.github.com/users/mihnita/followers",
                "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
                "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mihnita",
                "id": 1307726,
                "login": "mihnita",
                "node_id": "MDQ6VXNlcjEzMDc3MjY=",
                "organizations_url": "https://api.github.com/users/mihnita/orgs",
                "received_events_url": "https://api.github.com/users/mihnita/received_events",
                "repos_url": "https://api.github.com/users/mihnita/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mihnita",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @gpanders we have a terminal.app check here, isn't that a good place for this kind of workaround?\r\n> \r\n> https://github.com/neovim/neovim/blob/88925cf5f37ca5678259b8a037fb0778bce70b69/runtime/plugin/osc52.lua#L29-L30\r\n\r\nThat's true, I forgot about this. However, I'd still rather ask @mihnita to set `vim.g.termfeatures = { osc52 = false }` to disable the query, rather than introduce code to work around a bug caused by DLL injection of all things.",
            "created_at": "2025-07-07T01:33:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3043238244",
            "id": 3043238244,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61ZCFk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043238244/reactions"
            },
            "updated_at": "2025-07-07T01:33:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043238244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I tried to also see if I can figure out the root cause.\r\n\r\nAnd I removed most of the code in `vim.api.nvim_create_autocmd('UIEnter', {`:\r\n\r\nThis works:\r\n```\r\nvim.api.nvim_create_autocmd('UIEnter', {\r\n  group = id,\r\n  desc = 'Enable OSC 52 feature flag if a supporting TUI is attached',\r\n  callback = function()\r\n    return\r\n  end,\r\n})\r\n```\r\n\r\nThis still has a problem:\r\n```\r\nvim.api.nvim_create_autocmd('UIEnter', {\r\n  group = id,\r\n  desc = 'Enable OSC 52 feature flag if a supporting TUI is attached',\r\n  callback = function()\r\n    require('vim.termcap').query('Ms', function(cap, found, seq)\r\n      return\r\n    end)\r\n  end,\r\n})\r\n```\r\n\r\nSo it is like `require('vim.termcap').query('Ms'` is failing somehow.\r\nBut I don't know how that works.\r\n\r\nIs it possible the query (in `runtime\\lua\\vim\\termcap.lua` ?) fails somehow when using `XTGETTCAP DCS` with ConEmu?\r\n\r\nI tried sending raw escapes (`echo \"\u001bP+q4D73\u001b\\\"`) from ConEmu + FAR. It does not hang. But it does not answer with a string.\r\n\r\nSo I would assume that ConEmu does not support `XTGETTCAP`.\r\n\r\n",
            "created_at": "2025-07-07T01:35:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3043240900",
            "id": 3043240900,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61ZCvE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043240900/reactions"
            },
            "updated_at": "2025-07-07T01:35:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043240900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
                "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
                "followers_url": "https://api.github.com/users/mihnita/followers",
                "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
                "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mihnita",
                "id": 1307726,
                "login": "mihnita",
                "node_id": "MDQ6VXNlcjEzMDc3MjY=",
                "organizations_url": "https://api.github.com/users/mihnita/orgs",
                "received_events_url": "https://api.github.com/users/mihnita/received_events",
                "repos_url": "https://api.github.com/users/mihnita/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mihnita",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I confirm that adding `vim.g.termfeatures = { osc52 = false }` to my config solves the problem.\r\n\r\n> a bug caused by DLL injection of all things.\r\n\r\nBut we don't really know that, it is an educated guess.\r\nI was unable to trigger any problems sending XTGETTCAP and OSC 52 sequences to ConEmu.\r\n\r\nLet's assume it is a bug in ConEmu...\r\nDoes it mean that anyone using the combination I use is left to manually implement the workaround in their config?\r\n\r\nI don't know the neovim policies.\r\n\r\nBut my guess is that _\"we don't implement workarounds for terminal bugs\"_ as a general policy means that most terminals will not work. Since there is no terminal without bugs :-)\r\n\r\nOptions (that I can see):\r\n- Implement a workaround (we don't know 100% sure if it really is a ConEmu bug).\r\n  That means most Neovim users will not notice any problem.\r\n- Try to find the cause in ConEmu, file a bug, wait for a new release, and hope all Neovim users install the latest and greatest ConEmu release\r\n- Just document the `vim.g.termfeatures = { osc52 = false }` workaround, don't do anything else\r\n- Don't even document the workaround, let people out to dry for months (the way I was)\r\n- Some combination of the above\r\n\r\n---\r\n\r\nI would implement a workaround.\r\nBut I am (of course :-) not in the position to make such decisions.\r\n100% your call.\r\n\r\nIf you decide to accept a workaround, I am happy to make it in a way that you find satisfactory.\r\n\r\nAnd if not, is is of course your prerogative, and I defer to your decision.\r\n\r\nRegards,\r\nMihai\r\n",
            "created_at": "2025-07-07T01:51:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3043257769",
            "id": 3043257769,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61ZG2p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043257769/reactions"
            },
            "updated_at": "2025-07-07T03:46:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043257769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
                "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
                "followers_url": "https://api.github.com/users/mihnita/followers",
                "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
                "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mihnita",
                "id": 1307726,
                "login": "mihnita",
                "node_id": "MDQ6VXNlcjEzMDc3MjY=",
                "organizations_url": "https://api.github.com/users/mihnita/orgs",
                "received_events_url": "https://api.github.com/users/mihnita/received_events",
                "repos_url": "https://api.github.com/users/mihnita/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mihnita",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Does it mean that anyone using the combination I use is left to manually implement the workaround in their config?\r\n\r\nDoes the workaround (`getenv('ConEmuHooks') == 'Enabled'`) disable osc52 for all conemnu users, or only users that enable the DLL injection? \r\n\r\nIf it only affects the dll injection victims, I think this PR is fine. Not worth spending more time on this.",
            "created_at": "2025-07-07T02:37:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3043312579",
            "id": 3043312579,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61ZUPD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043312579/reactions"
            },
            "updated_at": "2025-07-07T02:37:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043312579",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Does the workaround (getenv('ConEmuHooks') == 'Enabled') disable osc52 for all conemnu users, or only users that enable the DLL injection?\r\n\r\nOnly for people with ConEmu AND with DLL injection enabled.\r\nBut that is the default, and without it quite a few things don't work.\r\nSo I suppose most people will have it enabled, if they don't have any problems.\r\n\r\nAlthough it is probably safe to disable it for all ConEmu users, since ConEmu does not support neither OSC 52 nor XTGETTCAP (I've spent the last hour or so in the ConEmu sources).\r\n\r\n---\r\n\r\n:-(\r\n\r\nCorrection: the environment variable `ConEmuHooks` seems to be set to `Enabled` even when I uncheck the option in Settings.\r\nI tried it in ConEmu in combination with `FAR`, `Powershell`, and `cmd.exe`.\r\n\r\nI can't find any way to detect if hooks are enabled or not, and I can't tell if this is a bug or not.\r\n\r\nLooks like `ConEmuHooks` is used one-way.\r\nOne can set it to influence the execution of applications started:\r\nhttps://conemu.github.io/en/ConEmuEnvironment.html#Disabling_hooks_temporarily\r\n\r\nBut changing it in the GUI Settings does not set the environment variable, even after restarting the console.\r\n\r\n---\r\n\r\nI tested the fix with and without hooks enabled, and with the `ConEmuHooks` set to all the valid values (`OFF`, `NOARG`, `NOSTART`, `Enabled`).\r\n",
            "created_at": "2025-07-07T02:44:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3043321032",
            "id": 3043321032,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61ZWTI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043321032/reactions"
            },
            "updated_at": "2025-07-07T03:11:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043321032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
                "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
                "followers_url": "https://api.github.com/users/mihnita/followers",
                "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
                "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mihnita",
                "id": 1307726,
                "login": "mihnita",
                "node_id": "MDQ6VXNlcjEzMDc3MjY=",
                "organizations_url": "https://api.github.com/users/mihnita/orgs",
                "received_events_url": "https://api.github.com/users/mihnita/received_events",
                "repos_url": "https://api.github.com/users/mihnita/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mihnita",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ConEmu does not support neither OSC 52 nor XTGETTCAP\r\n>\r\n> ... `ConEmuHooks` seems to be set to `Enabled` even when I uncheck the option in Settings.\r\n\r\n👀 \r\n\r\n\r\n",
            "created_at": "2025-07-07T03:45:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/34817#issuecomment-3043391176",
            "id": 3043391176,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
            "node_id": "IC_kwDOAPphoM61ZnbI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043391176/reactions"
            },
            "updated_at": "2025-07-07T03:45:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3043391176",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34817/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34817/commits",
    "created_at": "2025-07-06T19:56:52Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34817.diff",
    "draft": false,
    "head": {
        "label": "mihnita:mihai_conemu_far_bug",
        "ref": "mihai_conemu_far_bug",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/mihnita/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/mihnita/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/mihnita/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/mihnita/neovim/branches{/branch}",
            "clone_url": "https://github.com/mihnita/neovim.git",
            "collaborators_url": "https://api.github.com/repos/mihnita/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/mihnita/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/mihnita/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/mihnita/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/mihnita/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/mihnita/neovim/contributors",
            "created_at": "2025-07-06T19:34:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/mihnita/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/mihnita/neovim/downloads",
            "events_url": "https://api.github.com/repos/mihnita/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/mihnita/neovim/forks",
            "full_name": "mihnita/neovim",
            "git_commits_url": "https://api.github.com/repos/mihnita/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/mihnita/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/mihnita/neovim/git/tags{/sha}",
            "git_url": "git://github.com/mihnita/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/mihnita/neovim/hooks",
            "html_url": "https://github.com/mihnita/neovim",
            "id": 1014983313,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/mihnita/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/mihnita/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/mihnita/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/mihnita/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/mihnita/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/mihnita/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/mihnita/neovim/merges",
            "milestones_url": "https://api.github.com/repos/mihnita/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOPH9qkQ",
            "notifications_url": "https://api.github.com/repos/mihnita/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
                "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
                "followers_url": "https://api.github.com/users/mihnita/followers",
                "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
                "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mihnita",
                "id": 1307726,
                "login": "mihnita",
                "node_id": "MDQ6VXNlcjEzMDc3MjY=",
                "organizations_url": "https://api.github.com/users/mihnita/orgs",
                "received_events_url": "https://api.github.com/users/mihnita/received_events",
                "repos_url": "https://api.github.com/users/mihnita/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mihnita",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/mihnita/neovim/pulls{/number}",
            "pushed_at": "2025-07-06T22:20:14Z",
            "releases_url": "https://api.github.com/repos/mihnita/neovim/releases{/id}",
            "size": 321997,
            "ssh_url": "git@github.com:mihnita/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/mihnita/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/mihnita/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/mihnita/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/mihnita/neovim/subscription",
            "svn_url": "https://github.com/mihnita/neovim",
            "tags_url": "https://api.github.com/repos/mihnita/neovim/tags",
            "teams_url": "https://api.github.com/repos/mihnita/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/mihnita/neovim/git/trees{/sha}",
            "updated_at": "2025-07-06T19:34:58Z",
            "url": "https://api.github.com/repos/mihnita/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "88925cf5f37ca5678259b8a037fb0778bce70b69",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
            "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
            "followers_url": "https://api.github.com/users/mihnita/followers",
            "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
            "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mihnita",
            "id": 1307726,
            "login": "mihnita",
            "node_id": "MDQ6VXNlcjEzMDc3MjY=",
            "organizations_url": "https://api.github.com/users/mihnita/orgs",
            "received_events_url": "https://api.github.com/users/mihnita/received_events",
            "repos_url": "https://api.github.com/users/mihnita/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mihnita",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34817",
    "id": 2644953563,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34817",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "4ef77cbdd509450cf80b249d3194d8bff3977603",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6dpsnb",
    "number": 34817,
    "patch_url": "https://github.com/neovim/neovim/pull/34817.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34817/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/88925cf5f37ca5678259b8a037fb0778bce70b69",
    "title": "fix(osc52): no foreground colors in FAR+ConEmu",
    "updated_at": "2025-07-07T03:46:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34817",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1307726?v=4",
        "events_url": "https://api.github.com/users/mihnita/events{/privacy}",
        "followers_url": "https://api.github.com/users/mihnita/followers",
        "following_url": "https://api.github.com/users/mihnita/following{/other_user}",
        "gists_url": "https://api.github.com/users/mihnita/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mihnita",
        "id": 1307726,
        "login": "mihnita",
        "node_id": "MDQ6VXNlcjEzMDc3MjY=",
        "organizations_url": "https://api.github.com/users/mihnita/orgs",
        "received_events_url": "https://api.github.com/users/mihnita/received_events",
        "repos_url": "https://api.github.com/users/mihnita/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mihnita/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mihnita/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mihnita",
        "user_view_type": "public"
    }
}