{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29601/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29601/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/29601"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29601"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29601/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29601"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/0f663ae5812db5e81d2a3ca48a00670ec181de8c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6116,
            "forks_count": 6116,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1969,
            "open_issues_count": 1969,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-10T00:47:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 327001,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90210,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-10T02:19:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90210,
            "watchers_count": 90210,
            "web_commit_signoff_required": false
        },
        "sha": "e5ff3020330e7c961299b991448653a46817188f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Allows injection ranges to span quantified node captures. I had made this PR mostly for the sake of convenience but I have also noticed it's made injections more robust in certain ways:\r\n\r\n- Empty injection ranges are ignored (see the modification in `parser_spec`; previously, the ranges were not counted before because they were empty, so I had to change the offset amount)\r\n- Most use cases for `injection.combined` are now obsolete\r\n  - The only cases where it would still be necessary (that I can think of) are when you really need a combined injection range and you cannot capture both nodes for that combination in just a single query.\r\n- Combined injection ranges span the in-between area more accurately. See the below images:\r\n\r\nBefore:\r\n![beforeinjection](https://github.com/neovim/neovim/assets/55766287/f9f8e90c-96a6-493c-8554-881646276326)\r\n\r\nAfter:\r\n![afterinjection](https://github.com/neovim/neovim/assets/55766287/6b618f6c-b844-491f-a31f-70b10bb1fbeb)\r\n\r\n**Question:** Was the previous behavior intended? Perhaps there are cases where parsing the content in-between the combined range (rather than just combining the nodes themselves and parsing only those) leads to undesirable highlighting? I couldn't find an answer to that question from the documentation, but it is very specific. Perhaps a reviewer wiser than myself can answer it\r\n\r\n---\r\n\r\nI will add tests later, if this PR is deemed acceptable",
    "closed_at": "2025-06-07T13:51:35Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Ok, some more thoughts. Currently, `injection.combined` is pretty buggy. If I wanted to have the following type of injection:\r\n```scheme\r\n(arguments\r\n  (string\r\n    (string_content) @injection.content)\r\n  (#set! injection.combined)\r\n  (#set! injection.language \"c\"))\r\n```\r\nthe entire injection has the same range, leading to highlights bleeding into other areas, which is undesirable. See the following image:\r\n\r\n![buggyinjection](https://github.com/neovim/neovim/assets/55766287/32ba480c-648a-46ee-b85a-c84a66ccbbdb)\r\n\r\nHowever, as this PR stands now, there is no easy way to achieve injection ranges for the above. #27504 would help, but it would still only be giving an ugly way to solve this problem (we would have to calculate an offset for everything, and this can be bad because who knows if, e.g. the strings above will or will not have a trailing comma?). In my opinion, the proper way forward would be to use quantified captures in place of what `injection.combined` used to be needed for, and keep `injection.combined` for special cases.\r\n\r\nSpecial cases would apply to, e.g., the `html_tag` injection shown in the PR description. In the `lua` arguments example, we don't want to inject the range in-between each node, since that would mean the string delimiters and trailing commas also get injected. However, we do want the text in-between to be part of the injection for the HTML tags in Markdown, because then we get a nice highlight for the text inside the tags (which doesn't exist now).\r\n\r\n---\r\n\r\n**TLDR:** I would like to propose a new meaning for `injection.combined`. For\r\n\r\n```\r\nother NODETYPE other\r\nother NODETYPE other\r\n```\r\n\r\nThe query\r\n\r\n```scheme\r\n(NODETYPE)+ @injection.content\r\n```\r\n\r\nshould inject:\r\n\r\n```\r\nother ******** other\r\nother ******** other\r\n```\r\nand\r\n\r\n```scheme\r\n((NODETYPE)+ @injection.content (#set! injection.combined))\r\n```\r\nshould inject:\r\n\r\n```\r\nother **************\r\n************** other\r\n```\r\n\r\n@clason @justinmk @lewis6991 does this sound like an acceptable change?",
            "created_at": "2024-07-08T01:18:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2212737235",
            "id": 2212737235,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6D47DT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2212737235/reactions"
            },
            "updated_at": "2024-07-08T14:10:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2212737235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Question: Was the previous behavior intended? Perhaps there are cases where parsing the content in-between the combined range (rather than just combining the nodes themselves and parsing only those) leads to undesirable highlighting? I couldn't find an answer to that question from the documentation, but it is very specific. Perhaps a reviewer wiser than myself can answer it\r\n\r\nIt does lead to undesirable highlighting, but not from neovim core's side. nvim-treesitter had issues filed before related to php highlighting getting overridden by html.",
            "created_at": "2024-07-08T01:28:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2212749504",
            "id": 2212749504,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6D4-DA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2212749504/reactions"
            },
            "updated_at": "2024-07-08T01:37:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2212749504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think we should first ask upstream to decide, document, and implement the official behavior of injections for quantified nodes (like we did for `#any-of?` and friends). This ensures that the behavior is standardized across editors so we can share injection queries.",
            "created_at": "2024-07-13T09:40:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2226838709",
            "id": 2226838709,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6Euty1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2226838709/reactions"
            },
            "updated_at": "2024-07-13T09:40:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2226838709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Relevant ideas from Helix here: https://github.com/helix-editor/helix/discussions/11157; that's a bit orthogonal to how quantified nodes should be handled.\r\n",
            "created_at": "2024-08-04T15:27:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2267580612",
            "id": 2267580612,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HKIjE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2267580612/reactions"
            },
            "updated_at": "2024-08-04T15:36:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2267580612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can we -- as a first step -- _just_ add handling of quantified nodes and leave any changes to `@injection.combined` to a followup after the upstream discussion is concluded?",
            "created_at": "2024-08-05T09:22:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2268591062",
            "id": 2268591062,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HN_PW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2268591062/reactions"
            },
            "updated_at": "2024-08-05T09:22:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2268591062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure, but how should the behavior be handled? Should consecutive nodes have their injection ranges merged (e.g. text between two tags)? Or separate?",
            "created_at": "2024-08-05T12:55:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2269010629",
            "id": 2269010629,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HPlrF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269010629/reactions"
            },
            "updated_at": "2024-08-05T12:55:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269010629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think as you propose them to be handled. (Basically, quantified injections should be the \"better injection.combined\", as you say.)\r\n\r\nWe don't need to handle _all_ situations out of the box, it's enough to handle _some_ (most common) situations correctly, and better than before. It's ok to leave other, more contentious, situation unhandled and unspecified (UB).",
            "created_at": "2024-08-05T12:59:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2269019160",
            "id": 2269019160,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HPnwY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269019160/reactions"
            },
            "updated_at": "2024-08-05T13:02:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269019160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Cool I can do that. One last thing to mention: if I do that and if the injection.combined changes ever get merged, it would require another change to the quantified captures to go from a combined range to a non-combined range (just the sum of the individual node ranges). Since the range combination would be handled by the predicate. I don't know if that change would qualify as breaking though, or if it is it's at least low impact hopefully. Still ok to go through with this PR?",
            "created_at": "2024-08-05T13:02:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2269026081",
            "id": 2269026081,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HPpch",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269026081/reactions"
            },
            "updated_at": "2024-08-05T13:02:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269026081",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think there's two different issues here:\r\n1. **global** scope combination: _all_ injected nodes for a language get treated as _one single_ document -- this is what `@injection.combined` does. \r\n2. **local** scope combination: all captured nodes _in a pattern_ get treated as a combined node -- this doesn't exist yet and is what this proposal is about.\r\n\r\nOnce you have both, you have to decide on how the combination behaves. Easy answer for now: not at all; just don't use it yet. Less easy (but most compatible) answer: Same as before: all captured nodes get added to the \"global\" context, whether they are quantified or not. This would already improve the situation (and not be breaking).\r\n\r\nYour \"extended range\" version is a third option, but while I see how that would be useful, I would like to keep it out of the scope for now until the upstream discussion has concluded. This would punt any breaking changes to a single future PR.\r\n\r\nDoes that make sense?",
            "created_at": "2024-08-05T13:10:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2269043867",
            "id": 2269043867,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HPtyb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269043867/reactions"
            },
            "updated_at": "2024-08-05T13:24:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269043867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just to be on clear side, here's what I suggest for _this_ PR:\r\n\r\nAssume you have \r\n```\r\nother NODETYPE other\r\nother NODETYPE other\r\n\r\nsomething other entirely\r\n\r\nother NODETYPE other\r\nother NODETYPE other\r\n```\r\n\r\nThen (numbers denote distinct contexts for parsing)\r\n1. `(NODETYPE) @injection.content` should capture\r\n```\r\nother 11111111 other\r\nother 22222222 other\r\n\r\nsomething other entirely\r\n\r\nother 33333333 other\r\nother 44444444 other\r\n```\r\n2. `(NODETYPE)+ @injection.content` should capture\r\n```\r\nother 11111111 other\r\nother 11111111 other\r\n\r\nsomething other entirely\r\n\r\nother 22222222 other\r\nother 22222222 other\r\n```\r\n3. `((NODETYPE)+ @injection.content)(#set! injection.combined)` should capture\r\n```\r\nother 11111111 other\r\nother 11111111 other\r\n\r\nsomething other entirely\r\n\r\nother 11111111 other\r\nother 11111111 other\r\n```\r\n(which is the same as `((NODETYPE) @injection.content)(#set! injection.combined)`).\r\n\r\n(Assuming quantified nodes actually capture non-adjacent matches, which I'm not 100% sure about.)\r\n\r\nAnd any behavior that involves extending ranges beyond the nodes itself should be left to a dedicated directive (TBD). Basically, this PR should only be about adding option 2, which so far has been missing but would cover (correctly) ~90% of the current (often incorrect) uses of `injection.combined`. This would then not be a breaking change.\r\n\r\n\r\n\r\n",
            "created_at": "2024-08-05T13:32:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2269089651",
            "id": 2269089651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HP49z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269089651/reactions"
            },
            "updated_at": "2024-08-05T13:35:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269089651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry for the back and forth, but I am fairly confident that this proposal (which I believe matches yours from https://github.com/neovim/neovim/pull/29601#issuecomment-2212737235) is what matches upstream intention and will address most current issues (as you write, the current global `injection.combined` does not work properly in a number of situations, e.g., https://github.com/nvim-treesitter/nvim-treesitter/issues/6530 or https://github.com/nvim-treesitter/nvim-treesitter/issues/7013).\r\n\r\nIt will not cover embedded HTML tags, but those are another kettle of fish entirely and probably require a bespoke solution. (In your first example, what would happen if one of the tags got deleted for some reason?)",
            "created_at": "2024-08-05T14:19:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2269197131",
            "id": 2269197131,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HQTNL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269197131/reactions"
            },
            "updated_at": "2024-08-06T06:48:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2269197131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sounds good, I'll get on it. As for the later point, at that point maybe the bespoke solution would render my initial injection.combined proposal unnecessary. Gonna postpone giving it more thought for now",
            "created_at": "2024-08-06T04:04:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2270339130",
            "id": 2270339130,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6HUqA6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2270339130/reactions"
            },
            "updated_at": "2024-08-06T04:04:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2270339130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, I think this will require more effort. Looks like there is no notion of a global or local injection scope right now, `injection.combined` just makes it so that the ranges are themselves all combined (which incidentally parses it as the same document, and also leads to the highlighting artifacts). Some scope implementation will have to be added for this to work",
            "created_at": "2024-08-10T16:58:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2282209736",
            "id": 2282209736,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6IB8HI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282209736/reactions"
            },
            "updated_at": "2024-08-10T16:58:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282209736",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> which incidentally parses it as the same document\r\n\r\nNot incidentally; that's how it's intended to work ;)",
            "created_at": "2024-08-10T16:59:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2282210058",
            "id": 2282210058,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6IB8MK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282210058/reactions"
            },
            "updated_at": "2024-08-10T16:59:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282210058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It works differently in the CLI though. Something like `\"injecthere${butnothere}injecthere\"` would have the two \"injecthere\" strings (with `injection.combined`) parsed as one document, and the `${}` block will retain its own highlights. I.e., document combination is attained without range combination. In neovim the whole range gets combined and `${}` gets weird highlights",
            "created_at": "2024-08-10T17:27:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2282218692",
            "id": 2282218692,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6IB-TE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282218692/reactions"
            },
            "updated_at": "2024-08-10T17:27:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282218692",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, ok, that was a misunderstanding then. CLI is correct and we are not. We need to convert the range to a region (table of ranges) then.",
            "created_at": "2024-08-10T17:31:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2282219759",
            "id": 2282219759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6IB-jv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282219759/reactions"
            },
            "updated_at": "2024-08-10T17:31:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282219759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah. But this is how it is already for non-combined injections. So the only notion of injection combination right now is whether the actual range is contiguous. So for that to work there needs to be some scoping or some other index to refer to different trees of the same language (I think)",
            "created_at": "2024-08-10T17:34:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2282220793",
            "id": 2282220793,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6IB-z5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282220793/reactions"
            },
            "updated_at": "2024-08-10T17:34:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282220793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, I think that was an early assumption that was never revisited. I agree that this requires a bigger rewrite, unfortunately. How does the CLI (or, better, Helix) handle this? Do they manually stitch the ranges together (how?) or let the tree-sitter handle this (somehow)?",
            "created_at": "2024-08-10T17:38:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2282221837",
            "id": 2282221837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6IB_EN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282221837/reactions"
            },
            "updated_at": "2024-08-10T17:38:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282221837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not sure, I'll investigate",
            "created_at": "2024-08-10T17:40:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/29601#issuecomment-2282222520",
            "id": 2282222520,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
            "node_id": "IC_kwDOAPphoM6IB_O4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282222520/reactions"
            },
            "updated_at": "2024-08-10T17:40:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282222520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29601/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/29601/commits",
    "created_at": "2024-07-07T19:13:44Z",
    "diff_url": "https://github.com/neovim/neovim/pull/29601.diff",
    "draft": true,
    "head": {
        "label": "ribru17:quant_inj",
        "ref": "quant_inj",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-06-09T17:24:01Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 320765,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-06-09T17:22:32Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "0f663ae5812db5e81d2a3ca48a00670ec181de8c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/29601",
    "id": 1956543884,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29601",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM50nn2M",
    "number": 29601,
    "patch_url": "https://github.com/neovim/neovim/pull/29601.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/29601/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/0f663ae5812db5e81d2a3ca48a00670ec181de8c",
    "title": "feat(treesitter): handle quantified nodes for injection ranges",
    "updated_at": "2025-06-07T13:51:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/29601",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}