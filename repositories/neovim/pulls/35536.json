{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35536/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35536/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35536"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35536"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35536/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35536"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/5119c03be7a9d440ae1ab027c3879d2ad7e71bba"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6319,
            "forks_count": 6319,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1996,
            "open_issues_count": 1996,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-16T01:58:34Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 342721,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92776,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-16T02:14:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92776,
            "watchers_count": 92776,
            "web_commit_signoff_required": false
        },
        "sha": "d15936f6ef9b6d225b92d93369efaf2b1bb37474",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Continuing the work of #31400\r\n\r\nThat PR allowed the provider to be invoked multiple times per line. But we only want to do that when there actually is more data later on the line, otherwise it is just lua VM overhead for no good. Additionally, we want to skip over lines which contain no new highlight items. The TS query cursor already tells us what the next position with more data is, so there is no need to reinvoke the range callback before that.\r\n\r\nNB: this removes the double buffering introduced in #32619 which is fundamentally incompatible with this (nvim core is supposed to keep track of long ranges by itself, without requiring a callback reinvoke blitz). Need to adjust the priorities some other way to fix the same issue.\r\n\r\n<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\n",
    "closed_at": "2025-09-09T18:53:32Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35536#discussion_r2328365107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328365107"
                }
            },
            "author_association": "MEMBER",
            "body": "Any reason not to drop support for boolean?",
            "commit_id": "5119c03be7a9d440ae1ab027c3879d2ad7e71bba",
            "created_at": "2025-09-06T21:04:28Z",
            "diff_hunk": "@@ -3336,6 +3336,12 @@ nvim_set_decoration_provider({ns_id}, {opts})\n                    included. >\n                     [\"range\", winid, bufnr, begin_row, begin_col, end_row, end_col]\n <\n+                   In addition to returning a boolean, it is also allowed to\n+                   return a `skip_row, skip_col` pair of integers. This",
            "html_url": "https://github.com/neovim/neovim/pull/35536#discussion_r2328365107",
            "id": 2328365107,
            "line": 3366,
            "node_id": "PRRC_kwDOAPphoM6KyAgz",
            "original_commit_id": "049184eb5a8cec100b1fbd17a7dbc10d28a04960",
            "original_line": 3366,
            "original_position": 5,
            "original_start_line": 3339,
            "path": "runtime/doc/api.txt",
            "position": 5,
            "pull_request_review_id": 3193900546,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328365107/reactions"
            },
            "side": "RIGHT",
            "start_line": 3365,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-06T21:04:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328365107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35536#discussion_r2328596765"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328596765"
                }
            },
            "author_association": "MEMBER",
            "body": "could do, but `return false` might be more convenient than `return 2147483647` if you have a branch somewhere where you just want to skip the entire window.\r\n\r\nWe could of course use `-1` for the same purpose, but `return false` is what someone would guess would work given all the other callbacks. ",
            "commit_id": "5119c03be7a9d440ae1ab027c3879d2ad7e71bba",
            "created_at": "2025-09-07T09:37:48Z",
            "diff_hunk": "@@ -3336,6 +3336,12 @@ nvim_set_decoration_provider({ns_id}, {opts})\n                    included. >\n                     [\"range\", winid, bufnr, begin_row, begin_col, end_row, end_col]\n <\n+                   In addition to returning a boolean, it is also allowed to\n+                   return a `skip_row, skip_col` pair of integers. This",
            "html_url": "https://github.com/neovim/neovim/pull/35536#discussion_r2328596765",
            "id": 2328596765,
            "in_reply_to_id": 2328365107,
            "line": 3366,
            "node_id": "PRRC_kwDOAPphoM6Ky5Ed",
            "original_commit_id": "049184eb5a8cec100b1fbd17a7dbc10d28a04960",
            "original_line": 3366,
            "original_position": 5,
            "original_start_line": 3339,
            "path": "runtime/doc/api.txt",
            "position": 5,
            "pull_request_review_id": 3194335217,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328596765/reactions"
            },
            "side": "RIGHT",
            "start_line": 3365,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-07T09:37:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328596765",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35536#discussion_r2328772592"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328772592"
                }
            },
            "author_association": "MEMBER",
            "body": "> might be more convenient than `return 2147483647`\r\n\r\nCould `math.huge` work? \r\n\r\nGenerally we favor simpler types/logic, especially for uncommon use-cases (this is a rather low-level interface).\r\n\r\nNot a blocker.",
            "commit_id": "5119c03be7a9d440ae1ab027c3879d2ad7e71bba",
            "created_at": "2025-09-07T17:21:15Z",
            "diff_hunk": "@@ -3336,6 +3336,12 @@ nvim_set_decoration_provider({ns_id}, {opts})\n                    included. >\n                     [\"range\", winid, bufnr, begin_row, begin_col, end_row, end_col]\n <\n+                   In addition to returning a boolean, it is also allowed to\n+                   return a `skip_row, skip_col` pair of integers. This",
            "html_url": "https://github.com/neovim/neovim/pull/35536#discussion_r2328772592",
            "id": 2328772592,
            "in_reply_to_id": 2328365107,
            "line": 3366,
            "node_id": "PRRC_kwDOAPphoM6Kzj_w",
            "original_commit_id": "049184eb5a8cec100b1fbd17a7dbc10d28a04960",
            "original_line": 3366,
            "original_position": 5,
            "original_start_line": 3339,
            "path": "runtime/doc/api.txt",
            "position": 5,
            "pull_request_review_id": 3194529301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328772592/reactions"
            },
            "side": "RIGHT",
            "start_line": 3365,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-07T17:21:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328772592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "a solution for the original problem might actually be to just adjust the priorities in `highlight.scm` without any extra mechanism. \r\n\r\nThe \"priority\" property exists in order to be used, which it was not in the example query. if it is to be expected that `comment` contains general elements of the same language which should take priority over interleaving comment continuation chars, then priority of comment should be lowered.",
            "created_at": "2025-08-29T14:55:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3237330278",
            "id": 3237330278,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7A9b1m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237330278/reactions"
            },
            "updated_at": "2025-08-29T14:55:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237330278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "General note: Templating languages (which is where this issue comes from) are simply cursed and in general a poor fit for tree-sitter's hierarchical injection model. I have often said that these should be handled by dedicated plugins that ship a bespoke set of queries. (Of course, this would require buffer-local queries, which is a general and high-level desideratum.)",
            "created_at": "2025-08-29T15:05:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3237357867",
            "id": 3237357867,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7A9ikr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237357867/reactions"
            },
            "updated_at": "2025-08-29T15:05:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237357867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There are some cases where the same node can be both a container and be contained within other nodes, in which case the tree depth would determine which highlighting should be applied, e.g. for the comment node. If we set its priority lower, then this would break:\r\n\r\n```javascript\r\nelement.innerHTML = '<img onclick=\"/* I am a comment inside of 2 strings */\">'\r\n```\r\n\r\nWhich nvim-treesitter currently highlights as expected:\r\n\r\n<img width=\"1105\" height=\"49\" alt=\"image\" src=\"https://github.com/user-attachments/assets/216544a4-b94a-4d6f-86a5-d6879c1504d1\" />\r\n",
            "created_at": "2025-08-29T17:22:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3237721032",
            "id": 3237721032,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7A-7PI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237721032/reactions"
            },
            "updated_at": "2025-08-29T17:27:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237721032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> NB: this removes the double buffering introduced in https://github.com/neovim/neovim/pull/32619 which is fundamentally incompatible with this (nvim core is supposed to keep track of long ranges by itself, without requiring a callback reinvoke blitz). Need to adjust the priorities some other way to fix the same issue.\r\n\r\nWould it work if we pass `skip_until_row` and `skip_until_col` as `range_end_row` and `range_end_col` into `add_mark()`?",
            "created_at": "2025-08-29T17:24:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3237724702",
            "id": 3237724702,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7A-8Ie",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237724702/reactions"
            },
            "updated_at": "2025-08-29T17:24:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3237724702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> There are some cases where the same node can be both a container and be contained within other nodes, in which case the tree depth would determine which highlighting should be applied, e.g. for the comment node. If we set its priority lower, then this would break\r\n\r\nBut in this case **strings** are used as the node where injections might happen. Thus even by the _very_ simple rule I suggested, by applying it what it actually means, \"string\" would get its priority lowered, not comment. For this particular filetype-scenario. So it would still work.\r\n\r\nBut my point more generally is rather that the core decoration mechanism allows for `2*16 = 65536` distinct priority levels. A plugin supporting a weird templating scenario where language A is embedded inside language B embedded inside another copy of language A might want to use a modified copy for highlights for the two different A layers, where priorities have been systematically adjusted for the inner layer to be consistently higher (nvim core could even help with this perhaps. it would be a setup cost, which is strongly preferred over making the highlighting hot loop more costly).\r\n\r\nWe even discussed making the \"internal\" priority space for providers larger before (32-bits), which is still possible but I'd like to see an attempt of making a dent into the full 16-bit dynamic range (a normal color dynamic range is 8-10 bits!) before that. Or nesting a lua-layer copy of `kvec(DecorRangeSlot)` just to emulate priority values which has not yet been properly specified. ",
            "created_at": "2025-08-30T09:34:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3239149492",
            "id": 3239149492,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7BEX-0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239149492/reactions"
            },
            "updated_at": "2025-08-30T09:34:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239149492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  might want to use a modified copy for highlights for the two different A layers\r\n\r\nThat is (currently) not possible.",
            "created_at": "2025-08-30T09:36:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3239150471",
            "id": 3239150471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7BEYOH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239150471/reactions"
            },
            "updated_at": "2025-08-30T09:36:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239150471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm I think it is possible (as a third party plugin) but inconvenient: you need to register it as two separate languages \"A1\" and \"A2\" (which can be done as you can load a language under a different name). The task at hand is to find a less kludgy abstraction which has the same effect:p\r\n\r\nAFAIK \"priority\" is a concept which nvim owns entirely, and not something which upstream tree-sitter-highlight or tree-house and so on and so on cares about. What we need to figure out is the right spots a multi-lang filetype like this can enter the necessary information (which can involve _maths_, not just specifying up to 65536 levels manually)",
            "created_at": "2025-08-30T09:59:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3239160863",
            "id": 3239160863,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7BEawf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239160863/reactions"
            },
            "updated_at": "2025-08-30T09:59:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239160863",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Agreed; you can likely make it work manually (i.e., bypassing Neovim's automatic language resolution and loading completely while manipulating the symbol), and this is what it may take for template languages (in plugins).\r\n\r\nYou are also correct that `priority` is a Neovim-only metadata, so we are free to handle this (or not) however we wish. Two things to note:\r\n1. over time, we have become more averse to deviating from \"vanilla\" tree-sitter queries (where these are canonical: injections and highlights) even if some early addition will have to stay;\r\n2. Neovim is unique in having an extensive, distributed parser/query support (through nvim-treesitter), so we get requests for situations that other editors simply don't handle.\r\n\r\nPersonally, I also think that (explicit) priorities are the wrong tool for handling cross-language conflicts, since we can't control the combination of arbitrary queries from arbitrary sources. (I also want to see less reliance on it for _intra_-language conflicts as tree-sitter has a number of inherent levers for that already.)\r\n\r\nSo after thinking about it, I'd prefer at least investigating whether this could be handled by implicit \"injection layer\" priorities, with a manual offset via metadata if necessary. (My first thought was that injection queries have a stronger claim to being upstream compatible, but now I believe that this is less intrusive since a) it involves fewer modifications, b) unknown metadata is just ignored so safe and c) we might be able to interest upstream in a good proposal -- they suffer from template languages, same as we.)\r\n\r\nThis might require quite a bit of churn on nvim-treesitter, but since people are already calling it \"chaotic\", I no longer care about that.\r\n\r\n\r\n",
            "created_at": "2025-08-30T10:14:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3239168431",
            "id": 3239168431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7BEcmv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239168431/reactions"
            },
            "updated_at": "2025-09-05T09:55:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239168431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I also think that we should distinguish two issues here:\r\n1. the minimal example from https://github.com/neovim/neovim/issues/31777, which should Just Work and is hence a bug to fix in the implementation (whichever way works best for us);\r\n2. injection sandwiches for template languages (which require a proper design of parsers/queries, ideally upstream -- i.e., Not Our Problem).",
            "created_at": "2025-08-30T10:25:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3239173499",
            "id": 3239173499,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7BEd17",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239173499/reactions"
            },
            "updated_at": "2025-08-30T10:25:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239173499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's a good (ecosystem focused) summary, thanks.\r\n\r\nThinking a bit out loud more loud, if we really don't want to tackle this in the 0.12 cycle but want to keep the implicit \"layer\" rule currently on master, then there's a _shocking_ revelation:\r\n\r\n #32619 really just is the old \"subpriorities\" in disguise, but (1) re-implemented in the lua layer and (2) setting the subpriority value to be the nesting layer index instead of whetever it worked around the last time around. Thus if that is what we want to ship master behavior for 0.12, I would much rather revive the last revision of the sub-priorities PR (where it was a _hidden_ undocumented concept, exposed to internal TS lua code only, so we can remove it for 0.13 again) than stacking an entire lua layer.",
            "created_at": "2025-08-30T10:27:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3239174382",
            "id": 3239174382,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7BEeDu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239174382/reactions"
            },
            "updated_at": "2025-08-30T10:27:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3239174382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl, after these changes, I sometimes get an error:\r\n\r\n```log\r\ndecor_provider_error:29: Error in decoration provider \"range\" (ns=nvim.treesitter.highlighter):\r\nLua: ...nt\\share/nvim/runtime/lua/vim\\treesitter\\highlighter.lua:446: Invalid 'end_col': out of range\r\nstack traceback:\r\n\t[C]: in function 'nvim_buf_set_extmark'\r\n\t...nt\\share/nvim/runtime/lua/vim\\treesitter\\highlighter.lua:446: in function 'fn'\r\n\t...nt\\share/nvim/runtime/lua/vim\\treesitter\\highlighter.lua:247: in function 'for_each_highlight_state'\r\n\t...nt\\share/nvim/runtime/lua/vim\\treesitter\\highlighter.lua:365: in function <...nt\\share/nvim/runtime/lua/vim\\treesitter\\highlighter.lua:338>\r\n```\r\n\r\nThe error occurs when changing the buffer, but only with a sufficiently large _window height_ in which extended marks are displayed. Unfortunately, I don't have time for debugging right now.\r\n\r\n![Image](https://github.com/user-attachments/assets/fa00438c-a890-43f4-8c6a-b1fb4fadc247)\r\n\r\n> Tested in WezTerm, PowerShell, Nvy (UI)",
            "created_at": "2025-09-12T19:19:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3286556186",
            "id": 3286556186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7D5N4a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3286556186/reactions"
            },
            "updated_at": "2025-09-12T19:19:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3286556186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/700213?v=4",
                "events_url": "https://api.github.com/users/AlexMasterov/events{/privacy}",
                "followers_url": "https://api.github.com/users/AlexMasterov/followers",
                "following_url": "https://api.github.com/users/AlexMasterov/following{/other_user}",
                "gists_url": "https://api.github.com/users/AlexMasterov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AlexMasterov",
                "id": 700213,
                "login": "AlexMasterov",
                "node_id": "MDQ6VXNlcjcwMDIxMw==",
                "organizations_url": "https://api.github.com/users/AlexMasterov/orgs",
                "received_events_url": "https://api.github.com/users/AlexMasterov/received_events",
                "repos_url": "https://api.github.com/users/AlexMasterov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AlexMasterov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AlexMasterov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AlexMasterov",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not sure I should reply here or create a new issue for this.\r\nBut I am facing the same issue @AlexMasterov is describing.\r\n\r\npseudo repro steps:\r\n- open file with lsp active\r\n- trigger omnicompletion\r\n- then `dd` to delete the line.\r\n",
            "created_at": "2025-09-14T22:55:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/35536#issuecomment-3289997642",
            "id": 3289997642,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
            "node_id": "IC_kwDOAPphoM7EGWFK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289997642/reactions"
            },
            "updated_at": "2025-09-14T22:55:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3289997642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8631902?v=4",
                "events_url": "https://api.github.com/users/adiSuper94/events{/privacy}",
                "followers_url": "https://api.github.com/users/adiSuper94/followers",
                "following_url": "https://api.github.com/users/adiSuper94/following{/other_user}",
                "gists_url": "https://api.github.com/users/adiSuper94/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/adiSuper94",
                "id": 8631902,
                "login": "adiSuper94",
                "node_id": "MDQ6VXNlcjg2MzE5MDI=",
                "organizations_url": "https://api.github.com/users/adiSuper94/orgs",
                "received_events_url": "https://api.github.com/users/adiSuper94/received_events",
                "repos_url": "https://api.github.com/users/adiSuper94/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/adiSuper94/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adiSuper94/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/adiSuper94",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35536/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35536/commits",
    "created_at": "2025-08-29T10:31:15Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35536.diff",
    "draft": false,
    "head": {
        "label": "bfredl:skipahead",
        "ref": "skipahead",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/bfredl/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/bfredl/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/bfredl/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/bfredl/neovim/branches{/branch}",
            "clone_url": "https://github.com/bfredl/neovim.git",
            "collaborators_url": "https://api.github.com/repos/bfredl/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/bfredl/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/bfredl/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/bfredl/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/bfredl/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/bfredl/neovim/contributors",
            "created_at": "2014-06-20T19:51:31Z",
            "default_branch": "wonderland-branch",
            "deployments_url": "https://api.github.com/repos/bfredl/neovim/deployments",
            "description": "vim's rebirth for the 21st century",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/bfredl/neovim/downloads",
            "events_url": "https://api.github.com/repos/bfredl/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/bfredl/neovim/forks",
            "full_name": "bfredl/neovim",
            "git_commits_url": "https://api.github.com/repos/bfredl/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/bfredl/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/bfredl/neovim/git/tags{/sha}",
            "git_url": "git://github.com/bfredl/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://neovim.org/",
            "hooks_url": "https://api.github.com/repos/bfredl/neovim/hooks",
            "html_url": "https://github.com/bfredl/neovim",
            "id": 21050434,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/bfredl/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/bfredl/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/bfredl/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/bfredl/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/bfredl/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/bfredl/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/bfredl/neovim/merges",
            "milestones_url": "https://api.github.com/repos/bfredl/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTA1MDQzNA==",
            "notifications_url": "https://api.github.com/repos/bfredl/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/bfredl/neovim/pulls{/number}",
            "pushed_at": "2025-09-15T10:10:26Z",
            "releases_url": "https://api.github.com/repos/bfredl/neovim/releases{/id}",
            "size": 345702,
            "ssh_url": "git@github.com:bfredl/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/bfredl/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/bfredl/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/bfredl/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/bfredl/neovim/subscription",
            "svn_url": "https://github.com/bfredl/neovim",
            "tags_url": "https://api.github.com/repos/bfredl/neovim/tags",
            "teams_url": "https://api.github.com/repos/bfredl/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/bfredl/neovim/git/trees{/sha}",
            "updated_at": "2025-01-16T13:11:08Z",
            "url": "https://api.github.com/repos/bfredl/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "5119c03be7a9d440ae1ab027c3879d2ad7e71bba",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35536",
    "id": 2784428186,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35536",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1786207367,
            "name": "highlight",
            "node_id": "MDU6TGFiZWwxNzg2MjA3MzY3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/highlight"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b95aedeae4e57f3900410678f47e6ddd69a5357d",
    "merged_at": "2025-09-09T18:53:32Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6l9wCa",
    "number": 35536,
    "patch_url": "https://github.com/neovim/neovim/pull/35536.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35536/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/5119c03be7a9d440ae1ab027c3879d2ad7e71bba",
    "title": "perf(highlight): allow decoration providers to skip ranges without data",
    "updated_at": "2025-09-14T22:55:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35536",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    }
}