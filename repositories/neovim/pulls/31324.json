{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31324/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31324/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31324"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31324"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31324/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5893,
            "forks_count": 5893,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1874,
            "open_issues_count": 1874,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-25T01:17:51Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 309174,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 86583,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-25T02:27:01Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 86583,
            "watchers_count": 86583,
            "web_commit_signoff_required": false
        },
        "sha": "56fabcadb6df46c70402e4f9cd1b851856fb57e9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "**feat(marks): add conceal_lines to nvim_buf_set_extmark()**\r\n\r\nImplement an extmark property that conceals lines vertically.\r\n\r\n**feat(treesitter): vertical conceal for conceal nodes**\r\n\r\nTSHighlighter now places marks for conceal_lines metadata. A new\r\ninternal decor provider callback _on_conceal_line was added that\r\ninstructs the highlighter to place conceal_lines marks whenever the\r\neditor needs to know whether a line is concealed. The bundled markdown\r\nqueries use `conceal_lines` metadata to conceal code block fence lines.\r\n\r\nWork on #25718",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1856190362"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856190362"
                }
            },
            "author_association": "MEMBER",
            "body": "is `moved` for the cursor? perhaps `cursor_moved` is more explicit ",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-25T09:10:18Z",
            "diff_hunk": "@@ -702,8 +705,41 @@ int sign_item_cmp(const void *p1, const void *p2)\n   return 0;\n }\n \n-static const uint32_t sign_filter[4] = {[kMTMetaSignText] = kMTFilterSelect,\n-                                        [kMTMetaSignHL] = kMTFilterSelect };\n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLine] = kMTFilterSelect };\n+\n+bool decor_conceal_line(win_T *wp, buf_T *buf, int row, bool moved)",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1856190362",
            "id": 1856190362,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5uozea",
            "original_commit_id": "c065f69a057b333994026414895541d856f91c6c",
            "original_line": 710,
            "original_position": 18,
            "original_start_line": null,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2457762132,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856190362/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-25T09:10:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856190362",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1856196880"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856196880"
                }
            },
            "author_association": "MEMBER",
            "body": "perhaps this should be checked directly in `win_update()` ? avoids the extra return value . ",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-25T09:14:15Z",
            "diff_hunk": "@@ -906,10 +906,14 @@ static int get_rightmost_vcol(win_T *wp, const int *color_cols)\n ///                            items will be disables if they cause errors\n ///                            or explicitly return `false`.\n ///\n-/// @return             the number of last row the line occupies.\n+/// @return             last row the line occupies, or -1 when concealed\n int win_line(win_T *wp, linenr_T lnum, int startrow, int endrow, int col_rows, spellvars_T *spv,\n              foldinfo_T foldinfo)\n {\n+  if (decor_conceal_line(wp, wp->w_buffer, lnum - 1, false)) {",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1856196880",
            "id": 1856196880,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5uo1EQ",
            "original_commit_id": "c065f69a057b333994026414895541d856f91c6c",
            "original_line": 913,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/drawline.c",
            "position": null,
            "pull_request_review_id": 2457775416,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856196880/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-25T09:14:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856196880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1856248004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856248004"
                }
            },
            "author_association": "MEMBER",
            "body": "callsites still expect `foldedp` to be set (I get UBSAN errors otherwise), could  use `if (foldedp) { *foldedp = false; }`",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-25T09:43:00Z",
            "diff_hunk": "@@ -881,6 +885,10 @@ int plines_win_col(win_T *wp, linenr_T lnum, long column)\n int plines_win_full(win_T *wp, linenr_T lnum, linenr_T *const nextp, bool *const foldedp,\n                     const bool cache, const bool limit_winheight)\n {\n+  if (decor_conceal_line(wp, wp->w_buffer, lnum - 1, false)) {\n+    return 0;",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1856248004",
            "id": 1856248004,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5upBjE",
            "original_commit_id": "c065f69a057b333994026414895541d856f91c6c",
            "original_line": 892,
            "original_position": 25,
            "original_start_line": null,
            "path": "src/nvim/plines.c",
            "position": null,
            "pull_request_review_id": 2457853881,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856248004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-25T09:43:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856248004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1856690974"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856690974"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes but the argument only made sense for cursor movement to the an adjacent line, so I removed it (and replaced it with separate calls).\r\n\r\nEDIT: Added it back to aggregate early cursorline returns, except when we also need to check to previous cursor position. (Still doesn't affect the range anymore).",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-25T14:15:45Z",
            "diff_hunk": "@@ -702,8 +705,41 @@ int sign_item_cmp(const void *p1, const void *p2)\n   return 0;\n }\n \n-static const uint32_t sign_filter[4] = {[kMTMetaSignText] = kMTFilterSelect,\n-                                        [kMTMetaSignHL] = kMTFilterSelect };\n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLine] = kMTFilterSelect };\n+\n+bool decor_conceal_line(win_T *wp, buf_T *buf, int row, bool moved)",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1856690974",
            "id": 1856690974,
            "in_reply_to_id": 1856190362,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5uqtse",
            "original_commit_id": "c065f69a057b333994026414895541d856f91c6c",
            "original_line": 710,
            "original_position": 18,
            "original_start_line": null,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2458561364,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856690974/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-27T16:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1856690974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1857470120"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857470120"
                }
            },
            "author_association": "MEMBER",
            "body": "Does this work if you move it to `redraw_for_cursorline()`?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-25T23:29:25Z",
            "diff_hunk": "@@ -506,6 +508,14 @@ void check_cursor_moved(win_T *wp)\n   if (wp->w_cursor.lnum != wp->w_valid_cursor.lnum) {\n     wp->w_valid &= ~(VALID_WROW|VALID_WCOL|VALID_VIRTCOL\n                      |VALID_CHEIGHT|VALID_CROW|VALID_TOPLINE);\n+\n+    // Concealed line visibility toggled.\n+    if (wp->w_p_cole >= 2 && !conceal_cursor_line(wp)\n+        && (decor_conceal_line(wp, wp->w_buffer, wp->w_cursor.lnum - 1)\n+            || decor_conceal_line(wp, wp->w_buffer, wp->w_valid_cursor.lnum - 1))) {\n+      // TODO(luukvbaal): shouldn't have to redraw entire window but scroll instead.\n+      wp->w_lines_valid = 0;\n+    }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1857470120",
            "id": 1857470120,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5utr6o",
            "original_commit_id": "2dcf30c0fafb7bfbc5ce1752b5e5e1b27b1644a0",
            "original_line": 513,
            "original_position": 21,
            "original_start_line": 511,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 2459831112,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857470120/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-25T23:29:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857470120",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1857473366"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857473366"
                }
            },
            "author_association": "MEMBER",
            "body": "Unfortunately it doesn't. I checked that before and debugged why it doesn't but forgot the exact reason x)",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-25T23:34:24Z",
            "diff_hunk": "@@ -506,6 +508,14 @@ void check_cursor_moved(win_T *wp)\n   if (wp->w_cursor.lnum != wp->w_valid_cursor.lnum) {\n     wp->w_valid &= ~(VALID_WROW|VALID_WCOL|VALID_VIRTCOL\n                      |VALID_CHEIGHT|VALID_CROW|VALID_TOPLINE);\n+\n+    // Concealed line visibility toggled.\n+    if (wp->w_p_cole >= 2 && !conceal_cursor_line(wp)\n+        && (decor_conceal_line(wp, wp->w_buffer, wp->w_cursor.lnum - 1)\n+            || decor_conceal_line(wp, wp->w_buffer, wp->w_valid_cursor.lnum - 1))) {\n+      // TODO(luukvbaal): shouldn't have to redraw entire window but scroll instead.\n+      wp->w_lines_valid = 0;\n+    }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1857473366",
            "id": 1857473366,
            "in_reply_to_id": 1857470120,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5utstW",
            "original_commit_id": "2dcf30c0fafb7bfbc5ce1752b5e5e1b27b1644a0",
            "original_line": 513,
            "original_position": 21,
            "original_start_line": 511,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 2459835752,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857473366/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-25T23:34:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857473366",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1857475348"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857475348"
                }
            },
            "author_association": "MEMBER",
            "body": "On a side note regarding the TODO here: toggling conceal line visibility is similar to open/closing a fold which also just redraws the entire window (`changed_window_setting()`), where partial/scroll redraws should be possible.\r\n(So maybe not critical to resolve initially.)\r\n\r\nEDIT: I adjusted some logic regarding scroll redrawing to account for concealed lines when in the case of just scrolling that doesn't toggle conceal line visibility.\r\n\r\nNow no longer sure we can do partial redraws when toggling line visibility; maybe fold actions do this because we can no longer use `w_lines` at all (or is too involved (could perhaps invalidate individual `w_lines` entries?)). At least currently when just marking this with `UPD_SOME_VALID`, the `win_update()` logic fails to find the scroll cutoff and just redraws everything anyways.\r\n\r\nIn that case, I think this is ready for review.\r\n",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-25T23:37:41Z",
            "diff_hunk": "@@ -506,6 +508,14 @@ void check_cursor_moved(win_T *wp)\n   if (wp->w_cursor.lnum != wp->w_valid_cursor.lnum) {\n     wp->w_valid &= ~(VALID_WROW|VALID_WCOL|VALID_VIRTCOL\n                      |VALID_CHEIGHT|VALID_CROW|VALID_TOPLINE);\n+\n+    // Concealed line visibility toggled.\n+    if (wp->w_p_cole >= 2 && !conceal_cursor_line(wp)\n+        && (decor_conceal_line(wp, wp->w_buffer, wp->w_cursor.lnum - 1)\n+            || decor_conceal_line(wp, wp->w_buffer, wp->w_valid_cursor.lnum - 1))) {\n+      // TODO(luukvbaal): shouldn't have to redraw entire window but scroll instead.\n+      wp->w_lines_valid = 0;\n+    }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1857475348",
            "id": 1857475348,
            "in_reply_to_id": 1857470120,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5uttMU",
            "original_commit_id": "2dcf30c0fafb7bfbc5ce1752b5e5e1b27b1644a0",
            "original_line": 513,
            "original_position": 21,
            "original_start_line": 511,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 2459838721,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857475348/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-27T22:47:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1857475348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1861943845"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861943845"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                  • conceal_line: string (empty or a\r\n                    single character). When provided, lines in the range are not\r\n                    drawn at all; the next unconcealed line is drawn instead.\r\n```\r\n(Assuming that a non-empty string is simply ignored at the moment, meaning the behavior is the same.)",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-28T10:37:35Z",
            "diff_hunk": "@@ -2763,6 +2763,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_line: string which should be either empty or a\n+                    single character. When empty, lines in the range are not\n+                    drawn at all; the next unconcealed line is drawn instead.\n+                    Supplying a character is currently unimplemented.",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1861943845",
            "id": 1861943845,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5u-wIl",
            "original_commit_id": "39d2b8fdad73ab1f3adedb4f20cc459a93fcdf86",
            "original_line": 2769,
            "original_position": 7,
            "original_start_line": 2766,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2467631602,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861943845/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-28T10:37:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861943845",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1861954727"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861954727"
                }
            },
            "author_association": "MEMBER",
            "body": "No objections, but I copied the first sentence from `conceal` verbatim. If we keep that, your suggestion boils down to removing the mention of it being unimplemented?\r\nCurrently I also error when a single character is provided, could make it work like you say.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-28T10:44:40Z",
            "diff_hunk": "@@ -2763,6 +2763,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_line: string which should be either empty or a\n+                    single character. When empty, lines in the range are not\n+                    drawn at all; the next unconcealed line is drawn instead.\n+                    Supplying a character is currently unimplemented.",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1861954727",
            "id": 1861954727,
            "in_reply_to_id": 1861943845,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5u-yyn",
            "original_commit_id": "39d2b8fdad73ab1f3adedb4f20cc459a93fcdf86",
            "original_line": 2769,
            "original_position": 7,
            "original_start_line": 2766,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2467659079,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861954727/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-28T10:44:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861954727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1861974577"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861974577"
                }
            },
            "author_association": "MEMBER",
            "body": "> No objections, but I copied the first sentence from conceal verbatim.\r\n\r\nThat's fine then.\r\n\r\n> If we keep that, your suggestion boils down to removing the mention of it being unimplemented?\r\nCurrently I also error when a single character is provided, could make it work like you say.\r\n\r\nYes, that was my suggestion.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-28T10:58:07Z",
            "diff_hunk": "@@ -2763,6 +2763,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_line: string which should be either empty or a\n+                    single character. When empty, lines in the range are not\n+                    drawn at all; the next unconcealed line is drawn instead.\n+                    Supplying a character is currently unimplemented.",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1861974577",
            "id": 1861974577,
            "in_reply_to_id": 1861943845,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5u-3ox",
            "original_commit_id": "39d2b8fdad73ab1f3adedb4f20cc459a93fcdf86",
            "original_line": 2769,
            "original_position": 7,
            "original_start_line": 2766,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2467708555,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861974577/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-28T10:58:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1861974577",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1862384798"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862384798"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nTo conceal an entire line, a\r\n```\r\nI think that's clear enough in this context.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-28T15:26:03Z",
            "diff_hunk": "@@ -490,6 +490,12 @@ still highlighted the same as other operators: >query\n \n     \"!=\" @operator (#set! conceal \"≠\")\n <\n+To conceal an entire line (next unconcealed line is drawn in it's stead), a",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1862384798",
            "id": 1862384798,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vAbye",
            "original_commit_id": "58fe31e257c12192fe6bbf800a158edd8c84597a",
            "original_line": 493,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2468446984,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862384798/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-28T15:26:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862384798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1862394832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862394832"
                }
            },
            "author_association": "MEMBER",
            "body": "IDK; in this context (without the knowledge of \"vertical conceal\"), \"conceal an entire line\" still reads as \"conceal the entire line horizontally\" to me. Should we refer to the respective `nvim_buf_set_extmark()` properties above then?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-28T15:33:00Z",
            "diff_hunk": "@@ -490,6 +490,12 @@ still highlighted the same as other operators: >query\n \n     \"!=\" @operator (#set! conceal \"≠\")\n <\n+To conceal an entire line (next unconcealed line is drawn in it's stead), a",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1862394832",
            "id": 1862394832,
            "in_reply_to_id": 1862384798,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vAePQ",
            "original_commit_id": "58fe31e257c12192fe6bbf800a158edd8c84597a",
            "original_line": 493,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2468460427,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862394832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-28T15:48:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862394832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1862397832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862397832"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, OK, makes sense. Then just \"(skip drawing it entirely)\" or \"(do not draw it at all)\"?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-28T15:35:12Z",
            "diff_hunk": "@@ -490,6 +490,12 @@ still highlighted the same as other operators: >query\n \n     \"!=\" @operator (#set! conceal \"≠\")\n <\n+To conceal an entire line (next unconcealed line is drawn in it's stead), a",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1862397832",
            "id": 1862397832,
            "in_reply_to_id": 1862384798,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vAe-I",
            "original_commit_id": "58fe31e257c12192fe6bbf800a158edd8c84597a",
            "original_line": 493,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2468464462,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862397832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-28T15:35:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1862397832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863171040"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863171040"
                }
            },
            "author_association": "MEMBER",
            "body": "Doesn't this need to be specific to the buffer?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T08:56:14Z",
            "diff_hunk": "@@ -160,12 +160,39 @@ function TSHighlighter:destroy()\n   if api.nvim_buf_is_loaded(self.bufnr) then\n     vim.bo[self.bufnr].spelloptions = self.orig_spelloptions\n     vim.b[self.bufnr].ts_highlight = nil\n+    vim.api.nvim_buf_clear_namespace(self.bufnr, ns, 0, -1)\n     if vim.g.syntax_on == 1 then\n       api.nvim_exec_autocmds('FileType', { group = 'syntaxset', buffer = self.bufnr })\n     end\n   end\n end\n \n+local marks_placed = false\n+\n+---@param buf integer\n+---@param srow integer\n+---@param erow integer\n+---@param iter (fun(end_line: integer|nil): integer, TSNode, vim.treesitter.query.TSMetadata, TSQueryMatch)\n+local function conceal_lines_iter(buf, srow, erow, iter)\n+  while srow < erow do\n+    local capture, node, metadata, _ = iter(srow)\n+    if not node then\n+      break\n+    end\n+\n+    local range = vim.treesitter.get_range(node, buf, metadata and metadata[capture])\n+    local start_row, _, end_row, _ = Range.unpack4(range)\n+    -- The \"conceal\" attribute can be set at the pattern level or on a particular capture\n+    if\n+      capture and (metadata.conceal_lines or metadata[capture] and metadata[capture].conceal_lines)\n+    then\n+      api.nvim_buf_set_extmark(buf, ns, start_row, 0, { end_line = end_row, conceal_lines = '' })\n+      marks_placed = true",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863171040",
            "id": 1863171040,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vDbvg",
            "original_commit_id": "166534a2c16e348bff24f746923e029594e70ca2",
            "original_line": 190,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2469399207,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863171040/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T08:56:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863171040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863238694"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863238694"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah you're right. This is just to skip the clear_namespace API call though. Could remove it or make it buffer specific.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T09:39:53Z",
            "diff_hunk": "@@ -160,12 +160,39 @@ function TSHighlighter:destroy()\n   if api.nvim_buf_is_loaded(self.bufnr) then\n     vim.bo[self.bufnr].spelloptions = self.orig_spelloptions\n     vim.b[self.bufnr].ts_highlight = nil\n+    vim.api.nvim_buf_clear_namespace(self.bufnr, ns, 0, -1)\n     if vim.g.syntax_on == 1 then\n       api.nvim_exec_autocmds('FileType', { group = 'syntaxset', buffer = self.bufnr })\n     end\n   end\n end\n \n+local marks_placed = false\n+\n+---@param buf integer\n+---@param srow integer\n+---@param erow integer\n+---@param iter (fun(end_line: integer|nil): integer, TSNode, vim.treesitter.query.TSMetadata, TSQueryMatch)\n+local function conceal_lines_iter(buf, srow, erow, iter)\n+  while srow < erow do\n+    local capture, node, metadata, _ = iter(srow)\n+    if not node then\n+      break\n+    end\n+\n+    local range = vim.treesitter.get_range(node, buf, metadata and metadata[capture])\n+    local start_row, _, end_row, _ = Range.unpack4(range)\n+    -- The \"conceal\" attribute can be set at the pattern level or on a particular capture\n+    if\n+      capture and (metadata.conceal_lines or metadata[capture] and metadata[capture].conceal_lines)\n+    then\n+      api.nvim_buf_set_extmark(buf, ns, start_row, 0, { end_line = end_row, conceal_lines = '' })\n+      marks_placed = true",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863238694",
            "id": 1863238694,
            "in_reply_to_id": 1863171040,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vDsQm",
            "original_commit_id": "166534a2c16e348bff24f746923e029594e70ca2",
            "original_line": 190,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2469499506,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863238694/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T09:39:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863238694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863275501"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863275501"
                }
            },
            "author_association": "MEMBER",
            "body": "You mean unconditionally clear the namespace? That might be simpler. Shouldn't be expensive as the marktree will return early if there are no marks.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T10:05:36Z",
            "diff_hunk": "@@ -160,12 +160,39 @@ function TSHighlighter:destroy()\n   if api.nvim_buf_is_loaded(self.bufnr) then\n     vim.bo[self.bufnr].spelloptions = self.orig_spelloptions\n     vim.b[self.bufnr].ts_highlight = nil\n+    vim.api.nvim_buf_clear_namespace(self.bufnr, ns, 0, -1)\n     if vim.g.syntax_on == 1 then\n       api.nvim_exec_autocmds('FileType', { group = 'syntaxset', buffer = self.bufnr })\n     end\n   end\n end\n \n+local marks_placed = false\n+\n+---@param buf integer\n+---@param srow integer\n+---@param erow integer\n+---@param iter (fun(end_line: integer|nil): integer, TSNode, vim.treesitter.query.TSMetadata, TSQueryMatch)\n+local function conceal_lines_iter(buf, srow, erow, iter)\n+  while srow < erow do\n+    local capture, node, metadata, _ = iter(srow)\n+    if not node then\n+      break\n+    end\n+\n+    local range = vim.treesitter.get_range(node, buf, metadata and metadata[capture])\n+    local start_row, _, end_row, _ = Range.unpack4(range)\n+    -- The \"conceal\" attribute can be set at the pattern level or on a particular capture\n+    if\n+      capture and (metadata.conceal_lines or metadata[capture] and metadata[capture].conceal_lines)\n+    then\n+      api.nvim_buf_set_extmark(buf, ns, start_row, 0, { end_line = end_row, conceal_lines = '' })\n+      marks_placed = true",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863275501",
            "id": 1863275501,
            "in_reply_to_id": 1863171040,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vD1Pt",
            "original_commit_id": "166534a2c16e348bff24f746923e029594e70ca2",
            "original_line": 190,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2469553997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863275501/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T10:05:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863275501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863290133"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863290133"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  api.nvim_buf_clear_namespace(self.bufnr, ns, 0, -1)\r\n```",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T10:16:26Z",
            "diff_hunk": "@@ -391,6 +420,7 @@ function TSHighlighter._on_win(_, _win, buf, topline, botline)\n   if not self then\n     return false\n   end\n+  vim.api.nvim_buf_clear_namespace(self.bufnr, ns, 0, -1)",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863290133",
            "id": 1863290133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vD40V",
            "original_commit_id": "c9869a7b444f13fe011c2612eb68a37f2cec71c2",
            "original_line": 423,
            "original_position": 61,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2469575316,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863290133/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T10:16:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863290133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863291378"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863291378"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this change necessary?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T10:17:22Z",
            "diff_hunk": "@@ -194,12 +218,17 @@ function TSHighlighter:prepare_highlight_states(srow, erow)\n \n     -- _highlight_states should be a list so that the highlights are added in the same order as\n     -- for_each_tree traversal. This ensures that parents' highlight don't override children's.\n-    table.insert(self._highlight_states, {\n+    local state = {\n       tstree = tstree,\n       next_row = 0,\n       iter = nil,\n       highlighter_query = highlighter_query,\n-    })\n+    }\n+    table.insert(self._highlight_states, state)",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863291378",
            "id": 1863291378,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vD5Hy",
            "original_commit_id": "c9869a7b444f13fe011c2612eb68a37f2cec71c2",
            "original_line": 227,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2469577085,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863291378/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T10:17:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863291378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863295665"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863295665"
                }
            },
            "author_association": "MEMBER",
            "body": "Not anymore.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T10:20:19Z",
            "diff_hunk": "@@ -194,12 +218,17 @@ function TSHighlighter:prepare_highlight_states(srow, erow)\n \n     -- _highlight_states should be a list so that the highlights are added in the same order as\n     -- for_each_tree traversal. This ensures that parents' highlight don't override children's.\n-    table.insert(self._highlight_states, {\n+    local state = {\n       tstree = tstree,\n       next_row = 0,\n       iter = nil,\n       highlighter_query = highlighter_query,\n-    })\n+    }\n+    table.insert(self._highlight_states, state)",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863295665",
            "id": 1863295665,
            "in_reply_to_id": 1863291378,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vD6Kx",
            "original_commit_id": "c9869a7b444f13fe011c2612eb68a37f2cec71c2",
            "original_line": 227,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2469583269,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863295665/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T10:20:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863295665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863295758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863295758"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  if (sh_hl.flags & kSHConcealLine) {\r\n```",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T10:20:22Z",
            "diff_hunk": "@@ -983,6 +1023,10 @@ void decor_to_dict_legacy(Dict *dict, DecorInline decor, bool hl_name, Arena *ar\n     PUT_C(*dict, \"conceal\", CSTR_TO_ARENA_OBJ(arena, buf));\n   }\n \n+  if (sh_hl.flags &kSHConcealLine) {",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863295758",
            "id": 1863295758,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vD6MO",
            "original_commit_id": "c9869a7b444f13fe011c2612eb68a37f2cec71c2",
            "original_line": 1026,
            "original_position": 80,
            "original_start_line": null,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2469583366,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863295758/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T10:20:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863295758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863366971"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863366971"
                }
            },
            "author_association": "MEMBER",
            "body": "We still need to update `nextp` as well so just moved it below the `hasFoldingWin()`.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T11:14:22Z",
            "diff_hunk": "@@ -881,6 +885,10 @@ int plines_win_col(win_T *wp, linenr_T lnum, long column)\n int plines_win_full(win_T *wp, linenr_T lnum, linenr_T *const nextp, bool *const foldedp,\n                     const bool cache, const bool limit_winheight)\n {\n+  if (decor_conceal_line(wp, wp->w_buffer, lnum - 1, false)) {\n+    return 0;",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863366971",
            "id": 1863366971,
            "in_reply_to_id": 1856248004,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vELk7",
            "original_commit_id": "c065f69a057b333994026414895541d856f91c6c",
            "original_line": 892,
            "original_position": 25,
            "original_start_line": null,
            "path": "src/nvim/plines.c",
            "position": null,
            "pull_request_review_id": 2469686568,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863366971/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T11:14:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863366971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863764120"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863764120"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  for _, mark in ipairs(self._highlight_states[line] or {}) do\r\n```",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T16:39:31Z",
            "diff_hunk": "@@ -324,29 +259,87 @@ local function on_line_impl(self, buf, line, is_spell_nav)\n         -- The \"conceal\" attribute can be set at the pattern level or on a particular capture\n         local conceal = metadata.conceal or metadata[capture] and metadata[capture].conceal\n \n-        local url = get_url(match, buf, capture, metadata)\n+        local url = get_url(match, self.bufnr, capture, metadata)\n+\n+        if hl_group and end_row >= line and (not is_spell_nav or spell ~= nil) then\n+          for row = start_row, end_row do\n+            if not self._highlight_states[row] then\n+              self._highlight_states[row] = {}\n+            end\n+            table.insert(self._highlight_states[row], {\n+              end_row = end_row,\n+              start_col = start_col,\n+              end_col = end_col,\n+              hl_group = hl_group,\n+              spell = spell,\n+              priority = priority,\n+              conceal = conceal,\n+              url = url,\n+            })\n+          end\n+        end\n \n-        if hl and end_row >= line and (not is_spell_nav or spell ~= nil) then\n-          api.nvim_buf_set_extmark(buf, ns, start_row, start_col, {\n+        -- Conceal_lines marks are placed in on_win.\n+        if metadata.conceal_lines or metadata[capture] and metadata[capture].conceal_lines then\n+          api.nvim_buf_set_extmark(self.bufnr, ns, start_row, 0, {\n             end_line = end_row,\n-            end_col = end_col,\n-            hl_group = hl,\n-            ephemeral = true,\n-            priority = priority,\n-            conceal = conceal,\n-            spell = spell,\n-            url = url,\n+            conceal_lines = '',\n           })\n         end\n       end\n \n-      if start_row > line then\n-        state.next_row = start_row\n-      end\n+      line = start_row\n     end\n   end)\n end\n \n+---@package\n+function TSHighlighter:on_detach()\n+  self:destroy()\n+end\n+\n+---@package\n+---@param changes Range6[]\n+function TSHighlighter:on_changedtree(changes)\n+  for _, ch in ipairs(changes) do\n+    api.nvim__redraw({ buf = self.bufnr, range = { ch[1], ch[4] + 1 }, flush = false })\n+  end\n+end\n+\n+--- Gets the query used for @param lang\n+---@nodoc\n+---@param lang string Language used by the highlighter.\n+---@return vim.treesitter.highlighter.Query\n+function TSHighlighter:get_query(lang)\n+  if not self._queries[lang] then\n+    self._queries[lang] = TSHighlighterQuery.new(lang)\n+  end\n+\n+  return self._queries[lang]\n+end\n+\n+---@param self vim.treesitter.highlighter\n+---@param buf integer\n+---@param line integer\n+local function on_line_impl(self, buf, line)\n+  if not self._highlight_states[line] then\n+    return\n+  end\n+\n+  for _, mark in ipairs(self._highlight_states[line]) do",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863764120",
            "id": 1863764120,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vFsiY",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 329,
            "original_position": 273,
            "original_start_line": 325,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470286255,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863764120/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-29T16:39:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863764120",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863765746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863765746"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    api.nvim_buf_clear_namespace(self.bufnr, ns, 0, -1)\r\n```",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T16:41:09Z",
            "diff_hunk": "@@ -160,82 +156,13 @@ function TSHighlighter:destroy()\n   if api.nvim_buf_is_loaded(self.bufnr) then\n     vim.bo[self.bufnr].spelloptions = self.orig_spelloptions\n     vim.b[self.bufnr].ts_highlight = nil\n+    vim.api.nvim_buf_clear_namespace(self.bufnr, ns, 0, -1)",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863765746",
            "id": 1863765746,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vFs7y",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 172,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470288487,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863765746/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T16:41:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863765746",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863771501"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863771501"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this still preserved? This line effectively jumps over folded lines and prevents slowness when rendering very large folds.\r\n\r\nBasically, it is faster to create a new iterator than to traverse it if the distance is big enough. Instead of introducing any heuristics, we decided to just refresh the iterator whenever we hit a fold.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T16:47:43Z",
            "diff_hunk": "@@ -276,42 +203,50 @@ local function get_spell(capture_name)\n   return nil, 0\n end\n \n----@param self vim.treesitter.highlighter\n----@param buf integer\n----@param line integer\n+---@param srow integer\n+---@param erow integer exclusive\n ---@param is_spell_nav boolean\n-local function on_line_impl(self, buf, line, is_spell_nav)\n-  self:for_each_highlight_state(function(state)\n-    local root_node = state.tstree:root()\n+---@private\n+function TSHighlighter:prepare_highlight_states(srow, erow, is_spell_nav)\n+  self._highlight_states = {}\n+\n+  self.tree:for_each_tree(function(tstree, tree)\n+    if not tstree then\n+      return\n+    end\n+\n+    local root_node = tstree:root()\n     local root_start_row, _, root_end_row, _ = root_node:range()\n \n-    -- Only consider trees that contain this line\n-    if root_start_row > line or root_end_row < line then\n+    -- Only consider trees within the visible range\n+    if root_start_row > erow or root_end_row < srow then\n       return\n     end\n \n-    if state.iter == nil or state.next_row < line then\n-      -- Mainly used to skip over folds",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863771501",
            "id": 1863771501,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vFuVt",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 301,
            "original_position": 150,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470298418,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863771501/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T16:53:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863771501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863790053"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863790053"
                }
            },
            "author_association": "MEMBER",
            "body": "It's not, don't think we can without querying fold ranges, or passing them along to on_win from update_win() :/ If that perf gain outweighs it I guess it's a no-go.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T17:09:15Z",
            "diff_hunk": "@@ -276,42 +203,50 @@ local function get_spell(capture_name)\n   return nil, 0\n end\n \n----@param self vim.treesitter.highlighter\n----@param buf integer\n----@param line integer\n+---@param srow integer\n+---@param erow integer exclusive\n ---@param is_spell_nav boolean\n-local function on_line_impl(self, buf, line, is_spell_nav)\n-  self:for_each_highlight_state(function(state)\n-    local root_node = state.tstree:root()\n+---@private\n+function TSHighlighter:prepare_highlight_states(srow, erow, is_spell_nav)\n+  self._highlight_states = {}\n+\n+  self.tree:for_each_tree(function(tstree, tree)\n+    if not tstree then\n+      return\n+    end\n+\n+    local root_node = tstree:root()\n     local root_start_row, _, root_end_row, _ = root_node:range()\n \n-    -- Only consider trees that contain this line\n-    if root_start_row > line or root_end_row < line then\n+    -- Only consider trees within the visible range\n+    if root_start_row > erow or root_end_row < srow then\n       return\n     end\n \n-    if state.iter == nil or state.next_row < line then\n-      -- Mainly used to skip over folds",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863790053",
            "id": 1863790053,
            "in_reply_to_id": 1863771501,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vFy3l",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 301,
            "original_position": 150,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470333160,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863790053/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T17:59:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863790053",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863794611"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863794611"
                }
            },
            "author_association": "MEMBER",
            "body": "It was pretty drastic from memory. You can probably git blame to find out the issue for more details. I think querying the folds wouldn't be too bad, I recently added that for semantic tokens.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T17:15:26Z",
            "diff_hunk": "@@ -276,42 +203,50 @@ local function get_spell(capture_name)\n   return nil, 0\n end\n \n----@param self vim.treesitter.highlighter\n----@param buf integer\n----@param line integer\n+---@param srow integer\n+---@param erow integer exclusive\n ---@param is_spell_nav boolean\n-local function on_line_impl(self, buf, line, is_spell_nav)\n-  self:for_each_highlight_state(function(state)\n-    local root_node = state.tstree:root()\n+---@private\n+function TSHighlighter:prepare_highlight_states(srow, erow, is_spell_nav)\n+  self._highlight_states = {}\n+\n+  self.tree:for_each_tree(function(tstree, tree)\n+    if not tstree then\n+      return\n+    end\n+\n+    local root_node = tstree:root()\n     local root_start_row, _, root_end_row, _ = root_node:range()\n \n-    -- Only consider trees that contain this line\n-    if root_start_row > line or root_end_row < line then\n+    -- Only consider trees within the visible range\n+    if root_start_row > erow or root_end_row < srow then\n       return\n     end\n \n-    if state.iter == nil or state.next_row < line then\n-      -- Mainly used to skip over folds",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863794611",
            "id": 1863794611,
            "in_reply_to_id": 1863771501,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vFz-z",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 301,
            "original_position": 150,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470338963,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863794611/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-29T17:15:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863794611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1863997695"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863997695"
                }
            },
            "author_association": "MEMBER",
            "body": "Restored the logic to skip over closed folds through `vim.fn.foldclosed(end)()`. Performance diff is negligible compared to HEAD with a 2k lines closed fold (without this logic it is indeed very slow). Still faster overall without folds.\r\n\r\nAlso restored your TODO note. If I understand what you wanted to do, that should be easier now that we use `foldclosedend()` anyways, if anything. Could take a look at it as well.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-29T23:51:29Z",
            "diff_hunk": "@@ -276,42 +203,50 @@ local function get_spell(capture_name)\n   return nil, 0\n end\n \n----@param self vim.treesitter.highlighter\n----@param buf integer\n----@param line integer\n+---@param srow integer\n+---@param erow integer exclusive\n ---@param is_spell_nav boolean\n-local function on_line_impl(self, buf, line, is_spell_nav)\n-  self:for_each_highlight_state(function(state)\n-    local root_node = state.tstree:root()\n+---@private\n+function TSHighlighter:prepare_highlight_states(srow, erow, is_spell_nav)\n+  self._highlight_states = {}\n+\n+  self.tree:for_each_tree(function(tstree, tree)\n+    if not tstree then\n+      return\n+    end\n+\n+    local root_node = tstree:root()\n     local root_start_row, _, root_end_row, _ = root_node:range()\n \n-    -- Only consider trees that contain this line\n-    if root_start_row > line or root_end_row < line then\n+    -- Only consider trees within the visible range\n+    if root_start_row > erow or root_end_row < srow then\n       return\n     end\n \n-    if state.iter == nil or state.next_row < line then\n-      -- Mainly used to skip over folds",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1863997695",
            "id": 1863997695,
            "in_reply_to_id": 1863771501,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vGlj_",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 301,
            "original_position": 150,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470597315,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863997695/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-30T00:36:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1863997695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1864000216"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864000216"
                }
            },
            "author_association": "MEMBER",
            "body": "Well...if you're volunteering...",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-30T00:00:07Z",
            "diff_hunk": "@@ -276,42 +203,50 @@ local function get_spell(capture_name)\n   return nil, 0\n end\n \n----@param self vim.treesitter.highlighter\n----@param buf integer\n----@param line integer\n+---@param srow integer\n+---@param erow integer exclusive\n ---@param is_spell_nav boolean\n-local function on_line_impl(self, buf, line, is_spell_nav)\n-  self:for_each_highlight_state(function(state)\n-    local root_node = state.tstree:root()\n+---@private\n+function TSHighlighter:prepare_highlight_states(srow, erow, is_spell_nav)\n+  self._highlight_states = {}\n+\n+  self.tree:for_each_tree(function(tstree, tree)\n+    if not tstree then\n+      return\n+    end\n+\n+    local root_node = tstree:root()\n     local root_start_row, _, root_end_row, _ = root_node:range()\n \n-    -- Only consider trees that contain this line\n-    if root_start_row > line or root_end_row < line then\n+    -- Only consider trees within the visible range\n+    if root_start_row > erow or root_end_row < srow then\n       return\n     end\n \n-    if state.iter == nil or state.next_row < line then\n-      -- Mainly used to skip over folds",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1864000216",
            "id": 1864000216,
            "in_reply_to_id": 1863771501,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vGmLY",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 301,
            "original_position": 150,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470599294,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864000216/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-30T00:00:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864000216",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1864022172"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864022172"
                }
            },
            "author_association": "MEMBER",
            "body": "> If anything wouldn't it be less performant due to the intermediate structure?\r\n\r\nFor transparency: this seems to be true in the case of many captures, I tested in a markdown file before.\r\nWith the C parser, in a large window, this refactor loses out to HEAD by ~5%.\r\nSo it depends on the situation, but I think it's the best we can do. Without the perf commit, this feature would introduce a greater performance hit.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-30T00:56:02Z",
            "diff_hunk": "@@ -276,42 +203,50 @@ local function get_spell(capture_name)\n   return nil, 0\n end\n \n----@param self vim.treesitter.highlighter\n----@param buf integer\n----@param line integer\n+---@param srow integer\n+---@param erow integer exclusive\n ---@param is_spell_nav boolean\n-local function on_line_impl(self, buf, line, is_spell_nav)\n-  self:for_each_highlight_state(function(state)\n-    local root_node = state.tstree:root()\n+---@private\n+function TSHighlighter:prepare_highlight_states(srow, erow, is_spell_nav)\n+  self._highlight_states = {}\n+\n+  self.tree:for_each_tree(function(tstree, tree)\n+    if not tstree then\n+      return\n+    end\n+\n+    local root_node = tstree:root()\n     local root_start_row, _, root_end_row, _ = root_node:range()\n \n-    -- Only consider trees that contain this line\n-    if root_start_row > line or root_end_row < line then\n+    -- Only consider trees within the visible range\n+    if root_start_row > erow or root_end_row < srow then\n       return\n     end\n \n-    if state.iter == nil or state.next_row < line then\n-      -- Mainly used to skip over folds",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1864022172",
            "id": 1864022172,
            "in_reply_to_id": 1863771501,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vGric",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 301,
            "original_position": 150,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470624926,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864022172/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-30T11:27:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864022172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1864216755"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864216755"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm ok. Generally we prefer the method that scales the best for larger files, even if it means making smaller files a bit slower.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2024-11-30T10:56:40Z",
            "diff_hunk": "@@ -276,42 +203,50 @@ local function get_spell(capture_name)\n   return nil, 0\n end\n \n----@param self vim.treesitter.highlighter\n----@param buf integer\n----@param line integer\n+---@param srow integer\n+---@param erow integer exclusive\n ---@param is_spell_nav boolean\n-local function on_line_impl(self, buf, line, is_spell_nav)\n-  self:for_each_highlight_state(function(state)\n-    local root_node = state.tstree:root()\n+---@private\n+function TSHighlighter:prepare_highlight_states(srow, erow, is_spell_nav)\n+  self._highlight_states = {}\n+\n+  self.tree:for_each_tree(function(tstree, tree)\n+    if not tstree then\n+      return\n+    end\n+\n+    local root_node = tstree:root()\n     local root_start_row, _, root_end_row, _ = root_node:range()\n \n-    -- Only consider trees that contain this line\n-    if root_start_row > line or root_end_row < line then\n+    -- Only consider trees within the visible range\n+    if root_start_row > erow or root_end_row < srow then\n       return\n     end\n \n-    if state.iter == nil or state.next_row < line then\n-      -- Mainly used to skip over folds",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1864216755",
            "id": 1864216755,
            "in_reply_to_id": 1863771501,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5vHbCz",
            "original_commit_id": "3d3e99797aaa22a93f5a8928c84b7cfc19f9e8e6",
            "original_line": 301,
            "original_position": 150,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 2470885896,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864216755/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-30T10:56:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864216755",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1942514063"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942514063"
                }
            },
            "author_association": "MEMBER",
            "body": "This assumes that there is only one source of concealed lines to be checked.\r\n\r\nWhich is fine for now as it is a private API, but maybe worth of a TODO comment. ",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-05T09:23:30Z",
            "diff_hunk": "@@ -850,8 +859,56 @@ int sign_item_cmp(const void *p1, const void *p2)\n   return 0;\n }\n \n-static const uint32_t sign_filter[4] = {[kMTMetaSignText] = kMTFilterSelect,\n-                                        [kMTMetaSignHL] = kMTFilterSelect };\n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLines] = kMTFilterSelect };\n+\n+bool decor_conceal_line(win_T *wp, int row, bool check_cursor)\n+{\n+  if (wp->w_p_cole < 2\n+      || (!check_cursor && ((row + 1 == wp->w_cursor.lnum) && !conceal_cursor_line(wp)))) {\n+    return false;\n+  }\n+\n+  size_t keys = wp->w_buffer->b_marktree->n_keys;\n+  if (!buf_meta_total(wp->w_buffer, kMTMetaConcealLines)) {\n+    decor_providers_invoke_conceal_line(wp, row);\n+    return wp->w_buffer->b_marktree->n_keys > keys;\n+  }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1942514063",
            "id": 1942514063,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zyGmP",
            "original_commit_id": "f18dccb5c6aa462964fd55e6d69e60167645ee1d",
            "original_line": 874,
            "original_position": 49,
            "original_start_line": 871,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2595086507,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942514063/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-05T09:23:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942514063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1942538720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942538720"
                }
            },
            "author_association": "MEMBER",
            "body": "TODO comment: this forces a redraw off the entire window. we want something more fine grained later. ",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-05T09:39:16Z",
            "diff_hunk": "@@ -124,6 +126,13 @@ void decor_redraw_sh(buf_T *buf, int row1, int row2, DecorSignHighlight sh)\n       redraw_buf_range_later(buf, row1 + 1, row2 + 1);\n     }\n   }\n+  if (sh.flags & kSHConcealLines) {\n+    FOR_ALL_WINDOWS_IN_TAB(wp, curtab) {\n+      if (wp->w_buffer == buf) {\n+        changed_window_setting(wp);",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1942538720",
            "id": 1942538720,
            "line": 134,
            "node_id": "PRRC_kwDOAPphoM5zyMng",
            "original_commit_id": "f18dccb5c6aa462964fd55e6d69e60167645ee1d",
            "original_line": 134,
            "original_position": 23,
            "original_start_line": null,
            "path": "src/nvim/decoration.c",
            "position": 25,
            "pull_request_review_id": 2595127841,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942538720/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-05T09:39:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942538720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1942550697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942550697"
                }
            },
            "author_association": "MEMBER",
            "body": "Yep same as opening/closing a fold; also see https://github.com/neovim/neovim/pull/31324#discussion_r1857475348.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-05T09:46:41Z",
            "diff_hunk": "@@ -124,6 +126,13 @@ void decor_redraw_sh(buf_T *buf, int row1, int row2, DecorSignHighlight sh)\n       redraw_buf_range_later(buf, row1 + 1, row2 + 1);\n     }\n   }\n+  if (sh.flags & kSHConcealLines) {\n+    FOR_ALL_WINDOWS_IN_TAB(wp, curtab) {\n+      if (wp->w_buffer == buf) {\n+        changed_window_setting(wp);",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1942550697",
            "id": 1942550697,
            "in_reply_to_id": 1942538720,
            "line": 134,
            "node_id": "PRRC_kwDOAPphoM5zyPip",
            "original_commit_id": "f18dccb5c6aa462964fd55e6d69e60167645ee1d",
            "original_line": 134,
            "original_position": 23,
            "original_start_line": null,
            "path": "src/nvim/decoration.c",
            "position": 25,
            "pull_request_review_id": 2595147833,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942550697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-05T09:53:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942550697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1942590609"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942590609"
                }
            },
            "author_association": "MEMBER",
            "body": "How? I can't fully check/remember the code right now but doesn't the invoke call do the callback for all sources? The only assumption I see here is that those sources exclusively add `conceal_lines` marks.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-05T10:12:40Z",
            "diff_hunk": "@@ -850,8 +859,56 @@ int sign_item_cmp(const void *p1, const void *p2)\n   return 0;\n }\n \n-static const uint32_t sign_filter[4] = {[kMTMetaSignText] = kMTFilterSelect,\n-                                        [kMTMetaSignHL] = kMTFilterSelect };\n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLines] = kMTFilterSelect };\n+\n+bool decor_conceal_line(win_T *wp, int row, bool check_cursor)\n+{\n+  if (wp->w_p_cole < 2\n+      || (!check_cursor && ((row + 1 == wp->w_cursor.lnum) && !conceal_cursor_line(wp)))) {\n+    return false;\n+  }\n+\n+  size_t keys = wp->w_buffer->b_marktree->n_keys;\n+  if (!buf_meta_total(wp->w_buffer, kMTMetaConcealLines)) {\n+    decor_providers_invoke_conceal_line(wp, row);\n+    return wp->w_buffer->b_marktree->n_keys > keys;\n+  }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1942590609",
            "id": 1942590609,
            "in_reply_to_id": 1942514063,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zyZSR",
            "original_commit_id": "f18dccb5c6aa462964fd55e6d69e60167645ee1d",
            "original_line": 874,
            "original_position": 49,
            "original_start_line": 871,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2595213320,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942590609/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-05T10:12:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942590609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1942609971"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942609971"
                }
            },
            "author_association": "MEMBER",
            "body": "All sources might not add conceals at the same time. so if source A adds a conceal at line 1 and source B wants to add one at the call for line 10, that later call would be skipped. not a problem in the MVP but worthy of a TODO comment.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-05T10:22:44Z",
            "diff_hunk": "@@ -850,8 +859,56 @@ int sign_item_cmp(const void *p1, const void *p2)\n   return 0;\n }\n \n-static const uint32_t sign_filter[4] = {[kMTMetaSignText] = kMTFilterSelect,\n-                                        [kMTMetaSignHL] = kMTFilterSelect };\n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLines] = kMTFilterSelect };\n+\n+bool decor_conceal_line(win_T *wp, int row, bool check_cursor)\n+{\n+  if (wp->w_p_cole < 2\n+      || (!check_cursor && ((row + 1 == wp->w_cursor.lnum) && !conceal_cursor_line(wp)))) {\n+    return false;\n+  }\n+\n+  size_t keys = wp->w_buffer->b_marktree->n_keys;\n+  if (!buf_meta_total(wp->w_buffer, kMTMetaConcealLines)) {\n+    decor_providers_invoke_conceal_line(wp, row);\n+    return wp->w_buffer->b_marktree->n_keys > keys;\n+  }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1942609971",
            "id": 1942609971,
            "in_reply_to_id": 1942514063,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zyeAz",
            "original_commit_id": "f18dccb5c6aa462964fd55e6d69e60167645ee1d",
            "original_line": 874,
            "original_position": 49,
            "original_start_line": 871,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2595242655,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942609971/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-05T10:22:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1942609971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1943563207"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1943563207"
                }
            },
            "author_association": "MEMBER",
            "body": "Still don't see the problem; there is another decor provider conceal line invoke at line 899 below. This first one is only an extra early return if there are no conceal line marks in the buffer at all yet.\r\n\r\nFrom memory it goes like this for every line that is checked:\r\n1. Are there no conceal line marks in the buffer? Then invoke callback and take increase in marks to mean the line is concealed (return `true`).\r\n2. If there are conceal line marks in the buffer, check the marktree for any marks on the checked line. Return `true` if a mark is found.\r\n3. If no conceal line marks found, invoke the callback now and again take increase in marks to mean the line is concealed (return `true`).\r\n\r\nI'll check again when I get back home if I can understand what kind of TODO note is warranted, unless you can specify contrary to the above.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-05T19:36:34Z",
            "diff_hunk": "@@ -850,8 +859,56 @@ int sign_item_cmp(const void *p1, const void *p2)\n   return 0;\n }\n \n-static const uint32_t sign_filter[4] = {[kMTMetaSignText] = kMTFilterSelect,\n-                                        [kMTMetaSignHL] = kMTFilterSelect };\n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLines] = kMTFilterSelect };\n+\n+bool decor_conceal_line(win_T *wp, int row, bool check_cursor)\n+{\n+  if (wp->w_p_cole < 2\n+      || (!check_cursor && ((row + 1 == wp->w_cursor.lnum) && !conceal_cursor_line(wp)))) {\n+    return false;\n+  }\n+\n+  size_t keys = wp->w_buffer->b_marktree->n_keys;\n+  if (!buf_meta_total(wp->w_buffer, kMTMetaConcealLines)) {\n+    decor_providers_invoke_conceal_line(wp, row);\n+    return wp->w_buffer->b_marktree->n_keys > keys;\n+  }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1943563207",
            "id": 1943563207,
            "in_reply_to_id": 1942514063,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5z2GvH",
            "original_commit_id": "f18dccb5c6aa462964fd55e6d69e60167645ee1d",
            "original_line": 874,
            "original_position": 49,
            "original_start_line": 871,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2596808887,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1943563207/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-06T09:31:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1943563207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1944638506"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1944638506"
                }
            },
            "author_association": "MEMBER",
            "body": "So this entire block is rather an optimization as an early exit? then _that_ could be a good comment to write. ",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-06T12:27:50Z",
            "diff_hunk": "@@ -850,8 +859,56 @@ int sign_item_cmp(const void *p1, const void *p2)\n   return 0;\n }\n \n-static const uint32_t sign_filter[4] = {[kMTMetaSignText] = kMTFilterSelect,\n-                                        [kMTMetaSignHL] = kMTFilterSelect };\n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLines] = kMTFilterSelect };\n+\n+bool decor_conceal_line(win_T *wp, int row, bool check_cursor)\n+{\n+  if (wp->w_p_cole < 2\n+      || (!check_cursor && ((row + 1 == wp->w_cursor.lnum) && !conceal_cursor_line(wp)))) {\n+    return false;\n+  }\n+\n+  size_t keys = wp->w_buffer->b_marktree->n_keys;\n+  if (!buf_meta_total(wp->w_buffer, kMTMetaConcealLines)) {\n+    decor_providers_invoke_conceal_line(wp, row);\n+    return wp->w_buffer->b_marktree->n_keys > keys;\n+  }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1944638506",
            "id": 1944638506,
            "in_reply_to_id": 1942514063,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5z6NQq",
            "original_commit_id": "f18dccb5c6aa462964fd55e6d69e60167645ee1d",
            "original_line": 874,
            "original_position": 49,
            "original_start_line": 871,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2598531860,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1944638506/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-06T12:27:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1944638506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1950470934"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950470934"
                }
            },
            "author_association": "MEMBER",
            "body": "Added some comments in https://github.com/neovim/neovim/compare/23597cda3a1d230c8f1a6e0582968d0272778691..9b504a74e2127c3a528fb843e2f685d30d7d09bb.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-11T09:07:17Z",
            "diff_hunk": "@@ -850,8 +859,56 @@ int sign_item_cmp(const void *p1, const void *p2)\n   return 0;\n }\n \n-static const uint32_t sign_filter[4] = {[kMTMetaSignText] = kMTFilterSelect,\n-                                        [kMTMetaSignHL] = kMTFilterSelect };\n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLines] = kMTFilterSelect };\n+\n+bool decor_conceal_line(win_T *wp, int row, bool check_cursor)\n+{\n+  if (wp->w_p_cole < 2\n+      || (!check_cursor && ((row + 1 == wp->w_cursor.lnum) && !conceal_cursor_line(wp)))) {\n+    return false;\n+  }\n+\n+  size_t keys = wp->w_buffer->b_marktree->n_keys;\n+  if (!buf_meta_total(wp->w_buffer, kMTMetaConcealLines)) {\n+    decor_providers_invoke_conceal_line(wp, row);\n+    return wp->w_buffer->b_marktree->n_keys > keys;\n+  }",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1950470934",
            "id": 1950470934,
            "in_reply_to_id": 1942514063,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50QdMW",
            "original_commit_id": "f18dccb5c6aa462964fd55e6d69e60167645ee1d",
            "original_line": 874,
            "original_position": 49,
            "original_start_line": 871,
            "path": "src/nvim/decoration.c",
            "position": null,
            "pull_request_review_id": 2608089985,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950470934/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-11T09:07:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1950470934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1965482555"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965482555"
                }
            },
            "author_association": "MEMBER",
            "body": "Not a blocker but a general note for posterity: 4 had the nice property of fitting 4x32=128bit SIMD operations exactly. Later on it might be feasible to get back to 4 again by merging VIRT_LINES, CONCEAL_LINES (or perhaps another pair). Alternatively, after adding more features in 0.12, we might have reasons to go up towards 8 instead (the next even SIMD size, should still work with AVX2 at least). \r\n\r\nBut this is fine for now, just something to consider later for the 0.12 cycle.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-21T13:32:35Z",
            "diff_hunk": "@@ -1619,8 +1620,13 @@ bool marktree_itr_next_filter(MarkTree *b, MarkTreeIter *itr, int stop_row, int\n   return marktree_itr_check_filter(b, itr, stop_row, stop_col, meta_filter);\n }\n \n-const uint32_t meta_map[4] = { MT_FLAG_DECOR_VIRT_TEXT_INLINE, MT_FLAG_DECOR_VIRT_LINES,\n-                               MT_FLAG_DECOR_SIGNHL, MT_FLAG_DECOR_SIGNTEXT };\n+const uint32_t meta_map[kMTMetaCount] = {",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1965482555",
            "id": 1965482555,
            "line": 1623,
            "node_id": "PRRC_kwDOAPphoM51JuI7",
            "original_commit_id": "726a1833cc2568bee8b0511a09e0ae4e5fcd44ae",
            "original_line": 1623,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/marktree.c",
            "position": 87,
            "pull_request_review_id": 2633053616,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965482555/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-21T13:32:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965482555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1965516035"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965516035"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair. Being able to check `buf_meta_total()` for a specific kind as an early return is nice. Would need to be replaced by a full tree scan if we start merging metadata kinds. Whether that weighs up to simd optimizations I couldn't say.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-21T13:56:25Z",
            "diff_hunk": "@@ -1619,8 +1620,13 @@ bool marktree_itr_next_filter(MarkTree *b, MarkTreeIter *itr, int stop_row, int\n   return marktree_itr_check_filter(b, itr, stop_row, stop_col, meta_filter);\n }\n \n-const uint32_t meta_map[4] = { MT_FLAG_DECOR_VIRT_TEXT_INLINE, MT_FLAG_DECOR_VIRT_LINES,\n-                               MT_FLAG_DECOR_SIGNHL, MT_FLAG_DECOR_SIGNTEXT };\n+const uint32_t meta_map[kMTMetaCount] = {",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1965516035",
            "id": 1965516035,
            "in_reply_to_id": 1965482555,
            "line": 1623,
            "node_id": "PRRC_kwDOAPphoM51J2UD",
            "original_commit_id": "726a1833cc2568bee8b0511a09e0ae4e5fcd44ae",
            "original_line": 1623,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/marktree.c",
            "position": 87,
            "pull_request_review_id": 2633113371,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965516035/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-21T13:59:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965516035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1965623564"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965623564"
                }
            },
            "author_association": "MEMBER",
            "body": "> . Would need to be replaced by a full tree scan if we start merging metadata kinds.\r\n\r\nNo they won't. we would still use the metadata to limit the scan, it would just be slightly less precise (more false positives). These are all empirically chosen, false-positive-allowed filters to narrow down searches to start with. ",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-21T14:55:51Z",
            "diff_hunk": "@@ -1619,8 +1620,13 @@ bool marktree_itr_next_filter(MarkTree *b, MarkTreeIter *itr, int stop_row, int\n   return marktree_itr_check_filter(b, itr, stop_row, stop_col, meta_filter);\n }\n \n-const uint32_t meta_map[4] = { MT_FLAG_DECOR_VIRT_TEXT_INLINE, MT_FLAG_DECOR_VIRT_LINES,\n-                               MT_FLAG_DECOR_SIGNHL, MT_FLAG_DECOR_SIGNTEXT };\n+const uint32_t meta_map[kMTMetaCount] = {",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1965623564",
            "id": 1965623564,
            "in_reply_to_id": 1965482555,
            "line": 1623,
            "node_id": "PRRC_kwDOAPphoM51KQkM",
            "original_commit_id": "726a1833cc2568bee8b0511a09e0ae4e5fcd44ae",
            "original_line": 1623,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/marktree.c",
            "position": 87,
            "pull_request_review_id": 2633301168,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965623564/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-21T14:55:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965623564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1965637286"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965637286"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we keep the original `conceal` metadata here? This would make syncing with nvim-treesitter easier (where I'll have to support both until Nvim 0.10 is dropped).",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-21T15:02:52Z",
            "diff_hunk": "@@ -49,12 +49,12 @@\n \n (fenced_code_block\n   (fenced_code_block_delimiter) @markup.raw.block\n-  (#set! conceal \"\"))\n+  (#set! conceal_lines \"\"))",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1965637286",
            "id": 1965637286,
            "line": 53,
            "node_id": "PRRC_kwDOAPphoM51KT6m",
            "original_commit_id": "726a1833cc2568bee8b0511a09e0ae4e5fcd44ae",
            "original_line": 53,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/queries/markdown/highlights.scm",
            "position": 6,
            "pull_request_review_id": 2633326472,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965637286/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-21T15:02:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965637286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1965649970"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965649970"
                }
            },
            "author_association": "MEMBER",
            "body": "I followed (my interpretation of) #25718 in this regard. Do you mean keep `conceal` _and_ add `conceal_lines` metadata? Yes I think we could do that. _Just_ keeping `conceal` might be problematic.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-21T15:07:36Z",
            "diff_hunk": "@@ -49,12 +49,12 @@\n \n (fenced_code_block\n   (fenced_code_block_delimiter) @markup.raw.block\n-  (#set! conceal \"\"))\n+  (#set! conceal_lines \"\"))",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1965649970",
            "id": 1965649970,
            "in_reply_to_id": 1965637286,
            "line": 53,
            "node_id": "PRRC_kwDOAPphoM51KXAy",
            "original_commit_id": "726a1833cc2568bee8b0511a09e0ae4e5fcd44ae",
            "original_line": 53,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/queries/markdown/highlights.scm",
            "position": 6,
            "pull_request_review_id": 2633344625,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965649970/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-21T15:07:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965649970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1965655189"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965655189"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes that's what I meant, _full_ scan being the wrong choice of words...",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-21T15:10:24Z",
            "diff_hunk": "@@ -1619,8 +1620,13 @@ bool marktree_itr_next_filter(MarkTree *b, MarkTreeIter *itr, int stop_row, int\n   return marktree_itr_check_filter(b, itr, stop_row, stop_col, meta_filter);\n }\n \n-const uint32_t meta_map[4] = { MT_FLAG_DECOR_VIRT_TEXT_INLINE, MT_FLAG_DECOR_VIRT_LINES,\n-                               MT_FLAG_DECOR_SIGNHL, MT_FLAG_DECOR_SIGNTEXT };\n+const uint32_t meta_map[kMTMetaCount] = {",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1965655189",
            "id": 1965655189,
            "in_reply_to_id": 1965482555,
            "line": 1623,
            "node_id": "PRRC_kwDOAPphoM51KYSV",
            "original_commit_id": "726a1833cc2568bee8b0511a09e0ae4e5fcd44ae",
            "original_line": 1623,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/marktree.c",
            "position": 87,
            "pull_request_review_id": 2633352404,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965655189/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-21T15:10:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965655189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1965659551"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965659551"
                }
            },
            "author_association": "MEMBER",
            "body": "> Do you mean keep conceal and add conceal_lines metadata? \r\n\r\nYes, exactly (hence my earlier question about what happens when both metadata are set). \r\n\r\nObviously we want to have `conceal_lines` in there, that's the whole point of this exercise ;)",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-21T15:13:10Z",
            "diff_hunk": "@@ -49,12 +49,12 @@\n \n (fenced_code_block\n   (fenced_code_block_delimiter) @markup.raw.block\n-  (#set! conceal \"\"))\n+  (#set! conceal_lines \"\"))",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1965659551",
            "id": 1965659551,
            "in_reply_to_id": 1965637286,
            "line": 53,
            "node_id": "PRRC_kwDOAPphoM51KZWf",
            "original_commit_id": "726a1833cc2568bee8b0511a09e0ae4e5fcd44ae",
            "original_line": 53,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/queries/markdown/highlights.scm",
            "position": 6,
            "pull_request_review_id": 2633359608,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965659551/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-21T15:13:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1965659551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966358446"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966358446"
                }
            },
            "author_association": "MEMBER",
            "body": "Mention `'conceallevel'` here?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T00:52:40Z",
            "diff_hunk": "@@ -2698,6 +2698,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_lines: string which should be either empty or a\n+                    single character. When provided, lines in the range are\n+                    not drawn at all; the next unconcealed line is drawn\n+                    instead.",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966358446",
            "id": 1966358446,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51ND-u",
            "original_commit_id": "6228cce0da3b17e3813b8e0f8437d31ac8c5ad77",
            "original_line": 2706,
            "original_position": 7,
            "original_start_line": 2701,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2634542532,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966358446/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T00:52:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966358446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966362235"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966362235"
                }
            },
            "author_association": "MEMBER",
            "body": "The meaning of `check_cursor` is not clear. Add a docstring?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T01:01:15Z",
            "diff_hunk": "@@ -830,6 +840,52 @@ int decor_redraw_col_impl(win_T *wp, int col, int win_col, bool hidden, DecorSta\n   return attr;\n }\n \n+static const uint32_t conceal_filter[kMTMetaCount] = {[kMTMetaConcealLines] = kMTFilterSelect };\n+\n+/// Called by draw, move and plines code to determine whether a line is concealed.\n+/// Scans the marktree for conceal_line marks on \"row\", if necessary.\n+///\n+/// @return whether \"row\" is concealed\n+bool decor_conceal_line(win_T *wp, int row, bool check_cursor)",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966362235",
            "id": 1966362235,
            "line": 855,
            "node_id": "PRRC_kwDOAPphoM51NE57",
            "original_commit_id": "6228cce0da3b17e3813b8e0f8437d31ac8c5ad77",
            "original_line": 855,
            "original_position": 34,
            "original_start_line": null,
            "path": "src/nvim/decoration.c",
            "position": 47,
            "pull_request_review_id": 2634551081,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966362235/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-22T01:01:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966362235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966365414"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966365414"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    if (mod_top != 0 && win_lines_concealed(wp)) {\r\n```",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T01:04:06Z",
            "diff_hunk": "@@ -1621,7 +1626,7 @@ static void win_update(win_T *wp)\n       }\n     }\n \n-    if (mod_top != 0 && hasAnyFolding(wp)) {\n+    if (mod_top != 0 && (win_lines_concealed(wp))) {",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966365414",
            "id": 1966365414,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NFrm",
            "original_commit_id": "90c35a116b0467b8fa90d35282345b75ec07f282",
            "original_line": 1629,
            "original_position": 17,
            "original_start_line": null,
            "path": "src/nvim/drawscreen.c",
            "position": null,
            "pull_request_review_id": 2634556960,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966365414/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-22T01:04:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966365414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966371400"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966371400"
                }
            },
            "author_association": "MEMBER",
            "body": "Here the documentation mentions \"string which should be either empty or a single character\", but unlike `conceal` the API actually accepts any string without checking for its content, which is a bit strange.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T01:15:31Z",
            "diff_hunk": "@@ -2698,6 +2698,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_lines: string which should be either empty or a\n+                    single character. When provided, lines in the range are",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966371400",
            "id": 1966371400,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NHJI",
            "original_commit_id": "6228cce0da3b17e3813b8e0f8437d31ac8c5ad77",
            "original_line": 2702,
            "original_position": 5,
            "original_start_line": 2701,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2634567172,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966371400/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T09:40:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966371400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966378489"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966378489"
                }
            },
            "author_association": "MEMBER",
            "body": "Well the char part is as of yet unimplemented. The flag is a string to be future-proof towards that, while it is unimplemented it doesn't need to be checked in the API. But I guess there is no reason to already document the unimplemented behavior (although I do vaguely remember discussing that here or on matrix).",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T01:31:45Z",
            "diff_hunk": "@@ -2698,6 +2698,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_lines: string which should be either empty or a\n+                    single character. When provided, lines in the range are",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966378489",
            "id": 1966378489,
            "in_reply_to_id": 1966371400,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NI35",
            "original_commit_id": "6228cce0da3b17e3813b8e0f8437d31ac8c5ad77",
            "original_line": 2702,
            "original_position": 5,
            "original_start_line": 2701,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2634578496,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966378489/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T01:31:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966378489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966380989"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966380989"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this early return is wrong. When a line is concealed, there may still be virtual lines attached to the line above (with `virt_lines_above = false`), so `win_get_fill()` still needs to be called.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T01:41:53Z",
            "diff_hunk": "@@ -893,6 +897,11 @@ int plines_win_full(win_T *wp, linenr_T lnum, linenr_T *const nextp, bool *const\n   if (foldedp != NULL) {\n     *foldedp = folded;\n   }\n+\n+  if (decor_conceal_line(wp, lnum - 1, false)) {\n+    return 0;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966380989",
            "id": 1966380989,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NJe9",
            "original_commit_id": "90c35a116b0467b8fa90d35282345b75ec07f282",
            "original_line": 906,
            "original_position": 28,
            "original_start_line": 901,
            "path": "src/nvim/plines.c",
            "position": null,
            "pull_request_review_id": 2634583192,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966380989/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T01:42:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966380989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966385238"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966385238"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm the early return maybe should be wrong but I don't think it currently is. I think because the line is concealed `virt_lines_above = false` for the above line will not be drawn currently?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T01:54:53Z",
            "diff_hunk": "@@ -893,6 +897,11 @@ int plines_win_full(win_T *wp, linenr_T lnum, linenr_T *const nextp, bool *const\n   if (foldedp != NULL) {\n     *foldedp = folded;\n   }\n+\n+  if (decor_conceal_line(wp, lnum - 1, false)) {\n+    return 0;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966385238",
            "id": 1966385238,
            "in_reply_to_id": 1966380989,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NKhW",
            "original_commit_id": "90c35a116b0467b8fa90d35282345b75ec07f282",
            "original_line": 906,
            "original_position": 28,
            "original_start_line": 901,
            "path": "src/nvim/plines.c",
            "position": null,
            "pull_request_review_id": 2634593368,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966385238/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T01:54:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966385238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966386117"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966386117"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, right. Add a TODO?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T01:58:01Z",
            "diff_hunk": "@@ -893,6 +897,11 @@ int plines_win_full(win_T *wp, linenr_T lnum, linenr_T *const nextp, bool *const\n   if (foldedp != NULL) {\n     *foldedp = folded;\n   }\n+\n+  if (decor_conceal_line(wp, lnum - 1, false)) {\n+    return 0;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966386117",
            "id": 1966386117,
            "in_reply_to_id": 1966380989,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NKvF",
            "original_commit_id": "90c35a116b0467b8fa90d35282345b75ec07f282",
            "original_line": 906,
            "original_position": 28,
            "original_start_line": 901,
            "path": "src/nvim/plines.c",
            "position": null,
            "pull_request_review_id": 2634595077,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966386117/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T01:58:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966386117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966482893"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966482893"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't remember the outcome; there may have been concern that people already rely on the missing check and set multiple characters, which will make implementing the missing feature a breaking change.\r\n\r\nMaybe we can add the check already even if it's not strictly necessary yet?",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T09:39:42Z",
            "diff_hunk": "@@ -2698,6 +2698,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_lines: string which should be either empty or a\n+                    single character. When provided, lines in the range are",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966482893",
            "id": 1966482893,
            "in_reply_to_id": 1966371400,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NiXN",
            "original_commit_id": "6228cce0da3b17e3813b8e0f8437d31ac8c5ad77",
            "original_line": 2702,
            "original_position": 5,
            "original_start_line": 2701,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2634762694,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966482893/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T09:39:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966482893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966502390"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966502390"
                }
            },
            "author_association": "MEMBER",
            "body": "I think that makes sense, done. (Though the current API check for `conceal` only checks that the first char is printable anyways, not that the string is a single character. No reason to stray from that for `conceal_lines` I guess.)",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T11:59:22Z",
            "diff_hunk": "@@ -2698,6 +2698,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_lines: string which should be either empty or a\n+                    single character. When provided, lines in the range are",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966502390",
            "id": 1966502390,
            "in_reply_to_id": 1966371400,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NnH2",
            "original_commit_id": "6228cce0da3b17e3813b8e0f8437d31ac8c5ad77",
            "original_line": 2702,
            "original_position": 5,
            "original_start_line": 2701,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2634783751,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966502390/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T11:59:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966502390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966502896"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966502896"
                }
            },
            "author_association": "MEMBER",
            "body": "Alternatively -- and probably even better -- validate that the string is empty and document that it has to be. This leaves any possible future use completely open and simplifies documentation.\r\n\r\n(I'd avoid documenting anything that may -- or may not -- be implemented in the future.)\r\n\r\nSorry for the back-and-forth!",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-22T12:03:16Z",
            "diff_hunk": "@@ -2698,6 +2698,10 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {opts})\n                     When a character is supplied it is used as |:syn-cchar|.\n                     \"hl_group\" is used as highlight for the cchar if provided,\n                     otherwise it defaults to |hl-Conceal|.\n+                  • conceal_lines: string which should be either empty or a\n+                    single character. When provided, lines in the range are",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966502896",
            "id": 1966502896,
            "in_reply_to_id": 1966371400,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51NnPw",
            "original_commit_id": "6228cce0da3b17e3813b8e0f8437d31ac8c5ad77",
            "original_line": 2702,
            "original_position": 5,
            "original_start_line": 2701,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2634784271,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966502896/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-22T12:04:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966502896",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1966829206"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966829206"
                }
            },
            "author_association": "MEMBER",
            "body": "Fixed in https://github.com/neovim/neovim/compare/e67e399ea01b3198070a821423e73eab6f89133a..d1b63fa0ed482479bd7add4cf2a94dd2d88d0145.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-23T16:30:10Z",
            "diff_hunk": "@@ -893,6 +897,11 @@ int plines_win_full(win_T *wp, linenr_T lnum, linenr_T *const nextp, bool *const\n   if (foldedp != NULL) {\n     *foldedp = folded;\n   }\n+\n+  if (decor_conceal_line(wp, lnum - 1, false)) {\n+    return 0;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1966829206",
            "id": 1966829206,
            "in_reply_to_id": 1966380989,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51O26W",
            "original_commit_id": "90c35a116b0467b8fa90d35282345b75ec07f282",
            "original_line": 906,
            "original_position": 28,
            "original_start_line": 901,
            "path": "src/nvim/plines.c",
            "position": null,
            "pull_request_review_id": 2635666527,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966829206/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-23T16:30:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966829206",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1967000979"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1967000979"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      // file or the line is concealed, don't draw the line itself, break here.\r\n```",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-24T03:11:26Z",
            "diff_hunk": "@@ -3036,8 +3037,8 @@ int win_line(win_T *wp, linenr_T lnum, int startrow, int endrow, int col_rows, s\n       virt_line_index = -1;\n       virt_line_flags = 0;\n       // When the filler lines are actually below the last line of the\n-      // file, don't draw the line itself, break here.\n-      if (wlv.filler_todo == 0 && (wp->w_botfill || end_fill)) {\n+      // file or line line is concealed, don't draw the line itself, break here.",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1967000979",
            "id": 1967000979,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51Pg2T",
            "original_commit_id": "8ea7c83fba7dad92c607005807ea025ee1b923b2",
            "original_line": 3036,
            "original_position": 25,
            "original_start_line": null,
            "path": "src/nvim/drawline.c",
            "position": null,
            "pull_request_review_id": 2635948499,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1967000979/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-24T03:11:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1967000979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31324#discussion_r1967003892"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31324"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1967003892"
                }
            },
            "author_association": "MEMBER",
            "body": "It seems that `concealed` actually needs to be checked at almost every other place where `end_fill` is checked, except for the one in the `if (statuscol.draw)` branch.",
            "commit_id": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
            "created_at": "2025-02-24T03:20:02Z",
            "diff_hunk": "@@ -3036,8 +3037,8 @@ int win_line(win_T *wp, linenr_T lnum, int startrow, int endrow, int col_rows, s\n       virt_line_index = -1;\n       virt_line_flags = 0;\n       // When the filler lines are actually below the last line of the\n-      // file, don't draw the line itself, break here.\n-      if (wlv.filler_todo == 0 && (wp->w_botfill || end_fill)) {\n+      // file or line line is concealed, don't draw the line itself, break here.\n+      if (wlv.filler_todo == 0 && (wp->w_botfill || end_fill || concealed)) {",
            "html_url": "https://github.com/neovim/neovim/pull/31324#discussion_r1967003892",
            "id": 1967003892,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM51Phj0",
            "original_commit_id": "8ea7c83fba7dad92c607005807ea025ee1b923b2",
            "original_line": 3041,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/drawline.c",
            "position": null,
            "pull_request_review_id": 2635953180,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1967003892/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-24T03:20:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1967003892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I think a single new `'conceallevel'` value isn't enough to control this. One may want `conceal_lines` to work in combination with any of the existing `'conceallevel'` values.",
            "created_at": "2024-11-24T01:47:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2495745756",
            "id": 2495745756,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6Uwg7c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495745756/reactions"
            },
            "updated_at": "2024-11-24T01:48:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495745756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ye wasn't sure about that yet either, was just following #25718 for now and using `4` to test toggling.",
            "created_at": "2024-11-24T01:55:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2495749228",
            "id": 2495749228,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6Uwhxs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495749228/reactions"
            },
            "updated_at": "2024-11-25T21:53:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495749228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "On the other hand, I don't think this (combining different levels) is common enough to warrant a new option. The main (and right now only) use for this is completely hiding code block markers in Markdown.\r\n\r\nIf you feel strongly about being able to hide only those lines, we could do the \"bitflag\" approach and add, say, 4 to each level to include vertical conceal (so 4 only hides lines, 7 is level 3 with hidden lines etc.)",
            "created_at": "2024-11-24T09:48:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2495902892",
            "id": 2495902892,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6UxHSs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495902892/reactions"
            },
            "updated_at": "2024-11-24T09:48:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495902892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> use for this is completely hiding code block markers in Markdown.\r\n\r\nThis requires a combination of `&conceallevel = 2` and `conceal_lines`, which is already a combination that this PR doesn't currently support.\r\n\r\nSo why add a new level at all? Why not just add `conceal_lines` to existing levels?",
            "created_at": "2024-11-24T10:35:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2495929695",
            "id": 2495929695,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6UxN1f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495929695/reactions"
            },
            "updated_at": "2024-11-24T10:36:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495929695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah going by the current help text for 'conceallevel', hiding concealed lines seems to fit fine with the current levels. Might be a bit surprising to have this enabled without user intervention but perhaps some kind of indicator on the next line similar to the 'smoothscroll' indicator can help with that?",
            "created_at": "2024-11-24T11:08:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2495942306",
            "id": 2495942306,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6UxQ6i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495942306/reactions"
            },
            "updated_at": "2024-11-24T11:08:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495942306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So why add a new level at all? Why not just add conceal_lines to existing levels?\r\n\r\nThat also works, and is probably the easiest for the MVP here.",
            "created_at": "2024-11-24T11:50:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2495961151",
            "id": 2495961151,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6UxVg_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495961151/reactions"
            },
            "updated_at": "2024-11-24T11:50:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2495961151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Current open questions:\r\n* What column should the cursor be at when it is on a concealed line (0 or actual `wcol` it would be at if it wasn't hidden).\r\n* What should happen when the first line of a closed fold is concealed. For now I assume that would hide the line with foldtext and thus the entire fold.\r\n* Do we need an indicator for concealed lines (with `set no(r)nu`).",
            "created_at": "2024-11-25T16:48:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2498533444",
            "id": 2498533444,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6U7JhE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2498533444/reactions"
            },
            "updated_at": "2024-11-27T23:41:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2498533444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not sure if been discussed already but `conceal_lines` makes more sense to me than `conceal_line`.",
            "created_at": "2024-11-28T10:44:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2505808131",
            "id": 2505808131,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VW5kD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505808131/reactions"
            },
            "updated_at": "2024-11-28T10:44:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505808131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Not sure if been discussed already but `conceal_lines` makes more sense to me than `conceal_line`.\r\n\r\nHasn't been discussed. Why? Because it will hide multiple lines if the range spans multiple lines? That's true for all flags, most of which aren't plural either. Keeping it singular seems more natural me, but I don't mind.",
            "created_at": "2024-11-28T10:55:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2505830940",
            "id": 2505830940,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VW_Ic",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505830940/reactions"
            },
            "updated_at": "2024-11-28T10:55:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505830940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`virt_lines`? (So +1 from me to Lewis' suggestion.)",
            "created_at": "2024-11-28T10:58:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2505837169",
            "id": 2505837169,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VXApx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505837169/reactions"
            },
            "updated_at": "2024-11-28T10:58:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505837169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`virt_lines` itself can take an array of lines so there the plural form makes sense. Setting a `conceal_lines` property for a singular `start_row` seems wrong to me. Setting `end_row` implies that all \"singular-form\" properties are applied to all lines in the range. Making the property itself plural seems off.",
            "created_at": "2024-11-28T11:09:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2505858900",
            "id": 2505858900,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VXF9U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505858900/reactions"
            },
            "updated_at": "2024-11-28T11:09:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505858900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That's true for all flags, most of which aren't plural either. \r\n\r\nWhich? From what I can tell, all flags are named appropriately for what they do.",
            "created_at": "2024-11-28T11:09:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2505858944",
            "id": 2505858944,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VXF-A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505858944/reactions"
            },
            "updated_at": "2024-11-28T11:09:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505858944",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `virt_lines` itself can take an array of lines so there the plural form makes sense. Setting a `conceal_lines` property for a singular `start_row` seems wrong to me. Setting `end_row` implies that all \"singular-form\" properties are applied to all lines in the range. Making the property itself plural seems off.\r\n\r\nSorry, but `conceal_line` is not a singular property like `priority` (which would have to be called `char_priority` for that argument to hold). If a single `conceal_line` mark can skip multiple lines, it should be plural. (And the symmetry with `virt_lines` helps avoid needless mental typos.)\r\n\r\nNot a deal-breaker, but to me the arguments are noticeably in favor of plural here.",
            "created_at": "2024-11-28T11:12:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2505866224",
            "id": 2505866224,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VXHvw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505866224/reactions"
            },
            "updated_at": "2024-11-28T11:12:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505866224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Likewise `nvim_buf_set/get_lines` can set/get a single line, but it is named with the plural because it can set/get multiple lines.",
            "created_at": "2024-11-28T11:18:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2505877924",
            "id": 2505877924,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VXKmk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505877924/reactions"
            },
            "updated_at": "2024-11-28T11:18:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2505877924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Could add a sentence or two to `:h treesitter-highlight-conceal` (doesn't need a separate paragraph or tag).\r\n",
            "created_at": "2024-11-28T14:45:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2506286170",
            "id": 2506286170,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VYuRa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2506286170/reactions"
            },
            "updated_at": "2024-11-28T14:45:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2506286170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We could instead have the on_win callback (that now already iterates from topline > botline), store captures/metadata per line, and have the on_line callback iterate that. Would that be a welcome refactor?",
            "created_at": "2024-11-29T13:03:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2507780422",
            "id": 2507780422,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VebFG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2507780422/reactions"
            },
            "updated_at": "2024-11-29T13:03:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2507780422",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm not sure what benefit that has over using the treesitter iterator. If anything wouldn't it be less performant due to the intermediate structure?",
            "created_at": "2024-11-29T13:27:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2507820006",
            "id": 2507820006,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6Vekvm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2507820006/reactions"
            },
            "updated_at": "2024-11-29T13:27:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2507820006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Reduces some code duplication (~30 LOC less) and double calls to `iter()`, `get_range()`, and `unpack4()`. My assumption was that it would be more performant, but if those functions are cheap, that might not be true, IDK. I'll try to benchmark.",
            "created_at": "2024-11-29T13:40:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2507844236",
            "id": 2507844236,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VeqqM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2507844236/reactions"
            },
            "updated_at": "2024-11-29T14:08:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2507844236",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So yeah it's about twice as fast, even though multiline marks need to be stored in each line it spans. Otherwise multiline highlights are only applied to the start line. This doesn't seem to be tested (at least not in `treesitter/highlight_spec.lua`). Even then, it's still around twice as fast as the current PR, and also ~10% faster than HEAD. \r\n\r\nSo yeah it seems significant work is done in the de-duplicated functions. I'll add it in a separate commit to review.",
            "created_at": "2024-11-29T15:08:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2508004026",
            "id": 2508004026,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VfRq6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2508004026/reactions"
            },
            "updated_at": "2024-11-29T16:32:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2508004026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There's currently an issue with lines not being concealed if they weren't visible before other lines were concealed. I.e. for this [file.md](https://github.com/user-attachments/files/17966293/file.md), and this config:\r\n\r\n```lua\r\nvim.treesitter.start(0, 'markdown')\r\nvim.cmd('set conceallevel=3')\r\nvim.cmd('set number')\r\n```\r\n\r\nrunnung `nvim --clean -u config.lua file.md`. \r\n\r\nOn the first few redraws, lines at the bottom would not be concealed. Moving with `<C-d>` and `<C-u>` produces the same issues:\r\n\r\n![image](https://github.com/user-attachments/assets/d035cf04-7469-456a-9ae6-1b7188340a7d)\r\n\r\n\r\nThis happens because `srow` and `erow` are determined before some lines are concealed, and concealed lines below the window are not added even though they eventually become visible. There's also no highlighting for those lines. \r\n",
            "created_at": "2024-11-30T17:42:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2509085698",
            "id": 2509085698,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VjZwC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509085698/reactions"
            },
            "updated_at": "2024-11-30T21:50:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509085698",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for noticing that, I'll look into it.",
            "created_at": "2024-11-30T17:48:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2509087465",
            "id": 2509087465,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VjaLp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509087465/reactions"
            },
            "updated_at": "2024-11-30T21:50:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509087465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would it be possible to run the query cursor for the entire window only if the query has `conceal_lines` (similar to how #26827 [handles combined injections](https://github.com/neovim/neovim/blob/a092c61fd6b6f1b8cbd13bad7ada337786819a13/runtime/lua/vim/treesitter/query.lua#L35)) and `conceallevel` is 3, and keep the old highlighting logic?\r\n\r\nQuery cursor is the main bottleneck for long lines, and keeping the old logic would make it possible to not run it for the entire line.\r\n\r\nIf there's a slowdown from running the highlighting query twice, we can try moving everything that needs to run for the entire window into a separate query file to reduce the number of matches.\r\n\r\n",
            "created_at": "2024-11-30T18:25:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2509133333",
            "id": 2509133333,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VjlYV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509133333/reactions"
            },
            "updated_at": "2024-11-30T18:31:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509133333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If there's a slowdown from running the highlighting query twice, we can try moving everything that needs to run for the entire window into a separate query file to reduce the number of matches.\r\n\r\nThat seemed the most obvious solution to me as well and I proposed it in chat but @clason didn't like that.",
            "created_at": "2024-11-30T18:43:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2509137754",
            "id": 2509137754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6Vjmda",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509137754/reactions"
            },
            "updated_at": "2024-11-30T18:43:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509137754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nah, we should avoid that. If we need to partition them, then this should be done internally (somehow).",
            "created_at": "2024-11-30T19:06:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2509143544",
            "id": 2509143544,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6Vjn34",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509143544/reactions"
            },
            "updated_at": "2024-11-30T19:06:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509143544",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> There's currently an issue with lines not being concealed if they weren't visible before other lines were concealed.\r\n\r\nResolved this by just extending `erow` whenever we place a `conceal_lines` mark. Removed the perf refactor so as not to conflict with #31400. EDIT: This is now handled by the new decoration provider callback.\r\n\r\nWill see if anything else can be done to improve performance for placing `conceal_lines` marks.",
            "created_at": "2024-11-30T21:30:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2509391290",
            "id": 2509391290,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6VkkW6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509391290/reactions"
            },
            "updated_at": "2024-12-03T14:22:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2509391290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In addition to the new `_on_decor_line` decoration provider callback, I painstakingly went through all instances of `has(Any)Folding()` to make sure the logic handles concealed lines properly. Unless deemed necessary I don't think it worth it to add tests for all the affected code paths...",
            "created_at": "2024-12-04T17:19:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2518076101",
            "id": 2518076101,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6WFsrF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2518076101/reactions"
            },
            "updated_at": "2024-12-04T17:56:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2518076101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What is the status here? (This is one of the main blockers for the 0.11 release.)",
            "created_at": "2025-01-28T09:12:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2618378495",
            "id": 2618378495,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6cEUj_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618378495/reactions"
            },
            "updated_at": "2025-01-28T09:12:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618378495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've just been rebasing this until someone finds the time/courage to review this. I think this works well enough, though I believe scrolling doesn't always work as expected (with regards to the amount scrolled).\r\n\r\nI did pose some questions in https://github.com/neovim/neovim/pull/31324#issuecomment-2498533444; I think the first and second behave in the least surprising way. \r\n\r\n> Do we need an indicator for (if the cursor is on) a concealed line (with set no(r)nu).\r\n\r\nThis may still be necessary but I held off on trying to implement it until I heard other opinions.",
            "created_at": "2025-01-28T09:32:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2618422821",
            "id": 2618422821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6cEfYl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618422821/reactions"
            },
            "updated_at": "2025-01-28T09:32:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618422821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If it doesn't conflict or regress with anything then I don't think this needs to be perfect, though at this point it may be worth pushing this to the next dev cycle and leaving it out of 0.11.",
            "created_at": "2025-01-28T09:33:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2618425290",
            "id": 2618425290,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6cEf_K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618425290/reactions"
            },
            "updated_at": "2025-01-28T09:34:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618425290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If it doesn't conflict or regress with anything then I don't think this needs to be perfect, though at this point it may be worth pushing this to the next dev cycle and leaving it out of 0.11.\r\n\r\nSorry, I don't think we should consider that unless something breaks hard -- this is necessary to fix a significant regression in 0.11. As you write, it doesn't have to be perfect; the primary (and in 0.11, only) use case will be Markdown codeblocks, which are unlikely to be scrolled. If we want to be extra conservative, we could inject the query only when showing hover and signature help windows.",
            "created_at": "2025-01-28T09:52:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2618467708",
            "id": 2618467708,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6cEqV8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618467708/reactions"
            },
            "updated_at": "2025-01-28T09:52:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618467708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> this is necessary to fix a significant regression in 0.11.\n\nOh right. What regression is that? I can't see anything linked. This just looks like a new feature which I'd thought we'd think about freezing by now.",
            "created_at": "2025-01-28T10:09:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2618551904",
            "id": 2618551904,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6cE-5g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618551904/reactions"
            },
            "updated_at": "2025-01-28T10:10:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618551904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The concealed codeblock markers (which were stripped in a preprocessing step before we transitioned to relying on treesitter highlighting) lead to unacceptable whitespace. (I'm not sure there's a dedicated issue; I've been closing most complaints; see, e.g., https://github.com/neovim/neovim/pull/25073#issuecomment-1767810374)",
            "created_at": "2025-01-28T10:11:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2618556039",
            "id": 2618556039,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6cE_6H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618556039/reactions"
            },
            "updated_at": "2025-01-28T10:13:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2618556039",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * What column should the cursor be at when it is on a concealed line (0 or actual `wcol` it would be at if it wasn't hidden).\r\n\r\nI would say \"actual\" is least surprising. (It should make no difference on the concealed line, and moving to the next line would keep the cursor in the column.)\r\n\r\n> * What should happen when the first line of a closed fold is concealed. For now I assume that would hide the line with foldtext and thus the entire fold.\r\n\r\nI think that is acceptable. (Scenario: Folding codeblocks with concealed markers.) Can revisit as a \"fix\" after release if someone comes up with a better behavior.\r\n\r\n> * Do we need an indicator for concealed lines (with `set no(r)nu`).\r\n\r\nNot for the primary scenario (LSP hover/signature help), so let's punt on that.",
            "created_at": "2025-02-05T08:53:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2636106361",
            "id": 2636106361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6dH8p5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2636106361/reactions"
            },
            "updated_at": "2025-02-05T08:53:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2636106361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If we want to be extra conservative, we could inject the query only when showing hover and signature help windows.\r\n\r\n+1 for this, concealed lines for all markdown buffers in general seems a bit intrusive",
            "created_at": "2025-02-06T02:44:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2638690584",
            "id": 2638690584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6dRzkY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2638690584/reactions"
            },
            "updated_at": "2025-02-06T02:45:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2638690584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Our markdown queries are already tuned to this specific use case, so _if_ we do this, we should do it properly. But I don't think this is possible yet (buffer-local `vim.treesitter.query.set()`).\r\n\r\nMy opinion on this is still: either you want conceal or you don't -- which is easily controllable by you via `conceallevel`, which we don't enable by default. (Or you want _very_ specific conceal, in which case any choice _we_ make is likely to be off and you should write your own queries.) ",
            "created_at": "2025-02-06T07:40:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2639052754",
            "id": 2639052754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6dTL_S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2639052754/reactions"
            },
            "updated_at": "2025-02-06T07:41:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2639052754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Question: What happens if both `conceal` and `conceal_line` are set on a line? (Relevant for backward-compatible markdown queries in nvim-treesitter.)",
            "created_at": "2025-02-08T09:47:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2644769160",
            "id": 2644769160,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6do_mI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2644769160/reactions"
            },
            "updated_at": "2025-02-08T09:47:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2644769160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Well since we didn't introduce a new 'conceallevel', I think `conceal` will never actually take effect on a line that also has `conceal_line`. I'm not sure how that affects BWC, I guess it is advantageous?",
            "created_at": "2025-02-08T10:13:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2644815634",
            "id": 2644815634,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6dpK8S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2644815634/reactions"
            },
            "updated_at": "2025-02-08T10:13:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2644815634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, if `conceal_line` takes priority over `conceal` and doesn't, say, error, that's exactly what I was hoping for.",
            "created_at": "2025-02-08T10:15:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2644818998",
            "id": 2644818998,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6dpLw2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2644818998/reactions"
            },
            "updated_at": "2025-02-08T10:15:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2644818998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Rebased and made some [changes](https://github.com/neovim/neovim/compare/23597cda3a1d230c8f1a6e0582968d0272778691..9b504a74e2127c3a528fb843e2f685d30d7d09bb) to ensure the `_on_conceal_line` callback cost is only incurred for a window into a buffer where the highlighter may conceal lines.",
            "created_at": "2025-02-11T09:05:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2650195480",
            "id": 2650195480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6d9sYY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 3,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650195480/reactions"
            },
            "updated_at": "2025-02-11T09:05:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2650195480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have been following this for a while and just decided to compile and test this since it seems to be in the review stage. I found an issue with this:\r\n\r\nMinimal init.lua\r\n```lua\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n\tpattern = { \"*\" },\r\n\tcallback = function(args)\r\n\t\tif not pcall(vim.treesitter.start, args.buf) then\r\n\t\t\treturn\r\n\t\tend\r\n\tend,\r\n})\r\n\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n\tpattern = { \"markdown\" },\r\n\tcallback = function()\r\n\t\tvim.opt.conceallevel = 2\r\n\tend,\r\n})\r\n\r\nvim.lsp.config(\"clangd\", {\r\n\tcmd = { \"clangd\", \"--clang-tidy\" },\r\n\troot_markers = { \".clangd\", \"compile_commands.json\" },\r\n\tfiletypes = { \"c\" },\r\n})\r\n\r\nvim.lsp.enable(\"clangd\")\r\n```\r\n\r\nfoo.md:\r\n\r\n````md\r\n# This is a test\r\n\r\n```c\r\nint main() {\r\n  int foo = 4;\r\n}\r\n```\r\n````\r\n\r\nmain.c\r\n```c\r\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n  printf(\"foo\\n\");\r\n  return 1;\r\n}\r\n```\r\n\r\nhttps://github.com/user-attachments/assets/1ba2e506-d051-4178-a669-42451dd6bad2\r\n\r\nNotice that it doesn't seem to conceal before scrolling past the concealed lines\r\n\r\nIf I am just setting `set conceallevel=2` inside the markdown file and remove the autocmd, it seems to work as expected. It seems like there is some kind of race condition or something. However for the hover window in the c-file, conceallevel is set internally, so that is where I first noticed this, and then it seems to be reproducible with the autocmd.\n\nProbably not a dealbreaker for this PR if I have understood the comments here, but thought I would mention it anyways\r\n",
            "created_at": "2025-02-20T19:47:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2672520812",
            "id": 2672520812,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fS25s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672520812/reactions"
            },
            "updated_at": "2025-02-20T21:05:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672520812",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5160701?v=4",
                "events_url": "https://api.github.com/users/seblyng/events{/privacy}",
                "followers_url": "https://api.github.com/users/seblyng/followers",
                "following_url": "https://api.github.com/users/seblyng/following{/other_user}",
                "gists_url": "https://api.github.com/users/seblyng/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seblyng",
                "id": 5160701,
                "login": "seblyng",
                "node_id": "MDQ6VXNlcjUxNjA3MDE=",
                "organizations_url": "https://api.github.com/users/seblyng/orgs",
                "received_events_url": "https://api.github.com/users/seblyng/received_events",
                "repos_url": "https://api.github.com/users/seblyng/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seblyng/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seblyng/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seblyng",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks should be fixed. (The highlighter caches whether a line is concealed and relies on `on_changedtree`  and `on_buf` to tell it when that cache is invalidated. That logic didn't handle the first `on_changedtree` properly.)",
            "created_at": "2025-02-20T20:40:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2672632274",
            "id": 2672632274,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fTSHS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672632274/reactions"
            },
            "updated_at": "2025-02-20T22:37:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672632274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks! Seems to have fixed that specific issue. However, there still seems to be some things not working, and maybe especially for if it is the first line of the buffer (?)\r\n\r\nUpdate init.lua\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n\tpattern = { \"*\" },\r\n\tcallback = function(args)\r\n\t\tif not pcall(vim.treesitter.start, args.buf) then\r\n\t\t\treturn\r\n\t\tend\r\n\tend,\r\n})\r\n\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n\tpattern = { \"markdown\" },\r\n\tcallback = function()\r\n\t\tvim.opt.conceallevel = 2\r\n\tend,\r\n})\r\n\r\nvim.lsp.config(\"clangd\", {\r\n\tcmd = { \"clangd\", \"--clang-tidy\" },\r\n\troot_markers = { \".clangd\", \"compile_commands.json\" },\r\n\tfiletypes = { \"c\" },\r\n})\r\n\r\nvim.lsp.config(\"luals\", {\r\n\tcmd = { \"lua-language-server\" },\r\n\tfiletypes = { \"lua\" },\r\n\troot_markers = {\r\n\t\t\".luarc.json\",\r\n\t\t\".luarc.jsonc\",\r\n\t\t\".luacheckrc\",\r\n\t\t\".stylua.toml\",\r\n\t\t\"stylua.toml\",\r\n\t\t\"selene.toml\",\r\n\t\t\"selene.yml\",\r\n\t},\r\n\tsettings = {\r\n\t\tLua = {\r\n\t\t\truntime = {\r\n\t\t\t\tversion = \"LuaJIT\",\r\n\t\t\t},\r\n\t\t\tworkspace = {\r\n\t\t\t\tcheckThirdParty = false,\r\n\t\t\t\tlibrary = {\r\n\t\t\t\t\tvim.env.VIMRUNTIME,\r\n\t\t\t\t\t\"${3rd}/busted/library\",\r\n\t\t\t\t\t\"${3rd}/luv/library\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n})\r\n\r\nvim.lsp.enable(\"clangd\")\r\nvim.lsp.enable(\"luals\")\r\n```\r\n\r\nhttps://github.com/user-attachments/assets/051520f3-d49d-412e-975d-d0531d42a984\r\n\r\nNOTE: I wrote this before the two newest commits, but same behaviour with newest commit \r\n",
            "created_at": "2025-02-20T20:53:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2672656271",
            "id": 2672656271,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fTX-P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672656271/reactions"
            },
            "updated_at": "2025-02-20T21:49:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672656271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5160701?v=4",
                "events_url": "https://api.github.com/users/seblyng/events{/privacy}",
                "followers_url": "https://api.github.com/users/seblyng/followers",
                "following_url": "https://api.github.com/users/seblyng/following{/other_user}",
                "gists_url": "https://api.github.com/users/seblyng/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seblyng",
                "id": 5160701,
                "login": "seblyng",
                "node_id": "MDQ6VXNlcjUxNjA3MDE=",
                "organizations_url": "https://api.github.com/users/seblyng/orgs",
                "received_events_url": "https://api.github.com/users/seblyng/received_events",
                "repos_url": "https://api.github.com/users/seblyng/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seblyng/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seblyng/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seblyng",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> However, there still seems to be some things not working, and maybe especially for if it is the first line of the buffer\r\n\r\nWhat are \"some things\"? I think the fact that the first line isn't hidden in the hover window is because the cursor is on that that line. Presumably it would be concealed if the LSP hover window added `vim.o.concealcursor = 'n'`. Though I think it _should_ be concealed if the hover is not yet the current window, that seems to be a bug.",
            "created_at": "2025-02-20T21:19:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2672707939",
            "id": 2672707939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fTklj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672707939/reactions"
            },
            "updated_at": "2025-02-21T09:50:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672707939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What are \"some things\"? I think the fact that the first line isn't hidden in the hover window is because the cursor is on that that line. Presumably it would be concealed if the LSP hover window added vim.o.concealcursor = 'n'. Though I think it should be concealed if the hover is not yet the current window, that seems to be a bug.\n\nYes I totally agree. Maybe I was unclear. It is that it isn't concealed when the cursor is _not_ inside the popup that I consider a bug.",
            "created_at": "2025-02-20T21:22:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2672713895",
            "id": 2672713895,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fTmCn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672713895/reactions"
            },
            "updated_at": "2025-02-20T21:49:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672713895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5160701?v=4",
                "events_url": "https://api.github.com/users/seblyng/events{/privacy}",
                "followers_url": "https://api.github.com/users/seblyng/followers",
                "following_url": "https://api.github.com/users/seblyng/following{/other_user}",
                "gists_url": "https://api.github.com/users/seblyng/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seblyng",
                "id": 5160701,
                "login": "seblyng",
                "node_id": "MDQ6VXNlcjUxNjA3MDE=",
                "organizations_url": "https://api.github.com/users/seblyng/orgs",
                "received_events_url": "https://api.github.com/users/seblyng/received_events",
                "repos_url": "https://api.github.com/users/seblyng/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seblyng/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seblyng/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seblyng",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The highlighter caches whether a line is concealed and relies on `on_changedtree` to tell it when that cache is invalidated.\r\n\r\nI think it should also check for text changes. The reason is the same as in https://github.com/neovim/neovim/pull/31975: if a pattern checks the text inside the node, whether it matches or not can change without changing the type of the node. And `on_changedtree` only gives ranges where types of nodes changed or nodes were moved.\r\n\r\nAlso does that mean that conceal patterns can only check nodes on the same line? If it includes a node from the line above, would it be removed when that line changes and it no longer matches? (If this makes sense, I'm still reading the code)",
            "created_at": "2025-02-20T22:06:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2672796940",
            "id": 2672796940,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fT6UM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672796940/reactions"
            },
            "updated_at": "2025-02-20T22:09:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672796940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The cache is also invalidated in `on_buf`.\r\n\r\n> Also does that mean that conceal patterns can only check nodes on the same line? If it includes a node from the line above, would it be removed when that line changes and it no longer matches? (If this makes sense, I'm still reading the code)\r\n\r\nI'm not well versed enough in TS lingo to even be sure what you're asking but I think that isn't handled by the highlighter? I just place conceal_lines marks whenever the query tells me to. If the text changes `on_buf` clears the namespace so it would be removed, and I would assume not placed again if it no longer matches.",
            "created_at": "2025-02-20T22:50:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2672882256",
            "id": 2672882256,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fUPJQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672882256/reactions"
            },
            "updated_at": "2025-02-21T01:58:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2672882256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Again, I remind that the primary use case for 0.11 is LSP hover and signature help, so there is no need for the MVP to be fully robust against all possible buffer changes; these can be deal with in (backported) fixes.\r\n\r\n~On the other hand, this:~\r\n\r\n> ~I think the fact that the first line isn't hidden in the hover window is because the cursor is on that that line. Presumably it would be concealed if the LSP hover window added vim.o.concealcursor = 'n'. Though I think it should be concealed if the hover is not yet the current window, that seems to be a bug.~\r\n\r\n~should be handled (in a separate issue/PR).~",
            "created_at": "2025-02-21T09:45:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2674070994",
            "id": 2674070994,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fYxXS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674070994/reactions"
            },
            "updated_at": "2025-02-21T09:52:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674070994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Can confirm that the first line is now concealed if the cursor is not inside the popup after the latest commits👍 only tested this minimal but seems to work good and as expected now\r\n\r\nThis PR:\r\n![image](https://github.com/user-attachments/assets/b3223bc2-31ef-4f48-bf7e-c5681cdf066e)\r\n\r\nMaster:\r\n![image](https://github.com/user-attachments/assets/d05199b6-ca35-4a4e-8fba-b5316a33dae7)\r\n\r\nSo the popup is still \"too large\" but I would guess that is not necessarily for this PR to solve. It conceals at least the first line correctly, and then it is probably for a follow up PR to fix how large the popup needs to be",
            "created_at": "2025-02-21T09:48:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2674077964",
            "id": 2674077964,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6fYzEM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674077964/reactions"
            },
            "updated_at": "2025-02-21T09:59:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674077964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5160701?v=4",
                "events_url": "https://api.github.com/users/seblyng/events{/privacy}",
                "followers_url": "https://api.github.com/users/seblyng/followers",
                "following_url": "https://api.github.com/users/seblyng/following{/other_user}",
                "gists_url": "https://api.github.com/users/seblyng/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seblyng",
                "id": 5160701,
                "login": "seblyng",
                "node_id": "MDQ6VXNlcjUxNjA3MDE=",
                "organizations_url": "https://api.github.com/users/seblyng/orgs",
                "received_events_url": "https://api.github.com/users/seblyng/received_events",
                "repos_url": "https://api.github.com/users/seblyng/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seblyng/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seblyng/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seblyng",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah need to adapt `util.lua:_make_floating_popup_size()`. Might be able to just replace it with with something akin to: open float and set its buffer text -> resize it to `api.nvim_win_text_height()`. I do the same for the ext_ui message box.",
            "created_at": "2025-02-21T12:33:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/31324#issuecomment-2674439262",
            "id": 2674439262,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
            "node_id": "IC_kwDOAPphoM6faLRe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674439262/reactions"
            },
            "updated_at": "2025-02-21T12:33:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674439262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31324/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31324/commits",
    "created_at": "2024-11-23T22:20:26Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31324.diff",
    "draft": false,
    "head": {
        "label": "luukvbaal:lineconceal",
        "ref": "lineconceal",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/luukvbaal/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/luukvbaal/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/luukvbaal/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/luukvbaal/neovim/branches{/branch}",
            "clone_url": "https://github.com/luukvbaal/neovim.git",
            "collaborators_url": "https://api.github.com/repos/luukvbaal/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/luukvbaal/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/luukvbaal/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/luukvbaal/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/luukvbaal/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/luukvbaal/neovim/contributors",
            "created_at": "2022-07-05T23:21:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/luukvbaal/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/luukvbaal/neovim/downloads",
            "events_url": "https://api.github.com/repos/luukvbaal/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/luukvbaal/neovim/forks",
            "full_name": "luukvbaal/neovim",
            "git_commits_url": "https://api.github.com/repos/luukvbaal/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/luukvbaal/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/luukvbaal/neovim/git/tags{/sha}",
            "git_url": "git://github.com/luukvbaal/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/luukvbaal/neovim/hooks",
            "html_url": "https://github.com/luukvbaal/neovim",
            "id": 510922471,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/luukvbaal/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/luukvbaal/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/luukvbaal/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/luukvbaal/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/luukvbaal/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/luukvbaal/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/luukvbaal/neovim/merges",
            "milestones_url": "https://api.github.com/repos/luukvbaal/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHnQO5w",
            "notifications_url": "https://api.github.com/repos/luukvbaal/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/luukvbaal/neovim/pulls{/number}",
            "pushed_at": "2025-02-24T11:37:27Z",
            "releases_url": "https://api.github.com/repos/luukvbaal/neovim/releases{/id}",
            "size": 306253,
            "ssh_url": "git@github.com:luukvbaal/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/luukvbaal/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/luukvbaal/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/luukvbaal/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/luukvbaal/neovim/subscription",
            "svn_url": "https://github.com/luukvbaal/neovim",
            "tags_url": "https://api.github.com/repos/luukvbaal/neovim/tags",
            "teams_url": "https://api.github.com/repos/luukvbaal/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/luukvbaal/neovim/git/trees{/sha}",
            "updated_at": "2025-02-22T11:35:59Z",
            "url": "https://api.github.com/repos/luukvbaal/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31324",
    "id": 2196425050,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31324",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "marks, extmarks, decorations, virtual text",
            "id": 1680119719,
            "name": "marks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/marks"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "f7aafeaf242fc27f5f46917bf230a4d39054361c",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 178,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 37,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-02-24T10:09:33Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM6C6sla",
    "number": 31324,
    "patch_url": "https://github.com/neovim/neovim/pull/31324.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31324/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ba0b45f10ab9bb2eb9efd309b7f4d4c9a4da9447",
    "title": "feat(marks): add conceal_lines to nvim_buf_set_extmark()",
    "updated_at": "2025-02-24T11:35:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31324",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal",
        "user_view_type": "public"
    }
}