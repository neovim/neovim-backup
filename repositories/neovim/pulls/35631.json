{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35631/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35631/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35631"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35631"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35631/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/bd41ba982a40f909c5e2a395c7548f0b32554b92"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6310,
            "forks_count": 6310,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1996,
            "open_issues_count": 1996,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-09T01:58:55Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 341252,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92608,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-09T02:05:07Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92608,
            "watchers_count": 92608,
            "web_commit_signoff_required": false
        },
        "sha": "21f2c2b19c40882dc6985f87a2e3527c60e3cfaa",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This PR addresses two issue.\r\n\r\n---\r\n\r\n`spec.version` on `master` is explicitly resolved (`nil` values are replaced with default branch) when triggering events and inside `get()`. This was done to allow users and wrapper plugins to know which actual branch is used. However, this comes at consistency (`PackChangedPre` for install can't have it inferred, for example) and performance cost. More importantly, it also hides the information about whether the user explicitly set `version` or not, which might matter in some use cases (like detecting if `version` has actually changed).\r\n\r\nThis PR stops doing that and tries to preserve `spec` in state as close to what user (eventually) set it to. I.e. it converts string `src` to table field and infers `name` (because it is required for further operations).\r\n\r\n---\r\n\r\nTo allow users and wrapper plugins to compute information about installed plugins, this PR updates `get()` to allow to return data only for a handful of plugins and opt in for computing extra info about them. The API is `get(names, opts)` with `opts.info` being `true` by default.\r\n\r\nTwo examples of usages:\r\n\r\n- Get current state: `get({ 'plug-name' })[1].rev`      \r\n- Get default branch: `get({ 'plug-name' })[1].branches[1]`",
    "closed_at": "2025-09-07T16:59:32Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328321504"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328321504"
                }
            },
            "author_association": "MEMBER",
            "body": "Avoid new jargon. We call things \"info\" and \"data\" in various places. \r\n\r\nIn the worst case this probably would be called `info`, but is the nesting actually necessary? The spec lives in `spec` so that's already isolated[1]. `branches` and `tags` fit in top-level as much as `path`, no?\r\n\r\n[1] (and I agree that it probably should not have \"resolved\" values, it should be the actual spec (though codepaths may *enhance* the spec so it might not exactly match the initial user-defined spec))",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T19:38:55Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328321504",
            "id": 2328321504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx13g",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 376,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193835856,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328321504/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T19:38:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328321504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328324024"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328324024"
                }
            },
            "author_association": "MEMBER",
            "body": "example? is it a status string, or a dict? (showing an example or type in the this doc will answer this question for users)\r\n\r\nif `state` is the commit, and never something like HEAD or a non-sha name, probably should just call it `rev` or `commit`. Git calls that a commit-id, but that's probably too pedantic. I lean towards `rev` because that's a bit more generalized but not too vague.\r\n\r\nIf it can be a name like HEAD, we may want to call this `ref`.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T19:39:59Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)\n+          • `branches` lists available Git branches (first is default).\n+          • `state` is a current Git state.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328324024",
            "id": 2328324024,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx2e4",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 378,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193838546,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328324024/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T19:45:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328324024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328327045"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328327045"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    Gets |vim.pack| plugin info, optionally filtered by `opts`. \r\n```",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T19:41:36Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328327045",
            "id": 2328327045,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx3OF",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 360,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193842344,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328327045/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T19:41:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328327045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328338409"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328338409"
                }
            },
            "author_association": "MEMBER",
            "body": "Can be 3 flags `branch`, `tags`, etc. That avoids the urge to put that info into a dict. Or name it `scm` or `vcs`, and it controls VCS-related fields (but they are not nested).",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T19:48:16Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328338409",
            "id": 2328338409,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx5_p",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 366,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193856113,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328338409/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T19:48:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328338409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328339851"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328339851"
                }
            },
            "author_association": "MEMBER",
            "body": "> Avoid new jargon. We call things \"info\" and \"data\" in various places.\r\n\r\nIt is not new. It follows the `nvim_buf_get_extmarks()` examples.\r\n\r\nCan be `info`, sure. The `data` is a part of `spec`, so might be confusing.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T19:50:36Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328339851",
            "id": 2328339851,
            "in_reply_to_id": 2328321504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx6WL",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 376,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193858425,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328339851/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T19:50:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328339851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328341502"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328341502"
                }
            },
            "author_association": "MEMBER",
            "body": "> s it a status string, or a dict? (showing an example or type in the this doc will answer this question for users)\r\n\r\nIt is shown higher that it is a string.\r\n\r\n\r\n\r\n> if `state` is the commit, and never something like HEAD or a non-sha name, probably should just call it `rev` or `commit`. Git calls that a commit-id, but that's probably too pedantic. I lean towards `rev` because that's a bit more generalized but not too vague.\r\n\r\nCurrently it is indeed a (short) commit hash. Naming it with not VCS related name is a bit more forward compatible. Like after resolving #34765 a plugin can be local and can have its own notion of \"state\".\r\n\r\nIf taking only Git-related stuff, then It can be `rev`, I guess.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T19:53:40Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)\n+          • `branches` lists available Git branches (first is default).\n+          • `state` is a current Git state.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328341502",
            "id": 2328341502,
            "in_reply_to_id": 2328324024,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx6v-",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 378,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193860454,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328341502/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T19:53:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328341502",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328341805"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328341805"
                }
            },
            "author_association": "MEMBER",
            "body": "It is not (currently) filtered by `opts`. Should it mention that it can be filtered by `name`?",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T19:54:20Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328341805",
            "id": 2328341805,
            "in_reply_to_id": 2328327045,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx60t",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 360,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193860866,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328341805/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T19:54:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328341805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328342582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328342582"
                }
            },
            "author_association": "MEMBER",
            "body": "> ... is the nesting actually necessary? The spec lives in `spec` so that's already isolated[1]. `branches` and `tags` fit in top-level as much as `path`, no?\r\n\r\nNo, not really. Again, it mostly follows the `nvim_buf_get_extmarks()` approach, which returns all \"extra\" details in a single dictionary.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T19:56:41Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328342582",
            "id": 2328342582,
            "in_reply_to_id": 2328321504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx7A2",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 376,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193862599,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328342582/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T19:56:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328342582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328344321"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328344321"
                }
            },
            "author_association": "MEMBER",
            "body": "On one hand, this can allow more precise control over performance (only enable flags which you want to see).\r\n\r\nOn the other hand, won't it become more confusing if the number of provided \"extra\" details grow? For example, there will probably also be `type` field if/when there are \"local plugins\". Plus the reasonable set of useful flags might be different for different plugin types.\r\n\r\nWeighing both options, I'd probably still go with a single `details` / `info` flag that populates all extra available data about the plugin. For Git plugins they are computed in parallel, so shouldn't be too much of a problem. But I'd go the way you suggest eventually, of course.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:01:40Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328344321",
            "id": 2328344321,
            "in_reply_to_id": 2328338409,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx7cB",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 366,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193865660,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328344321/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:01:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328344321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328348013"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328348013"
                }
            },
            "author_association": "MEMBER",
            "body": "well `nvim_buf_get_extmarks` is wrong. it has like 73 fields so not a good example of anything, except at least it resisted the urge to create 73 functions.\r\n\r\nsounds like we are aligned that these fields can be top-level.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:07:02Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328348013",
            "id": 2328348013,
            "in_reply_to_id": 2328321504,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx8Vt",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 376,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193872385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328348013/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:07:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328348013",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328348939"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328348939"
                }
            },
            "author_association": "MEMBER",
            "body": "> Like after resolving #34765 a plugin can be local and can have its own notion of \"state\".\r\n\r\n`rev` might work for that? What would be examples of local \"state\" values?",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:09:35Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)\n+          • `branches` lists available Git branches (first is default).\n+          • `state` is a current Git state.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328348939",
            "id": 2328348939,
            "in_reply_to_id": 2328324024,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx8kL",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 378,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193873893,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328348939/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:09:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328348939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328349276"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328349276"
                }
            },
            "author_association": "MEMBER",
            "body": "This doc is pretty sparse (not a bad thing), so I think mentioning \"optionally filtered by...\" is worthwhile.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:10:34Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328349276",
            "id": 2328349276,
            "in_reply_to_id": 2328327045,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx8pc",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 360,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193874504,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328349276/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:10:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328349276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328352887"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328352887"
                }
            },
            "author_association": "MEMBER",
            "body": "> won't it become more confusing if the number of provided \"extra\" details grow?\r\n\r\nTrue. In https://github.com/neovim/neovim/pull/30086 we are considering (the opposite concept) `fast`. And git has the concept of `sparse` checkouts. \r\n\r\nAlso considered `all`, `deep`, `full`, but those imply \"rigorous\" collection of info? So `info` may be best, it doesn't commit to anything.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:19:29Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328352887",
            "id": 2328352887,
            "in_reply_to_id": 2328338409,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx9h3",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 366,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193880837,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328352887/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:27:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328352887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328353835"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328353835"
                }
            },
            "author_association": "MEMBER",
            "body": "> `rev` might work for that?\r\n\r\nSaying that \"local plugin's revision is xxx\" just doesn't feel right. But maybe I am reading too much into this.\r\n\r\n> What would be examples of local \"state\" values?\r\n\r\nDon't know, but at least leaving the door open shouldn't be a bad thing. Plus somewhat related: documentation at start of `*vim.pack*` and confirmation buffer already use \"State\" / \"State before\"  / \"State after\". Which was chosen specifically to be more future compatible. It can also be changed, of course, but these need at least to be consistent.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:22:26Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)\n+          • `branches` lists available Git branches (first is default).\n+          • `state` is a current Git state.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328353835",
            "id": 2328353835,
            "in_reply_to_id": 2328324024,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx9wr",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 378,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193881755,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328353835/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:22:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328353835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328355082"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328355082"
                }
            },
            "author_association": "MEMBER",
            "body": "> Don't know, but at least leaving the door open shouldn't be a bad thing.\r\n\r\nwe're doing so, but it is very low priority when considering interface choices.\r\n\r\n> documentation at start of `*vim.pack*` and confirmation buffer already use \"State\" / \"State before\" / \"State after\r\n\r\nthe docs are easy to change and their wording choices don't matter right now.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:25:55Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.\n+                   Default `false`.\n \n     Return: ~\n         (`table[]`) A list of objects with the following fields:\n-        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with defaults\n-          made explicit.\n+        • {spec} (`vim.pack.SpecResolved`) A |vim.pack.Spec| with resolved\n+          `name`.\n         • {path} (`string`) Plugin's path on disk.\n         • {active} (`boolean`) Whether plugin was added via |vim.pack.add()|\n           to current session.\n+        • {details}? (`{ branches: string[], state: string, tags: string[] }`)\n+          • `branches` lists available Git branches (first is default).\n+          • `state` is a current Git state.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328355082",
            "id": 2328355082,
            "in_reply_to_id": 2328324024,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx-EK",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 378,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193883903,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328355082/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:25:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328355082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328355331"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328355331"
                }
            },
            "author_association": "MEMBER",
            "body": "> True. In #30086 we are considering (the opposite concept) `fast`. And git has the concept of `sparse` checkouts.\r\n\r\nI mean, it can be `fast` also. This is mostly the main reason of the flag's existence anyways: allow a way to control whether there needs to be time/resources spent to gather more information. Useful for both users and `vim.pack` itself (the `fast = true` or `info = false` case).\r\n\r\nIf `fast` is in consideration, then I'd go with it.",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:26:55Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328355331",
            "id": 2328355331,
            "in_reply_to_id": 2328338409,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx-ID",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 366,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193884320,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328355331/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:26:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328355331",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35631#discussion_r2328357117"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35631"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328357117"
                }
            },
            "author_association": "MEMBER",
            "body": "idk if `fast` is a good pattern to proliferate, because (1) performance is variable, (2) it has lower semantic value\r\n\r\nlet's say `info` for now",
            "commit_id": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
            "created_at": "2025-09-06T20:33:17Z",
            "diff_hunk": "@@ -355,16 +356,27 @@ del({names})                                                  *vim.pack.del()*\n                  be managed by |vim.pack|, not necessarily already added to\n                  current session.\n \n-get()                                                         *vim.pack.get()*\n-    Get data about all plugins managed by |vim.pack|\n+get({names}, {opts})                                          *vim.pack.get()*\n+    Get data about plugins managed by |vim.pack|\n+\n+    Parameters: ~\n+      • {names}  (`string[]?`) List of plugin names. Default: all plugins\n+                 managed by |vim.pack|.\n+      • {opts}   (`table?`) A table with the following fields:\n+                 • {details} (`boolean`) Whether to include plugin details.",
            "html_url": "https://github.com/neovim/neovim/pull/35631#discussion_r2328357117",
            "id": 2328357117,
            "in_reply_to_id": 2328338409,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Kx-j9",
            "original_commit_id": "5e56a1e6c590f267a15485c4b83db2afd3f1f25d",
            "original_line": 366,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3193887230,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328357117/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-06T20:33:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2328357117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Addressed review comments:\r\n- Rename `opts.details` to `opts.info`.\r\n- Set extra info directly in plugin data table without nesting.\r\n\r\nAlso changed default `opts.info` to `true` since this simplifies logic for the common user, while still leaving the door open for a faster `get()` if needed.\r\n\r\n---\r\n\r\nOne thing to also consider might be to make `opts.info` private (maybe for now) with `opts` documented as \"reserved for future use\" (as it is still needed for `update()` and `del()`). The justification for this might be:\r\n- With lockfile in place the `rev` field *might* be set from the cached lockfile data and won't need to be guarded behind `opts.info`. Not sure if this is a good idea for general design reasons: should `get()` always return *real* extra info (like now) or allowing it to go through cached data here is fine? I plan to [simplify part of getting non-active plugins](https://github.com/neovim/neovim/blob/13b04207f167b957bc8967c32d816349be024882/runtime/lua/vim/pack.lua#L1014-L1022) by using cached lockfile data, so that might already answer the question in favor of the latter.\r\n- Simplifies documentation and API.\r\n\r\nThis all makes sense only if `opts._info=true` is default, though.",
            "created_at": "2025-09-07T11:03:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/35631#issuecomment-3263692766",
            "id": 3263692766,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35631",
            "node_id": "IC_kwDOAPphoM7Ch__e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263692766/reactions"
            },
            "updated_at": "2025-09-07T11:03:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263692766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `spec.version` on `master` is explicitly resolved (`nil` values are replaced with default branch) ... this hides the information about whether the user explicitly set `version` or not,\r\n\r\nFixing this is good 👍 \r\n\r\n> With lockfile in place the `rev` field _might_ be set from the cached lockfile data and won't need to be guarded behind `opts.info`\r\n> ... should `get()` always return _real_ extra info (like now) or allowing it to go through cached data here is fine?\r\n\r\nI like the idea of using the cache by default and having a way to opt-in to \"no cache\", controlled by a flag (`nocache`, `resolve`). That is clearer than the current `info` flag that we discussed.\r\n\r\nThat doesn't need to block this, can revisit.",
            "created_at": "2025-09-07T16:50:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/35631#issuecomment-3263901461",
            "id": 3263901461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35631",
            "node_id": "IC_kwDOAPphoM7Ciy8V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263901461/reactions"
            },
            "updated_at": "2025-09-07T16:56:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263901461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I like the idea of using the cache by default and having a way to opt-in to \"no cache\", controlled by a flag (`nocache`, `resolve`). That is clearer than the current `info` flag that we discussed.\r\n\r\nIt won't really be possible without actually storing `branches` and `tags` data on disk. They feel unnecessary in the \"public\" lockfile, while I *think* it is reasonable to avoid creating a separate \"private\" lockfile/cache for this kind of data.",
            "created_at": "2025-09-07T17:10:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/35631#issuecomment-3263913538",
            "id": 3263913538,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35631",
            "node_id": "IC_kwDOAPphoM7Ci15C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263913538/reactions"
            },
            "updated_at": "2025-09-07T17:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263913538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> avoid creating a separate \"private\" lockfile/cache for this kind of data.\r\n\r\nOh, definitely a good idea to avoid that. Querying is better than caching, except where the performance cost is just too high.",
            "created_at": "2025-09-07T17:15:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/35631#issuecomment-3263916621",
            "id": 3263916621,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35631",
            "node_id": "IC_kwDOAPphoM7Ci2pN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263916621/reactions"
            },
            "updated_at": "2025-09-07T17:15:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3263916621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35631/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35631/commits",
    "created_at": "2025-09-04T17:20:51Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35631.diff",
    "draft": false,
    "head": {
        "label": "echasnovski:pack-better-get",
        "ref": "pack-better-get",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/echasnovski/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/echasnovski/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/echasnovski/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/echasnovski/neovim/branches{/branch}",
            "clone_url": "https://github.com/echasnovski/neovim.git",
            "collaborators_url": "https://api.github.com/repos/echasnovski/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/echasnovski/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/echasnovski/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/echasnovski/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/echasnovski/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/echasnovski/neovim/contributors",
            "created_at": "2021-12-02T09:43:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/echasnovski/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/echasnovski/neovim/downloads",
            "events_url": "https://api.github.com/repos/echasnovski/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/echasnovski/neovim/forks",
            "full_name": "echasnovski/neovim",
            "git_commits_url": "https://api.github.com/repos/echasnovski/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/echasnovski/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/echasnovski/neovim/git/tags{/sha}",
            "git_url": "git://github.com/echasnovski/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/echasnovski/neovim/hooks",
            "html_url": "https://github.com/echasnovski/neovim",
            "id": 434162461,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/echasnovski/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/echasnovski/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/echasnovski/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/echasnovski/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/echasnovski/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/echasnovski/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/echasnovski/neovim/merges",
            "milestones_url": "https://api.github.com/repos/echasnovski/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGeDLHQ",
            "notifications_url": "https://api.github.com/repos/echasnovski/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/echasnovski/neovim/pulls{/number}",
            "pushed_at": "2025-09-07T10:51:03Z",
            "releases_url": "https://api.github.com/repos/echasnovski/neovim/releases{/id}",
            "size": 331633,
            "ssh_url": "git@github.com:echasnovski/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/echasnovski/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/echasnovski/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/echasnovski/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/echasnovski/neovim/subscription",
            "svn_url": "https://github.com/echasnovski/neovim",
            "tags_url": "https://api.github.com/repos/echasnovski/neovim/tags",
            "teams_url": "https://api.github.com/repos/echasnovski/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/echasnovski/neovim/git/trees{/sha}",
            "updated_at": "2025-09-06T11:45:30Z",
            "url": "https://api.github.com/repos/echasnovski/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "bd41ba982a40f909c5e2a395c7548f0b32554b92",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35631",
    "id": 2800222964,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35631",
    "labels": [
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 6664957181,
            "name": "ci:skip-news",
            "node_id": "LA_kwDOAPphoM8AAAABjUMs_Q",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:skip-news"
        },
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "locked": false,
    "merge_commit_sha": "7853cde29a08aa43bcaecc9848a8b43248bf8d66",
    "merged_at": "2025-09-07T16:59:32Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6m6AL0",
    "number": 35631,
    "patch_url": "https://github.com/neovim/neovim/pull/35631.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35631/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/bd41ba982a40f909c5e2a395c7548f0b32554b92",
    "title": "feat(pack): `vim.pack.get()` gets VCS info",
    "updated_at": "2025-09-07T17:15:52Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35631",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}