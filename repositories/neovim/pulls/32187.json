{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32187/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32187/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32187"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32187"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32187/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/4cf6e62cf8d69a18a65ff789e5abe589f36316c1"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5856,
            "forks_count": 5856,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1849,
            "open_issues_count": 1849,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-11T02:06:45Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 307849,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 86062,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-11T02:12:27Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 86062,
            "watchers_count": 86062,
            "web_commit_signoff_required": false
        },
        "sha": "8ce2833411534f44dc810b282da283f69e78a28a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "As suggested by @gpanders in https://github.com/neovim/neovim/pull/31959#discussion_r1927069813.",
    "closed_at": "2025-02-05T14:27:10Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1928030792"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1928030792"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    it('virtual_text.current_line shows only current line', function()\r\n```",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-01-24T03:17:06Z",
            "diff_hunk": "@@ -2117,6 +2117,25 @@ describe('vim.diagnostic', function()\n         end)\n       )\n     end)\n+\n+    it('can only show virtual_text for the current line', function()",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1928030792",
            "id": 1928030792,
            "line": 2164,
            "node_id": "PRRC_kwDOAPphoM5y62pI",
            "original_commit_id": "b4b7ccaedc16b7a1732d4c755a995e2fd5233fb2",
            "original_line": 2164,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": 5,
            "pull_request_review_id": 2571556380,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1928030792/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-24T03:17:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1928030792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1929082580"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1929082580"
                }
            },
            "author_association": "MEMBER",
            "body": "Is it worth moving the call to `diagnostic_lines` into the `else` branch of this condition so that we don't compute and then throw away a bunch of data we don't need? In the `then` branch we'd need to compute the buffer line diagnostics \"manually\", but that is easy (simple for loop + table.insert).",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-01-24T18:26:19Z",
            "diff_hunk": "@@ -1577,6 +1581,12 @@ M.handlers.virtual_text = {\n \n     local virt_text_ns = ns.user_data.virt_text_ns\n     local buffer_line_diagnostics = diagnostic_lines(diagnostics)\n+\n+    if opts.virtual_text.current_line == true then\n+      local lnum = api.nvim_win_get_cursor(0)[1] - 1\n+      buffer_line_diagnostics = { [lnum] = buffer_line_diagnostics[lnum] }\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1929082580",
            "id": 1929082580,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5y-3bU",
            "original_commit_id": "32a36165304cd78678215705b2be48ce1b456ca8",
            "original_line": 1655,
            "original_position": 19,
            "original_start_line": 1583,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2573328917,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1929082580/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-24T18:26:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1929082580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1929384142"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1929384142"
                }
            },
            "author_association": "MEMBER",
            "body": "Good idea!",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-01-24T23:53:53Z",
            "diff_hunk": "@@ -1577,6 +1581,12 @@ M.handlers.virtual_text = {\n \n     local virt_text_ns = ns.user_data.virt_text_ns\n     local buffer_line_diagnostics = diagnostic_lines(diagnostics)\n+\n+    if opts.virtual_text.current_line == true then\n+      local lnum = api.nvim_win_get_cursor(0)[1] - 1\n+      buffer_line_diagnostics = { [lnum] = buffer_line_diagnostics[lnum] }\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1929384142",
            "id": 1929384142,
            "in_reply_to_id": 1929082580,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zABDO",
            "original_commit_id": "32a36165304cd78678215705b2be48ce1b456ca8",
            "original_line": 1655,
            "original_position": 19,
            "original_start_line": 1583,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2573811719,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1929384142/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-24T23:53:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1929384142",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1930861011"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1930861011"
                }
            },
            "author_association": "MEMBER",
            "body": "If I'm understanding how this code works, then we are iterating through the list of diagnostics to find the diagnostics for the current cursor line every time the cursor moves, even when the list of diagnostics hasn't changed and the current cursor line hasn't changed.\r\n\r\nIt would increase the complexity of the handler a bit, but we could cache the result of `diagnostic_lines` whenever `show` is called, and then the CursorMoved autocommand can index into that table based on the current cursor line (so we get the cursor line diagnostics in O(1) time instead of O(N)).\r\n\r\nThe cursor moves a lot, so it's probably worth it (or at the very least only recompute diagnostics when the cursor's line number changes).",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-01-27T16:55:46Z",
            "diff_hunk": "@@ -1592,23 +1643,43 @@ M.handlers.virtual_text = {\n       ns.user_data.virt_text_ns =\n         api.nvim_create_namespace(string.format('nvim.%s.diagnostic.virtual_text', ns.name))\n     end\n+    if not M.handlers.virtual_text._augroup then\n+      M.handlers.virtual_text._augroup =\n+        api.nvim_create_augroup('nvim.lsp.diagnostic.virtual_text', { clear = true })\n+    end\n \n-    local virt_text_ns = ns.user_data.virt_text_ns\n-    local buffer_line_diagnostics = diagnostic_lines(diagnostics)\n-    for line, line_diagnostics in pairs(buffer_line_diagnostics) do\n-      local virt_texts = M._get_virt_text_chunks(line_diagnostics, opts.virtual_text)\n+    api.nvim_clear_autocmds({ group = M.handlers.virtual_text._augroup })\n \n-      if virt_texts then\n-        api.nvim_buf_set_extmark(bufnr, virt_text_ns, line, 0, {\n-          hl_mode = opts.virtual_text.hl_mode or 'combine',\n-          virt_text = virt_texts,\n-          virt_text_pos = opts.virtual_text.virt_text_pos,\n-          virt_text_hide = opts.virtual_text.virt_text_hide,\n-          virt_text_win_col = opts.virtual_text.virt_text_win_col,\n-        })\n-      end\n+    if opts.virtual_text.current_line == true then\n+      api.nvim_create_autocmd('CursorMoved', {\n+        buffer = bufnr,\n+        group = M.handlers.virtual_text._augroup,\n+        callback = function()\n+          render_virtual_text_at_current_line(\n+            bufnr,\n+            ns.user_data.virt_text_ns,\n+            diagnostics,\n+            opts.virtual_text\n+          )",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1930861011",
            "id": 1930861011,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zFpnT",
            "original_commit_id": "608c77760612ceaf8ae1159ddc1fba3fc3463205",
            "original_line": 1672,
            "original_position": 106,
            "original_start_line": 1658,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2576003004,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1930861011/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-27T16:55:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1930861011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1931392421"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1931392421"
                }
            },
            "author_association": "MEMBER",
            "body": "Good idea. The same improvement would also apply with `virtual_lines` so double win.",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-01-28T01:10:44Z",
            "diff_hunk": "@@ -1592,23 +1643,43 @@ M.handlers.virtual_text = {\n       ns.user_data.virt_text_ns =\n         api.nvim_create_namespace(string.format('nvim.%s.diagnostic.virtual_text', ns.name))\n     end\n+    if not M.handlers.virtual_text._augroup then\n+      M.handlers.virtual_text._augroup =\n+        api.nvim_create_augroup('nvim.lsp.diagnostic.virtual_text', { clear = true })\n+    end\n \n-    local virt_text_ns = ns.user_data.virt_text_ns\n-    local buffer_line_diagnostics = diagnostic_lines(diagnostics)\n-    for line, line_diagnostics in pairs(buffer_line_diagnostics) do\n-      local virt_texts = M._get_virt_text_chunks(line_diagnostics, opts.virtual_text)\n+    api.nvim_clear_autocmds({ group = M.handlers.virtual_text._augroup })\n \n-      if virt_texts then\n-        api.nvim_buf_set_extmark(bufnr, virt_text_ns, line, 0, {\n-          hl_mode = opts.virtual_text.hl_mode or 'combine',\n-          virt_text = virt_texts,\n-          virt_text_pos = opts.virtual_text.virt_text_pos,\n-          virt_text_hide = opts.virtual_text.virt_text_hide,\n-          virt_text_win_col = opts.virtual_text.virt_text_win_col,\n-        })\n-      end\n+    if opts.virtual_text.current_line == true then\n+      api.nvim_create_autocmd('CursorMoved', {\n+        buffer = bufnr,\n+        group = M.handlers.virtual_text._augroup,\n+        callback = function()\n+          render_virtual_text_at_current_line(\n+            bufnr,\n+            ns.user_data.virt_text_ns,\n+            diagnostics,\n+            opts.virtual_text\n+          )",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1931392421",
            "id": 1931392421,
            "in_reply_to_id": 1930861011,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zHrWl",
            "original_commit_id": "608c77760612ceaf8ae1159ddc1fba3fc3463205",
            "original_line": 1672,
            "original_position": 106,
            "original_start_line": 1658,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2576864159,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1931392421/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-28T01:10:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1931392421",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1938355549"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938355549"
                }
            },
            "author_association": "MEMBER",
            "body": "Implementing this in https://github.com/neovim/neovim/pull/32288.",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-02-01T22:15:31Z",
            "diff_hunk": "@@ -1592,23 +1643,43 @@ M.handlers.virtual_text = {\n       ns.user_data.virt_text_ns =\n         api.nvim_create_namespace(string.format('nvim.%s.diagnostic.virtual_text', ns.name))\n     end\n+    if not M.handlers.virtual_text._augroup then\n+      M.handlers.virtual_text._augroup =\n+        api.nvim_create_augroup('nvim.lsp.diagnostic.virtual_text', { clear = true })\n+    end\n \n-    local virt_text_ns = ns.user_data.virt_text_ns\n-    local buffer_line_diagnostics = diagnostic_lines(diagnostics)\n-    for line, line_diagnostics in pairs(buffer_line_diagnostics) do\n-      local virt_texts = M._get_virt_text_chunks(line_diagnostics, opts.virtual_text)\n+    api.nvim_clear_autocmds({ group = M.handlers.virtual_text._augroup })\n \n-      if virt_texts then\n-        api.nvim_buf_set_extmark(bufnr, virt_text_ns, line, 0, {\n-          hl_mode = opts.virtual_text.hl_mode or 'combine',\n-          virt_text = virt_texts,\n-          virt_text_pos = opts.virtual_text.virt_text_pos,\n-          virt_text_hide = opts.virtual_text.virt_text_hide,\n-          virt_text_win_col = opts.virtual_text.virt_text_win_col,\n-        })\n-      end\n+    if opts.virtual_text.current_line == true then\n+      api.nvim_create_autocmd('CursorMoved', {\n+        buffer = bufnr,\n+        group = M.handlers.virtual_text._augroup,\n+        callback = function()\n+          render_virtual_text_at_current_line(\n+            bufnr,\n+            ns.user_data.virt_text_ns,\n+            diagnostics,\n+            opts.virtual_text\n+          )",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1938355549",
            "id": 1938355549,
            "in_reply_to_id": 1930861011,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ziPVd",
            "original_commit_id": "608c77760612ceaf8ae1159ddc1fba3fc3463205",
            "original_line": 1672,
            "original_position": 106,
            "original_start_line": 1658,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2588419918,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938355549/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-01T22:15:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938355549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1938655721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938655721"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we remove this function completely and use\r\n\r\n```lua\r\nrender_virtual_lines(namespace, bufnr, diagnostics_at_cursor(diagnostics))\r\n```\r\n\r\ninstead?",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-02-03T01:31:40Z",
            "diff_hunk": "@@ -1809,22 +1885,8 @@ end\n --- @param namespace integer\n --- @param bufnr integer\n local function render_virtual_lines_at_current_line(diagnostics, namespace, bufnr)\n-  local lnum = api.nvim_win_get_cursor(0)[1] - 1\n-  local cursor_diagnostics = {}\n-\n-  if diagnostics[lnum] ~= nil then\n-    cursor_diagnostics = diagnostics[lnum]\n-  else\n-    for _, line_diags in pairs(diagnostics) do\n-      for _, diag in ipairs(line_diags) do\n-        if diag.end_lnum and lnum >= diag.lnum and lnum <= diag.end_lnum then\n-          table.insert(cursor_diagnostics, diag)\n-        end\n-      end\n-    end\n-  end\n-\n-  render_virtual_lines(namespace, bufnr, cursor_diagnostics)\n+  diagnostics = diagnostics_at_cursor(diagnostics)\n+  render_virtual_lines(namespace, bufnr, diagnostics)\n end",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1938655721",
            "id": 1938655721,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjYnp",
            "original_commit_id": "3902c77979a1de28ea251e4fdf300fb7f3b799a6",
            "original_line": 1890,
            "original_position": 164,
            "original_start_line": 1887,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2588734299,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938655721/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-03T01:32:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938655721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1938660585"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938660585"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm given that we use this function in 2 places and the name makes the code clearer, I prefer keeping it.",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-02-03T01:43:47Z",
            "diff_hunk": "@@ -1809,22 +1885,8 @@ end\n --- @param namespace integer\n --- @param bufnr integer\n local function render_virtual_lines_at_current_line(diagnostics, namespace, bufnr)\n-  local lnum = api.nvim_win_get_cursor(0)[1] - 1\n-  local cursor_diagnostics = {}\n-\n-  if diagnostics[lnum] ~= nil then\n-    cursor_diagnostics = diagnostics[lnum]\n-  else\n-    for _, line_diags in pairs(diagnostics) do\n-      for _, diag in ipairs(line_diags) do\n-        if diag.end_lnum and lnum >= diag.lnum and lnum <= diag.end_lnum then\n-          table.insert(cursor_diagnostics, diag)\n-        end\n-      end\n-    end\n-  end\n-\n-  render_virtual_lines(namespace, bufnr, cursor_diagnostics)\n+  diagnostics = diagnostics_at_cursor(diagnostics)\n+  render_virtual_lines(namespace, bufnr, diagnostics)\n end",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1938660585",
            "id": 1938660585,
            "in_reply_to_id": 1938655721,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjZzp",
            "original_commit_id": "3902c77979a1de28ea251e4fdf300fb7f3b799a6",
            "original_line": 1890,
            "original_position": 164,
            "original_start_line": 1887,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2588741173,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938660585/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-03T01:43:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938660585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1938660900"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938660900"
                }
            },
            "author_association": "MEMBER",
            "body": "It also aligns with how we have a `render_virtual_text_at_current_line`.\r\n\r\nThe name is a bit long though, I admit. I'm open to renaming it to something less verbose.",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-02-03T01:44:30Z",
            "diff_hunk": "@@ -1809,22 +1885,8 @@ end\n --- @param namespace integer\n --- @param bufnr integer\n local function render_virtual_lines_at_current_line(diagnostics, namespace, bufnr)\n-  local lnum = api.nvim_win_get_cursor(0)[1] - 1\n-  local cursor_diagnostics = {}\n-\n-  if diagnostics[lnum] ~= nil then\n-    cursor_diagnostics = diagnostics[lnum]\n-  else\n-    for _, line_diags in pairs(diagnostics) do\n-      for _, diag in ipairs(line_diags) do\n-        if diag.end_lnum and lnum >= diag.lnum and lnum <= diag.end_lnum then\n-          table.insert(cursor_diagnostics, diag)\n-        end\n-      end\n-    end\n-  end\n-\n-  render_virtual_lines(namespace, bufnr, cursor_diagnostics)\n+  diagnostics = diagnostics_at_cursor(diagnostics)\n+  render_virtual_lines(namespace, bufnr, diagnostics)\n end",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1938660900",
            "id": 1938660900,
            "in_reply_to_id": 1938655721,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjZ4k",
            "original_commit_id": "3902c77979a1de28ea251e4fdf300fb7f3b799a6",
            "original_line": 1890,
            "original_position": 164,
            "original_start_line": 1887,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2588741765,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938660900/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-03T01:44:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938660900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1938677459"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938677459"
                }
            },
            "author_association": "MEMBER",
            "body": "> Hmm given that we use this function in 2 places and the name makes the code clearer, I prefer keeping it.\r\n\r\nI don't actually think it makes the code any clearer. Consider:\r\n\r\n```lua\r\nrender_virtual_lines(namespace, bufnr, diagnostics_at_cursor(diagnostics))\r\n```\r\n\r\nvs\r\n\r\n```lua\r\nrender_virtual_lines_at_current_line(diagnostics, namespace, bufnr)\r\n```\r\n\r\nIf anything, I'd argue the extra function makes it less clear because there are two different functions with similar names that do almost the same thing. Having fewer functions that compose well is better than many functions with specific uses.",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-02-03T02:18:24Z",
            "diff_hunk": "@@ -1809,22 +1885,8 @@ end\n --- @param namespace integer\n --- @param bufnr integer\n local function render_virtual_lines_at_current_line(diagnostics, namespace, bufnr)\n-  local lnum = api.nvim_win_get_cursor(0)[1] - 1\n-  local cursor_diagnostics = {}\n-\n-  if diagnostics[lnum] ~= nil then\n-    cursor_diagnostics = diagnostics[lnum]\n-  else\n-    for _, line_diags in pairs(diagnostics) do\n-      for _, diag in ipairs(line_diags) do\n-        if diag.end_lnum and lnum >= diag.lnum and lnum <= diag.end_lnum then\n-          table.insert(cursor_diagnostics, diag)\n-        end\n-      end\n-    end\n-  end\n-\n-  render_virtual_lines(namespace, bufnr, cursor_diagnostics)\n+  diagnostics = diagnostics_at_cursor(diagnostics)\n+  render_virtual_lines(namespace, bufnr, diagnostics)\n end",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1938677459",
            "id": 1938677459,
            "in_reply_to_id": 1938655721,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjd7T",
            "original_commit_id": "3902c77979a1de28ea251e4fdf300fb7f3b799a6",
            "original_line": 1890,
            "original_position": 164,
            "original_start_line": 1887,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2588765595,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938677459/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-03T02:18:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938677459",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32187#discussion_r1938680110"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938680110"
                }
            },
            "author_association": "MEMBER",
            "body": "Okay. I don't feel strongly about this so I'll remove the `*_at_current_line` functions if it bothers you.",
            "commit_id": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
            "created_at": "2025-02-03T02:24:41Z",
            "diff_hunk": "@@ -1809,22 +1885,8 @@ end\n --- @param namespace integer\n --- @param bufnr integer\n local function render_virtual_lines_at_current_line(diagnostics, namespace, bufnr)\n-  local lnum = api.nvim_win_get_cursor(0)[1] - 1\n-  local cursor_diagnostics = {}\n-\n-  if diagnostics[lnum] ~= nil then\n-    cursor_diagnostics = diagnostics[lnum]\n-  else\n-    for _, line_diags in pairs(diagnostics) do\n-      for _, diag in ipairs(line_diags) do\n-        if diag.end_lnum and lnum >= diag.lnum and lnum <= diag.end_lnum then\n-          table.insert(cursor_diagnostics, diag)\n-        end\n-      end\n-    end\n-  end\n-\n-  render_virtual_lines(namespace, bufnr, cursor_diagnostics)\n+  diagnostics = diagnostics_at_cursor(diagnostics)\n+  render_virtual_lines(namespace, bufnr, diagnostics)\n end",
            "html_url": "https://github.com/neovim/neovim/pull/32187#discussion_r1938680110",
            "id": 1938680110,
            "in_reply_to_id": 1938655721,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjeku",
            "original_commit_id": "3902c77979a1de28ea251e4fdf300fb7f3b799a6",
            "original_line": 1890,
            "original_position": 164,
            "original_start_line": 1887,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2588769616,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938680110/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-03T02:24:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938680110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I'll move this to a draft since it has quite a bit of overlap with #31959 so I'll just wait for that to get merged and refactor common logic.",
            "created_at": "2025-01-25T04:29:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2613773731",
            "id": 2613773731,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6bywWj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2613773731/reactions"
            },
            "updated_at": "2025-01-25T04:29:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2613773731",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have been using the similar implementation in `virtual_lines` and I think there is an issue where due to the deleting and recreating of autocmds it only shows diagnostics for the current line in the last edited buffer\r\n\r\nIf you open a split of two buffers with multiple errors each and switch between them. Only the one you updated last will draw correctly, otherwise it gets 'stuck' in the last drawn state\r\n\r\nMaking a change or entering insert will kick it back to life \r\n\r\n#32241",
            "created_at": "2025-01-27T22:31:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2617034960",
            "id": 2617034960,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6b_MjQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617034960/reactions"
            },
            "updated_at": "2025-01-28T21:38:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617034960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18444302?v=4",
                "events_url": "https://api.github.com/users/tris203/events{/privacy}",
                "followers_url": "https://api.github.com/users/tris203/followers",
                "following_url": "https://api.github.com/users/tris203/following{/other_user}",
                "gists_url": "https://api.github.com/users/tris203/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tris203",
                "id": 18444302,
                "login": "tris203",
                "node_id": "MDQ6VXNlcjE4NDQ0MzAy",
                "organizations_url": "https://api.github.com/users/tris203/orgs",
                "received_events_url": "https://api.github.com/users/tris203/received_events",
                "repos_url": "https://api.github.com/users/tris203/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tris203/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tris203/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tris203",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I have been using the similar implementation in `virtual_lines` and I think there is an issue where due to the deleting and recreating of autocmds it only shows diagnostics for the current line in the last edited buffer\r\n> \r\n> If you open a split of two buffers with multiple errors each and switch between them. Only the one you updated last will draw correctly, otherwise it gets 'stuck' in the last drawn state\r\n> \r\n> Making a change or entering insert will kick it back to life\r\n\r\nCould you please open an issue with repro steps so that we can fix this? :)",
            "created_at": "2025-01-27T23:40:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2617141179",
            "id": 2617141179,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6b_me7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617141179/reactions"
            },
            "updated_at": "2025-01-27T23:40:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2617141179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@gpanders @justinmk I've updated this PR to include the perf improvement from #32288 and the fix from @tris203 (#32275).",
            "created_at": "2025-02-02T22:26:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2629587344",
            "id": 2629587344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6cvFGQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 3,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629587344/reactions"
            },
            "updated_at": "2025-02-02T22:26:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629587344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "If possible, it would be great to also have a setting that disables virtual_text for the current line. My use case is using the new virtual_lines feature with current_line set to true, while keeping virtual_text enabled (filtered to show errors only). Having both virtual_text and virtual_lines enabled on the current line creates a bit of visual clutter and duplication of messages. Apologies if this isn't the right forum for this feature request. Thanks for your work on this great feature!",
            "created_at": "2025-02-04T15:05:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2634252852",
            "id": 2634252852,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6dA4I0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2634252852/reactions"
            },
            "updated_at": "2025-02-04T15:05:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2634252852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29511961?v=4",
                "events_url": "https://api.github.com/users/KarlEricsson/events{/privacy}",
                "followers_url": "https://api.github.com/users/KarlEricsson/followers",
                "following_url": "https://api.github.com/users/KarlEricsson/following{/other_user}",
                "gists_url": "https://api.github.com/users/KarlEricsson/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KarlEricsson",
                "id": 29511961,
                "login": "KarlEricsson",
                "node_id": "MDQ6VXNlcjI5NTExOTYx",
                "organizations_url": "https://api.github.com/users/KarlEricsson/orgs",
                "received_events_url": "https://api.github.com/users/KarlEricsson/received_events",
                "repos_url": "https://api.github.com/users/KarlEricsson/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KarlEricsson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KarlEricsson/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KarlEricsson",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If possible, it would be great to also have a setting that disables virtual_text for the current line. My use case is using the new virtual_lines feature with current_line set to true, while keeping virtual_text enabled (filtered to show errors only). Having both virtual_text and virtual_lines enabled on the current line creates a bit of visual clutter and duplication of messages. Apologies if this isn't the right forum for this feature request. Thanks for your work on this great feature!\r\n\r\nYou can already achieve this with #32302 ",
            "created_at": "2025-02-04T17:33:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2634632941",
            "id": 2634632941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6dCU7t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2634632941/reactions"
            },
            "updated_at": "2025-02-04T17:33:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2634632941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Maybe I'm misunderstanding but isn't the format function called when the diagnostics are updated/drawn? Ie if I have a format function to hide virtual_text at the current line I have to have an autocmd to refresh diagnostics on CursorMoved? Or override the autocmd that updates and/or render_virtual_text/lines function to able to do this? \r\nThe desired outcome is: I'm above a line with an error, virtual_text is at eol on the line below. I move down to the line with the error, and virtual_lines are shown (works right now with current_line = true) but at the same moment I also would like the virtual_text to become hidden. This could of course just be me not understanding how to do this correctly. 😬",
            "created_at": "2025-02-04T18:00:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2634694322",
            "id": 2634694322,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6dCj6y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2634694322/reactions"
            },
            "updated_at": "2025-02-04T18:00:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2634694322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29511961?v=4",
                "events_url": "https://api.github.com/users/KarlEricsson/events{/privacy}",
                "followers_url": "https://api.github.com/users/KarlEricsson/followers",
                "following_url": "https://api.github.com/users/KarlEricsson/following{/other_user}",
                "gists_url": "https://api.github.com/users/KarlEricsson/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KarlEricsson",
                "id": 29511961,
                "login": "KarlEricsson",
                "node_id": "MDQ6VXNlcjI5NTExOTYx",
                "organizations_url": "https://api.github.com/users/KarlEricsson/orgs",
                "received_events_url": "https://api.github.com/users/KarlEricsson/received_events",
                "repos_url": "https://api.github.com/users/KarlEricsson/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KarlEricsson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KarlEricsson/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KarlEricsson",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@KarlEricsson so if I understand what you want correctly (sorry if I'm missing something) is only showing `virtual_lines` for the current line and `virtual_text` everywhere else.\r\n\r\nThen you can have something like:\r\n```lua\r\nvim.diagnostic.config {\r\n  virtual_text = {\r\n    format = function(diag)\r\n      local lnum = api.nvim_win_get_cursor(0)[1] - 1\r\n      -- Don't use the virtual text handler for diagnostics at the current line.\r\n      if diag.lnum == lnum then return nil end\r\n      return diag.message\r\n    end\r\n  },\r\n  virtual_lines = { current_line = true }\r\n}\r\n```\r\n\r\nNote that I haven't tested this, but I expect it to work.",
            "created_at": "2025-02-04T20:11:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2634960332",
            "id": 2634960332,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6dDk3M",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2634960332/reactions"
            },
            "updated_at": "2025-02-04T20:11:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2634960332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@MariaSolOs I was trying to achieve the discussed behavior today and came up with pretty much the same code snippet, however the issue with it is that it hides the virtual_text diagnostic even when cursor moves away from the line. It gets update only when document changes or other event that refreshes the diagnostic list.\n\nHowever the desired behavior is rather opposite to virtual_lines diagnostic configured with current_line=true. So in this case virtual_lines appear only when you hover the line and disappear when you move away from it, and @KarlEricsson (as well as I) would like to be able to be able to hide virtual_text on the line when the cursor is placed on the line with it.\n\nSorry id it's too much details, it's late in my timezone and I wanted to clarify the subject as much as possible 😅\nAnyway, thanks for your contribution!",
            "created_at": "2025-02-04T22:21:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2635201867",
            "id": 2635201867,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6dEf1L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2635201867/reactions"
            },
            "updated_at": "2025-02-04T22:21:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2635201867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27916174?v=4",
                "events_url": "https://api.github.com/users/sagg0t/events{/privacy}",
                "followers_url": "https://api.github.com/users/sagg0t/followers",
                "following_url": "https://api.github.com/users/sagg0t/following{/other_user}",
                "gists_url": "https://api.github.com/users/sagg0t/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sagg0t",
                "id": 27916174,
                "login": "sagg0t",
                "node_id": "MDQ6VXNlcjI3OTE2MTc0",
                "organizations_url": "https://api.github.com/users/sagg0t/orgs",
                "received_events_url": "https://api.github.com/users/sagg0t/received_events",
                "repos_url": "https://api.github.com/users/sagg0t/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sagg0t/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sagg0t/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sagg0t",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @KarlEricsson so if I understand what you want correctly (sorry if I'm missing something) is only showing `virtual_lines` for the current line and `virtual_text` everywhere else.\r\n> \r\n> Then you can have something like:\r\n> \r\n> ```lua\r\n> vim.diagnostic.config {\r\n>   virtual_text = {\r\n>     format = function(diag)\r\n>       local lnum = api.nvim_win_get_cursor(0)[1] - 1\r\n>       -- Don't use the virtual text handler for diagnostics at the current line.\r\n>       if diag.lnum == lnum then return nil end\r\n>       return diag.message\r\n>     end\r\n>   },\r\n>   virtual_lines = { current_line = true }\r\n> }\r\n> ```\r\n> \r\n> Note that I haven't tested this, but I expect it to work.\r\n\r\nI tried this solution when I started experimenting with this feature but as @sagg0t mentions this only hides the virtual_text where the cursor happens to be positioned at the moment the diagnostics are updated. If I later move in the document without refreshing diagnostics, it will not hide the virtual_text if I move the cursor to another line with diagnostics. What I'm asking is for, as mentioned above, basically the exact inverse of what current_line = true does. Ie hide the diagnostic at current line and show all other (and update on cursor movement, not on diagnostics refresh).",
            "created_at": "2025-02-04T22:46:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2635237055",
            "id": 2635237055,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6dEoa_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2635237055/reactions"
            },
            "updated_at": "2025-02-04T22:50:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2635237055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29511961?v=4",
                "events_url": "https://api.github.com/users/KarlEricsson/events{/privacy}",
                "followers_url": "https://api.github.com/users/KarlEricsson/followers",
                "following_url": "https://api.github.com/users/KarlEricsson/following{/other_user}",
                "gists_url": "https://api.github.com/users/KarlEricsson/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KarlEricsson",
                "id": 29511961,
                "login": "KarlEricsson",
                "node_id": "MDQ6VXNlcjI5NTExOTYx",
                "organizations_url": "https://api.github.com/users/KarlEricsson/orgs",
                "received_events_url": "https://api.github.com/users/KarlEricsson/received_events",
                "repos_url": "https://api.github.com/users/KarlEricsson/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KarlEricsson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KarlEricsson/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KarlEricsson",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@sagg0t @KarlEricsson ohhhh I think I understand the problem now. Wow okay I think that in order to achieve this behaviour we would need to call `vim.diagnostic.show` for each `CursorMoved` event, which would be quite expensive.\r\n\r\n@gpanders I'm curious to hear if you have an idea of how to have this functionality (if possible).",
            "created_at": "2025-02-04T23:40:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/32187#issuecomment-2635306596",
            "id": 2635306596,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
            "node_id": "IC_kwDOAPphoM6dE5Zk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2635306596/reactions"
            },
            "updated_at": "2025-02-04T23:40:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2635306596",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32187/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32187/commits",
    "created_at": "2025-01-23T23:39:12Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32187.diff",
    "draft": false,
    "head": {
        "label": "MariaSolOs:current-line",
        "ref": "current-line",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/MariaSolOs/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/MariaSolOs/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/MariaSolOs/neovim/branches{/branch}",
            "clone_url": "https://github.com/MariaSolOs/neovim.git",
            "collaborators_url": "https://api.github.com/repos/MariaSolOs/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/MariaSolOs/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/MariaSolOs/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/MariaSolOs/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/MariaSolOs/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/MariaSolOs/neovim/contributors",
            "created_at": "2023-08-05T17:10:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/MariaSolOs/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/MariaSolOs/neovim/downloads",
            "events_url": "https://api.github.com/repos/MariaSolOs/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/MariaSolOs/neovim/forks",
            "full_name": "MariaSolOs/neovim",
            "git_commits_url": "https://api.github.com/repos/MariaSolOs/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/MariaSolOs/neovim/git/tags{/sha}",
            "git_url": "git://github.com/MariaSolOs/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/MariaSolOs/neovim/hooks",
            "html_url": "https://github.com/MariaSolOs/neovim",
            "id": 675070403,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/MariaSolOs/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/MariaSolOs/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/MariaSolOs/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/MariaSolOs/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/MariaSolOs/neovim/merges",
            "milestones_url": "https://api.github.com/repos/MariaSolOs/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKDzBww",
            "notifications_url": "https://api.github.com/repos/MariaSolOs/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/MariaSolOs/neovim/pulls{/number}",
            "pushed_at": "2025-02-09T22:48:21Z",
            "releases_url": "https://api.github.com/repos/MariaSolOs/neovim/releases{/id}",
            "size": 300210,
            "ssh_url": "git@github.com:MariaSolOs/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/MariaSolOs/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/MariaSolOs/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/MariaSolOs/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/MariaSolOs/neovim/subscription",
            "svn_url": "https://github.com/MariaSolOs/neovim",
            "tags_url": "https://api.github.com/repos/MariaSolOs/neovim/tags",
            "teams_url": "https://api.github.com/repos/MariaSolOs/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/MariaSolOs/neovim/git/trees{/sha}",
            "updated_at": "2025-02-08T22:50:56Z",
            "url": "https://api.github.com/repos/MariaSolOs/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32187",
    "id": 2295624483,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32187",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": "38a52caec09eb15c9ff8b4db6f0cdb7e2a28eb98",
    "merged_at": "2025-02-05T14:27:10Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6I1HMj",
    "number": 32187,
    "patch_url": "https://github.com/neovim/neovim/pull/32187.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32187/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/4cf6e62cf8d69a18a65ff789e5abe589f36316c1",
    "title": "feat(diagnostic): add `current_line` option for `virtual_text` handler",
    "updated_at": "2025-02-05T14:27:52Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32187",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
        "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
        "followers_url": "https://api.github.com/users/MariaSolOs/followers",
        "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
        "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MariaSolOs",
        "id": 62502207,
        "login": "MariaSolOs",
        "node_id": "MDQ6VXNlcjYyNTAyMjA3",
        "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
        "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
        "repos_url": "https://api.github.com/users/MariaSolOs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MariaSolOs",
        "user_view_type": "public"
    }
}