{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35464/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35464/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35464"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35464"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35464/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35464"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6294,
            "forks_count": 6294,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1994,
            "open_issues_count": 1994,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-02T02:10:04Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 340229,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92438,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-02T02:37:13Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92438,
            "watchers_count": 92438,
            "web_commit_signoff_required": false
        },
        "sha": "58060c2340a52377a0e1d2b782ce1deef13b2b9b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "WIP, posting here to get early feedback.\r\n\r\n## Problem\r\n\r\n- Need a more flexible \"Log once\" interface, which can optionally.\r\n- `vim.ringbuf` does not have key-value access.\r\n- `vim.ringbuf` does not notify a callback/hook when it reaches its max.\r\n    - Needed for optional handling (such as logging) when max is reached, for some applications.\r\n\r\n## Solution\r\n\r\n- Introduce `ordereddict`.\r\n    - Alternative: enhance `vim.ringbuf`. I maybe prefer this but it might get a bit muddled. WDYT @mfussenegger ",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35464#discussion_r2300308134"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300308134"
                }
            },
            "author_association": "MEMBER",
            "body": "Could this be `__newindex` instead?\n\n```lua\nd:set('a', 1)\n```\n\nbecomes:\n\n```lua\nd.a = 1\n```\n\n",
            "commit_id": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
            "created_at": "2025-08-26T08:58:49Z",
            "diff_hunk": "@@ -0,0 +1,71 @@\n+-- other names: indexmap (rust), or just \"dict\" ...\n+local M = {}\n+M.__index = M\n+\n+-- Creates a new ordered dict.\n+function M.new()\n+  return setmetatable({\n+    _keys = {}, -- Ordered keys.\n+    _vals = {}, -- Unordered key-value pairs.\n+  }, M)\n+end\n+\n+function M:set(key, value)",
            "html_url": "https://github.com/neovim/neovim/pull/35464#discussion_r2300308134",
            "id": 2300308134,
            "line": 13,
            "node_id": "PRRC_kwDOAPphoM6JG-qm",
            "original_commit_id": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/_ordereddict.lua",
            "position": 13,
            "pull_request_review_id": 3154663681,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300308134/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T08:58:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300308134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35464#discussion_r2300309686"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300309686"
                }
            },
            "author_association": "MEMBER",
            "body": "Likewise this could be `__index`.\n\nWould mean `pop()` would not allowed to be a method and would need to be:\n\n```lua\nvim.ordereddict.pop(dict)\n```",
            "commit_id": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
            "created_at": "2025-08-26T08:59:16Z",
            "diff_hunk": "@@ -0,0 +1,71 @@\n+-- other names: indexmap (rust), or just \"dict\" ...\n+local M = {}\n+M.__index = M\n+\n+-- Creates a new ordered dict.\n+function M.new()\n+  return setmetatable({\n+    _keys = {}, -- Ordered keys.\n+    _vals = {}, -- Unordered key-value pairs.\n+  }, M)\n+end\n+\n+function M:set(key, value)\n+  if self._vals[key] == nil then\n+    table.insert(self._keys, key)\n+  end\n+  self._vals[key] = value\n+end\n+\n+function M:get(key)",
            "html_url": "https://github.com/neovim/neovim/pull/35464#discussion_r2300309686",
            "id": 2300309686,
            "line": 20,
            "node_id": "PRRC_kwDOAPphoM6JG_C2",
            "original_commit_id": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
            "original_line": 20,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/_ordereddict.lua",
            "position": 20,
            "pull_request_review_id": 3154666429,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300309686/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T09:03:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300309686",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35464#discussion_r2300315084"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300315084"
                }
            },
            "author_association": "MEMBER",
            "body": "I try to avoid adding `new` onto the metatable as it allows stuff like:\n\n```lua\nlocal A = M.new()\nlocal B = A.new()\n```",
            "commit_id": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
            "created_at": "2025-08-26T09:00:51Z",
            "diff_hunk": "@@ -0,0 +1,71 @@\n+-- other names: indexmap (rust), or just \"dict\" ...\n+local M = {}\n+M.__index = M\n+\n+-- Creates a new ordered dict.\n+function M.new()",
            "html_url": "https://github.com/neovim/neovim/pull/35464#discussion_r2300315084",
            "id": 2300315084,
            "line": 6,
            "node_id": "PRRC_kwDOAPphoM6JHAXM",
            "original_commit_id": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
            "original_line": 6,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/_ordereddict.lua",
            "position": 6,
            "pull_request_review_id": 3154676091,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300315084/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T09:00:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300315084",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35464#discussion_r2300322685"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35464"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300322685"
                }
            },
            "author_association": "MEMBER",
            "body": "If this is a dict, then these keys string need to be strings, otherwise this should be named `orderedtable`.",
            "commit_id": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
            "created_at": "2025-08-26T09:03:40Z",
            "diff_hunk": "@@ -0,0 +1,71 @@\n+-- other names: indexmap (rust), or just \"dict\" ...\n+local M = {}\n+M.__index = M\n+\n+-- Creates a new ordered dict.\n+function M.new()\n+  return setmetatable({\n+    _keys = {}, -- Ordered keys.",
            "html_url": "https://github.com/neovim/neovim/pull/35464#discussion_r2300322685",
            "id": 2300322685,
            "line": 8,
            "node_id": "PRRC_kwDOAPphoM6JHCN9",
            "original_commit_id": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
            "original_line": 8,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/lua/vim/_ordereddict.lua",
            "position": 8,
            "pull_request_review_id": 3154685888,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35464",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300322685/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T09:03:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300322685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> Need a more flexible \"Log once\" interface, which can optionally.\r\n> vim.ringbuf is not \"ordered\"\r\n\r\n> Alternative: enhance vim.ringbuf. I maybe prefer this but it might get a bit muddled\r\n\r\nNot sure I follow - with the ring buffer you get the items in the order they were written, except that items can be dropped on buffer overflow.\r\n\r\nLooking at the ordereddict PR, the issue seems more that there is a need for a key and a value? If so - isn't this more of a cache use case?  \r\n\r\n\r\n\r\n",
            "created_at": "2025-08-25T16:02:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/35464#issuecomment-3220846441",
            "id": 3220846441,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35464",
            "node_id": "IC_kwDOAPphoM6_-jdp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3220846441/reactions"
            },
            "updated_at": "2025-08-25T16:02:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3220846441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the issue seems more that there is a need for a key and a value? \r\n\r\noops yes. corrected.\r\n\r\n> If so - isn't this more of a cache use case?\r\n\r\nyup. i'm looking for generalizations for cache use-cases, since they are pervasive and yet often under-implemented (no logging/visibility/monitoring).",
            "created_at": "2025-08-25T18:11:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/35464#issuecomment-3221267101",
            "id": 3221267101,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35464",
            "node_id": "IC_kwDOAPphoM7AAKKd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221267101/reactions"
            },
            "updated_at": "2025-08-25T18:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221267101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I personally haven't come across a huge need for this, but the implementation looks straight forward enough.\r\n\r\nSame for me\r\n\r\n\r\n> yup. i'm looking for generalizations for cache use-cases, since they are pervasive and yet often under-implemented (no logging/visibility/monitoring).\r\n\r\nI think from cache usage perspective the table-like interface with `__newindex`/`__index` should work well enough.\r\n\r\nFrom cache libraries I'm familiar with, defining the behavior of the cache is often part of the construction/building process.\r\nE.g. with [Caffeine](https://github.com/ben-manes/caffeine) you'd create the cache like:\r\n\r\n```java\r\nCache<Key, Graph> graphs = Caffeine.newBuilder()\r\n    .maximumSize(10_000)\r\n    .expireAfterWrite(Duration.ofMinutes(5))\r\n    .refreshAfterWrite(Duration.ofMinutes(1))\r\n    .build(key -> createExpensiveGraph(key));\r\n```\r\n\r\nAnd the user interface looks like this:\r\n\r\n```java\r\n@NullMarked\r\npublic interface Cache<K, V> {\r\n   @Nullable\r\n   V getIfPresent(K key);\r\n\r\n   V get(K key, Function<? super K, ? extends V> mappingFunction);\r\n\r\n   Map<K, V> getAllPresent(Iterable<? extends K> keys);\r\n\r\n   Map<K, V> getAll(Iterable<? extends K> keys, Function<? super Set<? extends K>, ? extends Map<? extends K, ? extends V>> mappingFunction);\r\n\r\n   void put(K key, @NonNull V value);\r\n\r\n   void putAll(Map<? extends K, ? extends V> map);\r\n\r\n   void invalidate(K key);\r\n\r\n   void invalidateAll(Iterable<? extends K> keys);\r\n\r\n   void invalidateAll();\r\n\r\n   long estimatedSize();\r\n\r\n   CacheStats stats();\r\n\r\n   ConcurrentMap<K, V> asMap();\r\n\r\n   void cleanUp();\r\n\r\n   Policy<K, V> policy();\r\n}\r\n```\r\n\r\nBut `ordereddict` seems to me like a separate thing - can be used as cache, but not the same as a special purpose cache construct with different eviction policies built-in. Not sure what's actually needed for the use-cases\r\nAnd I think neither is something that fits into `vim.ringbuf`.\r\n",
            "created_at": "2025-08-28T06:17:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/35464#issuecomment-3232055341",
            "id": 3232055341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35464",
            "node_id": "IC_kwDOAPphoM7ApUAt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3232055341/reactions"
            },
            "updated_at": "2025-08-28T06:18:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3232055341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35464/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35464/commits",
    "created_at": "2025-08-25T04:25:29Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35464.diff",
    "draft": true,
    "head": {
        "label": "justinmk:lsplogonce",
        "ref": "lsplogonce",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/justinmk/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/justinmk/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/justinmk/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/justinmk/neovim/branches{/branch}",
            "clone_url": "https://github.com/justinmk/neovim.git",
            "collaborators_url": "https://api.github.com/repos/justinmk/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/justinmk/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/justinmk/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/justinmk/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/justinmk/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/justinmk/neovim/contributors",
            "created_at": "2014-02-28T23:17:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/justinmk/neovim/deployments",
            "description": "somewhere in todo.txt",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/justinmk/neovim/downloads",
            "events_url": "https://api.github.com/repos/justinmk/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/justinmk/neovim/forks",
            "full_name": "justinmk/neovim",
            "git_commits_url": "https://api.github.com/repos/justinmk/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/justinmk/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/justinmk/neovim/git/tags{/sha}",
            "git_url": "git://github.com/justinmk/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "http://neovim.io",
            "hooks_url": "https://api.github.com/repos/justinmk/neovim/hooks",
            "html_url": "https://github.com/justinmk/neovim",
            "id": 17302877,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/justinmk/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/justinmk/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/justinmk/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/justinmk/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/justinmk/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/justinmk/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/justinmk/neovim/merges",
            "milestones_url": "https://api.github.com/repos/justinmk/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzMwMjg3Nw==",
            "notifications_url": "https://api.github.com/repos/justinmk/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/justinmk/neovim/pulls{/number}",
            "pushed_at": "2025-09-02T00:05:57Z",
            "releases_url": "https://api.github.com/repos/justinmk/neovim/releases{/id}",
            "size": 330404,
            "ssh_url": "git@github.com:justinmk/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/justinmk/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/justinmk/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/justinmk/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/justinmk/neovim/subscription",
            "svn_url": "https://github.com/justinmk/neovim",
            "tags_url": "https://api.github.com/repos/justinmk/neovim/tags",
            "teams_url": "https://api.github.com/repos/justinmk/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/justinmk/neovim/git/trees{/sha}",
            "updated_at": "2025-01-13T16:10:06Z",
            "url": "https://api.github.com/repos/justinmk/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35464",
    "id": 2770517929,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35464",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "c2f8070d89085cea0f9969c9fefa8dd0359626de",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6lIr-p",
    "number": 35464,
    "patch_url": "https://github.com/neovim/neovim/pull/35464.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35464/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2a26d42cdaa43cf517c2c6c46efd0d2f5073bb56",
    "title": "feat(lua): ordereddict",
    "updated_at": "2025-08-28T06:18:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35464",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    }
}