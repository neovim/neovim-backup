{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33371/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33371/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33371"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33371"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33371/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33371"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/1568c08603af0d7482a3fa318806c167948ce447"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6102,
            "forks_count": 6102,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1963,
            "open_issues_count": 1963,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-05-27T01:16:46Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 324248,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89828,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-05-27T01:20:04Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89828,
            "watchers_count": 89828,
            "web_commit_signoff_required": false
        },
        "sha": "ca16b54c866bca6d10fc4f60874e6469bd0751cd",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This pr aims to add multiline support to the prompt buffer. For now this is just a POC.\r\n\r\nWorks toward #32420 and #32661\r\n\r\n### Proposal:\r\n- Track how much text has been submitted already to the prompt buffer callback.\r\n- When the user submits, send the text after the previously submitted point.\r\n- Make the content before last submit Readonly so it's locked in place.\r\n\r\n### Questions:\r\n- How to handle buffer changes through API ?\r\n- The callback may insert or remove text in the buffer before we lock in the submit location?\r\n- Should we expose this location to user somehow?\r\n\r\n### Example:\r\n\r\nhttps://github.com/user-attachments/assets/5b45027d-328c-46f3-a70d-6342d3fa6d84\r\n\r\n\r\n### Notes\r\n- [x] Figure out how submition key should be mapped (enter, shift-enter, custom?)\r\n       Choosing shift enter for new line and enter as submit for now.\r\n- [ ] Fix undo/redo (why doesn't it work?) (undo redo with partially modifiable buffer is complicated. I guess that's why it's disabled. What to do. a ton of edge cases. Particularly since under works in branches. Also buftype can be changed at any point)\r\n- [ ] dd on prompt line clears the prompt too (fix it)\r\n- [x] o/O in normal mode doesn't work. it shoudl create a newline\r\n       - check nv_open in normal.c, open_line in change.c . basic editibility check won't be enough. Probably the undo redo and dd ar the same. One key issue is operators can work on multiple lines at a time. How to handle that when only part of buffer is editable. For example with O on prompt line should we all text below it one line down and put a line there at prompt?\r\n- [ ] bug after O prompt text becomes editable. figure out why\r\n- [x] a/i at prompt location creates a new prompt in a newline when user input to prompt is none\r\n- [ ] enter on normal mode submits the text should we retain this behavior?\r\n- [x] When buftype is set to prompt set the last submit location to end of buffer\r\n- [ ] Things like d5k doesn't work (it deletes non editable region) (broken on master too)\r\n- [ ] Backspace doesn't work sometimes in prompt buffer where it should\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33371#discussion_r2072629570"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33371"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072629570"
                }
            },
            "author_association": "MEMBER",
            "body": "can use memcpy since we already calculated the lengths. not sure why `concat_str` doesn't do that.",
            "commit_id": "1568c08603af0d7482a3fa318806c167948ce447",
            "created_at": "2025-05-04T14:15:43Z",
            "diff_hunk": "@@ -574,6 +574,20 @@ char *concat_str(const char *restrict str1, const char *restrict str2)\n   return dest;\n }\n \n+/// Concatenate two strings with separator in middle and return the result in allocated memory.\n+char *join_str(const char *restrict str1, const char *restrict str2, const char *restrict sep)\n+  FUNC_ATTR_NONNULL_RET FUNC_ATTR_MALLOC FUNC_ATTR_NONNULL_ALL\n+{\n+  size_t l = strlen(str1);\n+  size_t s = strlen(sep);\n+  char *dest = xmalloc(l + s + strlen(str2) + 1);\n+  STRCPY(dest, str1);",
            "html_url": "https://github.com/neovim/neovim/pull/33371#discussion_r2072629570",
            "id": 2072629570,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57idFC",
            "original_commit_id": "4010b2308b960d84ded2b8a0f27adfd8d564a2f8",
            "original_line": 584,
            "original_position": 11,
            "original_start_line": null,
            "path": "src/nvim/strings.c",
            "position": null,
            "pull_request_review_id": 2813479418,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33371",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072629570/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-04T14:15:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072629570",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33371#discussion_r2072629998"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33371"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072629998"
                }
            },
            "author_association": "MEMBER",
            "body": "since `join_str` isn't joining a list (`ga_concat_strings_sep` does that already), it's probably not that useful. the normal way to do this would be like:\r\n\r\n    a2 = concat_str(a, \",\")\r\n    a3 = concat_str(a2, b)",
            "commit_id": "1568c08603af0d7482a3fa318806c167948ce447",
            "created_at": "2025-05-04T14:18:31Z",
            "diff_hunk": "@@ -574,6 +574,20 @@ char *concat_str(const char *restrict str1, const char *restrict str2)\n   return dest;\n }\n \n+/// Concatenate two strings with separator in middle and return the result in allocated memory.\n+char *join_str(const char *restrict str1, const char *restrict str2, const char *restrict sep)\n+  FUNC_ATTR_NONNULL_RET FUNC_ATTR_MALLOC FUNC_ATTR_NONNULL_ALL\n+{\n+  size_t l = strlen(str1);\n+  size_t s = strlen(sep);\n+  char *dest = xmalloc(l + s + strlen(str2) + 1);\n+  STRCPY(dest, str1);\n+  STRCPY(dest + l, sep);",
            "html_url": "https://github.com/neovim/neovim/pull/33371#discussion_r2072629998",
            "id": 2072629998,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57idLu",
            "original_commit_id": "4010b2308b960d84ded2b8a0f27adfd8d564a2f8",
            "original_line": 585,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/strings.c",
            "position": null,
            "pull_request_review_id": 2813480000,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33371",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072629998/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-04T14:18:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072629998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33371#discussion_r2072643953"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33371"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072643953"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> (ga_concat_strings_sep does that already),\r\n\r\nGreat. I was so sure there has to be equivalent of this already in the codebase. But couldn't find it. I'll move it to reuse ga_concat_strings_sep. Or the above double call as you've suggested. I was trying to reduce the number of copies we make I think.",
            "commit_id": "1568c08603af0d7482a3fa318806c167948ce447",
            "created_at": "2025-05-04T15:22:38Z",
            "diff_hunk": "@@ -574,6 +574,20 @@ char *concat_str(const char *restrict str1, const char *restrict str2)\n   return dest;\n }\n \n+/// Concatenate two strings with separator in middle and return the result in allocated memory.\n+char *join_str(const char *restrict str1, const char *restrict str2, const char *restrict sep)\n+  FUNC_ATTR_NONNULL_RET FUNC_ATTR_MALLOC FUNC_ATTR_NONNULL_ALL\n+{\n+  size_t l = strlen(str1);\n+  size_t s = strlen(sep);\n+  char *dest = xmalloc(l + s + strlen(str2) + 1);\n+  STRCPY(dest, str1);\n+  STRCPY(dest + l, sep);",
            "html_url": "https://github.com/neovim/neovim/pull/33371#discussion_r2072643953",
            "id": 2072643953,
            "in_reply_to_id": 2072629998,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM57iglx",
            "original_commit_id": "4010b2308b960d84ded2b8a0f27adfd8d564a2f8",
            "original_line": 585,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/strings.c",
            "position": null,
            "pull_request_review_id": 2813495435,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33371",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072643953/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-04T15:22:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2072643953",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33371#discussion_r2096865338"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33371"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2096865338"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk this basically breaks current prompt buffer behavior. Since currently pressing <enter> directly submites the prompt. I don't think we should break this behavior. I can think of couple of alternatives\r\n\r\n1. Make <enter> submit the user input and shift+<enter> enters a new line in prompt buffer. With it we have a question. Multiline paste needs to work with this too, obviously. But it won't directly work as it does like this. Since the paste won't have shift+enter. Is pasting tracked somewhere? Is there a way to differentiate paste from userinput? particularly when done with <C-r> in input mode?\r\n2. Add a way to configure the submit button. set_prompt_submit_key(\"<cr>\") for example. The default being <cr> when <cr> is used is submit key prompt buffer retains all current behavior with all it's flaws. If the submit key is set to some other key, then the multi line functionalities work.\r\n3. Define e separate buftype for a multiline prompt buffer. separating it from the current prompt buffer behavior we have.\r\n\r\n2 and 3 basically make multi-line support opt-in. I guess some combination of these can also be done. What do you think?",
            "commit_id": "1568c08603af0d7482a3fa318806c167948ce447",
            "created_at": "2025-05-20T04:08:04Z",
            "diff_hunk": "@@ -1067,7 +1067,7 @@ static int insert_handle_key(InsertState *s)\n       cmdwin_result = CAR;\n       return 0;\n     }\n-    if (bt_prompt(curbuf)) {\n+    if (mod_mask & MOD_MASK_SHIFT && bt_prompt(curbuf)) {",
            "html_url": "https://github.com/neovim/neovim/pull/33371#discussion_r2096865338",
            "id": 2096865338,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58-6A6",
            "original_commit_id": "4010b2308b960d84ded2b8a0f27adfd8d564a2f8",
            "original_line": 1070,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/edit.c",
            "position": null,
            "pull_request_review_id": 2852526574,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33371",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2096865338/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-20T04:08:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2096865338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> Track how much text has been submitted already to the prompt buffer callback.\r\n\r\nhere be dragons. does it handle deleted text? `dd` deletes text in prompt buffers.\r\n\r\nis there a way we can avoid maintaining this extra state? tends to be fragile.",
            "created_at": "2025-05-04T14:19:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/33371#issuecomment-2849246950",
            "id": 2849246950,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33371",
            "node_id": "IC_kwDOAPphoM6p1A7m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849246950/reactions"
            },
            "updated_at": "2025-05-04T14:19:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849246950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> here be dragons. does it handle deleted text? dd deletes text in prompt buffers.\r\n\r\nIt does handle text deletion in current prompt. And previous text before that is basically readonly. I think I did show c/d operations in the demo.\r\n\r\nWhat I'm not sure if it handles right is probably editing actions through API. I haven't done serious testing on that but I suspect there might be bunch of edge-cases there.\r\n\r\n> is there a way we can avoid maintaining this extra state? tends to be fragile.\r\n\r\nTrue. I've been thinking about it. Before this the prompt was always lastline of buffer. When we allow multilines that's no longer true. It seems to me we have to track that state of it to work. Open to ideas though.\r\n\r\nAlso it's currently not worth reviewing. I had marely put together a quick prototype. It needs more work before it can be considered.",
            "created_at": "2025-05-04T15:32:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/33371#issuecomment-2849279368",
            "id": 2849279368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33371",
            "node_id": "IC_kwDOAPphoM6p1I2I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849279368/reactions"
            },
            "updated_at": "2025-05-04T15:32:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849279368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It seems to me we have to track that state of it to work.\r\n\r\nThe `'[` / `']` marks are doing that to some extent. Ideally we can just re-use those, and any cases that are missed, can be delegated to that instead of managing it specifically for prompt buffers.",
            "created_at": "2025-05-04T15:41:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/33371#issuecomment-2849283665",
            "id": 2849283665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33371",
            "node_id": "IC_kwDOAPphoM6p1J5R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849283665/reactions"
            },
            "updated_at": "2025-05-04T17:49:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849283665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > It seems to me we have to track that state of it to work.\r\n> \r\n> The `'[` / `']` are doing that to some extent. Ideally we can just re-use those, and any cases that are missed, can be delegated to that instead of managing it specifically for prompt buffers.\r\n\r\nI'm currently not aware of what they do. Will  look into that. If there's already something keeping track of things like that, it's definitely better to use that instead of adding a new one.",
            "created_at": "2025-05-04T16:20:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/33371#issuecomment-2849298622",
            "id": 2849298622,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33371",
            "node_id": "IC_kwDOAPphoM6p1Ni-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849298622/reactions"
            },
            "updated_at": "2025-05-04T16:20:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2849298622",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk I'm seeing that lots of the editing stuff doesn't support the prompt buffer. For example, undo/redo is disabled. Things like range edits (like `d5k` in normal mode) can modify read-only portions of the buffer. The main issue is the read-only and writeable segments in the same buffer. Good part of neovim treats it as non-existent. Or broadly disables the feature to avoid facing it. Can you check the Notes section in the pr? And provide your opinion on those? I feel like achieving 100% regular buffer like editing experience will be complicated. But we can probably get to 90% of that without way there. I'm not sure how to deal with undo/redo yet, though.\r\n\r\nAlso, I looked at '[ , '] marks. They basically kind of do the same. They work by adding Pos_T variables (b_op_start,, b_op_end) to the file_buffer struct, like I'm adding the line number here. Then the mark system uses those values from the buffer to expose those positions as marks. Even if we go that route, we'll be adding an additional state. With marks, we can expose it to the user, but that takes away at least a key for the mark spot. I'm not sure if any special ones are still unused. Also, we can't directly overload '[/ '] marks. They kind of represent completely different thing from what we are trying to achieve here. \r\n\r\n",
            "created_at": "2025-05-20T11:06:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/33371#issuecomment-2893934521",
            "id": 2893934521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33371",
            "node_id": "IC_kwDOAPphoM6sfe-5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2893934521/reactions"
            },
            "updated_at": "2025-05-20T12:14:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2893934521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33371/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33371/commits",
    "created_at": "2025-04-07T13:51:57Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33371.diff",
    "draft": true,
    "head": {
        "label": "shadmansaleh:feat/multiline_promptbuffer",
        "ref": "feat/multiline_promptbuffer",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/shadmansaleh/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/shadmansaleh/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/shadmansaleh/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/shadmansaleh/neovim/branches{/branch}",
            "clone_url": "https://github.com/shadmansaleh/neovim.git",
            "collaborators_url": "https://api.github.com/repos/shadmansaleh/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/shadmansaleh/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/shadmansaleh/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/shadmansaleh/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/shadmansaleh/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/shadmansaleh/neovim/contributors",
            "created_at": "2021-03-16T15:07:33Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/shadmansaleh/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/shadmansaleh/neovim/downloads",
            "events_url": "https://api.github.com/repos/shadmansaleh/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/shadmansaleh/neovim/forks",
            "full_name": "shadmansaleh/neovim",
            "git_commits_url": "https://api.github.com/repos/shadmansaleh/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/shadmansaleh/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/shadmansaleh/neovim/git/tags{/sha}",
            "git_url": "git://github.com/shadmansaleh/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/shadmansaleh/neovim/hooks",
            "html_url": "https://github.com/shadmansaleh/neovim",
            "id": 348391941,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/shadmansaleh/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/shadmansaleh/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/shadmansaleh/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/shadmansaleh/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/shadmansaleh/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/shadmansaleh/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/shadmansaleh/neovim/merges",
            "milestones_url": "https://api.github.com/repos/shadmansaleh/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNDgzOTE5NDE=",
            "notifications_url": "https://api.github.com/repos/shadmansaleh/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/shadmansaleh/neovim/pulls{/number}",
            "pushed_at": "2025-05-26T13:57:12Z",
            "releases_url": "https://api.github.com/repos/shadmansaleh/neovim/releases{/id}",
            "size": 313704,
            "ssh_url": "git@github.com:shadmansaleh/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/shadmansaleh/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/shadmansaleh/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/shadmansaleh/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/shadmansaleh/neovim/subscription",
            "svn_url": "https://github.com/shadmansaleh/neovim",
            "tags_url": "https://api.github.com/repos/shadmansaleh/neovim/tags",
            "teams_url": "https://api.github.com/repos/shadmansaleh/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/shadmansaleh/neovim/git/trees{/sha}",
            "updated_at": "2025-05-03T12:15:47Z",
            "url": "https://api.github.com/repos/shadmansaleh/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "1568c08603af0d7482a3fa318806c167948ce447",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
            "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
            "followers_url": "https://api.github.com/users/shadmansaleh/followers",
            "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
            "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/shadmansaleh",
            "id": 13149513,
            "login": "shadmansaleh",
            "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
            "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
            "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
            "repos_url": "https://api.github.com/users/shadmansaleh/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/shadmansaleh",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33371",
    "id": 2443399890,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33371",
    "labels": [
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6Ro1LS",
    "number": 33371,
    "patch_url": "https://github.com/neovim/neovim/pull/33371.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33371/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/1568c08603af0d7482a3fa318806c167948ce447",
    "title": "WIP: Add support for multiline input in prompt buffer (POC) [skip-ci]",
    "updated_at": "2025-05-26T13:58:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33371",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
        "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
        "followers_url": "https://api.github.com/users/shadmansaleh/followers",
        "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
        "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/shadmansaleh",
        "id": 13149513,
        "login": "shadmansaleh",
        "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
        "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
        "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
        "repos_url": "https://api.github.com/users/shadmansaleh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/shadmansaleh",
        "user_view_type": "public"
    }
}