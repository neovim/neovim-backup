{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34853/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34853/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34853"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34853"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34853/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34853"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/e79daadb65a0d1e06822ab31217ac707e86e96ad"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6179,
            "forks_count": 6179,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1956,
            "open_issues_count": 1956,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-07-14T22:14:00Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 332755,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 91117,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-15T02:58:55Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 91117,
            "watchers_count": 91117,
            "web_commit_signoff_required": false
        },
        "sha": "4778a4c201793141329cf58bb52a6fcc1d9c9eb1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This PR has two commits:\r\n\r\n---\r\n\r\n### fix(lsp): store result id for unchanged diagnostic reports\r\n\r\n**Problem:** For unchanged document diagnostic reports, the `resultId`\r\nis ignored completely, even though it should still be saved for the\r\nrequest (in fact, the spec marks it as mandatory for unchanged reports,\r\nso it should be extra important).\r\n\r\n**Solution:** Always store the `resultId`.\r\n\r\n---\r\n\r\n### feat(lsp): diagnostic related documents support\r\n\r\nSee https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#relatedFullDocumentDiagnosticReport",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34853#discussion_r2193944308"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34853"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193944308"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmmm it's a bit interesting that VS Code doesn't support this yet: https://github.com/microsoft/vscode-languageserver-node/blob/df56e720c01c6e2d7873733807418f6ce33187ad/client/src/common/diagnostic.ts#L1067\r\n\r\nWhat do you think of having a partial approach here of only updating `related_bufstate` if `bufstates` contains `related_bufnr`? Once we add something to `bufstates` we'll start pulling for diagnostics, and I don't want for the state to blow up from a bunch of related documents that haven't even been opened.",
            "commit_id": "e79daadb65a0d1e06822ab31217ac707e86e96ad",
            "created_at": "2025-07-09T03:49:35Z",
            "diff_hunk": "@@ -268,16 +268,33 @@ function M.on_diagnostic(error, result, ctx)\n     return\n   end\n \n-  if result == nil or result.kind == 'unchanged' then\n+  if result == nil then\n     return\n   end\n \n   local client_id = ctx.client_id\n-  handle_diagnostics(ctx.params.textDocument.uri, client_id, result.items, true)\n-\n   local bufnr = assert(ctx.bufnr)\n   local bufstate = bufstates[bufnr]\n   bufstate.client_result_id[client_id] = result.resultId\n+\n+  if result.kind == 'unchanged' then\n+    return\n+  end\n+\n+  handle_diagnostics(ctx.params.textDocument.uri, client_id, result.items, true)\n+\n+  for uri, related_result in pairs(result.relatedDocuments or {}) do\n+    if related_result.kind == 'full' then\n+      handle_diagnostics(uri, client_id, related_result.items, true)\n+    end\n+\n+    local related_bufnr = vim.uri_to_bufnr(uri)\n+    local related_bufstate = bufstates[related_bufnr]",
            "html_url": "https://github.com/neovim/neovim/pull/34853#discussion_r2193944308",
            "id": 2193944308,
            "line": 293,
            "node_id": "PRRC_kwDOAPphoM6CxO70",
            "original_commit_id": "2666e1b31399247b5b23a0ff8bf68e98abcf139c",
            "original_line": 293,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 28,
            "pull_request_review_id": 2999860380,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34853",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193944308/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T03:49:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2193944308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34853#discussion_r2194035351"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34853"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194035351"
                }
            },
            "author_association": "MEMBER",
            "body": "Interesting, yeah I guess we'll have to do that then. But out of curiosity, how does this cause the related buffers to get pulled for diagnostics? Looks like `bufstates` is usually queried for a specific bufnr, and when we populate a new bufstate we still don't create an associated `LspNotify` autocmd for it? Unless there is somewhere that scans all bufstates before requesting diagnostics, but I only see that in the workspace diagnostics section, which I assume scans all documents anyway",
            "commit_id": "e79daadb65a0d1e06822ab31217ac707e86e96ad",
            "created_at": "2025-07-09T05:15:40Z",
            "diff_hunk": "@@ -268,16 +268,33 @@ function M.on_diagnostic(error, result, ctx)\n     return\n   end\n \n-  if result == nil or result.kind == 'unchanged' then\n+  if result == nil then\n     return\n   end\n \n   local client_id = ctx.client_id\n-  handle_diagnostics(ctx.params.textDocument.uri, client_id, result.items, true)\n-\n   local bufnr = assert(ctx.bufnr)\n   local bufstate = bufstates[bufnr]\n   bufstate.client_result_id[client_id] = result.resultId\n+\n+  if result.kind == 'unchanged' then\n+    return\n+  end\n+\n+  handle_diagnostics(ctx.params.textDocument.uri, client_id, result.items, true)\n+\n+  for uri, related_result in pairs(result.relatedDocuments or {}) do\n+    if related_result.kind == 'full' then\n+      handle_diagnostics(uri, client_id, related_result.items, true)\n+    end\n+\n+    local related_bufnr = vim.uri_to_bufnr(uri)\n+    local related_bufstate = bufstates[related_bufnr]",
            "html_url": "https://github.com/neovim/neovim/pull/34853#discussion_r2194035351",
            "id": 2194035351,
            "in_reply_to_id": 2193944308,
            "line": 293,
            "node_id": "PRRC_kwDOAPphoM6CxlKX",
            "original_commit_id": "2666e1b31399247b5b23a0ff8bf68e98abcf139c",
            "original_line": 293,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 28,
            "pull_request_review_id": 2999990152,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34853",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194035351/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T05:15:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2194035351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34853#discussion_r2195805041"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34853"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195805041"
                }
            },
            "author_association": "MEMBER",
            "body": "You're right, I'm realizing that we don't iterate through all `bufstates` and instead we use `_enable` to start pulling diagnostics for a buffer. Still, I don't think that we should start keeping track of diagnostic state for a buffer that hasn't been `_enable`d before.\r\n\r\nCurious to hear from @gpanders @lewis6991 @mfussenegger on this too though.",
            "commit_id": "e79daadb65a0d1e06822ab31217ac707e86e96ad",
            "created_at": "2025-07-09T19:19:12Z",
            "diff_hunk": "@@ -268,16 +268,33 @@ function M.on_diagnostic(error, result, ctx)\n     return\n   end\n \n-  if result == nil or result.kind == 'unchanged' then\n+  if result == nil then\n     return\n   end\n \n   local client_id = ctx.client_id\n-  handle_diagnostics(ctx.params.textDocument.uri, client_id, result.items, true)\n-\n   local bufnr = assert(ctx.bufnr)\n   local bufstate = bufstates[bufnr]\n   bufstate.client_result_id[client_id] = result.resultId\n+\n+  if result.kind == 'unchanged' then\n+    return\n+  end\n+\n+  handle_diagnostics(ctx.params.textDocument.uri, client_id, result.items, true)\n+\n+  for uri, related_result in pairs(result.relatedDocuments or {}) do\n+    if related_result.kind == 'full' then\n+      handle_diagnostics(uri, client_id, related_result.items, true)\n+    end\n+\n+    local related_bufnr = vim.uri_to_bufnr(uri)\n+    local related_bufstate = bufstates[related_bufnr]",
            "html_url": "https://github.com/neovim/neovim/pull/34853#discussion_r2195805041",
            "id": 2195805041,
            "in_reply_to_id": 2193944308,
            "line": 293,
            "node_id": "PRRC_kwDOAPphoM6C4VNx",
            "original_commit_id": "2666e1b31399247b5b23a0ff8bf68e98abcf139c",
            "original_line": 293,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 28,
            "pull_request_review_id": 3002802550,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34853",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195805041/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T19:19:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195805041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34853#discussion_r2195943411"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34853"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195943411"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, fair. The only reason I'd push for keeping it would be storing previousResultIds for those buffers, since related documents can still be given their own result ids in their diagnostic reports",
            "commit_id": "e79daadb65a0d1e06822ab31217ac707e86e96ad",
            "created_at": "2025-07-09T20:47:54Z",
            "diff_hunk": "@@ -268,16 +268,33 @@ function M.on_diagnostic(error, result, ctx)\n     return\n   end\n \n-  if result == nil or result.kind == 'unchanged' then\n+  if result == nil then\n     return\n   end\n \n   local client_id = ctx.client_id\n-  handle_diagnostics(ctx.params.textDocument.uri, client_id, result.items, true)\n-\n   local bufnr = assert(ctx.bufnr)\n   local bufstate = bufstates[bufnr]\n   bufstate.client_result_id[client_id] = result.resultId\n+\n+  if result.kind == 'unchanged' then\n+    return\n+  end\n+\n+  handle_diagnostics(ctx.params.textDocument.uri, client_id, result.items, true)\n+\n+  for uri, related_result in pairs(result.relatedDocuments or {}) do\n+    if related_result.kind == 'full' then\n+      handle_diagnostics(uri, client_id, related_result.items, true)\n+    end\n+\n+    local related_bufnr = vim.uri_to_bufnr(uri)\n+    local related_bufstate = bufstates[related_bufnr]",
            "html_url": "https://github.com/neovim/neovim/pull/34853#discussion_r2195943411",
            "id": 2195943411,
            "in_reply_to_id": 2193944308,
            "line": 293,
            "node_id": "PRRC_kwDOAPphoM6C42_z",
            "original_commit_id": "2666e1b31399247b5b23a0ff8bf68e98abcf139c",
            "original_line": 293,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 28,
            "pull_request_review_id": 3003039467,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34853",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195943411/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T20:47:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195943411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34853#discussion_r2203039936"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34853"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203039936"
                }
            },
            "author_association": "MEMBER",
            "body": "helpful for searching if we use the literal protocol name\n```suggestion\n    it('handles relatedDocuments diagnostics', function()\n```",
            "commit_id": "e79daadb65a0d1e06822ab31217ac707e86e96ad",
            "created_at": "2025-07-13T01:05:35Z",
            "diff_hunk": "@@ -497,6 +498,85 @@ describe('vim.lsp.diagnostic', function()\n           return _G.params.previousResultId\n         end)\n       )\n+\n+      -- Unchanged reports\n+      eq(\n+        'squidward',\n+        exec_lua(function()\n+          vim.lsp.diagnostic.on_diagnostic(nil, {\n+            kind = 'unchanged',\n+            resultId = 'squidward',\n+          }, {\n+            method = vim.lsp.protocol.Methods.textDocument_diagnostic,\n+            params = {\n+              textDocument = { uri = fake_uri },\n+            },\n+            client_id = client_id,\n+            bufnr = diagnostic_bufnr,\n+          })\n+          vim.api.nvim_exec_autocmds('LspNotify', {\n+            buffer = diagnostic_bufnr,\n+            data = {\n+              method = vim.lsp.protocol.Methods.textDocument_didChange,\n+              client_id = client_id,\n+            },\n+          })\n+          return _G.params.previousResultId\n+        end)\n+      )\n+    end)\n+\n+    it('handles related document diagnostics', function()",
            "html_url": "https://github.com/neovim/neovim/pull/34853#discussion_r2203039936",
            "id": 2203039936,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DT7jA",
            "original_commit_id": "7bab6ac903b711ceb947d1bcfa5d21e64bb88c2c",
            "original_line": 529,
            "original_position": 40,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 3013716068,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34853",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203039936/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-13T01:05:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203039936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34853/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34853/commits",
    "created_at": "2025-07-09T01:51:02Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34853.diff",
    "draft": false,
    "head": {
        "label": "ribru17:diag_related_docs",
        "ref": "diag_related_docs",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-07-13T01:20:14Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 325787,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-07-11T13:53:48Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "e79daadb65a0d1e06822ab31217ac707e86e96ad",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34853",
    "id": 2651392562,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34853",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "91c865d993199a9d2886e84b1584c2e3f21e3c72",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6eCQoy",
    "number": 34853,
    "patch_url": "https://github.com/neovim/neovim/pull/34853.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34853/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/e79daadb65a0d1e06822ab31217ac707e86e96ad",
    "title": "feat(lsp): diagnostic related documents support",
    "updated_at": "2025-07-13T01:20:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34853",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}