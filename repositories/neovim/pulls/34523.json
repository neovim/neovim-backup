{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34523/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34523/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34523"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34523"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34523/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/94293c46073eb43b02c47dc93e0b3d821c691ecd"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6362,
            "forks_count": 6362,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 2032,
            "open_issues_count": 2032,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-10-20T22:45:38Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 348094,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 93601,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-10-21T02:13:22Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 93601,
            "watchers_count": 93601,
            "web_commit_signoff_required": false
        },
        "sha": "77e3efecee4e9948044ec02caeaf6fec496c6c02",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\n\r\nPart of https://github.com/neovim/neovim/issues/31206\r\n\r\nAs advertised by the title, this PR adds a `callback` argument to all functions in `vim.lsp.buf`. For now (?) the argument to the callback is simply the errors that occurred during the request.\r\n\r\n## Some questions for reviewers\r\n- [ ] https://github.com/neovim/neovim/pull/34523#discussion_r2280712397: Should we have a new `lsp.Callback` alias for this function signature? That would save us some repetitive type writing, but then idk if in the future we expect these callbacks to receive different arguments in different LSP methods.\r\n- [x] @lewis6991 had [some thoughts](https://github.com/neovim/neovim/pull/34523#discussion_r2163179724) about not using `vim.notify` if a callback is provided. I lean towards instead setting `silent = true` (if not explicitly set and in those methods that support the option) if a callback is given and then based on `silent` call `vim.notify` or not. Thoughts?\r\n  - Spoke on Matrix and we decided on removing the `silent` option later and instead use these new callback function to let users handle errors.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2149228897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2149228897"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we avoid this pattern for giving callback a default as it breaks typing? Or maybe reapply a `@type`?",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-16T07:26:06Z",
            "diff_hunk": "@@ -46,10 +46,15 @@ local hover_ns = api.nvim_create_namespace('nvim.lsp.hover_range')\n --- })\n --- ```\n --- @param config? vim.lsp.buf.hover.Opts\n-function M.hover(config)\n+--- @param callback? fun(err: lsp.ResponseError[]) Function called after the request is completed.\n+--- Any errors are passed as the first argument.\n+function M.hover(config, callback)\n   config = config or {}\n+  callback = callback or function() end",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2149228897",
            "id": 2149228897,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6AGqFh",
            "original_commit_id": "7ce41a1d3685440415b7caaa80a20251680122a2",
            "original_line": 53,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 2930918958,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2149228897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-16T07:27:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2149228897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2163179724"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2163179724"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe this shouldn't be called if a callback is provided?",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-24T07:34:04Z",
            "diff_hunk": "@@ -162,14 +178,18 @@ end\n \n ---@param method vim.lsp.protocol.Method.ClientToServer.Request\n ---@param opts? vim.lsp.LocationOpts\n-local function get_locations(method, opts)\n+---@param callback? fun(errors?: string|lsp.ResponseError[])\n+local function get_locations(method, opts, callback)\n   opts = opts or {}\n+\n   local bufnr = api.nvim_get_current_buf()\n   local win = api.nvim_get_current_win()\n \n   local clients = lsp.get_clients({ method = method, bufnr = bufnr })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2163179724",
            "id": 2163179724,
            "line": 229,
            "node_id": "PRRC_kwDOAPphoM6A74DM",
            "original_commit_id": "93b8d56b1637fd06aea4e589804655cf1c81838b",
            "original_line": 229,
            "original_position": 69,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 102,
            "pull_request_review_id": 2952517840,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2163179724/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-24T07:34:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2163179724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2164526832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164526832"
                }
            },
            "author_association": "MEMBER",
            "body": "How would we distinguish the difference between receiving no responses and no requests being made?",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-24T17:16:16Z",
            "diff_hunk": "@@ -162,14 +178,18 @@ end\n \n ---@param method vim.lsp.protocol.Method.ClientToServer.Request\n ---@param opts? vim.lsp.LocationOpts\n-local function get_locations(method, opts)\n+---@param callback? fun(errors?: string|lsp.ResponseError[])\n+local function get_locations(method, opts, callback)\n   opts = opts or {}\n+\n   local bufnr = api.nvim_get_current_buf()\n   local win = api.nvim_get_current_win()\n \n   local clients = lsp.get_clients({ method = method, bufnr = bufnr })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2164526832",
            "id": 2164526832,
            "in_reply_to_id": 2163179724,
            "line": 229,
            "node_id": "PRRC_kwDOAPphoM6BBA7w",
            "original_commit_id": "93b8d56b1637fd06aea4e589804655cf1c81838b",
            "original_line": 229,
            "original_position": 69,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 102,
            "pull_request_review_id": 2954687659,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164526832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-24T17:16:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164526832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2164585141"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164585141"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't understand, I'm suggesting:\n\n```lua\nif not callback then\n  vim.notify(msg, vim.log.levels.WARN)\nend\n```\n\nBasically if the user has provided a continuation and thus is probably calling this function in a script, we should minimize effects like `vim.notify()`.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-24T17:51:59Z",
            "diff_hunk": "@@ -162,14 +178,18 @@ end\n \n ---@param method vim.lsp.protocol.Method.ClientToServer.Request\n ---@param opts? vim.lsp.LocationOpts\n-local function get_locations(method, opts)\n+---@param callback? fun(errors?: string|lsp.ResponseError[])\n+local function get_locations(method, opts, callback)\n   opts = opts or {}\n+\n   local bufnr = api.nvim_get_current_buf()\n   local win = api.nvim_get_current_win()\n \n   local clients = lsp.get_clients({ method = method, bufnr = bufnr })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2164585141",
            "id": 2164585141,
            "in_reply_to_id": 2163179724,
            "line": 229,
            "node_id": "PRRC_kwDOAPphoM6BBPK1",
            "original_commit_id": "93b8d56b1637fd06aea4e589804655cf1c81838b",
            "original_line": 229,
            "original_position": 69,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 102,
            "pull_request_review_id": 2954788640,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164585141/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-24T17:51:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164585141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2164589796"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164589796"
                }
            },
            "author_association": "MEMBER",
            "body": "pcall masks errors. If you don't want errors to potentially mess up the flow then you can invoke the callback in `vim.schedule`",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-24T17:54:50Z",
            "diff_hunk": "@@ -23,6 +23,13 @@ local function client_positional_params(params)\n   end\n end\n \n+--- @param callback? function\n+local function invoke_callback(callback, ...)\n+  if callback then\n+    pcall(callback, ...)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2164589796",
            "id": 2164589796,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BBQTk",
            "original_commit_id": "93b8d56b1637fd06aea4e589804655cf1c81838b",
            "original_line": 29,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 2954795990,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164589796/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-24T17:55:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164589796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2164591910"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164591910"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh I see. I thought you were suggesting that we should let the callback figure out how to deal with the case of now clients supporting the method, and I was saying how there might not be enough information for it to know when that's the case.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-24T17:55:55Z",
            "diff_hunk": "@@ -162,14 +178,18 @@ end\n \n ---@param method vim.lsp.protocol.Method.ClientToServer.Request\n ---@param opts? vim.lsp.LocationOpts\n-local function get_locations(method, opts)\n+---@param callback? fun(errors?: string|lsp.ResponseError[])\n+local function get_locations(method, opts, callback)\n   opts = opts or {}\n+\n   local bufnr = api.nvim_get_current_buf()\n   local win = api.nvim_get_current_win()\n \n   local clients = lsp.get_clients({ method = method, bufnr = bufnr })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2164591910",
            "id": 2164591910,
            "in_reply_to_id": 2163179724,
            "line": 229,
            "node_id": "PRRC_kwDOAPphoM6BBQ0m",
            "original_commit_id": "93b8d56b1637fd06aea4e589804655cf1c81838b",
            "original_line": 229,
            "original_position": 69,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 102,
            "pull_request_review_id": 2954799075,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164591910/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-24T17:55:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164591910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2164596382"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164596382"
                }
            },
            "author_association": "MEMBER",
            "body": "The callback needs to be presented with enough information to understand what happened. Usually that's done with a distinct (and preferably static) value for `err`.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-24T17:58:51Z",
            "diff_hunk": "@@ -162,14 +178,18 @@ end\n \n ---@param method vim.lsp.protocol.Method.ClientToServer.Request\n ---@param opts? vim.lsp.LocationOpts\n-local function get_locations(method, opts)\n+---@param callback? fun(errors?: string|lsp.ResponseError[])\n+local function get_locations(method, opts, callback)\n   opts = opts or {}\n+\n   local bufnr = api.nvim_get_current_buf()\n   local win = api.nvim_get_current_win()\n \n   local clients = lsp.get_clients({ method = method, bufnr = bufnr })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2164596382",
            "id": 2164596382,
            "in_reply_to_id": 2163179724,
            "line": 229,
            "node_id": "PRRC_kwDOAPphoM6BBR6e",
            "original_commit_id": "93b8d56b1637fd06aea4e589804655cf1c81838b",
            "original_line": 229,
            "original_position": 69,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 102,
            "pull_request_review_id": 2954807750,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164596382/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-24T17:59:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2164596382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2174716003"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174716003"
                }
            },
            "author_association": "MEMBER",
            "body": "is there an `on_foo` name we can use? same for the others. \r\n```suggestion\r\ndeclaration({opts}, {on_result})                    *vim.lsp.buf.declaration()*\r\n```",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-30T10:08:50Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2174716003",
            "id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Bn4hj",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 2970663485,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174716003/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T10:08:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2174716003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2175602462"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175602462"
                }
            },
            "author_association": "MEMBER",
            "body": "I think `callback` feels better as `result` does have a \"positive\" connotation, but this callback should always be invoked regardless of the request completing successfully or not.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-06-30T17:50:52Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2175602462",
            "id": 2175602462,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BrQ8e",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 2972157564,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175602462/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-30T17:50:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2175602462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2188325717"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188325717"
                }
            },
            "author_association": "MEMBER",
            "body": "All of the callbacks in this pr need some sort of `on_` prefix (`:help dev-naming`). We use \"callback\" way too much. ",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-06T14:06:24Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2188325717",
            "id": 2188325717,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CbzNV",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 2991338840,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188325717/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:06:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188325717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2188343417"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188343417"
                }
            },
            "author_association": "MEMBER",
            "body": "`callback` is usually a continuation and is the async version of `return`, not the same as registering callbacks for events. `on_` isn't necessary for continuations.\n\n> We use \"callback\" way too much.\n\nI don't understand this. What is \"too much\"?",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-06T14:19:11Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2188343417",
            "id": 2188343417,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Cb3h5",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 2991362093,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188343417/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:28:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188343417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198412801"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198412801"
                }
            },
            "author_association": "MEMBER",
            "body": "> `on_` isn't necessary for continuations.\r\n\r\nIt is much easier to communicate one invariant rule rather than multiple, subjective rules. `on_x` tends to result in much more meaningful names, while also avoiding over-use of `callback`.\r\n\r\n> What is \"too much\"?\r\n\r\n`callback` and `cb` are used in places where an `on_x` name would be more useful and intuitive. And then people see that and just do even more of it. That is why it matters: people copy what existing code is doing, so isolated decisions spread out and multiply.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T18:28:24Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198412801",
            "id": 2198412801,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DCR4B",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3006826396,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198412801/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T18:31:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198412801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198801147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198801147"
                }
            },
            "author_association": "MEMBER",
            "body": "> It is much easier to communicate one invariant rule rather than multiple, subjective rules.\n\n`callback` for continuations and `on_` for (potentially repeatable) events isn't a subjective rule.\n\n> on_x tends to result in much more meaningful names, while also avoiding over-use of callback.\n\nI disagree, and can just as well say `on_*` is overused and leads lots of variations of the same name: `on_exit`, `on_done`, `on_finished`, `on_result`, `on_complete` all mean the same thing and can all be replaced with `callback` which is a much more standard name. It's also not obvious these names are callbacks... unlike `callback`, which translates across domains.\n\n> And then people see that and just do even more of it.\n\nI noticed despite how much `on_x` has been pushed in this project, it hasn't been used more. People naturally lean towards `callback`.\n\nHappy to change `cb` -> `callback`, but the `on_x` thing just seems like a specific thing you are over pushing for everything and seems to come directly from js. It works ok for things like the decoration provider and buf attach, but for most other things `callback` works better and easier to understand because it is so common.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T21:36:23Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198801147",
            "id": 2198801147,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DDwr7",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007475457,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198801147/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T21:42:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198801147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198811882"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198811882"
                }
            },
            "author_association": "MEMBER",
            "body": "> leads lots of variations of the same name: `on_exit`, `on_done`, `on_finished`, `on_result`, `on_complet`\r\n\r\nIf those are the same then they should align on one name.\r\n\r\n> It's also not obvious these names are callbacks... unlike `callback`.\r\n\r\nWhat happens when there is more than one callback? Then you need a qualifier anyway. So having a common prefix is extra helpful in that case.\r\n\r\nAnything prefixed with `on_` is a callback, I don't see how that is unclear.\r\n\r\n> but the `on_x` thing just seems like a specific thing you are over pushing for everything and seems to come directly from js. \r\n\r\nNo, this decision was made after experience from early days of the project where `_cb` prefix was used. `on_` is much more readable and conventional. You made a wrong assumption/speculation here.\r\n\r\nIt's a project guideline, and continually objecting to project guidelines is really not helpful. ",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T21:42:57Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198811882",
            "id": 2198811882,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DDzTq",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007489211,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198811882/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T21:46:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198811882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198816023"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198816023"
                }
            },
            "author_association": "MEMBER",
            "body": "\n > What happens when there is more than one callback?\n\nThen it's not a continuation.\n\n> Anything prefixed with on_ is a callback, I don't see how that is unclear.\n\nMaybe if you're used to js.\n\n> on_ is much more readable and conventional.\n\nI've already explained why it isn't\n\n> It's a project guideline, and continually objecting to project guidelines is really not helpful.\n\nYou treat them like biblical texts, despite you writing most of them. Guidelines should be able to be questioned and changed at any time as projects evolve.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T21:46:17Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198816023",
            "id": 2198816023,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DD0UX",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007495032,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198816023/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T21:49:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198816023",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198820132"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198820132"
                }
            },
            "author_association": "MEMBER",
            "body": "> > What happens when there is more than one callback?\r\n> \r\n> Then it's not a continuation.\r\n\r\nA continuation is just a special case. And naming it differently leads to confusion and debates, which is exactly what I'm trying to avoid.\r\n\r\nMany people are just going to copy `callback` even when it's not a \"continuation\" or whatever other specific circumstances. A blanket rule is easier to follow and document.\r\n\r\n> Maybe if you're used to js.\r\n\r\nIt could be named `abc_` for all I care, what matters is that it's a common consistent prefix instead of a different subjective choice everywhere. \r\n\r\nIf it's hard for you to adapt to `on_` then you'll appreciate that it's even harder to document and learn when different kinds of callbacks/handlers should be named in which way in various contexts.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T21:49:13Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198820132",
            "id": 2198820132,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DD1Uk",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007500508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198820132/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T21:51:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198820132",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198821781"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198821781"
                }
            },
            "author_association": "MEMBER",
            "body": "> A continuation is just a special case. And naming it differently leads to confusion and debates, which is exactly what I'm trying to avoid.\n\nArguably it's the most common case.\n\n> Many people are just going to copy callback even when it's not a \"continuation\" or whatever other specific circumstances. A blanket rule is easier to follow and document.\n\nMost of the time that will be fine, and people will understand it. If there are multiple events then `on_` can be switched to.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T21:50:33Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198821781",
            "id": 2198821781,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DD1uV",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007502560,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198821781/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T21:52:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198821781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198828266"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198828266"
                }
            },
            "author_association": "MEMBER",
            "body": "> If there are multiple events then `on_` can be switched to.\r\n\r\nNot if it's a field, like in the case of `nvim_create_autocmd({callback=...})` which is a case where `on_x` was clearly more meaningful and readable.\r\n\r\nAnd \"we'll just do it differently here and there\" is what I'm trying to avoid.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T21:54:12Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198828266",
            "id": 2198828266,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DD3Tq",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007511588,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198828266/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T21:56:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198828266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198831512"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198831512"
                }
            },
            "author_association": "MEMBER",
            "body": "For what's worth, +1 for `on_` from my side.\r\n\r\nThere's already:\r\n\r\n```\r\n                                                        *dev-name-events*\r\nUse the \"on_\" prefix to name event-handling callbacks and also the interface for\r\n\"registering\" such handlers (on_key). The dual nature is acceptable to avoid\r\na confused collection of naming conventions for these related concepts.\r\n```\r\n\r\nThis fits here as well, not sure why we'd special case continuation cases. ",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T21:56:31Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198831512",
            "id": 2198831512,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DD4GY",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007516737,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198831512/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T21:56:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198831512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2198843083"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198843083"
                }
            },
            "author_association": "MEMBER",
            "body": "> This fits here as well, not sure why we'd special case continuation cases.\n\n`callback` fits better here, and does in most places and is a much more common and understood name. There's a reason people use it, and I don't think it's because we already use `callback` for autocmds. I've been reading about a lot of different structured concurrency frameworks and they all seem to use this, except js which coincidentally seems to have one the worst frameworks.\n\n> There's already:\n\nI know, Justin added it.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-10T22:02:12Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2198843083",
            "id": 2198843083,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DD67L",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007530619,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198843083/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-10T22:03:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2198843083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2199100924"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199100924"
                }
            },
            "author_association": "MEMBER",
            "body": "I added it because we had no guidelines and we have things named `handler`, `callback`, `x_cb`, `on_x`, and more (js uses \"listener\" btw). What's your point? I get criticized when there are no guidelines, and when there are...\r\n\r\nHow about this compromise:\r\n\r\n- `callback` for continuations (exactly one callback param, not multiple [like uv.new_work](https://github.com/neovim/neovim/blob/4745270bf124a960ccdffdddbb6c27b7bf36ba82/runtime/doc/luvref.txt#L3600) for example),\r\n- `on_x` for everything else\r\n\r\nand we can commit to this (no debates about special cases or personal preferences in the future)? Then I will update the docs.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-11T00:38:35Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2199100924",
            "id": 2199100924,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DE538",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3007884088,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199100924/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-11T00:48:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199100924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2199229323"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199229323"
                }
            },
            "author_association": "MEMBER",
            "body": "`on_response` sure would be more meaningful here. Instead the docs have to explain it.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-11T01:14:07Z",
            "diff_hunk": "@@ -1856,14 +1872,18 @@ signature_help({config})                        *vim.lsp.buf.signature_help()*\n <\n \n     Parameters: ~\n-      • {config}  (`vim.lsp.buf.signature_help.Opts?`) See\n-                  |vim.lsp.buf.signature_help.Opts|.\n+      • {config}    (`vim.lsp.buf.signature_help.Opts?`) See\n+                    |vim.lsp.buf.signature_help.Opts|.\n+      • {callback}  (`fun(errors: lsp.ResponseError[])?`) Function called\n+                    after the request is completed.",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2199229323",
            "id": 2199229323,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DFZOL",
            "original_commit_id": "df9a57a96945ff0befbca0f628c97c14d13197d9",
            "original_line": 1870,
            "original_position": 195,
            "original_start_line": 1877,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3008094883,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199229323/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-11T01:14:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199229323",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2199233351"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199233351"
                }
            },
            "author_association": "MEMBER",
            "body": "This is the only case that mentions \"Any errors are passed...\". Maybe worth defining a private ~~`@class`~~ `@alias` to define the function signature, and use `@inlinedoc` to repeat the docs?",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-11T01:16:48Z",
            "diff_hunk": "@@ -1782,14 +1789,19 @@ hover({config})                                          *vim.lsp.buf.hover()*\n <\n \n     Parameters: ~\n-      • {config}  (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {config}    (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {callback}  (`fun(errors: lsp.ResponseError[])?`) Function called\n+                    after the request is completed. Any errors are passed as\n+                    the first argument.",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2199233351",
            "id": 2199233351,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DFaNH",
            "original_commit_id": "df9a57a96945ff0befbca0f628c97c14d13197d9",
            "original_line": 1787,
            "original_position": 125,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3008100113,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199233351/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-28T02:33:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199233351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2199869957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199869957"
                }
            },
            "author_association": "MEMBER",
            "body": "sgtm.\n\nFor the `new_work` case, `after_work_callback` is the continuation and `work_callback` is the work and is quite special because it runs with its own Lua state. So you could have `work` and `callback` as arguments for it to follow the rule. We don't own those anyway, and fwiw I would accept `on_` there if we could think of appropriate names.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-11T07:19:43Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2199869957",
            "id": 2199869957,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DH1oF",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3008966594,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199869957/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-11T07:19:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2199869957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2200005915"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2200005915"
                }
            },
            "author_association": "MEMBER",
            "body": "> callback fits better here, and does in most places and is a much more common and understood name. There's a reason people use it, and I don't think it's because we already use callback for autocmds\r\n\r\nConclusory language?\r\nYes, callback is useful to describe the concept of a higher-order function used as parameter to signal something back to the original caller. `on_` naming is useful to clarify _when_ or _what_ it is that is signaled. E.g. I'd still describe a `on_list` as a callback, but that doesn't mean that the parameter needs to be named `callback`. Similar how not every table needs to be called `table`, but can communicate the contents.\r\n\r\n> callback for continuations\r\n\r\nIsn't that to some degree up to the call-site if a callback is used for continuation or not? ",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-11T08:17:15Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2200005915",
            "id": 2200005915,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DIW0b",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3009163561,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2200005915/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-11T08:41:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2200005915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2200227173"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2200227173"
                }
            },
            "author_association": "MEMBER",
            "body": "> Isn't that to some degree up to the call-site if a callback is used for continuation or not?\n\nA continuation strictly always needs to be called to signal the asynchronous `return` of a function. And ideally the first argument that is passed back is an `err` argument to avoid erroring on the main thread. This is especially important for anything that supports cancellation.\n\nNot using the continuation is equivalent to ignoring the return arguments of a function. The way I see it is we don't have contextual names for `return`, or any other language construct, and async functions are a construct we are adding on top.\n\n`vim.async` will also further emphasise the term of callback-functions (not to be confused with async functions), so mixing in `on_` makes that less coherent. callback-functions have a `callback`, normal/async functions have `return`.\n\nFor these reasons `on_list` should be deprecated and replaced with `callback` which includes an `err` argument.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-11T09:35:30Z",
            "diff_hunk": "@@ -1689,21 +1689,25 @@ code_action({opts})                                *vim.lsp.buf.code_action()*\n       • https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_codeAction\n       • vim.lsp.protocol.CodeActionTriggerKind\n \n-declaration({opts})                                *vim.lsp.buf.declaration()*\n+declaration({opts}, {callback})                    *vim.lsp.buf.declaration()*",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2200227173",
            "id": 2200227173,
            "in_reply_to_id": 2174716003,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6DJM1l",
            "original_commit_id": "6ad65156bf6d36ef21cbf9505efd4cfbed31b374",
            "original_line": 1684,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3009514649,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2200227173/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-11T09:38:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2200227173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2233632003"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2233632003"
                }
            },
            "author_association": "MEMBER",
            "body": "My Lua expertise is lacking: How could I annotate a function with `@class`?",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-27T03:52:11Z",
            "diff_hunk": "@@ -1782,14 +1789,19 @@ hover({config})                                          *vim.lsp.buf.hover()*\n <\n \n     Parameters: ~\n-      • {config}  (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {config}    (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {callback}  (`fun(errors: lsp.ResponseError[])?`) Function called\n+                    after the request is completed. Any errors are passed as\n+                    the first argument.",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2233632003",
            "id": 2233632003,
            "in_reply_to_id": 2199233351,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6FIoUD",
            "original_commit_id": "df9a57a96945ff0befbca0f628c97c14d13197d9",
            "original_line": 1787,
            "original_position": 125,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3058914606,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2233632003/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-27T03:52:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2233632003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2234427294"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2234427294"
                }
            },
            "author_association": "MEMBER",
            "body": "I've never actually done it, but AI claims that `@alias` should work. idk if `@inlinedoc` works with that though. @lewis6991 ?\r\n\r\n```lua\r\n---@alias MyFunction fun(a: string, b: number): boolean\r\n\r\n---@param fn MyFunction\r\nlocal function runCallback(fn)\r\n  local result = fn(\"hello\", 42)\r\nend\r\n```",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-28T02:31:59Z",
            "diff_hunk": "@@ -1782,14 +1789,19 @@ hover({config})                                          *vim.lsp.buf.hover()*\n <\n \n     Parameters: ~\n-      • {config}  (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {config}    (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {callback}  (`fun(errors: lsp.ResponseError[])?`) Function called\n+                    after the request is completed. Any errors are passed as\n+                    the first argument.",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2234427294",
            "id": 2234427294,
            "in_reply_to_id": 2199233351,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6FLqee",
            "original_commit_id": "df9a57a96945ff0befbca0f628c97c14d13197d9",
            "original_line": 1787,
            "original_position": 125,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3060035505,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2234427294/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-28T02:32:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2234427294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2234734618"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2234734618"
                }
            },
            "author_association": "MEMBER",
            "body": "I tried that but then `make doc` types `fn` as `MyFunction` without inlining the function signature.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-07-28T05:26:09Z",
            "diff_hunk": "@@ -1782,14 +1789,19 @@ hover({config})                                          *vim.lsp.buf.hover()*\n <\n \n     Parameters: ~\n-      • {config}  (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {config}    (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {callback}  (`fun(errors: lsp.ResponseError[])?`) Function called\n+                    after the request is completed. Any errors are passed as\n+                    the first argument.",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2234734618",
            "id": 2234734618,
            "in_reply_to_id": 2199233351,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6FM1ga",
            "original_commit_id": "df9a57a96945ff0befbca0f628c97c14d13197d9",
            "original_line": 1787,
            "original_position": 125,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3060438229,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2234734618/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-28T05:26:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2234734618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2280712397"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280712397"
                }
            },
            "author_association": "MEMBER",
            "body": "@lewis6991 what are your thoughts on having an `lsp.Callback` alias for this function (similar to `lsp.Handler`)?\r\n\r\nThat would save us the repetition of the function signature, but it wouldn't address the repetitive descriptions that @justinmk mentioned.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-17T04:03:27Z",
            "diff_hunk": "@@ -1782,14 +1789,19 @@ hover({config})                                          *vim.lsp.buf.hover()*\n <\n \n     Parameters: ~\n-      • {config}  (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {config}    (`vim.lsp.buf.hover.Opts?`) See |vim.lsp.buf.hover.Opts|.\n+      • {callback}  (`fun(errors: lsp.ResponseError[])?`) Function called\n+                    after the request is completed. Any errors are passed as\n+                    the first argument.",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2280712397",
            "id": 2280712397,
            "in_reply_to_id": 2199233351,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H8OjN",
            "original_commit_id": "df9a57a96945ff0befbca0f628c97c14d13197d9",
            "original_line": 1787,
            "original_position": 125,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 1,
            "pull_request_review_id": 3126183983,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280712397/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-17T04:04:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280712397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2300227036"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300227036"
                }
            },
            "author_association": "MEMBER",
            "body": "This should probably a map of client id to error.\n\n\n```suggestion\n  local errors = {} --- @type table<integer,lsp.ResponseError?>\n```",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-26T08:30:17Z",
            "diff_hunk": "@@ -489,21 +489,28 @@ end\n \n --- Request workspace-wide diagnostics.\n --- @param opts vim.lsp.WorkspaceDiagnosticsOpts\n-function M._workspace_diagnostics(opts)\n+--- @param callback? fun(errors: lsp.ResponseError[]) Function called after the request is completed.\n+function M._workspace_diagnostics(opts, callback)\n   local clients = lsp.get_clients({ method = ms.workspace_diagnostic, id = opts.client_id })\n+  local remaining = #clients\n+  local errors = {} --- @type lsp.ResponseError[]",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2300227036",
            "id": 2300227036,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JGq3c",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 496,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 1,
            "pull_request_review_id": 3154550370,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300227036/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T08:30:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300227036",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2300232914"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300232914"
                }
            },
            "author_association": "MEMBER",
            "body": "Are we sure we want to return this error if the request is retriggered? If with do then the above type would need to be `table<integer,lsp.ResponseError[]?>`",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-26T08:32:36Z",
            "diff_hunk": "@@ -489,21 +489,28 @@ end\n \n --- Request workspace-wide diagnostics.\n --- @param opts vim.lsp.WorkspaceDiagnosticsOpts\n-function M._workspace_diagnostics(opts)\n+--- @param callback? fun(errors: lsp.ResponseError[]) Function called after the request is completed.\n+function M._workspace_diagnostics(opts, callback)\n   local clients = lsp.get_clients({ method = ms.workspace_diagnostic, id = opts.client_id })\n+  local remaining = #clients\n+  local errors = {} --- @type lsp.ResponseError[]\n \n   --- @param error lsp.ResponseError?\n   --- @param result lsp.WorkspaceDiagnosticReport\n   --- @param ctx lsp.HandlerContext\n   local function handler(error, result, ctx)\n-    -- Check for retrigger requests on cancellation errors.\n-    -- Unless `retriggerRequest` is explicitly disabled, try again.\n-    if error ~= nil and error.code == lsp.protocol.ErrorCodes.ServerCancelled then\n-      if error.data == nil or error.data.retriggerRequest ~= false then\n-        local client = assert(lsp.get_client_by_id(ctx.client_id))\n-        client:request(ms.workspace_diagnostic, ctx.params, handler)\n+    if error then\n+      errors[#errors + 1] = error",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2300232914",
            "id": 2300232914,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JGsTS",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 503,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 1,
            "pull_request_review_id": 3154558970,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300232914/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T08:32:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300232914",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2300236256"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300236256"
                }
            },
            "author_association": "MEMBER",
            "body": "I would inline this as it loses typing and only saves 2 lines.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-26T08:33:52Z",
            "diff_hunk": "@@ -23,6 +23,13 @@ local function client_positional_params(params)\n   end\n end\n \n+--- @param callback? function\n+local function invoke_callback(callback, ...)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2300236256",
            "id": 2300236256,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JGtHg",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 27,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 3154563880,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300236256/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T08:33:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300236256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2300238138"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300238138"
                }
            },
            "author_association": "MEMBER",
            "body": "Same as before. This type probably needs to be indexed with the client id.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-26T08:34:39Z",
            "diff_hunk": "@@ -56,10 +66,12 @@ function M.hover(config)\n     local bufnr = assert(ctx.bufnr)\n     if api.nvim_get_current_buf() ~= bufnr then\n       -- Ignore result since buffer changed. This happens for slow language servers.\n+      invoke_callback(callback, {})\n       return\n     end\n \n     -- Filter errors from results\n+    local errors = {} --- @type lsp.ResponseError[]",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2300238138",
            "id": 2300238138,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JGtk6",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 74,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 3154566428,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300238138/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T08:34:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300238138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2300242398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300242398"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe not in this change, but this message should be added to `error` instead, and raise `vim.notify` higher up, or not at all.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-26T08:36:25Z",
            "diff_hunk": "@@ -640,13 +700,20 @@ function M.format(opts)\n     for _, client in pairs(clients) do\n       local params = set_range(client, util.make_formatting_params(opts.formatting_options))\n       local result, err = client:request_sync(method, params, timeout_ms, bufnr)\n-      if result and result.result then\n-        util.apply_text_edits(result.result, bufnr, client.offset_encoding)\n+      if result then\n+        if result.err then\n+          errors[#errors + 1] = result.err\n+        end\n+        if result.result then\n+          util.apply_text_edits(result.result, bufnr, client.offset_encoding)\n+        end\n       elseif err then\n         vim.notify(string.format('[LSP][%s] %s', client.name, err), vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2300242398",
            "id": 2300242398,
            "line": 734,
            "node_id": "PRRC_kwDOAPphoM6JGune",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 734,
            "original_position": 322,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 327,
            "pull_request_review_id": 3154572274,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300242398/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T08:36:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300242398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2300250237"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300250237"
                }
            },
            "author_association": "MEMBER",
            "body": "This is slightly inconsistent with line 711, where we call `vim.notify` but do not append to `errors`, though should be solved when we move all the `vim.notify` calls.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-26T08:39:10Z",
            "diff_hunk": "@@ -901,11 +991,16 @@ local function hierarchy(method)\n   local bufnr = api.nvim_get_current_buf()\n   local clients = lsp.get_clients({ bufnr = bufnr, method = prepare_method })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    ---@type lsp.ResponseError\n+    local error = { code = lsp.protocol.ErrorCodes.RequestCancelled, message = msg }\n+    invoke_callback(callback, { error })\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2300250237",
            "id": 2300250237,
            "line": 1032,
            "node_id": "PRRC_kwDOAPphoM6JGwh9",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 1032,
            "original_position": 453,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 469,
            "pull_request_review_id": 3154583035,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300250237/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T08:39:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300250237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2312645871"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312645871"
                }
            },
            "author_association": "MEMBER",
            "body": "What about the cases where we invoke the callback when there are no clients available?",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-31T21:55:12Z",
            "diff_hunk": "@@ -56,10 +66,12 @@ function M.hover(config)\n     local bufnr = assert(ctx.bufnr)\n     if api.nvim_get_current_buf() ~= bufnr then\n       -- Ignore result since buffer changed. This happens for slow language servers.\n+      invoke_callback(callback, {})\n       return\n     end\n \n     -- Filter errors from results\n+    local errors = {} --- @type lsp.ResponseError[]",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2312645871",
            "id": 2312645871,
            "in_reply_to_id": 2300238138,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6J2Czv",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 74,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 3171811278,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312645871/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-31T21:55:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312645871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2312647721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312647721"
                }
            },
            "author_association": "MEMBER",
            "body": "Do you want me to remove the `vim.notify` calls in this PR or later in a follow-up?",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-31T22:01:50Z",
            "diff_hunk": "@@ -901,11 +991,16 @@ local function hierarchy(method)\n   local bufnr = api.nvim_get_current_buf()\n   local clients = lsp.get_clients({ bufnr = bufnr, method = prepare_method })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    ---@type lsp.ResponseError\n+    local error = { code = lsp.protocol.ErrorCodes.RequestCancelled, message = msg }\n+    invoke_callback(callback, { error })\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2312647721",
            "id": 2312647721,
            "in_reply_to_id": 2300250237,
            "line": 1032,
            "node_id": "PRRC_kwDOAPphoM6J2DQp",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 1032,
            "original_position": 453,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 469,
            "pull_request_review_id": 3171812912,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312647721/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-31T22:01:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312647721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2312648694"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312648694"
                }
            },
            "author_association": "MEMBER",
            "body": "Example: https://github.com/neovim/neovim/blob/0aa908f1a2874208c0a18e721dcb4319ea4357b1/runtime/lua/vim/lsp/buf.lua?plain=1#L229-L235",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-31T22:05:30Z",
            "diff_hunk": "@@ -56,10 +66,12 @@ function M.hover(config)\n     local bufnr = assert(ctx.bufnr)\n     if api.nvim_get_current_buf() ~= bufnr then\n       -- Ignore result since buffer changed. This happens for slow language servers.\n+      invoke_callback(callback, {})\n       return\n     end\n \n     -- Filter errors from results\n+    local errors = {} --- @type lsp.ResponseError[]",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2312648694",
            "id": 2312648694,
            "in_reply_to_id": 2300238138,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6J2Df2",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 74,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 3171814059,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312648694/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-31T22:06:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312648694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2312652617"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312652617"
                }
            },
            "author_association": "MEMBER",
            "body": "`err` here is only a string, I'm handling the case where `result.err` is not nil.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-08-31T22:19:04Z",
            "diff_hunk": "@@ -640,13 +700,20 @@ function M.format(opts)\n     for _, client in pairs(clients) do\n       local params = set_range(client, util.make_formatting_params(opts.formatting_options))\n       local result, err = client:request_sync(method, params, timeout_ms, bufnr)\n-      if result and result.result then\n-        util.apply_text_edits(result.result, bufnr, client.offset_encoding)\n+      if result then\n+        if result.err then\n+          errors[#errors + 1] = result.err\n+        end\n+        if result.result then\n+          util.apply_text_edits(result.result, bufnr, client.offset_encoding)\n+        end\n       elseif err then\n         vim.notify(string.format('[LSP][%s] %s', client.name, err), vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2312652617",
            "id": 2312652617,
            "in_reply_to_id": 2300242398,
            "line": 734,
            "node_id": "PRRC_kwDOAPphoM6J2EdJ",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 734,
            "original_position": 322,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 327,
            "pull_request_review_id": 3171817332,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312652617/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-31T22:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2312652617",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2313274689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313274689"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm good point.\r\n\r\nIn that situation, that happens before we make the requests (which defer to the event loop), so I think we can just call `error()` directly.\r\n\r\nThe errors passed to the callback are only for errors that happen after the function has deferred to the event loop.\r\n\r\nOne example of this is `vim.uv.spawn()`, if the cmd passed doesn't exist, it will error immediately, but any errors that occur afters are passed to the callback.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-09-01T08:35:05Z",
            "diff_hunk": "@@ -56,10 +66,12 @@ function M.hover(config)\n     local bufnr = assert(ctx.bufnr)\n     if api.nvim_get_current_buf() ~= bufnr then\n       -- Ignore result since buffer changed. This happens for slow language servers.\n+      invoke_callback(callback, {})\n       return\n     end\n \n     -- Filter errors from results\n+    local errors = {} --- @type lsp.ResponseError[]",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2313274689",
            "id": 2313274689,
            "in_reply_to_id": 2300238138,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6J4cVB",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 74,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 3172674235,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313274689/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-01T08:35:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313274689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2313279172"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313279172"
                }
            },
            "author_association": "MEMBER",
            "body": "It is still an error though right? Shouldn't call `vim.notify`.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-09-01T08:37:05Z",
            "diff_hunk": "@@ -640,13 +700,20 @@ function M.format(opts)\n     for _, client in pairs(clients) do\n       local params = set_range(client, util.make_formatting_params(opts.formatting_options))\n       local result, err = client:request_sync(method, params, timeout_ms, bufnr)\n-      if result and result.result then\n-        util.apply_text_edits(result.result, bufnr, client.offset_encoding)\n+      if result then\n+        if result.err then\n+          errors[#errors + 1] = result.err\n+        end\n+        if result.result then\n+          util.apply_text_edits(result.result, bufnr, client.offset_encoding)\n+        end\n       elseif err then\n         vim.notify(string.format('[LSP][%s] %s', client.name, err), vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2313279172",
            "id": 2313279172,
            "in_reply_to_id": 2300242398,
            "line": 734,
            "node_id": "PRRC_kwDOAPphoM6J4dbE",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 734,
            "original_position": 322,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 327,
            "pull_request_review_id": 3172681121,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313279172/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-01T08:37:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313279172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2313280462"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313280462"
                }
            },
            "author_association": "MEMBER",
            "body": "Up to you, but I would prefer it done in this PR.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-09-01T08:37:39Z",
            "diff_hunk": "@@ -901,11 +991,16 @@ local function hierarchy(method)\n   local bufnr = api.nvim_get_current_buf()\n   local clients = lsp.get_clients({ bufnr = bufnr, method = prepare_method })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    ---@type lsp.ResponseError\n+    local error = { code = lsp.protocol.ErrorCodes.RequestCancelled, message = msg }\n+    invoke_callback(callback, { error })\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2313280462",
            "id": 2313280462,
            "in_reply_to_id": 2300250237,
            "line": 1032,
            "node_id": "PRRC_kwDOAPphoM6J4dvO",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 1032,
            "original_position": 453,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 469,
            "pull_request_review_id": 3172682771,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313280462/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-01T08:37:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2313280462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2314564241"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314564241"
                }
            },
            "author_association": "MEMBER",
            "body": "I'll just remove the `if` block handling `err` entirely.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-09-01T20:58:05Z",
            "diff_hunk": "@@ -640,13 +700,20 @@ function M.format(opts)\n     for _, client in pairs(clients) do\n       local params = set_range(client, util.make_formatting_params(opts.formatting_options))\n       local result, err = client:request_sync(method, params, timeout_ms, bufnr)\n-      if result and result.result then\n-        util.apply_text_edits(result.result, bufnr, client.offset_encoding)\n+      if result then\n+        if result.err then\n+          errors[#errors + 1] = result.err\n+        end\n+        if result.result then\n+          util.apply_text_edits(result.result, bufnr, client.offset_encoding)\n+        end\n       elseif err then\n         vim.notify(string.format('[LSP][%s] %s', client.name, err), vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2314564241",
            "id": 2314564241,
            "in_reply_to_id": 2300242398,
            "line": 734,
            "node_id": "PRRC_kwDOAPphoM6J9XKR",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 734,
            "original_position": 322,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 327,
            "pull_request_review_id": 3174478802,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314564241/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-01T20:58:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314564241",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2314566516"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314566516"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry I'm not following entirely. Are you suggesting that we don't invoke the callback here and instead use `error()`? I'm not seeing us do that in other places.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-09-01T21:01:20Z",
            "diff_hunk": "@@ -56,10 +66,12 @@ function M.hover(config)\n     local bufnr = assert(ctx.bufnr)\n     if api.nvim_get_current_buf() ~= bufnr then\n       -- Ignore result since buffer changed. This happens for slow language servers.\n+      invoke_callback(callback, {})\n       return\n     end\n \n     -- Filter errors from results\n+    local errors = {} --- @type lsp.ResponseError[]",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2314566516",
            "id": 2314566516,
            "in_reply_to_id": 2300238138,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6J9Xt0",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 74,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 3174481405,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314566516/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-01T21:01:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314566516",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2314571172"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314571172"
                }
            },
            "author_association": "MEMBER",
            "body": "I prefer to do it as a follow-up. I'm not exactly sure which `vim.notify` calls we do want to keep (e.g. should we keep [these ones](https://github.com/neovim/neovim/blob/d8a88256794feb3fb1a63bd586d80068c4c801f4/runtime/lua/vim/lsp/buf.lua#L105) for empty hovers?).",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-09-01T21:08:30Z",
            "diff_hunk": "@@ -901,11 +991,16 @@ local function hierarchy(method)\n   local bufnr = api.nvim_get_current_buf()\n   local clients = lsp.get_clients({ bufnr = bufnr, method = prepare_method })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    ---@type lsp.ResponseError\n+    local error = { code = lsp.protocol.ErrorCodes.RequestCancelled, message = msg }\n+    invoke_callback(callback, { error })\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2314571172",
            "id": 2314571172,
            "in_reply_to_id": 2300250237,
            "line": 1032,
            "node_id": "PRRC_kwDOAPphoM6J9Y2k",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 1032,
            "original_position": 453,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 469,
            "pull_request_review_id": 3174486974,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314571172/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-01T21:08:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2314571172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2315339406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315339406"
                }
            },
            "author_association": "MEMBER",
            "body": "Ideally keep none of them and move them all out to higher functions.",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-09-02T08:33:13Z",
            "diff_hunk": "@@ -901,11 +991,16 @@ local function hierarchy(method)\n   local bufnr = api.nvim_get_current_buf()\n   local clients = lsp.get_clients({ bufnr = bufnr, method = prepare_method })\n   if not next(clients) then\n-    vim.notify(lsp._unsupported_method(method), vim.log.levels.WARN)\n+    local msg = lsp._unsupported_method(method)\n+    ---@type lsp.ResponseError\n+    local error = { code = lsp.protocol.ErrorCodes.RequestCancelled, message = msg }\n+    invoke_callback(callback, { error })\n+    vim.notify(msg, vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2315339406",
            "id": 2315339406,
            "in_reply_to_id": 2300250237,
            "line": 1032,
            "node_id": "PRRC_kwDOAPphoM6KAUaO",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 1032,
            "original_position": 453,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 469,
            "pull_request_review_id": 3175463875,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315339406/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-02T08:33:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315339406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34523#discussion_r2315374830"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315374830"
                }
            },
            "author_association": "MEMBER",
            "body": "Specifically for `get_locations()`, either call `error()` or return the error back up the chain to a point where we can call `vim.notify()`",
            "commit_id": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
            "created_at": "2025-09-02T08:47:25Z",
            "diff_hunk": "@@ -56,10 +66,12 @@ function M.hover(config)\n     local bufnr = assert(ctx.bufnr)\n     if api.nvim_get_current_buf() ~= bufnr then\n       -- Ignore result since buffer changed. This happens for slow language servers.\n+      invoke_callback(callback, {})\n       return\n     end\n \n     -- Filter errors from results\n+    local errors = {} --- @type lsp.ResponseError[]",
            "html_url": "https://github.com/neovim/neovim/pull/34523#discussion_r2315374830",
            "id": 2315374830,
            "in_reply_to_id": 2300238138,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6KAdDu",
            "original_commit_id": "4102fbc5dceb8f3df88dade03a53bd3cec9328d4",
            "original_line": 74,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 1,
            "pull_request_review_id": 3175514637,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315374830/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-02T08:47:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2315374830",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@lewis6991 I'm not done ofc but I would appreciate a quick look before I continue to ensure that this matches what you had in mind.",
            "created_at": "2025-06-16T01:30:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2974860375",
            "id": 2974860375,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xUMRX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2974860375/reactions"
            },
            "updated_at": "2025-06-16T01:30:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2974860375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One thing that was a bit of a question mark about the callback approach is how LSP cancellation would work. Not just interrupting the async task, but also sending the cancel notification to the server. And that would have to work for synthesized actions that make multiple requests like code actions or rename. See also https://github.com/neovim/neovim/issues/31206#issuecomment-2476397351\r\n\r\nCould be that we need an abstraction on top of vim.async for the higher level LSP functions.",
            "created_at": "2025-06-16T07:24:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2975391322",
            "id": 2975391322,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xWN5a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2975391322/reactions"
            },
            "updated_at": "2025-06-16T07:24:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2975391322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> One thing that was a bit of a question mark about the callback approach is how LSP cancellation would work. Not just interrupting the async task, but also sending the cancel notification to the server. And that would have to work for synthesized actions that make multiple requests like code actions or rename. See also https://github.com/neovim/neovim/issues/31206#issuecomment-2476397351\r\n>\r\n> Could be that we need an abstraction on top of vim.async for the higher level LSP functions.\r\n\r\nI thought that comment was addressed by simply passing back a `cancel` method. I'm not sure what else is needed. I certainly don't understand the need for a `vim.async` abstraction. We only need to send cancel notifications, so it's not like we need to wait for the cancellation to finish. Are you able to elaborate further?\r\n\r\nEDIT: I see you might be missing some context here. I've asked Maria to add both continuations to every function and to also return something like `{ cancel = function() ... end }`, so the requests can be cancelled.",
            "created_at": "2025-06-16T16:04:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2977209969",
            "id": 2977209969,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xdJ5x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977209969/reactions"
            },
            "updated_at": "2025-06-16T16:07:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977209969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@lewis6991 @mfussenegger is it okay if I add the cancellation logic in a later PR?",
            "created_at": "2025-06-16T16:39:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2977316837",
            "id": 2977316837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xdj_l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977316837/reactions"
            },
            "updated_at": "2025-06-16T16:39:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977316837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Why? There's no rush for this. You can add it as a separate commit if that's better.",
            "created_at": "2025-06-16T17:04:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2977385159",
            "id": 2977385159,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xd0rH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977385159/reactions"
            },
            "updated_at": "2025-06-16T17:04:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977385159",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Why? There's no rush for this. You can add it as a separate commit if that's better.\r\n\r\nIt feels like there's still some pending design discussions around it and I don't want to block these changes on that.\r\n\r\nI also think that focusing on the callback arguments for now will make this PR easier to review (and revert if needed). But I'm not going to die on a hill over Git etiquette or conventions.",
            "created_at": "2025-06-16T17:29:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2977450302",
            "id": 2977450302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xeEk-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977450302/reactions"
            },
            "updated_at": "2025-06-16T17:30:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977450302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What pending decisions though? I'm not sure if there are any ([ref](https://github.com/neovim/neovim/pull/34506#issuecomment-2973298872)), and if there are, that's then the important work that needs doing. It would help if something was added here. Mathias reviewed this with the context that this PR didn't add any cancellation, saying that we need to add it, and was just reiterating what he [commented](https://github.com/neovim/neovim/issues/31206#issuecomment-2476397351) in the other issue. It then seems that you've interpreted that comment as there being some pending decisions, when really we've just gone in a circle.\n\nIt's ok if you just don't want to do it though, the callbacks on their own are still useful.",
            "created_at": "2025-06-16T19:16:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2977799120",
            "id": 2977799120,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xfZvQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977799120/reactions"
            },
            "updated_at": "2025-06-16T19:23:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977799120",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What pending decisions though? I'm not sure if there are any ([ref](https://github.com/neovim/neovim/pull/34506#issuecomment-2973298872)), and if there are, that's then the important work that needs doing. It would help if something was added here. Mathias reviewed this with the context that this PR didn't add any cancellation, saying that we need to add it, and was just reiterating what he [commented](https://github.com/neovim/neovim/issues/31206#issuecomment-2476397351) in the other issue. It then seems that you've interpreted that comment as there being some pending decisions, when really we've just gone in a circle.\r\n> \r\n> It's ok if you just don't want to do it though, the callbacks on their own are still useful.\r\n\r\nI'm okay with doing it. I'll add it to this PR if you prefer.",
            "created_at": "2025-06-16T20:09:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2977967139",
            "id": 2977967139,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xgCwj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977967139/reactions"
            },
            "updated_at": "2025-06-16T20:09:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977967139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I thought that comment was addressed by simply passing back a cancel method. I'm not sure what else is needed. I certainly don't understand the need for a vim.async abstraction. We only need to send cancel notifications, so it's not like we need to wait for the cancellation to finish. Are you able to elaborate further?\r\n\r\n> EDIT: I see you might be missing some context here. I've asked Maria to add both continuations to every function and to also return something like { cancel = function() ... end }, so the requests can be cancelled.\r\n\r\nDo I get it right that it would then look something like this with https://github.com/neovim/neovim/pull/34473 ?\r\n\r\n\r\n```lua\r\nasync.run(function()\r\n  local result = async.await(function(on_result)\r\n    local obj = vim.lsp.declaration({}, on_result)\r\n    -- obj.cancel() or obj:cancel() ?\r\n  end)\r\nend)\r\n```\r\n\r\nIf so - I'd have found something a bit higher level justified for these functions, given that they're kinda higher level themselves. Something closer to what `vim.system()` provides, e.g.:\r\n\r\n```lua\r\nlocal obj = vim.lsp.declaration(opts)\r\n-- obj:cancel() -- lsp cancellation\r\n-- obj:wait([timeout])\r\n-- obj:wait(function(err, result) ... end)\r\n```\r\n\r\n\r\nWhat also feels a bit clunky is that some of the functions already have result callbacks with `on_list` in `:h vim.lsp.ListOpts`.\r\n",
            "created_at": "2025-06-16T20:14:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2977983448",
            "id": 2977983448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xgGvY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977983448/reactions"
            },
            "updated_at": "2025-06-16T20:14:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977983448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Close. It would be:\n\n```lua\nasync.run(function()\n  local result = async.await(function(on_result)\n    local obj = vim.lsp.declaration({}, on_result)\n    return { \n      cancel = function()\n        obj:cancel()\n      end\n    }\n  end)\nend)\n```\n\nOr probably just even:\n\n```lua\nasync.run(function()\n  local result = async.await(2, vim.lsp.declaration)\nend)\n```\n\nOr even simpler for sync uses:\n\n```lua\nlocal task = async.run(async.await, 2, vim.lsp.declaration)\n-- task:cancel()\n-- task:wait([timeout])\n-- task:wait(function(err, result) ... end)\n```\n\nIf that is too clunky then it can even be:\n\n```lua\nlocal task = async.run(2, vim.lsp.declaration)\n-- task:cancel()\n-- task:wait([timeout])\n-- task:wait(function(err, result) ... end)\n```\n\nBut this requires that all callback functions return a consistent object.\n\n`async.run` provides the `wait()` interface so I'd like to avoid replicating it everywhere, and instead have all of nvims callback functions implementing a consistent interface. The one in `vim.system()` won't be needed anymore but will remain for legacy.",
            "created_at": "2025-06-16T20:33:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2978041761",
            "id": 2978041761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xgU-h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2978041761/reactions"
            },
            "updated_at": "2025-06-16T20:35:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2978041761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Or probably just even:\r\n> [...]\r\n\r\nOkay that seems good enough.\r\n\r\n> async.run provides the wait() interface so I'd like to avoid replicating it everywhere\r\n\r\nMakes sense, :+1: \r\n\r\n\r\nSo main remaining question would be how to deal with the functions that already have some sort of callback. E.g. `vim.lsp.declaration({ on_list = ...})` exists already. Having `vim.lsp.declaration({ on_list = ...}, callback)` seems odd. We probably don't need to add another callback for those?\r\n",
            "created_at": "2025-06-16T20:46:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2978079321",
            "id": 2978079321,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xgeJZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2978079321/reactions"
            },
            "updated_at": "2025-06-16T20:46:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2978079321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "My preference would be to just (long) deprecate them, otherwise for this to gel with vim.async you need to do:\n\n```lua\nlocal obi = async.await(function(on_result)\n  return vim.lsp.declaration({ on_list = on_result })\nend)\n```\n\nNot the worst, but I'd rather we just enforce a consistent style everywhere. \n\nI also want to deprecate some stuff in `vim.lsp.buf.format` (or whatever the format function is called), in the same vein.",
            "created_at": "2025-06-16T20:51:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2978095542",
            "id": 2978095542,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xgiG2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2978095542/reactions"
            },
            "updated_at": "2025-06-16T20:51:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2978095542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My preference would be to just (long) deprecate them\r\n\r\nSounds okay to me.\r\nWould be good to have the deprecations in this PR.\r\n\r\nI don't mind if the cancel logic is done in a follow up. Only wanted to double check that both async and it will work together. ",
            "created_at": "2025-06-16T21:11:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-2978163316",
            "id": 2978163316,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6xgyp0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2978163316/reactions"
            },
            "updated_at": "2025-06-16T21:11:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2978163316",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@lewis6991 when you get a minute could I please get a review here 😁?",
            "created_at": "2025-08-21T21:35:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3212149797",
            "id": 3212149797,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM6_dYQl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3212149797/reactions"
            },
            "updated_at": "2025-08-21T21:35:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3212149797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "From the peanut gallery: it may make sense to add a doc example on how to use the callback to make a request \"synchronous\". I assume it might involve `vim.wait()` but with all the discussions around async I've lost the plot a little bit. Specifically in the context of https://github.com/neovim/neovim/issues/25259, people like myself will want to know the recommended way to do this (e.g. from a a `BufWritePre` handler).",
            "created_at": "2025-08-27T07:41:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3227147968",
            "id": 3227147968,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM7AWl7A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227147968/reactions"
            },
            "updated_at": "2025-08-27T07:41:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227147968",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In general:\r\n\r\n```lua\r\nlocal done = false\r\nmyfuncwithcallback(function()\r\n  done = true\r\nend)\r\n\r\nlocal timeout_ms = 10000\r\n\r\nlocal did_finish = vim.wait(10000, function()\r\n    return done\r\nend) \r\n\r\nif not did_finish then\r\n  error('got timeout')\r\nend\r\n```\r\n\r\nWhen `vim.async` is avaiable, this can be simplified to:\r\n\r\n```lua\r\nvim.async.run(vim.async.await, myfuncwithcallback):wait(timeout_ms)\r\n```",
            "created_at": "2025-08-27T09:16:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3227430046",
            "id": 3227430046,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM7AXqye",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227430046/reactions"
            },
            "updated_at": "2025-08-27T09:16:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227430046",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> When vim.async is avaiable, this can be simplified to:\r\n>\r\n> ```lua\r\n> vim.async.run(vim.async.await, myfuncwithcallback):wait(timeout_ms)\r\n> ```\r\n\r\nI haven't used languages with await (just read up on the [JavaScript version](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await)), but the use of `vim.async.await` here would make me think that it already does the waiting, like JavaScripts `await something()`. Perhaps I just need to get used to the API.\r\n\r\nFor the time being, I'd probably wrap it:\r\n\r\n```lua\r\n-- Assumes the callback is the last parameter. Not tested, needs some table/tuple packing/unpacking.\r\nfunction await(fn, ...)\r\n  local done = false\r\n  local ret\r\n  fn(..., function(...) \r\n    done = true \r\n    ret = ... \r\n  end)\r\n \r\n  return vim.wait(10000, function() return done end) \r\n    and ret \r\n    or error(\"got timeout\")\r\nend\r\n```\r\n\r\nThen call it:\r\n\r\n```lua\r\nawait(vim.lsp.buf.code_action, opts)\r\n```",
            "created_at": "2025-08-27T09:59:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3227566637",
            "id": 3227566637,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM7AYMIt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227566637/reactions"
            },
            "updated_at": "2025-08-27T10:06:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227566637",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I haven't used languages with await (just read up on the [JavaScript version](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await)), but the use of vim.async.await here would make me think that it already does the waiting, like JavaScripts await something(). Perhaps I just need to get used to the API.\r\n\r\nawait is not the same as a synchronous wait. await suspends the current thread (coroutine) until the function calls its callback (an asynchronous wait). To do a synchronous wait, you need to wait on the task which runs the coroutine.\r\n\r\nThe full form would be:\r\n\r\n```lua\r\nlocal task = vim.async.run(function()\r\n  -- this block runs in a coroutine/async-context\r\n\r\n  -- await here does not block the main thread.\r\n  -- It suspends the running coroutine and continues when callback is called.\r\n  vim.async.await(function(callback)\r\n    myfuncwithcallback(callback)\r\n  end)\r\n\r\n  print('finished')\r\nend)\r\n\r\n-- block the main thread until the task is finished\r\ntask:wait(timeout_ms)\r\n```",
            "created_at": "2025-08-27T11:07:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3227766267",
            "id": 3227766267,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM7AY837",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227766267/reactions"
            },
            "updated_at": "2025-08-27T11:10:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227766267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The full example with comments makes more sense.  This is veering even more off-topic and I don't want to derail any further, except to leave my final comment, for those interested in this side-thread:\r\n\r\nI guess my \"issue\" was  that the `vim.wait` polling **felt** unnecessary. It isn't, as you imply. Because the autocommand callback is invoked on the main thread and there must be something for the main thread to wait on, otherwise Neovim would consider the autocommand finished and move one with actually writing the file (which is what I want to avoid in this example). In a sense, `vim.wait` is like a \"dumb/polling\" scheduler upcall, and kinda similar to `coroutine.yield()`. This also makes me think that this could be more ergonomic if (e.g.) the autocommand callback were invoked as a coroutine. Then one could avoid polling:\r\n\r\n```lua\r\n    vim.api.nvim_create_autocmd(\"BufWritePre\", {\r\n      callback = function()\r\n        local co = coroutine.running()\r\n        vim.lsp.buf.code_action(..., function(...) coroutine.resume(co, ...) end)\r\n        local code_action_results = coroutine.yield() -- The callback was called. \r\n        print(code_action_results)\r\n      end,\r\n    })\r\n```\r\n\r\nIt feels similar to a smarter `vim.wait` that can be unblocked directly instead of indirecting via (e.g.) a boolean and doing polling. I'm sure there's good reasons for why this either can't be done or isn't a good idea.",
            "created_at": "2025-08-27T12:09:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3227938356",
            "id": 3227938356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM7AZm40",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227938356/reactions"
            },
            "updated_at": "2025-08-27T12:09:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3227938356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In a sense, vim.wait is like a \"dumb/polling\" scheduler upcall, and kinda similar to coroutine.yield(). This also makes me think that this could be more ergonomic if (e.g.) the autocommand callback were invoked as a coroutine. Then one could avoid polling:\r\n\r\nBare coroutines are not a replacement for a generalised async interface. They get 70% of the way there, but fall short in too many areas. Mainly bare `coroutine.resume` and `coroutine.yield` have quite a lot of flaws and edge cases which `vim.async` avoids, mostly around error cases and handling.\r\n\r\nOne thing I am considering is making `vim.async.await` automatically call `vim.wait` if it is not running in a coroutine. This will avoid needing the `vim.async.run` wrapper, and in general avoid the \"function coloring\" problem.\r\n\r\n---\r\n\r\nIf you have any more questions then please direct them to https://github.com/lewis6991/async.nvim\r\n",
            "created_at": "2025-08-27T13:17:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3228177651",
            "id": 3228177651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM7AahTz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3228177651/reactions"
            },
            "updated_at": "2025-08-27T13:31:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3228177651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Apart from the digression around the example (await). Is there anything holding up this PR? It seems like adding a continuation is what's intended/needed regardless of what the interface for async (will) look like.",
            "created_at": "2025-10-14T08:55:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3400794838",
            "id": 3400794838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM7KtALW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3400794838/reactions"
            },
            "updated_at": "2025-10-14T08:55:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3400794838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Apart from the digression around the example (await). Is there anything holding up this PR? It seems like adding a continuation is what's intended/needed regardless of what the interface for async (will) look like.\r\n\r\nPersonally I don't know if we've agreed on when to invoke the callbacks, and how this interacts with calling `vim.notify`.",
            "created_at": "2025-10-14T17:54:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/34523#issuecomment-3403002404",
            "id": 3403002404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
            "node_id": "IC_kwDOAPphoM7K1bIk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3403002404/reactions"
            },
            "updated_at": "2025-10-14T17:54:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3403002404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34523/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34523/commits",
    "created_at": "2025-06-16T01:29:16Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34523.diff",
    "draft": false,
    "head": {
        "label": "MariaSolOs:continuations",
        "ref": "continuations",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/MariaSolOs/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/MariaSolOs/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/MariaSolOs/neovim/branches{/branch}",
            "clone_url": "https://github.com/MariaSolOs/neovim.git",
            "collaborators_url": "https://api.github.com/repos/MariaSolOs/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/MariaSolOs/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/MariaSolOs/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/MariaSolOs/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/MariaSolOs/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/MariaSolOs/neovim/contributors",
            "created_at": "2023-08-05T17:10:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/MariaSolOs/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/MariaSolOs/neovim/downloads",
            "events_url": "https://api.github.com/repos/MariaSolOs/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/MariaSolOs/neovim/forks",
            "full_name": "MariaSolOs/neovim",
            "git_commits_url": "https://api.github.com/repos/MariaSolOs/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/MariaSolOs/neovim/git/tags{/sha}",
            "git_url": "git://github.com/MariaSolOs/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/MariaSolOs/neovim/hooks",
            "html_url": "https://github.com/MariaSolOs/neovim",
            "id": 675070403,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/MariaSolOs/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/MariaSolOs/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/MariaSolOs/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/MariaSolOs/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/MariaSolOs/neovim/merges",
            "milestones_url": "https://api.github.com/repos/MariaSolOs/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKDzBww",
            "notifications_url": "https://api.github.com/repos/MariaSolOs/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/MariaSolOs/neovim/pulls{/number}",
            "pushed_at": "2025-10-20T23:01:09Z",
            "releases_url": "https://api.github.com/repos/MariaSolOs/neovim/releases{/id}",
            "size": 334988,
            "ssh_url": "git@github.com:MariaSolOs/neovim.git",
            "stargazers_count": 5,
            "stargazers_url": "https://api.github.com/repos/MariaSolOs/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/MariaSolOs/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/MariaSolOs/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/MariaSolOs/neovim/subscription",
            "svn_url": "https://github.com/MariaSolOs/neovim",
            "tags_url": "https://api.github.com/repos/MariaSolOs/neovim/tags",
            "teams_url": "https://api.github.com/repos/MariaSolOs/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/MariaSolOs/neovim/git/trees{/sha}",
            "updated_at": "2025-10-04T20:46:58Z",
            "url": "https://api.github.com/repos/MariaSolOs/neovim",
            "visibility": "public",
            "watchers": 5,
            "watchers_count": 5,
            "web_commit_signoff_required": false
        },
        "sha": "94293c46073eb43b02c47dc93e0b3d821c691ecd",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34523",
    "id": 2594201299,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34523",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6aoF7T",
    "number": 34523,
    "patch_url": "https://github.com/neovim/neovim/pull/34523.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34523/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/94293c46073eb43b02c47dc93e0b3d821c691ecd",
    "title": "feat(lsp): add continuations to `vim.lsp.buf*` functions",
    "updated_at": "2025-10-14T17:54:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34523",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
        "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
        "followers_url": "https://api.github.com/users/MariaSolOs/followers",
        "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
        "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MariaSolOs",
        "id": 62502207,
        "login": "MariaSolOs",
        "node_id": "MDQ6VXNlcjYyNTAyMjA3",
        "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
        "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
        "repos_url": "https://api.github.com/users/MariaSolOs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MariaSolOs",
        "user_view_type": "public"
    }
}