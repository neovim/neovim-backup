{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35018/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35018/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35018"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35018"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35018/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/f40162ba195e81a6db5bb33863d8b5ff1c4cc805"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6275,
            "forks_count": 6275,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1988,
            "open_issues_count": 1988,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-25T23:24:21Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 339513,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92240,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-26T02:19:53Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92240,
            "watchers_count": 92240,
            "web_commit_signoff_required": false
        },
        "sha": "052126b77ad83b1f26da46dad8c42efacffe7568",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "`vim.lsp.{feature}.enable` is now combined with `vim.lsp.Capability` to provide the following API:\r\n\r\n* `vim.lsp._capability.enable(feature)`\r\n\r\nThis is a step closer to reducing code duplication by basing advanced features on `vim.lsp.Capability`. Any functionality that inherits from `vim.lsp.Capability` can be enabled by this unified API.\r\n\r\n* When called for enabling, it will create `Capability` for existing clients and ensure that new clients will attach to the existing `Capability`, which ensures empty tables and autocmds are prepared.\r\n* When calling it to disable, it will destroy all `Capabilities`, which ensures we have no residual data and autocmds.\r\n* When no client supports the corresponding feature, it will destroy the corresponding `Capability` and ensure that `Capability` will not be created to avoid redundant data and autocmds.\r\n\r\nThis avoids us from repeatedly implementing the tedious logic of preparing an empty table and creating an autocmd when `enable` is called.\r\n\r\nIn addition, we can use `:checkhealth vim.lsp` to view the currently active `Capability` for easy debugging.",
    "closed_at": "2025-08-18T14:57:58Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2280933994"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280933994"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                  • {bufnr}? (`integer`, default: all) Buffer number, or 0 for\r\n                    current buffer, or nil for all.\r\n```",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-17T16:00:31Z",
            "diff_hunk": "@@ -2431,10 +2431,10 @@ enable({enable}, {filter})                  *vim.lsp.semantic_tokens.enable()*\n \n     Parameters: ~\n       • {enable}  (`boolean?`) true/nil to enable, false to disable\n-      • {filter}  (`table?`) A table with the following fields:\n-                  • {bufnr}? (`integer`) Buffer number, or 0 for current\n-                    buffer, or nil for all.\n-                  • {client_id}? (`integer`) Client ID, or nil for all\n+      • {filter}  (`table?`) Optional filters |kwargs|,\n+                  • {bufnr}? (`integer`, default: all) Buffer number, or 0 for\n+                    current buffer",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2280933994",
            "id": 2280933994,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6H9Epq",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 2436,
            "original_position": 10,
            "original_start_line": 2435,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 3126391244,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280933994/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-17T16:06:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280933994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2280934416"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280934416"
                }
            },
            "author_association": "MEMBER",
            "body": "Pardon my ignorance but what do prototypes refer to in Lua?",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-17T16:02:13Z",
            "diff_hunk": "@@ -1,18 +1,32 @@\n local api = vim.api\n \n---- `vim.lsp.Capability` is expected to be created one-to-one with a buffer\n---- when there is at least one supported client attached to that buffer,\n---- and will be destroyed when all supporting clients are detached.\n+---@alias vim.lsp.capability.Name\n+---| 'semantic_tokens'\n+---| 'folding_range'\n+---| 'linked_editing_range'\n+\n+--- Tracks all supported capabilities, all of which derive from `vim.lsp.Capability`.\n+--- Returns capability *prototypes*, not their instances.",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2280934416",
            "id": 2280934416,
            "line": 9,
            "node_id": "PRRC_kwDOAPphoM6H9EwQ",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 9,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_capability.lua",
            "position": 12,
            "pull_request_review_id": 3126391244,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280934416/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-17T16:06:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280934416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2280935114"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280935114"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe we should use a function here to check that `name` is actually a string from `vim.lsp.capability.Name`.",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-17T16:04:54Z",
            "diff_hunk": "@@ -69,9 +77,137 @@ function M:destroy()\n   self.active[self.bufnr] = nil\n end\n \n+--- Callback invoked when an LSP client attaches.\n+--- Use it to initialize per-client state (empty table, new namespaces, etc.),\n+--- or issue requests as needed.\n+---@param client_id integer\n+function M:on_attach(client_id)\n+  self.client_state[client_id] = {}\n+end\n+\n+--- Callback invoked when an LSP client detaches.\n+--- Use it to clear per-client state (cached data, extmarks, etc.).\n ---@param client_id integer\n function M:on_detach(client_id)\n   self.client_state[client_id] = nil\n end\n \n+---@param name vim.lsp.capability.Name\n+local function make_enable_var(name)\n+  return ('_lsp_enabled_%s'):format(name)\n+end\n+\n+--- Optional filters |kwargs|,\n+---@class vim.lsp.capability.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer\n+--- (default: all)\n+---@field bufnr? integer\n+---\n+--- Client ID\n+--- (default: all)\n+---@field client_id? integer\n+\n+---@param name vim.lsp.capability.Name\n+---@param enable? boolean\n+---@param filter? vim.lsp.capability.enable.Filter\n+function M.enable(name, enable, filter)\n+  vim.validate('name', name, 'string')",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2280935114",
            "id": 2280935114,
            "line": 116,
            "node_id": "PRRC_kwDOAPphoM6H9E7K",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 116,
            "original_position": 118,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_capability.lua",
            "position": 118,
            "pull_request_review_id": 3126391244,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280935114/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-17T16:06:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2280935114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2281042088"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281042088"
                }
            },
            "author_association": "MEMBER",
            "body": "Client state should generally be stored on the clients (as private `_foo` fields)",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-17T22:24:52Z",
            "diff_hunk": "@@ -69,9 +77,137 @@ function M:destroy()\n   self.active[self.bufnr] = nil\n end\n \n+--- Callback invoked when an LSP client attaches.\n+--- Use it to initialize per-client state (empty table, new namespaces, etc.),\n+--- or issue requests as needed.\n+---@param client_id integer\n+function M:on_attach(client_id)\n+  self.client_state[client_id] = {}",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2281042088",
            "id": 2281042088,
            "line": 85,
            "node_id": "PRRC_kwDOAPphoM6H9fCo",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 85,
            "original_position": 87,
            "original_start_line": 81,
            "path": "runtime/lua/vim/lsp/_capability.lua",
            "position": 87,
            "pull_request_review_id": 3126479761,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281042088/reactions"
            },
            "side": "RIGHT",
            "start_line": 81,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-08-17T22:24:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281042088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2281042368"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281042368"
                }
            },
            "author_association": "MEMBER",
            "body": "would this be needed if the state is stored on the client itself, instead?\n\nalso, is it worth using a weak table here? https://www.lua.org/pil/17.html",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-17T22:25:51Z",
            "diff_hunk": "@@ -69,9 +77,137 @@ function M:destroy()\n   self.active[self.bufnr] = nil\n end\n \n+--- Callback invoked when an LSP client attaches.\n+--- Use it to initialize per-client state (empty table, new namespaces, etc.),\n+--- or issue requests as needed.\n+---@param client_id integer\n+function M:on_attach(client_id)\n+  self.client_state[client_id] = {}\n+end\n+\n+--- Callback invoked when an LSP client detaches.\n+--- Use it to clear per-client state (cached data, extmarks, etc.).\n ---@param client_id integer\n function M:on_detach(client_id)\n   self.client_state[client_id] = nil",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2281042368",
            "id": 2281042368,
            "line": 92,
            "node_id": "PRRC_kwDOAPphoM6H9fHA",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 92,
            "original_position": 94,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_capability.lua",
            "position": 94,
            "pull_request_review_id": 3126479993,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281042368/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-17T22:25:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281042368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2281044026"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281044026"
                }
            },
            "author_association": "MEMBER",
            "body": "Would it simplify the design to store stuff directly on the buffer instead? Even if it's \"slow\" until https://github.com/neovim/neovim/issues/12544 , having a simpler design is higher-priority (and would also raise the urgency/relevance of https://github.com/neovim/neovim/issues/12544 ).",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-17T22:31:36Z",
            "diff_hunk": "@@ -1207,6 +1218,24 @@ function Client:_on_detach(bufnr)\n     })\n   end\n \n+  for _, Capability in pairs(vim.lsp._capability.all) do\n+    if\n+      self:supports_method(Capability.method)\n+      and vim.lsp._capability.is_enabled(Capability.name, {\n+        bufnr = bufnr,\n+        client_id = self.id,\n+      })\n+    then\n+      local capability = Capability.active[bufnr]",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2281044026",
            "id": 2281044026,
            "line": 1229,
            "node_id": "PRRC_kwDOAPphoM6H9fg6",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 1229,
            "original_position": 72,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 72,
            "pull_request_review_id": 3126481416,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281044026/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-17T22:31:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2281044026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2282157056"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2282157056"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Metatables are used to simulate class definitions. I thought prototypes would be easier to understand. Do I need to explain it in terms of metatables?",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-18T11:41:14Z",
            "diff_hunk": "@@ -1,18 +1,32 @@\n local api = vim.api\n \n---- `vim.lsp.Capability` is expected to be created one-to-one with a buffer\n---- when there is at least one supported client attached to that buffer,\n---- and will be destroyed when all supporting clients are detached.\n+---@alias vim.lsp.capability.Name\n+---| 'semantic_tokens'\n+---| 'folding_range'\n+---| 'linked_editing_range'\n+\n+--- Tracks all supported capabilities, all of which derive from `vim.lsp.Capability`.\n+--- Returns capability *prototypes*, not their instances.",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2282157056",
            "id": 2282157056,
            "in_reply_to_id": 2280934416,
            "line": 9,
            "node_id": "PRRC_kwDOAPphoM6IBvQA",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 9,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_capability.lua",
            "position": 12,
            "pull_request_review_id": 3128026114,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2282157056/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-18T11:49:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2282157056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2282163820"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2282163820"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Do you think I should use `---@enum` to define `Name`? Having a table recording all available values would be more convenient for us to implement such a `validator`.",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-18T11:44:32Z",
            "diff_hunk": "@@ -69,9 +77,137 @@ function M:destroy()\n   self.active[self.bufnr] = nil\n end\n \n+--- Callback invoked when an LSP client attaches.\n+--- Use it to initialize per-client state (empty table, new namespaces, etc.),\n+--- or issue requests as needed.\n+---@param client_id integer\n+function M:on_attach(client_id)\n+  self.client_state[client_id] = {}\n+end\n+\n+--- Callback invoked when an LSP client detaches.\n+--- Use it to clear per-client state (cached data, extmarks, etc.).\n ---@param client_id integer\n function M:on_detach(client_id)\n   self.client_state[client_id] = nil\n end\n \n+---@param name vim.lsp.capability.Name\n+local function make_enable_var(name)\n+  return ('_lsp_enabled_%s'):format(name)\n+end\n+\n+--- Optional filters |kwargs|,\n+---@class vim.lsp.capability.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer\n+--- (default: all)\n+---@field bufnr? integer\n+---\n+--- Client ID\n+--- (default: all)\n+---@field client_id? integer\n+\n+---@param name vim.lsp.capability.Name\n+---@param enable? boolean\n+---@param filter? vim.lsp.capability.enable.Filter\n+function M.enable(name, enable, filter)\n+  vim.validate('name', name, 'string')",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2282163820",
            "id": 2282163820,
            "in_reply_to_id": 2280935114,
            "line": 116,
            "node_id": "PRRC_kwDOAPphoM6IBw5s",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 116,
            "original_position": 118,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_capability.lua",
            "position": 118,
            "pull_request_review_id": 3128034795,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2282163820/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-18T11:44:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2282163820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35018#discussion_r2288681091"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35018"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288681091"
                }
            },
            "author_association": "MEMBER",
            "body": "I think that would be easier :)",
            "commit_id": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
            "created_at": "2025-08-20T16:23:43Z",
            "diff_hunk": "@@ -69,9 +77,137 @@ function M:destroy()\n   self.active[self.bufnr] = nil\n end\n \n+--- Callback invoked when an LSP client attaches.\n+--- Use it to initialize per-client state (empty table, new namespaces, etc.),\n+--- or issue requests as needed.\n+---@param client_id integer\n+function M:on_attach(client_id)\n+  self.client_state[client_id] = {}\n+end\n+\n+--- Callback invoked when an LSP client detaches.\n+--- Use it to clear per-client state (cached data, extmarks, etc.).\n ---@param client_id integer\n function M:on_detach(client_id)\n   self.client_state[client_id] = nil\n end\n \n+---@param name vim.lsp.capability.Name\n+local function make_enable_var(name)\n+  return ('_lsp_enabled_%s'):format(name)\n+end\n+\n+--- Optional filters |kwargs|,\n+---@class vim.lsp.capability.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer\n+--- (default: all)\n+---@field bufnr? integer\n+---\n+--- Client ID\n+--- (default: all)\n+---@field client_id? integer\n+\n+---@param name vim.lsp.capability.Name\n+---@param enable? boolean\n+---@param filter? vim.lsp.capability.enable.Filter\n+function M.enable(name, enable, filter)\n+  vim.validate('name', name, 'string')",
            "html_url": "https://github.com/neovim/neovim/pull/35018#discussion_r2288681091",
            "id": 2288681091,
            "in_reply_to_id": 2280935114,
            "line": 116,
            "node_id": "PRRC_kwDOAPphoM6IaoCD",
            "original_commit_id": "c5bbb25843559148421f7fd1fcbff3a495c971d3",
            "original_line": 116,
            "original_position": 118,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_capability.lua",
            "position": 118,
            "pull_request_review_id": 3137359044,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288681091/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T16:23:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288681091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This PR is ready for preview. I've updated the description above to explain the purpose. cc @justinmk @ribru17 .",
            "created_at": "2025-08-17T06:47:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/35018#issuecomment-3194175588",
            "id": 3194175588,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35018",
            "node_id": "IC_kwDOAPphoM6-Y0Bk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3194175588/reactions"
            },
            "updated_at": "2025-08-17T06:47:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3194175588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I strongly support storing data on the buffer/client. In fact, the basic concept of `vim.lsp.Capability` is to store data on the buffer, but it does so manually. The reasons are:\r\n\r\n* #12544 is not implemented, and even if it is implemented, we would still need to handle some variable initialization and the automatic creation of autocmds;\r\n* nvim does not automatically remove autocommands for a specific buffer, so we need to take care of that manually.\r\n\r\nIn addition to the above, there may be other potential reasons, but as long as we cannot fully delegate *all* of the work of “create on buffer creation, delete on buffer deletion” and “initialize when a feature is enabled, clean up when a feature is disabled” (the latter goes outside the scope of buffer data) to nvim’s other mechanisms, an abstraction like `vim.lsp.Capability`, which focuses on lifecycle management, has to exist.\r\n\r\nBasing on the client is another approach, and I guess vscode does it this way. However, this may not be as suitable for nvim, mainly because:\r\n\r\n* We have some code that needs to wait for all LSP servers to respond before proceeding, such as when using `lsp.MultiHandler`. This means we need a module outside of the `Client` object to implement such logic, which is precisely why `vim.lsp.Capability` is built on buffer data instead of client data.\r\n* Building on the client object may introduce more OOP techniques. This is not much of an issue for vscode, since TypeScript provides interfaces, generics, and other type features, which are generally preferred over the inheritance used by `vim.lsp.Capability`. But at the moment, we simply don’t have access to such type features in Lua.\r\n\r\n`vim.lsp.Capability` may feel unintuitive in some aspects, but for the reasons above, I think the core idea of “buffer-based manual data handling” is fine. Therefore, I think we can move forward with it, and its current significance is to unblock the implementation of some highlight-level features that require `enable`.",
            "created_at": "2025-08-18T05:21:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/35018#issuecomment-3195134584",
            "id": 3195134584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35018",
            "node_id": "IC_kwDOAPphoM6-ceJ4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3195134584/reactions"
            },
            "updated_at": "2025-08-18T05:21:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3195134584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Merging to unblock, can continue improving in followups.\r\n\r\n> We have some code that needs to wait for all LSP servers to respond before proceeding, such as when using `lsp.MultiHandler`. This means we need a module outside of the `Client` object to implement such logic, which is precisely why `vim.lsp.Capability` is built on buffer data instead of client data.\r\n\r\nIs this called out in a code comment somewhere in the module?",
            "created_at": "2025-08-18T14:56:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/35018#issuecomment-3197279486",
            "id": 3197279486,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35018",
            "node_id": "IC_kwDOAPphoM6-kpz-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3197279486/reactions"
            },
            "updated_at": "2025-08-18T14:58:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3197279486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't quite understand what you mean? For the example in the quote, `_folding_range` relies on `lsp.MultiHandler` to avoid excessive updates to the foldlevels, as they only need to be calculated once after all clients have responded.",
            "created_at": "2025-08-20T06:20:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/35018#issuecomment-3204346992",
            "id": 3204346992,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35018",
            "node_id": "IC_kwDOAPphoM6-_nRw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3204346992/reactions"
            },
            "updated_at": "2025-08-20T06:20:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3204346992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I mean in the Capability base module, a comment explaning the general approach and why \"buffer data instead of client data\" is used, might be worthwhile. Maybe at the top of `runtime/lua/vim/lsp/_capability.lua`.",
            "created_at": "2025-08-20T16:52:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/35018#issuecomment-3207257248",
            "id": 3207257248,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35018",
            "node_id": "IC_kwDOAPphoM6_Ktyg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207257248/reactions"
            },
            "updated_at": "2025-08-20T16:52:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3207257248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35018/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35018/commits",
    "created_at": "2025-07-21T05:28:33Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35018.diff",
    "draft": false,
    "head": {
        "label": "ofseed:lsp-enable-capability",
        "ref": "lsp-enable-capability",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ofseed/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ofseed/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ofseed/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ofseed/neovim/branches{/branch}",
            "clone_url": "https://github.com/ofseed/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ofseed/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ofseed/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ofseed/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ofseed/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ofseed/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ofseed/neovim/contributors",
            "created_at": "2021-11-30T18:13:03Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ofseed/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ofseed/neovim/downloads",
            "events_url": "https://api.github.com/repos/ofseed/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ofseed/neovim/forks",
            "full_name": "ofseed/neovim",
            "git_commits_url": "https://api.github.com/repos/ofseed/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ofseed/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ofseed/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ofseed/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ofseed/neovim/hooks",
            "html_url": "https://github.com/ofseed/neovim",
            "id": 433537354,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ofseed/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ofseed/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ofseed/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ofseed/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ofseed/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ofseed/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ofseed/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ofseed/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGddBSg",
            "notifications_url": "https://api.github.com/repos/ofseed/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ofseed/neovim/pulls{/number}",
            "pushed_at": "2025-08-25T01:50:16Z",
            "releases_url": "https://api.github.com/repos/ofseed/neovim/releases{/id}",
            "size": 329767,
            "ssh_url": "git@github.com:ofseed/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ofseed/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ofseed/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ofseed/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ofseed/neovim/subscription",
            "svn_url": "https://github.com/ofseed/neovim",
            "tags_url": "https://api.github.com/repos/ofseed/neovim/tags",
            "teams_url": "https://api.github.com/repos/ofseed/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ofseed/neovim/git/trees{/sha}",
            "updated_at": "2025-08-24T11:38:14Z",
            "url": "https://api.github.com/repos/ofseed/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
            "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
            "followers_url": "https://api.github.com/users/ofseed/followers",
            "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ofseed",
            "id": 61115159,
            "login": "ofseed",
            "node_id": "MDQ6VXNlcjYxMTE1MTU5",
            "organizations_url": "https://api.github.com/users/ofseed/orgs",
            "received_events_url": "https://api.github.com/users/ofseed/received_events",
            "repos_url": "https://api.github.com/users/ofseed/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ofseed",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35018",
    "id": 2680669042,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35018",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 7015246296,
            "name": "checkhealth",
            "node_id": "LA_kwDOAPphoM8AAAABoiQp2A",
            "url": "https://api.github.com/repos/neovim/neovim/labels/checkhealth"
        }
    ],
    "locked": false,
    "merge_commit_sha": "1b2a6e06640c88ef9df0f433d1d54dce33735b60",
    "merged_at": "2025-08-18T14:57:58Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6fx8Ny",
    "number": 35018,
    "patch_url": "https://github.com/neovim/neovim/pull/35018.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35018/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/f40162ba195e81a6db5bb33863d8b5ff1c4cc805",
    "title": "refactor(lsp): centralized enable/is_enabled strategy",
    "updated_at": "2025-08-20T16:52:33Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35018",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
        "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
        "followers_url": "https://api.github.com/users/ofseed/followers",
        "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
        "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ofseed",
        "id": 61115159,
        "login": "ofseed",
        "node_id": "MDQ6VXNlcjYxMTE1MTU5",
        "organizations_url": "https://api.github.com/users/ofseed/orgs",
        "received_events_url": "https://api.github.com/users/ofseed/received_events",
        "repos_url": "https://api.github.com/users/ofseed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ofseed",
        "user_view_type": "public"
    }
}