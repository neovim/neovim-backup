{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/21310/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21310/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/21310"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/21310"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21310/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a0c433bdf8fffa2c44a30836e4d3218e329f1f21"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5893,
            "forks_count": 5893,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1874,
            "open_issues_count": 1874,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-25T01:17:51Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 309174,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 86583,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-25T02:27:01Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 86583,
            "watchers_count": 86583,
            "web_commit_signoff_required": false
        },
        "sha": "f92aab5f704f6e94e80f2fcbab42acc272a66a29",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Fixes #21309, fixes #18176\r\n\r\n> The idea is to take the injected `@rust` range `{ 3, 4, 5, 0 }` and 'clip' or 'hole punch' the bit that isn't allowed, which splits it into two ranges `{3, 4, 4, 0}`, `{4, 4, 5, 0}`.\r\n\r\nThis is the solution in a nutshell:\r\n\r\n1. ~~Write a centred interval tree in Lua based on the [Wikipedia outline](https://en.wikipedia.org/wiki/Interval_tree).~~ Instead, write a binary search for ranges in a region that overlap with a given range. Regions are sorted.\r\n2. Make it work with the 6-length { start_row, start_col, start_byte, end_row, end_col, end_byte } range format.\r\n3. A function to take any injection range, and intersect it with a list of ranges that overlap with it, producing a list of clipped ranges.\r\n4.  Then, add an argument to `LanguageTree:set_included_regions` to supply the _parent_ LanguageTree's `_regions`.\r\n5. In `set_included_regions` we\r\n    * ~~Flatten the parent's regions into one long region~~ match the child region with the parent region\r\n    * ~~Use that region to construct a new interval tree~~\r\n    * For each of the child's new regions, for each range in it, clip the range against the parent ~~interval tree~~ region.\r\n\r\nAn interval tree or similar structure seems necessary here because when the injection query matches are returned from tree-sitter, they have lost the information about which of the included region(s) they cover. I think you could potentially add something to the TS C API to get information about this (i.e. access to indexes of overlapping regions that TS could store with nodes as it parses) to avoid having to reconstruct the information out of band at a cost. That being said, this seems to work pretty well and does not seem to be a big slowdown. A file with 5000 Rust doc comments is equally (dreadfully) slow with or without this PR.",
    "closed_at": "2025-02-21T09:18:13Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21310#discussion_r1043521324"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1043521324"
                }
            },
            "author_association": "NONE",
            "body": "A couple of questions:\r\n\r\nFirst, is `set_included_regions` public API or not? It has `@private` luadoc so it isn't in the published docs, but it seems that it used to be. The `@private` was added in #20142. As I was writing this I thought I was free to change the signature and I think I might have to backpedal that.\r\n\r\nIf it is a public API...\r\n\r\nSince we're normalising `Range4`s, that means both the setter and the getter have some undocumented functionality. I'd guess that most people would interpret these APIs as documented as a simple getter and setter combo. But that's already not how it works because we are normalising `Range4`s in-place. So `set_included_regions` currently accepts range4 + tsnode, and `included_regions` returns range6 + tsnode. It looks as though range4 support was added in order to implement the `#offset!` directive, and range6's accidentally leaked out (only on child langs). Out [in the wild][] one or two people seem to be using it a little, entirely with tsnodes and assuming tsnodes so far.\r\n\r\nThere are a couple of options to rectify this:\r\n\r\n* normalise everything to range6 and document that you can supply range4s or range6s when setting and that `included_regions` will return range6 always;\r\n* stop normalising in-place, make it behave like a getter/setter for the root, document that _range4_ works for the setter, pretend range6 in the public API never happened and then, for child langs, re-normalise the return value of `included_regions` back to range4.\r\n* some other permutations of those options\r\n\r\nAny ideas? In any case at minimum I will probably normalise tsnodes to range6 internally. We need range6 so we can arbitrarily split them and have a convenient comparison value (the buffer byte offset), and we need uniformity lest the clipping code get really messy,.\r\n\r\n[in the wild]: https://github.com/search?type=code&q=set_included_regions+OR+included_regions+language%3Alua+path%3A%2F%5Elua%2F",
            "commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "created_at": "2022-12-08T15:56:43Z",
            "diff_hunk": "@@ -280,32 +337,22 @@ end\n --- Note: This call invalidates the tree and requires it to be parsed again.\n ---\n ---@private\n----@param regions table List of regions this tree should manage and parse.\n-function LanguageTree:set_included_regions(regions)",
            "html_url": "https://github.com/neovim/neovim/pull/21310#discussion_r1043521324",
            "id": 1043521324,
            "line": 284,
            "node_id": "PRRC_kwDOAPphoM4-Mt8s",
            "original_commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "original_line": 284,
            "original_position": 130,
            "original_start_line": 339,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 130,
            "pull_request_review_id": 1210332458,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1043521324/reactions"
            },
            "side": "LEFT",
            "start_line": 339,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-12-08T15:56:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1043521324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21310#discussion_r1043891779"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1043891779"
                }
            },
            "author_association": "MEMBER",
            "body": "> It has `@private` luadoc so it isn't in the published docs\r\n\r\nthat means it's private\r\n\r\n> Out [in the wild](https://github.com/search?type=code&q=set_included_regions+OR+included_regions+language%3Alua+path%3A%2F%5Elua%2F) one or two people seem to be using it a little,\r\n\r\nnot supported.",
            "commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "created_at": "2022-12-08T22:41:48Z",
            "diff_hunk": "@@ -280,32 +337,22 @@ end\n --- Note: This call invalidates the tree and requires it to be parsed again.\n ---\n ---@private\n----@param regions table List of regions this tree should manage and parse.\n-function LanguageTree:set_included_regions(regions)",
            "html_url": "https://github.com/neovim/neovim/pull/21310#discussion_r1043891779",
            "id": 1043891779,
            "in_reply_to_id": 1043521324,
            "line": 284,
            "node_id": "PRRC_kwDOAPphoM4-OIZD",
            "original_commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "original_line": 284,
            "original_position": 130,
            "original_start_line": 339,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 130,
            "pull_request_review_id": 1210875893,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1043891779/reactions"
            },
            "side": "LEFT",
            "start_line": 339,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-12-08T22:42:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1043891779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21310#discussion_r1044145372"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044145372"
                }
            },
            "author_association": "NONE",
            "body": "I was mainly confused because it didn't have an _underscore prefix like the other private methods. Thanks for clarifying.\r\n",
            "commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "created_at": "2022-12-09T07:02:36Z",
            "diff_hunk": "@@ -280,32 +337,22 @@ end\n --- Note: This call invalidates the tree and requires it to be parsed again.\n ---\n ---@private\n----@param regions table List of regions this tree should manage and parse.\n-function LanguageTree:set_included_regions(regions)",
            "html_url": "https://github.com/neovim/neovim/pull/21310#discussion_r1044145372",
            "id": 1044145372,
            "in_reply_to_id": 1043521324,
            "line": 284,
            "node_id": "PRRC_kwDOAPphoM4-PGTc",
            "original_commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "original_line": 284,
            "original_position": 130,
            "original_start_line": 339,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 130,
            "pull_request_review_id": 1211210778,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044145372/reactions"
            },
            "side": "LEFT",
            "start_line": 339,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-12-09T07:02:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044145372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21310#discussion_r1044415369"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044415369"
                }
            },
            "author_association": "MEMBER",
            "body": "?",
            "commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "created_at": "2022-12-09T12:39:02Z",
            "diff_hunk": "@@ -30,7 +30,7 @@ LanguageTree.__index = LanguageTree\n ---                                This is useful for overriding the built-in\n ---                                runtime file searching for the injection language\n ---                                query per language.\n----@return LanguageTree |LanguageTree| parser object\n+---@return LanguageTree _ |LanguageTree| parser object",
            "html_url": "https://github.com/neovim/neovim/pull/21310#discussion_r1044415369",
            "id": 1044415369,
            "line": 33,
            "node_id": "PRRC_kwDOAPphoM4-QIOJ",
            "original_commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "original_line": 33,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 21,
            "pull_request_review_id": 1211608004,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044415369/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-09T12:39:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044415369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21310#discussion_r1044416879"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044416879"
                }
            },
            "author_association": "MEMBER",
            "body": "might want to use `<pre>` here so that it renders better in :help. Hopefully doxygen can deal with this:\r\n\r\n```\r\n---@return\r\n---        <pre>\r\n---        { [string]: { [number]: Region4[] } }\r\n---           ^ lang      ^ tree_index (sparse)\r\n---        </pre>",
            "commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "created_at": "2022-12-09T12:41:01Z",
            "diff_hunk": "@@ -333,7 +380,10 @@ end\n ---\n --- TODO: Allow for an offset predicate to tailor the injection range\n ---       instead of using the entire nodes range.\n+--\n ---@private\n+---@return { [string]: { [number]: Region4[] } }\n+---           ^ lang      ^ tree_index (sparse)",
            "html_url": "https://github.com/neovim/neovim/pull/21310#discussion_r1044416879",
            "id": 1044416879,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM4-QIlv",
            "original_commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "original_line": 386,
            "original_position": 178,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 178,
            "pull_request_review_id": 1211610239,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044416879/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-09T12:41:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044416879",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21310#discussion_r1044417296"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044417296"
                }
            },
            "author_association": "MEMBER",
            "body": "Needed for lua-language-server to correctly parse this, otherwise it assumes `LanguageTree` is an object of type `|LanguageTree|` (with the pipes), which is breaks parsing since pipes separate multiple optional types:\r\n<img width=\"610\" alt=\"Screenshot 2022-12-09 at 13 41 57\" src=\"https://user-images.githubusercontent.com/2361214/206704866-0957c572-9458-4137-a062-23b16f275d7e.png\">\r\n",
            "commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "created_at": "2022-12-09T12:41:30Z",
            "diff_hunk": "@@ -30,7 +30,7 @@ LanguageTree.__index = LanguageTree\n ---                                This is useful for overriding the built-in\n ---                                runtime file searching for the injection language\n ---                                query per language.\n----@return LanguageTree |LanguageTree| parser object\n+---@return LanguageTree _ |LanguageTree| parser object",
            "html_url": "https://github.com/neovim/neovim/pull/21310#discussion_r1044417296",
            "id": 1044417296,
            "in_reply_to_id": 1044415369,
            "line": 33,
            "node_id": "PRRC_kwDOAPphoM4-QIsQ",
            "original_commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "original_line": 33,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 21,
            "pull_request_review_id": 1211610806,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044417296/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-09T12:42:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044417296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21310#discussion_r1044423226"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044423226"
                }
            },
            "author_association": "MEMBER",
            "body": "Ideally, in addition to an emmyLua type annotation (even at the cost of repeating that information)",
            "commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "created_at": "2022-12-09T12:49:17Z",
            "diff_hunk": "@@ -333,7 +380,10 @@ end\n ---\n --- TODO: Allow for an offset predicate to tailor the injection range\n ---       instead of using the entire nodes range.\n+--\n ---@private\n+---@return { [string]: { [number]: Region4[] } }\n+---           ^ lang      ^ tree_index (sparse)",
            "html_url": "https://github.com/neovim/neovim/pull/21310#discussion_r1044423226",
            "id": 1044423226,
            "in_reply_to_id": 1044416879,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM4-QKI6",
            "original_commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "original_line": 386,
            "original_position": 178,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 178,
            "pull_request_review_id": 1211619630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044423226/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-09T12:49:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044423226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21310#discussion_r1044499803"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21310"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044499803"
                }
            },
            "author_association": "NONE",
            "body": "It's `@private`. It doesn't show up in :help, right?",
            "commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "created_at": "2022-12-09T14:21:13Z",
            "diff_hunk": "@@ -333,7 +380,10 @@ end\n ---\n --- TODO: Allow for an offset predicate to tailor the injection range\n ---       instead of using the entire nodes range.\n+--\n ---@private\n+---@return { [string]: { [number]: Region4[] } }\n+---           ^ lang      ^ tree_index (sparse)",
            "html_url": "https://github.com/neovim/neovim/pull/21310#discussion_r1044499803",
            "id": 1044499803,
            "in_reply_to_id": 1044416879,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM4-Qc1b",
            "original_commit_id": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
            "original_line": 386,
            "original_position": 178,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": 178,
            "pull_request_review_id": 1211735689,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044499803/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-09T14:21:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1044499803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Thank you for tackling this! I believe that correctness > performance here (keeping in mind that performance can be tackled in a follow-up when we can test against regressions).\r\n\r\nSpeaking of: a test would be nice :)\r\n\r\nI also see that you formalized the `Range` parameter. This would be good to have consistently across the treesitter API (where we have a number of range utility functions, some of which are conflated with nodes and should be untangled).",
            "created_at": "2022-12-06T13:05:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1339311370",
            "id": 1339311370,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5P1EUK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339311370/reactions"
            },
            "updated_at": "2022-12-06T13:05:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339311370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I can probably use those three toy languages to make a test for this behaviour. It seems I could modify the CMake TS fetcher to point to a \"vendored\" copy of them, i.e. the grammar.js, src/parser.c etc files somewhere in the tree. Where would they go?\r\n\r\nAnd yeah it's a distinction in name only, Range6 is just number[]. I think you could do better with `@alias Range6 { [1]: number, [2]: number, ... }` but haven't tried yet. Is there a policy on using LuaJIT FFI types to avoid using tables altogether? I think you can get some crazy performance out of that for fixed-size table-twiddling code, but this is largely dynamic sized tables so probably not.",
            "created_at": "2022-12-06T13:30:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1339393237",
            "id": 1339393237,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5P1YTV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339393237/reactions"
            },
            "updated_at": "2022-12-06T13:30:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339393237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I can probably use those three toy languages to make a test for this behaviour. It seems I could modify the CMake TS fetcher to point to a \"vendored\" copy of them, i.e. the grammar.js, src/parser.c etc files somewhere in the tree. Where would they go?\r\n\r\nHmm. That sounds a bit too heavy for a functional test. Can't it be mocked up? We just want to guard against regression.\r\n\r\n> And yeah it's a distinction in name only, Range6 is just number[]. I think you could do better with @alias Range6 { [1]: number, [2]: number, ... } but haven't tried yet. \r\n\r\nSure; it's more about consistent use than any actual class/object structure.\r\n\r\n> Is there a policy on using LuaJIT FFI types to avoid using tables altogether?\r\n\r\nYes: Don't. We only require PUC Lua, not LuaJIT, so you can't assume it's available. (Unfortunately.)\r\n\r\n>  I think you can get some crazy performance out of that for fixed-size table-twiddling code, but this is largely dynamic sized tables so probably not.\r\n\r\nCould be worth benchmarking though, if it's easy to make optional. (Not in this PR, of course.)\r\n",
            "created_at": "2022-12-06T13:33:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1339397038",
            "id": 1339397038,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5P1ZOu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339397038/reactions"
            },
            "updated_at": "2022-12-06T13:33:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339397038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I can't see a mock surviving much in terms of alternative implementations, unless I mock quite deep. Think moving the clipping to iter_matches, if that e.g. fixes some highlight problems for everyone at once. A perennial issue with mocks I suppose. I'll give it a go.",
            "created_at": "2022-12-06T13:52:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1339423196",
            "id": 1339423196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5P1fnc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339423196/reactions"
            },
            "updated_at": "2022-12-06T13:52:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339423196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Understood. Doesn't have to be a full test, and if it doesn't make sense, then that's not a blocker.",
            "created_at": "2022-12-06T13:53:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1339424759",
            "id": 1339424759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5P1f_3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339424759/reactions"
            },
            "updated_at": "2022-12-06T13:53:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1339424759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've realised a couple of things that will probably make the interval tree obsolete. It was fun implementing it, but:\n\n1. Tree sitter set_included_ranges API does not allow overlapping ranges and errors out if you try. It also enforces that the ranges are supplied in order. So we can assume or at least enforce that the ranges are non-overlapping and sorted within each of incoming regions, as there is one tree parse per region and so any overlaps will be caught later anyway. We can also assume, therefore, that this is true of each of the parent's regions as well.\n2. Non-overlapping ranges are easy. You can do a straight O(n) search or, since we are sure they are sorted, a binary search.\n3. The main issue is that the parent regions don't line up with the child regions, ie not every parent region will have injections for every child languagetree. This is fixable by making _get_injections return a sparse structure so the indexes line up. Or something to that effect, like storing a parent region index in there.\n4. Binary searching for overlapping nodes would give us the logarithmic complexity the interval tree is providing, and N would be smaller. Each search would be on the matching parent region, not the full list of parent ranges. I actually think this will be more correct as well, since unrelated ranges should not be causing injections to clip. It would be a pretty convoluted scenario to have overlapping injections for different languages within the same file, but whatever, let people do what they want.",
            "created_at": "2022-12-07T02:21:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1340284305",
            "id": 1340284305,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5P4x2R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1340284305/reactions"
            },
            "updated_at": "2022-12-07T02:22:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1340284305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ok, tests added as promised. I also did implement the binary searching method as described. It doesn't do any sort/overlap checking because why bother if `ts_parser_set_included_ranges` is going to yell about it anyway?\r\n\r\nI have put a copy of `intervaltree.lua` in a gist for later reference. Never know, it might be useful. https://gist.github.com/00326e42c30aca1aefcb8e87158eb502",
            "created_at": "2022-12-07T16:42:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1341254955",
            "id": 1341254955,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5P8e0r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1341254955/reactions"
            },
            "updated_at": "2022-12-07T16:42:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1341254955",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also a little sneak preview before/after clipping ranges in TSHighlighter as well:\r\n\r\n<img width=\"412\" alt=\"Screen Shot 2022-12-08 at 5 48 51 am\" src=\"https://user-images.githubusercontent.com/378760/206269633-b79812cd-3eef-4111-8795-6dd528e52818.png\">\r\n\r\n<img width=\"432\" alt=\"Screen Shot 2022-12-08 at 5 47 45 am\" src=\"https://user-images.githubusercontent.com/378760/206269713-ffbcad3f-c388-4c0f-b611-dde9c7c09e14.png\">\r\n",
            "created_at": "2022-12-07T18:50:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1341421833",
            "id": 1341421833,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5P9HkJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1341421833/reactions"
            },
            "updated_at": "2022-12-07T18:50:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1341421833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * Write a centred interval tree in Lua based on the [Wikipedia outline](https://en.wikipedia.org/wiki/Interval_tree).\r\n\r\nThis is a lot of code for this specialized purpose, maybe we should expose the datastructure to plugins (can be a followup). Meanwhile, do we need direct test coverage of `_clipping.lua` to make the interface a bit clearer / documented?",
            "created_at": "2022-12-08T22:46:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1343470681",
            "id": 1343470681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5QE7xZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1343470681/reactions"
            },
            "updated_at": "2022-12-08T22:46:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1343470681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk I changed the impl to a binary search and deleted the interval tree, should have updated the top comment, but generally yes I think we should make the clipping API public in some capacity. But maybe it should be as an argument to the query iterators, ie you can optionally pass in a region to clip all the matches/captures to. The main reason is that there are some optimisations you can do with it that are probably too finicky for people to figure out themselves.[^1]\r\n\r\nAnd yes it should have its own tests, not only to document the interface but to test some edge cases. Binary searching range overlaps is tricky stuff.\r\n\r\n[^1]: They involve setting lower and upper bounds of the search given the ordering, overlapping and boundary characteristics of the three applications (in increasing order of difficulty: clipped LanguageTree child region, clipped query:iter_captures, query:iter_matches).",
            "created_at": "2022-12-09T06:57:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1343927317",
            "id": 1343927317,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5QGrQV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1343927317/reactions"
            },
            "updated_at": "2022-12-09T06:57:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1343927317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But maybe it should be as an argument to the query iterators, ie you can optionally pass in a region to clip all the matches/captures to.\r\n\r\nThat sounds good. Generally, adding a parameter to generic functions is better than adding new special functions.",
            "created_at": "2022-12-09T12:37:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1344256359",
            "id": 1344256359,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5QH7ln",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1344256359/reactions"
            },
            "updated_at": "2022-12-09T12:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1344256359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's worth investigating whether the PR for extranges can provide infrastructure for this PR. Extranges seem to implement similar functionality as interval trees and could provide functionality like auto-updating/intersection/containment test.\r\n\r\nThe interval tree/extranges functionality would also be needed for locals based highlighting as it would be easy to test for the contained scopes (extranges or interval) and look up definitions in that scope (extmark or point in interval)",
            "created_at": "2022-12-10T09:03:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1345190834",
            "id": 1345190834,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5QLfuy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1345190834/reactions"
            },
            "updated_at": "2022-12-10T09:06:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1345190834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Extranges seem to implement similar functionality as interval trees and could provide functionality like auto-updating/intersection/containment test.\r\n\r\nhttps://github.com/neovim/neovim/pull/13243",
            "created_at": "2022-12-11T02:36:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1345439513",
            "id": 1345439513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5QMccZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1345439513/reactions"
            },
            "updated_at": "2022-12-11T02:36:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1345439513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ok, extranges maybe another time. For now it can clip one range that intersects only a couple of parent ranges in about 600ns when parent_ranges is small. `O(log2(n))` search is pretty flat for a long time (n=#parent_region), only gets to 750ns/op when n=1000. A decent chunk of that will be simply allocating tiny range6 tables, as an equivalent benchmark of just the search operation is about 200ns to 400ns over the same domain. It's probably fast enough for now. I can't tell exactly what's going on in the extranges PR, but to me it appears the idea would be to avoid doing the clipping *again* on every edit, by having the offsets auto-update. You can maybe do that by having the offsets not as raw numbers but as the summation of offsets along the parent path of the range's node in a tree. A bit like the \"range tree\" (no real name for it) based on a B-Tree in this post: https://josephg.com/blog/crdts-go-brrr/ i.e. https://lib.rs/jumprope. As a side note, the editing benchmarks the author used, based on a trace of somebody editing a scientific paper from start to finish, are awesome and it would be great to hook those up to neovim.\r\n\r\nNot that I'm seeing perf issues, but if there's a bottleneck, it is probably that we are throwing out all child parsers' trees and not reusing them for the next TS parse. One upshot of having a basic range clipper is you can repurpose it to ask \"is this tree root contained in this child region?\" Combine that with checking if a tree has been made empty (by a `tree:edit()` call in response to completely deleting its enclosing region), we now have a way to tell which trees can be kept in `_set_included_regions` and which regions to match them up with, striking off that TODO item. So child parsers can now utilise TS incremental parsing. #18107\r\n\r\nI've got this going now. Just gotta shape it up to publish.",
            "created_at": "2022-12-13T12:55:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1348493954",
            "id": 1348493954,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5QYGKC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1348493954/reactions"
            },
            "updated_at": "2022-12-24T18:27:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1348493954",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi! Any progress on this?",
            "created_at": "2023-08-12T02:47:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1675640516",
            "id": 1675640516,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5j4D7E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675640516/reactions"
            },
            "updated_at": "2023-08-12T09:02:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675640516",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22452676?v=4",
                "events_url": "https://api.github.com/users/ayles/events{/privacy}",
                "followers_url": "https://api.github.com/users/ayles/followers",
                "following_url": "https://api.github.com/users/ayles/following{/other_user}",
                "gists_url": "https://api.github.com/users/ayles/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ayles",
                "id": 22452676,
                "login": "ayles",
                "node_id": "MDQ6VXNlcjIyNDUyNjc2",
                "organizations_url": "https://api.github.com/users/ayles/orgs",
                "received_events_url": "https://api.github.com/users/ayles/received_events",
                "repos_url": "https://api.github.com/users/ayles/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ayles/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ayles/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ayles",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Extranges seem to implement similar functionality as interval trees and could provide functionality like auto-updating/intersection/containment test.\r\n> \r\n> #13243\r\n\r\nextranges PR is now ready for testing.",
            "created_at": "2023-09-11T19:15:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-1714441558",
            "id": 1714441558,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM5mME1W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1714441558/reactions"
            },
            "updated_at": "2023-09-11T19:15:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1714441558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This has gone stale since our codebase has evolved a lot since this PR was opened, and a more focused solution is possible now (#32549).\r\n\r\nThank you for all the effort you put into this! I like to think that even though it didn't get merged, it was helpful in shaping subsequent development.",
            "created_at": "2025-02-21T09:18:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-2674009514",
            "id": 2674009514,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM6fYiWq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674009514/reactions"
            },
            "updated_at": "2025-02-21T09:18:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674009514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm glad to have helped!",
            "created_at": "2025-02-22T03:24:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/21310#issuecomment-2675980439",
            "id": 2675980439,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
            "node_id": "IC_kwDOAPphoM6fgDiX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2675980439/reactions"
            },
            "updated_at": "2025-02-22T03:24:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2675980439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21310/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/21310/commits",
    "created_at": "2022-12-06T12:56:58Z",
    "diff_url": "https://github.com/neovim/neovim/pull/21310.diff",
    "draft": false,
    "head": {
        "label": "cormacrelf:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/cormacrelf/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/cormacrelf/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/cormacrelf/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/cormacrelf/neovim/branches{/branch}",
            "clone_url": "https://github.com/cormacrelf/neovim.git",
            "collaborators_url": "https://api.github.com/repos/cormacrelf/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/cormacrelf/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/cormacrelf/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/cormacrelf/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/cormacrelf/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/cormacrelf/neovim/contributors",
            "created_at": "2022-12-06T05:16:10Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/cormacrelf/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/cormacrelf/neovim/downloads",
            "events_url": "https://api.github.com/repos/cormacrelf/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/cormacrelf/neovim/forks",
            "full_name": "cormacrelf/neovim",
            "git_commits_url": "https://api.github.com/repos/cormacrelf/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/cormacrelf/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/cormacrelf/neovim/git/tags{/sha}",
            "git_url": "git://github.com/cormacrelf/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/cormacrelf/neovim/hooks",
            "html_url": "https://github.com/cormacrelf/neovim",
            "id": 574802313,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/cormacrelf/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/cormacrelf/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/cormacrelf/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/cormacrelf/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/cormacrelf/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/cormacrelf/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/cormacrelf/neovim/merges",
            "milestones_url": "https://api.github.com/repos/cormacrelf/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIkLJiQ",
            "notifications_url": "https://api.github.com/repos/cormacrelf/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
                "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
                "followers_url": "https://api.github.com/users/cormacrelf/followers",
                "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
                "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cormacrelf",
                "id": 378760,
                "login": "cormacrelf",
                "node_id": "MDQ6VXNlcjM3ODc2MA==",
                "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
                "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
                "repos_url": "https://api.github.com/users/cormacrelf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cormacrelf",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/cormacrelf/neovim/pulls{/number}",
            "pushed_at": "2022-12-07T16:50:08Z",
            "releases_url": "https://api.github.com/repos/cormacrelf/neovim/releases{/id}",
            "size": 217469,
            "ssh_url": "git@github.com:cormacrelf/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/cormacrelf/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/cormacrelf/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/cormacrelf/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/cormacrelf/neovim/subscription",
            "svn_url": "https://github.com/cormacrelf/neovim",
            "tags_url": "https://api.github.com/repos/cormacrelf/neovim/tags",
            "teams_url": "https://api.github.com/repos/cormacrelf/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/cormacrelf/neovim/git/trees{/sha}",
            "updated_at": "2022-12-06T12:44:19Z",
            "url": "https://api.github.com/repos/cormacrelf/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
            "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
            "followers_url": "https://api.github.com/users/cormacrelf/followers",
            "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
            "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/cormacrelf",
            "id": 378760,
            "login": "cormacrelf",
            "node_id": "MDQ6VXNlcjM3ODc2MA==",
            "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
            "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
            "repos_url": "https://api.github.com/users/cormacrelf/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/cormacrelf",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/21310",
    "id": 1148885539,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21310",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5Eepoj",
    "number": 21310,
    "patch_url": "https://github.com/neovim/neovim/pull/21310.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/21310/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a0c433bdf8fffa2c44a30836e4d3218e329f1f21",
    "title": "treesitter: Clip injected ranges to the parent LanguageTree's ranges",
    "updated_at": "2025-02-22T03:24:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/21310",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/378760?v=4",
        "events_url": "https://api.github.com/users/cormacrelf/events{/privacy}",
        "followers_url": "https://api.github.com/users/cormacrelf/followers",
        "following_url": "https://api.github.com/users/cormacrelf/following{/other_user}",
        "gists_url": "https://api.github.com/users/cormacrelf/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/cormacrelf",
        "id": 378760,
        "login": "cormacrelf",
        "node_id": "MDQ6VXNlcjM3ODc2MA==",
        "organizations_url": "https://api.github.com/users/cormacrelf/orgs",
        "received_events_url": "https://api.github.com/users/cormacrelf/received_events",
        "repos_url": "https://api.github.com/users/cormacrelf/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/cormacrelf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cormacrelf/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/cormacrelf",
        "user_view_type": "public"
    }
}