{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34122/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34122/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34122"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34122"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34122/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/99ad98f33768a37ffbb51c00c2bebf7a61ee08a3"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6102,
            "forks_count": 6102,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1963,
            "open_issues_count": 1963,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-05-27T01:16:46Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 324248,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89828,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-05-27T01:20:04Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89828,
            "watchers_count": 89828,
            "web_commit_signoff_required": false
        },
        "sha": "baabc3598745889b69c9c63934e83cad1df8fa31",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "To increase execution speed of vim.trim for long only whitespace strings it requires to firstly strip whitespace characters with `gsub('^%s+', '')` and only then get match with `match('^.*%S').\r\n\r\nChanges to `vim_spec.lua` were made to cover more cases and fix wrong usage of `assert` instead of `eq`.\r\n\r\nBenchmarks can be found here https://github.com/neovim/neovim/pull/34122#issuecomment-2902291021\r\n\r\nCloses #34097 \r\n",
    "closed_at": "2025-05-26T21:41:13Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2102394177"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102394177"
                }
            },
            "author_association": "MEMBER",
            "body": "`shared.lua` is special because the test runner uses it with a limited Nvim (`nvim -ll`) which doesn't have some modules like `vim.re`.\r\n\r\n    /Users/runner/work/neovim/neovim/runtime/lua/vim/shared.lua:796: attempt to index field 're' (a nil value)\r\n\r\nto workaround this, try:\r\n\r\n```suggestion\r\nlocal _trim_pattern = vim.re and vim.re.compile('%s* {(%s* %S+)*}') or nil\r\n```\r\n\r\nthen below,\r\n\r\n    return _trim_pattern and _trim_pattern:match(s) or (s:match('^%s*(.*%S)') or '')\r\n\r\nalternatively, could make the `vim.re` module available by updating `src/nvim/CMakeLists.txt` (I think?). @bfredl @zeertzjq any reason `vim.re` can't be available for `nvim -ll` ?",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-22T12:05:15Z",
            "diff_hunk": "@@ -793,6 +793,7 @@ function vim._list_remove(t, first, last)\n   end\n end\n \n+local _trim_pattern = vim.re.compile('%s* {(%s* %S+)*}')",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2102394177",
            "id": 2102394177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59T_1B",
            "original_commit_id": "72805079c46c27708b1e85bdd43115df6cc559c9",
            "original_line": 796,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2860964855,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102394177/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-22T12:05:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102394177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2102395035"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102395035"
                }
            },
            "author_association": "MEMBER",
            "body": "will it return empty string if there's no match? or is `or ''` needed?",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-22T12:05:44Z",
            "diff_hunk": "@@ -801,7 +802,7 @@ end\n ---@return string String with whitespace removed from its beginning and end\n function vim.trim(s)\n   vim.validate('s', s, 'string')\n-  return s:match('^%s*(.*%S)') or ''\n+  return _trim_pattern:match(s)",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2102395035",
            "id": 2102395035,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59UACb",
            "original_commit_id": "72805079c46c27708b1e85bdd43115df6cc559c9",
            "original_line": 805,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2860966285,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102395035/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-22T12:05:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102395035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2102405176"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102405176"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk Maybe then using lua loops with string.byte which is proposed by @glepnir in the issue is a better solution? And it is as fast if not faster than lpeg?",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-22T12:11:28Z",
            "diff_hunk": "@@ -793,6 +793,7 @@ function vim._list_remove(t, first, last)\n   end\n end\n \n+local _trim_pattern = vim.re.compile('%s* {(%s* %S+)*}')",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2102405176",
            "id": 2102405176,
            "in_reply_to_id": 2102394177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59UCg4",
            "original_commit_id": "72805079c46c27708b1e85bdd43115df6cc559c9",
            "original_line": 796,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2860981981,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102405176/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-22T12:11:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102405176",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2102408717"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102408717"
                }
            },
            "author_association": "MEMBER",
            "body": "If it's not a lot of code, then sure. But we probably can make `vim.re` available.",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-22T12:13:15Z",
            "diff_hunk": "@@ -793,6 +793,7 @@ function vim._list_remove(t, first, last)\n   end\n end\n \n+local _trim_pattern = vim.re.compile('%s* {(%s* %S+)*}')",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2102408717",
            "id": 2102408717,
            "in_reply_to_id": 2102394177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59UDYN",
            "original_commit_id": "72805079c46c27708b1e85bdd43115df6cc559c9",
            "original_line": 796,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2860987766,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102408717/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-22T12:13:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102408717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2102409905"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102409905"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes. `{(%s* %S+)*}`.\r\n`{}` - means return capture, not index\r\n`()*` returns 0 or as many as possible matches. And if there is 0 it will return empty string, previsously trimming whitespaces with `^%s*`.",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-22T12:13:50Z",
            "diff_hunk": "@@ -801,7 +802,7 @@ end\n ---@return string String with whitespace removed from its beginning and end\n function vim.trim(s)\n   vim.validate('s', s, 'string')\n-  return s:match('^%s*(.*%S)') or ''\n+  return _trim_pattern:match(s)",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2102409905",
            "id": 2102409905,
            "in_reply_to_id": 2102395035,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59UDqx",
            "original_commit_id": "72805079c46c27708b1e85bdd43115df6cc559c9",
            "original_line": 805,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2860989612,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102409905/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-22T12:19:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102409905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2102415432"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102415432"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In any case https://github.com/neovim/neovim/blob/27bb814cb1b70b4e041eae22665bc93350f4fe56/test/functional/lua/vim_spec.lua#L712-L730 \r\nShould be updated to include empty string for tests.",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-22T12:16:58Z",
            "diff_hunk": "@@ -801,7 +802,7 @@ end\n ---@return string String with whitespace removed from its beginning and end\n function vim.trim(s)\n   vim.validate('s', s, 'string')\n-  return s:match('^%s*(.*%S)') or ''\n+  return _trim_pattern:match(s)",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2102415432",
            "id": 2102415432,
            "in_reply_to_id": 2102395035,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59UFBI",
            "original_commit_id": "72805079c46c27708b1e85bdd43115df6cc559c9",
            "original_line": 805,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2860998849,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102415432/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-22T12:16:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102415432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2102980947"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102980947"
                }
            },
            "author_association": "MEMBER",
            "body": "The [\"conditional gsub\"](https://github.com/neovim/neovim/pull/34122#issuecomment-2901559179) solution is not a lot of code. It also outperforms lpeg approach in the other edge case of the very wide string that doesn't need trimming.\r\n\r\nThe downside of the `vim.re` approach is that it will always source `require('vim.re')` on startup, which has not quite negligible effect. On my machine a `nvim --clean -u init-vimre.lua` with 'init-vimre.lua' containing single line `local _trim_pattern = vim.re.compile('%s* {(%s* %S+)*}')` adds about 0.7ms to startup compared to overall about 10.3 ms of \"Embedded\" part of startup.",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-22T16:35:39Z",
            "diff_hunk": "@@ -793,6 +793,7 @@ function vim._list_remove(t, first, last)\n   end\n end\n \n+local _trim_pattern = vim.re.compile('%s* {(%s* %S+)*}')",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2102980947",
            "id": 2102980947,
            "in_reply_to_id": 2102394177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59WPFT",
            "original_commit_id": "72805079c46c27708b1e85bdd43115df6cc559c9",
            "original_line": 796,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2861900823,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102980947/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-22T16:35:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2102980947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2103636692"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2103636692"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Forgive me if I'm wrong but isn't this test only checking if `q[2]` is false or not, which means it never fails? Shouldn't it be `assert(q[2] == trim(q[1])`.",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-23T01:23:55Z",
            "diff_hunk": "@@ -719,6 +719,10 @@ describe('lua stdlib', function()\n       { ' b  ', 'b' },\n       { '\\tc', 'c' },\n       { 'r\\n', 'r' },\n+      { '', '' },\n+      { ' \\t \\n', '' },\n+      -- double whitespace <C-k>IS\n+      { '　f　', 'f' },\n     }\n \n     for _, q in ipairs(trims) do",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2103636692",
            "id": 2103636692,
            "line": 726,
            "node_id": "PRRC_kwDOAPphoM59YvLU",
            "original_commit_id": "97df4987fd2ba853af50010ef214d3996533c3d2",
            "original_line": 726,
            "original_position": 10,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": 8,
            "pull_request_review_id": 2862927983,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2103636692/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-23T01:23:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2103636692",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2103824005"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2103824005"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@lucario387 you can overload easily in lua. So I haven't looked deeply into this tests \"trusting\" previous contributors. \r\nMaybe it should be `eq`? But I assume that is `assert` from busted lib, so I'm not sure.",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-23T05:21:03Z",
            "diff_hunk": "@@ -719,6 +719,10 @@ describe('lua stdlib', function()\n       { ' b  ', 'b' },\n       { '\\tc', 'c' },\n       { 'r\\n', 'r' },\n+      { '', '' },\n+      { ' \\t \\n', '' },\n+      -- double whitespace <C-k>IS\n+      { '　f　', 'f' },\n     }\n \n     for _, q in ipairs(trims) do",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2103824005",
            "id": 2103824005,
            "in_reply_to_id": 2103636692,
            "line": 726,
            "node_id": "PRRC_kwDOAPphoM59Zc6F",
            "original_commit_id": "97df4987fd2ba853af50010ef214d3996533c3d2",
            "original_line": 726,
            "original_position": 10,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": 8,
            "pull_request_review_id": 2863214178,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2103824005/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-23T06:32:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2103824005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2104069514"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2104069514"
                }
            },
            "author_association": "MEMBER",
            "body": "Is less `<=32` safe to do here? I'm assuming that covers `\\n\\t` too?",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-23T08:16:06Z",
            "diff_hunk": "@@ -801,7 +801,34 @@ end\n ---@return string String with whitespace removed from its beginning and end\n function vim.trim(s)\n   vim.validate('s', s, 'string')\n-  return s:match('^%s*(.*%S)') or ''\n+  local len = #s\n+  local byte = string.byte\n+\n+  if len == 0 then\n+    return ''\n+  end\n+\n+  -- `s` is already trimmed\n+  if byte(s, 1) > 32 and byte(s, len) > 32 then\n+    return s\n+  end\n+\n+  local start = 1\n+  while start <= len and byte(s, start) <= 32 do",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2104069514",
            "id": 2104069514,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59aY2K",
            "original_commit_id": "61ac6e473b6e397631c526a3187e8d6a69ee1081",
            "original_line": 817,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2863604444,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2104069514/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-23T08:16:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2104069514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2104102238"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2104102238"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes, everything below 32 is special (non printable) character and 32 is a space.\r\n\r\nIt passes tests.\r\n",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-23T08:32:19Z",
            "diff_hunk": "@@ -801,7 +801,34 @@ end\n ---@return string String with whitespace removed from its beginning and end\n function vim.trim(s)\n   vim.validate('s', s, 'string')\n-  return s:match('^%s*(.*%S)') or ''\n+  local len = #s\n+  local byte = string.byte\n+\n+  if len == 0 then\n+    return ''\n+  end\n+\n+  -- `s` is already trimmed\n+  if byte(s, 1) > 32 and byte(s, len) > 32 then\n+    return s\n+  end\n+\n+  local start = 1\n+  while start <= len and byte(s, start) <= 32 do",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2104102238",
            "id": 2104102238,
            "in_reply_to_id": 2104069514,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59ag1e",
            "original_commit_id": "61ac6e473b6e397631c526a3187e8d6a69ee1081",
            "original_line": 817,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2863655233,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2104102238/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-23T15:43:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2104102238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2105772165"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105772165"
                }
            },
            "author_association": "MEMBER",
            "body": "Can you add a comment here explaining why we don't use just `match`. This I'll prevent anyone changing this in the future.",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-24T09:38:48Z",
            "diff_hunk": "@@ -801,7 +801,7 @@ end\n ---@return string String with whitespace removed from its beginning and end\n function vim.trim(s)\n   vim.validate('s', s, 'string')\n-  return s:match('^%s*(.*%S)') or ''\n+  return s:gsub('^%s+', ''):match('^.*%S') or ''",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2105772165",
            "id": 2105772165,
            "line": 806,
            "node_id": "PRRC_kwDOAPphoM59g4iF",
            "original_commit_id": "a034d14ce8b4bf399a8e7be530384bcc5e4637db",
            "original_line": 806,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 7,
            "pull_request_review_id": 2866243917,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105772165/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-24T09:39:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105772165",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2105777887"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105777887"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done.",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-24T10:08:54Z",
            "diff_hunk": "@@ -801,7 +801,7 @@ end\n ---@return string String with whitespace removed from its beginning and end\n function vim.trim(s)\n   vim.validate('s', s, 'string')\n-  return s:match('^%s*(.*%S)') or ''\n+  return s:gsub('^%s+', ''):match('^.*%S') or ''",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2105777887",
            "id": 2105777887,
            "in_reply_to_id": 2105772165,
            "line": 806,
            "node_id": "PRRC_kwDOAPphoM59g57f",
            "original_commit_id": "a034d14ce8b4bf399a8e7be530384bcc5e4637db",
            "original_line": 806,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 7,
            "pull_request_review_id": 2866250188,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105777887/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-24T10:08:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105777887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34122#discussion_r2105780980"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34122"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105780980"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe also mention `gsub('%s+$', '')` case (as it is not intuitive)?\r\n\r\n```suggestion\r\n  -- `match('^%s*(.*%S)')` is slow for long whitespace strings\r\n  -- `gsub('%s+$', '')` is slow for strings with many whitespace characters\r\n  -- See PR #34122 for more details\r\n```",
            "commit_id": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
            "created_at": "2025-05-24T10:25:49Z",
            "diff_hunk": "@@ -801,7 +801,9 @@ end\n ---@return string String with whitespace removed from its beginning and end\n function vim.trim(s)\n   vim.validate('s', s, 'string')\n-  return s:match('^%s*(.*%S)') or ''\n+  -- `s:match('^%s*(.*%S)')` is slow for long whitespace strings,\n+  -- so we are forced to split it into to parts to prevent this",
            "html_url": "https://github.com/neovim/neovim/pull/34122#discussion_r2105780980",
            "id": 2105780980,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM59g6r0",
            "original_commit_id": "7af0ea0a4bb0bbb333e8681e1f80f5bfd228e00c",
            "original_line": 805,
            "original_position": 6,
            "original_start_line": 804,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2866253307,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105780980/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-24T10:25:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2105780980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl @zeertzjq \r\nIs using this version better, than dealing with `vim.re` in `shared.lua`?\r\n```lua\r\nfunction vim.trim(s)\r\n  vim.validate('s', s, 'string')\r\n  local byte, sub = string.byte, string.sub\r\n  local len = #s\r\n\r\n  if len == 0 then return '' end\r\n\r\n  if byte(s, 1) > 32 and byte(s, len) > 32 then return s end\r\n\r\n  local start = 1\r\n  while start <= len and byte(s, start) <= 32 do\r\n    start = start + 1\r\n  end\r\n\r\n  if start > len then return '' end\r\n\r\n  local stop = len\r\n  while stop >= start and byte(s, stop) <= 32 do\r\n    stop = stop - 1\r\n  end\r\n\r\n  return sub(s, start, stop)\r\nend\r\n```",
            "created_at": "2025-05-22T12:53:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901129742",
            "id": 2901129742,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s67oO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901129742/reactions"
            },
            "updated_at": "2025-05-22T15:31:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901129742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "discussed on matrix, likely will enable `vim.re` for shared.lua.",
            "created_at": "2025-05-22T13:37:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901263934",
            "id": 2901263934,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s7cY-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901263934/reactions"
            },
            "updated_at": "2025-05-22T13:37:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901263934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I am late to the party, but the following approach is more performant than current one and compares okay to compiled pattern for bad case:\r\n\r\n```lua\r\nlocal trim4 = function(s)\r\n  return (s:gsub('^%s+', ''):gsub('%s+$', ''))\r\nend\r\n```\r\n\r\nOutput of benchmarking from [this comment](https://github.com/neovim/neovim/issues/34097#issuecomment-2893936586):\r\n\r\n```\r\nTime: 220.193 ms -- current\r\nTime: 0.013 ms   -- lpeg\r\nTime: 0.006 ms   -- @glepnir's mega performant\r\nTime: 0.024 ms   -- two gsub\r\n----------------------\r\nTime: 0.001 ms\r\nTime: 0.001 ms\r\nTime: 0.001 ms\r\nTime: 0.001 ms\r\n----------------------\r\nTime: 0.050 ms\r\nTime: 0.014 ms\r\nTime: 0.006 ms\r\nTime: 0.024 ms\r\n----------------------\r\n```",
            "created_at": "2025-05-22T13:59:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901340047",
            "id": 2901340047,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s7u-P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901340047/reactions"
            },
            "updated_at": "2025-05-22T14:01:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901340047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@echasnovski Benchmarks are incomplete. And your version degrades (not that much so) with long non-whitespace strings (I think I have tested something similar, and because I wasn't aware of `shared.lua` limitations I had come up with that solution). Try to replace spaces in str1 to any char). And current `string.match()` is good for long non-whitespace strings.\r\n\r\nglepnir version behaves the best with any input. And it doesn't require changes to `shared.lua`. Maybe it is best solution?\r\n",
            "created_at": "2025-05-22T14:41:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901492216",
            "id": 2901492216,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s8UH4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901492216/reactions"
            },
            "updated_at": "2025-05-22T14:43:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901492216",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I know it's not too frequent but the string.byte version doesn't trim double-width whitespace.\r\n\r\n\r\n```lua\r\n\r\nlocal function byte_trim(s)\r\n  vim.validate('s', s, 'string')\r\n  local byte, sub = string.byte, string.sub\r\n  local len = #s\r\n\r\n  if len == 0 then return '' end\r\n\r\n  if byte(s, 1) > 32 and byte(s, len) > 32 then return s end\r\n\r\n  local start = 1\r\n  while start <= len and byte(s, start) <= 32 do\r\n    start = start + 1\r\n  end\r\n\r\n  if start > len then return '' end\r\n\r\n  local stop = len\r\n  while stop >= start and byte(s, stop) <= 32 do\r\n    stop = stop - 1\r\n  end\r\n\r\n  return sub(s, start, stop)\r\nend\r\n\r\nlocal double_width_string = '　　　　　　　'\r\n\r\nlocal byte_trim_string = byte_trim(double_width_string) -- returns '　　　　　　　'\r\nlocal current_trim = vim.trim(double_width_string) -- returns ''\r\n```",
            "created_at": "2025-05-22T14:43:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901500408",
            "id": 2901500408,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s8WH4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901500408/reactions"
            },
            "updated_at": "2025-05-22T14:43:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901500408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@lucario387 good catch.\r\nSeems like a blocker for `string.byte` version. Maybe it can be adjusted? Are there many \"double\" whitespaces chars?",
            "created_at": "2025-05-22T14:48:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901516386",
            "id": 2901516386,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s8aBi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901516386/reactions"
            },
            "updated_at": "2025-05-22T14:49:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901516386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There is also\r\n```lua\r\nlocal trim5 = function(s)\r\n  return (s:gsub('^%s+', ''):match('.*%S') or '')\r\nend\r\n```\r\nWhich is good for any input. But i'm not sure how lua/luajit optimizes this. Is there two allocations? Can gc be a problem for long strings?",
            "created_at": "2025-05-22T14:59:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901554643",
            "id": 2901554643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s8jXT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901554643/reactions"
            },
            "updated_at": "2025-05-22T14:59:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901554643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Maybe it can be adjusted? Are there many \"double\" whitespaces chars?\r\n\r\nI'm very much unsure since for double-width whitespace in Japanese code yields `string.len(\"　\") = 3`, and the first byte is `227`. Not sure about Chinese and Korean variants (if they do exist as separate codes). But then that means monkey patching for specific case that could've been covered by the lpeg pattern or double gsub version",
            "created_at": "2025-05-22T15:00:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901557867",
            "id": 2901557867,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s8kJr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901557867/reactions"
            },
            "updated_at": "2025-05-22T15:00:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901557867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @echasnovski Benchmarks are incomplete. And your version degrades (not that much so) with long non-whitespace strings (I think I have tested something similar, and because I wasn't aware of `shared.lua` limitations I had come up with that solution). Try to replace spaces in str1 to any char). And current `string.match()` is good for long non-whitespace strings.\r\n\r\nYes, indeed it does. This is easily fixable, though:\r\n\r\n```lua\r\nlocal trim4 = function(s)\r\n  s = s:sub(1, 1):match('%s') and s:gsub('^%s+', '') or s\r\n  s = s:sub(-1, -1):match('%s') and s:gsub('%s+$', '') or s\r\n  return s\r\nend\r\n```\r\n\r\nBenchmarks for previous cases are the same. Here are benchmarks for the string that contains the same number of `x` as the first \"long\" whitespace string:\r\n\r\n```\r\nTime: 0.003 ms -- current\r\nTime: 0.015 ms -- lpeg\r\nTime: 0.001 ms -- @glepnir's mega performant\r\nTime: 0.001 ms -- two conditional gsub\r\n```\r\n\r\n**Edit**: seems to also be better than [this version](https://github.com/neovim/neovim/pull/34122#issuecomment-2901554643) on `str3` and \"many x\" strings. Usually having several non-anchored quantified patterns adds performance problems.",
            "created_at": "2025-05-22T15:00:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901559179",
            "id": 2901559179,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s8keL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901559179/reactions"
            },
            "updated_at": "2025-05-22T15:03:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901559179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@echasnovski \r\n> Yes, indeed it does. This is easily fixable, though:\r\n\r\nAnd what if there are one space at each side? Still have the same issue of possible double allocations for long strings. Then gc could be a problem more than trim itself.",
            "created_at": "2025-05-22T15:12:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901600753",
            "id": 2901600753,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s8unx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901600753/reactions"
            },
            "updated_at": "2025-05-22T15:12:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901600753",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> And what if there are one space at each side? Still have the same issue of possible double allocations for long strings. Then gc could be a problem more than trim itself.\r\n\r\nI don't think this degree of performance optimization is needed here. There is an example of extreme degradation with current approach (wide whitespace only string), the \"conditional gsub\" approach fixes it. While at the same time being more performant than lpeg one for the wide string without leading or trailing spaces.\r\n\r\nIf there is benchmarking approach for the problem you describe, then we can find a better solution.",
            "created_at": "2025-05-22T15:21:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901646237",
            "id": 2901646237,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s85ud",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901646237/reactions"
            },
            "updated_at": "2025-05-22T15:21:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901646237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I don't think this degree of performance optimization is needed here. \r\n\r\nI do agree that this microseconds are pointless chase. \r\n\r\n",
            "created_at": "2025-05-22T15:29:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2901671137",
            "id": 2901671137,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s8_zh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901671137/reactions"
            },
            "updated_at": "2025-05-22T15:29:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2901671137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@echasnovski I have updated benchmarks for all worst cases. Your implementation of gsub gsub degrade poorly for strings with big whitespace gaps in it.\r\n\r\n```lua\r\nlocal function benchmark(func, ...)\r\n   func(...)\r\n   local start = os.clock()\r\n   func(...)\r\n   local elapsed = os.clock() - start\r\n\r\n   return string.format(\"%.3f ms\", elapsed * 1000)\r\nend\r\n\r\nlocal funcs = {}\r\n\r\nfunction funcs.match_trim(str)\r\n   return str:match('^%s*(.*%S)') or ''\r\nend\r\n\r\nlocal trim_pattern = vim.re.compile(\"%s* {(%s* %S+)*}\")\r\nfunction funcs.lpeg_trim(s)\r\n   return trim_pattern:match(s)\r\nend\r\n\r\nfunction funcs.gsub_gsub_trim(s)\r\n   return (s:gsub('^%s+', ''):gsub('%s+$', ''))\r\nend\r\n\r\nfunction funcs.gsub_match_trim(s)\r\n   return (s:gsub('^%s+', ''):match('.*%S') or '')\r\nend\r\n\r\nfuncs.nitpicking_gsub_gsub = function(s)\r\n  s = s:sub(1, 1):match('%s') and s:gsub('^%s+', '') or s\r\n  s = s:sub(-1, -1):match('%s') and s:gsub('%s+$', '') or s\r\n  return s\r\nend\r\n\r\nlocal strings = {}\r\n\r\nstrings.short = \" \\n \\t hello \\r \\v\"\r\nstrings.ten_thousand_whiter\nstrings.ten_thousand_chars = \"\"\r\nstrings.ten_thousand_gaps = \" aa \"\r\nstrings.ten_thousand_chars_with_spaces =  \"  \"\r\n\r\nfor k, v in pairs(funcs) do\r\n   print(k .. \":\")\r\n   for ks, s in pairs(strings) do\r\n      print(\"  \" .. ks .. \" - \" .. benchmark(v, s))\r\n   end\r\n   print(\" \")\r\nend\r\n```\r\n\r\nFor this improved benchmarks gsub_match is a clear winner. Not sure why in this results lpeg behave a little worse.\r\n```\r\nlpeg_trim:\r\n  ten_thousand_gaps - 0.032 ms\r\n  ten_thousand_white - 0.030 ms\r\n  ten_thousand_chars_with_spaces - 0.031 ms\r\n  short - 0.001 ms\r\n  ten_thousand_chars - 0.030 ms\r\n\r\nmatch_trim:\r\n  ten_thousand_gaps - 0.006 ms\r\n  ten_thousand_white - 280.662 ms\r\n  ten_thousand_chars_with_spaces - 0.002 ms\r\n  short - 0.001 ms\r\n  ten_thousand_chars - 0.002 ms\r\n\r\ngsub_gsub_trim:\r\n  ten_thousand_gaps - 141.485 ms\r\n  ten_thousand_white - 0.013 ms\r\n  ten_thousand_chars_with_spaces - 0.051 ms\r\n  short - 0.001 ms\r\n  ten_thousand_chars - 0.050 ms\r\n\r\ngsub_match_trim:\r\n  ten_thousand_gaps - 0.002 ms\r\n  ten_thousand_white - 0.013 ms\r\n  ten_thousand_chars_with_spaces - 0.003 ms\r\n  short - 0.001 ms\r\n  ten_thousand_chars - 0.002 ms\r\n\r\nnitpicking_gsub_gsub:\r\n  ten_thousand_gaps - 142.876 ms\r\n  ten_thousand_white - 0.014 ms\r\n  ten_thousand_chars_with_spaces - 0.053 ms\r\n  short - 0.001 ms\r\n  ten_thousand_chars - 0.001 ms\r\n```",
            "created_at": "2025-05-22T18:18:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2902160833",
            "id": 2902160833,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s-3XB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2902160833/reactions"
            },
            "updated_at": "2025-05-22T18:18:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2902160833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @echasnovski I have updated benchmarks for all worst cases. Your implementation of gsub gsub degrade poorly for strings with big whitespace gaps in it.\r\n\r\nYeah, I can reproduce the same tendency of results. Nice find!\r\n\r\nI also tested if this is indeed due to memory allocations for temporary string after `gsub()`, but it doesn't look like. The similar approach, but only with `:find()` shows similar performance.\r\n\r\nThe issue seems to be indeed the `'%s+$'` anchoring. Probably LuaJIT implementation has to do some backtracking which is costly in this case. Don't know.\r\n\r\nHere is a bit more copy-paste-friendly version of the benchmarking code:\r\n\r\n<details><summary>Code</summary>\r\n\r\n```lua\r\n-- Functions ------------------------------------------------------------------\r\nlocal funcs = {}\r\n\r\nfunction funcs.match_trim(str) return str:match('^%s*(.*%S)') or '' end\r\n\r\nlocal trim_pattern = vim.re.compile('%s* {(%s* %S+)*}')\r\nfunction funcs.lpeg_trim(s) return trim_pattern:match(s) end\r\n\r\nfunction funcs.gsub_gsub_trim(s) return (s:gsub('^%s+', ''):gsub('%s+$', '')) end\r\n\r\nfunction funcs.gsub_match_trim(s) return (s:gsub('^%s+', ''):match('.*%S') or '') end\r\n\r\nfunction funcs.nitpicking_gsub_gsub(s)\r\n  s = s:sub(1, 1):match('%s') and s:gsub('^%s+', '', 1) or s\r\n  s = s:sub(-1, -1):match('%s') and s:gsub('%s+$', '', 1) or s\r\n  return s\r\nend\r\n\r\nfunction funcs.find_sub(s)\r\n  local _, from = s:find('^%s*')\r\n  local to = s:find('%s*$')\r\n  return s:sub(from + 1, to - 1)\r\nend\r\n\r\nlocal func_names = vim.tbl_keys(funcs)\r\ntable.sort(func_names)\r\n\r\n-- Strings --------------------------------------------------------------------\r\nlocal strings = {}\r\n\r\nstrings.short = ' \\n \\t hello \\r \\v'\r\nstrings.ten_thousand_white = string.rep(' ', 10000)\r\nstrings.ten_thousand_chars = string.rep('a', 10000)\r\nstrings.ten_thousand_gaps = ' a' .. string.rep(' ', 9998) .. 'a '\r\nstrings.ten_thousand_chars_with_spaces = ' ' .. string.rep('a', 10000) .. ' '\r\n\r\nlocal string_names = vim.tbl_keys(strings)\r\ntable.sort(string_names)\r\n\r\n-- Benchmark ------------------------------------------------------------------\r\nlocal n = 10\r\n\r\nlocal function benchmark(func, ...)\r\n  func(...)\r\n  local start = os.clock()\r\n  for _ = 1, n do\r\n    func(...)\r\n  end\r\n  local elapsed = (os.clock() - start) / n\r\n\r\n  return string.format('%.3f ms', elapsed * 1000)\r\nend\r\n\r\nfor _, f_name in ipairs(func_names) do\r\n  local f = funcs[f_name]\r\n  print(f_name .. ':')\r\n  for _, s_name in ipairs(string_names) do\r\n    print('  ' .. s_name .. ' - ' .. benchmark(f, strings[s_name]))\r\n  end\r\n  print(' ')\r\nend\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>My output</summary>\r\n\r\n```\r\nfind_sub:\r\n  short - 0.001 ms\r\n  ten_thousand_chars - 0.183 ms\r\n  ten_thousand_chars_with_spaces - 0.196 ms\r\n  ten_thousand_gaps - 274.004 ms\r\n  ten_thousand_white - 0.058 ms\r\n\r\ngsub_gsub_trim:\r\n  short - 0.000 ms\r\n  ten_thousand_chars - 0.076 ms\r\n  ten_thousand_chars_with_spaces - 0.065 ms\r\n  ten_thousand_gaps - 274.388 ms\r\n  ten_thousand_white - 0.026 ms\r\n\r\ngsub_match_trim:\r\n  short - 0.000 ms\r\n  ten_thousand_chars - 0.005 ms\r\n  ten_thousand_chars_with_spaces - 0.003 ms\r\n  ten_thousand_gaps - 0.003 ms\r\n  ten_thousand_white - 0.026 ms\r\n\r\nlpeg_trim:\r\n  short - 0.000 ms\r\n  ten_thousand_chars - 0.017 ms\r\n  ten_thousand_chars_with_spaces - 0.017 ms\r\n  ten_thousand_gaps - 0.014 ms\r\n  ten_thousand_white - 0.014 ms\r\n\r\nmatch_trim:\r\n  short - 0.000 ms\r\n  ten_thousand_chars - 0.003 ms\r\n  ten_thousand_chars_with_spaces - 0.003 ms\r\n  ten_thousand_gaps - 0.003 ms\r\n  ten_thousand_white - 278.231 ms\r\n\r\nnitpicking_gsub_gsub:\r\n  short - 0.001 ms\r\n  ten_thousand_chars - 0.000 ms\r\n  ten_thousand_chars_with_spaces - 0.065 ms\r\n  ten_thousand_gaps - 274.169 ms\r\n  ten_thousand_white - 0.026 ms\r\n```\r\n\r\n</details>",
            "created_at": "2025-05-22T19:12:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2902291021",
            "id": 2902291021,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6s_XJN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2902291021/reactions"
            },
            "updated_at": "2025-05-22T19:12:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2902291021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@lucario387\r\nI have done manual testing of `test/functional/lua/vim_spec.lua`. You were right `assert` in the tests always true, because it checks only if first arg is truthy ( not nil ).\r\nBut at the same time you have confused me - pattern `%s` doesn't respect \"IDEOGRAPHIC SPACE\" char either. And current `vim.trim` doesn't trim it. So using loops and string.byte is viable solution and behaves the same as trimming with lua patterns `%s` and `%S`.\r\nMaybe in modern UTF-8 era it should detect such chars, but it is out of scope of this implementation.\r\n",
            "created_at": "2025-05-23T05:57:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2903352714",
            "id": 2903352714,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tDaWK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2903352714/reactions"
            },
            "updated_at": "2025-05-23T15:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2903352714",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> But at the same time you have confused me - pattern %s doesn't respect \"IDEOGRAPHIC SPACE\" char either\n\n\nI found the same issue too. On my linux setup the double width whitespace was consumed while today I tested on windows and nothing was trimmed, leading to the assert check weirdness. Will test again on linux later today.\n\nVery sorry for the wrong callout.🙇",
            "created_at": "2025-05-23T11:28:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2904126461",
            "id": 2904126461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tGXP9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904126461/reactions"
            },
            "updated_at": "2025-05-23T11:28:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904126461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The issue seems to be indeed the `'%s+$'` anchoring. Probably LuaJIT implementation has to do some backtracking which is costly in this case. Don't know.\r\n\r\nI was curious and did little digging. It is a known issue present both in LuaJIT and plain Lua: LuaJIT/LuaJIT#118. Probably won't be solved.\r\n\r\nThe `s:gsub('^%s+', ''):match('^.*%S') or ''` approach still seems to be the best here. Especially since it is documented to use 'Lua pattern \"%s\"' as the definition of whitespace, so taking \"IDEOGRAPHIC SPACE\" into account might be a bit extra here.",
            "created_at": "2025-05-23T11:45:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2904161829",
            "id": 2904161829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tGf4l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904161829/reactions"
            },
            "updated_at": "2025-05-23T11:45:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904161829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The `s:gsub('^%s+', ''):match('^.*%S') or ''` approach still seems to be the best here.\r\n\r\na 2-line change is welcome. a 30-line change is not, especially when the difference is not significant.",
            "created_at": "2025-05-23T14:06:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2904544146",
            "id": 2904544146,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tH9OS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904544146/reactions"
            },
            "updated_at": "2025-05-23T14:06:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904544146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk Is there any reason for this? There are much larger functions in `shared.lua`. If you have cheated and created one line function previously which could be really slow for some input, it is definitely hard to \"change\" it without not \"adding\" more lines.\r\n\r\nIf core team is fine with the `gsub`+`match` solution I can revert to it, but let me still remind that unnecessary allocation is not good too.\r\n\r\nSo I will wait for your final word. I don't mind any solution, because they are definitely much better than current one.",
            "created_at": "2025-05-23T14:36:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2904642136",
            "id": 2904642136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tIVJY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904642136/reactions"
            },
            "updated_at": "2025-05-23T15:43:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904642136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there any reason for this? There are much larger functions in `shared.lua`\r\n\r\nif those functions could be achieved with 80% less code at a 5% perf cost, then they wouldn't be like that.",
            "created_at": "2025-05-23T14:54:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2904709997",
            "id": 2904709997,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tIltt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904709997/reactions"
            },
            "updated_at": "2025-05-23T14:54:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904709997",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@echasnovski @justinmk my apology, `%s` is only 9,10,11,12,13 and 32 bytes. So vim.trim() shouldn't trim any other char below 32 byte and glipnir implementation was wrong from the start.\r\nReverting to `gsub`+`match`.",
            "created_at": "2025-05-23T15:37:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2904857182",
            "id": 2904857182,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tJJpe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904857182/reactions"
            },
            "updated_at": "2025-05-23T15:37:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2904857182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the benchmarking code is probably worth including in `benchmark/`. And also a comment explaining why `vim.trim` is implemented the way it is.",
            "created_at": "2025-05-23T17:20:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2905199791",
            "id": 2905199791,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tKdSv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2905199791/reactions"
            },
            "updated_at": "2025-05-23T17:20:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2905199791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@lewis6991 I have added benchmark file. But how it is working? I don't see any of it in CI, is it only for local benchmarking?\r\nIs it measured and cached results from release to release?\r\n\r\nAs of some comment: I have not the best English, so not sure if I want to add broken English into source code. And I'm not even sure what it should mention, but the branch is open for editing.",
            "created_at": "2025-05-24T08:29:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2906628331",
            "id": 2906628331,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tP6Dr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2906628331/reactions"
            },
            "updated_at": "2025-05-24T08:29:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2906628331",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "yes at the moment it's just for local use. We don't run any of it in CI.",
            "created_at": "2025-05-24T09:37:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/34122#issuecomment-2906704517",
            "id": 2906704517,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
            "node_id": "IC_kwDOAPphoM6tQMqF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2906704517/reactions"
            },
            "updated_at": "2025-05-24T09:37:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2906704517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34122/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34122/commits",
    "created_at": "2025-05-22T10:10:19Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34122.diff",
    "draft": false,
    "head": {
        "label": "monkoose:trim",
        "ref": "trim",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/monkoose/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/monkoose/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/monkoose/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/monkoose/neovim/branches{/branch}",
            "clone_url": "https://github.com/monkoose/neovim.git",
            "collaborators_url": "https://api.github.com/repos/monkoose/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/monkoose/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/monkoose/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/monkoose/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/monkoose/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/monkoose/neovim/contributors",
            "created_at": "2025-05-22T09:48:13Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/monkoose/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/monkoose/neovim/downloads",
            "events_url": "https://api.github.com/repos/monkoose/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/monkoose/neovim/forks",
            "full_name": "monkoose/neovim",
            "git_commits_url": "https://api.github.com/repos/monkoose/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/monkoose/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/monkoose/neovim/git/tags{/sha}",
            "git_url": "git://github.com/monkoose/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/monkoose/neovim/hooks",
            "html_url": "https://github.com/monkoose/neovim",
            "id": 988266550,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/monkoose/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/monkoose/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/monkoose/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/monkoose/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/monkoose/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/monkoose/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/monkoose/neovim/merges",
            "milestones_url": "https://api.github.com/repos/monkoose/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOufANg",
            "notifications_url": "https://api.github.com/repos/monkoose/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
                "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
                "followers_url": "https://api.github.com/users/monkoose/followers",
                "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
                "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monkoose",
                "id": 6261276,
                "login": "monkoose",
                "node_id": "MDQ6VXNlcjYyNjEyNzY=",
                "organizations_url": "https://api.github.com/users/monkoose/orgs",
                "received_events_url": "https://api.github.com/users/monkoose/received_events",
                "repos_url": "https://api.github.com/users/monkoose/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monkoose",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/monkoose/neovim/pulls{/number}",
            "pushed_at": "2025-05-24T12:07:41Z",
            "releases_url": "https://api.github.com/repos/monkoose/neovim/releases{/id}",
            "size": 314420,
            "ssh_url": "git@github.com:monkoose/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/monkoose/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/monkoose/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/monkoose/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/monkoose/neovim/subscription",
            "svn_url": "https://github.com/monkoose/neovim",
            "tags_url": "https://api.github.com/repos/monkoose/neovim/tags",
            "teams_url": "https://api.github.com/repos/monkoose/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/monkoose/neovim/git/trees{/sha}",
            "updated_at": "2025-05-22T09:48:13Z",
            "url": "https://api.github.com/repos/monkoose/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
            "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
            "followers_url": "https://api.github.com/users/monkoose/followers",
            "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
            "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/monkoose",
            "id": 6261276,
            "login": "monkoose",
            "node_id": "MDQ6VXNlcjYyNjEyNzY=",
            "organizations_url": "https://api.github.com/users/monkoose/orgs",
            "received_events_url": "https://api.github.com/users/monkoose/received_events",
            "repos_url": "https://api.github.com/users/monkoose/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/monkoose",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34122",
    "id": 2536715701,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34122",
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        }
    ],
    "locked": false,
    "merge_commit_sha": "5e64d92411737a8fe0ea44faebf986944bfea8ea",
    "merged_at": "2025-05-26T21:41:13Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6XMzW1",
    "number": 34122,
    "patch_url": "https://github.com/neovim/neovim/pull/34122.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34122/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/99ad98f33768a37ffbb51c00c2bebf7a61ee08a3",
    "title": "perf(runtime): vim.trim for long only whitespace strings",
    "updated_at": "2025-05-26T21:41:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34122",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6261276?v=4",
        "events_url": "https://api.github.com/users/monkoose/events{/privacy}",
        "followers_url": "https://api.github.com/users/monkoose/followers",
        "following_url": "https://api.github.com/users/monkoose/following{/other_user}",
        "gists_url": "https://api.github.com/users/monkoose/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/monkoose",
        "id": 6261276,
        "login": "monkoose",
        "node_id": "MDQ6VXNlcjYyNjEyNzY=",
        "organizations_url": "https://api.github.com/users/monkoose/orgs",
        "received_events_url": "https://api.github.com/users/monkoose/received_events",
        "repos_url": "https://api.github.com/users/monkoose/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/monkoose/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/monkoose/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/monkoose",
        "user_view_type": "public"
    }
}