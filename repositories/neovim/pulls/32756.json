{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32756/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32756/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32756"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32756"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32756/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32756"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d4eb15641144a50725efe46d24573318e42a64a7"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5926,
            "forks_count": 5926,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1872,
            "open_issues_count": 1872,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-03-11T01:51:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 311541,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 87036,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-03-11T02:33:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 87036,
            "watchers_count": 87036,
            "web_commit_signoff_required": false
        },
        "sha": "debabaf884fc26e9dc257aa5b62581d3846f80f1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "On each UIEnter/UILeave event, check to make sure there is at is a TUI client connected to Nvim's stdout. If none are, then the osc52 flag is cleared so that Nvim does not attempt to use the OSC 52 clipboard provider.\r\n\r\nThere are still some edge cases possible here. For example, if the original TUI (the one that started the embedded Nvim process) detaches after a second TUI client connects, Nvim will _not_ use the second TUI. The Nvim core process depends on its stdout being connected to the tty of the TUI, which is not the case when a TUI client connects remotely. This has the potential to cause some confusion when users wonder why some terminal features aren't working.\r\n\r\nSolving this use case is much more involved as it will require changes to the UI protocol. That is out of scope for this change, which simply attempts to address the issue of Nvim trying to use OSC 52 when no TUIs are attached at all.\r\n\r\nRef: #28792",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32756#discussion_r1985037702"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32756"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985037702"
                }
            },
            "author_association": "MEMBER",
            "body": "the PR description mentions \"check to make sure there is at is a TUI client connected to Nvim's stdout\", but actually here we are checking specifically for chan=1.\r\n\r\nShould the description say something like \"check that a TUI is attached on channel 1\"?",
            "commit_id": "d4eb15641144a50725efe46d24573318e42a64a7",
            "created_at": "2025-03-07T13:11:13Z",
            "diff_hunk": "@@ -1,37 +1,72 @@\n-local tty = false\n-for _, ui in ipairs(vim.api.nvim_list_uis()) do\n-  if ui.chan == 1 and ui.stdout_tty then\n-    tty = true\n-    break\n-  end\n-end\n-\n--- Do not query when any of the following is true:\n---   * TUI is not attached\n---   * OSC 52 support is explicitly disabled via g:termfeatures\n---   * Using a badly behaved terminal\n-if\n-  not tty\n-  or (vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false)\n-  or vim.env.TERM_PROGRAM == 'Apple_Terminal'\n-then\n-  return\n-end\n-\n-require('vim.termcap').query('Ms', function(cap, found, seq)\n-  if not found then\n-    return\n-  end\n-\n-  assert(cap == 'Ms')\n-\n-  -- If the terminal reports a sequence other than OSC 52 for the Ms capability\n-  -- then ignore it. We only support OSC 52 (for now)\n-  if not seq or not seq:match('^\\027%]52') then\n-    return\n-  end\n-\n-  local termfeatures = vim.g.termfeatures or {}\n-  termfeatures.osc52 = true\n-  vim.g.termfeatures = termfeatures\n-end)\n+--- @class (private) TermFeatures\n+--- @field osc52 boolean?\n+\n+local id = vim.api.nvim_create_augroup('nvim.osc52', { clear = true })\n+vim.api.nvim_create_autocmd('UIEnter', {\n+  group = id,\n+  desc = 'Enable OSC 52 feature flag if a supporting TUI is attached',\n+  callback = function()\n+    -- If OSC 52 is explicitly disabled by the user then don't do anything\n+    if vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false then\n+      return\n+    end\n+\n+    local tty = false\n+    for _, ui in ipairs(vim.api.nvim_list_uis()) do\n+      if ui.chan == 1 and ui.stdout_tty then\n+        tty = true\n+        break\n+      end\n+    end\n+\n+    -- Do not query when any of the following is true:\n+    --   * No TUI is attached\n+    --   * Using a badly behaved terminal\n+    if not tty or vim.env.TERM_PROGRAM == 'Apple_Terminal' then\n+      local termfeatures = vim.g.termfeatures or {} ---@type TermFeatures\n+      termfeatures.osc52 = nil\n+      vim.g.termfeatures = termfeatures\n+      return\n+    end\n+\n+    require('vim.termcap').query('Ms', function(cap, found, seq)\n+      if not found then\n+        return\n+      end\n+\n+      assert(cap == 'Ms')\n+\n+      -- If the terminal reports a sequence other than OSC 52 for the Ms capability\n+      -- then ignore it. We only support OSC 52 (for now)\n+      if not seq or not seq:match('^\\027%]52') then\n+        return\n+      end\n+\n+      local termfeatures = vim.g.termfeatures or {} ---@type TermFeatures\n+      termfeatures.osc52 = true\n+      vim.g.termfeatures = termfeatures\n+    end)\n+  end,\n+})\n+\n+vim.api.nvim_create_autocmd('UILeave', {\n+  group = id,\n+  desc = 'Reset OSC 52 feature flag if no TUIs are attached',\n+  callback = function()\n+    -- If OSC 52 is explicitly disabled by the user then don't do anything\n+    if vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false then\n+      return\n+    end\n+\n+    -- If no TUIs are attached then reset the OSC 52 term features flag\n+    for _, ui in ipairs(vim.api.nvim_list_uis()) do\n+      if ui.chan == 1 and ui.stdout_tty then",
            "html_url": "https://github.com/neovim/neovim/pull/32756#discussion_r1985037702",
            "id": 1985037702,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM52UUWG",
            "original_commit_id": "ac6ca097ea16b66f5578aec3a852b87721383d34",
            "original_line": 63,
            "original_position": 100,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 2667213915,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32756",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985037702/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-07T13:11:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985037702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32756#discussion_r1985039340"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32756"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985039340"
                }
            },
            "author_association": "MEMBER",
            "body": "this comment sounds more broad than the condition below which checks for chan==1",
            "commit_id": "d4eb15641144a50725efe46d24573318e42a64a7",
            "created_at": "2025-03-07T13:12:25Z",
            "diff_hunk": "@@ -1,37 +1,72 @@\n-local tty = false\n-for _, ui in ipairs(vim.api.nvim_list_uis()) do\n-  if ui.chan == 1 and ui.stdout_tty then\n-    tty = true\n-    break\n-  end\n-end\n-\n--- Do not query when any of the following is true:\n---   * TUI is not attached\n---   * OSC 52 support is explicitly disabled via g:termfeatures\n---   * Using a badly behaved terminal\n-if\n-  not tty\n-  or (vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false)\n-  or vim.env.TERM_PROGRAM == 'Apple_Terminal'\n-then\n-  return\n-end\n-\n-require('vim.termcap').query('Ms', function(cap, found, seq)\n-  if not found then\n-    return\n-  end\n-\n-  assert(cap == 'Ms')\n-\n-  -- If the terminal reports a sequence other than OSC 52 for the Ms capability\n-  -- then ignore it. We only support OSC 52 (for now)\n-  if not seq or not seq:match('^\\027%]52') then\n-    return\n-  end\n-\n-  local termfeatures = vim.g.termfeatures or {}\n-  termfeatures.osc52 = true\n-  vim.g.termfeatures = termfeatures\n-end)\n+--- @class (private) TermFeatures\n+--- @field osc52 boolean?\n+\n+local id = vim.api.nvim_create_augroup('nvim.osc52', { clear = true })\n+vim.api.nvim_create_autocmd('UIEnter', {\n+  group = id,\n+  desc = 'Enable OSC 52 feature flag if a supporting TUI is attached',\n+  callback = function()\n+    -- If OSC 52 is explicitly disabled by the user then don't do anything\n+    if vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false then\n+      return\n+    end\n+\n+    local tty = false\n+    for _, ui in ipairs(vim.api.nvim_list_uis()) do\n+      if ui.chan == 1 and ui.stdout_tty then\n+        tty = true\n+        break\n+      end\n+    end\n+\n+    -- Do not query when any of the following is true:\n+    --   * No TUI is attached\n+    --   * Using a badly behaved terminal\n+    if not tty or vim.env.TERM_PROGRAM == 'Apple_Terminal' then\n+      local termfeatures = vim.g.termfeatures or {} ---@type TermFeatures\n+      termfeatures.osc52 = nil\n+      vim.g.termfeatures = termfeatures\n+      return\n+    end\n+\n+    require('vim.termcap').query('Ms', function(cap, found, seq)\n+      if not found then\n+        return\n+      end\n+\n+      assert(cap == 'Ms')\n+\n+      -- If the terminal reports a sequence other than OSC 52 for the Ms capability\n+      -- then ignore it. We only support OSC 52 (for now)\n+      if not seq or not seq:match('^\\027%]52') then\n+        return\n+      end\n+\n+      local termfeatures = vim.g.termfeatures or {} ---@type TermFeatures\n+      termfeatures.osc52 = true\n+      vim.g.termfeatures = termfeatures\n+    end)\n+  end,\n+})\n+\n+vim.api.nvim_create_autocmd('UILeave', {\n+  group = id,\n+  desc = 'Reset OSC 52 feature flag if no TUIs are attached',\n+  callback = function()\n+    -- If OSC 52 is explicitly disabled by the user then don't do anything\n+    if vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false then\n+      return\n+    end\n+\n+    -- If no TUIs are attached then reset the OSC 52 term features flag",
            "html_url": "https://github.com/neovim/neovim/pull/32756#discussion_r1985039340",
            "id": 1985039340,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM52UUvs",
            "original_commit_id": "ac6ca097ea16b66f5578aec3a852b87721383d34",
            "original_line": 61,
            "original_position": 98,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 2667216650,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32756",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985039340/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-07T13:12:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985039340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32756#discussion_r1985376200"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32756"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985376200"
                }
            },
            "author_association": "MEMBER",
            "body": "The `chan == 1` check is probably not necessary actually, I think only `stdout_tty` is relevant here?",
            "commit_id": "d4eb15641144a50725efe46d24573318e42a64a7",
            "created_at": "2025-03-07T16:40:50Z",
            "diff_hunk": "@@ -1,37 +1,72 @@\n-local tty = false\n-for _, ui in ipairs(vim.api.nvim_list_uis()) do\n-  if ui.chan == 1 and ui.stdout_tty then\n-    tty = true\n-    break\n-  end\n-end\n-\n--- Do not query when any of the following is true:\n---   * TUI is not attached\n---   * OSC 52 support is explicitly disabled via g:termfeatures\n---   * Using a badly behaved terminal\n-if\n-  not tty\n-  or (vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false)\n-  or vim.env.TERM_PROGRAM == 'Apple_Terminal'\n-then\n-  return\n-end\n-\n-require('vim.termcap').query('Ms', function(cap, found, seq)\n-  if not found then\n-    return\n-  end\n-\n-  assert(cap == 'Ms')\n-\n-  -- If the terminal reports a sequence other than OSC 52 for the Ms capability\n-  -- then ignore it. We only support OSC 52 (for now)\n-  if not seq or not seq:match('^\\027%]52') then\n-    return\n-  end\n-\n-  local termfeatures = vim.g.termfeatures or {}\n-  termfeatures.osc52 = true\n-  vim.g.termfeatures = termfeatures\n-end)\n+--- @class (private) TermFeatures\n+--- @field osc52 boolean?\n+\n+local id = vim.api.nvim_create_augroup('nvim.osc52', { clear = true })\n+vim.api.nvim_create_autocmd('UIEnter', {\n+  group = id,\n+  desc = 'Enable OSC 52 feature flag if a supporting TUI is attached',\n+  callback = function()\n+    -- If OSC 52 is explicitly disabled by the user then don't do anything\n+    if vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false then\n+      return\n+    end\n+\n+    local tty = false\n+    for _, ui in ipairs(vim.api.nvim_list_uis()) do\n+      if ui.chan == 1 and ui.stdout_tty then\n+        tty = true\n+        break\n+      end\n+    end\n+\n+    -- Do not query when any of the following is true:\n+    --   * No TUI is attached\n+    --   * Using a badly behaved terminal\n+    if not tty or vim.env.TERM_PROGRAM == 'Apple_Terminal' then\n+      local termfeatures = vim.g.termfeatures or {} ---@type TermFeatures\n+      termfeatures.osc52 = nil\n+      vim.g.termfeatures = termfeatures\n+      return\n+    end\n+\n+    require('vim.termcap').query('Ms', function(cap, found, seq)\n+      if not found then\n+        return\n+      end\n+\n+      assert(cap == 'Ms')\n+\n+      -- If the terminal reports a sequence other than OSC 52 for the Ms capability\n+      -- then ignore it. We only support OSC 52 (for now)\n+      if not seq or not seq:match('^\\027%]52') then\n+        return\n+      end\n+\n+      local termfeatures = vim.g.termfeatures or {} ---@type TermFeatures\n+      termfeatures.osc52 = true\n+      vim.g.termfeatures = termfeatures\n+    end)\n+  end,\n+})\n+\n+vim.api.nvim_create_autocmd('UILeave', {\n+  group = id,\n+  desc = 'Reset OSC 52 feature flag if no TUIs are attached',\n+  callback = function()\n+    -- If OSC 52 is explicitly disabled by the user then don't do anything\n+    if vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false then\n+      return\n+    end\n+\n+    -- If no TUIs are attached then reset the OSC 52 term features flag\n+    for _, ui in ipairs(vim.api.nvim_list_uis()) do\n+      if ui.chan == 1 and ui.stdout_tty then",
            "html_url": "https://github.com/neovim/neovim/pull/32756#discussion_r1985376200",
            "id": 1985376200,
            "in_reply_to_id": 1985037702,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM52Vm_I",
            "original_commit_id": "ac6ca097ea16b66f5578aec3a852b87721383d34",
            "original_line": 63,
            "original_position": 100,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 2667799851,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32756",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985376200/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-07T16:40:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985376200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32756#discussion_r1985443358"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32756"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985443358"
                }
            },
            "author_association": "MEMBER",
            "body": "Updated to say that it only checks for a TUI connected to Nvim's stdout",
            "commit_id": "d4eb15641144a50725efe46d24573318e42a64a7",
            "created_at": "2025-03-07T17:33:09Z",
            "diff_hunk": "@@ -1,37 +1,72 @@\n-local tty = false\n-for _, ui in ipairs(vim.api.nvim_list_uis()) do\n-  if ui.chan == 1 and ui.stdout_tty then\n-    tty = true\n-    break\n-  end\n-end\n-\n--- Do not query when any of the following is true:\n---   * TUI is not attached\n---   * OSC 52 support is explicitly disabled via g:termfeatures\n---   * Using a badly behaved terminal\n-if\n-  not tty\n-  or (vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false)\n-  or vim.env.TERM_PROGRAM == 'Apple_Terminal'\n-then\n-  return\n-end\n-\n-require('vim.termcap').query('Ms', function(cap, found, seq)\n-  if not found then\n-    return\n-  end\n-\n-  assert(cap == 'Ms')\n-\n-  -- If the terminal reports a sequence other than OSC 52 for the Ms capability\n-  -- then ignore it. We only support OSC 52 (for now)\n-  if not seq or not seq:match('^\\027%]52') then\n-    return\n-  end\n-\n-  local termfeatures = vim.g.termfeatures or {}\n-  termfeatures.osc52 = true\n-  vim.g.termfeatures = termfeatures\n-end)\n+--- @class (private) TermFeatures\n+--- @field osc52 boolean?\n+\n+local id = vim.api.nvim_create_augroup('nvim.osc52', { clear = true })\n+vim.api.nvim_create_autocmd('UIEnter', {\n+  group = id,\n+  desc = 'Enable OSC 52 feature flag if a supporting TUI is attached',\n+  callback = function()\n+    -- If OSC 52 is explicitly disabled by the user then don't do anything\n+    if vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false then\n+      return\n+    end\n+\n+    local tty = false\n+    for _, ui in ipairs(vim.api.nvim_list_uis()) do\n+      if ui.chan == 1 and ui.stdout_tty then\n+        tty = true\n+        break\n+      end\n+    end\n+\n+    -- Do not query when any of the following is true:\n+    --   * No TUI is attached\n+    --   * Using a badly behaved terminal\n+    if not tty or vim.env.TERM_PROGRAM == 'Apple_Terminal' then\n+      local termfeatures = vim.g.termfeatures or {} ---@type TermFeatures\n+      termfeatures.osc52 = nil\n+      vim.g.termfeatures = termfeatures\n+      return\n+    end\n+\n+    require('vim.termcap').query('Ms', function(cap, found, seq)\n+      if not found then\n+        return\n+      end\n+\n+      assert(cap == 'Ms')\n+\n+      -- If the terminal reports a sequence other than OSC 52 for the Ms capability\n+      -- then ignore it. We only support OSC 52 (for now)\n+      if not seq or not seq:match('^\\027%]52') then\n+        return\n+      end\n+\n+      local termfeatures = vim.g.termfeatures or {} ---@type TermFeatures\n+      termfeatures.osc52 = true\n+      vim.g.termfeatures = termfeatures\n+    end)\n+  end,\n+})\n+\n+vim.api.nvim_create_autocmd('UILeave', {\n+  group = id,\n+  desc = 'Reset OSC 52 feature flag if no TUIs are attached',\n+  callback = function()\n+    -- If OSC 52 is explicitly disabled by the user then don't do anything\n+    if vim.g.termfeatures ~= nil and vim.g.termfeatures.osc52 == false then\n+      return\n+    end\n+\n+    -- If no TUIs are attached then reset the OSC 52 term features flag",
            "html_url": "https://github.com/neovim/neovim/pull/32756#discussion_r1985443358",
            "id": 1985443358,
            "in_reply_to_id": 1985039340,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM52V3Ye",
            "original_commit_id": "ac6ca097ea16b66f5578aec3a852b87721383d34",
            "original_line": 61,
            "original_position": 98,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 2667914053,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32756",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985443358/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-07T17:33:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1985443358",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Problem:\r\n\r\nNvim tries to use OSC 52 even when no TUIs are attached.\r\n\r\nSolution:\r\n\r\nOn each UIEnter/UILeave event, check that there is a TUI client connected to Nvim's stdout.\r\n\r\nAnalysis:\r\n\r\n...",
            "created_at": "2025-03-07T13:07:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/32756#issuecomment-2706416268",
            "id": 2706416268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32756",
            "node_id": "IC_kwDOAPphoM6hUKKM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706416268/reactions"
            },
            "updated_at": "2025-03-07T13:07:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706416268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32756/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32756/commits",
    "created_at": "2025-03-06T17:31:35Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32756.diff",
    "draft": false,
    "head": {
        "label": "gpanders:push-tvwtwzvkwqyp",
        "ref": "push-tvwtwzvkwqyp",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2025-03-10T20:30:05Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 304204,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2025-01-11T19:57:11Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "d4eb15641144a50725efe46d24573318e42a64a7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32756",
    "id": 2376869074,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32756",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "752b0fd5df23ab45252fa28b00c3c294bc731a7b",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 226,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 30,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-03-10T21:49:00Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM6NrCTS",
    "number": 32756,
    "patch_url": "https://github.com/neovim/neovim/pull/32756.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32756/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d4eb15641144a50725efe46d24573318e42a64a7",
    "title": "fix: update osc52 termfeatures flag on UIEnter/UILeave",
    "updated_at": "2025-03-10T19:00:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32756",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    }
}