{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32303/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32303/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32303"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32303"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32303/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32303"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/166aeca9030fd8c7c60549a135a875409688f931"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": {
        "commit_message": "Problem:  Cannot control cursor positioning of getchar().\r\nSolution: Add \"cursor\" flag to {opts}, with possible values \"hide\",\r\n          \"keep\" and \"msg\".\r\n\r\nrelated: vim/vim#10603\r\ncloses: vim/vim#16569\r\n\r\nhttps://github.com/vim/vim/commit/edf0f7db28f87611368e158210e58ed30f673098",
        "commit_title": "vim-patch:9.1.1070: Cannot control cursor positioning of getchar() (#32303)",
        "enabled_by": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        },
        "merge_method": "squash"
    },
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5841,
            "forks_count": 5841,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1854,
            "open_issues_count": 1854,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-04T02:07:35Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 307298,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85859,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-04T02:07:39Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85859,
            "watchers_count": 85859,
            "web_commit_signoff_required": false
        },
        "sha": "87e806186c721f12c338af86677b6d1e6e2fa44a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "#### vim-patch:9.1.1070: Cannot control cursor positioning of getchar()\r\n\r\nProblem:  Cannot control cursor positioning of getchar().\r\nSolution: Add \"cursor\" flag to {opts}, with possible values \"hide\",\r\n          \"keep\" and \"msg\".\r\n\r\nrelated: vim/vim#10603\r\ncloses: vim/vim#16569\r\n\r\nhttps://github.com/vim/vim/commit/edf0f7db28f87611368e158210e58ed30f673098",
    "closed_at": "2025-02-03T00:09:04Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32303#discussion_r1938614923"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32303"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938614923"
                }
            },
            "author_association": "MEMBER",
            "body": "Testing e32f2b4606f0 locally, it seems `sleep` is necessary to get the desired cursor \"keep\" effect, even when `getchar(-1, #{cursor: 'keep'})` is called from a mapping.\r\n\r\nWould it make sense for `cursor='keep'` to take care of that internally? Else we should probably document it.",
            "commit_id": "166aeca9030fd8c7c60549a135a875409688f931",
            "created_at": "2025-02-02T23:31:35Z",
            "diff_hunk": "@@ -0,0 +1,92 @@\n+local n = require('test.functional.testnvim')()\n+local Screen = require('test.functional.ui.screen')\n+\n+local clear = n.clear\n+local exec = n.exec\n+local feed = n.feed\n+local async_command = n.async_meths.nvim_command\n+\n+describe('getchar()', function()\n+  before_each(clear)\n+\n+  -- oldtest: Test_getchar_cursor_position()\n+  it('cursor positioning', function()\n+    local screen = Screen.new(40, 6)\n+    exec([[\n+      call setline(1, ['foobar', 'foobar', 'foobar'])\n+      call cursor(3, 6)\n+    ]])\n+    screen:expect([[\n+      foobar                                  |*2\n+      fooba^r                                  |\n+      {1:~                                       }|*2\n+                                              |\n+    ]])\n+\n+    -- Default: behaves like \"msg\" when immediately after printing a message,\n+    -- even if :sleep moved cursor elsewhere.\n+    for _, cmd in ipairs({\n+      'echo 1234 | call getchar()',\n+      'echo 1234 | call getchar(-1, {})',\n+      \"echo 1234 | call getchar(-1, #{cursor: 'msg'})\",\n+      'echo 1234 | sleep 10m | call getchar()',\n+      'echo 1234 | sleep 10m | call getchar(-1, {})',\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'msg'})\",\n+    }) do\n+      async_command(cmd)\n+      screen:expect([[\n+        foobar                                  |*3\n+        {1:~                                       }|*2\n+        1234^                                    |\n+      ]])\n+      feed('a')\n+      screen:expect([[\n+        foobar                                  |*2\n+        fooba^r                                  |\n+        {1:~                                       }|*2\n+        1234                                    |\n+      ]])\n+    end\n+\n+    -- Default: behaves like \"keep\" when not immediately after printing a message.\n+    for _, cmd in ipairs({\n+      'call getchar()',\n+      'call getchar(-1, {})',\n+      \"call getchar(-1, #{cursor: 'keep'})\",\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'keep'})\",",
            "html_url": "https://github.com/neovim/neovim/pull/32303#discussion_r1938614923",
            "id": 1938614923,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjOqL",
            "original_commit_id": "e32f2b4606f0825bf1ed5401d54f6821d542e34f",
            "original_line": 56,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/vimscript/getchar_spec.lua",
            "position": null,
            "pull_request_review_id": 2588677269,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32303",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938614923/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-02T23:31:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938614923",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32303#discussion_r1938615197"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32303"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938615197"
                }
            },
            "author_association": "MEMBER",
            "body": "What mapping exactly did you test? This achieves the desired \"keep\" effect for me:\r\n```vim\r\n:nnoremap <F2> <Cmd>call getchar(-1, #{cursor: 'keep'})<CR>\r\n```",
            "commit_id": "166aeca9030fd8c7c60549a135a875409688f931",
            "created_at": "2025-02-02T23:32:38Z",
            "diff_hunk": "@@ -0,0 +1,92 @@\n+local n = require('test.functional.testnvim')()\n+local Screen = require('test.functional.ui.screen')\n+\n+local clear = n.clear\n+local exec = n.exec\n+local feed = n.feed\n+local async_command = n.async_meths.nvim_command\n+\n+describe('getchar()', function()\n+  before_each(clear)\n+\n+  -- oldtest: Test_getchar_cursor_position()\n+  it('cursor positioning', function()\n+    local screen = Screen.new(40, 6)\n+    exec([[\n+      call setline(1, ['foobar', 'foobar', 'foobar'])\n+      call cursor(3, 6)\n+    ]])\n+    screen:expect([[\n+      foobar                                  |*2\n+      fooba^r                                  |\n+      {1:~                                       }|*2\n+                                              |\n+    ]])\n+\n+    -- Default: behaves like \"msg\" when immediately after printing a message,\n+    -- even if :sleep moved cursor elsewhere.\n+    for _, cmd in ipairs({\n+      'echo 1234 | call getchar()',\n+      'echo 1234 | call getchar(-1, {})',\n+      \"echo 1234 | call getchar(-1, #{cursor: 'msg'})\",\n+      'echo 1234 | sleep 10m | call getchar()',\n+      'echo 1234 | sleep 10m | call getchar(-1, {})',\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'msg'})\",\n+    }) do\n+      async_command(cmd)\n+      screen:expect([[\n+        foobar                                  |*3\n+        {1:~                                       }|*2\n+        1234^                                    |\n+      ]])\n+      feed('a')\n+      screen:expect([[\n+        foobar                                  |*2\n+        fooba^r                                  |\n+        {1:~                                       }|*2\n+        1234                                    |\n+      ]])\n+    end\n+\n+    -- Default: behaves like \"keep\" when not immediately after printing a message.\n+    for _, cmd in ipairs({\n+      'call getchar()',\n+      'call getchar(-1, {})',\n+      \"call getchar(-1, #{cursor: 'keep'})\",\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'keep'})\",",
            "html_url": "https://github.com/neovim/neovim/pull/32303#discussion_r1938615197",
            "id": 1938615197,
            "in_reply_to_id": 1938614923,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjOud",
            "original_commit_id": "e32f2b4606f0825bf1ed5401d54f6821d542e34f",
            "original_line": 56,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/vimscript/getchar_spec.lua",
            "position": null,
            "pull_request_review_id": 2588677521,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32303",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938615197/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-02T23:33:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938615197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32303#discussion_r1938620110"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32303"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938620110"
                }
            },
            "author_association": "MEMBER",
            "body": "I tested this, and it seems to be working now...\r\n\r\n    nnoremap s <cmd>echo getchar(-1, #{cursor: 'keep'})<cr>\r\n\r\n",
            "commit_id": "166aeca9030fd8c7c60549a135a875409688f931",
            "created_at": "2025-02-02T23:43:35Z",
            "diff_hunk": "@@ -0,0 +1,92 @@\n+local n = require('test.functional.testnvim')()\n+local Screen = require('test.functional.ui.screen')\n+\n+local clear = n.clear\n+local exec = n.exec\n+local feed = n.feed\n+local async_command = n.async_meths.nvim_command\n+\n+describe('getchar()', function()\n+  before_each(clear)\n+\n+  -- oldtest: Test_getchar_cursor_position()\n+  it('cursor positioning', function()\n+    local screen = Screen.new(40, 6)\n+    exec([[\n+      call setline(1, ['foobar', 'foobar', 'foobar'])\n+      call cursor(3, 6)\n+    ]])\n+    screen:expect([[\n+      foobar                                  |*2\n+      fooba^r                                  |\n+      {1:~                                       }|*2\n+                                              |\n+    ]])\n+\n+    -- Default: behaves like \"msg\" when immediately after printing a message,\n+    -- even if :sleep moved cursor elsewhere.\n+    for _, cmd in ipairs({\n+      'echo 1234 | call getchar()',\n+      'echo 1234 | call getchar(-1, {})',\n+      \"echo 1234 | call getchar(-1, #{cursor: 'msg'})\",\n+      'echo 1234 | sleep 10m | call getchar()',\n+      'echo 1234 | sleep 10m | call getchar(-1, {})',\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'msg'})\",\n+    }) do\n+      async_command(cmd)\n+      screen:expect([[\n+        foobar                                  |*3\n+        {1:~                                       }|*2\n+        1234^                                    |\n+      ]])\n+      feed('a')\n+      screen:expect([[\n+        foobar                                  |*2\n+        fooba^r                                  |\n+        {1:~                                       }|*2\n+        1234                                    |\n+      ]])\n+    end\n+\n+    -- Default: behaves like \"keep\" when not immediately after printing a message.\n+    for _, cmd in ipairs({\n+      'call getchar()',\n+      'call getchar(-1, {})',\n+      \"call getchar(-1, #{cursor: 'keep'})\",\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'keep'})\",",
            "html_url": "https://github.com/neovim/neovim/pull/32303#discussion_r1938620110",
            "id": 1938620110,
            "in_reply_to_id": 1938614923,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjP7O",
            "original_commit_id": "e32f2b4606f0825bf1ed5401d54f6821d542e34f",
            "original_line": 56,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/vimscript/getchar_spec.lua",
            "position": null,
            "pull_request_review_id": 2588685622,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32303",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938620110/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-02T23:43:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938620110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32303#discussion_r1938620940"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32303"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938620940"
                }
            },
            "author_association": "MEMBER",
            "body": "If the cursor is already in the message area, `getchar()` will not move it back to the current window. I'm thinking about adding another value for `cursor` that forces `getchar()` to move cursor to the current window, but can't decide how to name it.\r\n\r\nOr maybe allow `cursor` to also take a List that can specify an arbitrary position? It'll be hard to decide the exact format of the List though (e.g. whether the positions are byte positions or screen positions).",
            "commit_id": "166aeca9030fd8c7c60549a135a875409688f931",
            "created_at": "2025-02-02T23:47:48Z",
            "diff_hunk": "@@ -0,0 +1,92 @@\n+local n = require('test.functional.testnvim')()\n+local Screen = require('test.functional.ui.screen')\n+\n+local clear = n.clear\n+local exec = n.exec\n+local feed = n.feed\n+local async_command = n.async_meths.nvim_command\n+\n+describe('getchar()', function()\n+  before_each(clear)\n+\n+  -- oldtest: Test_getchar_cursor_position()\n+  it('cursor positioning', function()\n+    local screen = Screen.new(40, 6)\n+    exec([[\n+      call setline(1, ['foobar', 'foobar', 'foobar'])\n+      call cursor(3, 6)\n+    ]])\n+    screen:expect([[\n+      foobar                                  |*2\n+      fooba^r                                  |\n+      {1:~                                       }|*2\n+                                              |\n+    ]])\n+\n+    -- Default: behaves like \"msg\" when immediately after printing a message,\n+    -- even if :sleep moved cursor elsewhere.\n+    for _, cmd in ipairs({\n+      'echo 1234 | call getchar()',\n+      'echo 1234 | call getchar(-1, {})',\n+      \"echo 1234 | call getchar(-1, #{cursor: 'msg'})\",\n+      'echo 1234 | sleep 10m | call getchar()',\n+      'echo 1234 | sleep 10m | call getchar(-1, {})',\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'msg'})\",\n+    }) do\n+      async_command(cmd)\n+      screen:expect([[\n+        foobar                                  |*3\n+        {1:~                                       }|*2\n+        1234^                                    |\n+      ]])\n+      feed('a')\n+      screen:expect([[\n+        foobar                                  |*2\n+        fooba^r                                  |\n+        {1:~                                       }|*2\n+        1234                                    |\n+      ]])\n+    end\n+\n+    -- Default: behaves like \"keep\" when not immediately after printing a message.\n+    for _, cmd in ipairs({\n+      'call getchar()',\n+      'call getchar(-1, {})',\n+      \"call getchar(-1, #{cursor: 'keep'})\",\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'keep'})\",",
            "html_url": "https://github.com/neovim/neovim/pull/32303#discussion_r1938620940",
            "id": 1938620940,
            "in_reply_to_id": 1938614923,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjQIM",
            "original_commit_id": "e32f2b4606f0825bf1ed5401d54f6821d542e34f",
            "original_line": 56,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/vimscript/getchar_spec.lua",
            "position": null,
            "pull_request_review_id": 2588686745,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32303",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938620940/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-02T23:50:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938620940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32303#discussion_r1938622141"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32303"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938622141"
                }
            },
            "author_association": "MEMBER",
            "body": "> thinking about adding another value for `cursor` that forces `getchar()` to move cursor to the current window\r\n\r\n`win` or maybe `clear` ?",
            "commit_id": "166aeca9030fd8c7c60549a135a875409688f931",
            "created_at": "2025-02-02T23:53:37Z",
            "diff_hunk": "@@ -0,0 +1,92 @@\n+local n = require('test.functional.testnvim')()\n+local Screen = require('test.functional.ui.screen')\n+\n+local clear = n.clear\n+local exec = n.exec\n+local feed = n.feed\n+local async_command = n.async_meths.nvim_command\n+\n+describe('getchar()', function()\n+  before_each(clear)\n+\n+  -- oldtest: Test_getchar_cursor_position()\n+  it('cursor positioning', function()\n+    local screen = Screen.new(40, 6)\n+    exec([[\n+      call setline(1, ['foobar', 'foobar', 'foobar'])\n+      call cursor(3, 6)\n+    ]])\n+    screen:expect([[\n+      foobar                                  |*2\n+      fooba^r                                  |\n+      {1:~                                       }|*2\n+                                              |\n+    ]])\n+\n+    -- Default: behaves like \"msg\" when immediately after printing a message,\n+    -- even if :sleep moved cursor elsewhere.\n+    for _, cmd in ipairs({\n+      'echo 1234 | call getchar()',\n+      'echo 1234 | call getchar(-1, {})',\n+      \"echo 1234 | call getchar(-1, #{cursor: 'msg'})\",\n+      'echo 1234 | sleep 10m | call getchar()',\n+      'echo 1234 | sleep 10m | call getchar(-1, {})',\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'msg'})\",\n+    }) do\n+      async_command(cmd)\n+      screen:expect([[\n+        foobar                                  |*3\n+        {1:~                                       }|*2\n+        1234^                                    |\n+      ]])\n+      feed('a')\n+      screen:expect([[\n+        foobar                                  |*2\n+        fooba^r                                  |\n+        {1:~                                       }|*2\n+        1234                                    |\n+      ]])\n+    end\n+\n+    -- Default: behaves like \"keep\" when not immediately after printing a message.\n+    for _, cmd in ipairs({\n+      'call getchar()',\n+      'call getchar(-1, {})',\n+      \"call getchar(-1, #{cursor: 'keep'})\",\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'keep'})\",",
            "html_url": "https://github.com/neovim/neovim/pull/32303#discussion_r1938622141",
            "id": 1938622141,
            "in_reply_to_id": 1938614923,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjQa9",
            "original_commit_id": "e32f2b4606f0825bf1ed5401d54f6821d542e34f",
            "original_line": 56,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/vimscript/getchar_spec.lua",
            "position": null,
            "pull_request_review_id": 2588688248,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32303",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938622141/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-02T23:53:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938622141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32303#discussion_r1938630028"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32303"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938630028"
                }
            },
            "author_association": "MEMBER",
            "body": "Actually, I previously thought that this should be achieved by having a separate functionality solely focusing on moving cursor, and when combined with `getchar(-1, {'cursor': 'keep'})` it can achieve that. There is `cursor` flag of `nvim__redraw` that can already achieve this, but in Vim this can only be done with `:sleep`.\r\n\r\ncc @luukvbaal what do you think?",
            "commit_id": "166aeca9030fd8c7c60549a135a875409688f931",
            "created_at": "2025-02-03T00:24:46Z",
            "diff_hunk": "@@ -0,0 +1,92 @@\n+local n = require('test.functional.testnvim')()\n+local Screen = require('test.functional.ui.screen')\n+\n+local clear = n.clear\n+local exec = n.exec\n+local feed = n.feed\n+local async_command = n.async_meths.nvim_command\n+\n+describe('getchar()', function()\n+  before_each(clear)\n+\n+  -- oldtest: Test_getchar_cursor_position()\n+  it('cursor positioning', function()\n+    local screen = Screen.new(40, 6)\n+    exec([[\n+      call setline(1, ['foobar', 'foobar', 'foobar'])\n+      call cursor(3, 6)\n+    ]])\n+    screen:expect([[\n+      foobar                                  |*2\n+      fooba^r                                  |\n+      {1:~                                       }|*2\n+                                              |\n+    ]])\n+\n+    -- Default: behaves like \"msg\" when immediately after printing a message,\n+    -- even if :sleep moved cursor elsewhere.\n+    for _, cmd in ipairs({\n+      'echo 1234 | call getchar()',\n+      'echo 1234 | call getchar(-1, {})',\n+      \"echo 1234 | call getchar(-1, #{cursor: 'msg'})\",\n+      'echo 1234 | sleep 10m | call getchar()',\n+      'echo 1234 | sleep 10m | call getchar(-1, {})',\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'msg'})\",\n+    }) do\n+      async_command(cmd)\n+      screen:expect([[\n+        foobar                                  |*3\n+        {1:~                                       }|*2\n+        1234^                                    |\n+      ]])\n+      feed('a')\n+      screen:expect([[\n+        foobar                                  |*2\n+        fooba^r                                  |\n+        {1:~                                       }|*2\n+        1234                                    |\n+      ]])\n+    end\n+\n+    -- Default: behaves like \"keep\" when not immediately after printing a message.\n+    for _, cmd in ipairs({\n+      'call getchar()',\n+      'call getchar(-1, {})',\n+      \"call getchar(-1, #{cursor: 'keep'})\",\n+      \"echo 1234 | sleep 10m | call getchar(-1, #{cursor: 'keep'})\",",
            "html_url": "https://github.com/neovim/neovim/pull/32303#discussion_r1938630028",
            "id": 1938630028,
            "in_reply_to_id": 1938614923,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5zjSWM",
            "original_commit_id": "e32f2b4606f0825bf1ed5401d54f6821d542e34f",
            "original_line": 56,
            "original_position": 56,
            "original_start_line": null,
            "path": "test/functional/vimscript/getchar_spec.lua",
            "position": null,
            "pull_request_review_id": 2588698838,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32303",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938630028/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-03T00:29:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1938630028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32303/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32303/commits",
    "created_at": "2025-02-02T23:08:11Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32303.diff",
    "draft": false,
    "head": {
        "label": "zeertzjq:vim-9.1.1070",
        "ref": "vim-9.1.1070",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/zeertzjq/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/zeertzjq/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/zeertzjq/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/zeertzjq/neovim/branches{/branch}",
            "clone_url": "https://github.com/zeertzjq/neovim.git",
            "collaborators_url": "https://api.github.com/repos/zeertzjq/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/zeertzjq/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/zeertzjq/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/zeertzjq/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/zeertzjq/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/zeertzjq/neovim/contributors",
            "created_at": "2021-09-27T02:22:45Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/zeertzjq/neovim/deployments",
            "description": null,
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/zeertzjq/neovim/downloads",
            "events_url": "https://api.github.com/repos/zeertzjq/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/zeertzjq/neovim/forks",
            "full_name": "zeertzjq/neovim",
            "git_commits_url": "https://api.github.com/repos/zeertzjq/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/zeertzjq/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/zeertzjq/neovim/git/tags{/sha}",
            "git_url": "git://github.com/zeertzjq/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "",
            "hooks_url": "https://api.github.com/repos/zeertzjq/neovim/hooks",
            "html_url": "https://github.com/zeertzjq/neovim",
            "id": 410715915,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/zeertzjq/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/zeertzjq/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/zeertzjq/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/zeertzjq/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/zeertzjq/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/zeertzjq/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/zeertzjq/neovim/merges",
            "milestones_url": "https://api.github.com/repos/zeertzjq/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGHsHCw",
            "notifications_url": "https://api.github.com/repos/zeertzjq/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/zeertzjq/neovim/pulls{/number}",
            "pushed_at": "2025-02-04T02:18:19Z",
            "releases_url": "https://api.github.com/repos/zeertzjq/neovim/releases{/id}",
            "size": 299573,
            "ssh_url": "git@github.com:zeertzjq/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/zeertzjq/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/zeertzjq/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/zeertzjq/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/zeertzjq/neovim/subscription",
            "svn_url": "https://github.com/zeertzjq/neovim",
            "tags_url": "https://api.github.com/repos/zeertzjq/neovim/tags",
            "teams_url": "https://api.github.com/repos/zeertzjq/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/zeertzjq/neovim/git/trees{/sha}",
            "updated_at": "2025-01-19T11:29:57Z",
            "url": "https://api.github.com/repos/zeertzjq/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "166aeca9030fd8c7c60549a135a875409688f931",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32303",
    "id": 2311464428,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32303",
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "See https://neovim.io/doc/user/dev_vimpatch.html",
            "id": 843184430,
            "name": "vim-patch",
            "node_id": "MDU6TGFiZWw4NDMxODQ0MzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vim-patch"
        }
    ],
    "locked": false,
    "merge_commit_sha": "af069c5c05ad99623345071007ad23da51973601",
    "merged_at": "2025-02-03T00:09:04Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6JxiXs",
    "number": 32303,
    "patch_url": "https://github.com/neovim/neovim/pull/32303.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32303/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/166aeca9030fd8c7c60549a135a875409688f931",
    "title": "vim-patch:9.1.1070: Cannot control cursor positioning of getchar()",
    "updated_at": "2025-02-03T00:24:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32303",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    }
}