{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/16071/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16071/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/16071"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/16071"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16071/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16071"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/0545536eadc8990f483955fba0d993cc7d4b0cfc"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5909,
            "forks_count": 5909,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1872,
            "open_issues_count": 1872,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-03-03T23:37:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 310907,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 86843,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-03-04T02:27:02Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 86843,
            "watchers_count": 86843,
            "web_commit_signoff_required": false
        },
        "sha": "233c41cb8cfe1aa5a8520fe6104adacc53c0ece2",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "**Needs a big rebase; will get around to it**\r\n\r\n<details>\r\nRef: #16064\r\n\r\nSummary of changes:\r\n- `<SID>` works always; no prior `s:` access required. Every anonymous Vim script has a unique SID.\r\n- Lazily allocate script items and variables better: (especially useful for `nvim_exec`, which may be used many times)\r\n    - Script items are only allocated for named scripts.\r\n    - Script variables hash tables are only allocated if `s:` is used in a script.\r\n- Fixed bug where `s:` defined in nested contexts such as commands defined in anonymous scripts may get lost.\r\n- Fixed various bugs from #15079.\r\n- Reuse the same anonymous script when re`:source`ing the same buffer (like Vim, but it always allocates a named script item `:source buffer=<buffer id>`; we could emulate this if we want, but I imagine it's done as they don't support anonymous scripts).\r\n- Show correct line numbers in Vim script anonymous sources. (#16806)\r\n- Use `nvim_exec` over `helpers.source` in more tests. (possible after the bug fixes)\r\n\r\nThings to explore in the future:\r\n- A version of `nvim_exec` that returns the SID of the anonymous script used. Can take an `opts` dict allowing it to run in the context of a given SID.\r\n- Maybe also an API function for getting the current SID as an integer (and maybe other script context info).\r\n</details>",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16071#discussion_r730908080"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/730908080"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder if this is worth the specific mention now that there're multiple cases for this? (also in the doc comment for `ensure_anon_script_item()`)",
            "commit_id": "0545536eadc8990f483955fba0d993cc7d4b0cfc",
            "created_at": "2021-10-18T13:13:41Z",
            "diff_hunk": "@@ -9129,6 +9129,8 @@ dictitem_T *find_var_in_ht(hashtab_T *const ht, int htname, const char *const va\n \n /// Finds the dict (g:, l:, s:, …) and hashtable used for a variable.\n ///\n+/// Assigns SID if s: scope is accessed in anonymous scripts. #15994",
            "html_url": "https://github.com/neovim/neovim/pull/16071#discussion_r730908080",
            "id": 730908080,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4rkMWw",
            "original_commit_id": "49f91e53b7f30533debf1113bdfd783019281a25",
            "original_line": 9132,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/eval.c",
            "position": null,
            "pull_request_review_id": 782035967,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16071",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/730908080/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-10-18T13:17:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/730908080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16071#discussion_r731249728"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/731249728"
                }
            },
            "author_association": "MEMBER",
            "body": "It's not great to have a side effect in this function so the least we can do is mention it in the docstring. Just need to update it:\r\n```suggestion\r\n/// Assigns SID if s: or <sid> is accessed in anonymous scripts. #15994\r\n```",
            "commit_id": "0545536eadc8990f483955fba0d993cc7d4b0cfc",
            "created_at": "2021-10-18T19:27:31Z",
            "diff_hunk": "@@ -9129,6 +9129,8 @@ dictitem_T *find_var_in_ht(hashtab_T *const ht, int htname, const char *const va\n \n /// Finds the dict (g:, l:, s:, …) and hashtable used for a variable.\n ///\n+/// Assigns SID if s: scope is accessed in anonymous scripts. #15994",
            "html_url": "https://github.com/neovim/neovim/pull/16071#discussion_r731249728",
            "id": 731249728,
            "in_reply_to_id": 730908080,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4rlfxA",
            "original_commit_id": "49f91e53b7f30533debf1113bdfd783019281a25",
            "original_line": 9132,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/eval.c",
            "position": null,
            "pull_request_review_id": 782491584,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16071",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/731249728/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-10-18T19:28:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/731249728",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16071#discussion_r731252292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/731252292"
                }
            },
            "author_association": "MEMBER",
            "body": "At a glance looks like most non-static functions have `script_` prefix. (Personally I would enjoy if we always had consistent \"topic\" prefixes, regardless of scope.)\r\n```suggestion\r\nvoid script_ensure_anon_sid(void)\r\n```",
            "commit_id": "0545536eadc8990f483955fba0d993cc7d4b0cfc",
            "created_at": "2021-10-18T19:31:29Z",
            "diff_hunk": "@@ -1913,12 +1938,22 @@ static char_u *get_str_line(int c, void *cookie, int indent, bool do_concat)\n   return ga.ga_data;\n }\n \n+/// Ensure script item exists for the current SID_STR anonymous script to allow\n+/// uses of script scope and <SID> #15994.\n+/// `current_sctx.sc_sid` is changed to the new item's ID.\n+void ensure_anon_script_item(void)",
            "html_url": "https://github.com/neovim/neovim/pull/16071#discussion_r731252292",
            "id": 731252292,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4rlgZE",
            "original_commit_id": "2981fcd74568cf8ebfa51e91da356d06067c4e65",
            "original_line": 1944,
            "original_position": 39,
            "original_start_line": null,
            "path": "src/nvim/ex_cmds2.c",
            "position": null,
            "pull_request_review_id": 782494975,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16071",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/731252292/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-10-18T19:32:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/731252292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16071#discussion_r1975278432"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1975278432"
                }
            },
            "author_association": "MEMBER",
            "body": "These changes still fail on latest master 77626ed7fd36, so this PR is still relevant after https://github.com/neovim/neovim/pull/28486 and related SID improvements by @zeertzjq .",
            "commit_id": "0545536eadc8990f483955fba0d993cc7d4b0cfc",
            "created_at": "2025-02-28T11:47:15Z",
            "diff_hunk": "@@ -65,26 +65,19 @@ describe('nvim_get_commands', function()\n     local cmd3 = { addr=NIL,         bang=false, bar=true,  complete=NIL,      complete_arg=NIL,         count=NIL,  definition='call \\128\\253R3_ohyeah()',      name='Cmd3',    nargs='0', range=NIL,  register=false, keepscript=false, script_id=3, }\n     local cmd4 = { addr=NIL,         bang=false, bar=false, complete=NIL,      complete_arg=NIL,         count=NIL,  definition='call \\128\\253R4_just_great()',  name='Cmd4',    nargs='0', range=NIL,  register=true,  keepscript=false, script_id=4, }\n     source([[\n-      let s:foo = 1\n       command -complete=custom,ListUsers -nargs=+ Finger !finger <args>\n     ]])\n     eq({Finger=cmd1}, meths.get_commands({builtin=false}))\n     command('command -nargs=1 -complete=dir -addr=arguments -count=10 TestCmd pwd <args>')\n     eq({Finger=cmd1, TestCmd=cmd0}, meths.get_commands({builtin=false}))\n \n     source([[\n-      function! s:foo() abort\n-      endfunction\n       command -bang -nargs=* Cmd2 call <SID>foo(<q-args>)\n     ]])\n     source([[\n-      function! s:ohyeah() abort\n-      endfunction\n       command -bar -nargs=0 Cmd3 call <SID>ohyeah()\n     ]])\n     source([[\n-      function! s:just_great() abort\n-      endfunction",
            "html_url": "https://github.com/neovim/neovim/pull/16071#discussion_r1975278432",
            "id": 1975278432,
            "line": 87,
            "node_id": "PRRC_kwDOAPphoM51vFtg",
            "original_commit_id": "0545536eadc8990f483955fba0d993cc7d4b0cfc",
            "original_line": 87,
            "original_position": 23,
            "original_start_line": null,
            "path": "test/functional/api/command_spec.lua",
            "position": 23,
            "pull_request_review_id": 2650521042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16071",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1975278432/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-28T11:49:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1975278432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16071#discussion_r1975305956"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1975305956"
                }
            },
            "author_association": "MEMBER",
            "body": "This PR's pretty stale so most of it'll need to be redone; I do plan on getting back to it at _some_ point though. (No ETA; somebody else can take over if they'd like in the meantime :grin:)\r\n\r\nThat said, I'd maybe do some things differently if I were to revive it. E.g: the `SID_TRACE_*` stuff from this PR looks dumb (pretty sure it has edge cases too :innocent:).\r\n\r\n(Also addressing zeer's question above which I missed while I was ded :skull:)\r\n",
            "commit_id": "0545536eadc8990f483955fba0d993cc7d4b0cfc",
            "created_at": "2025-02-28T12:07:23Z",
            "diff_hunk": "@@ -65,26 +65,19 @@ describe('nvim_get_commands', function()\n     local cmd3 = { addr=NIL,         bang=false, bar=true,  complete=NIL,      complete_arg=NIL,         count=NIL,  definition='call \\128\\253R3_ohyeah()',      name='Cmd3',    nargs='0', range=NIL,  register=false, keepscript=false, script_id=3, }\n     local cmd4 = { addr=NIL,         bang=false, bar=false, complete=NIL,      complete_arg=NIL,         count=NIL,  definition='call \\128\\253R4_just_great()',  name='Cmd4',    nargs='0', range=NIL,  register=true,  keepscript=false, script_id=4, }\n     source([[\n-      let s:foo = 1\n       command -complete=custom,ListUsers -nargs=+ Finger !finger <args>\n     ]])\n     eq({Finger=cmd1}, meths.get_commands({builtin=false}))\n     command('command -nargs=1 -complete=dir -addr=arguments -count=10 TestCmd pwd <args>')\n     eq({Finger=cmd1, TestCmd=cmd0}, meths.get_commands({builtin=false}))\n \n     source([[\n-      function! s:foo() abort\n-      endfunction\n       command -bang -nargs=* Cmd2 call <SID>foo(<q-args>)\n     ]])\n     source([[\n-      function! s:ohyeah() abort\n-      endfunction\n       command -bar -nargs=0 Cmd3 call <SID>ohyeah()\n     ]])\n     source([[\n-      function! s:just_great() abort\n-      endfunction",
            "html_url": "https://github.com/neovim/neovim/pull/16071#discussion_r1975305956",
            "id": 1975305956,
            "in_reply_to_id": 1975278432,
            "line": 87,
            "node_id": "PRRC_kwDOAPphoM51vMbk",
            "original_commit_id": "0545536eadc8990f483955fba0d993cc7d4b0cfc",
            "original_line": 87,
            "original_position": 23,
            "original_start_line": null,
            "path": "test/functional/api/command_spec.lua",
            "position": 23,
            "pull_request_review_id": 2650567152,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16071",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1975305956/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-28T12:15:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1975305956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "So, I've made a few changes to the approach:\r\n\r\n- Each anon script gets a unique SID, regardless of whether an item is allocated.\r\n  - `<SID>` works without needing an `s:` access first.\r\n  - Don't need to plant `script_ensure_blah` all over the place now.\r\n    Should also mean porting patches relating to script contexts is less error prone now that this doesn't need to be done.\r\n  - `s:` defined in functions, autocmds, commands, etc. are accessible from the scripts which defined them.\r\n- `script_items` and `ga_scripts` (now `script_vars`) are now hash maps (not growarrays).\r\n  - Originally wanted to avoid this, but seems more ergonomic now that SIDs may or may not map to alloc'd items.\r\n\r\nNow all the tests in https://github.com/neovim/neovim/pull/16064/commits/70025527ffb6f54107913eab71015aa981735d40 seem to pass, except for `test/functional/ex_cmds/script_spec.lua`, which I suspect is due to `nvim_exec`s heredoc handling.\r\n\r\n---\r\n\r\nFew extra things of note:\r\n\r\n- Hash map values are pointers to alloc'd `scriptitem_T`s and `scriptvar_T`s.\r\n  Does introduce another indirection, but has the advantage of keeping these structs encapsulated from `map.h`.\r\n  Also allows us to remove resize logic like: https://github.com/neovim/neovim/blob/30af69509dc91552dc41451857b18907f018c1bd/src/nvim/eval.c#L9248-L9258\r\n- Looks like it's possible to allocate only a `scriptvar_T` on `s:` access, as anon scripts currently don't actually use any of the fields in `scriptitem_T` yet.\r\n   Could just add this logic to `script_sv`, which is encapsulated in `eval.c`.\r\n   This lazy allocation could also be extended to non-anon scripts if that's ever wanted.\r\n   _**Edit**: I've added a commit that does this._\r\n- Profiling support for anon scripts is possible.\r\n- Would maybe be nice to use a fixed width int type for `scid_T`.",
            "created_at": "2021-10-20T14:11:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/16071#issuecomment-947707258",
            "id": 947707258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16071",
            "node_id": "IC_kwDOAPphoM44fN16",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947707258/reactions"
            },
            "updated_at": "2022-03-29T18:47:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947707258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This seems to work well, so I'll mark this as ready to guage feedback.\r\nThough it would be nice to have a test ensuring the allocations are lazy; checking `<SID>` no longer works.\r\n\r\nAlso, seems probable that jobs will fail as `nodejs_spec.lua` is erroring on the CI today (unrelated to this PR).\r\n",
            "created_at": "2021-10-20T20:38:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/16071#issuecomment-948018504",
            "id": 948018504,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16071",
            "node_id": "IC_kwDOAPphoM44gZ1I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/948018504/reactions"
            },
            "updated_at": "2023-06-25T20:01:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/948018504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": " https://github.com/vim/vim/pull/9967 was just merged that also added some improvements to anon sourcing that I meant to get around to (namely same buffer = same SID; our implementation aims to support nvim_exec, so we don't need to allocate a script item for every sourced buffer, it can be done lazily when needed).\r\nI'd like to revisit this and some other related stuff at some point :+1: (note to self)",
            "created_at": "2022-03-19T13:01:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/16071#issuecomment-1073006072",
            "id": 1073006072,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16071",
            "node_id": "IC_kwDOAPphoM4_9MX4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1073006072/reactions"
            },
            "updated_at": "2022-03-24T16:15:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1073006072",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(Note to self so I don't forget) #15079 added this bit of code: https://github.com/neovim/neovim/blob/7b6ee3ef0a2d64657c8ca25f440e010c6dc75408/src/nvim/eval.c#L9376-L9395\r\n\r\nThis looks like it can cause duplicates in `:scriptnames`, and so may have the potential for a named script's SID to change due to the backwards search in `get_script_item`...\r\n\r\nI wonder if there's a better way of implementing that logic? Regardless, I think this can be fixed in this PR by not adding those scripts to `file_sids`. At the very least this bug is only possible with `-V1` **Edit: Fixed**\r\n\r\n**Edit 2:** actually, seems that PR introduced other bugs too... like:\r\n```lua\r\nvim.api.nvim_exec([[\r\nau User Foo let s:a += 1\r\nlet s:a = 1336\r\n]], false)\r\nprint(vim.api.nvim_exec([[doautocmd User Foo]], true))\r\n```\r\nbecause of the `nlua_set_sctx` shenanigans, with -V1 this throws `E121` :sob:\r\n\r\nI'm starting to think it's worth completely nuking `nlua_set_sctx`, and to just allocate a script item for every Lua source for tracing purposes when `-V1` is enabled until a better approach is figured out... **Edit:** Fixed by encoding whether a script is from a Lua context in the SID it gets (only used when verbose tracing is enabled, as it produces some ugly SIDs). This avoids the need to allocate a script item or similar for all scripts.",
            "created_at": "2022-03-22T09:36:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/16071#issuecomment-1074937185",
            "id": 1074937185,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16071",
            "node_id": "IC_kwDOAPphoM5AEj1h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1074937185/reactions"
            },
            "updated_at": "2022-03-29T17:29:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1074937185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@seandewar Do you plan to continue this PR?",
            "created_at": "2024-06-24T00:41:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/16071#issuecomment-2185391312",
            "id": 2185391312,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16071",
            "node_id": "IC_kwDOAPphoM6CQmzQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185391312/reactions"
            },
            "updated_at": "2024-06-24T00:41:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2185391312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16071/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/16071/commits",
    "created_at": "2021-10-18T13:11:25Z",
    "diff_url": "https://github.com/neovim/neovim/pull/16071.diff",
    "draft": true,
    "head": {
        "label": "seandewar:anon-sid2",
        "ref": "anon-sid2",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/seandewar/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/seandewar/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/seandewar/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/seandewar/neovim/branches{/branch}",
            "clone_url": "https://github.com/seandewar/neovim.git",
            "collaborators_url": "https://api.github.com/repos/seandewar/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/seandewar/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/seandewar/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/seandewar/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/seandewar/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/seandewar/neovim/contributors",
            "created_at": "2020-10-20T16:45:01Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/seandewar/neovim/deployments",
            "description": "[Contribution Fork] Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/seandewar/neovim/downloads",
            "events_url": "https://api.github.com/repos/seandewar/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/seandewar/neovim/forks",
            "full_name": "seandewar/neovim",
            "git_commits_url": "https://api.github.com/repos/seandewar/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/seandewar/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/seandewar/neovim/git/tags{/sha}",
            "git_url": "git://github.com/seandewar/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/seandewar/neovim/hooks",
            "html_url": "https://github.com/seandewar/neovim",
            "id": 305773353,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/seandewar/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/seandewar/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/seandewar/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/seandewar/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/seandewar/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/seandewar/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/seandewar/neovim/merges",
            "milestones_url": "https://api.github.com/repos/seandewar/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMDU3NzMzNTM=",
            "notifications_url": "https://api.github.com/repos/seandewar/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/seandewar/neovim/pulls{/number}",
            "pushed_at": "2025-03-04T00:14:14Z",
            "releases_url": "https://api.github.com/repos/seandewar/neovim/releases{/id}",
            "size": 304748,
            "ssh_url": "git@github.com:seandewar/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/seandewar/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/seandewar/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/seandewar/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/seandewar/neovim/subscription",
            "svn_url": "https://github.com/seandewar/neovim",
            "tags_url": "https://api.github.com/repos/seandewar/neovim/tags",
            "teams_url": "https://api.github.com/repos/seandewar/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/seandewar/neovim/git/trees{/sha}",
            "updated_at": "2024-07-01T06:09:14Z",
            "url": "https://api.github.com/repos/seandewar/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "0545536eadc8990f483955fba0d993cc7d4b0cfc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
            "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
            "followers_url": "https://api.github.com/users/seandewar/followers",
            "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
            "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/seandewar",
            "id": 6256228,
            "login": "seandewar",
            "node_id": "MDQ6VXNlcjYyNTYyMjg=",
            "organizations_url": "https://api.github.com/users/seandewar/orgs",
            "received_events_url": "https://api.github.com/users/seandewar/received_events",
            "repos_url": "https://api.github.com/users/seandewar/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/seandewar",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/16071",
    "id": 760449960,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16071",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "",
            "id": 109899557,
            "name": "vimscript",
            "node_id": "MDU6TGFiZWwxMDk4OTk1NTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vimscript"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM4tU4uo",
    "number": 16071,
    "patch_url": "https://github.com/neovim/neovim/pull/16071.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/16071/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/0545536eadc8990f483955fba0d993cc7d4b0cfc",
    "title": "feat(:source, nvim_exec): anonymous script improvements",
    "updated_at": "2025-02-28T12:07:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/16071",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
        "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
        "followers_url": "https://api.github.com/users/seandewar/followers",
        "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
        "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seandewar",
        "id": 6256228,
        "login": "seandewar",
        "node_id": "MDQ6VXNlcjYyNTYyMjg=",
        "organizations_url": "https://api.github.com/users/seandewar/orgs",
        "received_events_url": "https://api.github.com/users/seandewar/received_events",
        "repos_url": "https://api.github.com/users/seandewar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seandewar",
        "user_view_type": "public"
    }
}