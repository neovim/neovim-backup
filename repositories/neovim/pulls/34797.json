{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34797/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34797/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34797"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34797"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34797/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6198,
            "forks_count": 6198,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1970,
            "open_issues_count": 1970,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-07-21T05:18:47Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 334403,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 91287,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-22T03:04:19Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 91287,
            "watchers_count": 91287,
            "web_commit_signoff_required": false
        },
        "sha": "4778a4c201793141329cf58bb52a6fcc1d9c9eb1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Close https://github.com/neovim/neovim/issues/34664.\r\n\r\nI added `vim.lsp.util._enable` and `vim.lsp.util._is_enabled` to unify the behavior of `vim.lsp.{feature}.enable`. Another convenience is that these `vim.lsp.{feature}.enable` functions themselves only need to use `vim.lsp._is_enabled` to determine whether they are enabled.",
    "closed_at": "2025-07-13T03:44:21Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2187327075"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187327075"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "For `enable()`, passing both `bufnr` and `client_id` at the same time seems ambiguous, so it is set here that these two values cannot be passed simultaneously.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-05T14:26:23Z",
            "diff_hunk": "@@ -2323,6 +2323,72 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class (private) vim.lsp.util.enable.Filter\n+---@field bufnr? integer\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.util.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string\n+---@param enable? boolean\n+---@param filter? vim.lsp.util.enable.Filter\n+function M._enable(feature, enable, filter)\n+  vim.validate('enable', enable, 'boolean', true)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  enable = enable == nil or enable\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+  assert(\n+    not (bufnr and client_id),\n+    'Only one of `bufnr` or `client_id` filters can be specified at a time.'\n+  )",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2187327075",
            "id": 2187327075,
            "line": 2389,
            "node_id": "PRRC_kwDOAPphoM6CX_Zj",
            "original_commit_id": "e6068475433208448b949d571633b7bf050c8a3c",
            "original_line": 2389,
            "original_position": 37,
            "original_start_line": 2356,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 50,
            "pull_request_review_id": 2990129958,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187327075/reactions"
            },
            "side": "RIGHT",
            "start_line": 2386,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-05T14:26:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187327075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2187450515"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187450515"
                }
            },
            "author_association": "MEMBER",
            "body": "Should this line be removed?",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-05T16:53:10Z",
            "diff_hunk": "@@ -694,6 +717,48 @@ function M.stop(bufnr, client_id)\n   end\n end\n \n+util._enable('semantic_tokens', true)",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2187450515",
            "id": 2187450515,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CYdiT",
            "original_commit_id": "e6068475433208448b949d571633b7bf050c8a3c",
            "original_line": 697,
            "original_position": 127,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 2990332188,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187450515/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-05T16:54:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187450515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2187450740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187450740"
                }
            },
            "author_association": "MEMBER",
            "body": "We should have a general utility type for this buffer/client filter.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-05T16:54:04Z",
            "diff_hunk": "@@ -694,6 +717,48 @@ function M.stop(bufnr, client_id)\n   end\n end\n \n+util._enable('semantic_tokens', true)\n+\n+---@class vim.lsp.semantic_tokens.enable.Filter",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2187450740",
            "id": 2187450740,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CYdl0",
            "original_commit_id": "e6068475433208448b949d571633b7bf050c8a3c",
            "original_line": 722,
            "original_position": 129,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 2990332188,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187450740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-05T16:54:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187450740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2187942150"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187942150"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is to set a \"global default value\"; otherwise, if the local value is not set, there would be no global value to fall back on.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T03:25:45Z",
            "diff_hunk": "@@ -694,6 +717,48 @@ function M.stop(bufnr, client_id)\n   end\n end\n \n+util._enable('semantic_tokens', true)",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2187942150",
            "id": 2187942150,
            "in_reply_to_id": 2187450515,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CaVkG",
            "original_commit_id": "e6068475433208448b949d571633b7bf050c8a3c",
            "original_line": 697,
            "original_position": 127,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 2990931067,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187942150/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T03:25:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187942150",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2187942562"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187942562"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I have added `vim.lsp.util.enable.Filter` as a general utility type, which can be used for `semantic_token`, but it won't be useful for filters like `inlay_hint.enable` that do not support `client_id`. Perhaps I should use it inside `enable` for semantic tokens, which supports both types of filters?",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T03:28:00Z",
            "diff_hunk": "@@ -694,6 +717,48 @@ function M.stop(bufnr, client_id)\n   end\n end\n \n+util._enable('semantic_tokens', true)\n+\n+---@class vim.lsp.semantic_tokens.enable.Filter",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2187942562",
            "id": 2187942562,
            "in_reply_to_id": 2187450740,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CaVqi",
            "original_commit_id": "e6068475433208448b949d571633b7bf050c8a3c",
            "original_line": 722,
            "original_position": 129,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 2990931390,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187942562/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T03:28:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2187942562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188010479"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188010479"
                }
            },
            "author_association": "MEMBER",
            "body": "I would consider renaming this to `vim.lsp.enable.Filter` and then removing `vim.lsp.semantic_tokens.enable.Filter` to use this type instead.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T04:57:31Z",
            "diff_hunk": "@@ -2323,6 +2323,72 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class (private) vim.lsp.util.enable.Filter",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188010479",
            "id": 2188010479,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CamPv",
            "original_commit_id": "e6068475433208448b949d571633b7bf050c8a3c",
            "original_line": 2326,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 2990995715,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188010479/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T05:36:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188010479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188012440"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188012440"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah I think that would be cleaner.\r\n\r\nRelated comment: https://github.com/neovim/neovim/pull/34797/files#r2188010479",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T04:57:55Z",
            "diff_hunk": "@@ -694,6 +717,48 @@ function M.stop(bufnr, client_id)\n   end\n end\n \n+util._enable('semantic_tokens', true)\n+\n+---@class vim.lsp.semantic_tokens.enable.Filter",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188012440",
            "id": 2188012440,
            "in_reply_to_id": 2187450740,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CamuY",
            "original_commit_id": "e6068475433208448b949d571633b7bf050c8a3c",
            "original_line": 722,
            "original_position": 129,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 2990997558,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188012440/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T04:57:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188012440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188296854"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188296854"
                }
            },
            "author_association": "MEMBER",
            "body": "Can these `('__lsp...'):format(...)` calls be extracted into a single function that just takes the feature and an optional client id? Just so that the strings are only constructed in one place, to prevent risk of typos ",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T13:42:18Z",
            "diff_hunk": "@@ -2323,6 +2323,77 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188296854",
            "id": 2188296854,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CbsKW",
            "original_commit_id": "c14e45d1877ec44262620c3c2cd315dcc894fbd2",
            "original_line": 2344,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 2991304496,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188296854/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:03:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188296854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188310576"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188310576"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we validate that `feature` is a string as well? Also in `M._enable()` maybe",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T13:56:36Z",
            "diff_hunk": "@@ -2323,6 +2323,77 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('filter', filter, 'table', true)",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188310576",
            "id": 2188310576,
            "line": 2362,
            "node_id": "PRRC_kwDOAPphoM6Cbvgw",
            "original_commit_id": "c14e45d1877ec44262620c3c2cd315dcc894fbd2",
            "original_line": 2362,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 23,
            "pull_request_review_id": 2991304496,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188310576/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:03:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188310576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188324252"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188324252"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this necessary if we set client values to `nil` below, when applying global settings? Is it possible to just ignore if the global value is already set?",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T14:03:23Z",
            "diff_hunk": "@@ -2323,6 +2323,77 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string\n+---@param enable? boolean\n+---@param filter? vim.lsp.enable.Filter\n+function M._enable(feature, enable, filter)\n+  vim.validate('enable', enable, 'boolean', true)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  enable = enable == nil or enable\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+  assert(\n+    not (bufnr and client_id),\n+    'Only one of `bufnr` or `client_id` filters can be specified at a time.'\n+  )\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+\n+  if client_id then\n+    if enable == vim.g[var] then\n+      vim.g[client_var] = nil",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188324252",
            "id": 2188324252,
            "line": 2396,
            "node_id": "PRRC_kwDOAPphoM6Cby2c",
            "original_commit_id": "c14e45d1877ec44262620c3c2cd315dcc894fbd2",
            "original_line": 2396,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 57,
            "pull_request_review_id": 2991304496,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188324252/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:03:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188324252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188345133"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188345133"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I didn't add it because only the `filter` parameter is exposed to the user, but adding such validation is also a good idea.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T14:21:41Z",
            "diff_hunk": "@@ -2323,6 +2323,77 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('filter', filter, 'table', true)",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188345133",
            "id": 2188345133,
            "in_reply_to_id": 2188310576,
            "line": 2362,
            "node_id": "PRRC_kwDOAPphoM6Cb38t",
            "original_commit_id": "c14e45d1877ec44262620c3c2cd315dcc894fbd2",
            "original_line": 2362,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 23,
            "pull_request_review_id": 2991363632,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188345133/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:21:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188345133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188360282"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188360282"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is to delete the client value when the global value and client value are the same, so that the next time the global value is changed, the client value is also \"changed\" accordingly (at this point it becomes `nil`, thus falling back to the global value)",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T14:40:32Z",
            "diff_hunk": "@@ -2323,6 +2323,77 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string\n+---@param enable? boolean\n+---@param filter? vim.lsp.enable.Filter\n+function M._enable(feature, enable, filter)\n+  vim.validate('enable', enable, 'boolean', true)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  enable = enable == nil or enable\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+  assert(\n+    not (bufnr and client_id),\n+    'Only one of `bufnr` or `client_id` filters can be specified at a time.'\n+  )\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+\n+  if client_id then\n+    if enable == vim.g[var] then\n+      vim.g[client_var] = nil",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188360282",
            "id": 2188360282,
            "in_reply_to_id": 2188324252,
            "line": 2396,
            "node_id": "PRRC_kwDOAPphoM6Cb7pa",
            "original_commit_id": "c14e45d1877ec44262620c3c2cd315dcc894fbd2",
            "original_line": 2396,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 57,
            "pull_request_review_id": 2991382098,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188360282/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:40:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188360282",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188363689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188363689"
                }
            },
            "author_association": "MEMBER",
            "body": "That makes sense, but I think if the global value is set then the client value should *already* be `nil`, no? Thus this line is unnecessary, and we can just focus on the case when the global value is not set? I could be wrong, but it looks like every time the global value is changed, it updates all attached clients and sets their properties to `nil` if they are equal to the new global value",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T14:44:10Z",
            "diff_hunk": "@@ -2323,6 +2323,77 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string\n+---@param enable? boolean\n+---@param filter? vim.lsp.enable.Filter\n+function M._enable(feature, enable, filter)\n+  vim.validate('enable', enable, 'boolean', true)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  enable = enable == nil or enable\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+  assert(\n+    not (bufnr and client_id),\n+    'Only one of `bufnr` or `client_id` filters can be specified at a time.'\n+  )\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+\n+  if client_id then\n+    if enable == vim.g[var] then\n+      vim.g[client_var] = nil",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188363689",
            "id": 2188363689,
            "in_reply_to_id": 2188324252,
            "line": 2396,
            "node_id": "PRRC_kwDOAPphoM6Cb8ep",
            "original_commit_id": "c14e45d1877ec44262620c3c2cd315dcc894fbd2",
            "original_line": 2396,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 57,
            "pull_request_review_id": 2991386023,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188363689/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:44:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188363689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2188374319"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188374319"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "For example, in this case, it is used to handle the situation where the global value is `true` and the client value is set to `false` by the user. Then, when the user sets the client value to `true`, we destroy it by setting it to `nil`. During this process, the global value does not change because we still need this part of the code.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-06T14:58:58Z",
            "diff_hunk": "@@ -2323,6 +2323,77 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string\n+---@param enable? boolean\n+---@param filter? vim.lsp.enable.Filter\n+function M._enable(feature, enable, filter)\n+  vim.validate('enable', enable, 'boolean', true)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  enable = enable == nil or enable\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+  assert(\n+    not (bufnr and client_id),\n+    'Only one of `bufnr` or `client_id` filters can be specified at a time.'\n+  )\n+\n+  local var = ('__lsp_%s_enabled'):format(feature)\n+  local client_var = ('__lsp_%s_client_%d_enabled'):format(feature, client_id or 0)\n+\n+  if client_id then\n+    if enable == vim.g[var] then\n+      vim.g[client_var] = nil",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2188374319",
            "id": 2188374319,
            "in_reply_to_id": 2188324252,
            "line": 2396,
            "node_id": "PRRC_kwDOAPphoM6Cb_Ev",
            "original_commit_id": "c14e45d1877ec44262620c3c2cd315dcc894fbd2",
            "original_line": 2396,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 57,
            "pull_request_review_id": 2991398354,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188374319/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-06T14:58:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2188374319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2189880131"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189880131"
                }
            },
            "author_association": "MEMBER",
            "body": "should probably target 0.13\n```suggestion\n  vim.deprecate('vim.lsp.semantic_tokens.start', 'vim.lsp.semantic_tokens.enable(true)', '0.13.0')\n```",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T12:12:11Z",
            "diff_hunk": "@@ -595,12 +624,14 @@ local M = {}\n --- client.server_capabilities.semanticTokensProvider = nil\n --- ```\n ---\n+---@deprecated\n ---@param bufnr (integer) Buffer number, or `0` for current buffer\n ---@param client_id (integer) The ID of the |vim.lsp.Client|\n ---@param opts? (table) Optional keyword arguments\n ---  - debounce (integer, default: 200): Debounce token requests\n ---        to the server by the given number in milliseconds\n function M.start(bufnr, client_id, opts)\n+  vim.deprecate('vim.lsp.semantic_tokens.start', 'vim.lsp.semantic_tokens.enable(true)', '0.12.0')",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2189880131",
            "id": 2189880131,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6ChutD",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 634,
            "original_position": 88,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 2993549003,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189880131/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T12:12:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189880131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2189882503"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189882503"
                }
            },
            "author_association": "MEMBER",
            "body": "are parts of this doc needed on the new enable() doc ?",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T12:12:46Z",
            "diff_hunk": "@@ -595,12 +624,14 @@ local M = {}\n --- client.server_capabilities.semanticTokensProvider = nil",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2189882503",
            "id": 2189882503,
            "line": 621,
            "node_id": "PRRC_kwDOAPphoM6ChvSH",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 621,
            "original_position": 78,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": 64,
            "pull_request_review_id": 2993552047,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189882503/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T12:12:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189882503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2189886300"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189886300"
                }
            },
            "author_association": "MEMBER",
            "body": "may be more discoverable if this lives near the bottom or top of the file",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T12:13:40Z",
            "diff_hunk": "@@ -671,6 +693,40 @@ function M.stop(bufnr, client_id)\n   end\n end\n \n+-- Semantic tokens is enabled by default\n+util._enable('semantic_tokens', true)",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2189886300",
            "id": 2189886300,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6ChwNc",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 697,
            "original_position": 124,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 2993557825,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189886300/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T12:13:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189886300",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2189892961"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189892961"
                }
            },
            "author_association": "MEMBER",
            "body": "\n\n```suggestion\n  return ('_lsp_enable_%s%s'):format(\n```",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T12:15:04Z",
            "diff_hunk": "@@ -2328,6 +2328,88 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_%s%s_enabled'):format(",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2189892961",
            "id": 2189892961,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Chx1h",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 2334,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 2993566695,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189892961/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T12:15:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189892961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2189896491"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189896491"
                }
            },
            "author_association": "MEMBER",
            "body": "`nil` will print \"nil\", should it be empty something like \"allclients\" ?\n```suggestion\n    client_id and ('_client_%d'):format(client_id) or \"allclients\"\n```",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T12:16:21Z",
            "diff_hunk": "@@ -2328,6 +2328,88 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_%s%s_enabled'):format(\n+    feature,\n+    client_id and ('_client_%d'):format(client_id) or nil",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2189896491",
            "id": 2189896491,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Chysr",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 2336,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 2993572028,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189896491/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T12:16:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2189896491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2190447952"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190447952"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "since `send_request()` itself checks `is_enabled(bufnr)`, do we need to add checks _around_ calls to `send_request()`?",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T15:46:34Z",
            "diff_hunk": "@@ -192,11 +194,13 @@ function STHighlighter:new(bufnr)\n       if not highlighter then\n         return true\n       end\n-      highlighter:on_change()\n+      if M.is_enabled({ bufnr = buf }) then\n+        highlighter:on_change()\n+      end\n     end,\n     on_reload = function(_, buf)\n       local highlighter = STHighlighter.active[buf]\n-      if highlighter then\n+      if highlighter and M.is_enabled({ bufnr = bufnr }) then",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2190447952",
            "id": 2190447952,
            "line": 205,
            "node_id": "PRRC_kwDOAPphoM6Cj5VQ",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 205,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": 21,
            "pull_request_review_id": 2994412056,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190447952/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T16:00:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190447952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2190449430"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190449430"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Here's another one. Seems like maybe it'd be find to just call send_request() and let that function handle checking the enabled flag.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T15:47:02Z",
            "diff_hunk": "@@ -207,7 +211,9 @@ function STHighlighter:new(bufnr)\n     buffer = self.bufnr,\n     group = self.augroup,\n     callback = function()\n-      self:send_request()\n+      if M.is_enabled({ bufnr = bufnr }) then\n+        self:send_request()\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2190449430",
            "id": 2190449430,
            "line": 218,
            "node_id": "PRRC_kwDOAPphoM6Cj5sW",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 218,
            "original_position": 32,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": 32,
            "pull_request_review_id": 2994412056,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190449430/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T16:00:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190449430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2190461532"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190461532"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The original code used a `max(current_value, debounce or 200)` which was originally intended to make it so that later calls to `start()` that didn't have a debounce parameter passed wouldn't override the debounce value that was set previously.\r\n\r\nWhat might be better is in the `else`, to do something like:\r\n\r\n```lua\r\nhighlighter.debounce = debounce or higlighter.debounce or 200\r\n```",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T15:51:07Z",
            "diff_hunk": "@@ -580,7 +591,25 @@ function STHighlighter:reset_timer()\n   end\n end\n \n-local M = {}\n+---@param bufnr (integer) Buffer number, or `0` for current buffer\n+---@param client_id (integer) The ID of the |vim.lsp.Client|\n+---@param debounce? (integer) (default: 200): Debounce token requests\n+---        to the server by the given number in milliseconds\n+function M._start(bufnr, client_id, debounce)\n+  local highlighter = STHighlighter.active[bufnr]\n+\n+  if not highlighter then\n+    highlighter = STHighlighter:new(bufnr)\n+    highlighter.debounce = debounce or 200\n+  else\n+    highlighter.debounce = debounce or 200\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2190461532",
            "id": 2190461532,
            "line": 603,
            "node_id": "PRRC_kwDOAPphoM6Cj8pc",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 603,
            "original_position": 67,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": 53,
            "pull_request_review_id": 2994412056,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190461532/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T16:00:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190461532",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2190624958"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190624958"
                }
            },
            "author_association": "MEMBER",
            "body": "We should also add a `vim.deprecate` call here.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T16:49:56Z",
            "diff_hunk": "@@ -651,6 +672,7 @@ end\n --- of `start()`, so you should only need this function to manually disengage the semantic\n --- token engine without fully detaching the LSP client from the buffer.\n ---\n+---@deprecated\n ---@param bufnr (integer) Buffer number, or `0` for current buffer\n ---@param client_id (integer) The ID of the |vim.lsp.Client|\n function M.stop(bufnr, client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2190624958",
            "id": 2190624958,
            "line": 675,
            "node_id": "PRRC_kwDOAPphoM6Ckki-",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 675,
            "original_position": 118,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": 104,
            "pull_request_review_id": 2994683308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190624958/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T16:51:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190624958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2190627510"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190627510"
                }
            },
            "author_association": "MEMBER",
            "body": "For better completion and type checking, it would be nice to make this an enum of string literals.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-07T16:51:22Z",
            "diff_hunk": "@@ -2328,6 +2328,88 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_%s%s_enabled'):format(\n+    feature,\n+    client_id and ('_client_%d'):format(client_id) or nil\n+  )\n+end\n+\n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('feature', feature, 'string')\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = make_enable_var(feature)\n+  local client_var = make_enable_var(feature, client_id)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2190627510",
            "id": 2190627510,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6CklK2",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 2369,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 2994683308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190627510/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-07T16:51:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2190627510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195321586"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195321586"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Not needed, because it is expected to use `enable(false)` to disable now. In the past, under the `start` method, this was the only way. `stop` is only used to disable after it has already started.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T15:28:18Z",
            "diff_hunk": "@@ -595,12 +624,14 @@ local M = {}\n --- client.server_capabilities.semanticTokensProvider = nil",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195321586",
            "id": 2195321586,
            "in_reply_to_id": 2189882503,
            "line": 621,
            "node_id": "PRRC_kwDOAPphoM6C2fLy",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 621,
            "original_position": 78,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": 64,
            "pull_request_review_id": 3002022640,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195321586/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T15:28:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195321586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195358038"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195358038"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thank you. I think since the already created `highlighter.debounce` must not be empty (determined by the if branch), the `or 200` here actually has no effect. I changed it to the form `debounce or highlighter.debounce`.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T15:46:06Z",
            "diff_hunk": "@@ -580,7 +591,25 @@ function STHighlighter:reset_timer()\n   end\n end\n \n-local M = {}\n+---@param bufnr (integer) Buffer number, or `0` for current buffer\n+---@param client_id (integer) The ID of the |vim.lsp.Client|\n+---@param debounce? (integer) (default: 200): Debounce token requests\n+---        to the server by the given number in milliseconds\n+function M._start(bufnr, client_id, debounce)\n+  local highlighter = STHighlighter.active[bufnr]\n+\n+  if not highlighter then\n+    highlighter = STHighlighter:new(bufnr)\n+    highlighter.debounce = debounce or 200\n+  else\n+    highlighter.debounce = debounce or 200\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195358038",
            "id": 2195358038,
            "in_reply_to_id": 2190461532,
            "line": 603,
            "node_id": "PRRC_kwDOAPphoM6C2oFW",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 603,
            "original_position": 67,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": 53,
            "pull_request_review_id": 3002079731,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195358038/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T15:46:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195358038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195363004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195363004"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "My original idea was the opposite; I did not intend to call `is_enabled` inside `send_request()` (the current situation is my oversight), mainly because I thought that returning directly in the autocmd when `is_enabled == false` would make the code logic clearer.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T15:48:46Z",
            "diff_hunk": "@@ -192,11 +194,13 @@ function STHighlighter:new(bufnr)\n       if not highlighter then\n         return true\n       end\n-      highlighter:on_change()\n+      if M.is_enabled({ bufnr = buf }) then\n+        highlighter:on_change()\n+      end\n     end,\n     on_reload = function(_, buf)\n       local highlighter = STHighlighter.active[buf]\n-      if highlighter then\n+      if highlighter and M.is_enabled({ bufnr = bufnr }) then",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195363004",
            "id": 2195363004,
            "in_reply_to_id": 2190447952,
            "line": 205,
            "node_id": "PRRC_kwDOAPphoM6C2pS8",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 205,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": 21,
            "pull_request_review_id": 3002087525,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195363004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T15:48:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195363004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195380002"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195380002"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I changed it to an empty string, which was my original intention.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T15:56:08Z",
            "diff_hunk": "@@ -2328,6 +2328,88 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_%s%s_enabled'):format(\n+    feature,\n+    client_id and ('_client_%d'):format(client_id) or nil",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195380002",
            "id": 2195380002,
            "in_reply_to_id": 2189896491,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C2tci",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 2336,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 3002111793,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195380002/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T15:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195380002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195394316"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195394316"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In my previous refactor of `_folding_range.lua`, I used the former naming format, so here I have updated the naming to the one you suggested.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:00:16Z",
            "diff_hunk": "@@ -2328,6 +2328,88 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_%s%s_enabled'):format(",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195394316",
            "id": 2195394316,
            "in_reply_to_id": 2189892961,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C2w8M",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 2334,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 3002131190,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195394316/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:00:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195394316",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195405842"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195405842"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't quite understand how to do it. Currently, we don't have type completion and checking for `vim.g`/`vim.b`. I attempted to achieve this, but I'm still unsure how to implement it.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:03:52Z",
            "diff_hunk": "@@ -2328,6 +2328,88 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_%s%s_enabled'):format(\n+    feature,\n+    client_id and ('_client_%d'):format(client_id) or nil\n+  )\n+end\n+\n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('feature', feature, 'string')\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = make_enable_var(feature)\n+  local client_var = make_enable_var(feature, client_id)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195405842",
            "id": 2195405842,
            "in_reply_to_id": 2190627510,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C2zwS",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 2369,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 3002148976,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195405842/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:03:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195405842",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195423395"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195423395"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this is what @MariaSolOs was intending:\r\n\r\n    ---@param feature 'foo'|'bar'|'baz'\r\n\r\nThat will have autocompletion from LuaLs.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:09:40Z",
            "diff_hunk": "@@ -2328,6 +2328,88 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_%s%s_enabled'):format(\n+    feature,\n+    client_id and ('_client_%d'):format(client_id) or nil\n+  )\n+end\n+\n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('feature', feature, 'string')\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = make_enable_var(feature)\n+  local client_var = make_enable_var(feature, client_id)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195423395",
            "id": 2195423395,
            "in_reply_to_id": 2190627510,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C24Cj",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 2369,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 3002179945,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195423395/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:09:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195423395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195433207"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195433207"
                }
            },
            "author_association": "MEMBER",
            "body": "it's private so we wouldn't announce this. rather, I was thinking we should announce the semantics_token change from start/stop to enable().\n\nAlso should update deprecated.txt",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:13:55Z",
            "diff_hunk": "@@ -202,6 +202,7 @@ LSP\n • LSP `DiagnosticRelatedInformation` is now shown in\n   |vim.diagnostic.open_float()|. It is read from the LSP diagnostic object\n   stored in the `user_data` field.\n+• `vim.lsp.util._enable/_is_enabled` for unifying enable/is_enabled logic",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195433207",
            "id": 2195433207,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C26b3",
            "original_commit_id": "1aa318adc4bff46f93f98ad020f96a6752fc9cf8",
            "original_line": 207,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 3002196592,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195433207/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:13:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195433207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195439638"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195439638"
                }
            },
            "author_association": "MEMBER",
            "body": "ternary",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:17:24Z",
            "diff_hunk": "@@ -2335,6 +2335,85 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_enabled_%s%s'):format(feature, client_id and ('_client_%d'):format(client_id) or '')\n+end\n+\n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('feature', feature, 'string')\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = make_enable_var(feature)\n+  local client_var = make_enable_var(feature, client_id)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string\n+---@param enable? boolean\n+---@param filter? vim.lsp.enable.Filter\n+function M._enable(feature, enable, filter)\n+  vim.validate('feature', feature, 'string')\n+  vim.validate('enable', enable, 'boolean', true)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  enable = enable == nil or enable\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+  assert(\n+    not (bufnr and client_id),\n+    'Only one of `bufnr` or `client_id` filters can be specified at a time.'\n+  )\n+\n+  local var = make_enable_var(feature)\n+  local client_var = make_enable_var(feature, client_id)\n+\n+  if client_id then\n+    if enable == vim.g[var] then\n+      vim.g[client_var] = nil\n+    else\n+      vim.g[client_var] = enable\n+    end\n+  elseif bufnr then\n+    if enable == vim.g[var] then\n+      vim.b[bufnr][var] = nil\n+    else\n+      vim.b[bufnr][var] = enable",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195439638",
            "id": 2195439638,
            "line": 2404,
            "node_id": "PRRC_kwDOAPphoM6C28AW",
            "original_commit_id": "1aa318adc4bff46f93f98ad020f96a6752fc9cf8",
            "original_line": 2404,
            "original_position": 65,
            "original_start_line": 2396,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 65,
            "pull_request_review_id": 3002207390,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195439638/reactions"
            },
            "side": "RIGHT",
            "start_line": 2401,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-09T16:17:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195439638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195446699"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195446699"
                }
            },
            "author_association": "MEMBER",
            "body": "(Non-blocker; we can try it out and revisit later:) This could end up creating many top-level _lsp_...<client> vars. That's pretty noisy. It might be worth the trouble to define a single _lsp_enable table and manage things in there, e.g.\n\n```\n_lsp_enable = {\n  client = { [42] = true, [78] = true, ... },\n}\n```",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:20:43Z",
            "diff_hunk": "@@ -2335,6 +2335,85 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_enabled_%s%s'):format(feature, client_id and ('_client_%d'):format(client_id) or '')",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195446699",
            "id": 2195446699,
            "line": 2346,
            "node_id": "PRRC_kwDOAPphoM6C29ur",
            "original_commit_id": "1aa318adc4bff46f93f98ad020f96a6752fc9cf8",
            "original_line": 2346,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 7,
            "pull_request_review_id": 3002217446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195446699/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-13T03:42:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195446699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195457083"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195457083"
                }
            },
            "author_association": "MEMBER",
            "body": "the old test also specified client_id, should it still ?",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:26:13Z",
            "diff_hunk": "@@ -325,7 +323,7 @@ describe('semantic token highlighting', function()\n       exec_lua(function()\n         --- @diagnostic disable-next-line:duplicate-set-field\n         vim.notify = function() end\n-        vim.lsp.semantic_tokens.stop(0, client_id)\n+        vim.lsp.semantic_tokens.enable(false, { bufnr = 0 })",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195457083",
            "id": 2195457083,
            "line": 326,
            "node_id": "PRRC_kwDOAPphoM6C3AQ7",
            "original_commit_id": "1aa318adc4bff46f93f98ad020f96a6752fc9cf8",
            "original_line": 326,
            "original_position": 55,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/semantic_tokens_spec.lua",
            "position": 55,
            "pull_request_review_id": 3002234394,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195457083/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:26:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195457083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195459170"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195459170"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ternary cannot be used here because\r\n```lua\r\nvim.b[bufnr][var] = enable == vim.g[var] and nil or enable\r\n```\r\nIn this case, `and nil or enable` will always return `enable`, `nil` will never be returned.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:27:28Z",
            "diff_hunk": "@@ -2335,6 +2335,85 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_enabled_%s%s'):format(feature, client_id and ('_client_%d'):format(client_id) or '')\n+end\n+\n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('feature', feature, 'string')\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = make_enable_var(feature)\n+  local client_var = make_enable_var(feature, client_id)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string\n+---@param enable? boolean\n+---@param filter? vim.lsp.enable.Filter\n+function M._enable(feature, enable, filter)\n+  vim.validate('feature', feature, 'string')\n+  vim.validate('enable', enable, 'boolean', true)\n+  vim.validate('filter', filter, 'table', true)\n+\n+  enable = enable == nil or enable\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+  assert(\n+    not (bufnr and client_id),\n+    'Only one of `bufnr` or `client_id` filters can be specified at a time.'\n+  )\n+\n+  local var = make_enable_var(feature)\n+  local client_var = make_enable_var(feature, client_id)\n+\n+  if client_id then\n+    if enable == vim.g[var] then\n+      vim.g[client_var] = nil\n+    else\n+      vim.g[client_var] = enable\n+    end\n+  elseif bufnr then\n+    if enable == vim.g[var] then\n+      vim.b[bufnr][var] = nil\n+    else\n+      vim.b[bufnr][var] = enable",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195459170",
            "id": 2195459170,
            "in_reply_to_id": 2195439638,
            "line": 2404,
            "node_id": "PRRC_kwDOAPphoM6C3Axi",
            "original_commit_id": "1aa318adc4bff46f93f98ad020f96a6752fc9cf8",
            "original_line": 2404,
            "original_position": 65,
            "original_start_line": 2396,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 65,
            "pull_request_review_id": 3002237486,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195459170/reactions"
            },
            "side": "RIGHT",
            "start_line": 2401,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-09T16:27:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195459170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195471580"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195471580"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is because `stop` had to have `client_id` as a parameter (which also meant there was no way to apply it to all clients). I have reviewed these tests before, and they do not specifically check whether the `client_id` parameter is valid.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:35:03Z",
            "diff_hunk": "@@ -325,7 +323,7 @@ describe('semantic token highlighting', function()\n       exec_lua(function()\n         --- @diagnostic disable-next-line:duplicate-set-field\n         vim.notify = function() end\n-        vim.lsp.semantic_tokens.stop(0, client_id)\n+        vim.lsp.semantic_tokens.enable(false, { bufnr = 0 })",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195471580",
            "id": 2195471580,
            "in_reply_to_id": 2195457083,
            "line": 326,
            "node_id": "PRRC_kwDOAPphoM6C3Dzc",
            "original_commit_id": "1aa318adc4bff46f93f98ad020f96a6752fc9cf8",
            "original_line": 326,
            "original_position": 55,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/semantic_tokens_spec.lua",
            "position": 55,
            "pull_request_review_id": 3002256328,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195471580/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:35:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195471580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195495411"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195495411"
                }
            },
            "author_association": "MEMBER",
            "body": "lint will fail since these tags don't exist\n```suggestion\n• *vim.lsp.semantic_tokens.start()*\tUse `vim.lsp.semantic_tokens.enable(true)` instead\n• *vim.lsp.semantic_tokens.stop()*\tUse `vim.lsp.semantic_tokens.enable(false)` instead\n```",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:49:38Z",
            "diff_hunk": "@@ -35,6 +35,8 @@ LSP\n \t\t\t\t\t`vim.wo.conceallevel = 2`.\n • *vim.lsp.log.should_log()*\t\tUse |vim.lsp.log.set_format_func()| instead\n \t\t\t\t\tand return `nil` to omit entries from the logfile.\n+• *vim.lsp.semantic_tokens.start()*\tUse |vim.lsp.semantic_tokens.enable(true)| instead\n+• *vim.lsp.semantic_tokens.stop()*\tUse |vim.lsp.semantic_tokens.enable(false)| instead",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195495411",
            "id": 2195495411,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C3Jnz",
            "original_commit_id": "dcb69a4eb54cc983ca5d4f6d594de52b83fd671f",
            "original_line": 39,
            "original_position": 5,
            "original_start_line": 38,
            "path": "runtime/doc/deprecated.txt",
            "position": null,
            "pull_request_review_id": 3002292479,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195495411/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-07-09T16:49:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195495411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195496321"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195496321"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\n```",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T16:50:04Z",
            "diff_hunk": "@@ -202,6 +204,7 @@ LSP\n • LSP `DiagnosticRelatedInformation` is now shown in\n   |vim.diagnostic.open_float()|. It is read from the LSP diagnostic object\n   stored in the `user_data` field.\n+• `vim.lsp.util._enable/_is_enabled` for unifying enable/is_enabled logic",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195496321",
            "id": 2195496321,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C3J2B",
            "original_commit_id": "dcb69a4eb54cc983ca5d4f6d594de52b83fd671f",
            "original_line": 207,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 3002294282,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195496321/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T16:50:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195496321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2195673764"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195673764"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes that's what I meant!",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-09T18:00:49Z",
            "diff_hunk": "@@ -2328,6 +2328,88 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_%s%s_enabled'):format(\n+    feature,\n+    client_id and ('_client_%d'):format(client_id) or nil\n+  )\n+end\n+\n+---@class vim.lsp.enable.Filter\n+---@inlinedoc\n+---\n+--- Buffer number, or 0 for current buffer, or nil for all.\n+---@field bufnr? integer\n+---\n+--- Client ID, or nil for all\n+---@field client_id? integer\n+\n+---@param feature string\n+---@param filter? vim.lsp.enable.Filter\n+function M._is_enabled(feature, filter)\n+  vim.validate('feature', feature, 'string')\n+  vim.validate('filter', filter, 'table', true)\n+\n+  filter = filter or {}\n+  local bufnr = filter.bufnr\n+  local client_id = filter.client_id\n+\n+  local var = make_enable_var(feature)\n+  local client_var = make_enable_var(feature, client_id)\n+  return vim.F.if_nil(client_id and vim.g[client_var], vim.g[var])\n+    and vim.F.if_nil(bufnr and vim.b[bufnr][var], vim.g[var])\n+end\n+\n+---@param feature string",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2195673764",
            "id": 2195673764,
            "in_reply_to_id": 2190627510,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6C31Kk",
            "original_commit_id": "74170eec55fab55e72a0de7cd3547c8bc990d7f2",
            "original_line": 2369,
            "original_position": 38,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 3002595338,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195673764/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-09T18:00:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2195673764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2203117959"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203117959"
                }
            },
            "author_association": "MEMBER",
            "body": "Actually, could we store this info on the `client` object itself? Any time the \"key\" is the client-id, it usually makes sense to store the data on the `Client`. Or is that not possible because of \"lifecycle\" requirements (maybe we need a `on_dispose` hook on the client?)",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-13T03:33:23Z",
            "diff_hunk": "@@ -2335,6 +2335,85 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_enabled_%s%s'):format(feature, client_id and ('_client_%d'):format(client_id) or '')",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2203117959",
            "id": 2203117959,
            "in_reply_to_id": 2195446699,
            "line": 2346,
            "node_id": "PRRC_kwDOAPphoM6DUOmH",
            "original_commit_id": "1aa318adc4bff46f93f98ad020f96a6752fc9cf8",
            "original_line": 2346,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 7,
            "pull_request_review_id": 3013816894,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203117959/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-13T03:42:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203117959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34797#discussion_r2203142442"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34797"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203142442"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is one of the \"reasonable approach\" I mentioned in that comment below. I'd seriously consider this solution, but I'm wondering if we can directly change the logic since we changed the information stored in the `client`, since `vim.lsp.Capability` is created in `client.lua`? There may be a better way to achieve the goal of `enable`, `Capability` and `Client` working together.",
            "commit_id": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
            "created_at": "2025-07-13T03:58:23Z",
            "diff_hunk": "@@ -2335,6 +2335,85 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@param feature string\n+---@param client_id? integer\n+local function make_enable_var(feature, client_id)\n+  return ('_lsp_enabled_%s%s'):format(feature, client_id and ('_client_%d'):format(client_id) or '')",
            "html_url": "https://github.com/neovim/neovim/pull/34797#discussion_r2203142442",
            "id": 2203142442,
            "in_reply_to_id": 2195446699,
            "line": 2346,
            "node_id": "PRRC_kwDOAPphoM6DUUkq",
            "original_commit_id": "1aa318adc4bff46f93f98ad020f96a6752fc9cf8",
            "original_line": 2346,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 7,
            "pull_request_review_id": 3013850709,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203142442/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-13T04:00:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2203142442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "There are some tests for `start/stop` that cause the tests to fail, so I think I need to write some new tests for this utility function.\r\n\r\nEdit: I've updated the tests.",
            "created_at": "2025-07-06T03:36:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/34797#issuecomment-3040705400",
            "id": 3040705400,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34797",
            "node_id": "IC_kwDOAPphoM61PXt4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3040705400/reactions"
            },
            "updated_at": "2025-07-06T06:15:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3040705400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Would it make sense in the future to pass a function to these utililty functions which runs on clients/buffers when enabling/disabling? I've come to understand (maybe incorrectly...) that a lot of LSP modules/handlers rely on an imperative style of enabling/disabling. That is, `foo.enable(buf)` doesn't just mark the feature as enabled for `buf`, but also actively *attaches* to the buffer to start the feature. Similarly, `foo.disable(buf)` would detach. All modules that act like this still need their own duplicated logic to attach/detach when necessary, which gets more complicated since e.g. when globally enabling, they have to attach to all open buffers, etc.\r\n\r\nWould be nice if we could just pass attach/detach funcs to the enabler to handle this for us, it would make these utilities a lot more helpful imo. But let me know if this is wrong or just wouldn't work.",
            "created_at": "2025-07-06T14:15:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/34797#issuecomment-3041768053",
            "id": 3041768053,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34797",
            "node_id": "IC_kwDOAPphoM61TbJ1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3041768053/reactions"
            },
            "updated_at": "2025-07-06T14:15:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3041768053",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "My current approach is to separate the `attach` step from the `enable` step, so that they do not depend on each other. My current plan is for these features to always attach to the buffer (when there is a supported client in the buffer, which is done in #34639), but whether to enable these features is decided by the user, and enabling them on a buffer that has not been attached will not cause an error (because a client may attach in the future).\r\n\r\n> Would be nice if we could just pass attach/detach funcs to the enabler to handle this for us, it would make these utilities a lot more helpful imo. But let me know if this is wrong or just wouldn't work.\r\n\r\nI am optimistic about this; rather, this is the direction I plan to explore in the future. But it seems a bit too early at the moment, as we do not have enough modules using `enable` and `attach`, and the logic of these modules is completely independent (#34639 is trying to address this). So my current idea is to first separate the logic of `enable` and `attach`, and make further changes when there is a clear direction.",
            "created_at": "2025-07-06T14:49:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/34797#issuecomment-3041868034",
            "id": 3041868034,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34797",
            "node_id": "IC_kwDOAPphoM61TzkC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3041868034/reactions"
            },
            "updated_at": "2025-07-06T14:49:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3041868034",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks to @ribru17 and @jdrouhard for the feedback. I also don't think relying solely on continuous checks is a perfect implementation; it's just that during the previous refactor of `vim.lsp.Capability`, I separated these cached data from the `enable` logic temporarily to give them a clear lifecycle.\r\n\r\nThere is definitely a way to coordinate `enable` with `vim.lsp.Capability`. We can ensure that no `Capability` is created when `enable(false)` is called(this means we do not need to check `is_enabled` when every autocmd event was triggered), when `enable(true)` is called, all clients are rechecked and `Capability` is created accordingly. This may indicate that it would be more reasonable to have a single `vim.lsp.enable({feature})` instead of adding `vim.lsp.{feature}.enable` separately in each module, thereby handling such logic in one place. This is the next issue I want to solve when refactoring `enable`, but I haven't yet found the most reasonable approach.",
            "created_at": "2025-07-09T16:23:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/34797#issuecomment-3053273738",
            "id": 3053273738,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34797",
            "node_id": "IC_kwDOAPphoM61_UKK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3053273738/reactions"
            },
            "updated_at": "2025-07-09T16:23:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3053273738",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We can ensure that no `Capability` is created when `enable(false)` is called(this means we do not need to check `is_enabled` when every autocmd event was triggered), when `enable(true)` is called, all clients are rechecked and `Capability` is created accordingly. This may indicate that it would be more reasonable to have a single `vim.lsp.enable({feature})`\r\n\r\nInteresting! Definitely worth exploring in a followup. This PR looks like an improvement and we can continue to iterate later. Nice work!",
            "created_at": "2025-07-09T16:28:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/34797#issuecomment-3053288720",
            "id": 3053288720,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34797",
            "node_id": "IC_kwDOAPphoM61_X0Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3053288720/reactions"
            },
            "updated_at": "2025-07-09T16:28:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3053288720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Merging, we can continue in followup PRs. Thanks @ofseed and reviewers!\r\n\r\nAn open question is whether we should actually just store state [on the client object](https://github.com/neovim/neovim/pull/34797#discussion_r2195446699). For any per-client data, that seems much simpler than maintaining parallel per-client state holders. And if needed, we can add a `on_dispose` hook (for example) to the clients, so consumers like this PR can do \"cleanup\" when a client is destroyed.\r\n\r\nI raised a similar question in two other LSP prs ([#34388](https://github.com/neovim/neovim/pull/34388#discussion_r2196343686), [#34637](https://github.com/neovim/neovim/pull/34637#discussion_r2191305351))",
            "created_at": "2025-07-13T03:41:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/34797#issuecomment-3066511037",
            "id": 3066511037,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34797",
            "node_id": "IC_kwDOAPphoM62xz69",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066511037/reactions"
            },
            "updated_at": "2025-07-13T03:41:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3066511037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34797/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34797/commits",
    "created_at": "2025-07-05T14:17:42Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34797.diff",
    "draft": false,
    "head": {
        "label": "ofseed:refactor-enable",
        "ref": "refactor-enable",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ofseed/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ofseed/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ofseed/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ofseed/neovim/branches{/branch}",
            "clone_url": "https://github.com/ofseed/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ofseed/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ofseed/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ofseed/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ofseed/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ofseed/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ofseed/neovim/contributors",
            "created_at": "2021-11-30T18:13:03Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ofseed/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ofseed/neovim/downloads",
            "events_url": "https://api.github.com/repos/ofseed/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ofseed/neovim/forks",
            "full_name": "ofseed/neovim",
            "git_commits_url": "https://api.github.com/repos/ofseed/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ofseed/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ofseed/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ofseed/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ofseed/neovim/hooks",
            "html_url": "https://github.com/ofseed/neovim",
            "id": 433537354,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ofseed/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ofseed/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ofseed/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ofseed/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ofseed/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ofseed/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ofseed/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ofseed/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGddBSg",
            "notifications_url": "https://api.github.com/repos/ofseed/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ofseed/neovim/pulls{/number}",
            "pushed_at": "2025-07-21T10:38:55Z",
            "releases_url": "https://api.github.com/repos/ofseed/neovim/releases{/id}",
            "size": 325328,
            "ssh_url": "git@github.com:ofseed/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ofseed/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ofseed/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ofseed/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ofseed/neovim/subscription",
            "svn_url": "https://github.com/ofseed/neovim",
            "tags_url": "https://api.github.com/repos/ofseed/neovim/tags",
            "teams_url": "https://api.github.com/repos/ofseed/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ofseed/neovim/git/trees{/sha}",
            "updated_at": "2025-07-21T08:45:39Z",
            "url": "https://api.github.com/repos/ofseed/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
            "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
            "followers_url": "https://api.github.com/users/ofseed/followers",
            "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ofseed",
            "id": 61115159,
            "login": "ofseed",
            "node_id": "MDQ6VXNlcjYxMTE1MTU5",
            "organizations_url": "https://api.github.com/users/ofseed/orgs",
            "received_events_url": "https://api.github.com/users/ofseed/received_events",
            "repos_url": "https://api.github.com/users/ofseed/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ofseed",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34797",
    "id": 2643405482,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34797",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        }
    ],
    "locked": false,
    "merge_commit_sha": "5c4f9b05fa4b73ff64a16535af2f0021f83ee0ad",
    "merged_at": "2025-07-13T03:44:21Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6djyqq",
    "number": 34797,
    "patch_url": "https://github.com/neovim/neovim/pull/34797.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34797/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7e8aa0585ec6ebac2dc1d81bf6ead75c61564bc4",
    "title": "refactor(lsp): utility functions for enable()/is_enabled()",
    "updated_at": "2025-07-21T08:05:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34797",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
        "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
        "followers_url": "https://api.github.com/users/ofseed/followers",
        "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
        "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ofseed",
        "id": 61115159,
        "login": "ofseed",
        "node_id": "MDQ6VXNlcjYxMTE1MTU5",
        "organizations_url": "https://api.github.com/users/ofseed/orgs",
        "received_events_url": "https://api.github.com/users/ofseed/received_events",
        "repos_url": "https://api.github.com/users/ofseed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ofseed",
        "user_view_type": "public"
    }
}