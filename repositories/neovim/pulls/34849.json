{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34849/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34849/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34849"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34849"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34849/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34849"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/6d5406ec88162dedd975d86ba4a9d139015e0008"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6210,
            "forks_count": 6210,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1969,
            "open_issues_count": 1969,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-07-29T02:23:07Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 334730,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 91452,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-29T02:23:15Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 91452,
            "watchers_count": 91452,
            "web_commit_signoff_required": false
        },
        "sha": "7a051a4c389452b4955c22e3c29071433e01905a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "The current LSP parser treats absent fields and explicitly `null` fields the same, collapsing both into nil.\r\n\r\nOne possible solution would be to remove the 'object' flag and do explicit presence checks in all LSP handlers. But this would introduce a lot of unnecessary boilerplate in places where it doesn't matter, since the distinction between `null` and missing only matters for a few specific LSP types.\r\n\r\nThe fix I currently have in a draft state is to track `?|null` paths in a static tree, which is (ideally) generated from the spec. This allows handling of certain key paths explicitly and emit `vim.NIL` for `null`, keeping nil reserved for missing fields. This approach works and fixes #31368 and unblocks #34838.\r\n\r\nHowever, it comes with some drawbacks: the parser doesn't know the actual expected type when encountering a key path like \"result.data\"; this path could appear in multiple methods, not just CodeAction responses.\r\n\r\n\r\nWhat would be ideal is to make the parser type-aware. That is:\r\n\r\n- Parse the top-level response object.\r\n\r\n- Use the \"id\" to find the method name that was originally sent.\r\n\r\n- With that context, parse the \"result\" or \"error\" field according to the expected schema for that method.\r\n\r\nThis is how it typically works in statically typed languages: the response handler already knows the expected structure, since it needs to allocate a concrete struct. In Lua, we don’t have static typing, and as far as I know, there’s no native way to enforce such schemas during deserialization.\r\n\r\nA type-aware parser would not only solve the `null` vs `undefined` distinction cleanly, but also allow validating responses and reporting errors early if the server breaks the spec contract. It would give us fully type-safe LSP handlers.\r\n\r\nAt this point, I’m not sure in which direction I should continue. Should I explore building a proper type-aware parser, or focus on improving the current approach by generating the path tree from the spec and documenting it better?\r\n\r\nI feel like I might be missing something, so I'd really appreciate any feedback, guidance, or alternative ideas.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34849#discussion_r2217901567"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34849"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2217901567"
                }
            },
            "author_association": "MEMBER",
            "body": "Should this behavior be specific to LSP? I can see it being helpful in other scenarios.",
            "commit_id": "6d5406ec88162dedd975d86ba4a9d139015e0008",
            "created_at": "2025-07-20T17:51:29Z",
            "diff_hunk": "@@ -30,6 +30,10 @@ vim.json = {}\n ---                                   to Lua `nil` instead of |vim.NIL|.\n ---                                 - array: (boolean) When true, converts `null` in JSON arrays\n ---                                   to Lua `nil` instead of |vim.NIL|.\n+---                                 - lsp: (boolean) Similar to `object`, but applies",
            "html_url": "https://github.com/neovim/neovim/pull/34849#discussion_r2217901567",
            "id": 2217901567,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6EMn3_",
            "original_commit_id": "ea5873b0958953cca79d3f678d096a39d8e14cdc",
            "original_line": 33,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/json.lua",
            "position": null,
            "pull_request_review_id": 3036108870,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34849",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2217901567/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-20T17:52:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2217901567",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34849#discussion_r2217903492"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34849"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2217903492"
                }
            },
            "author_association": "NONE",
            "body": "It could be unified, but then there should be a way to use alternative trees. I can also imagine passing the tree dynamically from Lua instead of defining it statically. However, as I mentioned earlier, I'm not sure how suitable this approach really is, since keys can collide between different types.",
            "commit_id": "6d5406ec88162dedd975d86ba4a9d139015e0008",
            "created_at": "2025-07-20T17:57:46Z",
            "diff_hunk": "@@ -30,6 +30,10 @@ vim.json = {}\n ---                                   to Lua `nil` instead of |vim.NIL|.\n ---                                 - array: (boolean) When true, converts `null` in JSON arrays\n ---                                   to Lua `nil` instead of |vim.NIL|.\n+---                                 - lsp: (boolean) Similar to `object`, but applies",
            "html_url": "https://github.com/neovim/neovim/pull/34849#discussion_r2217903492",
            "id": 2217903492,
            "in_reply_to_id": 2217901567,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6EMoWE",
            "original_commit_id": "ea5873b0958953cca79d3f678d096a39d8e14cdc",
            "original_line": 33,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/json.lua",
            "position": null,
            "pull_request_review_id": 3036110583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34849",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2217903492/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-20T17:57:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2217903492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34849#discussion_r2218786400"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34849"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2218786400"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd prefer keeping cjson decoupled from LSP.\r\nIt would be okayish to extend the luanil support to allow to parametrize concerte paths instead of a general true/false but overall I wonder if we instead shouldn't bite the bullet and deserialize null as vim.NIL for the LSP RPC and then handle vim.NIL everywhere as needed",
            "commit_id": "6d5406ec88162dedd975d86ba4a9d139015e0008",
            "created_at": "2025-07-21T10:33:47Z",
            "diff_hunk": "@@ -30,6 +30,10 @@ vim.json = {}\n ---                                   to Lua `nil` instead of |vim.NIL|.\n ---                                 - array: (boolean) When true, converts `null` in JSON arrays\n ---                                   to Lua `nil` instead of |vim.NIL|.\n+---                                 - lsp: (boolean) Similar to `object`, but applies",
            "html_url": "https://github.com/neovim/neovim/pull/34849#discussion_r2218786400",
            "id": 2218786400,
            "in_reply_to_id": 2217901567,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6EP_5g",
            "original_commit_id": "ea5873b0958953cca79d3f678d096a39d8e14cdc",
            "original_line": 33,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/json.lua",
            "position": null,
            "pull_request_review_id": 3037469154,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34849",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2218786400/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-21T10:33:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2218786400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34849#discussion_r2218987769"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34849"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2218987769"
                }
            },
            "author_association": "NONE",
            "body": "> I wonder if we instead shouldn't bite the bullet and deserialize null as vim.NIL for the LSP RPC and then handle vim.NIL everywhere as needed\r\n\r\nThat seems like the right approach, and it might not require too many changes - after all, it's a server responsibility to follow the spec and do not return null for a `?` field.\r\n\r\nBut I'm concerned that we don't know how many servers actually rely on this client behavior. I can't imagine every server adapting quickly after users start seeing error messages on every LSP request after Neovim update - especially when VSC*de is completely fine with this kind of spec non-compliance.",
            "commit_id": "6d5406ec88162dedd975d86ba4a9d139015e0008",
            "created_at": "2025-07-21T12:00:12Z",
            "diff_hunk": "@@ -30,6 +30,10 @@ vim.json = {}\n ---                                   to Lua `nil` instead of |vim.NIL|.\n ---                                 - array: (boolean) When true, converts `null` in JSON arrays\n ---                                   to Lua `nil` instead of |vim.NIL|.\n+---                                 - lsp: (boolean) Similar to `object`, but applies",
            "html_url": "https://github.com/neovim/neovim/pull/34849#discussion_r2218987769",
            "id": 2218987769,
            "in_reply_to_id": 2217901567,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6EQxD5",
            "original_commit_id": "ea5873b0958953cca79d3f678d096a39d8e14cdc",
            "original_line": 33,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/json.lua",
            "position": null,
            "pull_request_review_id": 3037771521,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34849",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2218987769/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-21T12:00:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2218987769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34849#discussion_r2219717420"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34849"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2219717420"
                }
            },
            "author_association": "MEMBER",
            "body": "> But I'm concerned that we don't know how many servers actually rely on this client behavior. I can't imagine every server adapting quickly after users start seeing error messages on every LSP request after Neovim update\r\n\r\nWe can use the dev cycle to learn that. Worst case we revert the commit before release if it would leave too many non-compliant servers broken",
            "commit_id": "6d5406ec88162dedd975d86ba4a9d139015e0008",
            "created_at": "2025-07-21T16:42:14Z",
            "diff_hunk": "@@ -30,6 +30,10 @@ vim.json = {}\n ---                                   to Lua `nil` instead of |vim.NIL|.\n ---                                 - array: (boolean) When true, converts `null` in JSON arrays\n ---                                   to Lua `nil` instead of |vim.NIL|.\n+---                                 - lsp: (boolean) Similar to `object`, but applies",
            "html_url": "https://github.com/neovim/neovim/pull/34849#discussion_r2219717420",
            "id": 2219717420,
            "in_reply_to_id": 2217901567,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6ETjMs",
            "original_commit_id": "ea5873b0958953cca79d3f678d096a39d8e14cdc",
            "original_line": 33,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/json.lua",
            "position": null,
            "pull_request_review_id": 3038900264,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34849",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2219717420/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-07-21T16:42:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2219717420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "CC @justinmk @MariaSolOs ",
            "created_at": "2025-07-20T17:23:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/34849#issuecomment-3094661849",
            "id": 3094661849,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34849",
            "node_id": "IC_kwDOAPphoM64dMrZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3094661849/reactions"
            },
            "updated_at": "2025-07-20T17:23:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3094661849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Another idea I have is to add the ability to pass a list of keys to `decode()` that should not be decoded - leaving the corresponding nodes as-is in the final object (like json.RawMessage in Go). It would also make it possible to ignore decoding for fields like \"data\". For types with nullable fields, this would let us handle them specifically, since the expected type is already known. It’s a middle ground between the current parser and a fully type-aware parser that traverses the full expected schema tree.",
            "created_at": "2025-07-20T18:22:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/34849#issuecomment-3094690829",
            "id": 3094690829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34849",
            "node_id": "IC_kwDOAPphoM64dTwN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3094690829/reactions"
            },
            "updated_at": "2025-07-20T18:22:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3094690829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "test failing for some reason.. cant reproduce locally. No idea why typval.c is affected ",
            "created_at": "2025-07-21T22:53:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/34849#issuecomment-3099746486",
            "id": 3099746486,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34849",
            "node_id": "IC_kwDOAPphoM64wmC2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3099746486/reactions"
            },
            "updated_at": "2025-07-21T22:53:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3099746486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "LGTM but would like approval from @MariaSolOs @lewis6991 @mfussenegger \r\n\r\nIn the commit message, please include a brief Problem/Solution that explains the approach taken. Ideally mentioning the insight from https://github.com/neovim/neovim/issues/31368#issuecomment-2505732919",
            "created_at": "2025-07-23T01:56:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/34849#issuecomment-3105371179",
            "id": 3105371179,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34849",
            "node_id": "IC_kwDOAPphoM65GDQr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3105371179/reactions"
            },
            "updated_at": "2025-07-23T01:56:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3105371179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I fixed some `documentSelector` checks; other nullable fields don't appear to be affected.\r\n\r\nI’m unsure how this should be reflected in news.txt. Should I try to collect an exhaustive list of all vim.lsp.* functions affected, or is a note about the change to the `lsp.null` alias sufficient? The type-level documentation already reflects the change.\r\n\r\nAs far as I can tell, only `vim.lsp.util.apply_text_document_edit()` and `vim.lsp.util.convert_signature_help_to_markdown_lines()` are affected.\r\n",
            "created_at": "2025-07-28T08:56:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/34849#issuecomment-3126228953",
            "id": 3126228953,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34849",
            "node_id": "IC_kwDOAPphoM66VnfZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3126228953/reactions"
            },
            "updated_at": "2025-07-28T08:56:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3126228953",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34849/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34849/commits",
    "created_at": "2025-07-08T19:22:20Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34849.diff",
    "draft": false,
    "head": {
        "label": "skewb1k:lsp/omitted-fields",
        "ref": "lsp/omitted-fields",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/skewb1k/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/skewb1k/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/skewb1k/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/skewb1k/neovim/branches{/branch}",
            "clone_url": "https://github.com/skewb1k/neovim.git",
            "collaborators_url": "https://api.github.com/repos/skewb1k/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/skewb1k/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/skewb1k/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/skewb1k/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/skewb1k/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/skewb1k/neovim/contributors",
            "created_at": "2025-07-07T21:03:41Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/skewb1k/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/skewb1k/neovim/downloads",
            "events_url": "https://api.github.com/repos/skewb1k/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/skewb1k/neovim/forks",
            "full_name": "skewb1k/neovim",
            "git_commits_url": "https://api.github.com/repos/skewb1k/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/skewb1k/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/skewb1k/neovim/git/tags{/sha}",
            "git_url": "git://github.com/skewb1k/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/skewb1k/neovim/hooks",
            "html_url": "https://github.com/skewb1k/neovim",
            "id": 1015660381,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/skewb1k/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/skewb1k/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/skewb1k/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/skewb1k/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/skewb1k/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/skewb1k/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/skewb1k/neovim/merges",
            "milestones_url": "https://api.github.com/repos/skewb1k/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOPIm_XQ",
            "notifications_url": "https://api.github.com/repos/skewb1k/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/skewb1k/neovim/pulls{/number}",
            "pushed_at": "2025-07-29T01:50:39Z",
            "releases_url": "https://api.github.com/repos/skewb1k/neovim/releases{/id}",
            "size": 324597,
            "ssh_url": "git@github.com:skewb1k/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/skewb1k/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/skewb1k/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/skewb1k/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/skewb1k/neovim/subscription",
            "svn_url": "https://github.com/skewb1k/neovim",
            "tags_url": "https://api.github.com/repos/skewb1k/neovim/tags",
            "teams_url": "https://api.github.com/repos/skewb1k/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/skewb1k/neovim/git/trees{/sha}",
            "updated_at": "2025-07-07T21:03:43Z",
            "url": "https://api.github.com/repos/skewb1k/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "6d5406ec88162dedd975d86ba4a9d139015e0008",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
            "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
            "followers_url": "https://api.github.com/users/skewb1k/followers",
            "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
            "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/skewb1k",
            "id": 101928759,
            "login": "skewb1k",
            "node_id": "U_kgDOBhNPNw",
            "organizations_url": "https://api.github.com/users/skewb1k/orgs",
            "received_events_url": "https://api.github.com/users/skewb1k/received_events",
            "repos_url": "https://api.github.com/users/skewb1k/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/skewb1k",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34849",
    "id": 2650815135,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34849",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "39a1b135638077edb12e28ed3ea6e413d85f9f85",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6eADqf",
    "number": 34849,
    "patch_url": "https://github.com/neovim/neovim/pull/34849.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34849/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/6d5406ec88162dedd975d86ba4a9d139015e0008",
    "title": "fix(lsp): decode 'null' in server responses as vim.NIL ",
    "updated_at": "2025-07-28T08:56:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34849",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
        "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
        "followers_url": "https://api.github.com/users/skewb1k/followers",
        "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
        "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/skewb1k",
        "id": 101928759,
        "login": "skewb1k",
        "node_id": "U_kgDOBhNPNw",
        "organizations_url": "https://api.github.com/users/skewb1k/orgs",
        "received_events_url": "https://api.github.com/users/skewb1k/received_events",
        "repos_url": "https://api.github.com/users/skewb1k/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/skewb1k",
        "user_view_type": "public"
    }
}