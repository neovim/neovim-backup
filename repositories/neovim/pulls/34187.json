{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34187/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34187/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34187"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34187"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34187/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34187"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/3cab52ed1cf80f3dbacec4a01f9ba72ed8257e04"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6134,
            "forks_count": 6134,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1965,
            "open_issues_count": 1965,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-17T02:49:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 328511,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90375,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-17T02:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90375,
            "watchers_count": 90375,
            "web_commit_signoff_required": false
        },
        "sha": "a6e2c2234741d25fbff7fc1b6ecca1a2a86bf01c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Hello neovimers! I love using neovim as my editor, but see lots of crashes (which I don't love). so I'm trying to introduce fuzzer test to neovim, which basically an idea goes back to 2019 https://github.com/neovim/neovim/issues/9998. This PR is half work and incomplete,   but already including the basic building blocks for whole workflow. commit 11fc2b3e the fuzzer build and run, just not providing too much useful result due to some neovim restrictions.  I can't resolve all of the problems so publish it earlier  for some help. any advise welcomed.\r\n\r\n## a short background:\r\n\r\n it tries to explore more code flow to see if new crash can be found, \r\ncombined with coverage/sanitizer fuzzer can find lots of issues that is not easily produced by human https://llvm.org/docs/LibFuzzer.html#trophies . basically a fuzzer driver will feed random bytes to your entry,\r\nthen it's programmer's responsibility to map the bytes to reasonable program input.\r\n\r\n\r\n## how this apply to neovim\r\n\r\nI use libFuzzer, which is a simple to use one.\r\ncreate a fuzzer binary with libnvim alike setup, running nvim_main in a thread from fuzzer entry,  \r\nthen map random bytes into most used printable chars (and some functions keys, etc,  arrow/ctrl/Enter)\r\nthen sending these keys using nvim remote socket. it behaves like some\r\nMonkey press random keys to operate neovim and try to crash it.\r\nfor every run, either neovim crash, or input consumed without crashing (and we force it exit to stop this run)\r\n\r\n\r\n## implementation details\r\n\r\nduring the fuzzer , neovim may read/write different files, \r\nto allow fuzzer run in parallel, every run under an unique test_base dir /tmp/nvim_fuzzer_%pid_%tid dir, \r\n most used xdg path env (stdpaths.c) will be mapped under this dir ,  a init bash will create similar structure \r\nlike normal linux user under test_base, and copy VIMRUNTIME files to corresponding dir \r\n( neovim may edit the runtime files during fuzzing , so this action must be taken  for every run ),\r\n  then fuzzer entry start libnvim with control socket , and write fuzzer input random bytes( both also live in test_base)\r\nthen python script will take the fuzzer input bytes, do the mapping , send with pynvim.nvim_input. after \r\nfuzzer bytes consumed, it also send some command sequence try to always exit the neovim.\r\nthen nvim_main (should) return, then we cleanup the test_base dir, finish one fuzzer run\r\n\r\nan individual binary fuzzer_test provided, call exactly same function which is used in fuzzer binary, \r\nbut only once,  help easier debug/verify one run procedure. \r\n\r\n## issues\r\n\r\nthe biggest issue is that neovim call exit to quite process ,which is conflict with libfuzzer requirements. \r\nso I tried to turn every call to os_exit into early return EXIT_NVIM instead of OK recursively.  for function\r\nthat return some other type, I try to introduce \"char_pointer_result\" or \"string_result\" to include the original\r\nreturn type and the early return information together, question is some of these function signature seems \r\nto be used as part of lua , I may not be able to simply change function return type. \r\n\r\nanother issue is that cmake script doesn't describe dependencies for main_lib, some targets is only \r\nbuilt after neovim target itself being built \r\n",
    "closed_at": null,
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Thank you, but having this baked into the Nvim source code is pretty much a no-go. Instead, this should be driven over the RPC API.\r\n\r\n(Also, if you see \"lots of crashes\", something specific is going on; apart from experimental features, Nvim is pretty stable in this regard. So maybe it's best to first open an issue about those.)",
            "created_at": "2025-05-26T11:29:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/34187#issuecomment-2909400072",
            "id": 2909400072,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34187",
            "node_id": "IC_kwDOAPphoM6taewI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2909400072/reactions"
            },
            "updated_at": "2025-05-26T11:29:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2909400072",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Instead, this should be driven over the RPC API.\r\n> \r\nThe main procedure do based on RPC API over normal neovim socket file. \r\nideally fuzzer works better if everything driven by in-process function call because the driver can explore new path faster based on coverage feedback, but  I don't find any C api to do that. maybe  https://github.com/neovim/neovim/issues/21693 ?    (plus if the C api also control through RPC, say go over socket or stdio instead of in-process function call, then fuzzer driver won't benefit from that) \r\n\r\n> but having this baked into the Nvim source code is pretty much a no-go. \r\n\r\nthis may need more clarification. it do have one changes to nvim,  inside fs.c,  which tried to only open file inside test_base. otherwise the fuzzing may modify any files that current user has permission.   fuzzer is running from one root process and there's no easy way to put every run inside isolated sandbox, that means one run can modify some files, then another run crash due to that side effects.  this makes every run nondeterministic.  this can be treat as a temp hack, if acceptable, we can run fuzzer with this hack (without this changes in normal binary). \r\n\r\nthen I think the big topic is that change lots of function return type and logic to allow neovim exit by normal return from function, instead of just call exit.  my initial idea is that I try to make the fuzzer run,  by simply change everything early return when they're trying to call os_exit (recursively),   these changes may be not need to go into neovim (say, in a separate branch ) since these changes are only required to make fuzzer running normally (currently the fuzzer 'works', but stop after first run because libnvim call os_exit).  when the fuzzer start working and can detect bugs before neovim call os_exit, such cases can be  turned into a lua testcase and used with neovim (without these early return changes).  we can evaluate if such fuzzer do find bugs or not . currently I'm stuck at first step, fuzzer not continue running. \r\n\r\nbefore trying change the return type/early return logic, I also tried to use setjmp/longjmp to nvim_main, but asan report a use-after-free bug which I didn't dig into.\r\n\r\nI see also lots of static var in every c file, which also prevent nvim_main to be reentrant . that's one reason that currently the fuzzer  run nvim_main only once. if nvim_main is reentrant, we can emulate neovim run-stop cycle multi times, to get more code tested. \r\n\r\n without consider the fuzzer, I think return from function can also benefit the goal that allow libnvim used as a embed library.\r\n    \r\n\r\n\r\n> (Also, if you see \"lots of crashes\", something specific is going on; apart from experimental features, Nvim is pretty stable in this regard. So maybe it's best to first open an issue about those.)\r\n\r\n[I tried](https://github.com/neovim/neovim/issues?q=is%3Aissue%20state%3Aopen%20author%3Acomicfans) . usually I stay with latest release branch/tag, using lazyvim and nothing else. but recently I observe more crashes than before. maybe it's due to my plugin setup. that's why the init script in this PR also call a post script, it's supposed to copy some custom plug config for fuzzer, so we got more realistic  test scenario. \r\n",
            "created_at": "2025-05-26T12:42:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/34187#issuecomment-2909616542",
            "id": 2909616542,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34187",
            "node_id": "IC_kwDOAPphoM6tbTme",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2909616542/reactions"
            },
            "updated_at": "2025-05-26T12:50:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2909616542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4547108?v=4",
                "events_url": "https://api.github.com/users/comicfans/events{/privacy}",
                "followers_url": "https://api.github.com/users/comicfans/followers",
                "following_url": "https://api.github.com/users/comicfans/following{/other_user}",
                "gists_url": "https://api.github.com/users/comicfans/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/comicfans",
                "id": 4547108,
                "login": "comicfans",
                "node_id": "MDQ6VXNlcjQ1NDcxMDg=",
                "organizations_url": "https://api.github.com/users/comicfans/orgs",
                "received_events_url": "https://api.github.com/users/comicfans/received_events",
                "repos_url": "https://api.github.com/users/comicfans/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/comicfans/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/comicfans/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/comicfans",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34187/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34187/commits",
    "created_at": "2025-05-26T10:44:58Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34187.diff",
    "draft": true,
    "head": {
        "label": "comicfans:wxy/fuzzer_test",
        "ref": "wxy/fuzzer_test",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/comicfans/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/comicfans/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/comicfans/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/comicfans/neovim/branches{/branch}",
            "clone_url": "https://github.com/comicfans/neovim.git",
            "collaborators_url": "https://api.github.com/repos/comicfans/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/comicfans/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/comicfans/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/comicfans/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/comicfans/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/comicfans/neovim/contributors",
            "created_at": "2025-05-24T17:13:02Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/comicfans/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/comicfans/neovim/downloads",
            "events_url": "https://api.github.com/repos/comicfans/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/comicfans/neovim/forks",
            "full_name": "comicfans/neovim",
            "git_commits_url": "https://api.github.com/repos/comicfans/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/comicfans/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/comicfans/neovim/git/tags{/sha}",
            "git_url": "git://github.com/comicfans/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/comicfans/neovim/hooks",
            "html_url": "https://github.com/comicfans/neovim",
            "id": 989714942,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/comicfans/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/comicfans/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/comicfans/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/comicfans/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/comicfans/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/comicfans/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/comicfans/neovim/merges",
            "milestones_url": "https://api.github.com/repos/comicfans/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOv3Z_g",
            "notifications_url": "https://api.github.com/repos/comicfans/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4547108?v=4",
                "events_url": "https://api.github.com/users/comicfans/events{/privacy}",
                "followers_url": "https://api.github.com/users/comicfans/followers",
                "following_url": "https://api.github.com/users/comicfans/following{/other_user}",
                "gists_url": "https://api.github.com/users/comicfans/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/comicfans",
                "id": 4547108,
                "login": "comicfans",
                "node_id": "MDQ6VXNlcjQ1NDcxMDg=",
                "organizations_url": "https://api.github.com/users/comicfans/orgs",
                "received_events_url": "https://api.github.com/users/comicfans/received_events",
                "repos_url": "https://api.github.com/users/comicfans/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/comicfans/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/comicfans/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/comicfans",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/comicfans/neovim/pulls{/number}",
            "pushed_at": "2025-06-15T15:33:59Z",
            "releases_url": "https://api.github.com/repos/comicfans/neovim/releases{/id}",
            "size": 314667,
            "ssh_url": "git@github.com:comicfans/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/comicfans/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/comicfans/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/comicfans/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/comicfans/neovim/subscription",
            "svn_url": "https://github.com/comicfans/neovim",
            "tags_url": "https://api.github.com/repos/comicfans/neovim/tags",
            "teams_url": "https://api.github.com/repos/comicfans/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/comicfans/neovim/git/trees{/sha}",
            "updated_at": "2025-05-24T17:13:02Z",
            "url": "https://api.github.com/repos/comicfans/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "3cab52ed1cf80f3dbacec4a01f9ba72ed8257e04",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/4547108?v=4",
            "events_url": "https://api.github.com/users/comicfans/events{/privacy}",
            "followers_url": "https://api.github.com/users/comicfans/followers",
            "following_url": "https://api.github.com/users/comicfans/following{/other_user}",
            "gists_url": "https://api.github.com/users/comicfans/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/comicfans",
            "id": 4547108,
            "login": "comicfans",
            "node_id": "MDQ6VXNlcjQ1NDcxMDg=",
            "organizations_url": "https://api.github.com/users/comicfans/orgs",
            "received_events_url": "https://api.github.com/users/comicfans/received_events",
            "repos_url": "https://api.github.com/users/comicfans/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/comicfans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/comicfans/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/comicfans",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34187",
    "id": 2543692060,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34187",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        }
    ],
    "locked": false,
    "merge_commit_sha": "6fd06c77ad3a0c40384259383f55ec510db9cc00",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6Xnakc",
    "number": 34187,
    "patch_url": "https://github.com/neovim/neovim/pull/34187.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34187/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/3cab52ed1cf80f3dbacec4a01f9ba72ed8257e04",
    "title": "add fuzzer base test to neovim",
    "updated_at": "2025-06-15T15:34:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34187",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4547108?v=4",
        "events_url": "https://api.github.com/users/comicfans/events{/privacy}",
        "followers_url": "https://api.github.com/users/comicfans/followers",
        "following_url": "https://api.github.com/users/comicfans/following{/other_user}",
        "gists_url": "https://api.github.com/users/comicfans/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/comicfans",
        "id": 4547108,
        "login": "comicfans",
        "node_id": "MDQ6VXNlcjQ1NDcxMDg=",
        "organizations_url": "https://api.github.com/users/comicfans/orgs",
        "received_events_url": "https://api.github.com/users/comicfans/received_events",
        "repos_url": "https://api.github.com/users/comicfans/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/comicfans/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/comicfans/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/comicfans",
        "user_view_type": "public"
    }
}