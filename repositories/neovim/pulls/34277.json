{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34277/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34277/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34277"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34277"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34277/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34277"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/3877c9f1ddffd0f75c4a6b98799b3ff8a32b1f2a"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6116,
            "forks_count": 6116,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1969,
            "open_issues_count": 1969,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-10T00:47:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 327001,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90210,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-10T02:19:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90210,
            "watchers_count": 90210,
            "web_commit_signoff_required": false
        },
        "sha": "811e12cebcb2d5ea534912d0bda7d52863281efa",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem:\r\nTags are manually parsed in C which is not flexible and prone to errors.\r\n\r\nSolution:\r\nUse the power of treesitter to extract the tags from helpfiles.\r\n\r\n---\r\n\r\nThis work is inspired by and based on #34186 and the suggestions there.\r\n\r\n\r\nThis might not work during cross-compilation because Nvim binary is not available on the host, and this code can't be run using \"nlua0\". I don't know enough about nlua0 to verify if this approach would work for that case.\r\n\r\nEven if it will not work for nlua0 it would still be nice to include in core and replace the manual tag extraction in C with this TS-based approach. Open for feedback and discussion.\r\n\r\n---\r\n\r\n**Question**: How would I call this from help.c? I need to call `require('vim._helptags').generate(<USER_STRING>, <USER_BOOL>)`.\r\n\r\nTODO:\r\n- [ ] call from C\r\n- [ ] https://github.com/neovim/neovim/pull/34255\r\n- [ ] handle translated help files\r\n- [ ] add tests\r\n- [ ] add docs\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34277#discussion_r2120931783"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120931783"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This should probably have its own typename, but I'm not sure what it should be. TagsTriplet, TagsFormat, TagsLine? No clue.",
            "commit_id": "3877c9f1ddffd0f75c4a6b98799b3ff8a32b1f2a",
            "created_at": "2025-06-02T11:57:07Z",
            "diff_hunk": "@@ -0,0 +1,106 @@\n+local M = {}\n+\n+local ts = vim.treesitter\n+\n+local query = ts.query.parse('vimdoc', [[\n+    (tag (word) @tagname)\n+]])\n+\n+--- Find all helptags in a single file.\n+--- @param filename string helpfile with tags\n+--- @return { [1]: string, [2]: string, [3]: string}[] tuple of tag, file, and search command",
            "html_url": "https://github.com/neovim/neovim/pull/34277#discussion_r2120931783",
            "id": 2120931783,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-atnH",
            "original_commit_id": "9eaabc04f73b6c22d921769466403b9b04dfc359",
            "original_line": 11,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/_helptags.lua",
            "position": null,
            "pull_request_review_id": 2888066925,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120931783/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-02T11:57:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120931783",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34277#discussion_r2120940763"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120940763"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Not sure if this is the right approach of reporting a Vim-style error",
            "commit_id": "3877c9f1ddffd0f75c4a6b98799b3ff8a32b1f2a",
            "created_at": "2025-06-02T12:01:03Z",
            "diff_hunk": "@@ -0,0 +1,106 @@\n+local M = {}\n+\n+local ts = vim.treesitter\n+\n+local query = ts.query.parse('vimdoc', [[\n+    (tag (word) @tagname)\n+]])\n+\n+--- Find all helptags in a single file.\n+--- @param filename string helpfile with tags\n+--- @return { [1]: string, [2]: string, [3]: string}[] tuple of tag, file, and search command\n+local function extract_file_tags(filename)\n+  local file = assert(io.open(filename, 'r'))\n+  local source = file:read('*a')\n+  file:close()\n+\n+  local tags = {}\n+  local tree = ts.get_string_parser(source, 'vimdoc'):parse()[1]:root()\n+\n+  for _, match in query:iter_matches(tree, source) do\n+    for id, node in pairs(match) do\n+      if query.captures[id] == 'tagname' then\n+        local tagname = ts.get_node_text(node[1], source)\n+        local escaped = string.gsub(tagname, '[\\\\/]', '\\\\%0')\n+        local searchcmd = tagname == 'help-tags' and '1' or ('/*%s*'):format(escaped)\n+        table.insert(tags, { tagname, filename, searchcmd })\n+      end\n+    end\n+  end\n+\n+  return tags\n+end\n+\n+--- Report duplicate tags.\n+--- @param tags { [1]: string, [2]: string, [3]: string}[] tuple of tag, file, and search command\n+--- @return boolean true if there are duplicate tags\n+local function check_duplicate_tags(tags)\n+  local found = false\n+\n+  local prevtag, prevfn\n+  for _, tag in ipairs(tags) do\n+    local curtag, curfn, _ = unpack(tag)\n+\n+    if curtag == prevtag then\n+      found = true\n+      local other_fn = prevfn ~= curfn and (' and ' .. prevfn) or ''\n+      vim.api.nvim_echo({\n+        { ('E154: Duplicate tag \"%s\" in %s%s'):format(curtag, curfn, other_fn) }\n+      }, true, { err = true })",
            "html_url": "https://github.com/neovim/neovim/pull/34277#discussion_r2120940763",
            "id": 2120940763,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-avzb",
            "original_commit_id": "9eaabc04f73b6c22d921769466403b9b04dfc359",
            "original_line": 49,
            "original_position": 49,
            "original_start_line": 47,
            "path": "runtime/lua/vim/_helptags.lua",
            "position": null,
            "pull_request_review_id": 2888080333,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120940763/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-06-02T12:03:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120940763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34277#discussion_r2120942767"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120942767"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is `assert()` fine here or should this report a Vim-style error to the user (E40)? Or ignore? ",
            "commit_id": "3877c9f1ddffd0f75c4a6b98799b3ff8a32b1f2a",
            "created_at": "2025-06-02T12:02:22Z",
            "diff_hunk": "@@ -0,0 +1,106 @@\n+local M = {}\n+\n+local ts = vim.treesitter\n+\n+local query = ts.query.parse('vimdoc', [[\n+    (tag (word) @tagname)\n+]])\n+\n+--- Find all helptags in a single file.\n+--- @param filename string helpfile with tags\n+--- @return { [1]: string, [2]: string, [3]: string}[] tuple of tag, file, and search command\n+local function extract_file_tags(filename)\n+  local file = assert(io.open(filename, 'r'))\n+  local source = file:read('*a')\n+  file:close()",
            "html_url": "https://github.com/neovim/neovim/pull/34277#discussion_r2120942767",
            "id": 2120942767,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-awSv",
            "original_commit_id": "9eaabc04f73b6c22d921769466403b9b04dfc359",
            "original_line": 15,
            "original_position": 15,
            "original_start_line": 13,
            "path": "runtime/lua/vim/_helptags.lua",
            "position": null,
            "pull_request_review_id": 2888080333,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120942767/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-06-02T12:03:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120942767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34277#discussion_r2120943917"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34277"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120943917"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "See comment above: what to do on error?",
            "commit_id": "3877c9f1ddffd0f75c4a6b98799b3ff8a32b1f2a",
            "created_at": "2025-06-02T12:03:00Z",
            "diff_hunk": "@@ -0,0 +1,106 @@\n+local M = {}\n+\n+local ts = vim.treesitter\n+\n+local query = ts.query.parse('vimdoc', [[\n+    (tag (word) @tagname)\n+]])\n+\n+--- Find all helptags in a single file.\n+--- @param filename string helpfile with tags\n+--- @return { [1]: string, [2]: string, [3]: string}[] tuple of tag, file, and search command\n+local function extract_file_tags(filename)\n+  local file = assert(io.open(filename, 'r'))\n+  local source = file:read('*a')\n+  file:close()\n+\n+  local tags = {}\n+  local tree = ts.get_string_parser(source, 'vimdoc'):parse()[1]:root()\n+\n+  for _, match in query:iter_matches(tree, source) do\n+    for id, node in pairs(match) do\n+      if query.captures[id] == 'tagname' then\n+        local tagname = ts.get_node_text(node[1], source)\n+        local escaped = string.gsub(tagname, '[\\\\/]', '\\\\%0')\n+        local searchcmd = tagname == 'help-tags' and '1' or ('/*%s*'):format(escaped)\n+        table.insert(tags, { tagname, filename, searchcmd })\n+      end\n+    end\n+  end\n+\n+  return tags\n+end\n+\n+--- Report duplicate tags.\n+--- @param tags { [1]: string, [2]: string, [3]: string}[] tuple of tag, file, and search command\n+--- @return boolean true if there are duplicate tags\n+local function check_duplicate_tags(tags)\n+  local found = false\n+\n+  local prevtag, prevfn\n+  for _, tag in ipairs(tags) do\n+    local curtag, curfn, _ = unpack(tag)\n+\n+    if curtag == prevtag then\n+      found = true\n+      local other_fn = prevfn ~= curfn and (' and ' .. prevfn) or ''\n+      vim.api.nvim_echo({\n+        { ('E154: Duplicate tag \"%s\" in %s%s'):format(curtag, curfn, other_fn) }\n+      }, true, { err = true })\n+    end\n+\n+    prevtag = curtag\n+    prevfn = curfn\n+  end\n+\n+  return found\n+end\n+\n+--- Generate a tags file for a directory and its subdirectories.\n+--- @param dir string\n+local function helptags_in_dir(dir, include_helptags_tag)\n+  local files = vim.fs.find(function(name, _)\n+    return vim.endswith(name, '.txt')\n+  end, { path = dir, type = 'file', limit = math.huge })\n+\n+  local tags = {}\n+  for _, filename in ipairs(files) do\n+    local filetags = extract_file_tags(filename)\n+    vim.list_extend(tags, filetags)\n+  end\n+\n+  if include_helptags_tag then\n+    table.insert(tags, { 'help-tags', 'tags', '1' })\n+  end\n+\n+  table.sort(tags, function(a, b)\n+    return a[1] < b[1]\n+  end)\n+\n+  if not check_duplicate_tags(tags) then\n+    local tagsfile = vim.fs.joinpath(dir, 'tags')\n+    local f = assert(io.open(tagsfile, 'w'))",
            "html_url": "https://github.com/neovim/neovim/pull/34277#discussion_r2120943917",
            "id": 2120943917,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5-awkt",
            "original_commit_id": "9eaabc04f73b6c22d921769466403b9b04dfc359",
            "original_line": 82,
            "original_position": 82,
            "original_start_line": null,
            "path": "runtime/lua/vim/_helptags.lua",
            "position": null,
            "pull_request_review_id": 2888080333,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34277",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120943917/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-02T12:03:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2120943917",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34277/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34277/commits",
    "created_at": "2025-06-02T11:52:46Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34277.diff",
    "draft": true,
    "head": {
        "label": "yochem:helptags-lua",
        "ref": "helptags-lua",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/yochem/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/yochem/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/yochem/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/yochem/neovim/branches{/branch}",
            "clone_url": "https://github.com/yochem/neovim.git",
            "collaborators_url": "https://api.github.com/repos/yochem/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/yochem/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/yochem/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/yochem/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/yochem/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/yochem/neovim/contributors",
            "created_at": "2023-03-13T14:39:08Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/yochem/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/yochem/neovim/downloads",
            "events_url": "https://api.github.com/repos/yochem/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/yochem/neovim/forks",
            "full_name": "yochem/neovim",
            "git_commits_url": "https://api.github.com/repos/yochem/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/yochem/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/yochem/neovim/git/tags{/sha}",
            "git_url": "git://github.com/yochem/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/yochem/neovim/hooks",
            "html_url": "https://github.com/yochem/neovim",
            "id": 613421928,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/yochem/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/yochem/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/yochem/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/yochem/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/yochem/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/yochem/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/yochem/neovim/merges",
            "milestones_url": "https://api.github.com/repos/yochem/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOJJATaA",
            "notifications_url": "https://api.github.com/repos/yochem/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/yochem/neovim/pulls{/number}",
            "pushed_at": "2025-06-09T10:19:03Z",
            "releases_url": "https://api.github.com/repos/yochem/neovim/releases{/id}",
            "size": 320984,
            "ssh_url": "git@github.com:yochem/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/yochem/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/yochem/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/yochem/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/yochem/neovim/subscription",
            "svn_url": "https://github.com/yochem/neovim",
            "tags_url": "https://api.github.com/repos/yochem/neovim/tags",
            "teams_url": "https://api.github.com/repos/yochem/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/yochem/neovim/git/trees{/sha}",
            "updated_at": "2025-06-03T20:48:15Z",
            "url": "https://api.github.com/repos/yochem/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "3877c9f1ddffd0f75c4a6b98799b3ff8a32b1f2a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
            "events_url": "https://api.github.com/users/yochem/events{/privacy}",
            "followers_url": "https://api.github.com/users/yochem/followers",
            "following_url": "https://api.github.com/users/yochem/following{/other_user}",
            "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/yochem",
            "id": 23235841,
            "login": "yochem",
            "node_id": "MDQ6VXNlcjIzMjM1ODQx",
            "organizations_url": "https://api.github.com/users/yochem/orgs",
            "received_events_url": "https://api.github.com/users/yochem/received_events",
            "repos_url": "https://api.github.com/users/yochem/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/yochem",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34277",
    "id": 2560368921,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34277",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "712d6dd9502549c680ce55ece9816787bf5b3446",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6YnCEZ",
    "number": 34277,
    "patch_url": "https://github.com/neovim/neovim/pull/34277.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34277/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/3877c9f1ddffd0f75c4a6b98799b3ff8a32b1f2a",
    "title": "feat(help):  `:helptags` in Lua (+Treesitter) [skip ci]",
    "updated_at": "2025-06-09T11:20:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34277",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
        "events_url": "https://api.github.com/users/yochem/events{/privacy}",
        "followers_url": "https://api.github.com/users/yochem/followers",
        "following_url": "https://api.github.com/users/yochem/following{/other_user}",
        "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yochem",
        "id": 23235841,
        "login": "yochem",
        "node_id": "MDQ6VXNlcjIzMjM1ODQx",
        "organizations_url": "https://api.github.com/users/yochem/orgs",
        "received_events_url": "https://api.github.com/users/yochem/received_events",
        "repos_url": "https://api.github.com/users/yochem/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yochem",
        "user_view_type": "public"
    }
}