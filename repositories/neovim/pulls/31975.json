{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31975/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31975/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31975"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31975"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31975/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31975"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/66c778dd1fc0170890fff330478a5ad245ff0dc0"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5811,
            "forks_count": 5811,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1839,
            "open_issues_count": 1839,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T23:17:24Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 303311,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85218,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-14T02:06:03Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85218,
            "watchers_count": 85218,
            "web_commit_signoff_required": false
        },
        "sha": "1a8a48d7e5f8243aff0253a82f4214241eb877d6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Implemented incremental injection parsing as described in https://github.com/neovim/neovim/issues/31809.\r\nInjection parsing now also respects the `range` parameter.\r\n\r\nAdding `#set! injection.root @some_capture` to all patterns in `injections.scm` enables the optimization.\r\n\r\nThis improves performance when viewing/editing large files, as injections only within the visible range are parsed, and only the changed ranges are reparsed when editing the buffer.\r\n\r\nThe functionality is ready, I think, but I still need to add tests and benchmarks, and refactor some of the code (e.g. add full names to classes). \r\n\r\nCloses https://github.com/neovim/neovim/issues/31809",
    "closed_at": null,
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "How to test:\r\n\r\n<details>\r\n\r\n`patch.diff` (for nvim-treesitter 097fb77312c731347180e8907424f6c967323f05):\r\n```diff\r\ndiff --git a/queries/c/injections.scm b/queries/c/injections.scm\r\nindex 77b4d7a..5547c7c 100644\r\n--- a/queries/c/injections.scm\r\n+++ b/queries/c/injections.scm\r\n@@ -1,14 +1,18 @@\r\n ((preproc_arg) @injection.content\r\n+  (#set! nvim.injection-root @injection.content)\r\n   (#set! injection.language \"c\"))\r\n \r\n ((comment) @injection.content\r\n+  (#set! nvim.injection-root @injection.content)\r\n   (#set! injection.language \"comment\"))\r\n \r\n ((comment) @injection.content\r\n+  (#set! nvim.injection-root @injection.content)\r\n   (#match? @injection.content \"/\\\\*!([a-zA-Z]+:)?re2c\")\r\n   (#set! injection.language \"re2c\"))\r\n \r\n ((comment) @injection.content\r\n+  (#set! nvim.injection-root @injection.content)\r\n   (#lua-match? @injection.content \"/[*\\/][!*\\/]<?[^a-zA-Z]\")\r\n   (#set! injection.language \"doxygen\"))\r\n \r\n@@ -22,9 +26,9 @@\r\n       (concatenated_string\r\n         (string_literal\r\n           (string_content) @injection.content))\r\n-    ]))\r\n+    ])) @_root\r\n   ; format-ignore\r\n-  (#any-of? @_function \r\n+  (#any-of? @_function\r\n     \"printf\" \"printf_s\"\r\n     \"vprintf\" \"vprintf_s\"\r\n     \"scanf\" \"scanf_s\"\r\n@@ -36,6 +40,7 @@\r\n     \"cscanf\" \"_cscanf\"\r\n     \"printw\"\r\n     \"scanw\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"printf\"))\r\n \r\n ((call_expression\r\n@@ -49,9 +54,9 @@\r\n       (concatenated_string\r\n         (string_literal\r\n           (string_content) @injection.content))\r\n-    ]))\r\n+    ])) @_root\r\n   ; format-ignore\r\n-  (#any-of? @_function \r\n+  (#any-of? @_function\r\n     \"fprintf\" \"fprintf_s\"\r\n     \"sprintf\"\r\n     \"dprintf\"\r\n@@ -72,6 +77,7 @@\r\n     \"vw_printw\" \"vwprintw\"\r\n     \"wscanw\"\r\n     \"vw_scanw\" \"vwscanw\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"printf\"))\r\n \r\n ((call_expression\r\n@@ -87,9 +93,9 @@\r\n       (concatenated_string\r\n         (string_literal\r\n           (string_content) @injection.content))\r\n-    ]))\r\n+    ])) @_root\r\n   ; format-ignore\r\n-  (#any-of? @_function \r\n+  (#any-of? @_function\r\n     \"sprintf_s\"\r\n     \"snprintf\" \"snprintf_s\"\r\n     \"vsprintf_s\"\r\n@@ -100,6 +106,7 @@\r\n     \"vsnwprintf_s\"\r\n     \"mvprintw\"\r\n     \"mvscanw\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"printf\"))\r\n \r\n ((call_expression\r\n@@ -117,8 +124,9 @@\r\n       (concatenated_string\r\n         (string_literal\r\n           (string_content) @injection.content))\r\n-    ]))\r\n+    ])) @_root\r\n   (#any-of? @_function \"mvwprintw\" \"mvwscanw\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"printf\"))\r\n \r\n ; TODO: add when asm is added\r\ndiff --git a/queries/lua/injections.scm b/queries/lua/injections.scm\r\nindex e76745f..080ff0a 100644\r\n--- a/queries/lua/injections.scm\r\n+++ b/queries/lua/injections.scm\r\n@@ -7,7 +7,8 @@\r\n   ]\r\n   arguments: (arguments\r\n     (string\r\n-      content: _ @injection.content)))\r\n+      content: _ @injection.content))) @_root\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"c\")\r\n   (#eq? @_cdef_identifier \"cdef\"))\r\n \r\n@@ -15,7 +16,8 @@\r\n   name: (_) @_vimcmd_identifier\r\n   arguments: (arguments\r\n     (string\r\n-      content: _ @injection.content)))\r\n+      content: _ @injection.content))) @_root\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"vim\")\r\n   (#any-of? @_vimcmd_identifier \"vim.cmd\" \"vim.api.nvim_command\" \"vim.api.nvim_exec2\"))\r\n \r\n@@ -23,7 +25,8 @@\r\n   name: (_) @_vimcmd_identifier\r\n   arguments: (arguments\r\n     (string\r\n-      content: _ @injection.content) .))\r\n+      content: _ @injection.content) .)) @_root\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"query\")\r\n   (#any-of? @_vimcmd_identifier \"vim.treesitter.query.set\" \"vim.treesitter.query.parse\"))\r\n \r\n@@ -37,9 +40,10 @@\r\n       content: _ @_method)\r\n     .\r\n     (string\r\n-      content: _ @injection.content)))\r\n+      content: _ @injection.content))) @_root\r\n   (#any-of? @_vimcmd_identifier \"vim.rpcrequest\" \"vim.rpcnotify\")\r\n   (#eq? @_method \"nvim_exec_lua\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"lua\"))\r\n \r\n ; exec_lua [[ ... ]] in functionaltests\r\n@@ -47,12 +51,13 @@\r\n   name: (identifier) @_function\r\n   arguments: (arguments\r\n     (string\r\n-      content: (string_content) @injection.content)))\r\n+      content: (string_content) @injection.content))) @_root\r\n   (#eq? @_function \"exec_lua\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"lua\"))\r\n \r\n ; vim.api.nvim_create_autocmd(\"FileType\", { command = \"injected here\" })\r\n-(function_call\r\n+((function_call\r\n   name: (_) @_vimcmd_identifier\r\n   arguments: (arguments\r\n     .\r\n@@ -62,13 +67,14 @@\r\n       (field\r\n         name: (identifier) @_command\r\n         value: (string\r\n-          content: (_) @injection.content))) .)\r\n+          content: (_) @injection.content))) .)) @_root\r\n   ; limit so only 2-argument functions gets matched before pred handle\r\n   (#eq? @_vimcmd_identifier \"vim.api.nvim_create_autocmd\")\r\n   (#eq? @_command \"command\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"vim\"))\r\n \r\n-(function_call\r\n+((function_call\r\n   name: (_) @_user_cmd\r\n   arguments: (arguments\r\n     .\r\n@@ -77,11 +83,12 @@\r\n     (string\r\n       content: (_) @injection.content)\r\n     .\r\n-    (_) .)\r\n+    (_) .)) @_root\r\n   (#eq? @_user_cmd \"vim.api.nvim_create_user_command\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"vim\"))\r\n \r\n-(function_call\r\n+((function_call\r\n   name: (_) @_user_cmd\r\n   arguments: (arguments\r\n     .\r\n@@ -92,9 +99,10 @@\r\n     (string\r\n       content: (_) @injection.content)\r\n     .\r\n-    (_) .)\r\n+    (_) .)) @_root\r\n   ; Limiting predicate handling to only functions with 4 arguments\r\n   (#eq? @_user_cmd \"vim.api.nvim_buf_create_user_command\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"vim\"))\r\n \r\n ; rhs highlighting for vim.keymap.set/vim.api.nvim_set_keymap/vim.api.nvim_buf_set_keymap\r\n@@ -127,11 +135,13 @@\r\n (string\r\n   content: _ @injection.content\r\n   (#lua-match? @injection.content \"^%s*;+%s?query\")\r\n+  (#set! nvim.injection-root @injection.content)\r\n   (#set! injection.language \"query\"))\r\n \r\n (comment\r\n   content: (_) @injection.content\r\n   (#lua-match? @injection.content \"^[-][%s]*[@|]\")\r\n+  (#set! nvim.injection-root @injection.content)\r\n   (#set! injection.language \"luadoc\")\r\n   (#offset! @injection.content 0 1 0 0))\r\n \r\n@@ -145,9 +155,10 @@\r\n     (_)\r\n     .\r\n     (string\r\n-      content: (string_content) @injection.content\r\n-      (#set! injection.language \"luap\")\r\n-      (#set! injection.include-children))))\r\n+      content: (string_content) @injection.content)) @_root\r\n+  (#set! nvim.injection-root @_root)\r\n+  (#set! injection.language \"luap\")\r\n+  (#set! injection.include-children))\r\n \r\n ;(\"123\"):match(\"%d+\")\r\n (function_call\r\n@@ -157,9 +168,10 @@\r\n   arguments: (arguments\r\n     .\r\n     (string\r\n-      content: (string_content) @injection.content\r\n-      (#set! injection.language \"luap\")\r\n-      (#set! injection.include-children))))\r\n+      content: (string_content) @injection.content)) @_root\r\n+  (#set! nvim.injection-root @_root)\r\n+  (#set! injection.language \"luap\")\r\n+  (#set! injection.include-children))\r\n \r\n ; string.format(\"pi = %.2f\", 3.14159)\r\n ((function_call\r\n@@ -168,8 +180,9 @@\r\n   arguments: (arguments\r\n     .\r\n     (string\r\n-      (string_content) @injection.content)))\r\n+      (string_content) @injection.content)) @_root)\r\n   (#eq? @_method \"format\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"printf\"))\r\n \r\n ; (\"pi = %.2f\"):format(3.14159)\r\n@@ -178,12 +191,14 @@\r\n     table: (_\r\n       (string\r\n         (string_content) @injection.content))\r\n-    method: (identifier) @_method))\r\n+    method: (identifier) @_method) @_root)\r\n   (#eq? @_method \"format\")\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"printf\"))\r\n \r\n (comment\r\n   content: (_) @injection.content\r\n+  (#set! nvim.injection-root @injection.content)\r\n   (#set! injection.language \"comment\"))\r\n \r\n ; vim.filetype.add({ pattern = { [\"some lua pattern here\"] = \"filetype\" } })\r\n@@ -196,7 +211,8 @@\r\n         value: (table_constructor\r\n           (field\r\n             name: (string\r\n-              content: _ @injection.content)))))))\r\n+              content: _ @injection.content))))))) @_root\r\n+  (#set! nvim.injection-root @_root)\r\n   (#set! injection.language \"luap\")\r\n   (#eq? @_filetypeadd_identifier \"vim.filetype.add\")\r\n   (#eq? @_pattern_key \"pattern\"))\r\n```\r\n\r\n`minimal.lua`:\r\n```lua\r\nfor name, url in pairs {\r\n  nvim_treesitter = 'https://github.com/nvim-treesitter/nvim-treesitter.git',\r\n} do\r\n  local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\r\n  if vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\r\n  end\r\n  vim.opt.runtimepath:prepend(install_path)\r\nend\r\n\r\nvim.cmd('!cd nvim_issue/nvim_treesitter && git apply ../../patch.diff')\r\n\r\nrequire'nvim-treesitter.configs'.setup {\r\n  ensure_installed = { 'c', 'lua', 'printf' },\r\n  highlight = { enable = true },\r\n}\r\n\r\nvim.api.nvim_set_hl(0, '@character.printf', { fg = 'green' })\r\n```\r\n\r\n(Only `c` and `lua` injections)\r\n\r\n</details>",
            "created_at": "2025-01-12T07:54:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/31975#issuecomment-2585628607",
            "id": 2585628607,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31975",
            "node_id": "IC_kwDOAPphoM6aHY-_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585628607/reactions"
            },
            "updated_at": "2025-01-12T07:55:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585628607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Theoretical bug: if a match is found past the end of the range set in the iterator, then everything would break.",
            "created_at": "2025-01-13T04:16:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/31975#issuecomment-2586144906",
            "id": 2586144906,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31975",
            "node_id": "IC_kwDOAPphoM6aJXCK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586144906/reactions"
            },
            "updated_at": "2025-01-13T04:19:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2586144906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31975/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31975/commits",
    "created_at": "2025-01-12T07:51:29Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31975.diff",
    "draft": false,
    "head": {
        "label": "vanaigr:incremental-injections-3",
        "ref": "incremental-injections-3",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/vanaigr/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/vanaigr/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/vanaigr/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/vanaigr/neovim/branches{/branch}",
            "clone_url": "https://github.com/vanaigr/neovim.git",
            "collaborators_url": "https://api.github.com/repos/vanaigr/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/vanaigr/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/vanaigr/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/vanaigr/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/vanaigr/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/vanaigr/neovim/contributors",
            "created_at": "2023-12-05T22:08:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/vanaigr/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/vanaigr/neovim/downloads",
            "events_url": "https://api.github.com/repos/vanaigr/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/vanaigr/neovim/forks",
            "full_name": "vanaigr/neovim",
            "git_commits_url": "https://api.github.com/repos/vanaigr/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/vanaigr/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/vanaigr/neovim/git/tags{/sha}",
            "git_url": "git://github.com/vanaigr/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/vanaigr/neovim/hooks",
            "html_url": "https://github.com/vanaigr/neovim",
            "id": 727936921,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/vanaigr/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/vanaigr/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/vanaigr/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/vanaigr/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/vanaigr/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/vanaigr/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/vanaigr/neovim/merges",
            "milestones_url": "https://api.github.com/repos/vanaigr/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK2NvmQ",
            "notifications_url": "https://api.github.com/repos/vanaigr/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/vanaigr/neovim/pulls{/number}",
            "pushed_at": "2025-01-13T05:27:16Z",
            "releases_url": "https://api.github.com/repos/vanaigr/neovim/releases{/id}",
            "size": 295562,
            "ssh_url": "git@github.com:vanaigr/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/vanaigr/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/vanaigr/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/vanaigr/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/vanaigr/neovim/subscription",
            "svn_url": "https://github.com/vanaigr/neovim",
            "tags_url": "https://api.github.com/repos/vanaigr/neovim/tags",
            "teams_url": "https://api.github.com/repos/vanaigr/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/vanaigr/neovim/git/trees{/sha}",
            "updated_at": "2025-01-12T07:18:31Z",
            "url": "https://api.github.com/repos/vanaigr/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "66c778dd1fc0170890fff330478a5ad245ff0dc0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
            "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
            "followers_url": "https://api.github.com/users/vanaigr/followers",
            "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/vanaigr",
            "id": 65824523,
            "login": "vanaigr",
            "node_id": "MDQ6VXNlcjY1ODI0NTIz",
            "organizations_url": "https://api.github.com/users/vanaigr/orgs",
            "received_events_url": "https://api.github.com/users/vanaigr/received_events",
            "repos_url": "https://api.github.com/users/vanaigr/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/vanaigr",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31975",
    "id": 2272417145,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31975",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6HclV5",
    "number": 31975,
    "patch_url": "https://github.com/neovim/neovim/pull/31975.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31975/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/66c778dd1fc0170890fff330478a5ad245ff0dc0",
    "title": "feat: incremental injection parsing",
    "updated_at": "2025-01-13T04:19:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31975",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
        "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vanaigr/followers",
        "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vanaigr",
        "id": 65824523,
        "login": "vanaigr",
        "node_id": "MDQ6VXNlcjY1ODI0NTIz",
        "organizations_url": "https://api.github.com/users/vanaigr/orgs",
        "received_events_url": "https://api.github.com/users/vanaigr/received_events",
        "repos_url": "https://api.github.com/users/vanaigr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vanaigr",
        "user_view_type": "public"
    }
}