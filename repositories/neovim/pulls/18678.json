{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/18678/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18678/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/18678"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/18678"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18678/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/43137bb3824bcd81ccba4233beaffc66203349de"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6114,
            "forks_count": 6114,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1972,
            "open_issues_count": 1972,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-03T01:03:43Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 326078,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89994,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-03T02:10:49Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89994,
            "watchers_count": 89994,
            "web_commit_signoff_required": false
        },
        "sha": "6eaf10502c99e96704daa07987f73658d6c4d68a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "The range of the tree-roots does not necessarily match that of the LanguageTrees regions (which are, afaict directly generated from injection-queries, and therefore correct (as per my limited understanding)).\r\n\r\nThe specific problem fixed by this is `language_for_range()` returning an incorrect filetype (`\"markdown\"` instead of `\"lua\"`, in this case) in empty fenced code blocks in markdown.\r\n````markdown\r\n```lua\r\n\r\n```\r\n````\r\nTo reproduce:\r\n1. create markdown-file containing only\r\n\t````markdown\r\n\t```lua\r\n\t\r\n\t```\r\n\t````\r\n2.\r\n\t```lua\r\n\tprint(vim.treesitter.get_parser(0, \"markdown\"):language_for_range({1,0,1,0}):lang())\r\n\t```\r\nExpected output: `\"lua\"`, actual output: `\"markdown\"`\r\n\r\nI hope it's okay to open this as issue+solution.",
    "closed_at": "2025-05-29T10:09:10Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884169441"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884169441"
                }
            },
            "author_association": "MEMBER",
            "body": "I think `region_contains` with the loop not in this function would it more general an easier to understand what it does (this is essentially `ts_util.is_node_in_range` that also works for range in ranges). I think the same could stay the `region_contains` even when the loop gets pulled out into `Language:tree`. The regions are actually only ranges and not the table containing the regions for one tree.\r\n\r\n I think regions are not necessarily nodes but can also be ranges, in case `offset!` cut a bit off the region.\r\n\r\nTests would nice, since it's always difficult to remember what regions actually are. I for example don't remember why they are doubly nested but I think this has to do with how @steelsojka implemented \"combined\" that you can actually have multiple trees of one injection in the same document (what upstream tree-sitter does not do). Rethinking that then this makes sense.\r\n\r\nFor incremental parsing, we should probably get rid of the outer level of regions and just adapt the `set_included_regions` without ever creating additional trees. ",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-28T19:21:52Z",
            "diff_hunk": "@@ -514,20 +514,26 @@ function LanguageTree:register_cbs(cbs)\n end\n \n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function region_contains(region, range)\n+  for _, node in ipairs(region) do\n+    local start_row, start_col, end_row, end_col = node:range()",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884169441",
            "id": 884169441,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40s1rh",
            "original_commit_id": "0da0565f363a960e6061652aced5820f1d474edf",
            "original_line": 519,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988549390,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884169441/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-28T19:21:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884169441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884169651"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884169651"
                }
            },
            "author_association": "MEMBER",
            "body": "So, at the moment `_regions = {{region}}` where `region = node | range`. It would probably be simpler when we would just have `{region}` with only one tree instead of `_trees` (which is the outer level of regions",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-28T19:24:12Z",
            "diff_hunk": "@@ -514,20 +514,26 @@ function LanguageTree:register_cbs(cbs)\n end\n \n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function region_contains(region, range)\n+  for _, node in ipairs(region) do\n+    local start_row, start_col, end_row, end_col = node:range()",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884169651",
            "id": 884169651,
            "in_reply_to_id": 884169441,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40s1uz",
            "original_commit_id": "0da0565f363a960e6061652aced5820f1d474edf",
            "original_line": 519,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988549536,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884169651/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-28T19:25:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884169651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884236604"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884236604"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I think `region_contains` with the loop not in this function would it more general an easier to understand what it does (this is essentially `ts_util.is_node_in_range` that also works for range in ranges). I think the same could stay the `region_contains` even when the loop gets pulled out into `Language:tree`. The regions are actually only ranges and not the table containing the regions for one tree.\r\n\r\nOh yeah, that's nicer :+1:\r\n\r\n> Tests would nice, since it's always difficult to remember what regions actually are.\r\n\r\nWhat kinds of tests would you like to see there? I'll definitely try to add one for the case that is fixed with this PR, but I'm not sure what to do about the regions.\r\n\r\n> I for example don't remember why they are doubly nested but I think this has to do with how @steelsojka implemented \"combined\" that you can actually have multiple trees of one injection in the same document\r\n\r\nFrom `:h LanguageTree:set_included_regions` it sounds like it's the other way around, ie. one tree for multiple injected regions?",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T08:59:18Z",
            "diff_hunk": "@@ -514,20 +514,26 @@ function LanguageTree:register_cbs(cbs)\n end\n \n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function region_contains(region, range)\n+  for _, node in ipairs(region) do\n+    local start_row, start_col, end_row, end_col = node:range()",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884236604",
            "id": 884236604,
            "in_reply_to_id": 884169441,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tGE8",
            "original_commit_id": "0da0565f363a960e6061652aced5820f1d474edf",
            "original_line": 519,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988593635,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884236604/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T08:59:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884236604",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884269111"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884269111"
                }
            },
            "author_association": "MEMBER",
            "body": "> From :h LanguageTree:set_included_regions it sounds like it's the other way around, ie. one tree for multiple injected regions?\r\n\r\nYes, this is how upstream tree-sitter does it. Did you check whether a region can also be a range instead of a node?",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T13:10:28Z",
            "diff_hunk": "@@ -514,20 +514,26 @@ function LanguageTree:register_cbs(cbs)\n end\n \n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function region_contains(region, range)\n+  for _, node in ipairs(region) do\n+    local start_row, start_col, end_row, end_col = node:range()",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884269111",
            "id": 884269111,
            "in_reply_to_id": 884169441,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tOA3",
            "original_commit_id": "0da0565f363a960e6061652aced5820f1d474edf",
            "original_line": 519,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988620834,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884269111/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T13:10:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884269111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884269349"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884269349"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, it's possible (and actually done) to construct a region from a range.",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T13:11:52Z",
            "diff_hunk": "@@ -514,20 +514,26 @@ function LanguageTree:register_cbs(cbs)\n end\n \n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function region_contains(region, range)\n+  for _, node in ipairs(region) do\n+    local start_row, start_col, end_row, end_col = node:range()",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884269349",
            "id": 884269349,
            "in_reply_to_id": 884169441,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tOEl",
            "original_commit_id": "0da0565f363a960e6061652aced5820f1d474edf",
            "original_line": 519,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988621006,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884269349/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T13:11:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884269349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884271776"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271776"
                }
            },
            "author_association": "MEMBER",
            "body": "Really: 1,2,4,5 ? Is the byte post stored at 3? Usually most ranges are srow, scol,erow,ecol. Possible that it's different in this file for `offset!`",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T13:29:23Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884271776",
            "id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tOqg",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988623008,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271776/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T13:29:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884271892"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271892"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, it's `{start_row, start_col, start_byte, end_row, end_col, end_byte}`",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T13:30:26Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884271892",
            "id": 884271892,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tOsU",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988623089,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271892/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T13:30:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884271915"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271915"
                }
            },
            "author_association": "MEMBER",
            "body": "(`region` != `range`)",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T13:30:40Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884271915",
            "id": 884271915,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tOsr",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988623109,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271915/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T13:30:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884271915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884296870"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884296870"
                }
            },
            "author_association": "MEMBER",
            "body": "@L3MON4D3 I'd make sure you are using names here that are consistent with the rest of the codebase.",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T16:39:45Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884296870",
            "id": 884296870,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tUym",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988642788,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884296870/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T16:39:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884296870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884299068"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884299068"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "True, they aren't that great. I would've just used the one from `set_included_regions` but `range` was already taken.\r\nAre they okay now? Alternatively, I could change `range` to something like `query_range` and use the names from the loop in `LT:set_included_regions`",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T17:00:40Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884299068",
            "id": 884299068,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tVU8",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988644478,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884299068/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T17:00:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884299068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884299685"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884299685"
                }
            },
            "author_association": "MEMBER",
            "body": "~~Why use different structures at all and not just work with `range` or `region`, depending on what data you need?~~\r\n\r\nI think `region_range` is a bit unfortunate in principle -- is it a `region` or a `range`? -- but the use is probably clear from the context. Maybe `tree_range` for the local range? Otherwise it's OK with me.",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T17:06:22Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884299685",
            "id": 884299685,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tVel",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988644912,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884299685/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T17:11:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884299685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884300406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884300406"
                }
            },
            "author_association": "MEMBER",
            "body": "(But not with `stylua`; make sure to run `stylua runtime/` from the repo root.)",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T17:12:05Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884300406",
            "id": 884300406,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tVp2",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988645479,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884300406/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T17:12:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884300406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884301993"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884301993"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "~I don't really get what you're suggesting, `contains` has to iterate over all regions that are part of this `LanguageTree` and find the one (if any) that includes `range`.\r\nIt's kind of unfortunate that `_regions` contains either a `node` or a `range`, but I don't know if that should be changed.~\r\nDidn't see the edit :sweat_smile:\r\nI agree about `node_range`, it's unclear, I changed the names around a bit for cf12546",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T17:27:35Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884301993",
            "id": 884301993,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tWCp",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988646739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884301993/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T17:29:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884301993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884302087"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884302087"
                }
            },
            "author_association": "MEMBER",
            "body": "I think \"region\" should be ok as it is the data structure applied to `set_included_regions`",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T17:28:44Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884302087",
            "id": 884302087,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tWEH",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988646831,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884302087/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T17:28:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884302087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884302104"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884302104"
                }
            },
            "author_association": "MEMBER",
            "body": "It's just about the naming. I think it's much better now; let's see if someone else has a better suggestion.",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T17:29:04Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884302104",
            "id": 884302104,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tWEY",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988646847,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884302104/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T17:29:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884302104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884303309"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884303309"
                }
            },
            "author_association": "MEMBER",
            "body": "@L3MON4D3  `_regions` actually contains the regions per tree on the first nesting level and the actual regions (which are ranges as a 6-tupel). So @clason 's idea about using a different name are justified. We could use `region_contains` or do a test for 4 or 6 tupels.  ",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T17:40:02Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884303309",
            "id": 884303309,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tWXN",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988647756,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884303309/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T17:40:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884303309",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884306002"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884306002"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'd be fine with `region_contains` instead of `range_contains`, whichever you prefer :)\r\n(that routine is only used in `contains`, so no big difference I'd say)",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T18:05:30Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884306002",
            "id": 884306002,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tXBS",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988649694,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884306002/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T18:05:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884306002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r884308294"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/884308294"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Nvm that, it's much easier to reason about with `region_contains` :+1:",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-05-29T18:29:46Z",
            "diff_hunk": "@@ -513,25 +513,45 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {inner} is completely inside {outer} (inner=outer -> true).\n+---@param outer range\n+---@param inner range\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n-  local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n-  local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n+local function range_contains(outer, inner)\n+  local start_row, start_col, end_row, end_col = unpack(outer)\n+  local start_fits = start_row < inner[1] or (start_row == inner[1] and start_col <= inner[2])\n+  local end_fits = end_row > inner[3] or (end_row == inner[3] and end_col >= inner[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false\n end\n \n --- Determines whether {range} is contained in this language tree\n ---\n ---@param range A range, that is a `{ start_line, start_col, end_line, end_col }` table.\n function LanguageTree:contains(range)\n-  for _, tree in pairs(self._trees) do\n-    if tree_contains(tree, range) then\n-      return true\n+  -- Insp(range)\n+  for _, region in ipairs(self._regions) do\n+    for _, node_range in ipairs(region) do\n+      -- node_range is either node (userdata) or six-tuple as set in\n+      -- |LanguageTree:set_included_regions|.\n+      local region_range\n+      if type(node_range) == \"table\" then\n+        -- omit byte-offset of start/end-position.\n+        region_range = {node_range[1], node_range[2], node_range[4], node_range[5]}",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r884308294",
            "id": 884308294,
            "in_reply_to_id": 884271776,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40tXlG",
            "original_commit_id": "6139d0765ad3e9b5721600524704806c01dad7dc",
            "original_line": 545,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 988651442,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884308294/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-29T18:29:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/884308294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r894004837"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/894004837"
                }
            },
            "author_association": "MEMBER",
            "body": "This change seems unnecessary and makes the code worse.\r\n\r\n```lua\r\nreturn condition\r\n```\r\nis much better than\r\n```lua\r\nif condition then\r\n    return true\r\nend\r\nreturn false\r\n```",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-06-09T22:15:38Z",
            "diff_hunk": "@@ -513,25 +513,40 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {range} is completely inside {region} (range(region)==range -> true).\n+---@param region node or 6-tuple srow, scol, sbyte, erow, ecol, ebyte.\n+---@param inner range, 4-tuple srow, scol, erow, ecol.\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n+local function region_contains(region, range)\n+  local start_row, start_col, end_row, end_col\n+  if type(region) == 'table' then\n+    start_row, start_col, end_row, end_col = region[1], region[2], region[4], region[5]\n+  else\n+    start_row, start_col, end_row, end_col = region:range()\n+  end\n+\n   local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n   local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r894004837",
            "id": 894004837,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41SW5l",
            "original_commit_id": "74f3a96af283a13c33e19324064f1748a7e77a0a",
            "original_line": 536,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1002062440,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/894004837/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-09T22:16:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/894004837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18678#discussion_r894234740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18678"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/894234740"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Oh agreed, no idea how I missed that.\r\nThanks :+1:",
            "commit_id": "43137bb3824bcd81ccba4233beaffc66203349de",
            "created_at": "2022-06-10T07:31:05Z",
            "diff_hunk": "@@ -513,25 +513,40 @@ function LanguageTree:register_cbs(cbs)\n   end\n end\n \n+---Determine whether {range} is completely inside {region} (range(region)==range -> true).\n+---@param region node or 6-tuple srow, scol, sbyte, erow, ecol, ebyte.\n+---@param inner range, 4-tuple srow, scol, erow, ecol.\n+---@return boolean\n ---@private\n-local function tree_contains(tree, range)\n-  local start_row, start_col, end_row, end_col = tree:root():range()\n+local function region_contains(region, range)\n+  local start_row, start_col, end_row, end_col\n+  if type(region) == 'table' then\n+    start_row, start_col, end_row, end_col = region[1], region[2], region[4], region[5]\n+  else\n+    start_row, start_col, end_row, end_col = region:range()\n+  end\n+\n   local start_fits = start_row < range[1] or (start_row == range[1] and start_col <= range[2])\n   local end_fits = end_row > range[3] or (end_row == range[3] and end_col >= range[4])\n \n-  return start_fits and end_fits\n+  if start_fits and end_fits then\n+    return true\n+  end\n+\n+  return false",
            "html_url": "https://github.com/neovim/neovim/pull/18678#discussion_r894234740",
            "id": 894234740,
            "in_reply_to_id": 894004837,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41TPB0",
            "original_commit_id": "74f3a96af283a13c33e19324064f1748a7e77a0a",
            "original_line": 536,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1002361152,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/894234740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-10T07:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/894234740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@theHamsta could you take a look at this one as well?",
            "created_at": "2022-05-28T17:36:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-1140302829",
            "id": 1140302829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM5D96Pt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140302829/reactions"
            },
            "updated_at": "2022-05-28T17:36:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140302829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Regarding the tests, the included `c`-parser seems to include leading whitespace in its root, so\r\n````\r\n```c\r\n\r\n```\r\n````\r\nreturns the correct `\"c\"` for `{1,0,1,0}`, even without the patch.\r\n(ie. I cannot find a way to reproduce the bug with just the c-grammar)\r\nDoes it make sense to add a lua+markdown grammar for this one test?",
            "created_at": "2022-05-29T10:45:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-1140422353",
            "id": 1140422353,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM5D-XbR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140422353/reactions"
            },
            "updated_at": "2022-05-29T10:46:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140422353",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Markdown probably not, but we've talked about bundling a Lua (and possibly Viml) parser.",
            "created_at": "2022-05-29T10:55:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-1140424010",
            "id": 1140424010,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM5D-X1K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140424010/reactions"
            },
            "updated_at": "2022-05-29T10:55:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140424010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Regarding the tests, the included `c`-parser seems to include leading whitespace in its root, so\r\n> \r\n> ```\r\n> ```c\r\n> \r\n> ```\r\n> ```\r\n> \r\n> returns the correct `\"c\"` for `{1,0,1,0}`, even without the patch. (ie. I cannot find a way to reproduce the bug with just the c-grammar) Does it make sense to add a lua+markdown grammar for this one test?\r\n\r\nOkay nevermind that, I forgot that I already included the patches in my regular neovim-build :|",
            "created_at": "2022-05-29T12:11:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-1140436549",
            "id": 1140436549,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM5D-a5F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140436549/reactions"
            },
            "updated_at": "2022-05-29T12:11:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140436549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For tests you can maybe use this file https://github.com/nvim-treesitter/nvim-treesitter/blob/master/tests/unit/ts_utils_spec.lua\r\n\r\nOverall, this looks good to me.",
            "created_at": "2022-05-29T13:13:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-1140446848",
            "id": 1140446848,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM5D-daA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140446848/reactions"
            },
            "updated_at": "2022-05-29T13:13:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140446848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've noticed that in the [existing tests](https://github.com/L3MON4D3/neovim/blob/cf12546f26a2b2a1d45eee9b5cf9b0a84bac6908/test/functional/treesitter/parser_spec.lua#L604), the languagetrees also use their root's range for their range.\r\nI think using `_regions` makes more sense, but the outermost tree does not have a `region` (`_regions = {}`).\r\nFor it, we could probably just use the `root` as its region, but where should that be set?",
            "created_at": "2022-05-29T17:33:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-1140492760",
            "id": 1140492760,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM5D-onY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140492760/reactions"
            },
            "updated_at": "2022-05-29T17:33:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1140492760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Little thought on this: the underlying question is the synchronization between language-tree ranges and tree root ranges.\r\nThis question will need to be addressed in order to enable incremental language-tree.\r\n\r\nWhile this does not block the issue, the question is to determine whether this would create behaviors that we cannot keep when the synchronization is added (either because we used the tree root range, or language-tree range as the source of truth).",
            "created_at": "2022-06-16T09:02:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-1157414588",
            "id": 1157414588,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM5E_L68",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1157414588/reactions"
            },
            "updated_at": "2022-06-16T09:02:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1157414588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I *think* this is superceded by #33948",
            "created_at": "2025-05-29T10:07:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-2918925976",
            "id": 2918925976,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM6t-0aY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2918925976/reactions"
            },
            "updated_at": "2025-05-29T10:07:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2918925976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's also stale enough that it's hard to pick up, so let me close this. Should there still be changes that are useful on `master`, a fresh PR would be welcome.",
            "created_at": "2025-05-29T10:09:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/18678#issuecomment-2918930604",
            "id": 2918930604,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
            "node_id": "IC_kwDOAPphoM6t-1is",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2918930604/reactions"
            },
            "updated_at": "2025-05-29T10:09:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2918930604",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/18678/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/18678/commits",
    "created_at": "2022-05-21T14:25:01Z",
    "diff_url": "https://github.com/neovim/neovim/pull/18678.diff",
    "draft": false,
    "head": {
        "label": "L3MON4D3:language_region",
        "ref": "language_region",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/L3MON4D3/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/L3MON4D3/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/L3MON4D3/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/L3MON4D3/neovim/branches{/branch}",
            "clone_url": "https://github.com/L3MON4D3/neovim.git",
            "collaborators_url": "https://api.github.com/repos/L3MON4D3/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/L3MON4D3/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/L3MON4D3/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/L3MON4D3/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/L3MON4D3/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/L3MON4D3/neovim/contributors",
            "created_at": "2022-05-21T13:31:32Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/L3MON4D3/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/L3MON4D3/neovim/downloads",
            "events_url": "https://api.github.com/repos/L3MON4D3/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/L3MON4D3/neovim/forks",
            "full_name": "L3MON4D3/neovim",
            "git_commits_url": "https://api.github.com/repos/L3MON4D3/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/L3MON4D3/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/L3MON4D3/neovim/git/tags{/sha}",
            "git_url": "git://github.com/L3MON4D3/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/L3MON4D3/neovim/hooks",
            "html_url": "https://github.com/L3MON4D3/neovim",
            "id": 494791991,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/L3MON4D3/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/L3MON4D3/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/L3MON4D3/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/L3MON4D3/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/L3MON4D3/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/L3MON4D3/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/L3MON4D3/neovim/merges",
            "milestones_url": "https://api.github.com/repos/L3MON4D3/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHX3tNw",
            "notifications_url": "https://api.github.com/repos/L3MON4D3/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
                "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
                "followers_url": "https://api.github.com/users/L3MON4D3/followers",
                "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
                "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/L3MON4D3",
                "id": 41961280,
                "login": "L3MON4D3",
                "node_id": "MDQ6VXNlcjQxOTYxMjgw",
                "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
                "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
                "repos_url": "https://api.github.com/users/L3MON4D3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/L3MON4D3",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/L3MON4D3/neovim/pulls{/number}",
            "pushed_at": "2023-12-12T20:43:20Z",
            "releases_url": "https://api.github.com/repos/L3MON4D3/neovim/releases{/id}",
            "size": 240022,
            "ssh_url": "git@github.com:L3MON4D3/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/L3MON4D3/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/L3MON4D3/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/L3MON4D3/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/L3MON4D3/neovim/subscription",
            "svn_url": "https://github.com/L3MON4D3/neovim",
            "tags_url": "https://api.github.com/repos/L3MON4D3/neovim/tags",
            "teams_url": "https://api.github.com/repos/L3MON4D3/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/L3MON4D3/neovim/git/trees{/sha}",
            "updated_at": "2022-09-17T07:01:56Z",
            "url": "https://api.github.com/repos/L3MON4D3/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "43137bb3824bcd81ccba4233beaffc66203349de",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
            "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
            "followers_url": "https://api.github.com/users/L3MON4D3/followers",
            "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
            "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/L3MON4D3",
            "id": 41961280,
            "login": "L3MON4D3",
            "node_id": "MDQ6VXNlcjQxOTYxMjgw",
            "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
            "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
            "repos_url": "https://api.github.com/users/L3MON4D3/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/L3MON4D3",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/18678",
    "id": 943444820,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18678",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM44O9NU",
    "number": 18678,
    "patch_url": "https://github.com/neovim/neovim/pull/18678.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/18678/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/43137bb3824bcd81ccba4233beaffc66203349de",
    "title": "fix(treesitter): use regions for `LanguageTree:contains`",
    "updated_at": "2025-05-29T10:09:51Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/18678",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41961280?v=4",
        "events_url": "https://api.github.com/users/L3MON4D3/events{/privacy}",
        "followers_url": "https://api.github.com/users/L3MON4D3/followers",
        "following_url": "https://api.github.com/users/L3MON4D3/following{/other_user}",
        "gists_url": "https://api.github.com/users/L3MON4D3/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/L3MON4D3",
        "id": 41961280,
        "login": "L3MON4D3",
        "node_id": "MDQ6VXNlcjQxOTYxMjgw",
        "organizations_url": "https://api.github.com/users/L3MON4D3/orgs",
        "received_events_url": "https://api.github.com/users/L3MON4D3/received_events",
        "repos_url": "https://api.github.com/users/L3MON4D3/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/L3MON4D3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/L3MON4D3/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/L3MON4D3",
        "user_view_type": "public"
    }
}