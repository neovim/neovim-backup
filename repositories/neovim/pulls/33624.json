{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33624/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33624/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33624"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33624"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33624/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/0fdd9c26018208d2feaf4eb0818dd571beaa243b"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6050,
            "forks_count": 6050,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1919,
            "open_issues_count": 1919,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-04-29T02:05:46Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 319440,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89035,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-04-29T02:12:25Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89035,
            "watchers_count": 89035,
            "web_commit_signoff_required": false
        },
        "sha": "d01b2611a6d54ec20640ddab4149932bd9213b7b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem:\r\n\r\nIn cases when the (in process) LSP server responds to the request immediately and calls `notify_reply_callback` the request will still be marked as pending, because the code assumes that the response will occur asynchronously, as a result the request will be pending forever, because it was already set as completed before we even set it as pending.\r\n\r\nA workaround is to wrap `notify_replay_callback` in `vim.shedule` ([like so](https://github.com/neovim/neovim/pull/24338#issuecomment-2809568617)] but that seems counterintuitive.\r\n\r\nSolution:\r\n\r\nHandle this case in nvim lsp client itself. ",
    "closed_at": "2025-04-26T14:08:04Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060219971"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060219971"
                }
            },
            "author_association": "MEMBER",
            "body": "The callback which sets `already_responded=true`, is called with `schedule_wrap(notify_reply_callback)`. \r\n\r\nHow could `already_responded` ever be true here? Is there a coroutine yield somewhere?",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T13:13:08Z",
            "diff_hunk": "@@ -688,11 +693,15 @@ function Client:request(method, params, handler, bufnr)\n     })\n   end, function(request_id)\n     -- Called when the server sends a response to the request (including cancelled acknowledgment).\n-    self:_process_request(request_id, 'complete')\n+    if request_registered then\n+      self:_process_request(request_id, 'complete')\n+    end\n+    already_responded = true\n   end)\n \n-  if success and request_id then\n+  if success and request_id and not already_responded then",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060219971",
            "id": 2060219971,
            "line": 703,
            "node_id": "PRRC_kwDOAPphoM56zHZD",
            "original_commit_id": "88a383160d08563f56325860269a9b0d7aeba58c",
            "original_line": 703,
            "original_position": 24,
            "original_start_line": 691,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 25,
            "pull_request_review_id": 2794085192,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060219971/reactions"
            },
            "side": "RIGHT",
            "start_line": 691,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-04-25T13:13:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060219971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060551817"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060551817"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I assume you are referring to rpc client code right? https://github.com/neovim/neovim/blob/06613989a67e03044941a608536a775af1521c61/runtime/lua/vim/lsp/rpc.lua#L277\r\n\r\nIn-process servers don't use this code path right?\r\nhttps://github.com/neovim/neovim/blob/06613989a67e03044941a608536a775af1521c61/runtime/lua/vim/lsp/client.lua#L463-L466\r\n\r\nTechnically, we could require in-process servers to wrap reply callbacks in `vim.schedule` like rpc does, and that would work eg. user's code would look like this:\r\n```lua\r\n  function server.request(method, params, callback, notify_reply_callback)\r\n    -- ... request handlers go here\r\n\r\n    if notify_reply_callback then \r\n      vim.schedule(function() notify_reply_callback(request_id) end)\r\n    end\r\n\r\n    return true, request_id\r\n  end\r\n```\r\nBut that seems like leaking implementation quirks to API users, I would never know that I have to do that schedule without reading nvim's source code.\r\n\r\n(We could also introduce a tiny shim around in-process servers that wraps `notify_reply_callback` like rpc does, but just handling the sync case seemed easy enough so I did not try that yet)",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T16:31:56Z",
            "diff_hunk": "@@ -688,11 +693,15 @@ function Client:request(method, params, handler, bufnr)\n     })\n   end, function(request_id)\n     -- Called when the server sends a response to the request (including cancelled acknowledgment).\n-    self:_process_request(request_id, 'complete')\n+    if request_registered then\n+      self:_process_request(request_id, 'complete')\n+    end\n+    already_responded = true\n   end)\n \n-  if success and request_id then\n+  if success and request_id and not already_responded then",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060551817",
            "id": 2060551817,
            "in_reply_to_id": 2060219971,
            "line": 703,
            "node_id": "PRRC_kwDOAPphoM560YaJ",
            "original_commit_id": "88a383160d08563f56325860269a9b0d7aeba58c",
            "original_line": 703,
            "original_position": 24,
            "original_start_line": 691,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 25,
            "pull_request_review_id": 2794695465,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060551817/reactions"
            },
            "side": "RIGHT",
            "start_line": 691,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-04-25T16:31:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060551817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20758186?v=4",
                "events_url": "https://api.github.com/users/PolyMeilex/events{/privacy}",
                "followers_url": "https://api.github.com/users/PolyMeilex/followers",
                "following_url": "https://api.github.com/users/PolyMeilex/following{/other_user}",
                "gists_url": "https://api.github.com/users/PolyMeilex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PolyMeilex",
                "id": 20758186,
                "login": "PolyMeilex",
                "node_id": "MDQ6VXNlcjIwNzU4MTg2",
                "organizations_url": "https://api.github.com/users/PolyMeilex/orgs",
                "received_events_url": "https://api.github.com/users/PolyMeilex/received_events",
                "repos_url": "https://api.github.com/users/PolyMeilex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PolyMeilex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PolyMeilex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PolyMeilex",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060561038"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060561038"
                }
            },
            "author_association": "MEMBER",
            "body": "> Technically, we could require in-process servers to wrap reply callbacks in `vim.schedule` like rpc does,\r\n\r\nNo, I'm glad you're fixing this internally. Just trying to understand it.\r\n\r\n\r\n\r\n> In-process servers don't use this code path right?\r\n\r\nOk, I missed that. Should there be a 1-line comment somewhere giving a hint about that?\r\n\r\nAlso a 1-line comment on these flags that explains they are for in-process server?",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T16:39:56Z",
            "diff_hunk": "@@ -688,11 +693,15 @@ function Client:request(method, params, handler, bufnr)\n     })\n   end, function(request_id)\n     -- Called when the server sends a response to the request (including cancelled acknowledgment).\n-    self:_process_request(request_id, 'complete')\n+    if request_registered then\n+      self:_process_request(request_id, 'complete')\n+    end\n+    already_responded = true\n   end)\n \n-  if success and request_id then\n+  if success and request_id and not already_responded then",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060561038",
            "id": 2060561038,
            "in_reply_to_id": 2060219971,
            "line": 703,
            "node_id": "PRRC_kwDOAPphoM560aqO",
            "original_commit_id": "88a383160d08563f56325860269a9b0d7aeba58c",
            "original_line": 703,
            "original_position": 24,
            "original_start_line": 691,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 25,
            "pull_request_review_id": 2794713368,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060561038/reactions"
            },
            "side": "RIGHT",
            "start_line": 691,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-04-25T16:39:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060561038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060610851"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060610851"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ok, I think it's addressed now with\r\n`Sync responses are only possible with in-process servers`\r\nand \r\n`NOTE: rpc.request might be an in-process server lua function call rather than rpc call`",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T17:09:37Z",
            "diff_hunk": "@@ -688,11 +693,15 @@ function Client:request(method, params, handler, bufnr)\n     })\n   end, function(request_id)\n     -- Called when the server sends a response to the request (including cancelled acknowledgment).\n-    self:_process_request(request_id, 'complete')\n+    if request_registered then\n+      self:_process_request(request_id, 'complete')\n+    end\n+    already_responded = true\n   end)\n \n-  if success and request_id then\n+  if success and request_id and not already_responded then",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060610851",
            "id": 2060610851,
            "in_reply_to_id": 2060219971,
            "line": 703,
            "node_id": "PRRC_kwDOAPphoM560m0j",
            "original_commit_id": "88a383160d08563f56325860269a9b0d7aeba58c",
            "original_line": 703,
            "original_position": 24,
            "original_start_line": 691,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 25,
            "pull_request_review_id": 2794797052,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060610851/reactions"
            },
            "side": "RIGHT",
            "start_line": 691,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-04-25T17:09:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060610851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20758186?v=4",
                "events_url": "https://api.github.com/users/PolyMeilex/events{/privacy}",
                "followers_url": "https://api.github.com/users/PolyMeilex/followers",
                "following_url": "https://api.github.com/users/PolyMeilex/following{/other_user}",
                "gists_url": "https://api.github.com/users/PolyMeilex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PolyMeilex",
                "id": 20758186,
                "login": "PolyMeilex",
                "node_id": "MDQ6VXNlcjIwNzU4MTg2",
                "organizations_url": "https://api.github.com/users/PolyMeilex/orgs",
                "received_events_url": "https://api.github.com/users/PolyMeilex/received_events",
                "repos_url": "https://api.github.com/users/PolyMeilex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PolyMeilex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PolyMeilex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PolyMeilex",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060627280"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060627280"
                }
            },
            "author_association": "MEMBER",
            "body": "I always thought that the `vim.schedule` wrapper was a bit fishy, I bet this was the reason for it. Maybe we can remove that now?",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T17:24:33Z",
            "diff_hunk": "@@ -688,11 +693,15 @@ function Client:request(method, params, handler, bufnr)\n     })\n   end, function(request_id)\n     -- Called when the server sends a response to the request (including cancelled acknowledgment).\n-    self:_process_request(request_id, 'complete')\n+    if request_registered then\n+      self:_process_request(request_id, 'complete')\n+    end\n+    already_responded = true\n   end)\n \n-  if success and request_id then\n+  if success and request_id and not already_responded then",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060627280",
            "id": 2060627280,
            "in_reply_to_id": 2060219971,
            "line": 703,
            "node_id": "PRRC_kwDOAPphoM560q1Q",
            "original_commit_id": "88a383160d08563f56325860269a9b0d7aeba58c",
            "original_line": 703,
            "original_position": 24,
            "original_start_line": 691,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 25,
            "pull_request_review_id": 2794824439,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060627280/reactions"
            },
            "side": "RIGHT",
            "start_line": 691,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2025-04-25T17:24:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060627280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060681195"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060681195"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  -- Detect if request resolved synchronously (only possible with in-process servers).\r\n```",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T18:10:31Z",
            "diff_hunk": "@@ -678,6 +678,13 @@ function Client:request(method, params, handler, bufnr)\n   bufnr = vim._resolve_bufnr(bufnr)\n   local version = lsp.util.buf_versions[bufnr]\n   log.debug(self._log_prefix, 'client.request', self.id, method, params, handler, bufnr)\n+\n+  -- Used to detect if request resolved synchronously\n+  -- Sync responses are only possible with in-process servers",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060681195",
            "id": 2060681195,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5603_r",
            "original_commit_id": "b5b1113f08a34c53d7900dd7a4e703573af42e4c",
            "original_line": 683,
            "original_position": 6,
            "original_start_line": 682,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": null,
            "pull_request_review_id": 2794913506,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060681195/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-25T18:10:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060681195",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060682612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060682612"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  -- NOTE: rpc.request might call an in-process (Lua) server, thus may be synchronous.\r\n```",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T18:11:47Z",
            "diff_hunk": "@@ -678,6 +678,13 @@ function Client:request(method, params, handler, bufnr)\n   bufnr = vim._resolve_bufnr(bufnr)\n   local version = lsp.util.buf_versions[bufnr]\n   log.debug(self._log_prefix, 'client.request', self.id, method, params, handler, bufnr)\n+\n+  -- Used to detect if request resolved synchronously\n+  -- Sync responses are only possible with in-process servers\n+  local already_responded = false\n+  local request_registered = false\n+\n+  -- NOTE: rpc.request might be an in-process server lua function call rather than rpc call",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060682612",
            "id": 2060682612,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5604V0",
            "original_commit_id": "b5b1113f08a34c53d7900dd7a4e703573af42e4c",
            "original_line": 687,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": null,
            "pull_request_review_id": 2794915747,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060682612/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-25T18:11:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060682612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060684237"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060684237"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    it('request should not be pending for sync responses (in-process LS)', function()\r\n```",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T18:13:20Z",
            "diff_hunk": "@@ -1252,6 +1252,66 @@ describe('LSP', function()\n       }\n     end)\n \n+    it('request should not be pending for sync responses from the language server', function()",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060684237",
            "id": 2060684237,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5604vN",
            "original_commit_id": "b5b1113f08a34c53d7900dd7a4e703573af42e4c",
            "original_line": 1255,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 2794918451,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060684237/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-25T18:13:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060684237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060767423"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060767423"
                }
            },
            "author_association": "MEMBER",
            "body": "is it possible that `stop_client()` cleans up the pending requests? inspecting the code suggests no, currently. but would be better to not assume that.\r\n```suggestion\r\n        local has_pending = client.requests[request_id] ~= nil\r\n        vim.lsp.stop_client(client_id)\r\n\r\n        return has_pending\r\n```",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T19:16:06Z",
            "diff_hunk": "@@ -1252,6 +1252,66 @@ describe('LSP', function()\n       }\n     end)\n \n+    it('request should not be pending for sync responses (in-process LS)', function()\n+      clear()\n+\n+      --- @type boolean\n+      local pending_request = exec_lua(function()\n+        local function server(dispatchers)\n+          local closing = false\n+          local srv = {}\n+          local request_id = 0\n+\n+          function srv.request(method, _params, callback, notify_reply_callback)\n+            if method == 'textDocument/formatting' then\n+              callback(nil, {})\n+            elseif method == 'initialize' then\n+              callback(nil, {\n+                capabilities = {\n+                  textDocument = {\n+                    formatting = true,\n+                  },\n+                },\n+              })\n+            elseif method == 'shutdown' then\n+              callback(nil, nil)\n+            end\n+            request_id = request_id + 1\n+            if notify_reply_callback then\n+              notify_reply_callback(request_id)\n+            end\n+            return true, request_id\n+          end\n+\n+          function srv.notify(method)\n+            if method == 'exit' then\n+              dispatchers.on_exit(0, 15)\n+            end\n+          end\n+          function srv.is_closing()\n+            return closing\n+          end\n+          function srv.terminate()\n+            closing = true\n+          end\n+\n+          return srv\n+        end\n+\n+        local client_id = assert(vim.lsp.start({ cmd = server }))\n+        local client = assert(vim.lsp.get_client_by_id(client_id))\n+\n+        local ok, request_id = client:request('textDocument/formatting', {})\n+        assert(ok)\n+\n+        vim.lsp.stop_client(client_id)\n+\n+        return client.requests[request_id] ~= nil",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060767423",
            "id": 2060767423,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM561NC_",
            "original_commit_id": "17edf351b91b8948d1ba9e48567de0606fc64644",
            "original_line": 1309,
            "original_position": 58,
            "original_start_line": 1307,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 2795057429,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060767423/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-25T19:16:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060767423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33624#discussion_r2060773179"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33624"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060773179"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, indeed. It wouldn't be that surprising if it did behave that way (in the future).",
            "commit_id": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
            "created_at": "2025-04-25T19:21:53Z",
            "diff_hunk": "@@ -1252,6 +1252,66 @@ describe('LSP', function()\n       }\n     end)\n \n+    it('request should not be pending for sync responses (in-process LS)', function()\n+      clear()\n+\n+      --- @type boolean\n+      local pending_request = exec_lua(function()\n+        local function server(dispatchers)\n+          local closing = false\n+          local srv = {}\n+          local request_id = 0\n+\n+          function srv.request(method, _params, callback, notify_reply_callback)\n+            if method == 'textDocument/formatting' then\n+              callback(nil, {})\n+            elseif method == 'initialize' then\n+              callback(nil, {\n+                capabilities = {\n+                  textDocument = {\n+                    formatting = true,\n+                  },\n+                },\n+              })\n+            elseif method == 'shutdown' then\n+              callback(nil, nil)\n+            end\n+            request_id = request_id + 1\n+            if notify_reply_callback then\n+              notify_reply_callback(request_id)\n+            end\n+            return true, request_id\n+          end\n+\n+          function srv.notify(method)\n+            if method == 'exit' then\n+              dispatchers.on_exit(0, 15)\n+            end\n+          end\n+          function srv.is_closing()\n+            return closing\n+          end\n+          function srv.terminate()\n+            closing = true\n+          end\n+\n+          return srv\n+        end\n+\n+        local client_id = assert(vim.lsp.start({ cmd = server }))\n+        local client = assert(vim.lsp.get_client_by_id(client_id))\n+\n+        local ok, request_id = client:request('textDocument/formatting', {})\n+        assert(ok)\n+\n+        vim.lsp.stop_client(client_id)\n+\n+        return client.requests[request_id] ~= nil",
            "html_url": "https://github.com/neovim/neovim/pull/33624#discussion_r2060773179",
            "id": 2060773179,
            "in_reply_to_id": 2060767423,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM561Oc7",
            "original_commit_id": "17edf351b91b8948d1ba9e48567de0606fc64644",
            "original_line": 1309,
            "original_position": 58,
            "original_start_line": 1307,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 2795070400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060773179/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-25T19:21:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2060773179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20758186?v=4",
                "events_url": "https://api.github.com/users/PolyMeilex/events{/privacy}",
                "followers_url": "https://api.github.com/users/PolyMeilex/followers",
                "following_url": "https://api.github.com/users/PolyMeilex/following{/other_user}",
                "gists_url": "https://api.github.com/users/PolyMeilex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PolyMeilex",
                "id": 20758186,
                "login": "PolyMeilex",
                "node_id": "MDQ6VXNlcjIwNzU4MTg2",
                "organizations_url": "https://api.github.com/users/PolyMeilex/orgs",
                "received_events_url": "https://api.github.com/users/PolyMeilex/received_events",
                "repos_url": "https://api.github.com/users/PolyMeilex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PolyMeilex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PolyMeilex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PolyMeilex",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@justinmk I wonder if this will resolve the false errors we see in the logs",
            "created_at": "2025-04-25T08:01:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/33624#issuecomment-2829666124",
            "id": 2829666124,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33624",
            "node_id": "IC_kwDOAPphoM6oqUdM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2829666124/reactions"
            },
            "updated_at": "2025-04-25T08:01:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2829666124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "ref:\r\n\r\n- https://github.com/neovim/neovim/issues/32277#issuecomment-2629289430\r\n- https://github.com/neovim/neovim/pull/32294",
            "created_at": "2025-04-25T13:01:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/33624#issuecomment-2830369115",
            "id": 2830369115,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33624",
            "node_id": "IC_kwDOAPphoM6otAFb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2830369115/reactions"
            },
            "updated_at": "2025-04-25T13:01:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2830369115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Successfully created backport PR for `release-0.11`:\n- #33652",
            "created_at": "2025-04-26T15:27:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/33624#issuecomment-2832317569",
            "id": 2832317569,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33624",
            "node_id": "IC_kwDOAPphoM6o0byB",
            "performed_via_github_app": {
                "client_id": "Iv23lig4DyAliuVagKSN",
                "created_at": "2024-07-16T09:59:15Z",
                "description": "",
                "events": [],
                "external_url": "https://neovim.io/",
                "html_url": "https://github.com/apps/neovim-backports",
                "id": 946290,
                "name": "neovim backports",
                "node_id": "A_kwHOAGK_Pc4ADnBy",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                    "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                    "followers_url": "https://api.github.com/users/neovim/followers",
                    "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                    "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                    "gravatar_id": "",
                    "html_url": "https://github.com/neovim",
                    "id": 6471485,
                    "login": "neovim",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                    "organizations_url": "https://api.github.com/users/neovim/orgs",
                    "received_events_url": "https://api.github.com/users/neovim/received_events",
                    "repos_url": "https://api.github.com/users/neovim/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                    "type": "Organization",
                    "url": "https://api.github.com/users/neovim",
                    "user_view_type": "public"
                },
                "permissions": {
                    "contents": "write",
                    "metadata": "read",
                    "pull_requests": "write"
                },
                "slug": "neovim-backports",
                "updated_at": "2024-09-11T10:04:42Z"
            },
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832317569/reactions"
            },
            "updated_at": "2025-04-26T15:27:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2832317569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/946290?v=4",
                "events_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/neovim-backports",
                "id": 175700243,
                "login": "neovim-backports[bot]",
                "node_id": "BOT_kgDOCnj5Ew",
                "organizations_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim-backports%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/neovim-backports%5Bbot%5D",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33624/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33624/commits",
    "created_at": "2025-04-25T03:38:19Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33624.diff",
    "draft": false,
    "head": {
        "label": "PolyMeilex:detect-synchronously-resolved-requests",
        "ref": "detect-synchronously-resolved-requests",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/PolyMeilex/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/PolyMeilex/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/PolyMeilex/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/PolyMeilex/neovim/branches{/branch}",
            "clone_url": "https://github.com/PolyMeilex/neovim.git",
            "collaborators_url": "https://api.github.com/repos/PolyMeilex/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/PolyMeilex/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/PolyMeilex/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/PolyMeilex/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/PolyMeilex/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/PolyMeilex/neovim/contributors",
            "created_at": "2025-04-22T17:41:19Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/PolyMeilex/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/PolyMeilex/neovim/downloads",
            "events_url": "https://api.github.com/repos/PolyMeilex/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/PolyMeilex/neovim/forks",
            "full_name": "PolyMeilex/neovim",
            "git_commits_url": "https://api.github.com/repos/PolyMeilex/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/PolyMeilex/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/PolyMeilex/neovim/git/tags{/sha}",
            "git_url": "git://github.com/PolyMeilex/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/PolyMeilex/neovim/hooks",
            "html_url": "https://github.com/PolyMeilex/neovim",
            "id": 970894944,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/PolyMeilex/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/PolyMeilex/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/PolyMeilex/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/PolyMeilex/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/PolyMeilex/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/PolyMeilex/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/PolyMeilex/neovim/merges",
            "milestones_url": "https://api.github.com/repos/PolyMeilex/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOd6uYA",
            "notifications_url": "https://api.github.com/repos/PolyMeilex/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20758186?v=4",
                "events_url": "https://api.github.com/users/PolyMeilex/events{/privacy}",
                "followers_url": "https://api.github.com/users/PolyMeilex/followers",
                "following_url": "https://api.github.com/users/PolyMeilex/following{/other_user}",
                "gists_url": "https://api.github.com/users/PolyMeilex/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PolyMeilex",
                "id": 20758186,
                "login": "PolyMeilex",
                "node_id": "MDQ6VXNlcjIwNzU4MTg2",
                "organizations_url": "https://api.github.com/users/PolyMeilex/orgs",
                "received_events_url": "https://api.github.com/users/PolyMeilex/received_events",
                "repos_url": "https://api.github.com/users/PolyMeilex/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PolyMeilex/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PolyMeilex/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PolyMeilex",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/PolyMeilex/neovim/pulls{/number}",
            "pushed_at": "2025-04-26T14:16:28Z",
            "releases_url": "https://api.github.com/repos/PolyMeilex/neovim/releases{/id}",
            "size": 309761,
            "ssh_url": "git@github.com:PolyMeilex/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/PolyMeilex/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/PolyMeilex/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/PolyMeilex/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/PolyMeilex/neovim/subscription",
            "svn_url": "https://github.com/PolyMeilex/neovim",
            "tags_url": "https://api.github.com/repos/PolyMeilex/neovim/tags",
            "teams_url": "https://api.github.com/repos/PolyMeilex/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/PolyMeilex/neovim/git/trees{/sha}",
            "updated_at": "2025-04-22T17:41:19Z",
            "url": "https://api.github.com/repos/PolyMeilex/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "0fdd9c26018208d2feaf4eb0818dd571beaa243b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/20758186?v=4",
            "events_url": "https://api.github.com/users/PolyMeilex/events{/privacy}",
            "followers_url": "https://api.github.com/users/PolyMeilex/followers",
            "following_url": "https://api.github.com/users/PolyMeilex/following{/other_user}",
            "gists_url": "https://api.github.com/users/PolyMeilex/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/PolyMeilex",
            "id": 20758186,
            "login": "PolyMeilex",
            "node_id": "MDQ6VXNlcjIwNzU4MTg2",
            "organizations_url": "https://api.github.com/users/PolyMeilex/orgs",
            "received_events_url": "https://api.github.com/users/PolyMeilex/received_events",
            "repos_url": "https://api.github.com/users/PolyMeilex/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/PolyMeilex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PolyMeilex/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/PolyMeilex",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33624",
    "id": 2480572702,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33624",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 8431892071,
            "name": "ci:backport release-0.11",
            "node_id": "LA_kwDOAPphoM8AAAAB9pR2Zw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:backport%20release-0.11"
        }
    ],
    "locked": false,
    "merge_commit_sha": "83156974497df69a5f449c15d1fb472afdf7b6ff",
    "merged_at": "2025-04-26T14:08:03Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6T2oke",
    "number": 33624,
    "patch_url": "https://github.com/neovim/neovim/pull/33624.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33624/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/0fdd9c26018208d2feaf4eb0818dd571beaa243b",
    "title": "fix(lsp): detect if Client:request resolved synchronously",
    "updated_at": "2025-04-26T15:28:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33624",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20758186?v=4",
        "events_url": "https://api.github.com/users/PolyMeilex/events{/privacy}",
        "followers_url": "https://api.github.com/users/PolyMeilex/followers",
        "following_url": "https://api.github.com/users/PolyMeilex/following{/other_user}",
        "gists_url": "https://api.github.com/users/PolyMeilex/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/PolyMeilex",
        "id": 20758186,
        "login": "PolyMeilex",
        "node_id": "MDQ6VXNlcjIwNzU4MTg2",
        "organizations_url": "https://api.github.com/users/PolyMeilex/orgs",
        "received_events_url": "https://api.github.com/users/PolyMeilex/received_events",
        "repos_url": "https://api.github.com/users/PolyMeilex/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/PolyMeilex/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PolyMeilex/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/PolyMeilex",
        "user_view_type": "public"
    }
}