{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32142/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32142/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32142"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32142"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32142/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/f1f663f1d267ac03ac214b919e630df4822f28a9"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6275,
            "forks_count": 6275,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1988,
            "open_issues_count": 1988,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-25T23:24:21Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 339513,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92240,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-26T02:19:53Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92240,
            "watchers_count": 92240,
            "web_commit_signoff_required": false
        },
        "sha": "175c09bd660d0cea62288e74cea925a9b15bee55",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: When isIncomplete is true, subsequent input will continue to send requests. The prefix is always taken from the column where the request was triggered, which causes matches to be empty. and there is missing handle item.textEdit.\r\n\r\nSolution: if word not match using filterText as word and accept textEdit, When Context.cusror have value use it for prefix sub\r\n\r\nNow \r\n![test](https://github.com/user-attachments/assets/4fffea55-b027-4db2-aefd-2bcce264baf3)\r\n\r\n\r\nAfter\r\n![test1](https://github.com/user-attachments/assets/56e60c04-8ce5-4f72-9d61-ffd4e0109298)\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1946483508"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946483508"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\r\n```\r\n\r\nThis looks unrelated?",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-07T12:53:57Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1946483508",
            "id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50BPs0",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2601659253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946483508/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-07T12:54:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946483508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1946498842"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946498842"
                }
            },
            "author_association": "MEMBER",
            "body": "if keep there , continuing input will clean pum `wp.` then input w. pum is cleaned",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-07T13:06:39Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1946498842",
            "id": 1946498842,
            "in_reply_to_id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50BTca",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2601684841,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946498842/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-07T13:06:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946498842",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1946510945"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946510945"
                }
            },
            "author_association": "MEMBER",
            "body": "But isn't removing it breaking the functionality to fetch more results if the initial results were incomplete?\r\nIs there some state hiccup that causes isIncomplete to have the wrong value?",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-07T13:16:44Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1946510945",
            "id": 1946510945,
            "in_reply_to_id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50BWZh",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2601705343,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946510945/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-07T13:16:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946510945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1946525331"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946525331"
                }
            },
            "author_association": "MEMBER",
            "body": "clangd returns isInComplete true but subsequent input clangd returns empty results. a bit strange 🤔",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-07T13:28:21Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1946525331",
            "id": 1946525331,
            "in_reply_to_id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50BZ6T",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2601729476,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946525331/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-07T13:28:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946525331",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1946549183"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946549183"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe worth reporting upstream with clangd? In the meantime we could instead guard the `vim.fn.complete(start_col, matches)` and call it only if there are matches given that we rely on the pum mechanism to do the filtering we don't need a response to \"wipe out\" any shown candidates.",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-07T13:46:26Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1946549183",
            "id": 1946549183,
            "in_reply_to_id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50Bfu_",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2601770116,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946549183/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-07T13:46:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1946549183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1947554153"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1947554153"
                }
            },
            "author_association": "MEMBER",
            "body": "Wait, let me research it.",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-08T09:53:31Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1947554153",
            "id": 1947554153,
            "in_reply_to_id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50FVFp",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2603406061,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1947554153/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-08T09:53:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1947554153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1957073547"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957073547"
                }
            },
            "author_association": "MEMBER",
            "body": "Should Context.isIncomplete be bound to the client? If one client returns isIncomplete: false, should we still send requests from all clients?",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-15T09:10:11Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1957073547",
            "id": 1957073547,
            "in_reply_to_id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50ppKL",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2619361881,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957073547/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-15T12:11:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957073547",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1957115885"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957115885"
                }
            },
            "author_association": "MEMBER",
            "body": "> Should Context.isIncomplete be bound to the client? If one client returns isIncomplete: false, should we still send requests from all clients?\r\n\r\nA bit tricky,  ideally we'd fetch & replace the results per client, but that would mean in addition to https://github.com/neovim/neovim/issues/32428 and an extended `complete_add` we'd also need to be able to either remove results (e.g. remove previous results for client-2, add new results for client-2, but keep results from client-1) or a way to replace namespaces results?\r\n\r\nIndependent of that, do I understand it right that this PR is otherwise good to go?",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-15T13:14:31Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1957115885",
            "id": 1957115885,
            "in_reply_to_id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50pzft",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2619407895,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957115885/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-15T13:14:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957115885",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1957117207"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957117207"
                }
            },
            "author_association": "MEMBER",
            "body": "> (e.g. remove previous results for client-2, add new results for client-2, but keep results from client-1)\r\n\r\nCan do in C side I prefer to do a soft delete here, that is, set an unavailable flag in the compl_T structure. Otherwise, there will be some memory allocation efficiency issues.\r\n\r\n> Independent of that, do I understand it right that this PR is otherwise good to go?\r\n\r\nI changed isInComplete to a table storing clientid. Do I need to revert to the original state? So far no tests have been broken. But maybe that means no catch.\r\n",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-15T13:23:31Z",
            "diff_hunk": "@@ -441,7 +445,7 @@ local function trigger(bufnr, clients)\n   reset_timer()\n   Context:cancel_pending()\n \n-  if tonumber(vim.fn.pumvisible()) == 1 and not Context.isIncomplete then\n+  if tonumber(vim.fn.pumvisible()) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1957117207",
            "id": 1957117207,
            "in_reply_to_id": 1946483508,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50pz0X",
            "original_commit_id": "7f85eb169c102a54b59718b813527ef472c315a5",
            "original_line": 448,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2619409295,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957117207/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-15T13:23:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1957117207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966521049"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966521049"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n  end)\r\n  \r\n  it('accept nonword label', function()\r\n    local completion_list = {\r\n      isIncomplete = true,\r\n      items = {\r\n        {\r\n          label = '/**',\r\n          insertText = '/** @example */',\r\n          insertTextFormat = 2,\r\n          kind = 1,\r\n        },\r\n      },\r\n    }\r\n    exec_lua(function()\r\n      vim.o.completeopt = 'menu,menuone,noinsert'\r\n    end)\r\n    create_server('dummy', completion_list)\r\n\r\n    feed('i/**<C-x><C-o>')\r\n    retry(nil, nil, function()\r\n      eq(\r\n        1,\r\n        exec_lua(function()\r\n          return vim.fn.pumvisible()\r\n        end)\r\n      )\r\n    end)\r\n\r\n    feed('<C-y>')\r\n    eq(\r\n      { '/** @example */', { 1, 13 } },\r\n      exec_lua(function()\r\n        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\r\n      end)\r\n    )\r\n  end)\r\n```\r\n\r\n```\r\n./test/functional/plugin/lsp/completion_spec.lua:1376: Expected objects to be the same.\r\nPassed in:\r\n(table: 0x7fc856c4ee18) {\r\n *[1] = '/**/** @example */'\r\n  [2] = {\r\n    [1] = 1\r\n    [2] = 18 } }\r\nExpected:\r\n(table: 0x7fc856c46090) {\r\n *[1] = '/** @example */'\r\n  [2] = {\r\n    [1] = 1\r\n    [2] = 13 } }\r\n```",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-22T14:03:55Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    -- accept textEdit\n+    feed('<C-y>')\n+    eq(\n+      { 'wp->handle', { 1, 10 } },\n+      exec_lua(function()\n+        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\n+      end)\n+    )\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966521049",
            "id": 1966521049,
            "line": 1432,
            "node_id": "PRRC_kwDOAPphoM51NrrZ",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1432,
            "original_position": 145,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 196,
            "pull_request_review_id": 2634810333,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966521049/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-22T14:06:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966521049",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966629187"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966629187"
                }
            },
            "author_association": "MEMBER",
            "body": "emm This should be irrelevant to this PR. I think you need to manually set iskeyword to infer word boundaries",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-23T00:03:12Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    -- accept textEdit\n+    feed('<C-y>')\n+    eq(\n+      { 'wp->handle', { 1, 10 } },\n+      exec_lua(function()\n+        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\n+      end)\n+    )\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966629187",
            "id": 1966629187,
            "in_reply_to_id": 1966521049,
            "line": 1432,
            "node_id": "PRRC_kwDOAPphoM51OGFD",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1432,
            "original_position": 145,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 196,
            "pull_request_review_id": 2635357687,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966629187/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-23T00:03:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966629187",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966630313"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966630313"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I didn't sure if the scope of this PR covers it but wanted to avoid next human mistake so finally wrote that case. \r\n\r\nExtending `isk` has too much unwanted side effects - maybe we need some extended way to determine completion word boundaries (user defined callback?), where `isk` could be used as a fallback. ",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-23T00:14:08Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    -- accept textEdit\n+    feed('<C-y>')\n+    eq(\n+      { 'wp->handle', { 1, 10 } },\n+      exec_lua(function()\n+        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\n+      end)\n+    )\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966630313",
            "id": 1966630313,
            "in_reply_to_id": 1966521049,
            "line": 1432,
            "node_id": "PRRC_kwDOAPphoM51OGWp",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1432,
            "original_position": 145,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 196,
            "pull_request_review_id": 2635358968,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966630313/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-23T00:18:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966630313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966635942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966635942"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe some local modifications can be done?  `if somefiletype and line:sub(vim.fn.col('.') - 3, vim.fn.col('.'):match('^xxx) then save iskeyword , modified iskeyword` and restore iskeyword in CompleteDone..\r\n",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-23T00:42:32Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    -- accept textEdit\n+    feed('<C-y>')\n+    eq(\n+      { 'wp->handle', { 1, 10 } },\n+      exec_lua(function()\n+        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\n+      end)\n+    )\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966635942",
            "id": 1966635942,
            "in_reply_to_id": 1966521049,
            "line": 1432,
            "node_id": "PRRC_kwDOAPphoM51OHum",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1432,
            "original_position": 145,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 196,
            "pull_request_review_id": 2635367146,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966635942/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-23T00:42:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966635942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966647130"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966647130"
                }
            },
            "author_association": "MEMBER",
            "body": "Would `trigger_at_pos()` also work here?",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-23T01:42:18Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966647130",
            "id": 1966647130,
            "line": 1404,
            "node_id": "PRRC_kwDOAPphoM51OKda",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1404,
            "original_position": 127,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 168,
            "pull_request_review_id": 2635382400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966647130/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-23T01:42:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966647130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966651714"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966651714"
                }
            },
            "author_association": "MEMBER",
            "body": "Nope in different describe",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-23T02:24:00Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966651714",
            "id": 1966651714,
            "in_reply_to_id": 1966647130,
            "line": 1404,
            "node_id": "PRRC_kwDOAPphoM51OLlC",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1404,
            "original_position": 127,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 168,
            "pull_request_review_id": 2635388821,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966651714/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-23T02:24:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966651714",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966681900"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966681900"
                }
            },
            "author_association": "MEMBER",
            "body": "btw I think I have found a way to handle what you got..but it's C side work please wait :)",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-23T06:16:19Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    -- accept textEdit\n+    feed('<C-y>')\n+    eq(\n+      { 'wp->handle', { 1, 10 } },\n+      exec_lua(function()\n+        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\n+      end)\n+    )\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966681900",
            "id": 1966681900,
            "in_reply_to_id": 1966521049,
            "line": 1432,
            "node_id": "PRRC_kwDOAPphoM51OS8s",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1432,
            "original_position": 145,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 196,
            "pull_request_review_id": 2635430234,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966681900/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-23T06:16:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966681900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966763130"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966763130"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hm, I lost idea what could be done both in my particular case and in general - probably I need some time to sort out that topic (offtopic here).\r\n\r\nI noticed sideways that `iskeyword` buffer scope can be too wide if could use a value specific to injected language. Maybe we need something like `iskeywordexpr` (keeping compatibility with Vim, although not sure if usable in any way there) that could be context aware. \r\n\r\nThanks for precising the PR title.",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-23T12:15:44Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    -- accept textEdit\n+    feed('<C-y>')\n+    eq(\n+      { 'wp->handle', { 1, 10 } },\n+      exec_lua(function()\n+        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\n+      end)\n+    )\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966763130",
            "id": 1966763130,
            "in_reply_to_id": 1966521049,
            "line": 1432,
            "node_id": "PRRC_kwDOAPphoM51Omx6",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1432,
            "original_position": 145,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 196,
            "pull_request_review_id": 2635552910,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966763130/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-23T12:17:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966763130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1966764589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966764589"
                }
            },
            "author_association": "MEMBER",
            "body": "I have add a option named  `completetrigger` and `complete_startcol` in vim ...like `set ctg=k,/,*,.` k mean keyword  pattern other just normal character and `complete_startcol` will range ctg to find the startcol .. currently is draft..might need some baking",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-02-23T12:21:42Z",
            "diff_hunk": "@@ -1220,4 +1244,104 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('accept item.textEdit', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_arg_idx',\n+          insertText = '->w_arg_idx',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_arg_idx',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_arg_idx',\n+          textEdit = {\n+            newText = '->w_arg_idx',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list)\n+\n+    feed('iwp.<c-x><c-o>')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    -- accept textEdit\n+    feed('<C-y>')\n+    eq(\n+      { 'wp->handle', { 1, 10 } },\n+      exec_lua(function()\n+        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\n+      end)\n+    )\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1966764589",
            "id": 1966764589,
            "in_reply_to_id": 1966521049,
            "line": 1432,
            "node_id": "PRRC_kwDOAPphoM51OnIt",
            "original_commit_id": "87581de92757161547795497aaef55b54aba1764",
            "original_line": 1432,
            "original_position": 145,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 196,
            "pull_request_review_id": 2635554637,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966764589/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-23T12:22:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1966764589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1984972999"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1984972999"
                }
            },
            "author_association": "MEMBER",
            "body": "Here we should use col after the trigger symbol to prevent the trigger from being included in compl_leader. For example, `wp.` points to col 7 (1-based) and we should use 8 as the last start_col, and compl_col in C is 7 (0based). This way, `.` will not be included in compl_leader. Otherwise ins_compl_build_pum will fail because cp_str does not contain the prefix.",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-03-07T12:25:15Z",
            "diff_hunk": "@@ -512,7 +522,10 @@ local function trigger(bufnr, clients)\n         vim.list_extend(matches, client_matches)\n       end\n     end\n-    local start_col = (server_start_boundary or word_boundary) + 1\n+    if #matches == 0 then\n+      return\n+    end\n+    local start_col = math.max(server_start_boundary or 0, word_boundary) + 1",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1984972999",
            "id": 1984972999,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM52UEjH",
            "original_commit_id": "f6a22ff28ae1c9ab93b16c25b17ffa9d17ada90e",
            "original_line": 528,
            "original_position": 43,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2667104382,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1984972999/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-07T12:26:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1984972999",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r1984974103"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1984974103"
                }
            },
            "author_association": "MEMBER",
            "body": "Since the current omni calls trigger internally and then calls compelete, the cursor should be kept available without being cleaned up with complete_type check which i implement in  https://github.com/neovim/neovim/pull/31455",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-03-07T12:26:07Z",
            "diff_hunk": "@@ -682,8 +710,11 @@ local function enable_completions(client_id, bufnr, opts)\n       buffer = bufnr,\n       callback = function()\n         local reason = api.nvim_get_vvar('event').reason --- @type string\n+        local type = api.nvim_get_vvar('event').complete_type --- @type string\n         if reason == 'accept' then\n           on_complete_done()\n+        elseif not Context.keep_cursor and type ~= 'omni' then",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r1984974103",
            "id": 1984974103,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM52UE0X",
            "original_commit_id": "f6a22ff28ae1c9ab93b16c25b17ffa9d17ada90e",
            "original_line": 716,
            "original_position": 92,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": null,
            "pull_request_review_id": 2667104382,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1984974103/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-07T12:28:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1984974103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32142#discussion_r2000431485"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32142"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2000431485"
                }
            },
            "author_association": "MEMBER",
            "body": "@mfussenegger  PTAL, there may be some places you need to look at like add char before item.filterText and adjust_end is for there avoid the text of tail delete by `apply_text_edits`",
            "commit_id": "f1f663f1d267ac03ac214b919e630df4822f28a9",
            "created_at": "2025-03-18T08:08:43Z",
            "diff_hunk": "@@ -1289,4 +1310,163 @@ describe('vim.lsp.completion: integration', function()\n       end)\n     )\n   end)\n+\n+  it('continues working on subsequent requests', function()\n+    local completion_list = {\n+      isIncomplete = true,\n+      items = {\n+        {\n+          detail = 'handle_T',\n+          filterText = 'handle',\n+          insertText = '->handle',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' handle',\n+          score = 0.43193808197975,\n+          sortText = '4122d903handle',\n+          textEdit = {\n+            newText = '->handle',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+        {\n+          detail = 'int',\n+          filterText = 'w_alt_fnum',\n+          insertText = '->w_alt_fnum',\n+          insertTextFormat = 1,\n+          kind = 5,\n+          label = ' w_alt_fnum',\n+          score = 0.43193808197975,\n+          sortText = '4122d903w_alt_fnum',\n+          textEdit = {\n+            newText = '->w_alt_fnum',\n+            range = {\n+              ['end'] = {\n+                character = 3,\n+                line = 0,\n+              },\n+              start = {\n+                character = 2,\n+                line = 0,\n+              },\n+            },\n+          },\n+        },\n+      },\n+    }\n+    exec_lua(function()\n+      vim.o.completeopt = 'menu,menuone,noinsert'\n+    end)\n+    create_server('dummy', completion_list, {\n+      forIncomplete = {\n+        isIncomplete = false,\n+        items = {\n+          {\n+            detail = 'int',\n+            filterText = 'w_arg_idx',\n+            insertText = '->w_arg_idx',\n+            insertTextFormat = 1,\n+            kind = 5,\n+            label = ' w_arg_idx',\n+            score = 0.43193808197975,\n+            sortText = '4122d903w_arg_idx',\n+            textEdit = {\n+              newText = '->w_arg_idx',\n+              range = {\n+                ['end'] = {\n+                  character = 3,\n+                  line = 0,\n+                },\n+                start = {\n+                  character = 2,\n+                  line = 0,\n+                },\n+              },\n+            },\n+          },\n+        },\n+      },\n+    })\n+\n+    feed('iwp.<c-x><c-o>')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    feed('w')\n+    retry(nil, nil, function()\n+      eq(\n+        1,\n+        exec_lua(function()\n+          return vim.fn.pumvisible()\n+        end)\n+      )\n+    end)\n+\n+    -- accept textEdit\n+    feed('<C-y>')\n+    eq(\n+      { 'wp->w_arg_idx', { 1, 13 } },\n+      exec_lua(function()\n+        return { vim.api.nvim_get_current_line(), vim.api.nvim_win_get_cursor(0) }\n+      end)\n+    )\n+  end)\n+\n+  it('accept text.Edit when end_col equals the column at the end of the line.', function()",
            "html_url": "https://github.com/neovim/neovim/pull/32142#discussion_r2000431485",
            "id": 2000431485,
            "line": 1434,
            "node_id": "PRRC_kwDOAPphoM53PCl9",
            "original_commit_id": "dd2ad9bb800f0d5a25006cd48fe5682b58157307",
            "original_line": 1434,
            "original_position": 176,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/completion_spec.lua",
            "position": 198,
            "pull_request_review_id": 2693391558,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2000431485/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-03-18T08:08:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2000431485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "When looked if this PR can be related to #30905 I see (as a side effect) that multiline snippets from textEdit are not expanded here. Tried on\r\n<details>\r\n\r\n<summary>init.lua</summary>\r\n\r\n```lua\r\nlocal function create_server(opts)\r\n  opts = opts or {}\r\n  local server = {}\r\n  server.messages = {}\r\n\r\n  function server.cmd(dispatchers)\r\n    local closing = false\r\n    local handlers = opts.handlers or {}\r\n    local srv = {}\r\n\r\n    function srv.request(method, params, callback)\r\n      table.insert(server.messages, {\r\n        method = method,\r\n        params = params,\r\n      })\r\n      local handler = handlers[method]\r\n      if handler then\r\n        handler(method, params, callback)\r\n      elseif method == 'initialize' then\r\n        callback(nil, {\r\n          capabilities = opts.capabilities or {},\r\n        })\r\n      elseif method == 'shutdown' then\r\n        callback(nil, nil)\r\n      end\r\n      local request_id = #server.messages\r\n      return true, request_id\r\n    end\r\n\r\n    function srv.notify(method, params)\r\n      table.insert(server.messages, {\r\n        method = method,\r\n        params = params,\r\n      })\r\n      if method == 'exit' then\r\n        dispatchers.on_exit(0, 15)\r\n      end\r\n    end\r\n\r\n    function srv.is_closing()\r\n      return closing\r\n    end\r\n\r\n    function srv.terminate()\r\n      closing = true\r\n    end\r\n\r\n    return srv\r\n  end\r\n\r\n  return server\r\nend\r\n\r\nlocal fun = table.concat({\r\n  '${1|public,private,protected|} static function ${2:name}($3): ${4:void}',\r\n  '{$0',\r\n  '}',\r\n}, '\\n')\r\n\r\nlocal textEdit = {\r\n  range = {\r\n    start = {line = 0, character = 0},\r\n    ['end'] = {line = 0, character = 2},\r\n  },\r\n  newText = fun,\r\n}\r\n\r\nlocal completion_result = {\r\n  isIncomplete = false,\r\n  items = {\r\n    {\r\n      label = '/**',\r\n      insertText = '/** ${1:hello} */',\r\n      insertTextFormat = 2,\r\n      kind = 15,\r\n      detail = 'Snippet with non-word label',\r\n    },\r\n    {\r\n      label = 'f',\r\n      insertText = fun,\r\n      insertTextFormat = 2,\r\n      kind = 15,\r\n      detail = 'Multiline snippet',\r\n    },\r\n    {\r\n      label = 'fu',\r\n      kind = vim.lsp.protocol.CompletionItemKind.Snippet,\r\n      insertTextFormat = vim.lsp.protocol.InsertTextFormat.Snippet,\r\n      detail = 'Multiline with textEdit',\r\n      insertText = insertText,\r\n      textEdit = textEdit,\r\n    }\r\n  },\r\n}\r\n\r\nlocal server = create_server({\r\n  capabilities = {\r\n    completionProvider = {},\r\n  },\r\n  handlers = {\r\n    ['textDocument/completion'] = function (_, _, callback)\r\n      callback(nil, completion_result)\r\n    end,\r\n  },\r\n})\r\n\r\n-- vim.o.completeopt = 'menuone,noinsert'\r\nvim.o.completeopt = 'menuone,noselect'\r\nvim.fn.complete = vim.schedule_wrap(vim.fn.complete)\r\n\r\nvim.api.nvim_create_autocmd('UIEnter', {\r\n  callback = function ()\r\n    vim.lsp.start({\r\n      name = 'dummy',\r\n      cmd = server.cmd,\r\n      on_attach = function (client, bufnr0)\r\n        vim.lsp.completion.enable(true, client.id, bufnr0, {})\r\n      end,\r\n    })\r\n  end\r\n})\r\n```\r\n\r\n</details>\r\n\r\n\r\nv0.11.0-dev-1702+g44740e561f (master):\r\n![image](https://github.com/user-attachments/assets/b37f3f4a-7b19-4687-a649-531cc09c32c6)\r\n\r\nv0.11.0-dev-1608+g1540d90db1 (this PR):\r\n![image](https://github.com/user-attachments/assets/2d867c54-5856-4671-b4dd-702406106388)\r\n",
            "created_at": "2025-02-06T00:21:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2638328431",
            "id": 2638328431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6dQbJv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2638328431/reactions"
            },
            "updated_at": "2025-02-06T00:21:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2638328431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "i haven't look at  #30905  but i will check it later. now the fu can expand correctly",
            "created_at": "2025-02-06T05:45:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2638889819",
            "id": 2638889819,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6dSkNb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2638889819/reactions"
            },
            "updated_at": "2025-02-06T06:01:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2638889819",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> now the fu can expand correctly\r\n\r\nWorks for me too, thanks\r\n\r\n",
            "created_at": "2025-02-06T20:06:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2640886901",
            "id": 2640886901,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6daLx1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2640886901/reactions"
            },
            "updated_at": "2025-02-06T20:06:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2640886901",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "For some reason I cannot get completion result on `vim.api.` with LuaLs whilst I have no problem on master with it. If you cannot reproduce it, I can try to provide some example. ",
            "created_at": "2025-02-16T23:41:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2661680266",
            "id": 2661680266,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6epgSK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661680266/reactions"
            },
            "updated_at": "2025-02-16T23:41:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2661680266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can't reproduce do you have mutliple clients on lua file ?\r\n<img width=\"588\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6bc51f53-2466-4916-8f13-3dccef602d15\" />\r\n",
            "created_at": "2025-02-17T05:46:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2662115887",
            "id": 2662115887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6erKov",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662115887/reactions"
            },
            "updated_at": "2025-02-17T05:46:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662115887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, there is none-ls providing completion too, but even after stopping it I still cannot get that list. \r\n\r\nI may have no time to prepare repro now, but see that the luals completion works if Nvim starts without none-ls. ",
            "created_at": "2025-02-17T11:49:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2662886434",
            "id": 2662886434,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6euGwi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662886434/reactions"
            },
            "updated_at": "2025-02-17T11:49:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662886434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Okay, I reverted the change of isInComplete. Maybe I can reprocess it after extending complete_add.",
            "created_at": "2025-02-17T12:19:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2662955508",
            "id": 2662955508,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6euXn0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662955508/reactions"
            },
            "updated_at": "2025-02-17T12:19:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2662955508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Okay, I reverted the change of isInComplete. Maybe I can reprocess it after extending complete_add.\r\n\r\nNow I see results again with two completion providers :+1: ",
            "created_at": "2025-02-19T17:58:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2669376881",
            "id": 2669376881,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fG3Vx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2669376881/reactions"
            },
            "updated_at": "2025-02-19T17:58:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2669376881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looks like this causes issues with lemminx. In a java pom.xml typing `<d` shows `dependency` as candidate and ends up completing `<<dependency></dependency>`. Without this change it correctly completes it as `<dependency></dependency>`\r\n\r\nItem returned from the server is:\r\n\r\n```\r\n data = {\r\n   offset = 3539,\r\n   participantId = \"org.eclipse.lemminx.services.extensions.completion.ElementEndTagCompletionResolver\",\r\n   updateEndTagName = false,\r\n   uri = \"file:///path/to/pom.xml\"\r\n },\r\n documentation = {\r\n   kind = \"markdown\",\r\n   value = \"3.0.0+\\n\\nThe `<dependency>` element contains information about a dependency of the project.\\n\\nSource: [maven-4.0.0.xsd](...)\"\r\n },\r\n filterText = \"<dependency\",\r\n insertTextFormat = 2,\r\n kind = 10,\r\n label = \"dependency\",\r\n sortText = \"dependency\",\r\n textEdit = {\r\n   newText = \"<dependency>$1</dependency>$0\",\r\n   range = {\r\n     [\"end\"] = {\r\n         character = 6,\r\n         line = 113\r\n     },\r\n     start = {\r\n         character = 4,\r\n         line = 113\r\n     }\r\n   }\r\n },\r\n textEditText = \"<dependency>$1</dependency>$0\"\r\n```\r\n\r\n",
            "created_at": "2025-02-19T18:20:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2669430233",
            "id": 2669430233,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fHEXZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2669430233/reactions"
            },
            "updated_at": "2025-02-19T18:20:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2669430233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Confirmed for lemminx (while `<` does not belong to `iskeyword`). \r\n\r\nThe repro from [the comment above](https://github.com/neovim/neovim/pull/32142#issuecomment-2638328431) also shows that (on insertText).\r\n\r\n![image](https://github.com/user-attachments/assets/d850e5d8-fc75-4788-a919-45848132d1e9)\r\n",
            "created_at": "2025-02-19T21:49:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2669838636",
            "id": 2669838636,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fIoEs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2669838636/reactions"
            },
            "updated_at": "2025-02-20T00:09:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2669838636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "how about now ? problem is that when isInComplete is true, the result of the subsequent input request needs to be checked against the input. Currently, the col of line sub is truncated from the initial completion position. This results in the inclusion of extra characters. we can use Context.cursor now which have value from multiple insexpand PR. so just check it for subsequent request no need change startcol",
            "created_at": "2025-02-20T10:12:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2671044917",
            "id": 2671044917,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fNOk1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2671044917/reactions"
            },
            "updated_at": "2025-02-20T10:15:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2671044917",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Now it's ok at least on my repro and lemminx. Both have single completion provider. \r\n\r\nFor two providers I still get incorrectly recognized start of word but if I understood, at the moment (after [0efb2c4](https://github.com/neovim/neovim/commit/0efb2c4a81f32b2563dcf159e5b2ce08d1fbb611)) that case fell out of scope of this PR, is that right?",
            "created_at": "2025-02-20T15:55:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2671919311",
            "id": 2671919311,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fQkDP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2671919311/reactions"
            },
            "updated_at": "2025-02-20T15:55:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2671919311",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "...and again completion on luals fails with none-ls. Maybe we need to add a test that covers such case here. ",
            "created_at": "2025-02-21T00:25:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2673024317",
            "id": 2673024317,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fUx09",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2673024317/reactions"
            },
            "updated_at": "2025-02-21T00:25:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2673024317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "emmm I don't modified `isInComplete` just change the prefix value when context.cursor have value ..how can i reproduce it ? i don' use none-ls. at least it works fine when i use `phoenix` a server which provider path/word a fake lsp and luals . how none-ls handle completion request?",
            "created_at": "2025-02-21T08:09:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2673859429",
            "id": 2673859429,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fX9tl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2673859429/reactions"
            },
            "updated_at": "2025-02-21T08:30:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2673859429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'll then try to create repro with two completion in free time, maybe with looking how none-ls (especially its adapter I wrote and use) does it. You can look [there](https://github.com/nvimtools/none-ls.nvim/blob/main/lua/null-ls/builtins/completion/nvim_snippets.lua) before - maybe you'll find something specific sooner than me. ",
            "created_at": "2025-02-21T09:55:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2674091331",
            "id": 2674091331,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fY2VD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674091331/reactions"
            },
            "updated_at": "2025-02-21T09:55:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674091331",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Aha i know what happen here. seems like Context.cursor does not reset when complete done.. @mfussenegger ~~when we trigger completedone there still need reset Context.cursor and timer right that mean calling `on_insert_leave` in CompleteDone~~ not correct ..  found a new way to solve. update later",
            "created_at": "2025-02-21T12:03:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2674373768",
            "id": 2674373768,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fZ7SI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674373768/reactions"
            },
            "updated_at": "2025-02-21T12:51:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674373768",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks. Now lemminx, ~my recent repro~ and completion list works. Only double providers require fix, still not sure if in this PR (and I sitll have a plan to prepare some minimal example for that, without none-ls). ",
            "created_at": "2025-02-21T13:52:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2674609689",
            "id": 2674609689,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fa04Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674609689/reactions"
            },
            "updated_at": "2025-02-21T17:19:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2674609689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry for confusing, I don't know how my repro could work before. The case (with `/**` prefix)\r\n![image](https://github.com/user-attachments/assets/c95de04b-c42d-4044-b9b8-65ab812241ef)\r\nis reproducible also with something simpler:\r\n\r\n<details>\r\n\r\n<summary>init.lua</summary>\r\n\r\n```lua\r\nlocal function create_server(opts)\r\n  opts = opts or {}\r\n  local server = {}\r\n  server.messages = {}\r\n\r\n  function server.cmd(dispatchers)\r\n    local closing = false\r\n    local handlers = opts.handlers or {}\r\n    local srv = {}\r\n\r\n    function srv.request(method, params, callback)\r\n      table.insert(server.messages, {\r\n        method = method,\r\n        params = params,\r\n      })\r\n      local handler = handlers[method]\r\n      if handler then\r\n        handler(method, params, callback)\r\n      elseif method == 'initialize' then\r\n        callback(nil, {\r\n          capabilities = opts.capabilities or {},\r\n        })\r\n      elseif method == 'shutdown' then\r\n        callback(nil, nil)\r\n      end\r\n      local request_id = #server.messages\r\n      return true, request_id\r\n    end\r\n\r\n    function srv.notify(method, params)\r\n      table.insert(server.messages, {\r\n        method = method,\r\n        params = params,\r\n      })\r\n      if method == 'exit' then\r\n        dispatchers.on_exit(0, 15)\r\n      end\r\n    end\r\n\r\n    function srv.is_closing()\r\n      return closing\r\n    end\r\n\r\n    function srv.terminate()\r\n      closing = true\r\n    end\r\n\r\n    return srv\r\n  end\r\n\r\n  return server\r\nend\r\n\r\nlocal completion_result = {\r\n  isIncomplete = false,\r\n  items = {\r\n    {\r\n      label = '/**',\r\n      insertText = '/** ${1:hello} */',\r\n      insertTextFormat = 2,\r\n      kind = 15,\r\n      detail = 'Snippet with non-word label',\r\n    },\r\n    {\r\n      label = 'return',\r\n      insertText = 'return',\r\n      insertTextFormat = 2,\r\n      kind = 15,\r\n      detail = 'return ...',\r\n    },\r\n  },\r\n}\r\n\r\nlocal server = create_server({\r\n  capabilities = {\r\n    completionProvider = {},\r\n  },\r\n  handlers = {\r\n    ['textDocument/completion'] = function (_, _, callback)\r\n      callback(nil, completion_result)\r\n    end,\r\n  },\r\n})\r\n\r\nvim.o.completeopt = 'menuone,noselect'\r\nvim.fn.complete = vim.schedule_wrap(vim.fn.complete)\r\n\r\nvim.api.nvim_create_autocmd('UIEnter', {\r\n  callback = function ()\r\n    vim.lsp.start({\r\n      name = 'dummy',\r\n      cmd = server.cmd,\r\n      on_attach = function (client, bufnr)\r\n        vim.lsp.completion.enable(true, client.id, bufnr, {})\r\n      end,\r\n    })\r\n  end\r\n})\r\n```\r\n\r\n</details>\r\n",
            "created_at": "2025-02-21T17:05:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2675096091",
            "id": 2675096091,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fcrob",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2675096091/reactions"
            },
            "updated_at": "2025-02-21T19:47:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2675096091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "yep because i reverted a change yesterday. should be works fine now. ",
            "created_at": "2025-02-22T10:13:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2676132721",
            "id": 2676132721,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fgotx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2676132721/reactions"
            },
            "updated_at": "2025-02-22T12:00:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2676132721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Do we have `vim.lsp.completion.trigger()` tests that check candiates (`insertText`) with whitespace (and multilines)? E.g. `foo bar`, and `foo bar\\nbaz buz\\n`.",
            "created_at": "2025-02-23T01:39:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2676494296",
            "id": 2676494296,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6fiA_Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2676494296/reactions"
            },
            "updated_at": "2025-02-23T01:43:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2676494296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I get the following error when expanding any luals snippet:\r\n```\r\nError executing vim.schedule lua callback: ...om-src-dev/share/nvim/runtime/lua/vim/lsp/completion.lua:586: attempt to index field 'cursor' (a nil value)\r\nstack traceback:\r\n        ...om-src-dev/share/nvim/runtime/lua/vim/lsp/completion.lua:586: in function 'clear_word'\r\n        ...om-src-dev/share/nvim/runtime/lua/vim/lsp/completion.lua:618: in function 'handler'\r\n        ...s/from-src-dev/share/nvim/runtime/lua/vim/lsp/client.lua:679: in function ''\r\n        vim/_editor.lua: in function <vim/_editor.lua:0>\r\n```\r\n\r\n<details>\r\n\r\n<summary>init.lua</summary>\r\n\r\n````lua\r\nvim.api.nvim_create_autocmd('UIEnter', {\r\n  callback = function ()\r\n    vim.lsp.start({\r\n      name = 'luals',\r\n      cmd = {'lua-language-server'},\r\n      root_dir = vim.uv.cwd(),\r\n      single_file_support = true,\r\n      settings = {\r\n        Lua = {\r\n          runtime = {\r\n            path = {\r\n              '?.lua',\r\n              '?/init.lua',\r\n            },\r\n            version = 'LuaJIT',\r\n            pathStrict = true,\r\n          },\r\n          workspace = {\r\n            ignoreDir = {'lua'},\r\n            checkThirdParty = false,\r\n            library = {\r\n              vim.fs.joinpath(vim.env.VIMRUNTIME, 'lua'),\r\n              vim.fs.joinpath('${3rd}/luv/library', 'lua'),\r\n            },\r\n          },\r\n          diagnostics = {\r\n            globals = {'vim'},\r\n          },\r\n        },\r\n      },\r\n    })\r\n  end\r\n})\r\n\r\nvim.api.nvim_create_autocmd('LspAttach', {\r\n  callback = function (args)\r\n    vim.lsp.completion.enable(true, args.data.client_id, args.buf, {autotrigger = true})\r\n  end\r\n})\r\n````\r\n\r\n<details>\r\n",
            "created_at": "2025-03-04T23:15:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2699214395",
            "id": 2699214395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6g4r47",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2699214395/reactions"
            },
            "updated_at": "2025-03-04T23:42:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2699214395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "reproduced..please wait for a while..",
            "created_at": "2025-03-06T11:18:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2703554599",
            "id": 2703554599,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6hJPgn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2703554599/reactions"
            },
            "updated_at": "2025-03-06T11:18:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2703554599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hm, did you include fix in the recent big commit that merges master into this PR? Currently I cannot reproduce that bug. ",
            "created_at": "2025-03-06T13:37:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2703878392",
            "id": 2703878392,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6hKej4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2703878392/reactions"
            },
            "updated_at": "2025-03-06T13:37:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2703878392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes it solves the problem temporarily. But I have an autocomplete script that does it at every character. If Context.cursor is not cleaned it won't work.\r\n\r\n```lua\r\n    api.nvim_create_autocmd(InsertCharPre, {\r\n      buffer = bufnr,\r\n      group = g,\r\n      callback = function()\r\n        if tonumber(pumvisible()) == 1 then\r\n          return\r\n        end\r\n        local triggerchars = vim.tbl_get(\r\n          client,\r\n          'server_capabilities',\r\n          'completionProvider',\r\n          'triggerCharacters'\r\n        ) or {}\r\n        if vim.v.char:match('[%w_]') and not vim.list_contains(triggerchars, vim.v.char) then\r\n          vim.schedule(function()\r\n            completion.trigger()\r\n          end)\r\n        end\r\n      end,\r\n      desc = 'completion on character which not exist in lsp client triggerCharacters',\r\n    })\r\n```",
            "created_at": "2025-03-07T10:21:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2706071787",
            "id": 2706071787,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6hS2Dr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706071787/reactions"
            },
            "updated_at": "2025-03-07T10:21:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2706071787",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do we have `vim.lsp.completion.trigger()` tests that check candiates (`insertText`) with whitespace (and multilines)? E.g. `foo bar`, and `foo bar\\nbaz buz\\n`.\r\n\r\n^ still wondering about this. Though somewhat off-topic for this PR",
            "created_at": "2025-03-11T12:12:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2713951963",
            "id": 2713951963,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6hw57b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713951963/reactions"
            },
            "updated_at": "2025-03-11T12:12:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713951963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "currently doesn't have I will add it later.",
            "created_at": "2025-03-11T12:15:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2713959090",
            "id": 2713959090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6hw7qy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713959090/reactions"
            },
            "updated_at": "2025-03-11T12:15:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713959090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@przepompownia  so far everything seems to work. even with my scripts. could you give it a test ?",
            "created_at": "2025-03-11T12:16:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2713962775",
            "id": 2713962775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6hw8kX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713962775/reactions"
            },
            "updated_at": "2025-03-11T12:16:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2713962775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't experience the recently reported bug. On the other side, `require('vim.trees<cursor>')` gives the correct list, but the replacement after both selection and confirmation is not correct - not sure if it's it in the scope of this PR.\r\n\r\n![image](https://github.com/user-attachments/assets/89e7fbe5-d1aa-4591-80db-74f6aa16789a)\r\n(`completeopt=popup,menuone,noinsert,noselect,fuzzy`)\r\n\r\n",
            "created_at": "2025-03-11T16:49:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2715049288",
            "id": 2715049288,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6h1F1I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2715049288/reactions"
            },
            "updated_at": "2025-03-11T16:49:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2715049288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "\r\nhttps://github.com/user-attachments/assets/df0ff553-a05a-469e-9366-d49c36753780\r\n\r\n",
            "created_at": "2025-03-12T16:42:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2718492017",
            "id": 2718492017,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6iCOVx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2718492017/reactions"
            },
            "updated_at": "2025-03-13T10:21:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2718492017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "My quick manual test on Lua module completion shows fixed selection and text replacement after confirm - thank you!",
            "created_at": "2025-03-13T10:21:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2720728605",
            "id": 2720728605,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6iKwYd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2720728605/reactions"
            },
            "updated_at": "2025-03-13T10:21:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2720728605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for helping me test",
            "created_at": "2025-03-13T10:29:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-2720750381",
            "id": 2720750381,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6iK1st",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2720750381/reactions"
            },
            "updated_at": "2025-03-13T10:29:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2720750381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@glepnir could you merge the current master here please? ",
            "created_at": "2025-08-23T15:02:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/32142#issuecomment-3217089175",
            "id": 3217089175,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
            "node_id": "IC_kwDOAPphoM6_wOKX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3217089175/reactions"
            },
            "updated_at": "2025-08-23T15:02:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3217089175",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32142/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32142/commits",
    "created_at": "2025-01-21T11:28:39Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32142.diff",
    "draft": false,
    "head": {
        "label": "glepnir:completion_dot",
        "ref": "completion_dot",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/glepnir/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/glepnir/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/glepnir/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/glepnir/neovim/branches{/branch}",
            "clone_url": "https://github.com/glepnir/neovim.git",
            "collaborators_url": "https://api.github.com/repos/glepnir/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/glepnir/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/glepnir/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/glepnir/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/glepnir/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/glepnir/neovim/contributors",
            "created_at": "2022-07-17T05:15:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/glepnir/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/glepnir/neovim/downloads",
            "events_url": "https://api.github.com/repos/glepnir/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/glepnir/neovim/forks",
            "full_name": "glepnir/neovim",
            "git_commits_url": "https://api.github.com/repos/glepnir/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/glepnir/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/glepnir/neovim/git/tags{/sha}",
            "git_url": "git://github.com/glepnir/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/glepnir/neovim/hooks",
            "html_url": "https://github.com/glepnir/neovim",
            "id": 514752985,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/glepnir/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/glepnir/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/glepnir/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/glepnir/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/glepnir/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/glepnir/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/glepnir/neovim/merges",
            "milestones_url": "https://api.github.com/repos/glepnir/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHq6B2Q",
            "notifications_url": "https://api.github.com/repos/glepnir/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/glepnir/neovim/pulls{/number}",
            "pushed_at": "2025-08-25T07:01:29Z",
            "releases_url": "https://api.github.com/repos/glepnir/neovim/releases{/id}",
            "size": 331773,
            "ssh_url": "git@github.com:glepnir/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/glepnir/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/glepnir/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/glepnir/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/glepnir/neovim/subscription",
            "svn_url": "https://github.com/glepnir/neovim",
            "tags_url": "https://api.github.com/repos/glepnir/neovim/tags",
            "teams_url": "https://api.github.com/repos/glepnir/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/glepnir/neovim/git/trees{/sha}",
            "updated_at": "2025-08-21T05:17:11Z",
            "url": "https://api.github.com/repos/glepnir/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "f1f663f1d267ac03ac214b919e630df4822f28a9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
            "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
            "followers_url": "https://api.github.com/users/glepnir/followers",
            "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
            "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/glepnir",
            "id": 41671631,
            "login": "glepnir",
            "node_id": "MDQ6VXNlcjQxNjcxNjMx",
            "organizations_url": "https://api.github.com/users/glepnir/orgs",
            "received_events_url": "https://api.github.com/users/glepnir/received_events",
            "repos_url": "https://api.github.com/users/glepnir/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/glepnir",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32142",
    "id": 2289712559,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32142",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 109,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 73,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-08-25T05:59:14Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "PR_kwDOAPphoM6Iej2v",
    "number": 32142,
    "patch_url": "https://github.com/neovim/neovim/pull/32142.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32142/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/f1f663f1d267ac03ac214b919e630df4822f28a9",
    "title": "fix(lsp): completion continues working on subsequent requests",
    "updated_at": "2025-08-23T15:02:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32142",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
        "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
        "followers_url": "https://api.github.com/users/glepnir/followers",
        "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
        "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glepnir",
        "id": 41671631,
        "login": "glepnir",
        "node_id": "MDQ6VXNlcjQxNjcxNjMx",
        "organizations_url": "https://api.github.com/users/glepnir/orgs",
        "received_events_url": "https://api.github.com/users/glepnir/received_events",
        "repos_url": "https://api.github.com/users/glepnir/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glepnir",
        "user_view_type": "public"
    }
}