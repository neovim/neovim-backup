{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35253/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35253/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35253"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35253"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35253/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35253"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/33f46e64dcf27dbfab3985a56f350665671c3015"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6332,
            "forks_count": 6332,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1997,
            "open_issues_count": 1997,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-22T23:21:28Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 343564,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92928,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-22T23:52:03Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92928,
            "watchers_count": 92928,
            "web_commit_signoff_required": false
        },
        "sha": "ff777f9a858a5f360e220596c63bc69e19a1d5c1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This commit adds a new member, `features`, to the `ClientConfig` object. Features can be enabled/disabled from this object, allowing a more data-oriented style of configuring servers (per-server or globally).\r\n\r\nExample:\r\n\r\n```lua\r\nvim.lsp.config('lua_ls', {\r\n  features = {\r\n    semantic_tokens = false,\r\n    completion = true,\r\n  }\r\n})\r\n```\r\n\r\nCloses #34659\r\n\r\n<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35253#discussion_r2264146746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264146746"
                }
            },
            "author_association": "MEMBER",
            "body": "I need some guidance here. I really don't think this should be the default, but I have it like that now for backwards compatibility. I've noticed that currently, we always call `_folding_range._setup()`, which sends requests for folding ranges and updates them, even if the user does not use the LSP `foldexpr`. I think instead, this option should be disabled by default, and when enabled it should set the foldexpr as well. But since `foldexpr` is window-local, I don't know if this is the best approach.",
            "commit_id": "33f46e64dcf27dbfab3985a56f350665671c3015",
            "created_at": "2025-08-09T00:07:28Z",
            "diff_hunk": "@@ -15,6 +15,37 @@ local all_clients = {}\n --- @alias vim.lsp.client.on_exit_cb fun(code: integer, signal: integer, client_id: integer)\n --- @alias vim.lsp.client.before_init_cb fun(params: lsp.InitializeParams, config: vim.lsp.ClientConfig)\n \n+--- A table representing which features to enable for a client. A `true` value will enable the\n+--- feature with the default configuration. A configuration table can be passed to enable the\n+--- feature with customizations. A `false` value means the feature will be disabled.\n+--- @class vim.lsp.Client.Features\n+---\n+--- Whether to enable |lsp-autocompletion|. Disabled by default. Opts are passed\n+--- to |vim.lsp.completion.enable()|.\n+--- @field completion? boolean|vim.lsp.completion.BufferOpts\n+---\n+--- Whether to enable |lsp-semantic_tokens|. Enabled by default. Opts are passed\n+--- to |vim.lsp.semantic_tokens.start()|.\n+--- @field semantic_tokens? boolean|vim.lsp.semantic_tokens.start.Opts\n+---\n+--- Whether to enable |lsp-inlay_hint|. Disabled by default.\n+--- @field inlay_hints? boolean\n+---\n+--- Whether to enable |lsp-document_color|. Disabled by default. Opts are passed\n+--- to |vim.lsp.document_color.enable()|.\n+--- @field document_color? boolean|vim.lsp.document_color.enable.Opts\n+---\n+--- Whether to enable |lsp-diagnostic|. Enabled by default.\n+--- @field diagnostics? boolean\n+---\n+--- Whether to enable LSP folding ranges. Enabled by default.",
            "html_url": "https://github.com/neovim/neovim/pull/35253#discussion_r2264146746",
            "id": 2264146746,
            "line": 52,
            "node_id": "PRRC_kwDOAPphoM6G9CM6",
            "original_commit_id": "e34cb927036efeb3234e0d2c79a115caed327dd1",
            "original_line": 52,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 38,
            "pull_request_review_id": 3102335345,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264146746/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-09T00:07:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264146746",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35253#discussion_r2264164893"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264164893"
                }
            },
            "author_association": "MEMBER",
            "body": "This `schedule_wrap` was added to test for the case of users/plugins (like nvim-lspconfig) wrapping their `on_attach` and then removing the semantic token provider of their server. Imo, this test is not really necessary anymore since it looks like `nvim-lspconfig` no longer does this, and this PR will now introduce a better way to disable semantic tokens anyway.\r\n\r\nShould this be considered breaking? Should it still be handled?",
            "commit_id": "33f46e64dcf27dbfab3985a56f350665671c3015",
            "created_at": "2025-08-09T00:41:26Z",
            "diff_hunk": "@@ -502,9 +502,9 @@ describe('semantic token highlighting', function()\n             name = 'dummy',\n             cmd = _G.server.cmd,\n             --- @param client vim.lsp.Client\n-            on_attach = vim.schedule_wrap(function(client, _bufnr)\n+            on_attach = function(client, _bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/35253#discussion_r2264164893",
            "id": 2264164893,
            "line": 505,
            "node_id": "PRRC_kwDOAPphoM6G9God",
            "original_commit_id": "dd1f6c239dfc0aa98137fee1830d277c3cdc9b77",
            "original_line": 505,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/semantic_tokens_spec.lua",
            "position": 5,
            "pull_request_review_id": 3102354341,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264164893/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-09T00:41:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2264164893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35253#discussion_r2350778180"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2350778180"
                }
            },
            "author_association": "MEMBER",
            "body": "@ofseed sorry for the ping, i am struggling with this :sweat_smile: with this code uncommented, many fold tests fail, even though it seems to be mostly similar to before? Without it only one fold test fails, interestingly. am I misunderstanding this?",
            "commit_id": "33f46e64dcf27dbfab3985a56f350665671c3015",
            "created_at": "2025-09-16T04:54:21Z",
            "diff_hunk": "@@ -364,6 +410,104 @@ local function get_name(id, config)\n   return tostring(id)\n end\n \n+--- Enable certain features for the client; see |vim.lsp.Client.Features|.\n+---\n+--- @param bufnr integer\n+--- @param client vim.lsp.Client\n+local function enable_features(bufnr, client)\n+  local features = client.config.features or {}\n+\n+  -- TODO: Some of these features can only be enabled for ALL clients in the buffer. They should be more granular\n+  -- (per-client basis).\n+\n+  -- NOTE: We need to type cast a lot here due to an annoying lua_ls bug.\n+  if features.completion and client:supports_method(ms.textDocument_completion) then\n+    ---@type vim.lsp.completion.BufferOpts?\n+    local opts = type(features.completion) == 'table' and features.completion --[[@as vim.lsp.completion.BufferOpts]]\n+      or nil\n+    lsp.completion.enable(true, client.id, bufnr, opts)\n+  end\n+  if features.inlay_hints and client:supports_method(ms.textDocument_inlayHint) then\n+    lsp.inlay_hint.enable(true, { bufnr = bufnr })\n+  end\n+  if features.linked_editing and client:supports_method(ms.textDocument_linkedEditingRange) then\n+    lsp.linked_editing_range.enable(true, { client_id = client.id })\n+  end\n+  -- TODO: Support formating on save and type\n+\n+  -- The following features are enabled by default.\n+  if\n+    features.semantic_tokens ~= false\n+    and vim.tbl_get(client.server_capabilities, 'semanticTokensProvider', 'full')\n+  then\n+    ---@type vim.lsp.semantic_tokens.start.Opts\n+    local opts = type(features.semantic_tokens) == 'table' and features.semantic_tokens --[[@as vim.lsp.semantic_tokens.start.Opts]]\n+      or {}\n+    lsp.semantic_tokens._start(bufnr, client.id, opts.debounce)\n+  end\n+  if features.document_color ~= false and client:supports_method(ms.textDocument_documentColor) then\n+    ---@type vim.lsp.document_color.enable.Opts?\n+    local opts = type(features.document_color) == 'table' and features.document_color --[[@as vim.lsp.document_color.enable.Opts]]\n+      or nil\n+    lsp.document_color.enable(true, bufnr, opts)\n+  end\n+  if features.diagnostics ~= false and client:supports_method(ms.textDocument_diagnostic) then\n+    lsp.diagnostic._enable(bufnr)\n+  end\n+  -- if features.folding ~= false and client:supports_method(ms.textDocument_foldingRange) then\n+  --   vim.o.foldexpr = 'v:lua.vim.lsp.foldexpr()'\n+  --   vim.o.foldmethod = 'expr'\n+  --   local Capability = lsp._capability.all['folding_range']\n+  --   local capability = Capability.active[bufnr] or Capability:new(bufnr)\n+  --   capability:on_attach(client.id)\n+  -- end",
            "html_url": "https://github.com/neovim/neovim/pull/35253#discussion_r2350778180",
            "id": 2350778180,
            "line": 463,
            "node_id": "PRRC_kwDOAPphoM6MHgdE",
            "original_commit_id": "33f46e64dcf27dbfab3985a56f350665671c3015",
            "original_line": 463,
            "original_position": 114,
            "original_start_line": 457,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 114,
            "pull_request_review_id": 3227267547,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2350778180/reactions"
            },
            "side": "RIGHT",
            "start_line": 457,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-16T04:54:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2350778180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This might be more related to `vim.lsp.<feat>.enable()` implementations, but while the current approach works and prevents neovim from sending requests for disabled features, the capability is still advertised to the server, and `workspace/<feat>/refresh` server-to-client requests are still sent.\r\nWould it be possible to handle this via dynamic registration instead?",
            "created_at": "2025-08-09T11:46:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3170648911",
            "id": 3170648911,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM68_ENP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3170648911/reactions"
            },
            "updated_at": "2025-08-09T11:46:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3170648911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Interesting, good point. I don't understand dynamic registration fully to be honest, but my understanding was that it is more like something the server uses to tell the client it doesn't support foo, rather than the other way around. Maybe we can remove the corresponding client capabilities where needed, in the `enable_features()` function?",
            "created_at": "2025-08-09T19:10:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3172044975",
            "id": 3172044975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM69EZCv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3172044975/reactions"
            },
            "updated_at": "2025-08-09T19:10:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3172044975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> server uses to tell the client it doesn't support foo, rather than the other way around.\r\n     \r\nOh, I see. I was not very familiar with this and thought it was a mechanism to toggle capabilities after the \"initialization\" handshake.\r\n\r\n> Maybe we can remove the corresponding client capabilities where needed, in the `enable_features()` function?\r\n\r\nYes, we can, but it seems like it would not be possible to enable them again without restarting the server. I wonder how this should coexist with the `vim.lsp.<feat>.enable()` API.",
            "created_at": "2025-08-09T20:28:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3172079136",
            "id": 3172079136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM69EhYg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3172079136/reactions"
            },
            "updated_at": "2025-08-09T20:28:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3172079136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another alternative could be checking if the feature is enabled in the refresh handler itself, and doing nothing if the feature is disabled for that client. Would require a bit more code but at least we only support two refresh requests right now",
            "created_at": "2025-08-10T23:34:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3172967924",
            "id": 3172967924,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM69H6X0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3172967924/reactions"
            },
            "updated_at": "2025-08-10T23:34:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3172967924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Another alternative could be checking if the feature is enabled in the refresh handler itself, and doing nothing if the feature is disabled for that client.\r\n\r\nThis would not stop the server from sending notifications. For example, I dislike semantic tokens and want to disable them completely for all servers, I want to avoid wasting resources on the server sending /refresh requests that the client would simply reject. This requires disabling the corresponding client capability, which is currently not possible due to the inability to provide `nil` in the config table because of how table merging works. `vim.NIL` does not work as well, since the field remains present.\r\n\r\nA possible solution is to allow excluding capabilities in the config table by special handling of `vim.NIL`, although this is not very intuitive for the user, while provides full control. But I think better option is make the features table toggle capabilities, but then there would be no way to enable them at \"runtime\", and the `.enable()` functions would effectively do nothing in this case, remaining for \"dynamic\" toggling.",
            "created_at": "2025-08-11T12:36:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3174585766",
            "id": 3174585766,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM69OFWm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3174585766/reactions"
            },
            "updated_at": "2025-08-11T12:38:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3174585766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Interesting. I think the simplest solution would be for users to modify the make_client_capabilities() function in their config, to disable eg workspace refresh requests. I think this shouldn't be handled by the features table because it will get complicated quickly, and most likely sending unused refresh requests isn't very expensive anyway",
            "created_at": "2025-08-11T14:27:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3175103236",
            "id": 3175103236,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM69QDsE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3175103236/reactions"
            },
            "updated_at": "2025-08-11T14:27:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3175103236",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Interesting. I think the simplest solution would be for users to modify the make_client_capabilities() function in their config, to disable eg workspace refresh requests.\r\n\r\nThat's an option, but it requires this not-so-pretty code to fully disable a feature, and the same pattern has to be repeated for other features - disabling both textDocument and workspace capabilities and calling `.enable(false)`.\r\n```lua\r\nlocal capabilities = vim.lsp.protocol.make_client_capabilities()\r\nvim.lsp.protocol.make_client_capabilities = function()\r\n\tcapabilities.textDocument.semanticTokens = nil\r\n\tcapabilities.workspace.semanticTokens = nil\r\n\tvim.lsp.semantic_tokens.enable(false)\r\n\treturn capabilities\r\nend\r\n```\r\n\r\nMaybe I'm missing the intended purpose of the \"Features\" table, but why couldn't it serve as an equivalent to this code, rather than to a `.enable(false)` call in an autocommand?",
            "created_at": "2025-08-12T19:00:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3180609012",
            "id": 3180609012,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM69lD30",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3180609012/reactions"
            },
            "updated_at": "2025-08-12T19:00:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3180609012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This PR overlaps slightly with another one I'm currently working on, see https://github.com/neovim/neovim/pull/35018. While I'm working diligently on implementing it to unify the implementation/configuration of these high-level features, I've encountered some issues that cause tests to break and potentially make the code less intuitive. I'll do my best to implement it over the next few days so that we don't block each other.",
            "created_at": "2025-08-15T07:45:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3190864990",
            "id": 3190864990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM6-MLxe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3190864990/reactions"
            },
            "updated_at": "2025-08-15T07:45:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3190864990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@skewb1k I think I've addressed your client capabilities comments (see the `disable_capabilities` function), let me know if there are any issues with this approach :+1: ",
            "created_at": "2025-09-16T04:54:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/35253#issuecomment-3295198375",
            "id": 3295198375,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
            "node_id": "IC_kwDOAPphoM7EaLyn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3295198375/reactions"
            },
            "updated_at": "2025-09-16T04:54:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3295198375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35253/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35253/commits",
    "created_at": "2025-08-09T00:04:11Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35253.diff",
    "draft": false,
    "head": {
        "label": "ribru17:lsp_features",
        "ref": "lsp_features",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-09-16T04:52:05Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 334823,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-09-16T03:28:58Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "33f46e64dcf27dbfab3985a56f350665671c3015",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35253",
    "id": 2731974234,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35253",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "92c570d3df80c9300e9ce6ee3a0c65da3d386e6e",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6i1p5a",
    "number": 35253,
    "patch_url": "https://github.com/neovim/neovim/pull/35253.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35253/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/33f46e64dcf27dbfab3985a56f350665671c3015",
    "title": "feat(lsp): enable high-level features per-config",
    "updated_at": "2025-09-16T04:54:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35253",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}