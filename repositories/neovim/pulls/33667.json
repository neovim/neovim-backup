{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33667/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33667/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33667"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33667"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33667/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/f653ddd02e1566f686d06cf143c2beede971ce54"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6050,
            "forks_count": 6050,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1919,
            "open_issues_count": 1919,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-04-29T02:05:46Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 319440,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 89035,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-04-29T02:12:25Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 89035,
            "watchers_count": 89035,
            "web_commit_signoff_required": false
        },
        "sha": "43f3c4a48f6cc3a4c4173591a59b8e3fcdb96759",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "vim-patch:9.1.1341: cannot define completion triggers\r\n\r\nProblem:  Cannot define completion triggers and act upon it\r\nSolution: add the new option 'isexpand' and add the complete_match()\r\n          function to return the completion matches according to the\r\n          'isexpand' setting (glepnir)\r\n\r\nCurrently, completion trigger position is determined solely by the\r\n'iskeyword' pattern (\\k\\+$), which causes issues when users need\r\ndifferent completion behaviors - such as triggering after '/' for\r\ncomments or '.' for methods. Modifying 'iskeyword' to include these\r\ncharacters has undesirable side effects on other Vim functionality that\r\nrelies on keyword definitions.\r\n\r\nIntroduce a new buffer-local option 'isexpand' that allows specifying\r\ndifferent completion triggers and add the complete_match() function that\r\nfinds the appropriate start column for completion based on these\r\ntriggers, scanning backwards from cursor position.\r\n\r\nThis separation of concerns allows customized completion behavior\r\nwithout affecting iskeyword-dependent features. The option's\r\nbuffer-local nature enables per-filetype completion triggers.\r\n\r\ncloses: https://github.com/vim/vim/pull/16716\r\n\r\nhttps://github.com/vim/vim/commit/bcd5995b40a1c26e735bc326feb2e3ac4b05426b\r\n\r\nCo-authored-by: glepnir <glephunter@gmail.com>\r\n\r\npatch 9.1.1344: double free in f_complete_match() (after v9.1.1341)\r\n\r\nProblem:  double free in f_complete_match() (after v9.1.1341)\r\nSolution: remove additional free of trig pointer, correctly free\r\n          regmatch.regprog and before_cursor in the error case\r\n\r\ncloses: https://github.com/vim/vim/pull/17203\r\n\r\nhttps://github.com/vim/vim/commit/3accf046ec3d0ee4a762d15452ae46596e1a0540\r\n\r\nCo-authored-by: Christian Brabandt <cb@256bit.org>",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2062605720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062605720"
                }
            },
            "author_association": "MEMBER",
            "body": "this doc should also show an actual example",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-27T11:48:08Z",
            "diff_hunk": "@@ -3537,6 +3537,19 @@ A jump table for the options with a short description can be found at |Q_op|.\n \tand there is a letter before it, the completed part is made uppercase.\n \tWith 'noinfercase' the match is used as-is.\n \n+\t\t\t\t\t\t*'isexpand'* *'ise'*\n+'isexpand' 'ise'\tstring\t(default \"\")\n+\t\t\tglobal or local to buffer |global-local|\n+\tDefines characters and patterns for completion in insert mode. Used by\n+\tthe |complete_match()| function to determine the starting position for\n+\tcompletion. This is a comma-separated list of triggers. Each trigger\n+\tcan be:\n+\t- A single character like \".\" or \"/\"\n+\t- A sequence of characters like \"->\", \"/*\", or \"/**\"",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2062605720",
            "id": 2062605720,
            "line": 3548,
            "node_id": "PRRC_kwDOAPphoM568N2Y",
            "original_commit_id": "31e31273bc03e39dd6c2173b4c51d46f1978c627",
            "original_line": 3548,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": 12,
            "pull_request_review_id": 2797615066,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062605720/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-27T11:48:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062605720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2062606165"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062606165"
                }
            },
            "author_association": "MEMBER",
            "body": "matches found *where* ? in the buffer text at cursor position? doc should mention that.",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-27T11:50:11Z",
            "diff_hunk": "@@ -1477,6 +1477,59 @@ M.funcs = {\n     returns = 'table',\n     signature = 'complete_info([{what}])',\n   },\n+  complete_match = {\n+    args = { 0, 2 },\n+    base = 0,\n+    desc = [=[\n+      Returns a List of matches found according to the 'isexpand'",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2062606165",
            "id": 2062606165,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM568N9V",
            "original_commit_id": "31e31273bc03e39dd6c2173b4c51d46f1978c627",
            "original_line": 1484,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/eval.lua",
            "position": null,
            "pull_request_review_id": 2797615548,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062606165/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-27T11:50:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062606165",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2062608848"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062608848"
                }
            },
            "author_association": "MEMBER",
            "body": "```\r\n      When no arguments are provided, uses the current cursor\r\n      position.\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-27T12:00:30Z",
            "diff_hunk": "@@ -1477,6 +1477,59 @@ M.funcs = {\n     returns = 'table',\n     signature = 'complete_info([{what}])',\n   },\n+  complete_match = {\n+    args = { 0, 2 },\n+    base = 0,\n+    desc = [=[\n+      Returns a List of matches found according to the 'isexpand'",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2062608848",
            "id": 2062608848,
            "in_reply_to_id": 2062606165,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM568OnQ",
            "original_commit_id": "31e31273bc03e39dd6c2173b4c51d46f1978c627",
            "original_line": 1484,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/eval.lua",
            "position": null,
            "pull_request_review_id": 2797618251,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062608848/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-27T12:00:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2062608848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063279247"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063279247"
                }
            },
            "author_association": "MEMBER",
            "body": "Function body is not indented",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:28:36Z",
            "diff_hunk": "@@ -1477,6 +1477,59 @@ M.funcs = {\n     returns = 'table',\n     signature = 'complete_info([{what}])',\n   },\n+  complete_match = {\n+    args = { 0, 2 },\n+    base = 0,\n+    desc = [=[\n+      Returns a List of matches found according to the 'isexpand'\n+      option. Each match is represented as a List containing\n+      [startcol, trigger_text] where:\n+      - startcol: column position where completion should start,\n+        or -1 if no trigger position is found. For multi-character\n+        triggers, returns the column of the first character.\n+      - trigger_text: the matching trigger string from 'isexpand',\n+        or empty string if no match was found or when using the\n+        default 'iskeyword' pattern.\n+\n+      When 'isexpand' is empty, uses the 'iskeyword' pattern\n+      \"\\k\\+$\" to find the start of the current keyword.\n+\n+      When no arguments are provided, uses the current cursor\n+      position.\n+\n+      Examples: >\n+        set isexpand=.,->,/,/*,abc\n+        func CustomComplete()\n+        let res = complete_match()\n+        if res->len() == 0 | return | endif\n+        let [col, trigger] = res[0]\n+        let items = []\n+        if trigger == '/*'\n+          let items = ['/** */']\n+        elseif trigger == '/'\n+          let items = ['/*! */', '// TODO:', '// fixme:']\n+        elseif trigger == '.'\n+          let items = ['length()']\n+        elseif trigger =~ '^\\->'\n+          let items = ['map()', 'reduce()']\n+        elseif trigger =~ '^\\abc'\n+          let items = ['def', 'ghk']\n+        endif\n+        if items->len() > 0\n+          let startcol = trigger =~ '^/' ? col : col + len(trigger)\n+          call complete(startcol, items)\n+        endif\n+        endfunc",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063279247",
            "id": 2063279247,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-ySP",
            "original_commit_id": "fcabbc2283c5d217d879d4ac0cc6c8501f15fc64",
            "original_line": 1522,
            "original_position": 46,
            "original_start_line": 1502,
            "path": "src/nvim/eval.lua",
            "position": null,
            "pull_request_review_id": 2798671935,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063279247/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T09:28:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063279247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063282164"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063282164"
                }
            },
            "author_association": "MEMBER",
            "body": "Remove this. This is Vim9 script notation.",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:29:45Z",
            "diff_hunk": "@@ -1477,6 +1477,59 @@ M.funcs = {\n     returns = 'table',\n     signature = 'complete_info([{what}])',\n   },\n+  complete_match = {\n+    args = { 0, 2 },\n+    base = 0,\n+    desc = [=[\n+      Returns a List of matches found according to the 'isexpand'\n+      option. Each match is represented as a List containing\n+      [startcol, trigger_text] where:\n+      - startcol: column position where completion should start,\n+        or -1 if no trigger position is found. For multi-character\n+        triggers, returns the column of the first character.\n+      - trigger_text: the matching trigger string from 'isexpand',\n+        or empty string if no match was found or when using the\n+        default 'iskeyword' pattern.\n+\n+      When 'isexpand' is empty, uses the 'iskeyword' pattern\n+      \"\\k\\+$\" to find the start of the current keyword.\n+\n+      When no arguments are provided, uses the current cursor\n+      position.\n+\n+      Examples: >\n+        set isexpand=.,->,/,/*,abc\n+        func CustomComplete()\n+        let res = complete_match()\n+        if res->len() == 0 | return | endif\n+        let [col, trigger] = res[0]\n+        let items = []\n+        if trigger == '/*'\n+          let items = ['/** */']\n+        elseif trigger == '/'\n+          let items = ['/*! */', '// TODO:', '// fixme:']\n+        elseif trigger == '.'\n+          let items = ['length()']\n+        elseif trigger =~ '^\\->'\n+          let items = ['map()', 'reduce()']\n+        elseif trigger =~ '^\\abc'\n+          let items = ['def', 'ghk']\n+        endif\n+        if items->len() > 0\n+          let startcol = trigger =~ '^/' ? col : col + len(trigger)\n+          call complete(startcol, items)\n+        endif\n+        endfunc\n+        inoremap <Tab> <Cmd>call CustomComplete()<CR>\n+<\n+\n+      Return type: list<list<any>>",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063282164",
            "id": 2063282164,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-y_0",
            "original_commit_id": "fcabbc2283c5d217d879d4ac0cc6c8501f15fc64",
            "original_line": 1526,
            "original_position": 50,
            "original_start_line": 1525,
            "path": "src/nvim/eval.lua",
            "position": null,
            "pull_request_review_id": 2798676434,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063282164/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T09:29:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063282164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063283575"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063283575"
                }
            },
            "author_association": "MEMBER",
            "body": "You don't need to add `?` here.",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:30:16Z",
            "diff_hunk": "@@ -1477,6 +1477,59 @@ M.funcs = {\n     returns = 'table',\n     signature = 'complete_info([{what}])',\n   },\n+  complete_match = {\n+    args = { 0, 2 },\n+    base = 0,\n+    desc = [=[\n+      Returns a List of matches found according to the 'isexpand'\n+      option. Each match is represented as a List containing\n+      [startcol, trigger_text] where:\n+      - startcol: column position where completion should start,\n+        or -1 if no trigger position is found. For multi-character\n+        triggers, returns the column of the first character.\n+      - trigger_text: the matching trigger string from 'isexpand',\n+        or empty string if no match was found or when using the\n+        default 'iskeyword' pattern.\n+\n+      When 'isexpand' is empty, uses the 'iskeyword' pattern\n+      \"\\k\\+$\" to find the start of the current keyword.\n+\n+      When no arguments are provided, uses the current cursor\n+      position.\n+\n+      Examples: >\n+        set isexpand=.,->,/,/*,abc\n+        func CustomComplete()\n+        let res = complete_match()\n+        if res->len() == 0 | return | endif\n+        let [col, trigger] = res[0]\n+        let items = []\n+        if trigger == '/*'\n+          let items = ['/** */']\n+        elseif trigger == '/'\n+          let items = ['/*! */', '// TODO:', '// fixme:']\n+        elseif trigger == '.'\n+          let items = ['length()']\n+        elseif trigger =~ '^\\->'\n+          let items = ['map()', 'reduce()']\n+        elseif trigger =~ '^\\abc'\n+          let items = ['def', 'ghk']\n+        endif\n+        if items->len() > 0\n+          let startcol = trigger =~ '^/' ? col : col + len(trigger)\n+          call complete(startcol, items)\n+        endif\n+        endfunc\n+        inoremap <Tab> <Cmd>call CustomComplete()<CR>\n+<\n+\n+      Return type: list<list<any>>\n+    ]=],\n+    name = 'complete_match',\n+    params = { { 'lnum', 'integer?' }, { 'col', 'integer?' } },",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063283575",
            "id": 2063283575,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-zV3",
            "original_commit_id": "fcabbc2283c5d217d879d4ac0cc6c8501f15fc64",
            "original_line": 1529,
            "original_position": 53,
            "original_start_line": null,
            "path": "src/nvim/eval.lua",
            "position": null,
            "pull_request_review_id": 2798678371,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063283575/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T09:30:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063283575",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063287523"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063287523"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nstatic void add_match_to_list(typval_T *rettv, char *str, int pos)\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:31:59Z",
            "diff_hunk": "@@ -3081,6 +3081,103 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static int add_match_to_list(typval_T *rettv, char *str, int pos)",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063287523",
            "id": 2063287523,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-0Tj",
            "original_commit_id": "16fec9cdde70dd91f9227ab70c7216bbdf961707",
            "original_line": 3086,
            "original_position": 6,
            "original_start_line": 3085,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798684951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063287523/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T09:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063287523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063287853"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063287853"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:32:09Z",
            "diff_hunk": "@@ -3081,6 +3081,103 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static int add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  if (match == NULL) {\n+    return FAIL;\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063287853",
            "id": 2063287853,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-0Yt",
            "original_commit_id": "16fec9cdde70dd91f9227ab70c7216bbdf961707",
            "original_line": 3092,
            "original_position": 12,
            "original_start_line": 3089,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798684951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063287853/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T09:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063287853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063288077"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063288077"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:32:16Z",
            "diff_hunk": "@@ -3081,6 +3081,103 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static int add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  if (match == NULL) {\n+    return FAIL;\n+  }\n+\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+  return OK;",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063288077",
            "id": 2063288077,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-0cN",
            "original_commit_id": "16fec9cdde70dd91f9227ab70c7216bbdf961707",
            "original_line": 3096,
            "original_position": 16,
            "original_start_line": null,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798684951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063288077/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T09:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063288077",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063289459"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063289459"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        add_match_to_list(rettv, trig, bytepos);\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:32:51Z",
            "diff_hunk": "@@ -3081,6 +3081,103 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static int add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  if (match == NULL) {\n+    return FAIL;\n+  }\n+\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+  return OK;\n+}\n+\n+/// \"complete_match()\" function\n+void f_complete_match(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n+{\n+  tv_list_alloc_ret(rettv,   kListLenUnknown);\n+\n+  char *ise = curbuf->b_p_ise[0] != NUL ? curbuf->b_p_ise : p_ise;\n+\n+  linenr_T lnum = 0;\n+  colnr_T col = 0;\n+  char part[MAXPATHL];\n+  if (argvars[0].v_type == VAR_UNKNOWN) {\n+    lnum = curwin->w_cursor.lnum;\n+    col = curwin->w_cursor.col;\n+  } else if (argvars[1].v_type == VAR_UNKNOWN) {\n+    emsg(_(e_invarg));\n+    return;\n+  } else {\n+    lnum = (linenr_T)tv_get_number(&argvars[0]);\n+    col = (colnr_T)tv_get_number(&argvars[1]);\n+    if (lnum < 1 || lnum > curbuf->b_ml.ml_line_count) {\n+      semsg(_(e_invalid_line_number_nr), lnum);\n+      return;\n+    }\n+    if (col < 1 || col > ml_get_buf_len(curbuf, lnum)) {\n+      semsg(_(e_invalid_column_number_nr), col + 1);\n+      return;\n+    }\n+  }\n+\n+  char *line = ml_get_buf(curbuf, lnum);\n+  if (line == NULL) {\n+    return;\n+  }\n+\n+  char *before_cursor = xstrnsave(line, (size_t)col);\n+  if (before_cursor == NULL) {\n+    return;\n+  }\n+\n+  if (ise == NULL || *ise == NUL) {\n+    regmatch_T regmatch;\n+    regmatch.regprog = vim_regcomp(\"\\\\k\\\\+$\", RE_MAGIC);\n+    if (regmatch.regprog != NULL) {\n+      if (vim_regexec_nl(&regmatch, before_cursor, (colnr_T)0)) {\n+        char *trig = xstrnsave(regmatch.startp[0], (size_t)(regmatch.endp[0] - regmatch.startp[0]));\n+        if (trig == NULL) {\n+          xfree(before_cursor);\n+          return;\n+        }\n+\n+        int bytepos = (int)(regmatch.startp[0] - before_cursor);\n+        int ret = add_match_to_list(rettv, trig, bytepos);",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063289459",
            "id": 2063289459,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-0xz",
            "original_commit_id": "16fec9cdde70dd91f9227ab70c7216bbdf961707",
            "original_line": 3150,
            "original_position": 70,
            "original_start_line": null,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798684951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063289459/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T09:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063289459",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063289775"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063289775"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:33:00Z",
            "diff_hunk": "@@ -3081,6 +3081,103 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static int add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  if (match == NULL) {\n+    return FAIL;\n+  }\n+\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+  return OK;\n+}\n+\n+/// \"complete_match()\" function\n+void f_complete_match(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n+{\n+  tv_list_alloc_ret(rettv,   kListLenUnknown);\n+\n+  char *ise = curbuf->b_p_ise[0] != NUL ? curbuf->b_p_ise : p_ise;\n+\n+  linenr_T lnum = 0;\n+  colnr_T col = 0;\n+  char part[MAXPATHL];\n+  if (argvars[0].v_type == VAR_UNKNOWN) {\n+    lnum = curwin->w_cursor.lnum;\n+    col = curwin->w_cursor.col;\n+  } else if (argvars[1].v_type == VAR_UNKNOWN) {\n+    emsg(_(e_invarg));\n+    return;\n+  } else {\n+    lnum = (linenr_T)tv_get_number(&argvars[0]);\n+    col = (colnr_T)tv_get_number(&argvars[1]);\n+    if (lnum < 1 || lnum > curbuf->b_ml.ml_line_count) {\n+      semsg(_(e_invalid_line_number_nr), lnum);\n+      return;\n+    }\n+    if (col < 1 || col > ml_get_buf_len(curbuf, lnum)) {\n+      semsg(_(e_invalid_column_number_nr), col + 1);\n+      return;\n+    }\n+  }\n+\n+  char *line = ml_get_buf(curbuf, lnum);\n+  if (line == NULL) {\n+    return;\n+  }\n+\n+  char *before_cursor = xstrnsave(line, (size_t)col);\n+  if (before_cursor == NULL) {\n+    return;\n+  }\n+\n+  if (ise == NULL || *ise == NUL) {\n+    regmatch_T regmatch;\n+    regmatch.regprog = vim_regcomp(\"\\\\k\\\\+$\", RE_MAGIC);\n+    if (regmatch.regprog != NULL) {\n+      if (vim_regexec_nl(&regmatch, before_cursor, (colnr_T)0)) {\n+        char *trig = xstrnsave(regmatch.startp[0], (size_t)(regmatch.endp[0] - regmatch.startp[0]));\n+        if (trig == NULL) {\n+          xfree(before_cursor);\n+          return;\n+        }\n+\n+        int bytepos = (int)(regmatch.startp[0] - before_cursor);\n+        int ret = add_match_to_list(rettv, trig, bytepos);\n+        xfree(trig);\n+        if (ret == FAIL) {\n+          xfree(before_cursor);\n+          vim_regfree(regmatch.regprog);\n+          return;\n+        }",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063289775",
            "id": 2063289775,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-02v",
            "original_commit_id": "16fec9cdde70dd91f9227ab70c7216bbdf961707",
            "original_line": 3156,
            "original_position": 76,
            "original_start_line": 3152,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798684951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063289775/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T09:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063289775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063290232"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063290232"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n          add_match_to_list(rettv, part, bytepos);\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:33:16Z",
            "diff_hunk": "@@ -3081,6 +3081,103 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static int add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  if (match == NULL) {\n+    return FAIL;\n+  }\n+\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+  return OK;\n+}\n+\n+/// \"complete_match()\" function\n+void f_complete_match(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n+{\n+  tv_list_alloc_ret(rettv,   kListLenUnknown);\n+\n+  char *ise = curbuf->b_p_ise[0] != NUL ? curbuf->b_p_ise : p_ise;\n+\n+  linenr_T lnum = 0;\n+  colnr_T col = 0;\n+  char part[MAXPATHL];\n+  if (argvars[0].v_type == VAR_UNKNOWN) {\n+    lnum = curwin->w_cursor.lnum;\n+    col = curwin->w_cursor.col;\n+  } else if (argvars[1].v_type == VAR_UNKNOWN) {\n+    emsg(_(e_invarg));\n+    return;\n+  } else {\n+    lnum = (linenr_T)tv_get_number(&argvars[0]);\n+    col = (colnr_T)tv_get_number(&argvars[1]);\n+    if (lnum < 1 || lnum > curbuf->b_ml.ml_line_count) {\n+      semsg(_(e_invalid_line_number_nr), lnum);\n+      return;\n+    }\n+    if (col < 1 || col > ml_get_buf_len(curbuf, lnum)) {\n+      semsg(_(e_invalid_column_number_nr), col + 1);\n+      return;\n+    }\n+  }\n+\n+  char *line = ml_get_buf(curbuf, lnum);\n+  if (line == NULL) {\n+    return;\n+  }\n+\n+  char *before_cursor = xstrnsave(line, (size_t)col);\n+  if (before_cursor == NULL) {\n+    return;\n+  }\n+\n+  if (ise == NULL || *ise == NUL) {\n+    regmatch_T regmatch;\n+    regmatch.regprog = vim_regcomp(\"\\\\k\\\\+$\", RE_MAGIC);\n+    if (regmatch.regprog != NULL) {\n+      if (vim_regexec_nl(&regmatch, before_cursor, (colnr_T)0)) {\n+        char *trig = xstrnsave(regmatch.startp[0], (size_t)(regmatch.endp[0] - regmatch.startp[0]));\n+        if (trig == NULL) {\n+          xfree(before_cursor);\n+          return;\n+        }\n+\n+        int bytepos = (int)(regmatch.startp[0] - before_cursor);\n+        int ret = add_match_to_list(rettv, trig, bytepos);\n+        xfree(trig);\n+        if (ret == FAIL) {\n+          xfree(before_cursor);\n+          vim_regfree(regmatch.regprog);\n+          return;\n+        }\n+      }\n+      vim_regfree(regmatch.regprog);\n+    }\n+  } else {\n+    char *p = ise;\n+    char *cur_end = before_cursor + (int)strlen(before_cursor);\n+\n+    while (*p != NUL) {\n+      size_t len = copy_option_part(&p, part, MAXPATHL, \",\");\n+      if (len > 0 && (int)len <= col) {\n+        if (strncmp(cur_end - len, part, len) == 0) {\n+          int bytepos = col - (int)len;\n+          if (add_match_to_list(rettv, part, bytepos) == FAIL) {\n+            xfree(before_cursor);\n+            return;\n+          }",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063290232",
            "id": 2063290232,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-094",
            "original_commit_id": "16fec9cdde70dd91f9227ab70c7216bbdf961707",
            "original_line": 3172,
            "original_position": 92,
            "original_start_line": 3169,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798684951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063290232/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T09:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063290232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063292224"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063292224"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:34:20Z",
            "diff_hunk": "@@ -3081,6 +3081,103 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static int add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  if (match == NULL) {\n+    return FAIL;\n+  }\n+\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+  return OK;\n+}\n+\n+/// \"complete_match()\" function\n+void f_complete_match(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n+{\n+  tv_list_alloc_ret(rettv,   kListLenUnknown);\n+\n+  char *ise = curbuf->b_p_ise[0] != NUL ? curbuf->b_p_ise : p_ise;\n+\n+  linenr_T lnum = 0;\n+  colnr_T col = 0;\n+  char part[MAXPATHL];\n+  if (argvars[0].v_type == VAR_UNKNOWN) {\n+    lnum = curwin->w_cursor.lnum;\n+    col = curwin->w_cursor.col;\n+  } else if (argvars[1].v_type == VAR_UNKNOWN) {\n+    emsg(_(e_invarg));\n+    return;\n+  } else {\n+    lnum = (linenr_T)tv_get_number(&argvars[0]);\n+    col = (colnr_T)tv_get_number(&argvars[1]);\n+    if (lnum < 1 || lnum > curbuf->b_ml.ml_line_count) {\n+      semsg(_(e_invalid_line_number_nr), lnum);\n+      return;\n+    }\n+    if (col < 1 || col > ml_get_buf_len(curbuf, lnum)) {\n+      semsg(_(e_invalid_column_number_nr), col + 1);\n+      return;\n+    }\n+  }\n+\n+  char *line = ml_get_buf(curbuf, lnum);\n+  if (line == NULL) {\n+    return;\n+  }\n+\n+  char *before_cursor = xstrnsave(line, (size_t)col);\n+  if (before_cursor == NULL) {\n+    return;\n+  }",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063292224",
            "id": 2063292224,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-1dA",
            "original_commit_id": "b715addb1cdc0ca89087484996bc1b2a0af8cf4e",
            "original_line": 3136,
            "original_position": 56,
            "original_start_line": 3134,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798692707,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063292224/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T09:34:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063292224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063299281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063299281"
                }
            },
            "author_association": "MEMBER",
            "body": "I think you should keep the blank line above this line.",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:38:27Z",
            "diff_hunk": "@@ -3081,6 +3081,86 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static void add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+}\n+\n+/// \"complete_match()\" function\n+void f_complete_match(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n+{\n+  tv_list_alloc_ret(rettv,   kListLenUnknown);\n+\n+  char *ise = curbuf->b_p_ise[0] != NUL ? curbuf->b_p_ise : p_ise;\n+\n+  linenr_T lnum = 0;\n+  colnr_T col = 0;\n+  char part[MAXPATHL];\n+  if (argvars[0].v_type == VAR_UNKNOWN) {\n+    lnum = curwin->w_cursor.lnum;\n+    col = curwin->w_cursor.col;\n+  } else if (argvars[1].v_type == VAR_UNKNOWN) {\n+    emsg(_(e_invarg));\n+    return;\n+  } else {\n+    lnum = (linenr_T)tv_get_number(&argvars[0]);\n+    col = (colnr_T)tv_get_number(&argvars[1]);\n+    if (lnum < 1 || lnum > curbuf->b_ml.ml_line_count) {\n+      semsg(_(e_invalid_line_number_nr), lnum);\n+      return;\n+    }\n+    if (col < 1 || col > ml_get_buf_len(curbuf, lnum)) {\n+      semsg(_(e_invalid_column_number_nr), col + 1);\n+      return;\n+    }\n+  }\n+\n+  char *line = ml_get_buf(curbuf, lnum);\n+  if (line == NULL) {\n+    return;\n+  }\n+\n+  char *before_cursor = xstrnsave(line, (size_t)col);\n+  if (ise == NULL || *ise == NUL) {",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063299281",
            "id": 2063299281,
            "line": 3129,
            "node_id": "PRRC_kwDOAPphoM56-3LR",
            "original_commit_id": "53439413ddd60acaa809f938c956dda599dd40f0",
            "original_line": 3129,
            "original_position": 49,
            "original_start_line": null,
            "path": "src/nvim/insexpand.c",
            "position": 49,
            "pull_request_review_id": 2798705024,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063299281/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T09:38:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063299281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063299912"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063299912"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:38:49Z",
            "diff_hunk": "@@ -3081,6 +3081,86 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063299912",
            "id": 2063299912,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56-3VI",
            "original_commit_id": "53439413ddd60acaa809f938c956dda599dd40f0",
            "original_line": 3085,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798705994,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063299912/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T09:38:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063299912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063302730"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063302730"
                }
            },
            "author_association": "MEMBER",
            "body": "okay kept",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T09:40:34Z",
            "diff_hunk": "@@ -3081,6 +3081,86 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+/// Returns FAIL if out of memory, OK otherwise.\n+static void add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+}\n+\n+/// \"complete_match()\" function\n+void f_complete_match(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n+{\n+  tv_list_alloc_ret(rettv,   kListLenUnknown);\n+\n+  char *ise = curbuf->b_p_ise[0] != NUL ? curbuf->b_p_ise : p_ise;\n+\n+  linenr_T lnum = 0;\n+  colnr_T col = 0;\n+  char part[MAXPATHL];\n+  if (argvars[0].v_type == VAR_UNKNOWN) {\n+    lnum = curwin->w_cursor.lnum;\n+    col = curwin->w_cursor.col;\n+  } else if (argvars[1].v_type == VAR_UNKNOWN) {\n+    emsg(_(e_invarg));\n+    return;\n+  } else {\n+    lnum = (linenr_T)tv_get_number(&argvars[0]);\n+    col = (colnr_T)tv_get_number(&argvars[1]);\n+    if (lnum < 1 || lnum > curbuf->b_ml.ml_line_count) {\n+      semsg(_(e_invalid_line_number_nr), lnum);\n+      return;\n+    }\n+    if (col < 1 || col > ml_get_buf_len(curbuf, lnum)) {\n+      semsg(_(e_invalid_column_number_nr), col + 1);\n+      return;\n+    }\n+  }\n+\n+  char *line = ml_get_buf(curbuf, lnum);\n+  if (line == NULL) {\n+    return;\n+  }\n+\n+  char *before_cursor = xstrnsave(line, (size_t)col);\n+  if (ise == NULL || *ise == NUL) {",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063302730",
            "id": 2063302730,
            "in_reply_to_id": 2063299281,
            "line": 3129,
            "node_id": "PRRC_kwDOAPphoM56-4BK",
            "original_commit_id": "53439413ddd60acaa809f938c956dda599dd40f0",
            "original_line": 3129,
            "original_position": 49,
            "original_start_line": null,
            "path": "src/nvim/insexpand.c",
            "position": 49,
            "pull_request_review_id": 2798710655,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063302730/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T09:40:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063302730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063387979"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063387979"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T10:35:33Z",
            "diff_hunk": "@@ -3081,6 +3081,86 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+static void add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+}\n+\n+/// \"complete_match()\" function\n+void f_complete_match(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n+{\n+  tv_list_alloc_ret(rettv,   kListLenUnknown);\n+\n+  char *ise = curbuf->b_p_ise[0] != NUL ? curbuf->b_p_ise : p_ise;\n+\n+  linenr_T lnum = 0;\n+  colnr_T col = 0;\n+  char part[MAXPATHL];\n+  if (argvars[0].v_type == VAR_UNKNOWN) {\n+    lnum = curwin->w_cursor.lnum;\n+    col = curwin->w_cursor.col;\n+  } else if (argvars[1].v_type == VAR_UNKNOWN) {\n+    emsg(_(e_invarg));\n+    return;\n+  } else {\n+    lnum = (linenr_T)tv_get_number(&argvars[0]);\n+    col = (colnr_T)tv_get_number(&argvars[1]);\n+    if (lnum < 1 || lnum > curbuf->b_ml.ml_line_count) {\n+      semsg(_(e_invalid_line_number_nr), lnum);\n+      return;\n+    }\n+    if (col < 1 || col > ml_get_buf_len(curbuf, lnum)) {\n+      semsg(_(e_invalid_column_number_nr), col + 1);\n+      return;\n+    }\n+  }\n+\n+  char *line = ml_get_buf(curbuf, lnum);\n+  if (line == NULL) {\n+    return;\n+  }\n+\n+  char *before_cursor = xstrnsave(line, (size_t)col);\n+\n+  if (ise == NULL || *ise == NUL) {\n+    regmatch_T regmatch;\n+    regmatch.regprog = vim_regcomp(\"\\\\k\\\\+$\", RE_MAGIC);\n+    if (regmatch.regprog != NULL) {\n+      if (vim_regexec_nl(&regmatch, before_cursor, (colnr_T)0)) {\n+        char *trig = xstrnsave(regmatch.startp[0], (size_t)(regmatch.endp[0] - regmatch.startp[0]));\n+        if (trig == NULL) {\n+          xfree(before_cursor);\n+          return;\n+        }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063387979",
            "id": 2063387979,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_M1L",
            "original_commit_id": "f89c61a737126298db6a37574f0ccb6a6fa3840d",
            "original_line": 3139,
            "original_position": 59,
            "original_start_line": 3135,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798849678,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063387979/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T10:35:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063387979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063397458"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063397458"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  list_T *match = tv_list_alloc(2);\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T10:41:44Z",
            "diff_hunk": "@@ -3081,6 +3081,86 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+static void add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063397458",
            "id": 2063397458,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_PJS",
            "original_commit_id": "f89c61a737126298db6a37574f0ccb6a6fa3840d",
            "original_line": 3087,
            "original_position": 7,
            "original_start_line": null,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798864623,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063397458/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T10:46:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063397458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063397684"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063397684"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  tv_list_alloc_ret(rettv, kListLenUnknown);\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T10:41:53Z",
            "diff_hunk": "@@ -3081,6 +3081,86 @@ void f_complete_check(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n   RedrawingDisabled = saved;\n }\n \n+/// Add match item to the return list.\n+static void add_match_to_list(typval_T *rettv, char *str, int pos)\n+{\n+  list_T *match = tv_list_alloc(kListLenMayKnow);\n+  tv_list_append_number(match, pos + 1);\n+  tv_list_append_string(match, str, -1);\n+  tv_list_append_list(rettv->vval.v_list, match);\n+}\n+\n+/// \"complete_match()\" function\n+void f_complete_match(typval_T *argvars, typval_T *rettv, EvalFuncData fptr)\n+{\n+  tv_list_alloc_ret(rettv,   kListLenUnknown);",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063397684",
            "id": 2063397684,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_PM0",
            "original_commit_id": "f89c61a737126298db6a37574f0ccb6a6fa3840d",
            "original_line": 3096,
            "original_position": 16,
            "original_start_line": null,
            "path": "src/nvim/insexpand.c",
            "position": null,
            "pull_request_review_id": 2798864623,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063397684/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T10:46:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063397684",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063399855"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063399855"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    case kOptCompleteopt:\r\n      return &(buf->b_p_cot);\r\n    case kOptIsexpand:\r\n      return &(buf->b_p_ise);\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T10:43:27Z",
            "diff_hunk": "@@ -4460,6 +4460,8 @@ void *get_varp_scope_from(vimoption_T *p, int opt_flags, buf_T *buf, win_T *win)\n       return &(buf->b_p_def);\n     case kOptInclude:\n       return &(buf->b_p_inc);\n+    case kOptIsexpand:\n+      return &(buf->b_p_ise);\n     case kOptCompleteopt:\n       return &(buf->b_p_cot);",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063399855",
            "id": 2063399855,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_Puv",
            "original_commit_id": "f89c61a737126298db6a37574f0ccb6a6fa3840d",
            "original_line": 4464,
            "original_position": 7,
            "original_start_line": 4463,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2798864623,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063399855/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T10:46:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063399855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063400272"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063400272"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  case kOptCompleteopt:\r\n    return *buf->b_p_cot != NUL ? &(buf->b_p_cot) : p->var;\r\n  case kOptIsexpand:\r\n    return *buf->b_p_ise != NUL ? &(buf->b_p_ise) : p->var;\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T10:43:45Z",
            "diff_hunk": "@@ -4545,6 +4547,8 @@ void *get_varp_from(vimoption_T *p, buf_T *buf, win_T *win)\n     return *buf->b_p_def != NUL ? &(buf->b_p_def) : p->var;\n   case kOptInclude:\n     return *buf->b_p_inc != NUL ? &(buf->b_p_inc) : p->var;\n+  case kOptIsexpand:\n+    return *buf->b_p_ise != NUL ? &(buf->b_p_ise) : p->var;\n   case kOptCompleteopt:\n     return *buf->b_p_cot != NUL ? &(buf->b_p_cot) : p->var;",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063400272",
            "id": 2063400272,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_P1Q",
            "original_commit_id": "f89c61a737126298db6a37574f0ccb6a6fa3840d",
            "original_line": 4551,
            "original_position": 16,
            "original_start_line": 4550,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2798864623,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063400272/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T10:46:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063400272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063401921"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063401921"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nEXTERN char *p_ise;             ///< 'isexpand'\r\nEXTERN char *p_isf;             ///< 'isfname'\r\nEXTERN char *p_isi;             ///< 'isident'\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T10:44:58Z",
            "diff_hunk": "@@ -376,6 +376,7 @@ EXTERN char *p_indk;            ///< 'indentkeys'\n EXTERN char *p_icm;             ///< 'inccommand'\n EXTERN char *p_isf;             ///< 'isfname'\n EXTERN char *p_isi;             ///< 'isident'\n+EXTERN char *p_ise;             ///< 'isexpand'",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063401921",
            "id": 2063401921,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_QPB",
            "original_commit_id": "f89c61a737126298db6a37574f0ccb6a6fa3840d",
            "original_line": 379,
            "original_position": 4,
            "original_start_line": 377,
            "path": "src/nvim/option_vars.h",
            "position": null,
            "pull_request_review_id": 2798864623,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063401921/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-04-28T10:46:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063401921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063403598"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063403598"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  char *b_p_ise;                ///< 'isexpand' local value\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T10:46:15Z",
            "diff_hunk": "@@ -558,6 +558,7 @@ struct file_buffer {\n   char *b_p_fo;                 ///< 'formatoptions'\n   char *b_p_flp;                ///< 'formatlistpat'\n   int b_p_inf;                  ///< 'infercase'\n+  char *b_p_ise;                ///< 'isexpand'",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063403598",
            "id": 2063403598,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_QpO",
            "original_commit_id": "f89c61a737126298db6a37574f0ccb6a6fa3840d",
            "original_line": 561,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/buffer_defs.h",
            "position": null,
            "pull_request_review_id": 2798864623,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063403598/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T10:46:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063403598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063489937"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063489937"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\ncall append(\"$\", \"\\t\" .. s:local_to_buffer)\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T11:44:06Z",
            "diff_hunk": "@@ -1102,6 +1102,8 @@ call <SID>AddOption(\"isfname\", gettext(\"specifies the characters in a file name\"\n call <SID>OptionG(\"isf\", &isf)\n call <SID>AddOption(\"isident\", gettext(\"specifies the characters in an identifier\"))\n call <SID>OptionG(\"isi\", &isi)\n+call <SID>AddOption(\"isexpand\", gettext(\"defines trigger strings for complete_match()\"))\n+ call append(\"$\", \"\\t\" .. s:local_to_buffer)",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063489937",
            "id": 2063489937,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM56_luR",
            "original_commit_id": "37e11acef9c41d7e09162b6899b376e340ff5ac7",
            "original_line": 1106,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/optwin.vim",
            "position": null,
            "pull_request_review_id": 2799017315,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063489937/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T11:44:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063489937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063619599"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063619599"
                }
            },
            "author_association": "MEMBER",
            "body": "This doesn't match the description in Vim usr_41.txt, or maybe you should change the description in Vim instead?",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T13:07:42Z",
            "diff_hunk": "@@ -934,6 +934,7 @@ Insert mode completion:\t\t\t\t*completion-functions*\n \tcomplete_add()\t\tadd to found matches\n \tcomplete_check()\tcheck if completion should be aborted\n \tcomplete_info()\t\tget current completion information\n+\tcomplete_match()\tget completion column and trigger text",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063619599",
            "id": 2063619599,
            "line": 937,
            "node_id": "PRRC_kwDOAPphoM57AFYP",
            "original_commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "original_line": 937,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/usr_41.txt",
            "position": 4,
            "pull_request_review_id": 2799236157,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063619599/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T13:09:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063619599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33667#discussion_r2063625980"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33667"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063625980"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      deny_duplicates = true,\r\n```",
            "commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "created_at": "2025-04-28T13:10:53Z",
            "diff_hunk": "@@ -4628,6 +4628,33 @@ local options = {\n       type = 'boolean',\n       immutable = true,\n     },\n+    {\n+      abbreviation = 'ise',\n+      cb = 'did_set_isexpand',\n+      defaults = '',\n+      deny_duplicates = false,",
            "html_url": "https://github.com/neovim/neovim/pull/33667#discussion_r2063625980",
            "id": 2063625980,
            "line": 4635,
            "node_id": "PRRC_kwDOAPphoM57AG78",
            "original_commit_id": "f653ddd02e1566f686d06cf143c2beede971ce54",
            "original_line": 4635,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": 8,
            "pull_request_review_id": 2799247272,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063625980/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-04-28T13:10:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2063625980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "- Missing original commit URL in the last commit's message\r\n- Missing changes to usr_41.txt and optwin.vim\r\n- Missing change to `buf_copy_options()`\r\n- Missing change to gen_opt_test.vim",
            "created_at": "2025-04-28T10:47:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/33667#issuecomment-2834839458",
            "id": 2834839458,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33667",
            "node_id": "IC_kwDOAPphoM6o-Dei",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2834839458/reactions"
            },
            "updated_at": "2025-04-28T10:47:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2834839458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Still missing change to `buf_copy_options()`",
            "created_at": "2025-04-28T11:52:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/33667#issuecomment-2834997003",
            "id": 2834997003,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33667",
            "node_id": "IC_kwDOAPphoM6o-p8L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2834997003/reactions"
            },
            "updated_at": "2025-04-28T11:52:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2834997003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "oops added",
            "created_at": "2025-04-28T11:55:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/33667#issuecomment-2835004161",
            "id": 2835004161,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33667",
            "node_id": "IC_kwDOAPphoM6o-rsB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2835004161/reactions"
            },
            "updated_at": "2025-04-28T11:55:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2835004161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33667/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33667/commits",
    "created_at": "2025-04-27T07:07:10Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33667.diff",
    "draft": false,
    "head": {
        "label": "glepnir:vim-9.1.1341",
        "ref": "vim-9.1.1341",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/glepnir/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/glepnir/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/glepnir/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/glepnir/neovim/branches{/branch}",
            "clone_url": "https://github.com/glepnir/neovim.git",
            "collaborators_url": "https://api.github.com/repos/glepnir/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/glepnir/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/glepnir/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/glepnir/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/glepnir/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/glepnir/neovim/contributors",
            "created_at": "2022-07-17T05:15:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/glepnir/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/glepnir/neovim/downloads",
            "events_url": "https://api.github.com/repos/glepnir/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/glepnir/neovim/forks",
            "full_name": "glepnir/neovim",
            "git_commits_url": "https://api.github.com/repos/glepnir/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/glepnir/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/glepnir/neovim/git/tags{/sha}",
            "git_url": "git://github.com/glepnir/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/glepnir/neovim/hooks",
            "html_url": "https://github.com/glepnir/neovim",
            "id": 514752985,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/glepnir/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/glepnir/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/glepnir/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/glepnir/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/glepnir/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/glepnir/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/glepnir/neovim/merges",
            "milestones_url": "https://api.github.com/repos/glepnir/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHq6B2Q",
            "notifications_url": "https://api.github.com/repos/glepnir/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/glepnir/neovim/pulls{/number}",
            "pushed_at": "2025-04-28T11:55:36Z",
            "releases_url": "https://api.github.com/repos/glepnir/neovim/releases{/id}",
            "size": 314337,
            "ssh_url": "git@github.com:glepnir/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/glepnir/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/glepnir/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/glepnir/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/glepnir/neovim/subscription",
            "svn_url": "https://github.com/glepnir/neovim",
            "tags_url": "https://api.github.com/repos/glepnir/neovim/tags",
            "teams_url": "https://api.github.com/repos/glepnir/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/glepnir/neovim/git/trees{/sha}",
            "updated_at": "2025-04-26T09:20:59Z",
            "url": "https://api.github.com/repos/glepnir/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "f653ddd02e1566f686d06cf143c2beede971ce54",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
            "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
            "followers_url": "https://api.github.com/users/glepnir/followers",
            "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
            "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/glepnir",
            "id": 41671631,
            "login": "glepnir",
            "node_id": "MDQ6VXNlcjQxNjcxNjMx",
            "organizations_url": "https://api.github.com/users/glepnir/orgs",
            "received_events_url": "https://api.github.com/users/glepnir/received_events",
            "repos_url": "https://api.github.com/users/glepnir/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/glepnir",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33667",
    "id": 2484040728,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33667",
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "See https://neovim.io/doc/user/dev_vimpatch.html",
            "id": 843184430,
            "name": "vim-patch",
            "node_id": "MDU6TGFiZWw4NDMxODQ0MzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vim-patch"
        }
    ],
    "locked": false,
    "merge_commit_sha": "9ca3b5d3b40831cb19f44ab6f66ef7d20fc0b873",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6UD3QY",
    "number": 33667,
    "patch_url": "https://github.com/neovim/neovim/pull/33667.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33667/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/f653ddd02e1566f686d06cf143c2beede971ce54",
    "title": "vim-patch: 9.1.{1341,1344}",
    "updated_at": "2025-04-28T13:10:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33667",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
        "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
        "followers_url": "https://api.github.com/users/glepnir/followers",
        "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
        "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glepnir",
        "id": 41671631,
        "login": "glepnir",
        "node_id": "MDQ6VXNlcjQxNjcxNjMx",
        "organizations_url": "https://api.github.com/users/glepnir/orgs",
        "received_events_url": "https://api.github.com/users/glepnir/received_events",
        "repos_url": "https://api.github.com/users/glepnir/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glepnir",
        "user_view_type": "public"
    }
}