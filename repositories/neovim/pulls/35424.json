{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35424/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35424/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35424"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35424"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35424/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/61817e09b8371e1bdb7daafd3b6115ecee0d02a2"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6310,
            "forks_count": 6310,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1996,
            "open_issues_count": 1996,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-09-09T01:58:55Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 341252,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92608,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-09-09T02:05:07Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92608,
            "watchers_count": 92608,
            "web_commit_signoff_required": false
        },
        "sha": "2b421d518faec9e1b0a6d1c46026d2f13f4fb73f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "## Problem:\r\nThere is no straightforward way to pretty-print objects as JSON.\r\nThe existing `vim.inspect` outputs LON.\r\n\r\n## Solution:\r\nIntroduce an `indent` option for `vim.json.encode()` which enables human-readable output with configurable indentation.\r\n\r\nAdapts PR to upstream: https://github.com/openresty/lua-cjson/pull/114.\r\n\r\nCC @echasnovski for the original proposal and draft implementation.\r\n",
    "closed_at": "2025-09-07T21:38:27Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2292963788"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292963788"
                }
            },
            "author_association": "MEMBER",
            "body": "Is a separate `enable` flag necessary for performance reasons?\r\nTo have it backwards compatible, I'd expect all default values to be empty string. This saves from a bit of an overlap in configuration.\r\nAlthough on the other hand, I'd imagine `{ pretty = { enable = true } }` is easier than `{ pretty = { indent = '  ', newline = '\\n', colon_space = ' ' } }` and will be used in 99% of pretty printing. So not sure what is best here.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T07:34:22Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2292963788",
            "id": 2292963788,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Iq9nM",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3143453853,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292963788/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-22T07:34:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292963788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2292965586"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292965586"
                }
            },
            "author_association": "MEMBER",
            "body": "This ate a single space during document generation (`\" \"`, but should be `\"  \"`). Maybe needs escaping with `` ` ``.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T07:35:20Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable\n+                    pretty-formatting.\n+                  • indent: (string) (default \" \") String used for each",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2292965586",
            "id": 2292965586,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Iq-DS",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3381,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3143456241,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292965586/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-22T07:35:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2292965586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2293165588"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293165588"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm not fully sure about this API either. Having an \"enable\" flag makes it easier to use without having to provide every option explicitly. But it's also possible to avoid \"enable\" with non-empty defaults, so that `{ pretty = {} }` or `{ pretty = true }` would work. I haven't seen this pattern used in existing Lua APIs though, maybe there are some concerns with it. I think the best we can do is stay consistent either way.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T09:09:29Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2293165588",
            "id": 2293165588,
            "in_reply_to_id": 2292963788,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Iru4U",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3143734695,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293165588/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T09:19:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293165588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2293197993"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293197993"
                }
            },
            "author_association": "MEMBER",
            "body": "Could also take some inspiration from python's `json.dump`/`dumps` where there is a single `indent`:\r\n\r\nhttps://docs.python.org/3/library/json.html#json.dump\r\n\r\n```\r\nindent ([int] | [str] | None) – If a positive integer or string, JSON array\r\nelements and object members will be pretty-printed with that indent level. A\r\npositive integer indents that many spaces per level; a string (such as \"\\t\") is\r\nused to indent each level. If zero, negative, or \"\" (the empty string), only\r\nnewlines are inserted. If None (the default), the most compact representation\r\nis used.\r\n```\r\n",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T09:24:27Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2293197993",
            "id": 2293197993,
            "in_reply_to_id": 2292963788,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Ir2yp",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3143776860,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293197993/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-22T09:24:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293197993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2293271609"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293271609"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Could also take some inspiration from python's `json.dump`/`dumps` where there is a single `indent`:\r\n\r\nI like the ability to provide an integer for the number of spaces, and I think it would be nice to have this in both upstream and Neovim.\r\n\r\nPython’s json.dump / json.dumps also has a `separators` tuple, which allows controlling the spaces after ',' and ':', but it does not let you change newline characters.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T09:56:32Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2293271609",
            "id": 2293271609,
            "in_reply_to_id": 2292963788,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IsIw5",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3143874381,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293271609/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-22T09:56:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293271609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2293391807"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293391807"
                }
            },
            "author_association": "MEMBER",
            "body": ">  but it does not let you change newline characters.\r\n\r\nIs there a legitimate use-case for wanting indentation but not newlines?",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T10:46:47Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2293391807",
            "id": 2293391807,
            "in_reply_to_id": 2292963788,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IsmG_",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3144035014,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293391807/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-22T10:46:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293391807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2293425394"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293425394"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Is there a legitimate use-case for wanting indentation but not newlines?\r\n\r\nProbably not, but there could be cases where someone wants a newline character other than `\\n`. We can't know for sure.\r\n\r\nI think we shouldn’t strip customizability just to make the configuration slightly less verbose for what we assume is the more common use case.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T11:04:34Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2293425394",
            "id": 2293425394,
            "in_reply_to_id": 2292963788,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IsuTy",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3144079598,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293425394/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-22T11:04:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293425394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2293446094"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293446094"
                }
            },
            "author_association": "MEMBER",
            "body": "> Probably not, but there could be cases where someone wants a newline character other than \\n. We can't know for sure.\r\n> I think we shouldn’t strip customizability just to make the configuration slightly less verbose for what we assume is the more common use case.\r\n\r\n\r\nOn the other hand, if other libraries/languages survived several years with no requests for such configuration there is also little incentive to make the API worse only to support a hypothetical case that nobody needs.\r\n\r\nAlso it wouldn't be a one way street. Could still add a dedicated `newline_char` property later on if the use-case ever comes up.\r\n",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T11:15:27Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2293446094",
            "id": 2293446094,
            "in_reply_to_id": 2292963788,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IszXO",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3144108701,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293446094/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-22T11:16:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293446094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2293490121"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293490121"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> On the other hand, if other libraries/languages survived several years with no requests for such configuration there is also little incentive to make the API worse only to support a hypothetical case that nobody needs\r\n\r\nFair point.\r\n\r\nI drafted a variant of opts inspired by Python’s approach. I haven't tested it yet, but it seems to allow full customization while keeping the simple `{ indent = 2 }` syntax for basic pretty-printing:\r\n\r\n```lua\r\n--- - indent: (string|number|nil) A positive integer indents that many spaces per level;\r\n---           a string (such as \"\\t\") is used to indent each level.\r\n---           If zero, negative, or \"\" (the empty string), only separators are inserted.\r\n---           If `nil` (the default), the most compact representation is used.\r\n--- - item_separator: (string) String inserted after the \",\", \"{\", \"[\" characters.\r\n---                    Only used if `indent` is not nil. Defaults to `\"\\n\"`.\r\n--- - key_separator: (string) String inserted after the \":\" character.\r\n---                    Only used if `indent` is not nil. Defaults to `\" \"`.\r\n``` \r\n\r\n(Descriptions and names are draft and should be refined.)\r\n\r\nWith this approach, looks like separate `pretty` table may be redundant.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-22T11:38:34Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) (default false) Whether to enable",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2293490121",
            "id": 2293490121,
            "in_reply_to_id": 2292963788,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Is-HJ",
            "original_commit_id": "c11a9f27ed7bbf455e414b44c459454d2000529b",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3144173357,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293490121/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-22T12:37:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2293490121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2297038318"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297038318"
                }
            },
            "author_association": "MEMBER",
            "body": "Can't we remove `enable` here and instead make `pretty` optional, such that if the argument is provided pretty formatting is implied?",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-25T03:43:20Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) Whether to enable pretty-formatting.",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2297038318",
            "id": 2297038318,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6gXu",
            "original_commit_id": "148fb3609fc834f38008ac45493b966a99750c22",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3149791047,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297038318/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T03:44:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297038318",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2297040387"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297040387"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                    Defaults to `\"  \"` (2 spaces).\r\n```",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-25T03:43:49Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) Whether to enable pretty-formatting.\n+                    Defaults to false.\n+                  • indent: (string) String used for each indentation level.\n+                    Defaults to `\"  \"`.",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2297040387",
            "id": 2297040387,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6g4D",
            "original_commit_id": "148fb3609fc834f38008ac45493b966a99750c22",
            "original_line": 3382,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3149791047,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297040387/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T03:44:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297040387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2297046779"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297046779"
                }
            },
            "author_association": "MEMBER",
            "body": "What kind of error do we show if the provided formatting options result in invalid JSON?",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-25T03:45:50Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2297046779",
            "id": 2297046779,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I6ib7",
            "original_commit_id": "148fb3609fc834f38008ac45493b966a99750c22",
            "original_line": 3378,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3149806142,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297046779/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T03:45:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297046779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2297583709"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297583709"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "We can, that seems like a good idea.\r\n\r\nSee [comment](https://github.com/neovim/neovim/pull/35424#discussion_r2293165588)",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-25T09:25:34Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:\n+                  • enable: (boolean) Whether to enable pretty-formatting.",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2297583709",
            "id": 2297583709,
            "in_reply_to_id": 2297038318,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6I8lhd",
            "original_commit_id": "148fb3609fc834f38008ac45493b966a99750c22",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3150610773,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297583709/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T09:25:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2297583709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2299023824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299023824"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Good catch. I added validation to ensure that indentation and separator strings contain only spaces, tabs, line feeds (LF) or carriage returns (CR), and also tests for this.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-25T20:12:26Z",
            "diff_hunk": "@@ -3375,6 +3375,15 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table) Table with keys:",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2299023824",
            "id": 2299023824,
            "in_reply_to_id": 2297046779,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JCFHQ",
            "original_commit_id": "148fb3609fc834f38008ac45493b966a99750c22",
            "original_line": 3378,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3152877219,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299023824/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-25T20:12:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299023824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2299590906"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299590906"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                  pretty-formatting when non-nil or `true`. Supports the\r\n```",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T02:41:45Z",
            "diff_hunk": "@@ -3375,6 +3375,24 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table|boolean) (default false) Enables\n+                  pretty-formatting when provided or `true`. Supports the",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2299590906",
            "id": 2299590906,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JEPj6",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 3379,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3153655548,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299590906/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T02:41:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299590906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2299596838"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299596838"
                }
            },
            "author_association": "MEMBER",
            "body": "can drop the integar variant. it's trivial to convert a number to spaces, `(' '):rep(4)`",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T02:44:33Z",
            "diff_hunk": "@@ -3375,6 +3375,24 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table|boolean) (default false) Enables\n+                  pretty-formatting when provided or `true`. Supports the\n+                  following keys:\n+                  • indent: (integer|string) (default 2) Controls how nested",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2299596838",
            "id": 2299596838,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JERAm",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 3381,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3153662337,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299596838/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T02:44:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299596838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2299599096"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299599096"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                  • itemsep: (string) (default \"\\n\") Separator inserted\r\n```",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T02:46:15Z",
            "diff_hunk": "@@ -3375,6 +3375,24 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table|boolean) (default false) Enables\n+                  pretty-formatting when provided or `true`. Supports the\n+                  following keys:\n+                  • indent: (integer|string) (default 2) Controls how nested\n+                    levels are indented.\n+                    • If a integer: indents that many spaces per nesting\n+                      level.\n+                    • If a string: that string is used for the indentation.\n+                      Must contain only spaces, tabs, line feeds (LF), or\n+                      carriage returns (CR).\n+                  • item_separator: (string) (default \"\\n\") Separator inserted",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2299599096",
            "id": 2299599096,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JERj4",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 3388,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3153665474,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299599096/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T02:46:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299599096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2299599307"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299599307"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                  • keysep: (string) (default \" \") Separator inserted\r\n```",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T02:46:25Z",
            "diff_hunk": "@@ -3375,6 +3375,24 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table|boolean) (default false) Enables\n+                  pretty-formatting when provided or `true`. Supports the\n+                  following keys:\n+                  • indent: (integer|string) (default 2) Controls how nested\n+                    levels are indented.\n+                    • If a integer: indents that many spaces per nesting\n+                      level.\n+                    • If a string: that string is used for the indentation.\n+                      Must contain only spaces, tabs, line feeds (LF), or\n+                      carriage returns (CR).\n+                  • item_separator: (string) (default \"\\n\") Separator inserted\n+                    between array elements and object members. Must contain\n+                    only spaces, tabs, line feeds (LF), or carriage returns\n+                    (CR).\n+                  • key_separator: (string) (default \" \") Separator inserted",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2299599307",
            "id": 2299599307,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JERnL",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 3392,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3153665911,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299599307/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T02:46:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299599307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2299607023"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299607023"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                        luaL_error(l, \"item_separator may only contain spaces, tabs, line feeds, or carriage returns\");\r\n```\r\n\r\nI find using plural here cleaner.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T02:53:47Z",
            "diff_hunk": "@@ -979,26 +1112,69 @@ static int json_encode(lua_State *l)\n         break;\n     case 2:\n         luaL_checktype(l, 2, LUA_TTABLE);\n-        lua_getfield(l, 2, \"escape_slash\");\n \n-        /* We only handle the escape_slash option for now */\n-        if (lua_isnil(l, -1)) {\n-            lua_pop(l, 2);\n-            break;\n+        lua_getfield(l, 2, \"escape_slash\");\n+        if (!lua_isnil(l, -1)) {\n+            luaL_checktype(l, -1, LUA_TBOOLEAN);\n+\n+            int escape_slash = lua_toboolean(l, -1);\n+            if (escape_slash) {\n+                /* This can be optimised by adding a new hard-coded escape table for this case,\n+                 * but this path will rarely if ever be used, so let's just memcpy. */\n+                memcpy(customChar2escape, char2escape, sizeof(char2escape));\n+                customChar2escape['/'] = \"\\\\/\";\n+                *ctx.options->char2escape = customChar2escape;\n+            }\n         }\n+        lua_pop(l, 1);\n \n-        luaL_checktype(l, -1, LUA_TBOOLEAN);\n+        lua_getfield(l, 2, \"pretty\");\n+        if (!lua_isnil(l, -1)) {\n+            if (lua_isboolean(l, -1)) {\n+                options.pretty_enabled = lua_toboolean(l, -1);\n+            } else {\n+                luaL_checktype(l, -1, LUA_TTABLE);\n+                /* enable pretty-formatting if table provided */\n+                options.pretty_enabled = 1;\n+\n+                lua_getfield(l, -1, \"indent\");\n+                if (lua_isnumber(l, -1)) {\n+                    lua_Integer n = luaL_checkinteger(l, -1);\n+                    luaL_argcheck(l, n >= 0, 2, \"indent must be non-negative\");\n+\n+                    luaL_argcheck(l, (unsigned long long)n <= SIZE_MAX, 2, \"indent too large\");\n+                    size_t indent_len = (size_t)n;\n+\n+                    strbuf_t b;\n+                    strbuf_init(&b, indent_len);\n+                    for (size_t i = 0; i < indent_len; i++)\n+                        strbuf_append_char_unsafe(&b, ' ');\n+\n+                    options.pretty_indent = strbuf_free_to_string(&b, &indent_len);\n+                } else if (lua_isstring(l, -1)) {\n+                  options.pretty_indent = lua_tostring(l, -1);\n+                  if (!is_allowed_ws(options.pretty_indent))\n+                      luaL_error(l, \"indent may only contain space, tab, LF, or CR\");\n+                }\n+                lua_pop(l, 1);\n \n-        int escape_slash = lua_toboolean(l, -1);\n+                lua_getfield(l, -1, \"item_separator\");\n+                if (lua_isstring(l, -1)) {\n+                    options.pretty_item_separator = lua_tostring(l, -1);\n+                    if (!is_allowed_ws(options.pretty_item_separator))\n+                        luaL_error(l, \"item_separator may only contain space, tab, LF, or CR\");",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2299607023",
            "id": 2299607023,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JETfv",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 1165,
            "original_position": 309,
            "original_start_line": null,
            "path": "src/cjson/lua_cjson.c",
            "position": 1,
            "pull_request_review_id": 3153676635,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299607023/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T02:54:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299607023",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2299607227"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299607227"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                      luaL_error(l, \"key_separator may only contain spaces, tabs, line feeds, or carriage returns\");\r\n```",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T02:54:00Z",
            "diff_hunk": "@@ -979,26 +1112,69 @@ static int json_encode(lua_State *l)\n         break;\n     case 2:\n         luaL_checktype(l, 2, LUA_TTABLE);\n-        lua_getfield(l, 2, \"escape_slash\");\n \n-        /* We only handle the escape_slash option for now */\n-        if (lua_isnil(l, -1)) {\n-            lua_pop(l, 2);\n-            break;\n+        lua_getfield(l, 2, \"escape_slash\");\n+        if (!lua_isnil(l, -1)) {\n+            luaL_checktype(l, -1, LUA_TBOOLEAN);\n+\n+            int escape_slash = lua_toboolean(l, -1);\n+            if (escape_slash) {\n+                /* This can be optimised by adding a new hard-coded escape table for this case,\n+                 * but this path will rarely if ever be used, so let's just memcpy. */\n+                memcpy(customChar2escape, char2escape, sizeof(char2escape));\n+                customChar2escape['/'] = \"\\\\/\";\n+                *ctx.options->char2escape = customChar2escape;\n+            }\n         }\n+        lua_pop(l, 1);\n \n-        luaL_checktype(l, -1, LUA_TBOOLEAN);\n+        lua_getfield(l, 2, \"pretty\");\n+        if (!lua_isnil(l, -1)) {\n+            if (lua_isboolean(l, -1)) {\n+                options.pretty_enabled = lua_toboolean(l, -1);\n+            } else {\n+                luaL_checktype(l, -1, LUA_TTABLE);\n+                /* enable pretty-formatting if table provided */\n+                options.pretty_enabled = 1;\n+\n+                lua_getfield(l, -1, \"indent\");\n+                if (lua_isnumber(l, -1)) {\n+                    lua_Integer n = luaL_checkinteger(l, -1);\n+                    luaL_argcheck(l, n >= 0, 2, \"indent must be non-negative\");\n+\n+                    luaL_argcheck(l, (unsigned long long)n <= SIZE_MAX, 2, \"indent too large\");\n+                    size_t indent_len = (size_t)n;\n+\n+                    strbuf_t b;\n+                    strbuf_init(&b, indent_len);\n+                    for (size_t i = 0; i < indent_len; i++)\n+                        strbuf_append_char_unsafe(&b, ' ');\n+\n+                    options.pretty_indent = strbuf_free_to_string(&b, &indent_len);\n+                } else if (lua_isstring(l, -1)) {\n+                  options.pretty_indent = lua_tostring(l, -1);\n+                  if (!is_allowed_ws(options.pretty_indent))\n+                      luaL_error(l, \"indent may only contain space, tab, LF, or CR\");\n+                }\n+                lua_pop(l, 1);\n \n-        int escape_slash = lua_toboolean(l, -1);\n+                lua_getfield(l, -1, \"item_separator\");\n+                if (lua_isstring(l, -1)) {\n+                    options.pretty_item_separator = lua_tostring(l, -1);\n+                    if (!is_allowed_ws(options.pretty_item_separator))\n+                        luaL_error(l, \"item_separator may only contain space, tab, LF, or CR\");\n+                }\n+                lua_pop(l, 1);\n \n-        if (escape_slash) {\n-            /* This can be optimised by adding a new hard-coded escape table for this case,\n-             * but this path will rarely if ever be used, so let's just memcpy.*/ \n-            memcpy(customChar2escape, char2escape, sizeof(char2escape));\n-            customChar2escape['/'] = \"\\\\/\";\n-            *ctx.options->char2escape = customChar2escape;\n+                lua_getfield(l, -1, \"key_separator\");\n+                if (lua_isstring(l, -1)) {\n+                  options.pretty_key_separator = lua_tostring(l, -1);\n+                  if (!is_allowed_ws(options.pretty_key_separator))\n+                      luaL_error(l, \"key_separator may only contain space, tab, LF, or CR\");",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2299607227",
            "id": 2299607227,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JETi7",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 1173,
            "original_position": 323,
            "original_start_line": null,
            "path": "src/cjson/lua_cjson.c",
            "position": 1,
            "pull_request_review_id": 3153676635,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299607227/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T02:54:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2299607227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2300301758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300301758"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't know how much complicated would it be but I think taking the value from something like `vim.filetype.get_option()` might be a slightly more sensible approach, this way it will be formatted following the user's options.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T08:56:43Z",
            "diff_hunk": "@@ -3375,6 +3375,24 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table|boolean) (default false) Enables\n+                  pretty-formatting when provided or `true`. Supports the\n+                  following keys:\n+                  • indent: (integer|string) (default 2) Controls how nested",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2300301758",
            "id": 2300301758,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JG9G-",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 3381,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3154653055,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300301758/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T08:56:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300301758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4576770?v=4",
                "events_url": "https://api.github.com/users/mike325/events{/privacy}",
                "followers_url": "https://api.github.com/users/mike325/followers",
                "following_url": "https://api.github.com/users/mike325/following{/other_user}",
                "gists_url": "https://api.github.com/users/mike325/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mike325",
                "id": 4576770,
                "login": "mike325",
                "node_id": "MDQ6VXNlcjQ1NzY3NzA=",
                "organizations_url": "https://api.github.com/users/mike325/orgs",
                "received_events_url": "https://api.github.com/users/mike325/received_events",
                "repos_url": "https://api.github.com/users/mike325/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mike325/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mike325/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mike325",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2300338493"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300338493"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't think it should be baked into `vim.json`; it should be handled by the caller. This way, the output with default values remains consistent and does not depend on state. It also avoids assuming that the output is written to a file, which only the caller can know.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T09:10:09Z",
            "diff_hunk": "@@ -3375,6 +3375,24 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table|boolean) (default false) Enables\n+                  pretty-formatting when provided or `true`. Supports the\n+                  following keys:\n+                  • indent: (integer|string) (default 2) Controls how nested",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2300338493",
            "id": 2300338493,
            "in_reply_to_id": 2300301758,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JHGE9",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 3381,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3154707557,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300338493/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T09:10:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300338493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2300628718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300628718"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don’t find this trivial to write, and the syntax feels overly verbose for the purpose. Using an integer is clear - it represents spaces, since no other symbol would make sense to repeat. Many dynamic languages take advantage of this approach, for example [space](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#space) in JavaScript or [indent](https://docs.python.org/3/library/json.html#json.dump) in Python.\r\n\r\nAre you being strict about narrowing the API, or is this driven by maintenance and complexity concerns?",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T11:05:21Z",
            "diff_hunk": "@@ -3375,6 +3375,24 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table|boolean) (default false) Enables\n+                  pretty-formatting when provided or `true`. Supports the\n+                  following keys:\n+                  • indent: (integer|string) (default 2) Controls how nested",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2300628718",
            "id": 2300628718,
            "in_reply_to_id": 2299596838,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JIM7u",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 3381,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3155112915,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300628718/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T11:05:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2300628718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2302153235"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302153235"
                }
            },
            "author_association": "MEMBER",
            "body": "It's mostly about simplifying the interface and docs. When the docs get nested like this, we need to ask why.\r\n\r\nThe door is always open in the future to add more variations like this. So we don't need to have all these features right now.\r\n\r\nThis PR enables something that was previously impossible. There is no need to also add bells and whistles in this iteration.\r\n\r\n> the syntax feels overly verbose for the purpose\r\n\r\nThe purpose happens \"almost never\". How often are you doing this task?",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-26T21:10:58Z",
            "diff_hunk": "@@ -3375,6 +3375,24 @@ vim.json.encode({obj}, {opts})                             *vim.json.encode()*\n       • {opts}  (`table<string,any>?`) Options table with keys:\n                 • escape_slash: (boolean) (default false) Escape slash\n                   characters \"/\" in string values.\n+                • pretty: (table|boolean) (default false) Enables\n+                  pretty-formatting when provided or `true`. Supports the\n+                  following keys:\n+                  • indent: (integer|string) (default 2) Controls how nested",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2302153235",
            "id": 2302153235,
            "in_reply_to_id": 2299596838,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JOBIT",
            "original_commit_id": "84a47990091c3c11d30c09784cd9c79392884811",
            "original_line": 3381,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 1,
            "pull_request_review_id": 3157323007,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302153235/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-26T21:12:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302153235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2302691562"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302691562"
                }
            },
            "author_association": "MEMBER",
            "body": "why does this api care what the user decides they want to \"indent\" with? ",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-27T02:31:45Z",
            "diff_hunk": "@@ -436,6 +453,41 @@ static int json_cfg_encode_keep_buffer(lua_State *l)\n }\n */\n \n+/* Returns nonzero if the string consists only of allowed whitespace characters */",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2302691562",
            "id": 2302691562,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JQEjq",
            "original_commit_id": "91e7b723ad01c73ae924c90cd4faeff3688111f9",
            "original_line": 456,
            "original_position": 49,
            "original_start_line": null,
            "path": "src/cjson/lua_cjson.c",
            "position": 1,
            "pull_request_review_id": 3158086780,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302691562/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-27T02:31:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2302691562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2303473654"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2303473654"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "For the same reason it checks that the first argument is deserializable: to guarantee the result is always valid JSON. indent should be treated as user input too. The difference is that the first argument is obviously user-provided and hard to validate manually, whereas indent is less likely to come directly from the user and is easy to validate.\r\n\r\nStill, the performance cost of checking it is negligible, and I can't imagine a case where someone would want to use anything other than whitespace for indentation. Perhaps instead of throwing an error, the API could fall back to \"\" in such cases.",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-27T10:03:24Z",
            "diff_hunk": "@@ -436,6 +453,41 @@ static int json_cfg_encode_keep_buffer(lua_State *l)\n }\n */\n \n+/* Returns nonzero if the string consists only of allowed whitespace characters */",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2303473654",
            "id": 2303473654,
            "in_reply_to_id": 2302691562,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JTDf2",
            "original_commit_id": "91e7b723ad01c73ae924c90cd4faeff3688111f9",
            "original_line": 456,
            "original_position": 49,
            "original_start_line": null,
            "path": "src/cjson/lua_cjson.c",
            "position": 1,
            "pull_request_review_id": 3159158446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2303473654/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-27T10:34:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2303473654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35424#discussion_r2304048743"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35424"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2304048743"
                }
            },
            "author_association": "MEMBER",
            "body": "An error is better than a fallback imo, I was just thinking that dropping the validation logic would simplify the code, and add flexibility (though unlikely to be useful) at the minor cost of expecting the caller to know what it's doing (which seems reasonable).",
            "commit_id": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
            "created_at": "2025-08-27T14:06:13Z",
            "diff_hunk": "@@ -436,6 +453,41 @@ static int json_cfg_encode_keep_buffer(lua_State *l)\n }\n */\n \n+/* Returns nonzero if the string consists only of allowed whitespace characters */",
            "html_url": "https://github.com/neovim/neovim/pull/35424#discussion_r2304048743",
            "id": 2304048743,
            "in_reply_to_id": 2302691562,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6JVP5n",
            "original_commit_id": "91e7b723ad01c73ae924c90cd4faeff3688111f9",
            "original_line": 456,
            "original_position": 49,
            "original_start_line": null,
            "path": "src/cjson/lua_cjson.c",
            "position": 1,
            "pull_request_review_id": 3159956851,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2304048743/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-27T14:06:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2304048743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Wasn't the main goal to sort by key name? Don't see that mentioned in the diff.\r\n\r\nWe already have pretty printing via `vim.inspect()`. How does this differ?",
            "created_at": "2025-08-22T01:44:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3212720794",
            "id": 3212720794,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM6_fjqa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3212720794/reactions"
            },
            "updated_at": "2025-08-22T01:44:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3212720794",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A little bit of backstory. While experimenting with #34776, I figured that probably the best way to handle it is to have a single \"public\" lockfile as a json file. Mainly because:\r\n- It is a more capable and easy to understand solution.\r\n- `vim.json.decode()` proved to be the fastest way to read the serialized object, which is important as it needs to be done on every startup (if `vim.pack` is used). I compared with custom implementation of yaml read/write and it was slower.\r\n\r\nAs lockfile is meant to be VCS tracked and (ideally) human readable, having it as a single line without spaces is problematic (because hard to read the file itself and its diffs). So there needs to be a way to write a multi-line json. Although manually serializing as multi-line json is doable (as the structure is known), it still requires non-trivial handling of edge cases (at least proper escaping, but maybe more). So I decided to take a look into improving `vim.json.encode()`. This should be an improvement far further reaching than for lockfile itself (I've needed it at least two times now).\r\n\r\nI made the crude proof-of-concept which seemed to work, but making it configurable and upstream-able was outside of my comfort zone (and skill level). After discussing it on Matrix, @skewb1k kindly suggested a help with that, which is this PR. Thank you :pray:\r\n\r\n> Wasn't the main goal to sort by key name? Don't see that mentioned in the diff.\r\n\r\nYes, fixed key order would also be important. But at least it is easier to manually deal with than subtle issues with JSON encoding. And @skewb1k expressed some interest to also look into it as a separate config option as well (right?).\r\n\r\n> We already have pretty printing via `vim.inspect()`. How does this differ?\r\n\r\nUsing `vim.inspect()` to serialize a table to store in lockfile has problems:\r\n- It would mean to invent new format (`LON` :) ). Unless explicitly stored as `.lua` file with `loadfile()` / `dofile` to read it, which I think is not a great idea.\r\n- It might require workarounds (like it using shorthand `<table n>` when same table is used).\r\n- It is [explicitly not recommended](https://github.com/kikito/inspect.lua?tab=readme-ov-file#inspectlua) for serialization of Lua objects.\r\n\r\n",
            "created_at": "2025-08-22T07:30:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3213372690",
            "id": 3213372690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM6_iC0S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3213372690/reactions"
            },
            "updated_at": "2025-08-22T07:30:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3213372690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Wasn't the main goal to sort by key name? Don't see that mentioned in the diff.\r\n\r\n\r\nRight, that's the main goal, but I plan to target that in a separate PR.\r\nThis change is simpler and completely independent of the ordered-keys feature, which is why it's separate.\r\n\r\n> We already have pretty printing via `vim.inspect()`. How does this differ?\r\n\r\nIt outputs LON rather than JSON. As @echasnovski pointed out, LON is harder to work with in many cases. Indented JSON output could also be useful for plugins, some of which may already implement their own version of this.",
            "created_at": "2025-08-22T08:48:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3213592276",
            "id": 3213592276,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM6_i4bU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3213592276/reactions"
            },
            "updated_at": "2025-08-22T08:48:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3213592276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It outputs LON rather than JSON. As @echasnovski pointed out, LON is harder to work with in many cases. Indented JSON output could also be useful for plugins\r\n\r\nOk, that single sentence is way more useful than the rest of the description in this PR. That is exactly why I ask people to present PRs as a \"Problem\"/\"Solution\" statement. Would you mind updating the commit message / PR description.",
            "created_at": "2025-08-22T18:27:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3215248414",
            "id": 3215248414,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM6_pMwe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3215248414/reactions"
            },
            "updated_at": "2025-08-22T18:27:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3215248414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks to all reviewers, I've addressed the comments:\r\n- Adjusted option names\r\n- Removed `enabled` in favor of optional `pretty`, which can be true or a table\r\n- Allowed indent to be an integer\r\n- Added validation for indent and separator strings to prevent producing invalid JSON\r\n- Clarified the PR and commit messages\r\n- Improved the docs\r\n- Synced with upstream PR changes",
            "created_at": "2025-08-25T19:59:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3221563886",
            "id": 3221563886,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7ABSnu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221563886/reactions"
            },
            "updated_at": "2025-08-25T19:59:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221563886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@echasnovski do you actually need `key_separator` / `item_separator` ? those seem rather special-case, and if that's really needed, perhaps instead it should just be a `format` callback so the user can control the formatting, similar to `replacer` in [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) ?\r\n\r\nnot a blocker, but want to know what the actual use-case for that is.",
            "created_at": "2025-08-26T02:52:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3222385265",
            "id": 3222385265,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7AEbJx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222385265/reactions"
            },
            "updated_at": "2025-08-26T03:01:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222385265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @echasnovski do you actually need `key_separator` / `item_separator` ? those seem rather special-case, and if that's really needed, perhaps instead it should just be a `format` callback so the user can control the formatting, similar to `replacer` in [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) ?\r\n> \r\n> not a blocker, but want to know what the actual use-case for that is.\r\n\r\nFunctionally (overall and for #34776) - probably no need. For actually *pretty* formatting I think adding space after `:` greatly improves readability. I don't mind having a more flexible `replacer`, just any way to have the default be to add a space.\r\n\r\nThe default pretty formatting follows default settings of `prettier` for json, which I think is a reasonable reference.",
            "created_at": "2025-08-26T08:08:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3223082823",
            "id": 3223082823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7AHFdH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3223082823/reactions"
            },
            "updated_at": "2025-08-26T08:08:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3223082823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> callback so the user can control the formatting, similar to `replacer` in [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) ?\r\n\r\nIsn't `replacer` meant for replacing values rather than controlling formatting? It receives the key and value and returns a replacement value in the encoded string. For pretty-formatting, there is `space` (similar to our `indent`), which doesn't allow control over key or item separators.\r\n\r\nFor an upstream library, I think it definitely should provide control over these separators. But for `vim.json`, I’m not sure. On one hand, lacking this control can become painful if needed. On the other hand, it's rarely needed, and the Neovim API might only need a single `indent` option that enables newlines if provided - since newlines are generally unnecessary without indentation, and vice versa.\r\n\r\nIt would be nice to hear what others think about this.",
            "created_at": "2025-08-26T11:39:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3223814545",
            "id": 3223814545,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7AJ4GR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3223814545/reactions"
            },
            "updated_at": "2025-08-26T11:39:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3223814545",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > callback so the user can control the formatting, similar to `replacer` in [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) ?\r\n> \r\n> Isn't `replacer` meant for replacing values rather than controlling formatting?\r\n\r\nThe question is about the callback concept, not the details of `replacer`. \r\n\r\n\r\n\r\n> For an upstream library, I think it definitely should provide control over these separators. \r\n\r\nIt might speed up the upstream PR to drop the `item_sep` / `key_sep` and propose them in a followup PR. (I don't think I've ever seen that in a json formatting api before, is there prior art somewhere?)\r\n\r\n> But for `vim.json`, I’m not sure.\r\n\r\nWe can always add them later, so yes let's start with the minimal surface area.",
            "created_at": "2025-08-26T19:39:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3225502505",
            "id": 3225502505,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7AQUMp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225502505/reactions"
            },
            "updated_at": "2025-08-26T19:39:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225502505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The question is about the callback concept, not the details of `replacer`.\r\n\r\nAh, ok. I still don't fully understand, but I'm curious how a callback could be more useful for formatting than just string options. Anyway, it doesn't matter right now anyway.\r\n\r\n> It might speed up the upstream PR to drop the `item_sep` / `key_sep` and propose them in a followup PR. (I don't think I've ever seen that in a json formatting api before, is there prior art somewhere?)\r\n\r\nMainly [Python's `separators` tuple](https://docs.python.org/3/library/json.html#json.dump). I looked around and it seems to be the only example; other ecosystems seem to manage fine without it. This feature is less necessary than I initially thought - sorry for overthinking it.",
            "created_at": "2025-08-26T20:10:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3225585338",
            "id": 3225585338,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7AQoa6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225585338/reactions"
            },
            "updated_at": "2025-08-26T20:10:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225585338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Should we allow `indent = true` to default to 2 spaces? ",
            "created_at": "2025-08-26T20:58:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3225710194",
            "id": 3225710194,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7ARG5y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225710194/reactions"
            },
            "updated_at": "2025-08-26T20:58:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225710194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Should we allow `indent = true` to default to 2 spaces?\r\n\r\nas hinted by https://github.com/neovim/neovim/pull/35424#discussion_r2299596838 , we should be avoiding multi-type parameters, not adding more.\r\n\r\nOne big reason for that is because it simplifies the docs. When the docs require nested \"if X type, then X behavior, if Y type, then Y behavior ...\", it's a signal to ask whether the variation is really needed.",
            "created_at": "2025-08-26T21:06:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3225729700",
            "id": 3225729700,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7ARLqk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225729700/reactions"
            },
            "updated_at": "2025-08-26T21:07:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225729700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> as hinted by [#35424 (comment)](https://github.com/neovim/neovim/pull/35424#discussion_r2299596838) , we should be avoiding multi-type parameters, not adding more.\r\n> \r\n> One big reason for that is because it simplifies the docs. When the docs require nested \"if X type, then X behavior, if Y type, then Y behavior ...\", it's a signal to ask whether the variation is really needed.\r\n\r\nThat's exactly why I asked - I was struggling to express it clearly in the docs.\r\n\r\nI agree with your point, thanks for clarifying.",
            "created_at": "2025-08-26T21:11:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3225746843",
            "id": 3225746843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7ARP2b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225746843/reactions"
            },
            "updated_at": "2025-08-26T21:11:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3225746843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looks like upstream will accept this. I assume you will update here if the upstream version changes.",
            "created_at": "2025-09-07T21:37:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/35424#issuecomment-3264085196",
            "id": 3264085196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
            "node_id": "IC_kwDOAPphoM7CjfzM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3264085196/reactions"
            },
            "updated_at": "2025-09-07T21:37:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3264085196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35424/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35424/commits",
    "created_at": "2025-08-21T23:35:57Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35424.diff",
    "draft": false,
    "head": {
        "label": "skewb1k:feat/json-pretty-encoding",
        "ref": "feat/json-pretty-encoding",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/skewb1k/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/skewb1k/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/skewb1k/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/skewb1k/neovim/branches{/branch}",
            "clone_url": "https://github.com/skewb1k/neovim.git",
            "collaborators_url": "https://api.github.com/repos/skewb1k/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/skewb1k/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/skewb1k/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/skewb1k/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/skewb1k/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/skewb1k/neovim/contributors",
            "created_at": "2025-07-07T21:03:41Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/skewb1k/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/skewb1k/neovim/downloads",
            "events_url": "https://api.github.com/repos/skewb1k/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/skewb1k/neovim/forks",
            "full_name": "skewb1k/neovim",
            "git_commits_url": "https://api.github.com/repos/skewb1k/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/skewb1k/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/skewb1k/neovim/git/tags{/sha}",
            "git_url": "git://github.com/skewb1k/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/skewb1k/neovim/hooks",
            "html_url": "https://github.com/skewb1k/neovim",
            "id": 1015660381,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/skewb1k/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/skewb1k/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/skewb1k/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/skewb1k/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/skewb1k/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/skewb1k/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/skewb1k/neovim/merges",
            "milestones_url": "https://api.github.com/repos/skewb1k/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOPIm_XQ",
            "notifications_url": "https://api.github.com/repos/skewb1k/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/skewb1k/neovim/pulls{/number}",
            "pushed_at": "2025-09-08T21:08:57Z",
            "releases_url": "https://api.github.com/repos/skewb1k/neovim/releases{/id}",
            "size": 330483,
            "ssh_url": "git@github.com:skewb1k/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/skewb1k/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/skewb1k/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/skewb1k/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/skewb1k/neovim/subscription",
            "svn_url": "https://github.com/skewb1k/neovim",
            "tags_url": "https://api.github.com/repos/skewb1k/neovim/tags",
            "teams_url": "https://api.github.com/repos/skewb1k/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/skewb1k/neovim/git/trees{/sha}",
            "updated_at": "2025-09-08T21:09:12Z",
            "url": "https://api.github.com/repos/skewb1k/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
            "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
            "followers_url": "https://api.github.com/users/skewb1k/followers",
            "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
            "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/skewb1k",
            "id": 101928759,
            "login": "skewb1k",
            "node_id": "U_kgDOBhNPNw",
            "organizations_url": "https://api.github.com/users/skewb1k/orgs",
            "received_events_url": "https://api.github.com/users/skewb1k/received_events",
            "repos_url": "https://api.github.com/users/skewb1k/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/skewb1k",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35424",
    "id": 2764593152,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35424",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "448f15ca396aa7007eb2c5cb82dd2ea6c5c82953",
    "merged_at": "2025-09-07T21:38:27Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6kyFgA",
    "number": 35424,
    "patch_url": "https://github.com/neovim/neovim/pull/35424.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35424/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/61817e09b8371e1bdb7daafd3b6115ecee0d02a2",
    "title": "feat(json): support pretty-formatting with `vim.json.encode()`",
    "updated_at": "2025-09-07T21:38:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35424",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
        "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
        "followers_url": "https://api.github.com/users/skewb1k/followers",
        "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
        "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/skewb1k",
        "id": 101928759,
        "login": "skewb1k",
        "node_id": "U_kgDOBhNPNw",
        "organizations_url": "https://api.github.com/users/skewb1k/orgs",
        "received_events_url": "https://api.github.com/users/skewb1k/received_events",
        "repos_url": "https://api.github.com/users/skewb1k/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/skewb1k",
        "user_view_type": "public"
    }
}