{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33964/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33964/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/33964"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/33964"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33964/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8e20a336c2e83354d1fc58ea5926c2247ae2d596"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6134,
            "forks_count": 6134,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1965,
            "open_issues_count": 1965,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-17T02:49:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 328511,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90375,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-17T02:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90375,
            "watchers_count": 90375,
            "web_commit_signoff_required": false
        },
        "sha": "079e7d2b112af0e0b4bc1b2de8f706c02e220049",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This PR introduces a minimal `vim.net.download()` implementation as a simple wrapper around `curl`, following the approach suggested in [this comment](https://github.com/neovim/neovim/pull/29104#issuecomment-2165443624).\r\n\r\nThe goal is to start small and provide the foundational download functionality first and then add more advanced features (e.g. authentication, headers, proxy support) in future PRs.\r\n\r\nThis PR is related to issue #23232 \r\n\r\n### Implementation\r\n\r\n- Uses `vim.system()` with `curl` to perform the download.\r\n- Automatically adds --retry <n>, --location (follow redirects) and --output <file> plus the URL.\r\n- Accepts an `opts` table and an optional `on_exit` callback.\r\n- If you pass an `on_exit` callback, it runs in the background and invokes `on_exit(err or nil)` when done.\r\n- If no callback is given, it blocks until completion and returns `true` on success or `false, errmsg` on failure.\r\n\r\n### Proposed API Usage\r\n\r\n1. **Basic synchronous download**:\r\n   ```lua\r\n    local ok, err = vim.net.download(\"https://httpbingo.org/anything\", \"./anything.txt\")\r\n    if not ok then\r\n      print(\"Download failed:\", err)\r\n    end\r\n    ```\r\n    \r\n2. **Synchronous with custom options**:\r\n    ```lua\r\n   local ok, err = vim.net.download(\"https://httpbingo.org/anything\", \"./anything.txt\", {\r\n       verbose = true,\r\n       retry = 5,\r\n       }\r\n   )\r\n   if ok then\r\n      print(\"Done\")\r\n    else\r\n      print(\"Error:\", err)\r\n    end\r\n    ```\r\n   \r\n3. **Asynchronous with callback**\r\n    ```lua\r\n    vim.net.download(\"https://httpbingo.org/anything\", \"./anything.txt\", { retry = 2 }, function(err)\r\n        if err then\r\n            print(\"Download failed:\", err)\r\n        else\r\n            print(\"Download successful!\")\r\n        end\r\n    end)\r\n    ```\r\n    \r\n### Next Steps\r\n\r\nAfter initial feedback, the implementation can be extended incrementally, adding `vim.net.request()` or broader `curl` options support in follow-up PRs.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083469455"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083469455"
                }
            },
            "author_association": "MEMBER",
            "body": "maybe `--silent --fail --show-error` would be more appropriate here? This will also suppress warning and information messages.\r\n\r\n(Could switch between the two with a `verbose = true` option.)",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T09:47:27Z",
            "diff_hunk": "@@ -0,0 +1,30 @@\n+local M = {}\n+\n+function M.download(url, opts)\n+  vim.validate({\n+    url = { url, 'string' },\n+    opts = { opts, 'table' },\n+  })\n+\n+  local args = {\n+    'curl',\n+    '--no-progress-meter',",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083469455",
            "id": 2083469455,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58LziP",
            "original_commit_id": "d7cf1150dce5e92f54d48d60721182c2918a45bd",
            "original_line": 11,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/net.lua",
            "position": null,
            "pull_request_review_id": 2831325734,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083469455/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-11T09:58:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083469455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083469949"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083469949"
                }
            },
            "author_association": "MEMBER",
            "body": "I think the `location` should be a mandatory (positional) argument; I don't see a \"put this _here_ (wherever 'here' is)\" is a reasonable use case.",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T09:50:12Z",
            "diff_hunk": "@@ -0,0 +1,30 @@\n+local M = {}\n+\n+function M.download(url, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083469949",
            "id": 2083469949,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58Lzp9",
            "original_commit_id": "d7cf1150dce5e92f54d48d60721182c2918a45bd",
            "original_line": 3,
            "original_position": 3,
            "original_start_line": null,
            "path": "runtime/lua/vim/net.lua",
            "position": null,
            "pull_request_review_id": 2831326226,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083469949/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-11T09:50:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083469949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083472003"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083472003"
                }
            },
            "author_association": "MEMBER",
            "body": "Do we want to add a small `--retry` to handle flakes? (CI, I'm looking at you...)",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T09:59:28Z",
            "diff_hunk": "@@ -0,0 +1,30 @@\n+local M = {}\n+\n+function M.download(url, opts)\n+  vim.validate({\n+    url = { url, 'string' },\n+    opts = { opts, 'table' },\n+  })\n+\n+  local args = {\n+    'curl',\n+    '--no-progress-meter',",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083472003",
            "id": 2083472003,
            "in_reply_to_id": 2083469455,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58L0KD",
            "original_commit_id": "d7cf1150dce5e92f54d48d60721182c2918a45bd",
            "original_line": 11,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/net.lua",
            "position": null,
            "pull_request_review_id": 2831328191,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083472003/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-11T09:59:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083472003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083502624"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083502624"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• |vim.net.download()| for downloading files.\r\n```",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T11:56:26Z",
            "diff_hunk": "@@ -74,6 +74,7 @@ LSP\n \n LUA\n \n+• Added |vim.net.download()|, a minimal cross-platform function for downloading files using curl. Supports an optional callback on completion.",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083502624",
            "id": 2083502624,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58L7og",
            "original_commit_id": "fff4fefe1a6adf2f4f65b04b7df47d2f7dd1e5d1",
            "original_line": 77,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2831371821,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083502624/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-05-11T11:56:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083502624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083537770"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083537770"
                }
            },
            "author_association": "MEMBER",
            "body": "From man page:\r\n```\r\nThe environment variables can be specified in lower case or upper case. The lower case version has precedence.\r\n```",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T14:14:16Z",
            "diff_hunk": "@@ -406,6 +406,55 @@ local function check_external_tools()\n   else\n     health.warn('ripgrep not available')\n   end\n+  if vim.fn.executable('curl') == 1 then\n+    local curl_path = vim.fn.exepath('curl')\n+    local curl_out = vim.fn.system({ curl_path, '--version' })\n+    local curl_version = vim.fn.matchstr(curl_out, [[^curl[^\\n]*]])\n+\n+    if vim.v.shell_error == 0 then\n+      local lines = {}\n+      table.insert(lines, string.format('%s (%s)', curl_version, curl_path))\n+\n+      for line in vim.gsplit(curl_out, '\\n', { plain = true }) do\n+        if line ~= '' and not line:match('^curl') then\n+          table.insert(lines, line)\n+        end\n+      end\n+\n+      -- Add subtitle only if any env var is present\n+      local added_env_header = false\n+      for _, var in ipairs({\n+        'CURL_CA_BUNDLE',\n+        'CURL_HOME',\n+        'CURL_SSL_BACKEND',\n+        'SSL_CERT_DIR',\n+        'SSL_CERT_FILE',\n+        'HTTPS_PROXY',\n+        'HTTP_PROXY',\n+        'ALL_PROXY',\n+        'NO_PROXY',",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083537770",
            "id": 2083537770,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58MENq",
            "original_commit_id": "6a84f9dc5931164a9330283adff68749384b2ba3",
            "original_line": 435,
            "original_position": 30,
            "original_start_line": 427,
            "path": "runtime/lua/vim/health/health.lua",
            "position": null,
            "pull_request_review_id": 2831412439,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083537770/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-11T14:14:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083537770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083542570"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083542570"
                }
            },
            "author_association": "MEMBER",
            "body": "Please make the callback the last positional argument.\r\n\r\n```suggestion\r\n--- Downloads a file from the given URL to a specified location.\r\n---\r\n--- @param url string The URL to download from.\r\n--- @param output string The file path where the content should be saved.\r\n--- @param opts? table Optional parameters:\r\n---   - verbose (boolean|nil): Enables verbose curl output.\r\n---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\r\n--- @param on_exit fun(err?: string)\r\n--- @return nil\r\nfunction M.download(url, output, opts, on_exit)\r\n```\r\n\r\nWe may also want this function to operate synchronously if no callback is given.\r\n\r\nAlso I think we may want a variation of this function where the output is passed back as a string. For this case `on_exit` should have type `fun(data?: string, err?: string)`",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T14:33:54Z",
            "diff_hunk": "@@ -0,0 +1,53 @@\n+local M = {}\n+\n+--- Downloads a file from the given URL to a specified location.\n+---\n+--- @param url string The URL to download from.\n+--- @param download_location string The file path where the content should be saved.\n+--- @param opts? table Optional parameters:\n+---   - on_exit (function|nil): Called when the download completes or fails. Receives error string or nil.\n+---   - verbose (boolean|nil): Enables verbose curl output.\n+---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\n+---\n+--- @return nil\n+function M.download(url, download_location, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083542570",
            "id": 2083542570,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58MFYq",
            "original_commit_id": "6a84f9dc5931164a9330283adff68749384b2ba3",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": 3,
            "path": "runtime/lua/vim/net.lua",
            "position": null,
            "pull_request_review_id": 2831417010,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083542570/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-11T14:40:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083542570",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083543908"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083543908"
                }
            },
            "author_association": "MEMBER",
            "body": "Perhaps add a sync form.\r\n\r\n```suggestion\r\n  local result\r\n\r\n  vim.system(args, { text = true }, function(res)\r\n    result = res\r\n    if res.code ~= 0 or res.stderr ~= '' then\r\n      if opts.on_exit then\r\n        opts.on_exit(res.stderr ~= '' and res.stderr or 'Download failed')\r\n      end\r\n      return\r\n    end\r\n    if opts.on_exit then\r\n      opts.on_exit(nil)\r\n    end\r\n  end)\r\n  \r\n  if on_exit then\r\n    return\r\n  end\r\n  \r\n  vim.wait(TIMEOUT, function()\r\n    return result ~= nil\r\n  end)\r\n  \r\n  if result.code ~= 0 then\r\n    return nil, result.stdout or 'Download failed'\r\n  end\r\n  \r\n  return result.stdout\r\n```",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T14:40:23Z",
            "diff_hunk": "@@ -0,0 +1,53 @@\n+local M = {}\n+\n+--- Downloads a file from the given URL to a specified location.\n+---\n+--- @param url string The URL to download from.\n+--- @param download_location string The file path where the content should be saved.\n+--- @param opts? table Optional parameters:\n+---   - on_exit (function|nil): Called when the download completes or fails. Receives error string or nil.\n+---   - verbose (boolean|nil): Enables verbose curl output.\n+---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\n+---\n+--- @return nil\n+function M.download(url, download_location, opts)\n+  vim.validate({\n+    url = { url, 'string' },\n+    download_location = { download_location, 'string' },\n+    opts = { opts, 'table', true },\n+  })\n+\n+  opts = opts or {}\n+  local retry = opts.retry or 3\n+\n+  local args = { 'curl' }\n+\n+  if opts.verbose then\n+    table.insert(args, '--verbose')\n+  else\n+    vim.list_extend(args, { '--silent', '--show-error', '--fail' })\n+  end\n+\n+  vim.list_extend(args, {\n+    '--retry',\n+    tostring(retry),\n+    '--location',\n+    '--output',\n+    download_location,\n+    url,\n+  })\n+\n+  vim.system(args, { text = true }, function(res)\n+    if res.code ~= 0 or res.stderr ~= '' then\n+      if opts.on_exit then\n+        opts.on_exit(res.stderr ~= '' and res.stderr or 'Download failed')\n+      end\n+      return\n+    end\n+    if opts.on_exit then\n+      opts.on_exit(nil)\n+    end\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083543908",
            "id": 2083543908,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58MFtk",
            "original_commit_id": "6a84f9dc5931164a9330283adff68749384b2ba3",
            "original_line": 50,
            "original_position": 50,
            "original_start_line": 40,
            "path": "runtime/lua/vim/net.lua",
            "position": null,
            "pull_request_review_id": 2831417010,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083543908/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-11T14:40:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083543908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083552778"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083552778"
                }
            },
            "author_association": "MEMBER",
            "body": "You need to change these to lower-case, otherwise `var:upper` does nothing.",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T15:17:24Z",
            "diff_hunk": "@@ -406,6 +406,56 @@ local function check_external_tools()\n   else\n     health.warn('ripgrep not available')\n   end\n+  if vim.fn.executable('curl') == 1 then\n+    local curl_path = vim.fn.exepath('curl')\n+    local curl_out = vim.fn.system({ curl_path, '--version' })\n+    local curl_version = vim.fn.matchstr(curl_out, [[^curl[^\\n]*]])\n+\n+    if vim.v.shell_error == 0 then\n+      local lines = {}\n+      table.insert(lines, string.format('%s (%s)', curl_version, curl_path))\n+\n+      for line in vim.gsplit(curl_out, '\\n', { plain = true }) do\n+        if line ~= '' and not line:match('^curl') then\n+          table.insert(lines, line)\n+        end\n+      end\n+\n+      -- Add subtitle only if any env var is present\n+      local added_env_header = false\n+      for _, var in ipairs({\n+        'CURL_CA_BUNDLE',\n+        'CURL_HOME',\n+        'CURL_SSL_BACKEND',\n+        'SSL_CERT_DIR',\n+        'SSL_CERT_FILE',\n+        'HTTPS_PROXY',\n+        'HTTP_PROXY',\n+        'ALL_PROXY',\n+        'NO_PROXY',",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083552778",
            "id": 2083552778,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58MH4K",
            "original_commit_id": "a13b163bcdc248959e11c3e803f240ec599f62bc",
            "original_line": 435,
            "original_position": 30,
            "original_start_line": 427,
            "path": "runtime/lua/vim/health/health.lua",
            "position": null,
            "pull_request_review_id": 2831428127,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083552778/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-11T15:17:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083552778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2083554906"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083554906"
                }
            },
            "author_association": "NONE",
            "body": "I will add the synchronous behaviour, thank you.\r\n\r\n> Also I think we may want a variation of this function where the output is passed back as a string. For this case on_exit should have type fun(data?: string, err?: string)\r\n\r\nYes, I believe we should implement this in a future PR as a separate function, something like `vim.net.request()`.\r\n",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-05-11T15:26:32Z",
            "diff_hunk": "@@ -0,0 +1,53 @@\n+local M = {}\n+\n+--- Downloads a file from the given URL to a specified location.\n+---\n+--- @param url string The URL to download from.\n+--- @param download_location string The file path where the content should be saved.\n+--- @param opts? table Optional parameters:\n+---   - on_exit (function|nil): Called when the download completes or fails. Receives error string or nil.\n+---   - verbose (boolean|nil): Enables verbose curl output.\n+---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\n+---\n+--- @return nil\n+function M.download(url, download_location, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2083554906",
            "id": 2083554906,
            "in_reply_to_id": 2083542570,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM58MIZa",
            "original_commit_id": "6a84f9dc5931164a9330283adff68749384b2ba3",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": 3,
            "path": "runtime/lua/vim/net.lua",
            "position": null,
            "pull_request_review_id": 2831429939,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083554906/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-05-11T15:26:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2083554906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2150311254"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150311254"
                }
            },
            "author_association": "MEMBER",
            "body": "Also note the change of `download_location` -> `output`. Could be `output_path` if that is clearer.",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-06-16T15:35:55Z",
            "diff_hunk": "@@ -0,0 +1,53 @@\n+local M = {}\n+\n+--- Downloads a file from the given URL to a specified location.\n+---\n+--- @param url string The URL to download from.\n+--- @param download_location string The file path where the content should be saved.\n+--- @param opts? table Optional parameters:\n+---   - on_exit (function|nil): Called when the download completes or fails. Receives error string or nil.\n+---   - verbose (boolean|nil): Enables verbose curl output.\n+---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\n+---\n+--- @return nil\n+function M.download(url, download_location, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2150311254",
            "id": 2150311254,
            "in_reply_to_id": 2083542570,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6AKyVW",
            "original_commit_id": "6a84f9dc5931164a9330283adff68749384b2ba3",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": 3,
            "path": "runtime/lua/vim/net.lua",
            "position": null,
            "pull_request_review_id": 2932626192,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150311254/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-06-16T15:35:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150311254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2150318676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150318676"
                }
            },
            "author_association": "MEMBER",
            "body": "It is probably worth returning something like:\r\n\r\n```lua\r\nreturn {\r\n  cancel = function()\r\n    sys_obj:kill('SIGKILL')\r\n  end\r\n}\r\n```\r\n\r\nFor the async case.",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-06-16T15:39:45Z",
            "diff_hunk": "@@ -0,0 +1,67 @@\n+local M = {}\n+\n+--- Downloads a file from the given URL to a specified location.\n+---\n+--- @param url string The URL to download from.\n+--- @param download_location string The file path where the content should be saved.\n+--- @param opts? table Optional parameters:\n+---   - verbose (boolean|nil): Enables verbose curl output.\n+---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\n+--- @param on_exit? fun(err?: string) Optional callback. If omitted, runs synchronously.\n+---\n+--- @return boolean|nil, string? True on success (sync); false/nil and error message on failure.\n+function M.download(url, download_location, opts, on_exit)\n+  vim.validate({\n+    url = { url, 'string' },\n+    download_location = { download_location, 'string' },\n+    opts = { opts, 'table', true },\n+    on_exit = { on_exit, 'function', true },\n+  })\n+\n+  opts = opts or {}\n+  local retry = opts.retry or 3\n+\n+  local args = { 'curl' }\n+\n+  if opts.verbose then\n+    table.insert(args, '--verbose')\n+  else\n+    vim.list_extend(args, { '--silent', '--show-error', '--fail' })\n+  end\n+\n+  vim.list_extend(args, {\n+    '--retry',\n+    tostring(retry),\n+    '--location',\n+    '--output',\n+    download_location,\n+    url,\n+  })\n+\n+  if on_exit then\n+    vim.system(args, { text = true }, function(res)\n+      if res.code ~= 0 or res.stderr ~= '' then\n+        on_exit(res.stderr ~= '' and res.stderr or 'Download failed')\n+      else\n+        on_exit(nil)\n+      end\n+    end)\n+  else\n+    local job = vim.system(args, { text = true })\n+    local result = job:wait()\n+\n+    if result.code ~= 0 then\n+      local err = result.stderr\n+      if err == '' then\n+        err = string.format('Download failed (exit code %d)', result.code)\n+      else\n+        err = string.format('%s (exit code %d)', err, result.code)\n+      end\n+      return false, err\n+    end\n+\n+    return true\n+  end\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2150318676",
            "id": 2150318676,
            "line": 65,
            "node_id": "PRRC_kwDOAPphoM6AK0JU",
            "original_commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "original_line": 65,
            "original_position": 65,
            "original_start_line": null,
            "path": "runtime/lua/vim/net.lua",
            "position": 65,
            "pull_request_review_id": 2932637816,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150318676/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-16T15:40:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150318676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/33964#discussion_r2150322910"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/33964"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150322910"
                }
            },
            "author_association": "MEMBER",
            "body": "What effect does this have? Wouldn't the verbose output be in `res.stdout`?",
            "commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "created_at": "2025-06-16T15:41:56Z",
            "diff_hunk": "@@ -0,0 +1,67 @@\n+local M = {}\n+\n+--- Downloads a file from the given URL to a specified location.\n+---\n+--- @param url string The URL to download from.\n+--- @param download_location string The file path where the content should be saved.\n+--- @param opts? table Optional parameters:\n+---   - verbose (boolean|nil): Enables verbose curl output.\n+---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\n+--- @param on_exit? fun(err?: string) Optional callback. If omitted, runs synchronously.\n+---\n+--- @return boolean|nil, string? True on success (sync); false/nil and error message on failure.\n+function M.download(url, download_location, opts, on_exit)\n+  vim.validate({\n+    url = { url, 'string' },\n+    download_location = { download_location, 'string' },\n+    opts = { opts, 'table', true },\n+    on_exit = { on_exit, 'function', true },\n+  })\n+\n+  opts = opts or {}\n+  local retry = opts.retry or 3\n+\n+  local args = { 'curl' }\n+\n+  if opts.verbose then\n+    table.insert(args, '--verbose')",
            "html_url": "https://github.com/neovim/neovim/pull/33964#discussion_r2150322910",
            "id": 2150322910,
            "line": 27,
            "node_id": "PRRC_kwDOAPphoM6AK1Le",
            "original_commit_id": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
            "original_line": 27,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/net.lua",
            "position": 27,
            "pull_request_review_id": 2932644220,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150322910/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-16T15:41:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150322910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Needs docs and a news entry. It would help if the proposed API (for several representative use cases) was added to the PR description.",
            "created_at": "2025-05-11T09:49:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2869660829",
            "id": 2869660829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rC4yd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869660829/reactions"
            },
            "updated_at": "2025-05-11T09:49:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869660829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We should also add a health check for this (like we do for `rg`); see https://github.com/nvim-treesitter/nvim-treesitter/blob/e0d029bfdc1ea0da00356203b5afbe70ca9c74c1/lua/nvim-treesitter/health.lua#L87-L93\r\n\r\nHere it's important to show the _full_ version output, including all build flags (since there are severely gimped `curl` versions out there that can lead to hard to diagnose problems). We possibly want to also print all relevant environment variables that affect `curl` operations.",
            "created_at": "2025-05-11T09:54:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2869662798",
            "id": 2869662798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rC5RO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869662798/reactions"
            },
            "updated_at": "2025-05-11T09:55:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869662798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You need to add the new module to https://github.com/neovim/neovim/blob/59c45b22d9616cda448b3c3dddd3e9274c830ca3/src/gen/gen_vimdoc.lua#L135",
            "created_at": "2025-05-11T11:52:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2869785801",
            "id": 2869785801,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rDXTJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869785801/reactions"
            },
            "updated_at": "2025-05-11T11:52:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869785801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You need to add the new module to\r\n> \r\n> https://github.com/neovim/neovim/blob/59c45b22d9616cda448b3c3dddd3e9274c830ca3/src/gen/gen_vimdoc.lua#L135\r\n\r\nThank you! I’ve been struggling to get the docs right (embarrassingly).\r\n\r\nOn my side I still have pending\r\n- `verbose` flag (agree on this one for sure)\r\n- `retry` flag (idem)",
            "created_at": "2025-05-11T11:54:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2869786621",
            "id": 2869786621,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rDXf9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869786621/reactions"
            },
            "updated_at": "2025-05-11T11:54:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869786621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@clason Sorry to bother, but could you guide me a bit on the current CI issue? For some reason it's only failing on the `test / ubuntu asan clang unittest` unit tests...",
            "created_at": "2025-05-11T13:57:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2869870880",
            "id": 2869870880,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rDsEg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869870880/reactions"
            },
            "updated_at": "2025-05-11T13:57:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869870880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Shouldn't something like this at least support a progress report and cancellation mechanism? Otherwise, plugin authors will end up reinventing a more functional version of this function anyway ",
            "created_at": "2025-05-11T15:08:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2869929836",
            "id": 2869929836,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rD6ds",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869929836/reactions"
            },
            "updated_at": "2025-05-11T15:08:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869929836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/80050619?v=4",
                "events_url": "https://api.github.com/users/miroshQa/events{/privacy}",
                "followers_url": "https://api.github.com/users/miroshQa/followers",
                "following_url": "https://api.github.com/users/miroshQa/following{/other_user}",
                "gists_url": "https://api.github.com/users/miroshQa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/miroshQa",
                "id": 80050619,
                "login": "miroshQa",
                "node_id": "MDQ6VXNlcjgwMDUwNjE5",
                "organizations_url": "https://api.github.com/users/miroshQa/orgs",
                "received_events_url": "https://api.github.com/users/miroshQa/received_events",
                "repos_url": "https://api.github.com/users/miroshQa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/miroshQa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miroshQa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/miroshQa",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As a plugin author, I don't need it. Let's keep this to MVP.",
            "created_at": "2025-05-11T15:10:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2869932104",
            "id": 2869932104,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rD7BI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869932104/reactions"
            },
            "updated_at": "2025-05-11T15:10:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2869932104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "would it be possible to also introduce an auth flag via either to authenticate using either basic auth or via token ?\r\nEither that or an option to provide extra arguments directly to `curl`",
            "created_at": "2025-05-12T08:22:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2871398513",
            "id": 2871398513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rJhBx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2871398513/reactions"
            },
            "updated_at": "2025-05-12T08:22:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2871398513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4576770?v=4",
                "events_url": "https://api.github.com/users/mike325/events{/privacy}",
                "followers_url": "https://api.github.com/users/mike325/followers",
                "following_url": "https://api.github.com/users/mike325/following{/other_user}",
                "gists_url": "https://api.github.com/users/mike325/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mike325",
                "id": 4576770,
                "login": "mike325",
                "node_id": "MDQ6VXNlcjQ1NzY3NzA=",
                "organizations_url": "https://api.github.com/users/mike325/orgs",
                "received_events_url": "https://api.github.com/users/mike325/received_events",
                "repos_url": "https://api.github.com/users/mike325/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mike325/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mike325/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mike325",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, at least not in this PR. You can (and should) use environment variables for local configuration.\r\n\r\n**Reminder:** This is meant to be a simple function mainly for the (internal!) purpose of downloading spell files, WASM parsers, and bootstrapping plugin managers. It is _not_ meant to replace every `vim.system` call to `curl`, otherwise it'll end up with the exact same complexity and nothing is gained. So \"advanced usage\" like that is out of scope here and will require a manual `vim.system` call (which is easy enough). What exactly \"advanced\" means can be discussed, but not here -- this PR is strictly scoped to the minimal set of flags required for the stated purpose.",
            "created_at": "2025-05-12T08:25:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2871411849",
            "id": 2871411849,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rJkSJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2871411849/reactions"
            },
            "updated_at": "2025-05-12T08:30:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2871411849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hello, in the last push I implemented as per the feedback:\r\n- async/sync behaviour based on the `on_exit` argument along the corresponding functional tests\r\n- health check for env vars upper or lowercase as per curl documentation\r\n\r\nI see that is failing on `test/functional/terminal/tui_spec.lua` for mac os intel, any help with that?",
            "created_at": "2025-05-12T18:11:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2873516673",
            "id": 2873516673,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rRmKB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2873516673/reactions"
            },
            "updated_at": "2025-05-12T18:11:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2873516673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> for the (internal!) purpose of downloading spell files, WASM parsers\r\n\r\nSorry if this is off-topic, but does that mean Nvim has plan to include the plugin `nvim-treesitter` by default?",
            "created_at": "2025-05-13T00:49:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/33964#issuecomment-2874680884",
            "id": 2874680884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
            "node_id": "IC_kwDOAPphoM6rWCY0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2874680884/reactions"
            },
            "updated_at": "2025-05-13T06:13:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2874680884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111893501?v=4",
                "events_url": "https://api.github.com/users/brianhuster/events{/privacy}",
                "followers_url": "https://api.github.com/users/brianhuster/followers",
                "following_url": "https://api.github.com/users/brianhuster/following{/other_user}",
                "gists_url": "https://api.github.com/users/brianhuster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/brianhuster",
                "id": 111893501,
                "login": "brianhuster",
                "node_id": "U_kgDOBqtb_Q",
                "organizations_url": "https://api.github.com/users/brianhuster/orgs",
                "received_events_url": "https://api.github.com/users/brianhuster/received_events",
                "repos_url": "https://api.github.com/users/brianhuster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/brianhuster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/brianhuster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/brianhuster",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33964/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/33964/commits",
    "created_at": "2025-05-11T09:43:27Z",
    "diff_url": "https://github.com/neovim/neovim/pull/33964.diff",
    "draft": false,
    "head": {
        "label": "tampueroc:feature/vim-net-download-23232",
        "ref": "feature/vim-net-download-23232",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tampueroc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tampueroc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tampueroc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tampueroc/neovim/branches{/branch}",
            "clone_url": "https://github.com/tampueroc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tampueroc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tampueroc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tampueroc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tampueroc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tampueroc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tampueroc/neovim/contributors",
            "created_at": "2025-05-01T16:36:34Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tampueroc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tampueroc/neovim/downloads",
            "events_url": "https://api.github.com/repos/tampueroc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tampueroc/neovim/forks",
            "full_name": "tampueroc/neovim",
            "git_commits_url": "https://api.github.com/repos/tampueroc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tampueroc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tampueroc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tampueroc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/tampueroc/neovim/hooks",
            "html_url": "https://github.com/tampueroc/neovim",
            "id": 976180439,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tampueroc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tampueroc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tampueroc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tampueroc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tampueroc/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/tampueroc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tampueroc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tampueroc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOi9U1w",
            "notifications_url": "https://api.github.com/repos/tampueroc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tampueroc/neovim/pulls{/number}",
            "pushed_at": "2025-05-25T10:21:36Z",
            "releases_url": "https://api.github.com/repos/tampueroc/neovim/releases{/id}",
            "size": 311993,
            "ssh_url": "git@github.com:tampueroc/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/tampueroc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tampueroc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tampueroc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tampueroc/neovim/subscription",
            "svn_url": "https://github.com/tampueroc/neovim",
            "tags_url": "https://api.github.com/repos/tampueroc/neovim/tags",
            "teams_url": "https://api.github.com/repos/tampueroc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tampueroc/neovim/git/trees{/sha}",
            "updated_at": "2025-05-01T16:36:34Z",
            "url": "https://api.github.com/repos/tampueroc/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8e20a336c2e83354d1fc58ea5926c2247ae2d596",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
            "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
            "followers_url": "https://api.github.com/users/tampueroc/followers",
            "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
            "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tampueroc",
            "id": 46233260,
            "login": "tampueroc",
            "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
            "organizations_url": "https://api.github.com/users/tampueroc/orgs",
            "received_events_url": "https://api.github.com/users/tampueroc/received_events",
            "repos_url": "https://api.github.com/users/tampueroc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tampueroc",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/33964",
    "id": 2512033770,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33964",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "8077dd4c92cbef9cc2cbe75c75d6c95f22a3b090",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6Vupfq",
    "number": 33964,
    "patch_url": "https://github.com/neovim/neovim/pull/33964.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/33964/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8e20a336c2e83354d1fc58ea5926c2247ae2d596",
    "title": "feat(lua): add minimal vim.net.download wrapper using curl",
    "updated_at": "2025-06-16T15:41:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/33964",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
        "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
        "followers_url": "https://api.github.com/users/tampueroc/followers",
        "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
        "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tampueroc",
        "id": 46233260,
        "login": "tampueroc",
        "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
        "organizations_url": "https://api.github.com/users/tampueroc/orgs",
        "received_events_url": "https://api.github.com/users/tampueroc/received_events",
        "repos_url": "https://api.github.com/users/tampueroc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tampueroc",
        "user_view_type": "public"
    }
}