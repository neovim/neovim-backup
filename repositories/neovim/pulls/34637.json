{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34637/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34637/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34637"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34637"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34637/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/6aa654a64fd396f3316d9b15ab63159290238625"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6150,
            "forks_count": 6150,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1963,
            "open_issues_count": 1963,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-30T23:58:06Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 330464,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90708,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-07-01T02:27:30Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90708,
            "watchers_count": 90708,
            "web_commit_signoff_required": false
        },
        "sha": "5d06eade2599ccf378b284eb7aeec38c0256ec9e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Implements [on-type formatting](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.18/specification/#textDocument_onTypeFormatting) using a `vim.on_key()` approach to listen to typed keys. It will listen to keys on the *left hand side* of mappings. The `on_key` callback is cleared when detaching the last on-type formatting client.\r\n\r\nNote that `InsertCharPre` would be nice because we could scope the key listener per-buffer, but it currently is not fired when inserting a new line, which is a blocker for this particular feature.\r\n\r\nCloses #21191",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2165069136"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2165069136"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't feel like this needs its own module. But if we don't want to add stuff to `lsp/buf.lua` then I would create a new `formatting.lua` module and move all the formatting handlers there, not make this on-type exclusive.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-24T22:45:59Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2165069136",
            "id": 2165069136,
            "line": 2253,
            "node_id": "PRRC_kwDOAPphoM6BDFVQ",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2253,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 5,
            "pull_request_review_id": 2955608008,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2165069136/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-24T22:50:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2165069136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2165073662"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2165073662"
                }
            },
            "author_association": "MEMBER",
            "body": "Although dealing with a lot of formatting providers can be funky, we do handle multiple clients in `vim.lsp.buf.format` and I don't think we should differ from that here.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-24T22:50:10Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2165073662",
            "id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BDGb-",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2955608008,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2165073662/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-24T22:50:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2165073662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166026376"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166026376"
                }
            },
            "author_association": "MEMBER",
            "body": "Multiple clients are also handled here :+1: using an approach based off `vim.lsp.buf.format`. It's just that clients/buffers are registered one at a time, like in `completion.lua` or `semantic_tokens.lua`",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T07:40:57Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166026376",
            "id": 2166026376,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BGvCI",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2957016972,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166026376/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T08:04:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166026376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166031262"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166031262"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure; I don't mind adding stuff to buf.lua, I guess I just made a new module because I didn't really know how to add this without that :sweat_smile: I should've asked first. How should this be done- maybe `vim.lsp.buf.start_on_type_formatting(bufnr, client_id)`? And then I could prefix this module with an underscore and just import it in `buf.lua`",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T07:43:34Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166031262",
            "id": 2166031262,
            "in_reply_to_id": 2165069136,
            "line": 2253,
            "node_id": "PRRC_kwDOAPphoM6BGwOe",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2253,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 5,
            "pull_request_review_id": 2957024330,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166031262/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T07:59:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166031262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166075857"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166075857"
                }
            },
            "author_association": "MEMBER",
            "body": "TBH I don't think we have documentation around the architecture of new LSP features, and so my comments come from personal takes + previous LSP bikeshedding.\r\n\r\nLet me invoke @lewis6991 and @justinmk for the API design here.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T08:06:37Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166075857",
            "id": 2166075857,
            "in_reply_to_id": 2165069136,
            "line": 2253,
            "node_id": "PRRC_kwDOAPphoM6BG7HR",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2253,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 5,
            "pull_request_review_id": 2957094030,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166075857/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T08:06:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166075857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166085940"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166085940"
                }
            },
            "author_association": "MEMBER",
            "body": "Personally, `start_on_type_formatting` is too much of a mouthful, so I would prefer `lsp.format.enable()` (with proper options) here, mirroring the `lsp.completion` module. (Formatting seems to be on the same level as completion, conceptually.)",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T08:11:54Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166085940",
            "id": 2166085940,
            "in_reply_to_id": 2165069136,
            "line": 2253,
            "node_id": "PRRC_kwDOAPphoM6BG9k0",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2253,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 5,
            "pull_request_review_id": 2957110428,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166085940/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T08:15:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166085940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166086027"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166086027"
                }
            },
            "author_association": "MEMBER",
            "body": "Understood. Given that the current LSP formatting API that we have only exposes a `format` function, I find it a tad confusing to add a new formatting module with `start` and `stop` functionality.\r\n\r\nIn fact I'm now wondering: Why not just add this into the existing `vim.lsp.buf.format` implementation? Not a suggestion just throwing random questions.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T08:11:57Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166086027",
            "id": 2166086027,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BG9mL",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2957110552,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166086027/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T08:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166086027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166091412"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166091412"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should keep this separate -- distinguishing \"do $THING _now\" and \"set up autocommands for $THING to happen automatically\" are quite different things.\r\n\r\nNot opposed to `vim.lsp.buf.format_enable` though. (Should be called `enable` to match completion and LSP in general.)",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T08:14:39Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166091412",
            "id": 2166091412,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BG-6U",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2957119114,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166091412/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T08:14:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166091412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166161878"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166161878"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is it feasible to add something like `vim.lsp.enable_feature({feature})`? It seems that there are a lot of features that need to be enabled, not just being called like functions in `vim.lsp.buf`, unless creating a new module for every single feature is acceptable(though I don't oppose it ).",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T08:43:12Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166161878",
            "id": 2166161878,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BHQHW",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2957244777,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166161878/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T08:43:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166161878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166175192"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166175192"
                }
            },
            "author_association": "MEMBER",
            "body": "If anything, this should be an option to `vim.lsp.enable`. That would be a general refactor, though; we should not switch strategies from one feature to the next. (I am skeptical, though, of such a \"one size fits all\" approach.)",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T08:48:01Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166175192",
            "id": 2166175192,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BHTXY",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2957267116,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166175192/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T08:48:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166175192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166188402"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166188402"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`enable()` has an important use for triggering on and off. A common use is `vim.lsp.inlay_hint.enable(vim.lsp.inlay_hint.is_enabled()`. It is indeed difficult to continue using the existing API.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T08:53:27Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166188402",
            "id": 2166188402,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BHWly",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2957288089,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166188402/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T08:53:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166188402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166348824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166348824"
                }
            },
            "author_association": "MEMBER",
            "body": "> Not opposed to vim.lsp.buf.format_enable though. (Should be called enable to match completion and LSP in general.)\r\n\r\nVia callable metatable we could also have both `vim.lsp.buf.format()` and `vim.lsp.buf.format.enable({ on_save = true, on_type = true })`. (Just bringing it up, not sure it is a good idea)",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T10:10:34Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166348824",
            "id": 2166348824,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BH9wY",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2957550084,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166348824/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T10:10:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166348824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166633617"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166633617"
                }
            },
            "author_association": "MEMBER",
            "body": "That would be nice, the only downside I can think of is that it will be harder to enable/disable for specific buffers/clients",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T12:47:00Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166633617",
            "id": 2166633617,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BJDSR",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958019520,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166633617/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T12:47:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166633617",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166708809"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166708809"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe we could add buf and client_id fields which, when nil, enable for all buffers/clients",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T13:22:42Z",
            "diff_hunk": "@@ -2249,6 +2249,35 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166708809",
            "id": 2166708809,
            "in_reply_to_id": 2165073662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BJVpJ",
            "original_commit_id": "b41665c12b4ba0cc87482880923a861a77a97900",
            "original_line": 2255,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958143079,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166708809/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T13:22:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166708809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166760465"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166760465"
                }
            },
            "author_association": "MEMBER",
            "body": "`:help dev-naming` i would expect a `enable(enable:boolean)` pattern, not a stop() function\r\n\r\nalso agree that if we want a new module then it seems attractive to have a [format module](https://github.com/neovim/neovim/pull/34637#discussion_r2165069136) for formatting-related things. (We also discussed a `vim.lsp.workspace` module for workspace-related thing).\r\n\r\nBut ideally I think [`vim.lsp.enable` or a similar](https://github.com/neovim/neovim/pull/34637#discussion_r2166175192) top-level demuxer seems to be badly needed, instead of numerous `vim.lsp.x.enable()` things.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T13:44:45Z",
            "diff_hunk": "@@ -2249,6 +2249,34 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*\n+    Enables on-type formatting by the given language client for the given\n+    buffer. The following is a practical usage example: >lua\n+        vim.lsp.start({\n+          name = 'ts_ls',\n+          cmd = …,\n+          on_attach = function(client, bufnr)\n+            vim.lsp.on_type_formatting.start(bufnr, client.id)\n+          end,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {bufnr}      (`integer`) Buffer handle, or 0 for current.\n+      • {client_id}  (`integer`) Client ID.\n+\n+stop({bufnr}, {client_id})                 *vim.lsp.on_type_formatting.stop()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166760465",
            "id": 2166760465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BJiQR",
            "original_commit_id": "d12bc63c892a105ffc2e7e64f561a0dbae4e12b9",
            "original_line": 2271,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958225365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166760465/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T13:45:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166760465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166950746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166950746"
                }
            },
            "author_association": "MEMBER",
            "body": "It's straightforward to extend `vim.lsp.enable({'server'}, {feature1 = true, feature2 = { option = a }})`, which I think would be the least intrusive option. Would need a bit of care about defaults and how to handle buffer-specific settings (probably by allowing `feature` to be a command that resolves the desired settings -- again, needs a bit of thinking what this function needs to be passed to; maybe `bufnr` is enough).\r\n\r\nI envision a very similar interface for `vim.treesitter` (where `feature` could be highlight, folds, indents, ...).",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T14:59:29Z",
            "diff_hunk": "@@ -2249,6 +2249,34 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*\n+    Enables on-type formatting by the given language client for the given\n+    buffer. The following is a practical usage example: >lua\n+        vim.lsp.start({\n+          name = 'ts_ls',\n+          cmd = …,\n+          on_attach = function(client, bufnr)\n+            vim.lsp.on_type_formatting.start(bufnr, client.id)\n+          end,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {bufnr}      (`integer`) Buffer handle, or 0 for current.\n+      • {client_id}  (`integer`) Client ID.\n+\n+stop({bufnr}, {client_id})                 *vim.lsp.on_type_formatting.stop()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166950746",
            "id": 2166950746,
            "in_reply_to_id": 2166760465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BKQta",
            "original_commit_id": "d12bc63c892a105ffc2e7e64f561a0dbae4e12b9",
            "original_line": 2271,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958558377,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166950746/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T14:59:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166950746",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166959236"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166959236"
                }
            },
            "author_association": "MEMBER",
            "body": "Would this be possible though since we already committed to a signature like `vim.lsp.enable({'server'}, false)` (to stop the server)? I do agree that this would be best though, *if* we can make it work",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T15:03:23Z",
            "diff_hunk": "@@ -2249,6 +2249,34 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*\n+    Enables on-type formatting by the given language client for the given\n+    buffer. The following is a practical usage example: >lua\n+        vim.lsp.start({\n+          name = 'ts_ls',\n+          cmd = …,\n+          on_attach = function(client, bufnr)\n+            vim.lsp.on_type_formatting.start(bufnr, client.id)\n+          end,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {bufnr}      (`integer`) Buffer handle, or 0 for current.\n+      • {client_id}  (`integer`) Client ID.\n+\n+stop({bufnr}, {client_id})                 *vim.lsp.on_type_formatting.stop()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166959236",
            "id": 2166959236,
            "in_reply_to_id": 2166760465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BKSyE",
            "original_commit_id": "d12bc63c892a105ffc2e7e64f561a0dbae4e12b9",
            "original_line": 2271,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958572461,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166959236/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T15:03:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166959236",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166963356"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166963356"
                }
            },
            "author_association": "MEMBER",
            "body": "Could dispatch on the `type` of the second argument. I don't much like multiple dispatch, but here it would kinda work (`features = false` == \"no features\" == \"stop the server\").",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T15:05:25Z",
            "diff_hunk": "@@ -2249,6 +2249,34 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*\n+    Enables on-type formatting by the given language client for the given\n+    buffer. The following is a practical usage example: >lua\n+        vim.lsp.start({\n+          name = 'ts_ls',\n+          cmd = …,\n+          on_attach = function(client, bufnr)\n+            vim.lsp.on_type_formatting.start(bufnr, client.id)\n+          end,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {bufnr}      (`integer`) Buffer handle, or 0 for current.\n+      • {client_id}  (`integer`) Client ID.\n+\n+stop({bufnr}, {client_id})                 *vim.lsp.on_type_formatting.stop()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166963356",
            "id": 2166963356,
            "in_reply_to_id": 2166760465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BKTyc",
            "original_commit_id": "d12bc63c892a105ffc2e7e64f561a0dbae4e12b9",
            "original_line": 2271,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958579680,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166963356/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T15:05:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166963356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166965037"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166965037"
                }
            },
            "author_association": "MEMBER",
            "body": "Ceterum censeo: Mixing starting/stopping and enabling autostarting in one function was a domain error.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T15:06:14Z",
            "diff_hunk": "@@ -2249,6 +2249,34 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*\n+    Enables on-type formatting by the given language client for the given\n+    buffer. The following is a practical usage example: >lua\n+        vim.lsp.start({\n+          name = 'ts_ls',\n+          cmd = …,\n+          on_attach = function(client, bufnr)\n+            vim.lsp.on_type_formatting.start(bufnr, client.id)\n+          end,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {bufnr}      (`integer`) Buffer handle, or 0 for current.\n+      • {client_id}  (`integer`) Client ID.\n+\n+stop({bufnr}, {client_id})                 *vim.lsp.on_type_formatting.stop()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166965037",
            "id": 2166965037,
            "in_reply_to_id": 2166760465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BKUMt",
            "original_commit_id": "d12bc63c892a105ffc2e7e64f561a0dbae4e12b9",
            "original_line": 2271,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958582359,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166965037/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T15:06:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166965037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2166999655"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166999655"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Just sharing some ideas on how this could be implemented, because when implementing #34639, I thought it might be suitable to use a unified API like `vim.lsp.enable` to handle this kind of thing. \r\n\r\nI think we can use vim variables like `vim.b` to mark whether a buffer has a specific feature enabled. This way, we can manage this kind of data with unified logic in one place. Otherwise, variables like `enabled` are usually stored in private variables (various `bufstate`), making it impossible to access them outside modules like `vim.lsp.inlay_hint`.\r\n\r\nAs for enabling per client or server, unless we implement it in a somewhat hacky way by \"disabling specific client features through controlling client capabilities,\" it would be quite troublesome; the implementation of certain features must be changed. I have tried doing this before, see #28521.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T15:22:13Z",
            "diff_hunk": "@@ -2249,6 +2249,34 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*\n+    Enables on-type formatting by the given language client for the given\n+    buffer. The following is a practical usage example: >lua\n+        vim.lsp.start({\n+          name = 'ts_ls',\n+          cmd = …,\n+          on_attach = function(client, bufnr)\n+            vim.lsp.on_type_formatting.start(bufnr, client.id)\n+          end,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {bufnr}      (`integer`) Buffer handle, or 0 for current.\n+      • {client_id}  (`integer`) Client ID.\n+\n+stop({bufnr}, {client_id})                 *vim.lsp.on_type_formatting.stop()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2166999655",
            "id": 2166999655,
            "in_reply_to_id": 2166760465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BKcpn",
            "original_commit_id": "d12bc63c892a105ffc2e7e64f561a0dbae4e12b9",
            "original_line": 2271,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958638631,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166999655/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T15:22:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2166999655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2167013306"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2167013306"
                }
            },
            "author_association": "MEMBER",
            "body": "That sounds perfect. I think if someone really doesn't want feature \"foo\" for server \"bar\", they can delete the corresponding server capability of \"bar\", like how semantic tokens disabling works now.\r\n\r\n(I don't think it will ever be the case that somebody wants to disable feature \"foo\" for server \"bar\" only in buffer \"x\".)",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T15:28:35Z",
            "diff_hunk": "@@ -2249,6 +2249,34 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*\n+    Enables on-type formatting by the given language client for the given\n+    buffer. The following is a practical usage example: >lua\n+        vim.lsp.start({\n+          name = 'ts_ls',\n+          cmd = …,\n+          on_attach = function(client, bufnr)\n+            vim.lsp.on_type_formatting.start(bufnr, client.id)\n+          end,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {bufnr}      (`integer`) Buffer handle, or 0 for current.\n+      • {client_id}  (`integer`) Client ID.\n+\n+stop({bufnr}, {client_id})                 *vim.lsp.on_type_formatting.stop()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2167013306",
            "id": 2167013306,
            "in_reply_to_id": 2166760465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BKf-6",
            "original_commit_id": "d12bc63c892a105ffc2e7e64f561a0dbae4e12b9",
            "original_line": 2271,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958663548,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2167013306/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T15:29:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2167013306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2167033866"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2167033866"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes, I have to say that the server itself usually provides a configuration (for us, it's `client.settings`) to permanently disable a specific feature, like inlay hints. Implementing this feature is somewhat difficult, and there are too many ways to achieve it already, so the cost would be pretty high if just for API consistency, like what I tried in that PR.",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-25T15:38:30Z",
            "diff_hunk": "@@ -2249,6 +2249,34 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+start({bufnr}, {client_id})               *vim.lsp.on_type_formatting.start()*\n+    Enables on-type formatting by the given language client for the given\n+    buffer. The following is a practical usage example: >lua\n+        vim.lsp.start({\n+          name = 'ts_ls',\n+          cmd = …,\n+          on_attach = function(client, bufnr)\n+            vim.lsp.on_type_formatting.start(bufnr, client.id)\n+          end,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {bufnr}      (`integer`) Buffer handle, or 0 for current.\n+      • {client_id}  (`integer`) Client ID.\n+\n+stop({bufnr}, {client_id})                 *vim.lsp.on_type_formatting.stop()*",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2167033866",
            "id": 2167033866,
            "in_reply_to_id": 2166760465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6BKlAK",
            "original_commit_id": "d12bc63c892a105ffc2e7e64f561a0dbae4e12b9",
            "original_line": 2271,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2958697040,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2167033866/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-25T15:38:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2167033866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34637#discussion_r2169100442"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34637"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2169100442"
                }
            },
            "author_association": "MEMBER",
            "body": "similar to https://github.com/neovim/neovim/pull/34388#discussion_r2168696297 this should probably be kwargs style\r\n\r\n`:help dev-patterns`",
            "commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "created_at": "2025-06-26T13:38:22Z",
            "diff_hunk": "@@ -2249,6 +2249,28 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n+==============================================================================\n+Lua module: vim.lsp.on_type_formatting                *lsp-on_type_formatting*\n+\n+                                         *vim.lsp.on_type_formatting.enable()*\n+enable({enable}, {bufnr}, {client_id})",
            "html_url": "https://github.com/neovim/neovim/pull/34637#discussion_r2169100442",
            "id": 2169100442,
            "line": 2256,
            "node_id": "PRRC_kwDOAPphoM6BSdia",
            "original_commit_id": "6aa654a64fd396f3316d9b15ab63159290238625",
            "original_line": 2256,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 8,
            "pull_request_review_id": 2962168181,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2169100442/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-26T13:38:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2169100442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> This PR enables this feature by default. Do we want that?\r\n\r\nNo. Formatting (and especially when done when typing) can be quite disruptive and it should be opt-in.\r\n\r\nAnd not that we should care but [VS Code disables this be default](https://github.com/microsoft/vscode/blob/7fdfadf2ab6ff4f4b15e50ddb1b5c6deccaeb4ae/src/vs/editor/common/config/editorOptions.ts#L6025) (although [Zed enables it](https://github.com/zed-industries/zed/blob/be95716e94948d3d01df523d83c29aedff77009e/assets/settings/default.json#L267-L269) but I don't like that). Willing to discuss though.\r\n",
            "created_at": "2025-06-24T22:40:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3002074356",
            "id": 3002074356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6y8AT0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3002074356/reactions"
            },
            "updated_at": "2025-06-24T22:44:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3002074356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Perfect, I agree :+1: in this case, I'm guessing OTF should be enabled similar to how completion is enabled?",
            "created_at": "2025-06-25T07:44:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3003728234",
            "id": 3003728234,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6zCUFq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3003728234/reactions"
            },
            "updated_at": "2025-06-25T07:44:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3003728234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(I have made this opt-in, with an enabling example similar to the `completion` one :+1: )",
            "created_at": "2025-06-25T08:01:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3003773533",
            "id": 3003773533,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6zCfJd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3003773533/reactions"
            },
            "updated_at": "2025-06-25T08:01:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3003773533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "~~@ribru17 since you are driving a lot of lsp changes recently, maybe it makes sense to find a generalized \"enable capability\" interface (possible an [extension of vim.lsp.enable()](https://github.com/neovim/neovim/pull/34637#discussion_r2166175192)), before doing more of these ?~~\r\n\r\nEdit: after some discussion, we are aligned that \r\n\r\n- the current `vim.lsp.<feat>.enable()` interface is the pattern we want to continue.\r\n    - even if we introduced `vim.lsp.enable(..., {feature={...}})`, we *still* need the feature-specific modules and enable implementations (internally), because each lsp feature (inlay hints, semantic tokens, ...) has its own \"enable\" semantics.\r\n- we may introduce config-level flags, so that features can be enabled per-LS, but this would not be a \"toggle\" interface, and it doesn't change the above.",
            "created_at": "2025-06-25T13:47:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3004849896",
            "id": 3004849896,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6zGl7o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3004849896/reactions"
            },
            "updated_at": "2025-06-26T10:18:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3004849896",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure, that would be better :+1: ",
            "created_at": "2025-06-25T14:22:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3004982313",
            "id": 3004982313,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6zHGQp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3004982313/reactions"
            },
            "updated_at": "2025-06-25T14:22:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3004982313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ribru17 see my [updated comment](https://github.com/neovim/neovim/pull/34637#issuecomment-3004849896), that is no longer a blocker.\r\n\r\nbut to be clear, this pr will rename start/stop to `enable(boolean,...)` , right?",
            "created_at": "2025-06-26T10:18:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3007972231",
            "id": 3007972231,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6zSgOH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3007972231/reactions"
            },
            "updated_at": "2025-06-26T10:22:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3007972231",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, ok sounds good :+1: just for the sake of closure, I had a (hasty) branch with some thoughts/work with some general feature enable/disable logic if you want to take a look: https://github.com/ribru17/neovim/tree/lsp_features. It still uses the specific enabling logic but hides it behind an easier interface. I haven't fully thought it out though, admittedly.\r\n\r\n> but to be clear, this pr will rename start/stop to `enable(boolean,...)` , right?\r\n\r\nTotally, I can do this :+1: ",
            "created_at": "2025-06-26T10:46:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3008043838",
            "id": 3008043838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6zSxs-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3008043838/reactions"
            },
            "updated_at": "2025-06-26T10:46:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3008043838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(looks like my branch was similar to something lewis said, adding features to the config which can be used by lsp.config and lsp.start)",
            "created_at": "2025-06-26T11:23:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3008140193",
            "id": 3008140193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6zTJOh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3008140193/reactions"
            },
            "updated_at": "2025-06-26T11:23:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3008140193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "cool, mentioned that in https://github.com/neovim/neovim/issues/34659",
            "created_at": "2025-06-26T11:23:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/34637#issuecomment-3008141428",
            "id": 3008141428,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
            "node_id": "IC_kwDOAPphoM6zTJh0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3008141428/reactions"
            },
            "updated_at": "2025-06-26T11:23:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3008141428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34637/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34637/commits",
    "created_at": "2025-06-24T21:05:22Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34637.diff",
    "draft": false,
    "head": {
        "label": "ribru17:on_type_formatting",
        "ref": "on_type_formatting",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-06-30T14:32:05Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 323293,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-06-28T18:25:05Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "6aa654a64fd396f3316d9b15ab63159290238625",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34637",
    "id": 2616171310,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34637",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "60cee7eca1499e10b3b115614e081a47e5462a4b",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6b75su",
    "number": 34637,
    "patch_url": "https://github.com/neovim/neovim/pull/34637.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34637/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/6aa654a64fd396f3316d9b15ab63159290238625",
    "title": "feat(lsp): support `textDocument/onTypeFormatting`",
    "updated_at": "2025-06-26T13:38:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34637",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}