{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31280/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31280/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31280"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31280"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31280/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31280"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/75c0df25d9d002b08f38cb0b3e046ac05c140f4a"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5823,
            "forks_count": 5823,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1843,
            "open_issues_count": 1843,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-21T00:10:15Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 304457,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85427,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-21T01:35:11Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85427,
            "watchers_count": 85427,
            "web_commit_signoff_required": false
        },
        "sha": "71507281fb86deaaa7f47460e8c7a503b46663f6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem:\r\nAssigning function values to options is tedious.\r\n\r\nSolution:\r\nAllow setting function values to options directly.\r\n\r\nResolves #18997 \r\nMostly resolves #18132 in terms of UI. A more native solution can be deferred.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31280#discussion_r1873246595"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31280"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1873246595"
                }
            },
            "author_association": "MEMBER",
            "body": "@famiu instead of cleaning up functions using an autocmd, I decided to use `vim.b/w` to hold the references.\r\n\r\nDoes this monstrosity of code make sense to you?",
            "commit_id": "75c0df25d9d002b08f38cb0b3e046ac05c140f4a",
            "created_at": "2024-12-06T12:13:58Z",
            "diff_hunk": "@@ -134,6 +134,119 @@ local function get_options_info(name)\n   return info\n end\n \n+--- @type table<string,function>\n+vim._func_opts = {}\n+\n+-- Options that can be set as a function\n+local func_opts = {\n+  completefunc = true,\n+  findfunc = true,\n+  omnifunc = true,\n+  operatorfunc = true,\n+  quickfixtextfunc = true,\n+  tagfunc = true,\n+  thesaurusfunc = true,\n+}\n+\n+-- Options that can be set as an expression\n+local expr_opts = {\n+  diffexpr = true,\n+  foldexpr = true,\n+  formatexpr = true,\n+  includeexpr = true,\n+  indentexpr = true,\n+  modelineexpr = true,\n+  patchexpr = true,\n+}\n+\n+-- Options that can be set as an expression with a prefix of '%!'\n+local pct_bang_expr_opts = {\n+  statuscolumn = true,\n+  statusline = true,\n+  tabline = true,\n+  winbar = true,\n+}\n+\n+--- @param v integer?\n+--- @param f fun():integer\n+--- @return integer\n+local function resolve_winbuf(v, f)\n+  return assert((not v or v == 0) and f() or v)\n+end\n+\n+--- @type table<string,boolean>\n+local all_func_opts = vim.tbl_extend('error', func_opts, expr_opts, pct_bang_expr_opts)\n+\n+--- If the option name is a function option convert it to a string\n+--- format and store the function value.\n+--- @param name string\n+--- @param value any\n+--- @param info vim.api.keyset.get_option_info\n+--- @param opts vim.api.keyset.option\n+local function apply_func_opt(name, value, info, opts)\n+  local t = nil\n+  local t_str --- @type string?\n+\n+  -- Find a table to store/clear the function\n+  if info.scope == 'global' or info.global_local and opts.scope == 'global' then",
            "html_url": "https://github.com/neovim/neovim/pull/31280#discussion_r1873246595",
            "id": 1873246595,
            "line": 205,
            "node_id": "PRRC_kwDOAPphoM5vp3mD",
            "original_commit_id": "df9f65d72bcb2fa0b7beea61e39e8c396d3a16a5",
            "original_line": 205,
            "original_position": 58,
            "original_start_line": null,
            "path": "runtime/lua/vim/_options.lua",
            "position": 72,
            "pull_request_review_id": 2484690211,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31280",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1873246595/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-06T12:13:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1873246595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31280#discussion_r1881661064"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31280"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1881661064"
                }
            },
            "author_association": "MEMBER",
            "body": "> @famiu instead of cleaning up functions using an autocmd, I decided to use `vim.b/w` to hold the references.\r\n> \r\n> Does this monstrosity of code make sense to you?\r\n\r\nSomehow GitHub didn't notify me about this ping.\r\n\r\nBut yeah the function makes sense to me, although it took me a little while to parse entirely. Not the worst I've seen when it comes to code related to options.\r\n\r\n",
            "commit_id": "75c0df25d9d002b08f38cb0b3e046ac05c140f4a",
            "created_at": "2024-12-12T09:04:13Z",
            "diff_hunk": "@@ -134,6 +134,119 @@ local function get_options_info(name)\n   return info\n end\n \n+--- @type table<string,function>\n+vim._func_opts = {}\n+\n+-- Options that can be set as a function\n+local func_opts = {\n+  completefunc = true,\n+  findfunc = true,\n+  omnifunc = true,\n+  operatorfunc = true,\n+  quickfixtextfunc = true,\n+  tagfunc = true,\n+  thesaurusfunc = true,\n+}\n+\n+-- Options that can be set as an expression\n+local expr_opts = {\n+  diffexpr = true,\n+  foldexpr = true,\n+  formatexpr = true,\n+  includeexpr = true,\n+  indentexpr = true,\n+  modelineexpr = true,\n+  patchexpr = true,\n+}\n+\n+-- Options that can be set as an expression with a prefix of '%!'\n+local pct_bang_expr_opts = {\n+  statuscolumn = true,\n+  statusline = true,\n+  tabline = true,\n+  winbar = true,\n+}\n+\n+--- @param v integer?\n+--- @param f fun():integer\n+--- @return integer\n+local function resolve_winbuf(v, f)\n+  return assert((not v or v == 0) and f() or v)\n+end\n+\n+--- @type table<string,boolean>\n+local all_func_opts = vim.tbl_extend('error', func_opts, expr_opts, pct_bang_expr_opts)\n+\n+--- If the option name is a function option convert it to a string\n+--- format and store the function value.\n+--- @param name string\n+--- @param value any\n+--- @param info vim.api.keyset.get_option_info\n+--- @param opts vim.api.keyset.option\n+local function apply_func_opt(name, value, info, opts)\n+  local t = nil\n+  local t_str --- @type string?\n+\n+  -- Find a table to store/clear the function\n+  if info.scope == 'global' or info.global_local and opts.scope == 'global' then",
            "html_url": "https://github.com/neovim/neovim/pull/31280#discussion_r1881661064",
            "id": 1881661064,
            "in_reply_to_id": 1873246595,
            "line": 205,
            "node_id": "PRRC_kwDOAPphoM5wJ96I",
            "original_commit_id": "df9f65d72bcb2fa0b7beea61e39e8c396d3a16a5",
            "original_line": 205,
            "original_position": 58,
            "original_start_line": null,
            "path": "runtime/lua/vim/_options.lua",
            "position": 72,
            "pull_request_review_id": 2498477052,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31280",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1881661064/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-12T09:04:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1881661064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I thought part of @famiu 's work was to support this \"natively\". Is this a temporary bridge?",
            "created_at": "2024-11-20T16:03:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2488981103",
            "id": 2488981103,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UWtZv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2488981103/reactions"
            },
            "updated_at": "2024-11-20T16:03:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2488981103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, cheap and temporary. But tbh, I'm not actually sure what doing it natively would add? I think it would mostly just move the implementation into C.\r\n\r\nAlso note we need to make sure these values always return a string for both lua and vim compat.",
            "created_at": "2024-11-20T16:07:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2488990711",
            "id": 2488990711,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UWvv3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2488990711/reactions"
            },
            "updated_at": "2024-11-20T16:07:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2488990711",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But tbh, I'm not actually sure what doing it natively would add?\r\n\r\nWould give support for things like `vim.api.nvim_set_option_value()`, possibly other cases.\r\n\r\n> I think it would mostly just move the implementation into C.\r\n\r\nAny core logic such as `option.c` can and should defer to Lua, where possible. But `option.c` ideally should be the conduit where all options requests flow through, so that we get basic support for all the different entrypoints to options. Maybe even `:let &foo=v:lua.bar` could work, for example.",
            "created_at": "2024-11-20T16:14:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489009045",
            "id": 2489009045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UW0OV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489009045/reactions"
            },
            "updated_at": "2024-11-20T16:14:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489009045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(Note that the main thrust of Famiu's work is native table options, which require a lot of effort to get right. Lua(!) function handles are a much smaller scope -- although can be tackled as part of the rework, I'm sure -- and not nearly as important to bridge fully.) ",
            "created_at": "2024-11-20T16:20:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489022675",
            "id": 2489022675,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UW3jT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489022675/reactions"
            },
            "updated_at": "2024-11-20T16:20:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489022675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would give support for things like vim.api.nvim_set_option_value(), possibly other cases.\r\n\r\nBut surely function values only apply to Lua anyway? If the `nvim_set_option_value()` case matters, when we can apply this same method where we just store the function in a known place.\r\n\r\n> Any core logic such as option.c can and should defer to Lua, where possible. But option.c ideally should be the conduit where all options requests flow through, so that we get basic support for all the different entrypoints to options. Maybe even :let &foo=v:lua.bar could work, for example.\r\n\r\nI'm actually not so sure. Similar to your proposal for `vim.g/b/w` I think there would be potentially a lot of benefit in maintaining some options purely on the Lua side, especially if we want to introduce plugin/namespace options in the future.\r\n\r\nDoing this with `option.c` (and all its friends) could potentially be a similar mistake to creating vim9script.",
            "created_at": "2024-11-20T16:20:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489023716",
            "id": 2489023716,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UW3zk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489023716/reactions"
            },
            "updated_at": "2024-11-20T16:20:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489023716",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Mainly want to avoid footnotes where possible. \r\n\r\nHow can we document this as \"options support Lua functions\", instead of \"options support functions if you use `vim.o`\"? Maybe that means that `vim.api.nvim_set_option_value()` defers to `vim.o` if the value is a function.",
            "created_at": "2024-11-20T16:32:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489055943",
            "id": 2489055943,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UW_rH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489055943/reactions"
            },
            "updated_at": "2024-11-20T16:32:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489055943",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I was planning on adding this to the documentation of `vim.o/bo/wo` since that's where the code change is.\r\n\r\nIf we want this to work for `vim.api.nvim_set_option_value()` then I'd have to implement this in C instead, though this starts to become not as cheap as I planned.",
            "created_at": "2024-11-20T16:36:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489066947",
            "id": 2489066947,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UXCXD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489066947/reactions"
            },
            "updated_at": "2024-11-20T16:38:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489066947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I would suggest going forward with this temporary bridge for now. Implementing it in C now would be a lot more hassle than is worth, and might throw a wrench in ongoing refactoring efforts, which is why I would suggest waiting on that until polytypes are implemented (which is my next priority right after I'm done with #31084 and some scope refactors)",
            "created_at": "2024-11-20T16:48:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489094376",
            "id": 2489094376,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UXJDo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489094376/reactions"
            },
            "updated_at": "2024-11-20T16:48:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489094376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also, the added interface here will be the same no matter how it's implemented (now or later), so I don't see any danger of conflict. (Could be wrong, of course.)\r\n\r\nOn the other hand, I'd like to see `*expr` options included here (for `vim.treesitter.foldexpr`, if nothing else).\r\n\r\nRelated suggestion: Check the documentation for each of these options and convert the examples to the new API. (Also `:h v:lua-call` -- maybe not remove, but replace the `vim.o` with `vim.api` in the example?)",
            "created_at": "2024-11-20T16:53:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489105946",
            "id": 2489105946,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UXL4a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489105946/reactions"
            },
            "updated_at": "2024-11-20T17:01:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489105946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> On the other hand, I'd like to see *expr options included here (for vim.treesitter.foldexpr, if nothing else).\r\n\r\nDone.",
            "created_at": "2024-11-20T16:57:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489114362",
            "id": 2489114362,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UXN76",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 6,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489114362/reactions"
            },
            "updated_at": "2024-11-20T16:57:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489114362",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Related:\r\n#14157 \r\n#18132",
            "created_at": "2024-11-20T19:21:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2489371378",
            "id": 2489371378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UYMry",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489371378/reactions"
            },
            "updated_at": "2024-11-20T19:21:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2489371378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've also made it work for options that are interpreted as an expression when they begin with `%!` (e.g. `statusline`).\r\n\r\nBecause this method involves assigning functions into a table, I've had to add some logic to ensure we don't leak memory and that the internal table is pruned accordingly.",
            "created_at": "2024-11-21T13:54:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2491248609",
            "id": 2491248609,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6UfW_h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 5,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2491248609/reactions"
            },
            "updated_at": "2024-11-22T08:59:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2491248609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > On the other hand, I'd like to see *expr options included here (for vim.treesitter.foldexpr, if nothing else).\r\n> \r\n> Done.\r\n\r\nJust remembered  #18997 (`keywordprg`, which is not like the other `*prg`) -- not sure if that's in scope here?",
            "created_at": "2024-12-06T13:43:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2523285267",
            "id": 2523285267,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6WZkcT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2523285267/reactions"
            },
            "updated_at": "2024-12-09T13:34:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2523285267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "ex commands are a bit different to expressions so this would need to be extra special cased to something like:\r\n\r\n```vim\r\n:call v:lua.vim._option_funcs.keywordprg()\r\n```\r\n\r\nbut possible.",
            "created_at": "2024-12-06T17:31:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2523814722",
            "id": 2523814722,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6WbltC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2523814722/reactions"
            },
            "updated_at": "2024-12-09T13:34:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2523814722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "not high priority in any case; just wanted to mention it because it seemed related.",
            "created_at": "2024-12-06T17:38:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/31280#issuecomment-2523826049",
            "id": 2523826049,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
            "node_id": "IC_kwDOAPphoM6WboeB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2523826049/reactions"
            },
            "updated_at": "2024-12-09T13:34:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2523826049",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31280/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31280/commits",
    "created_at": "2024-11-20T10:22:12Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31280.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:feat/optfunc",
        "ref": "feat/optfunc",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2025-01-17T14:50:58Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 297910,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "75c0df25d9d002b08f38cb0b3e046ac05c140f4a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31280",
    "id": 2189583142,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31280",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "locked": false,
    "merge_commit_sha": "322603578e5b4001feef7adc8cc64cae6202804b",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6CgmMm",
    "number": 31280,
    "patch_url": "https://github.com/neovim/neovim/pull/31280.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
            "events_url": "https://api.github.com/users/famiu/events{/privacy}",
            "followers_url": "https://api.github.com/users/famiu/followers",
            "following_url": "https://api.github.com/users/famiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/famiu",
            "id": 29580810,
            "login": "famiu",
            "node_id": "MDQ6VXNlcjI5NTgwODEw",
            "organizations_url": "https://api.github.com/users/famiu/orgs",
            "received_events_url": "https://api.github.com/users/famiu/received_events",
            "repos_url": "https://api.github.com/users/famiu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/famiu",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31280/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/75c0df25d9d002b08f38cb0b3e046ac05c140f4a",
    "title": "feat(options): allow setting function values to vim.o/go/bo/wo",
    "updated_at": "2025-01-19T11:33:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31280",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    }
}