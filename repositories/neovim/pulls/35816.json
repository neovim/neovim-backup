{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35816/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35816/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35816"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35816"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35816/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/cd2ce88d3de939318907cd0eadb73c041b0c89c8"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6348,
            "forks_count": 6348,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 2006,
            "open_issues_count": 2006,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-10-07T02:20:49Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 346473,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 93252,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-10-07T02:28:15Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 93252,
            "watchers_count": 93252,
            "web_commit_signoff_required": false
        },
        "sha": "198c9e9bca7549cf7110be8c6f1df1c38d4e747f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: nvim_win_set_config cannot move floating windows to different tab pages\r\nSolution: Add cross-tab window movement logic with proper insertion point handling \r\n\r\nFix #33790 \r\n\r\n<!--\r\n  Thank you for contributing to Neovim!\r\n  If this is your first time, check out https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs\r\n  for our PR guidelines.\r\n-->\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2354812816"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354812816"
                }
            },
            "author_association": "MEMBER",
            "body": "Autocommands may do a number of things here which can break this:\r\n\r\n- Close `win`, making `win` invalid.\r\n- Close `parent`, making `parent` invalid. (`parent` isn't used later, but it's best to bail in that case)\r\n- Move `win` to a different tabpage via `nvim_win_set_config` or close its tabpage, leaving `win_tp` out-of-date.\r\n- Move `parent` to a different tabpage via `nvim_win_set_config` or close its tabpage, leaving `parent_tp` out-of-date.\r\n  (These previous two points are why `win_tp` and `parent_tp` are re-assigned again later for splits after the `win_goto` stuff)\r\n- Turn `win` into a non-float, breaking the later assumptions that it's still a float.\r\n\r\nIf these checks fail you should also make an attempt to restore the old `curwin`, like is done for splits.",
            "commit_id": "cd2ce88d3de939318907cd0eadb73c041b0c89c8",
            "created_at": "2025-09-17T08:57:02Z",
            "diff_hunk": "@@ -639,6 +656,51 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2354812816",
            "id": 2354812816,
            "line": 659,
            "node_id": "PRRC_kwDOAPphoM6MW5eQ",
            "original_commit_id": "a839a5ec7362038497f703411d6c9bc136065e11",
            "original_line": 659,
            "original_position": 97,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 123,
            "pull_request_review_id": 3233403431,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354812816/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-17T09:08:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354812816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2354825749"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354825749"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure what this is checking. Why would `parent_tp->tp_curwin` be NULL here?\r\n\r\nYou _should_ however check that `win_tp->tp_curwin` is set to something valid if it was previously equal to `win`, like is done for splits.",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T09:02:06Z",
            "diff_hunk": "@@ -639,6 +656,51 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+      }\n+      win_remove(win, win_tp == curtab ? NULL : win_tp);\n+\n+      // Find insertion point in target tabpage\n+      win_T *target_after;\n+      if (parent_tp == curtab) {\n+        target_after = lastwin_nofloating();\n+      } else {\n+        target_after = parent_tp->tp_lastwin;\n+        while (target_after && target_after->w_floating) {\n+          target_after = target_after->w_prev;\n+        }\n+        if (target_after == NULL) {\n+          target_after = parent_tp->tp_lastwin;\n+        }\n+      }\n+\n+      // Insert into target tabpage\n+      win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+      // Ensure target tabpage has valid curwin\n+      if (parent_tp != curtab && parent_tp->tp_curwin == NULL) {\n+        parent_tp->tp_curwin = parent_tp->tp_firstwin;\n+      }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2354825749",
            "id": 2354825749,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MW8oV",
            "original_commit_id": "a839a5ec7362038497f703411d6c9bc136065e11",
            "original_line": 760,
            "original_position": 125,
            "original_start_line": 690,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233403431,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354825749/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T09:04:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354825749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2354878615"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354878615"
                }
            },
            "author_association": "MEMBER",
            "body": "cool update for validate ",
            "commit_id": "cd2ce88d3de939318907cd0eadb73c041b0c89c8",
            "created_at": "2025-09-17T09:22:59Z",
            "diff_hunk": "@@ -639,6 +656,51 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2354878615",
            "id": 2354878615,
            "in_reply_to_id": 2354812816,
            "line": 659,
            "node_id": "PRRC_kwDOAPphoM6MXJiX",
            "original_commit_id": "a839a5ec7362038497f703411d6c9bc136065e11",
            "original_line": 659,
            "original_position": 97,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 123,
            "pull_request_review_id": 3233504663,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354878615/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-17T09:23:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354878615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2354894654"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354894654"
                }
            },
            "author_association": "MEMBER",
            "body": "This shouldn't ever return NULL, it'd be a bug as it'd imply `firstwin` is also NULL...",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T09:28:59Z",
            "diff_hunk": "@@ -639,6 +656,119 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *original_curwin = NULL;\n+      tabpage_T *orig_win_tp = win_tp;\n+      if (win == curwin) {\n+        original_curwin = curwin;\n+        win_T *altwin = win_float_find_altwin(win, NULL);\n+        if (!altwin) {\n+          api_set_error(err, kErrorTypeException, \"No alternative window found\");\n+          return;\n+        }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2354894654",
            "id": 2354894654,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MXNc-",
            "original_commit_id": "8a6817d341b88b1168099545105179d83398c7f4",
            "original_line": 671,
            "original_position": 103,
            "original_start_line": 668,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233526125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354894654/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T09:48:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354894654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2354914580"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354914580"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks like an more complicated version of the equivalent check done for splits: (which can be done after removing and appending to the window list, as long as the `altwin` is chosen before)\r\n\r\n```c\r\n    // If `win` moved tabpages and was the curwin of its old one, select a new curwin for it.\r\n    if (win_tp != parent_tp && win_tp->tp_curwin == win) {\r\n      win_tp->tp_curwin = altwin;\r\n    }\r\n```",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T09:36:20Z",
            "diff_hunk": "@@ -639,6 +656,119 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *original_curwin = NULL;\n+      tabpage_T *orig_win_tp = win_tp;\n+      if (win == curwin) {\n+        original_curwin = curwin;\n+        win_T *altwin = win_float_find_altwin(win, NULL);\n+        if (!altwin) {\n+          api_set_error(err, kErrorTypeException, \"No alternative window found\");\n+          return;\n+        }\n+        win_goto(altwin);\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        if (parent) {\n+          parent_tp = win_find_tabpage(parent);\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          if (win_valid(original_curwin)) {\n+            win_goto(original_curwin);\n+          }\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands\");\n+          return;\n+        }\n+\n+        if (parent && !win_valid_any_tab(parent)) {\n+          if (win_valid(original_curwin)) {\n+            win_goto(original_curwin);\n+          }\n+          api_set_error(err, kErrorTypeException, \"Parent window was closed by autocommands\");\n+          return;\n+        }\n+\n+        if (!win->w_floating) {\n+          if (win_valid(original_curwin)) {\n+            win_goto(original_curwin);\n+          }\n+          api_set_error(err, kErrorTypeException, \"Window is no longer floating\");\n+          return;\n+        }\n+\n+        if (!valid_tabpage(win_tp) || !valid_tabpage(parent_tp)) {\n+          if (win_valid(original_curwin)) {\n+            win_goto(original_curwin);\n+          }\n+          api_set_error(err, kErrorTypeException, \"Tabpage was closed by autocommands\");\n+          return;\n+        }\n+\n+        if (win_tp == parent_tp) {\n+          win_config_float(win, fconfig);\n+          win->w_pos_changed = true;\n+          return;\n+        }\n+      }\n+\n+      // Handle tp_curwin for the source tabpage BEFORE removing window\n+      if (orig_win_tp->tp_curwin == win) {\n+        win_T *new_curwin = win_float_find_altwin(win, orig_win_tp);\n+        if (!new_curwin) {\n+          // Find any valid window in the source tab\n+          FOR_ALL_WINDOWS_IN_TAB(wp, orig_win_tp) {\n+            if (wp != win) {\n+              new_curwin = wp;\n+              break;\n+            }\n+          }\n+        }\n+        orig_win_tp->tp_curwin = new_curwin;\n+      }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2354914580",
            "id": 2354914580,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MXSUU",
            "original_commit_id": "8a6817d341b88b1168099545105179d83398c7f4",
            "original_line": 735,
            "original_position": 167,
            "original_start_line": 722,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233526125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354914580/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T10:24:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354914580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2354921186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354921186"
                }
            },
            "author_association": "MEMBER",
            "body": "Why would `parent` be NULL here?",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T09:38:58Z",
            "diff_hunk": "@@ -639,6 +656,119 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *original_curwin = NULL;\n+      tabpage_T *orig_win_tp = win_tp;\n+      if (win == curwin) {\n+        original_curwin = curwin;\n+        win_T *altwin = win_float_find_altwin(win, NULL);\n+        if (!altwin) {\n+          api_set_error(err, kErrorTypeException, \"No alternative window found\");\n+          return;\n+        }\n+        win_goto(altwin);\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        if (parent) {",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2354921186",
            "id": 2354921186,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MXT7i",
            "original_commit_id": "8a6817d341b88b1168099545105179d83398c7f4",
            "original_line": 679,
            "original_position": 111,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233526125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354921186/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-17T09:48:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354921186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2354927930"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354927930"
                }
            },
            "author_association": "MEMBER",
            "body": "A lot of these checks are redundant.\r\nFor example, if `win_tp` is NULL, then `win` was closed. If its tabpage was closed, then `win` would've also been closed.\r\n\r\nCheck out what is done for splits for inspiration.",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T09:41:35Z",
            "diff_hunk": "@@ -639,6 +656,119 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *original_curwin = NULL;\n+      tabpage_T *orig_win_tp = win_tp;\n+      if (win == curwin) {\n+        original_curwin = curwin;\n+        win_T *altwin = win_float_find_altwin(win, NULL);\n+        if (!altwin) {\n+          api_set_error(err, kErrorTypeException, \"No alternative window found\");\n+          return;\n+        }\n+        win_goto(altwin);\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        if (parent) {\n+          parent_tp = win_find_tabpage(parent);\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          if (win_valid(original_curwin)) {\n+            win_goto(original_curwin);\n+          }\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands\");\n+          return;\n+        }\n+\n+        if (parent && !win_valid_any_tab(parent)) {",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2354927930",
            "id": 2354927930,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MXVk6",
            "original_commit_id": "8a6817d341b88b1168099545105179d83398c7f4",
            "original_line": 691,
            "original_position": 123,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233526125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354927930/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-17T09:48:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354927930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2354948078"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354948078"
                }
            },
            "author_association": "MEMBER",
            "body": "Unmarking as resolved; doesn't seem to have been addressed. Still not sure what is being checked here.",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T09:49:11Z",
            "diff_hunk": "@@ -639,6 +656,51 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+      }\n+      win_remove(win, win_tp == curtab ? NULL : win_tp);\n+\n+      // Find insertion point in target tabpage\n+      win_T *target_after;\n+      if (parent_tp == curtab) {\n+        target_after = lastwin_nofloating();\n+      } else {\n+        target_after = parent_tp->tp_lastwin;\n+        while (target_after && target_after->w_floating) {\n+          target_after = target_after->w_prev;\n+        }\n+        if (target_after == NULL) {\n+          target_after = parent_tp->tp_lastwin;\n+        }\n+      }\n+\n+      // Insert into target tabpage\n+      win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+      // Ensure target tabpage has valid curwin\n+      if (parent_tp != curtab && parent_tp->tp_curwin == NULL) {\n+        parent_tp->tp_curwin = parent_tp->tp_firstwin;\n+      }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2354948078",
            "id": 2354948078,
            "in_reply_to_id": 2354825749,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MXafu",
            "original_commit_id": "a839a5ec7362038497f703411d6c9bc136065e11",
            "original_line": 760,
            "original_position": 125,
            "original_start_line": 690,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233598764,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354948078/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T09:49:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2354948078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355065460"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355065460"
                }
            },
            "author_association": "MEMBER",
            "body": "oops right ",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T10:32:54Z",
            "diff_hunk": "@@ -639,6 +656,119 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *original_curwin = NULL;\n+      tabpage_T *orig_win_tp = win_tp;\n+      if (win == curwin) {\n+        original_curwin = curwin;\n+        win_T *altwin = win_float_find_altwin(win, NULL);\n+        if (!altwin) {\n+          api_set_error(err, kErrorTypeException, \"No alternative window found\");\n+          return;\n+        }\n+        win_goto(altwin);\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        if (parent) {",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355065460",
            "id": 2355065460,
            "in_reply_to_id": 2354921186,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MX3J0",
            "original_commit_id": "8a6817d341b88b1168099545105179d83398c7f4",
            "original_line": 679,
            "original_position": 111,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233778920,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355065460/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-17T10:32:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355065460",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355129178"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355129178"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n          while (target_after->w_floating) {\r\n            target_after = target_after->w_prev;\r\n          }\r\n```\r\n\r\nShould be fine for this to just be a non-`curtab` version of `lastwin_nofloating`, as tabpages must already have at least one non-float?",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T10:59:24Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after && target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+          if (target_after == NULL) {\n+            target_after = parent_tp->tp_lastwin;\n+          }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355129178",
            "id": 2355129178,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYGta",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 697,
            "original_position": 129,
            "original_start_line": 692,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233872304,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355129178/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T11:49:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355129178",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355138208"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355138208"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        // If `win` was the curwin of its old tabpage, select a new curwin for it.\r\n        if (win_tp->tp_curwin == win) {\r\n          win_tp->tp_curwin = win_float_find_altwin(win, win_tp);\r\n        }\r\n```\r\n\r\nDon't reuse `altwin`; `win_goto` autocommands may have freed it.",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T11:03:37Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after && target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+          if (target_after == NULL) {\n+            target_after = parent_tp->tp_lastwin;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = altwin ? altwin : win_float_find_altwin(win, win_tp);\n+        }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355138208",
            "id": 2355138208,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYI6g",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 698,
            "original_position": 135,
            "original_start_line": 701,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233872304,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355138208/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T11:49:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355138208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355183499"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355183499"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      if (win == curwin) {\r\n        win_goto(win_float_find_altwin(win, NULL));\r\n        \r\n        // Autocommands may have been a real nuisance and messed things up...\r\n        if (curwin == win) {\r\n          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\r\n                        win->handle);\r\n          return;\r\n        }\r\n        win_tp = win_find_tabpage(win);\r\n        parent_tp = win_find_tabpage(parent);\r\n        if (!win_tp || !parent_tp) {\r\n          api_set_error(err, kErrorTypeException, \"Target windows were closed\");\r\n          goto restore_curwin;\r\n        }\r\n        if (!win->w_floating) {\r\n          api_set_error(err, kErrorTypeException, \"Window %d was made non-floating\",\r\n                        win->handle);\r\n          goto restore_curwin;\r\n        }\r\n        if (!can_move(win, win_tp != parent_tp, err)) {\r\n          goto restore_curwin;\r\n        }\r\n```\r\nImplement `restore_curwin` so it attempts to `win_goto` the old `curwin` and return.\r\n\r\nThe checks are pretty similar to what's needed for splits; maybe some of this can be de-duplicated if it doesn't make things look worse?\r\n\r\nAlso the `can_move` check has to be repeated like I've done here; autocommands may have made the window external via `<C-W>ge` or similar, for example. (May be a bug that the repeated check was missing for splits...? :melting_face:)",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T11:21:58Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355183499",
            "id": 2355183499,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYT-L",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 680,
            "original_position": 115,
            "original_start_line": 663,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233872304,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355183499/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T11:49:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355183499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355230980"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355230980"
                }
            },
            "author_association": "MEMBER",
            "body": "I dunno if this is correct. Someone else ought to check.",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T11:40:44Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after && target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+          if (target_after == NULL) {\n+            target_after = parent_tp->tp_lastwin;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = altwin ? altwin : win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+        win->w_viewport_invalid = true;",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355230980",
            "id": 2355230980,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYfkE",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 708,
            "original_position": 145,
            "original_start_line": 705,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3233872304,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355230980/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T11:49:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355230980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355257064"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355257064"
                }
            },
            "author_association": "MEMBER",
            "body": "you mean `w_hl_needs_update`?   when I move to the current tab, if I don't set it, the background of the floating window doesn't update correctly.  not sure if I need to update when w_viewport_invalid is set. 🤔",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T11:51:28Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after && target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+          if (target_after == NULL) {\n+            target_after = parent_tp->tp_lastwin;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = altwin ? altwin : win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+        win->w_viewport_invalid = true;",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355257064",
            "id": 2355257064,
            "in_reply_to_id": 2355230980,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYl7o",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 708,
            "original_position": 145,
            "original_start_line": 705,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3234061190,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355257064/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T11:57:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355257064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355262156"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355262156"
                }
            },
            "author_association": "MEMBER",
            "body": "I will clean up some redundant logic later.",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T11:53:46Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355262156",
            "id": 2355262156,
            "in_reply_to_id": 2355183499,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYnLM",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 680,
            "original_position": 115,
            "original_start_line": 663,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3234068180,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355262156/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T11:53:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355262156",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355266818"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355266818"
                }
            },
            "author_association": "MEMBER",
            "body": "Mostly the grid/compositor stuff, as I'm unfamiliar with it.\r\n\r\n> if I don't set it, the background of the floating window doesn't update correctly\r\n\r\nYeah I also can't say for sure why that happens. Probably best to wait for a second opinion. :+1:",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T11:55:50Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after && target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+          if (target_after == NULL) {\n+            target_after = parent_tp->tp_lastwin;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = altwin ? altwin : win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+        win->w_viewport_invalid = true;",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355266818",
            "id": 2355266818,
            "in_reply_to_id": 2355230980,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYoUC",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 708,
            "original_position": 145,
            "original_start_line": 705,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3234074843,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355266818/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T12:01:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355266818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355291538"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355291538"
                }
            },
            "author_association": "MEMBER",
            "body": "Btw I forgot a closing `}` in the suggestion. (That's what I get for typing the changes directly in the text box :zany_face:)",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T12:05:51Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355291538",
            "id": 2355291538,
            "in_reply_to_id": 2355183499,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYuWS",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 680,
            "original_position": 115,
            "original_start_line": 663,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3234109310,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355291538/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T12:05:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355291538",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2355304315"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355304315"
                }
            },
            "author_association": "MEMBER",
            "body": "np ",
            "commit_id": "7c384846d5cc9bedd8a253d4fd44d49120614187",
            "created_at": "2025-09-17T12:10:45Z",
            "diff_hunk": "@@ -639,6 +656,63 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      win_T *altwin = NULL;\n+\n+      if (win == curwin) {\n+        altwin = win_float_find_altwin(win, NULL);\n+        win_goto(altwin);\n+\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        if (!win_valid_any_tab(win)) {\n+          api_set_error(err, kErrorTypeException, \"Window was closed by autocommands %d\",\n+                        win->handle);\n+          return;\n+        }\n+\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after && target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+          if (target_after == NULL) {\n+            target_after = parent_tp->tp_lastwin;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = altwin ? altwin : win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+        win->w_viewport_invalid = true;",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2355304315",
            "id": 2355304315,
            "in_reply_to_id": 2355230980,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6MYxd7",
            "original_commit_id": "30ecf9c314575379fcfdc5abd689277a697cfe9e",
            "original_line": 708,
            "original_position": 145,
            "original_start_line": 705,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3234127877,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355304315/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-09-17T12:10:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2355304315",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2385573850"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385573850"
                }
            },
            "author_association": "MEMBER",
            "body": "From glancing at this, doesn't look like `curwin_moving_tp` is ever set when moving a float? (Add a test for this too)",
            "commit_id": "cd2ce88d3de939318907cd0eadb73c041b0c89c8",
            "created_at": "2025-09-28T11:45:17Z",
            "diff_hunk": "@@ -639,19 +650,81 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));\n+\n+        // Autocommands may have been a real nuisance and messed things up...\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+        if (!win_tp || !parent_tp) {\n+          api_set_error(err, kErrorTypeException, \"Target windows were closed\");\n+          goto restore_curwin;\n+        }\n+        if (!win->w_floating) {\n+          api_set_error(err, kErrorTypeException, \"Window %d was made non-floating\",\n+                        win->handle);\n+          goto restore_curwin;\n+        }\n+        if (!can_move(win, win_tp != parent_tp, err)) {\n+          goto restore_curwin;\n+        }\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        // If `win` was the curwin of its old tabpage, select a new curwin for it.\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+      }\n+    }\n     win_config_float(win, fconfig);\n   }\n-  if (HAS_KEY_X(config, style)) {\n-    if (fconfig.style == kWinStyleMinimal) {\n-      win_set_minimal_style(win);\n-      didset_window_options(win, true);\n-    }\n+  if (HAS_KEY_X(config, style) && fconfig.style == kWinStyleMinimal) {\n+    win_set_minimal_style(win);\n+    didset_window_options(win, true);\n   }\n   if (fconfig._cmdline_offset < INT_MAX) {\n     cmdline_win = win;\n   } else if (win == cmdline_win && fconfig._cmdline_offset == INT_MAX) {\n     cmdline_win = NULL;\n   }\n+\n+restore_curwin:\n+  // If `win` was the original curwin, and autocommands didn't move it outside of curtab, be a\n+  // good citizen and try to return to it.\n+  if (curwin_moving_tp && win_valid(win)) {",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2385573850",
            "id": 2385573850,
            "line": 727,
            "node_id": "PRRC_kwDOAPphoM6OMPfa",
            "original_commit_id": "7ded6713c9d15bd296e4b1740e91411c7bf0af3c",
            "original_line": 727,
            "original_position": 194,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 196,
            "pull_request_review_id": 3276395606,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385573850/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-28T11:45:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385573850",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2385665818"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385665818"
                }
            },
            "author_association": "MEMBER",
            "body": "missing set it before win_goto..",
            "commit_id": "cd2ce88d3de939318907cd0eadb73c041b0c89c8",
            "created_at": "2025-09-28T12:23:26Z",
            "diff_hunk": "@@ -639,19 +650,81 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));\n+\n+        // Autocommands may have been a real nuisance and messed things up...\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+        if (!win_tp || !parent_tp) {\n+          api_set_error(err, kErrorTypeException, \"Target windows were closed\");\n+          goto restore_curwin;\n+        }\n+        if (!win->w_floating) {\n+          api_set_error(err, kErrorTypeException, \"Window %d was made non-floating\",\n+                        win->handle);\n+          goto restore_curwin;\n+        }\n+        if (!can_move(win, win_tp != parent_tp, err)) {\n+          goto restore_curwin;\n+        }\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        // If `win` was the curwin of its old tabpage, select a new curwin for it.\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+      }\n+    }\n     win_config_float(win, fconfig);\n   }\n-  if (HAS_KEY_X(config, style)) {\n-    if (fconfig.style == kWinStyleMinimal) {\n-      win_set_minimal_style(win);\n-      didset_window_options(win, true);\n-    }\n+  if (HAS_KEY_X(config, style) && fconfig.style == kWinStyleMinimal) {\n+    win_set_minimal_style(win);\n+    didset_window_options(win, true);\n   }\n   if (fconfig._cmdline_offset < INT_MAX) {\n     cmdline_win = win;\n   } else if (win == cmdline_win && fconfig._cmdline_offset == INT_MAX) {\n     cmdline_win = NULL;\n   }\n+\n+restore_curwin:\n+  // If `win` was the original curwin, and autocommands didn't move it outside of curtab, be a\n+  // good citizen and try to return to it.\n+  if (curwin_moving_tp && win_valid(win)) {",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2385665818",
            "id": 2385665818,
            "in_reply_to_id": 2385573850,
            "line": 727,
            "node_id": "PRRC_kwDOAPphoM6OMl8a",
            "original_commit_id": "7ded6713c9d15bd296e4b1740e91411c7bf0af3c",
            "original_line": 727,
            "original_position": 194,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 196,
            "pull_request_review_id": 3276499935,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385665818/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-28T12:23:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385665818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2385702643"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385702643"
                }
            },
            "author_association": "MEMBER",
            "body": "```\r\n        // If `win` was the curwin of its old tabpage, select a new curwin for it.\r\n        if (win_tp->tp_curwin == win) {\r\n          win_tp->tp_curwin = win_float_find_altwin(win, win_tp);\r\n        }\r\n```\r\nthere may not correct ? I got a crash with this test\r\n\r\n```lua\r\n    it('sets curwin_moving_tp when moving float between tabs fails #test', function()\r\n      local buf = api.nvim_create_buf(false, true)\r\n      local float_win = api.nvim_open_win(buf, true, {\r\n        relative = 'editor',\r\n        row = 1,\r\n        col = 1,\r\n        width = 10,\r\n        height = 5\r\n      })\r\n      command('tabnew')\r\n      local tab2_win = api.nvim_get_current_win()\r\n      command('tabprev')\r\n      api.nvim_set_current_win(float_win)\r\n      command('autocmd WinLeave * call nvim_win_close('..tab2_win..', true)')\r\n\r\n      eq('', pcall_err(api.nvim_win_set_config, float_win, {\r\n        relative = 'win',\r\n        win = tab2_win,\r\n        row = 0,\r\n        col = 0,\r\n        width = 10,\r\n        height = 5\r\n      }))\r\n\r\n      eq(float_win, api.nvim_get_current_win())\r\n    end)\r\n    \r\n    Assertion failed: (tp != curtab), function win_float_find_altwin, file winfloat.c, line 369.\r\nAddressSanitizer:DEADLYSIGNAL\r\n=================================================================\r\n==52902==ERROR: AddressSanitizer: ABRT on unknown address 0x0001963425b0 (pc 0x0001963425b0 bp 0x00016d609010 sp 0x00016d608ff0 T0)\r\n    #0 0x0001963425b0 in pthread_kill+0x8 (libsystem_kernel.dylib:arm64+0x95b0)\r\n    #1 0x000196282804 in abort+0x78 (libsystem_c.dylib:arm64+0x79804)\r\n    #2 0x000196281a38 in assert_rtn+0x118 (libsystem_c.dylib:arm64+0x78a38)\r\n    #3 0x00010422ecdc in win_float_find_altwin winfloat.c:369\r\n    #4 0x0001029d19f4 in nvim_win_set_config win_config.c:698\r\n    #5 0x000102946868 in handle_nvim_win_set_config dispatch_wrappers.generated.h:10035\r\n    #6 0x0001036770cc in request_event channel.c:364\r\n    #7 0x000103cbb43c in state_handle_k_event state.c:118\r\n    #8 0x0001036f6dd8 in nv_event normal.c:6644\r\n    #9 0x0001036b9a50 in normal_execute normal.c:1245\r\n    #10 0x000103cbb184 in state_enter state.c:100\r\n    #11 0x000103698ca4 in normal_enter normal.c:522\r\n    #12 0x0001033c4890 in main main.c:655\r\n```",
            "commit_id": "cd2ce88d3de939318907cd0eadb73c041b0c89c8",
            "created_at": "2025-09-28T12:39:53Z",
            "diff_hunk": "@@ -639,19 +650,81 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));\n+\n+        // Autocommands may have been a real nuisance and messed things up...\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+        if (!win_tp || !parent_tp) {\n+          api_set_error(err, kErrorTypeException, \"Target windows were closed\");\n+          goto restore_curwin;\n+        }\n+        if (!win->w_floating) {\n+          api_set_error(err, kErrorTypeException, \"Window %d was made non-floating\",\n+                        win->handle);\n+          goto restore_curwin;\n+        }\n+        if (!can_move(win, win_tp != parent_tp, err)) {\n+          goto restore_curwin;\n+        }\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        // If `win` was the curwin of its old tabpage, select a new curwin for it.\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+      }\n+    }\n     win_config_float(win, fconfig);\n   }\n-  if (HAS_KEY_X(config, style)) {\n-    if (fconfig.style == kWinStyleMinimal) {\n-      win_set_minimal_style(win);\n-      didset_window_options(win, true);\n-    }\n+  if (HAS_KEY_X(config, style) && fconfig.style == kWinStyleMinimal) {\n+    win_set_minimal_style(win);\n+    didset_window_options(win, true);\n   }\n   if (fconfig._cmdline_offset < INT_MAX) {\n     cmdline_win = win;\n   } else if (win == cmdline_win && fconfig._cmdline_offset == INT_MAX) {\n     cmdline_win = NULL;\n   }\n+\n+restore_curwin:\n+  // If `win` was the original curwin, and autocommands didn't move it outside of curtab, be a\n+  // good citizen and try to return to it.\n+  if (curwin_moving_tp && win_valid(win)) {",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2385702643",
            "id": 2385702643,
            "in_reply_to_id": 2385573850,
            "line": 727,
            "node_id": "PRRC_kwDOAPphoM6OMu7z",
            "original_commit_id": "7ded6713c9d15bd296e4b1740e91411c7bf0af3c",
            "original_line": 727,
            "original_position": 194,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 196,
            "pull_request_review_id": 3276540746,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385702643/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-28T12:39:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385702643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2385729141"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385729141"
                }
            },
            "author_association": "MEMBER",
            "body": "Assertion tells you the issue: we have to specify `tp` as `NULL` when referring to `curtab`. We can instead skip setting `tp_curwin` for `curtab` anyway, so the condition should be `if (win_tp != curtab && win_tp->tp_curwin == win)` instead.\r\n\r\nAlso there needs to be a return before `restore_curwin:`; we don't want the curwin to be restored in the happy path.",
            "commit_id": "cd2ce88d3de939318907cd0eadb73c041b0c89c8",
            "created_at": "2025-09-28T12:51:06Z",
            "diff_hunk": "@@ -639,19 +650,81 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));\n+\n+        // Autocommands may have been a real nuisance and messed things up...\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+        if (!win_tp || !parent_tp) {\n+          api_set_error(err, kErrorTypeException, \"Target windows were closed\");\n+          goto restore_curwin;\n+        }\n+        if (!win->w_floating) {\n+          api_set_error(err, kErrorTypeException, \"Window %d was made non-floating\",\n+                        win->handle);\n+          goto restore_curwin;\n+        }\n+        if (!can_move(win, win_tp != parent_tp, err)) {\n+          goto restore_curwin;\n+        }\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        // If `win` was the curwin of its old tabpage, select a new curwin for it.\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+      }\n+    }\n     win_config_float(win, fconfig);\n   }\n-  if (HAS_KEY_X(config, style)) {\n-    if (fconfig.style == kWinStyleMinimal) {\n-      win_set_minimal_style(win);\n-      didset_window_options(win, true);\n-    }\n+  if (HAS_KEY_X(config, style) && fconfig.style == kWinStyleMinimal) {\n+    win_set_minimal_style(win);\n+    didset_window_options(win, true);\n   }\n   if (fconfig._cmdline_offset < INT_MAX) {\n     cmdline_win = win;\n   } else if (win == cmdline_win && fconfig._cmdline_offset == INT_MAX) {\n     cmdline_win = NULL;\n   }\n+\n+restore_curwin:\n+  // If `win` was the original curwin, and autocommands didn't move it outside of curtab, be a\n+  // good citizen and try to return to it.\n+  if (curwin_moving_tp && win_valid(win)) {",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2385729141",
            "id": 2385729141,
            "in_reply_to_id": 2385573850,
            "line": 727,
            "node_id": "PRRC_kwDOAPphoM6OM1Z1",
            "original_commit_id": "7ded6713c9d15bd296e4b1740e91411c7bf0af3c",
            "original_line": 727,
            "original_position": 194,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 196,
            "pull_request_review_id": 3276568082,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385729141/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-28T13:12:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2385729141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2386945423"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2386945423"
                }
            },
            "author_association": "MEMBER",
            "body": "okay ",
            "commit_id": "cd2ce88d3de939318907cd0eadb73c041b0c89c8",
            "created_at": "2025-09-29T07:20:07Z",
            "diff_hunk": "@@ -639,19 +650,81 @@ void nvim_win_set_config(Window window, Dict(win_config) *config, Error *err)\n       win_setheight_win(fconfig.height, win);\n     }\n   } else {\n+    if (win->w_floating && parent && parent_tp != win_tp) {\n+      if (!can_move(win, win_tp != parent_tp, err)) {\n+        return;\n+      }\n+      if (win == curwin) {\n+        win_goto(win_float_find_altwin(win, NULL));\n+\n+        // Autocommands may have been a real nuisance and messed things up...\n+        if (curwin == win) {\n+          api_set_error(err, kErrorTypeException, \"Failed to switch away from window %d\",\n+                        win->handle);\n+          return;\n+        }\n+        win_tp = win_find_tabpage(win);\n+        parent_tp = win_find_tabpage(parent);\n+        if (!win_tp || !parent_tp) {\n+          api_set_error(err, kErrorTypeException, \"Target windows were closed\");\n+          goto restore_curwin;\n+        }\n+        if (!win->w_floating) {\n+          api_set_error(err, kErrorTypeException, \"Window %d was made non-floating\",\n+                        win->handle);\n+          goto restore_curwin;\n+        }\n+        if (!can_move(win, win_tp != parent_tp, err)) {\n+          goto restore_curwin;\n+        }\n+      }\n+\n+      if (win_tp != parent_tp) {\n+        win_remove(win, win_tp == curtab ? NULL : win_tp);\n+        win_T *target_after;\n+        if (parent_tp == curtab) {\n+          target_after = lastwin_nofloating();\n+        } else {\n+          target_after = parent_tp->tp_lastwin;\n+          while (target_after->w_floating) {\n+            target_after = target_after->w_prev;\n+          }\n+        }\n+\n+        win_append(target_after, win, parent_tp == curtab ? NULL : parent_tp);\n+        // If `win` was the curwin of its old tabpage, select a new curwin for it.\n+        if (win_tp->tp_curwin == win) {\n+          win_tp->tp_curwin = win_float_find_altwin(win, win_tp);\n+        }\n+\n+        if (parent_tp != curtab) {\n+          if (ui_has(kUIMultigrid)) {\n+            ui_call_win_hide(win->w_grid_alloc.handle);\n+          }\n+          ui_comp_remove_grid(&win->w_grid_alloc);\n+        } else {\n+          win->w_hl_needs_update = true;\n+        }\n+      }\n+    }\n     win_config_float(win, fconfig);\n   }\n-  if (HAS_KEY_X(config, style)) {\n-    if (fconfig.style == kWinStyleMinimal) {\n-      win_set_minimal_style(win);\n-      didset_window_options(win, true);\n-    }\n+  if (HAS_KEY_X(config, style) && fconfig.style == kWinStyleMinimal) {\n+    win_set_minimal_style(win);\n+    didset_window_options(win, true);\n   }\n   if (fconfig._cmdline_offset < INT_MAX) {\n     cmdline_win = win;\n   } else if (win == cmdline_win && fconfig._cmdline_offset == INT_MAX) {\n     cmdline_win = NULL;\n   }\n+\n+restore_curwin:\n+  // If `win` was the original curwin, and autocommands didn't move it outside of curtab, be a\n+  // good citizen and try to return to it.\n+  if (curwin_moving_tp && win_valid(win)) {",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2386945423",
            "id": 2386945423,
            "in_reply_to_id": 2385573850,
            "line": 727,
            "node_id": "PRRC_kwDOAPphoM6OReWP",
            "original_commit_id": "7ded6713c9d15bd296e4b1740e91411c7bf0af3c",
            "original_line": 727,
            "original_position": 194,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 196,
            "pull_request_review_id": 3278263920,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2386945423/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-29T07:20:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2386945423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35816#discussion_r2387083269"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35816"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2387083269"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\n    api_set_error(err, kErrorTypeException, \"%s\", \"Cannot move external floating window\");\n```",
            "commit_id": "e8bcaaef1ff161b9f1e471b122556b976600b460",
            "created_at": "2025-09-29T08:15:28Z",
            "diff_hunk": "@@ -380,6 +381,24 @@ static int win_split_flags(WinSplit split, bool toplevel)\n   return flags;\n }\n \n+static bool can_move(win_T *wp, bool switch_tab, Error *err)\n+{\n+  if (is_aucmd_win(wp) && switch_tab) {\n+    api_set_error(err, kErrorTypeException, \"Cannot move autocmd window to another tabpage\");\n+    return false;\n+  }\n+  // Can't move the cmdwin or its old curwin to a different tabpage.\n+  if ((wp == cmdwin_win || wp == cmdwin_old_curwin) && switch_tab) {\n+    api_set_error(err, kErrorTypeException, \"%s\", e_cmdwin);\n+    return false;\n+  }\n+  if (wp->w_floating && wp->w_config.external) {\n+    api_set_error(err, kErrorTypeException, \"%s\", \"can not move external floating window\");",
            "html_url": "https://github.com/neovim/neovim/pull/35816#discussion_r2387083269",
            "id": 2387083269,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6OSAAF",
            "original_commit_id": "e8bcaaef1ff161b9f1e471b122556b976600b460",
            "original_line": 396,
            "original_position": 24,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 1,
            "pull_request_review_id": 3278466861,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2387083269/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-09-29T08:15:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2387083269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "cc @seandewar  ",
            "created_at": "2025-09-17T08:22:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/35816#issuecomment-3301883499",
            "id": 3301883499,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35816",
            "node_id": "IC_kwDOAPphoM7Ezr5r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3301883499/reactions"
            },
            "updated_at": "2025-09-17T08:22:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3301883499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "cleaned up some redundant logic and reorganized the implementation",
            "created_at": "2025-09-17T10:46:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/35816#issuecomment-3302412157",
            "id": 3302412157,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35816",
            "node_id": "IC_kwDOAPphoM7E1s99",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3302412157/reactions"
            },
            "updated_at": "2025-09-17T10:46:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3302412157",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35816/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35816/commits",
    "created_at": "2025-09-17T08:22:13Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35816.diff",
    "draft": false,
    "head": {
        "label": "glepnir:33790",
        "ref": "33790",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/glepnir/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/glepnir/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/glepnir/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/glepnir/neovim/branches{/branch}",
            "clone_url": "https://github.com/glepnir/neovim.git",
            "collaborators_url": "https://api.github.com/repos/glepnir/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/glepnir/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/glepnir/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/glepnir/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/glepnir/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/glepnir/neovim/contributors",
            "created_at": "2022-07-17T05:15:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/glepnir/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/glepnir/neovim/downloads",
            "events_url": "https://api.github.com/repos/glepnir/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/glepnir/neovim/forks",
            "full_name": "glepnir/neovim",
            "git_commits_url": "https://api.github.com/repos/glepnir/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/glepnir/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/glepnir/neovim/git/tags{/sha}",
            "git_url": "git://github.com/glepnir/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/glepnir/neovim/hooks",
            "html_url": "https://github.com/glepnir/neovim",
            "id": 514752985,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/glepnir/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/glepnir/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/glepnir/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/glepnir/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/glepnir/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/glepnir/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/glepnir/neovim/merges",
            "milestones_url": "https://api.github.com/repos/glepnir/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHq6B2Q",
            "notifications_url": "https://api.github.com/repos/glepnir/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/glepnir/neovim/pulls{/number}",
            "pushed_at": "2025-10-06T12:37:07Z",
            "releases_url": "https://api.github.com/repos/glepnir/neovim/releases{/id}",
            "size": 339346,
            "ssh_url": "git@github.com:glepnir/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/glepnir/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/glepnir/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/glepnir/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/glepnir/neovim/subscription",
            "svn_url": "https://github.com/glepnir/neovim",
            "tags_url": "https://api.github.com/repos/glepnir/neovim/tags",
            "teams_url": "https://api.github.com/repos/glepnir/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/glepnir/neovim/git/trees{/sha}",
            "updated_at": "2025-10-06T07:05:23Z",
            "url": "https://api.github.com/repos/glepnir/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "cd2ce88d3de939318907cd0eadb73c041b0c89c8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
            "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
            "followers_url": "https://api.github.com/users/glepnir/followers",
            "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
            "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/glepnir",
            "id": 41671631,
            "login": "glepnir",
            "node_id": "MDQ6VXNlcjQxNjcxNjMx",
            "organizations_url": "https://api.github.com/users/glepnir/orgs",
            "received_events_url": "https://api.github.com/users/glepnir/received_events",
            "repos_url": "https://api.github.com/users/glepnir/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/glepnir",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35816",
    "id": 2835663169,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35816",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b81ba22ead24e6bf1b430f8b74eab9f041543095",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6pBMlB",
    "number": 35816,
    "patch_url": "https://github.com/neovim/neovim/pull/35816.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35816/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/cd2ce88d3de939318907cd0eadb73c041b0c89c8",
    "title": "fix(api): support floating window movement between tab pages",
    "updated_at": "2025-09-30T07:25:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35816",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
        "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
        "followers_url": "https://api.github.com/users/glepnir/followers",
        "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
        "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glepnir",
        "id": 41671631,
        "login": "glepnir",
        "node_id": "MDQ6VXNlcjQxNjcxNjMx",
        "organizations_url": "https://api.github.com/users/glepnir/orgs",
        "received_events_url": "https://api.github.com/users/glepnir/received_events",
        "repos_url": "https://api.github.com/users/glepnir/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glepnir",
        "user_view_type": "public"
    }
}