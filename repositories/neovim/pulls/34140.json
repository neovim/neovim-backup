{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34140/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34140/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34140"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34140"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34140/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34140"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ad1f0dd2af99032f999fc0d65375c42ccd10bbf4"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6134,
            "forks_count": 6134,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1965,
            "open_issues_count": 1965,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-17T02:49:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 328511,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90375,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-17T02:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90375,
            "watchers_count": 90375,
            "web_commit_signoff_required": false
        },
        "sha": "8b9500c886bdb72620e331d430e166ad7d9c12f8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This PR introduces `vim.net.request()` as a new minimal Lua API for fetching content from network URLs and integrates directly into Neovim `:e` command for remote file opening. This PR continues the effort from PR #33964 to modularize `netrw` functionality as outlined in issues #23232 and #32280.\r\n\r\n# Implementation details\r\nI'm dividing the PR in two commits:\r\n1. feat(net): add minimal `vim.net.request()` using curl\r\n- Adds `vim.net.request()` API in net.lua\r\n- Uses `vim.system()` to invoke `curl` for HTTP GET requests\r\n- Captures and returns the response body\r\n- Automatically includes `--location` (follow redirects) and `--silent`, `--show-error` and `--fail`.\r\n- Accepts `opts.verbose` and `opts.retry` for basic control and debugging\r\n- Supports both synchronous (returns `content, err`) and asynchronous (`on_exit(err, content))`), similar to `vim.net.download()`\r\n2. feat(net): integrate `vim.net.request()` with `:e` for remote files (WIP)\r\n- Add `BufReadCmd` autocommand as a plugin to intercept URLs passed to :e\r\n- Detects `http://` and `https://` in the :e argument (check other `curl` supported protocols ?)\r\n- Asynchronously fetches remote content using `vim.net.request()` and loads it into buffer\r\n- Basic error handling and display failed requests.\r\n\r\n# Proposed API Usage\r\n1. Basic synchronous request:\r\n```lua\r\nlocal content, err = vim.net.request(\"https://httpbingo.org/get\")\r\nif err then\r\n  print(\"Request failed:\", err)\r\nelse\r\n  print(\"Content:\", content)\r\nend\r\n```\r\n2. Asyncrhonous with callback\r\n```lua\r\nvim.net.request(\"https://httpbingo.org/get\", { retry = 2 }, function(err, content)\r\n    if err then\r\n        print(\"Request failed:\", err)\r\n    else\r\n        print(\"Request successful! Content length:\", #content)\r\n    end\r\nend)\r\n```\r\n\r\n# Next steps\r\nFuture enchnacments for vim.net will be considered in seperate disuccsiona and PRs as to make the API suepr simple and incremental.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34140#discussion_r2150362273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34140"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150362273"
                }
            },
            "author_association": "MEMBER",
            "body": "Even though the API is separate functions, I would pull out the common code between the two into a local function.",
            "commit_id": "ad1f0dd2af99032f999fc0d65375c42ccd10bbf4",
            "created_at": "2025-06-16T16:01:18Z",
            "diff_hunk": "@@ -0,0 +1,128 @@\n+local M = {}\n+\n+--- Downloads a file from the given URL to a specified location.\n+---\n+--- @param url string The URL to download from.\n+--- @param download_location string The file path where the content should be saved.\n+--- @param opts? table Optional parameters:\n+---   - verbose (boolean|nil): Enables verbose curl output.\n+---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\n+--- @param on_exit? fun(err?: string) Optional callback. If omitted, runs synchronously.\n+---\n+--- @return boolean|nil, string? True on success (sync); false/nil and error message on failure.\n+function M.download(url, download_location, opts, on_exit)\n+  vim.validate({\n+    url = { url, 'string' },\n+    download_location = { download_location, 'string' },\n+    opts = { opts, 'table', true },\n+    on_exit = { on_exit, 'function', true },\n+  })\n+\n+  opts = opts or {}\n+  local retry = opts.retry or 3\n+\n+  local args = { 'curl' }\n+\n+  if opts.verbose then\n+    table.insert(args, '--verbose')\n+  else\n+    vim.list_extend(args, { '--silent', '--show-error', '--fail' })\n+  end\n+\n+  vim.list_extend(args, {\n+    '--retry',\n+    tostring(retry),\n+    '--location',\n+    '--output',\n+    download_location,\n+    url,\n+  })\n+\n+  if on_exit then\n+    vim.system(args, { text = true }, function(res)\n+      if res.code ~= 0 or res.stderr ~= '' then\n+        on_exit(res.stderr ~= '' and res.stderr or 'Download failed')\n+      else\n+        on_exit(nil)\n+      end\n+    end)\n+  else\n+    local job = vim.system(args, { text = true })\n+    local result = job:wait()\n+\n+    if result.code ~= 0 then\n+      local err = result.stderr\n+      if err == '' then\n+        err = string.format('Download failed (exit code %d)', result.code)\n+      else\n+        err = string.format('%s (exit code %d)', err, result.code)\n+      end\n+      return false, err\n+    end\n+\n+    return true\n+  end\n+end\n+\n+--- Makes an HTTP GET request to the given URL and returns the response body.\n+---\n+--- This is a barebones implemenation intended for internal use.\n+---\n+--- @param url string The URL to download from.\n+--- @param opts? table Optional parameters:\n+---   - verbose (boolean|nil): Enables verbose curl output.\n+---   - retry (integer|nil): Number of times to retry on transient failures (default: 3).\n+--- @param on_exit? fun(err?: string, content?: string) Optional callback. If omitted, runs synchronously.\n+---\n+--- @return string|nil, string? On success (sync): content; On failure (sync) nil and error message.\n+function M.request(url, opts, on_exit)",
            "html_url": "https://github.com/neovim/neovim/pull/34140#discussion_r2150362273",
            "id": 2150362273,
            "line": 78,
            "node_id": "PRRC_kwDOAPphoM6AK-yh",
            "original_commit_id": "ad1f0dd2af99032f999fc0d65375c42ccd10bbf4",
            "original_line": 78,
            "original_position": 78,
            "original_start_line": null,
            "path": "runtime/lua/vim/net.lua",
            "position": 78,
            "pull_request_review_id": 2932708873,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34140",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150362273/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-16T16:01:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2150362273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Let's please keep simple download and full requests separate. I'd prefer to finish the former before tackling the latter unless it's absolutely necessary to implement them together (which I don't see).",
            "created_at": "2025-05-23T09:48:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/34140#issuecomment-2903891415",
            "id": 2903891415,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34140",
            "node_id": "IC_kwDOAPphoM6tFd3X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2903891415/reactions"
            },
            "updated_at": "2025-05-23T09:48:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2903891415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Let's please keep simple download and full requests separate. I'd prefer to finish the former before tackling the latter unless it's absolutely necessary to implement them together (which I don't see).\r\n\r\nThat's my intention exactly! As we discussed in the minimal PR for `vim.net.download()` #33964 I'm fully aligned that we need to keep these efforts separate.  I opened this PR as a draft specifically so we can align the `vim.net.request()` scope and implementation, this way I can address early feedback. As soon as the `vim.net.download()` PR is merged I will rebase this branch as to remove the noise and ensure its a clean focused PR.\r\n\r\nI completely agree with the Bell System-style strategy (mentioned in parent issue #32280) for this initiative and understand that previous efforts struggled due to complexity, so I'm really trying to avoid that for future development.",
            "created_at": "2025-05-23T09:54:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/34140#issuecomment-2903910370",
            "id": 2903910370,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34140",
            "node_id": "IC_kwDOAPphoM6tFifi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2903910370/reactions"
            },
            "updated_at": "2025-05-23T10:00:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2903910370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "FYI Core functionality is implemented but functional tests for new API function is in progress. \r\nIn the meantime can I have some feedback on why this tests might be failing? Locally it doesn't fail. @lewis6991 \r\n\r\n```\r\nruntime/lua/vim/_extui/messages.lua:229:13 [Warning] Can not infer type. (no-unknown)\r\n          local end_col = #mid + col\r\n                ^^^^^^^\r\nruntime/lua/vim/_extui/messages.lua:235:15 [Warning] Can not infer type. (no-unknown)\r\n            local ecol = math.min(end_col, start_line and #start_line or -1)\r\n                  ^^^^\r\nruntime/lua/vim/_extui/messages.lua:254:13 [Warning] Can not infer type. (no-unknown)\r\n          head, col = '', end_col\r\n                ^^^\r\n```",
            "created_at": "2025-05-25T10:29:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/34140#issuecomment-2907743194",
            "id": 2907743194,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34140",
            "node_id": "IC_kwDOAPphoM6tUKPa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907743194/reactions"
            },
            "updated_at": "2025-05-25T10:29:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2907743194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tampueroc you may just need to add explicit `@type` annotations for the lint failures.",
            "created_at": "2025-06-16T15:59:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/34140#issuecomment-2977195118",
            "id": 2977195118,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34140",
            "node_id": "IC_kwDOAPphoM6xdGRu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977195118/reactions"
            },
            "updated_at": "2025-06-16T15:59:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2977195118",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34140/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34140/commits",
    "created_at": "2025-05-23T09:39:56Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34140.diff",
    "draft": true,
    "head": {
        "label": "tampueroc:net-request",
        "ref": "net-request",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tampueroc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tampueroc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tampueroc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tampueroc/neovim/branches{/branch}",
            "clone_url": "https://github.com/tampueroc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tampueroc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tampueroc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tampueroc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tampueroc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tampueroc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tampueroc/neovim/contributors",
            "created_at": "2025-05-01T16:36:34Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tampueroc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tampueroc/neovim/downloads",
            "events_url": "https://api.github.com/repos/tampueroc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tampueroc/neovim/forks",
            "full_name": "tampueroc/neovim",
            "git_commits_url": "https://api.github.com/repos/tampueroc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tampueroc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tampueroc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tampueroc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/tampueroc/neovim/hooks",
            "html_url": "https://github.com/tampueroc/neovim",
            "id": 976180439,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tampueroc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tampueroc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tampueroc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tampueroc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tampueroc/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/tampueroc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tampueroc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tampueroc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOOi9U1w",
            "notifications_url": "https://api.github.com/repos/tampueroc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
                "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
                "followers_url": "https://api.github.com/users/tampueroc/followers",
                "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tampueroc",
                "id": 46233260,
                "login": "tampueroc",
                "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
                "organizations_url": "https://api.github.com/users/tampueroc/orgs",
                "received_events_url": "https://api.github.com/users/tampueroc/received_events",
                "repos_url": "https://api.github.com/users/tampueroc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tampueroc",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tampueroc/neovim/pulls{/number}",
            "pushed_at": "2025-05-25T10:21:36Z",
            "releases_url": "https://api.github.com/repos/tampueroc/neovim/releases{/id}",
            "size": 311993,
            "ssh_url": "git@github.com:tampueroc/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/tampueroc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tampueroc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tampueroc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tampueroc/neovim/subscription",
            "svn_url": "https://github.com/tampueroc/neovim",
            "tags_url": "https://api.github.com/repos/tampueroc/neovim/tags",
            "teams_url": "https://api.github.com/repos/tampueroc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tampueroc/neovim/git/trees{/sha}",
            "updated_at": "2025-05-01T16:36:34Z",
            "url": "https://api.github.com/repos/tampueroc/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ad1f0dd2af99032f999fc0d65375c42ccd10bbf4",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
            "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
            "followers_url": "https://api.github.com/users/tampueroc/followers",
            "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
            "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tampueroc",
            "id": 46233260,
            "login": "tampueroc",
            "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
            "organizations_url": "https://api.github.com/users/tampueroc/orgs",
            "received_events_url": "https://api.github.com/users/tampueroc/received_events",
            "repos_url": "https://api.github.com/users/tampueroc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tampueroc",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34140",
    "id": 2539358980,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34140",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 7015246296,
            "name": "checkhealth",
            "node_id": "LA_kwDOAPphoM8AAAABoiQp2A",
            "url": "https://api.github.com/repos/neovim/neovim/labels/checkhealth"
        }
    ],
    "locked": false,
    "merge_commit_sha": "20a4da55cb29a48536e2af208265d3c08f6afec4",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6XW4sE",
    "number": 34140,
    "patch_url": "https://github.com/neovim/neovim/pull/34140.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34140/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ad1f0dd2af99032f999fc0d65375c42ccd10bbf4",
    "title": "feat(net): add vim.net.request() and :e integration",
    "updated_at": "2025-06-16T16:01:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34140",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/46233260?v=4",
        "events_url": "https://api.github.com/users/tampueroc/events{/privacy}",
        "followers_url": "https://api.github.com/users/tampueroc/followers",
        "following_url": "https://api.github.com/users/tampueroc/following{/other_user}",
        "gists_url": "https://api.github.com/users/tampueroc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tampueroc",
        "id": 46233260,
        "login": "tampueroc",
        "node_id": "MDQ6VXNlcjQ2MjMzMjYw",
        "organizations_url": "https://api.github.com/users/tampueroc/orgs",
        "received_events_url": "https://api.github.com/users/tampueroc/received_events",
        "repos_url": "https://api.github.com/users/tampueroc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tampueroc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tampueroc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tampueroc",
        "user_view_type": "public"
    }
}