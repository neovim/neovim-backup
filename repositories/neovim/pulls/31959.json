{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31959/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31959/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31959"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31959"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31959/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7977da95bb9b7d8a649dfb102913a64fc1504715"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5823,
            "forks_count": 5823,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1843,
            "open_issues_count": 1843,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-21T00:10:15Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 304457,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 85427,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-21T01:35:11Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 85427,
            "watchers_count": 85427,
            "web_commit_signoff_required": false
        },
        "sha": "5f527f24f0ea89e9071e065530cbed449507df5c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Other editors (like [helix](https://helix-editor.com/news/release-25-01-highlights/#diagnostics)) offer built-in functionality for displaying multiline diagnostics as virtual lines. Plugins like [`lsp_lines`](https://git.sr.ht/~whynothugo/lsp_lines.nvim) already offer this in Neovim, so let's bring it to core :)\r\n\r\nNote that this PR is basically a port of `lsp_lines`, and hence all fame and glory should be forwarded to @WhyNotHugo.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1912306960"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912306960"
                }
            },
            "author_association": "MEMBER",
            "body": "Wonder if instead of indicating the characters here we want to expose options like \"rounded\"/\"rectangular\" etc",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-11T23:47:18Z",
            "diff_hunk": "@@ -228,6 +229,14 @@ end\n --- See |nvim_buf_set_extmark()|.\n --- @field virt_text_hide? boolean\n \n+--- @class vim.diagnostic.Opts.VirtualLines\n+---\n+--- Only show diagnostics for the current line.\n+--- @field only_current_line? boolean\n+---\n+--- The characters used to draw the lines between diagnostic messages.\n+--- @field drawing_characters? {cross?:string, horizontal?:string, horizontal_up?:string, up_right?:string, vertical?:string, vertical_right?:string}",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1912306960",
            "id": 1912306960,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x-30Q",
            "original_commit_id": "630646a466cc18280a7716fd6159ee55bd407b82",
            "original_line": 238,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2545308264,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912306960/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-11T23:47:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912306960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1912308253"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912308253"
                }
            },
            "author_association": "MEMBER",
            "body": "`lsp_lines` also exposes an [option](https://git.sr.ht/~whynothugo/lsp_lines.nvim#usage) to highlight the entire diagnostic line. I didn't include that here, both as a matter of personal taste and because neither the pictures in the README nor Helix's usage have such highlighting. Open to discussion though.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-11T23:49:58Z",
            "diff_hunk": "@@ -228,6 +229,14 @@ end\n --- See |nvim_buf_set_extmark()|.\n --- @field virt_text_hide? boolean\n \n+--- @class vim.diagnostic.Opts.VirtualLines",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1912308253",
            "id": 1912308253,
            "line": 232,
            "node_id": "PRRC_kwDOAPphoM5x-4Id",
            "original_commit_id": "630646a466cc18280a7716fd6159ee55bd407b82",
            "original_line": 232,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 12,
            "pull_request_review_id": 2545308468,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912308253/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-11T23:49:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912308253",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1912344042"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912344042"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not sure we need to make this configurable at all, at least for now. I think we hard code it for now and if people ask for it, we can make it an option. But if possible, the fewer knobs the better.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-12T01:29:02Z",
            "diff_hunk": "@@ -228,6 +229,14 @@ end\n --- See |nvim_buf_set_extmark()|.\n --- @field virt_text_hide? boolean\n \n+--- @class vim.diagnostic.Opts.VirtualLines\n+---\n+--- Only show diagnostics for the current line.\n+--- @field only_current_line? boolean\n+---\n+--- The characters used to draw the lines between diagnostic messages.\n+--- @field drawing_characters? {cross?:string, horizontal?:string, horizontal_up?:string, up_right?:string, vertical?:string, vertical_right?:string}",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1912344042",
            "id": 1912344042,
            "in_reply_to_id": 1912306960,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x_A3q",
            "original_commit_id": "630646a466cc18280a7716fd6159ee55bd407b82",
            "original_line": 238,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2545319586,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912344042/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-12T01:29:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912344042",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1912411439"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912411439"
                }
            },
            "author_association": "NONE",
            "body": "Agreed that we can skip it for the initial version.\r\n\r\nFor future versions, we can consider using a format similar the `border` parameter for `nvim_open_win`.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-12T09:55:36Z",
            "diff_hunk": "@@ -228,6 +229,14 @@ end\n --- See |nvim_buf_set_extmark()|.\n --- @field virt_text_hide? boolean\n \n+--- @class vim.diagnostic.Opts.VirtualLines\n+---\n+--- Only show diagnostics for the current line.\n+--- @field only_current_line? boolean\n+---\n+--- The characters used to draw the lines between diagnostic messages.\n+--- @field drawing_characters? {cross?:string, horizontal?:string, horizontal_up?:string, up_right?:string, vertical?:string, vertical_right?:string}",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1912411439",
            "id": 1912411439,
            "in_reply_to_id": 1912306960,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5x_RUv",
            "original_commit_id": "630646a466cc18280a7716fd6159ee55bd407b82",
            "original_line": 238,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2545392366,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912411439/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-12T09:55:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912411439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
                "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
                "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhyNotHugo",
                "id": 730811,
                "login": "WhyNotHugo",
                "node_id": "MDQ6VXNlcjczMDgxMQ==",
                "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
                "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
                "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhyNotHugo",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1912804988"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912804988"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    vim.keymap.set('gK', function()\r\n```\r\n\r\nIf/when we add a default keymap , `gK` seems like a good candidate.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-13T08:13:30Z",
            "diff_hunk": "@@ -170,6 +170,16 @@ show a sign for the highest severity diagnostic on a given line: >lua\n     }\n <\n \n+                                          *diagnostic-toggle-virtual-lines-example*\n+Diagnostic handlers can also be toggled. For example, you might want to toggle\n+the `virtual_lines` handler with the following keymap: >lua\n+\n+    vim.keymap.set('<leader>l', function()",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1912804988",
            "id": 1912804988,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yAxZ8",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 177,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2545956749,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912804988/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T08:22:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912804988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1912805632"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912805632"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      • {current_line}?  (`boolean`, default: `true`) Only show\r\n```",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-13T08:14:10Z",
            "diff_hunk": "@@ -590,6 +600,12 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n                      diagnostics matching the given severity\n                      |diagnostic-severity|.\n \n+*vim.diagnostic.Opts.VirtualLines*\n+\n+    Fields: ~\n+      • {only_current_line}?  (`boolean`, default: `true`) Only show",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1912805632",
            "id": 1912805632,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yAxkA",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 606,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2545957859,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912805632/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T08:14:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912805632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1912810198"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912810198"
                }
            },
            "author_association": "MEMBER",
            "body": "nit, non blocker, just for reference: I think we should name our namespaces/augroups with `nvim.foo.bar` format",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-13T08:19:04Z",
            "diff_hunk": "@@ -1603,6 +1611,267 @@ M.handlers.virtual_text = {\n   end,\n }\n \n+local virtual_lines_augroup =\n+  api.nvim_create_augroup('vim_lsp_diagnostic_virt_lines', { clear = true })\n+\n+---Some characters (like tabs) take up more than one cell. Additionally, inline\n+---virtual text can make the distance between 2 columns larger.\n+---A diagnostic aligned under such characters needs to account for that and that\n+---many spaces to its left.\n+---@param bufnr integer\n+---@param lnum integer\n+---@param start_col integer\n+---@param end_col integer\n+---@return integer\n+local function distance_between_cols(bufnr, lnum, start_col, end_col)\n+  return api.nvim_buf_call(bufnr, function()\n+    local s = vim.fn.virtcol({ lnum + 1, start_col })\n+    local e = vim.fn.virtcol({ lnum + 1, end_col + 1 })\n+    return e - 1 - s\n+  end)\n+end\n+\n+---@param namespace integer\n+---@param bufnr integer\n+---@param diagnostics vim.Diagnostic[]\n+---@param opts vim.diagnostic.Opts.VirtualLines\n+local function render_virtual_lines(namespace, bufnr, diagnostics, opts)\n+  if not api.nvim_buf_is_loaded(bufnr) then\n+    return\n+  end\n+\n+  vim.validate('namespace', namespace, 'number')\n+  vim.validate('bufnr', bufnr, 'number')\n+  vim.validate('diagnostics', diagnostics, vim.islist, 'a list of diagnostics')\n+  vim.validate('opts', opts, 'table', true)\n+\n+  table.sort(diagnostics, function(d1, d2)\n+    if d1.lnum == d2.lnum then\n+      return d1.col < d2.col\n+    else\n+      return d1.lnum < d2.lnum\n+    end\n+  end)\n+\n+  api.nvim_buf_clear_namespace(bufnr, namespace, 0, -1)\n+\n+  if not next(diagnostics) then\n+    return\n+  end\n+\n+  -- This loop reads each line, putting them into stacks with some extra data since\n+  -- rendering each line requires understanding what is beneath it.\n+  local ElementType = { Space = 1, Diagnostic = 2, Overlap = 3, Blank = 4 } ---@enum ElementType\n+  local line_stacks = {} ---@type table<integer, {[1]:ElementType, [2]:string|vim.diagnostic.Severity|vim.Diagnostic}[]>\n+  local prev_lnum = -1\n+  local prev_col = 0\n+  for _, diag in ipairs(diagnostics) do\n+    if not line_stacks[diag.lnum] then\n+      line_stacks[diag.lnum] = {}\n+    end\n+\n+    local stack = line_stacks[diag.lnum]\n+\n+    if diag.lnum ~= prev_lnum then\n+      table.insert(stack, {\n+        ElementType.Space,\n+        string.rep(' ', distance_between_cols(bufnr, diag.lnum, 0, diag.col)),\n+      })\n+    elseif diag.col ~= prev_col then\n+      table.insert(stack, {\n+        ElementType.Space,\n+        string.rep(\n+          ' ',\n+          -- +1 because indexing starts at 0 in one API but at 1 in the other.\n+          -- -1 for non-first lines, since the previous column was already drawn.\n+          distance_between_cols(bufnr, diag.lnum, prev_col + 1, diag.col) - 1\n+        ),\n+      })\n+    else\n+      table.insert(stack, { ElementType.Overlap, diag.severity })\n+    end\n+\n+    if diag.message:find('^%s*$') then\n+      table.insert(stack, { ElementType.Blank, diag })\n+    else\n+      table.insert(stack, { ElementType.Diagnostic, diag })\n+    end\n+\n+    prev_lnum, prev_col = diag.lnum, diag.col\n+  end\n+\n+  local chars = {\n+    cross = '┼',\n+    horizontal = '─',\n+    horizontal_up = '┴',\n+    up_right = '└',\n+    vertical = '│',\n+    vertical_right = '├',\n+  }\n+\n+  for lnum, stack in pairs(line_stacks) do\n+    local virt_lines = {}\n+\n+    -- Note that we read in the order opposite to insertion.\n+    for i = #stack, 1, -1 do\n+      if stack[i][1] == ElementType.Diagnostic then\n+        local diagnostic = stack[i][2]\n+        local left = {} ---@type {[1]:string, [2]:string}\n+        local overlap = false\n+        local multi = false\n+\n+        -- Iterate the stack for this line to find elements on the left.\n+        for j = 1, i - 1 do\n+          local type = stack[j][1]\n+          local data = stack[j][2]\n+          if type == ElementType.Space then\n+            if multi then\n+              ---@cast data string\n+              table.insert(left, {\n+                string.rep(chars.horizontal, data:len()),\n+                virtual_lines_highlight_map[diagnostic.severity],\n+              })\n+            else\n+              table.insert(left, { data, '' })\n+            end\n+          elseif type == ElementType.Diagnostic then\n+            -- If an overlap follows this line, don't add an extra column.\n+            if stack[j + 1][1] ~= ElementType.Overlap then\n+              table.insert(left, { chars.vertical, virtual_lines_highlight_map[data.severity] })\n+            end\n+            overlap = false\n+          elseif type == ElementType.Blank then\n+            if multi then\n+              table.insert(\n+                left,\n+                { chars.horizontal_up, virtual_lines_highlight_map[data.severity] }\n+              )\n+            else\n+              table.insert(left, { chars.up_right, virtual_lines_highlight_map[data.severity] })\n+            end\n+            multi = true\n+          elseif type == ElementType.Overlap then\n+            overlap = true\n+          end\n+        end\n+\n+        local center_char ---@type string\n+        if overlap and multi then\n+          center_char = chars.cross\n+        elseif overlap then\n+          center_char = chars.vertical_right\n+        elseif multi then\n+          center_char = chars.horizontal_up\n+        else\n+          center_char = chars.up_right\n+        end\n+        local center = {\n+          {\n+            string.format('%s%s', center_char, string.rep(chars.horizontal, 4) .. ' '),\n+            virtual_lines_highlight_map[diagnostic.severity],\n+          },\n+        }\n+\n+        -- We can draw on the left side if and only if:\n+        -- a. Is the last one stacked this line.\n+        -- b. Has enough space on the left.\n+        -- c. Is just one line.\n+        -- d. Is not an overlap.\n+        local msg ---@type string\n+        if diagnostic.code then\n+          msg = string.format('%s: %s', diagnostic.code, diagnostic.message)\n+        else\n+          msg = diagnostic.message\n+        end\n+        for msg_line in msg:gmatch('([^\\n]+)') do\n+          local vline = {}\n+          vim.list_extend(vline, left)\n+          vim.list_extend(vline, center)\n+          vim.list_extend(vline, { { msg_line, virtual_lines_highlight_map[diagnostic.severity] } })\n+\n+          table.insert(virt_lines, vline)\n+\n+          -- Special-case for continuation lines:\n+          if overlap then\n+            center = {\n+              { chars.vertical, virtual_lines_highlight_map[diagnostic.severity] },\n+              { '     ', '' },\n+            }\n+          else\n+            center = { { '      ', '' } }\n+          end\n+        end\n+      end\n+    end\n+\n+    api.nvim_buf_set_extmark(bufnr, namespace, lnum, 0, { virt_lines = virt_lines })\n+  end\n+end\n+\n+---@param diagnostics vim.Diagnostic[]\n+---@param namespace integer\n+---@param bufnr integer\n+---@param opts vim.diagnostic.Opts.VirtualLines\n+local function render_current_line(diagnostics, namespace, bufnr, opts)\n+  local line_diagnostics = {}\n+  local lnum = api.nvim_win_get_cursor(0)[1] - 1\n+\n+  for _, diag in ipairs(diagnostics) do\n+    if (lnum == diag.lnum) or (diag.end_lnum and lnum >= diag.lnum and lnum <= diag.end_lnum) then\n+      table.insert(line_diagnostics, diag)\n+    end\n+  end\n+\n+  render_virtual_lines(namespace, bufnr, line_diagnostics, opts)\n+end\n+\n+M.handlers.virtual_lines = {\n+  show = function(namespace, bufnr, diagnostics, opts)\n+    vim.validate('namespace', namespace, 'number')\n+    vim.validate('bufnr', bufnr, 'number')\n+    vim.validate('diagnostics', diagnostics, vim.islist, 'a list of diagnostics')\n+    vim.validate('opts', opts, 'table', true)\n+\n+    bufnr = vim._resolve_bufnr(bufnr)\n+    opts = opts or {}\n+\n+    if not vim.api.nvim_buf_is_loaded(bufnr) then\n+      return\n+    end\n+\n+    local ns = M.get_namespace(namespace)\n+    if not ns.user_data.virt_lines_ns then\n+      ns.user_data.virt_lines_ns =\n+        api.nvim_create_namespace(string.format('%s/diagnostic/virtual_lines', ns.name))",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1912810198",
            "id": 1912810198,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yAyrW",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 1845,
            "original_position": 264,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2545965781,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912810198/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T08:19:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912810198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1912812202"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912812202"
                }
            },
            "author_association": "MEMBER",
            "body": "If we really need new hl groups they should probably link to `DiagnosticVirtualText*` ? I don't really see why we need new hl groups though.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-13T08:21:11Z",
            "diff_hunk": "@@ -232,6 +232,11 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticVirtualTextInfo  DiagnosticInfo\",\n   \"default link DiagnosticVirtualTextHint  DiagnosticHint\",\n   \"default link DiagnosticVirtualTextOk    DiagnosticOk\",\n+  \"default link DiagnosticVirtualLinesError DiagnosticError\",\n+  \"default link DiagnosticVirtualLinesWarn  DiagnosticWarn\",\n+  \"default link DiagnosticVirtualLinesInfo  DiagnosticInfo\",\n+  \"default link DiagnosticVirtualLinesHint  DiagnosticHint\",\n+  \"default link DiagnosticVirtualLinesOk    DiagnosticOk\",",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1912812202",
            "id": 1912812202,
            "line": 239,
            "node_id": "PRRC_kwDOAPphoM5yAzKq",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 239,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 8,
            "pull_request_review_id": 2545969314,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912812202/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T08:21:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1912812202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1913084967"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913084967"
                }
            },
            "author_association": "MEMBER",
            "body": "Conceivably, you might wish to use, e.g., italics for virtual text (to more clearly distinguish it from actual buffer text), while this would be too much for virtual lines (where you potentially see more text, including all diagnostics).\r\n\r\nConversely, you might wish to use a different background to make clear these are boguslines.\r\n(Although that would probably be better handled by allowing for a uniform background color different from normal.)",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-13T12:04:19Z",
            "diff_hunk": "@@ -232,6 +232,11 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticVirtualTextInfo  DiagnosticInfo\",\n   \"default link DiagnosticVirtualTextHint  DiagnosticHint\",\n   \"default link DiagnosticVirtualTextOk    DiagnosticOk\",\n+  \"default link DiagnosticVirtualLinesError DiagnosticError\",\n+  \"default link DiagnosticVirtualLinesWarn  DiagnosticWarn\",\n+  \"default link DiagnosticVirtualLinesInfo  DiagnosticInfo\",\n+  \"default link DiagnosticVirtualLinesHint  DiagnosticHint\",\n+  \"default link DiagnosticVirtualLinesOk    DiagnosticOk\",",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1913084967",
            "id": 1913084967,
            "in_reply_to_id": 1912812202,
            "line": 239,
            "node_id": "PRRC_kwDOAPphoM5yB1wn",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 239,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 8,
            "pull_request_review_id": 2546429616,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913084967/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T12:04:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913084967",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1913566153"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913566153"
                }
            },
            "author_association": "MEMBER",
            "body": "I do think that we need separate highlight groups. @clason gave some good examples in favor of it.\r\n\r\n> If we really need new hl groups they should probably link to `DiagnosticVirtualText*` ? I don't really see why we need new hl groups though.\r\n\r\nSure, but I find it a bit weird that this would be the only diagnostic handler whose highlight groups don't link to `Diagnostic*`. I chose this for a matter of consistency.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-13T17:39:56Z",
            "diff_hunk": "@@ -232,6 +232,11 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticVirtualTextInfo  DiagnosticInfo\",\n   \"default link DiagnosticVirtualTextHint  DiagnosticHint\",\n   \"default link DiagnosticVirtualTextOk    DiagnosticOk\",\n+  \"default link DiagnosticVirtualLinesError DiagnosticError\",\n+  \"default link DiagnosticVirtualLinesWarn  DiagnosticWarn\",\n+  \"default link DiagnosticVirtualLinesInfo  DiagnosticInfo\",\n+  \"default link DiagnosticVirtualLinesHint  DiagnosticHint\",\n+  \"default link DiagnosticVirtualLinesOk    DiagnosticOk\",",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1913566153",
            "id": 1913566153,
            "in_reply_to_id": 1912812202,
            "line": 239,
            "node_id": "PRRC_kwDOAPphoM5yDrPJ",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 239,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 8,
            "pull_request_review_id": 2547339688,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913566153/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T17:39:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913566153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1913567347"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913567347"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm `current_line` makes me think that this is a string instead of a boolean option.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-13T17:41:00Z",
            "diff_hunk": "@@ -590,6 +600,12 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n                      diagnostics matching the given severity\n                      |diagnostic-severity|.\n \n+*vim.diagnostic.Opts.VirtualLines*\n+\n+    Fields: ~\n+      • {only_current_line}?  (`boolean`, default: `true`) Only show",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1913567347",
            "id": 1913567347,
            "in_reply_to_id": 1912805632,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yDrhz",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 606,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2547341727,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913567347/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T17:41:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913567347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1913924738"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913924738"
                }
            },
            "author_association": "MEMBER",
            "body": "grep shows there are no other `only_` fields. I doubt this is the first time we have needed such a boolean, don't think it's worth introducing a new convention.\r\n\r\nIt's true that names can have minor ambiguities without knowing the type--but the type is available to resolve those minor ambiguities when they arise. That's a good tradeoff to avoid over-explaining names in general. (When there isn't an existing convention to draw from.)",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-13T23:20:14Z",
            "diff_hunk": "@@ -590,6 +600,12 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n                      diagnostics matching the given severity\n                      |diagnostic-severity|.\n \n+*vim.diagnostic.Opts.VirtualLines*\n+\n+    Fields: ~\n+      • {only_current_line}?  (`boolean`, default: `true`) Only show",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1913924738",
            "id": 1913924738,
            "in_reply_to_id": 1912805632,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yFCyC",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 606,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2548180980,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913924738/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-13T23:21:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913924738",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1913959709"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913959709"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair enough. I'll rename it.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-14T00:24:06Z",
            "diff_hunk": "@@ -590,6 +600,12 @@ Lua module: vim.diagnostic                                    *diagnostic-api*\n                      diagnostics matching the given severity\n                      |diagnostic-severity|.\n \n+*vim.diagnostic.Opts.VirtualLines*\n+\n+    Fields: ~\n+      • {only_current_line}?  (`boolean`, default: `true`) Only show",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1913959709",
            "id": 1913959709,
            "in_reply_to_id": 1912805632,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yFLUd",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 606,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 2548284581,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913959709/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-14T00:24:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1913959709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1914205977"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1914205977"
                }
            },
            "author_association": "MEMBER",
            "body": "Here you go: https://github.com/neovim/neovim/pull/32001",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-14T03:53:08Z",
            "diff_hunk": "@@ -1603,6 +1611,267 @@ M.handlers.virtual_text = {\n   end,\n }\n \n+local virtual_lines_augroup =\n+  api.nvim_create_augroup('vim_lsp_diagnostic_virt_lines', { clear = true })\n+\n+---Some characters (like tabs) take up more than one cell. Additionally, inline\n+---virtual text can make the distance between 2 columns larger.\n+---A diagnostic aligned under such characters needs to account for that and that\n+---many spaces to its left.\n+---@param bufnr integer\n+---@param lnum integer\n+---@param start_col integer\n+---@param end_col integer\n+---@return integer\n+local function distance_between_cols(bufnr, lnum, start_col, end_col)\n+  return api.nvim_buf_call(bufnr, function()\n+    local s = vim.fn.virtcol({ lnum + 1, start_col })\n+    local e = vim.fn.virtcol({ lnum + 1, end_col + 1 })\n+    return e - 1 - s\n+  end)\n+end\n+\n+---@param namespace integer\n+---@param bufnr integer\n+---@param diagnostics vim.Diagnostic[]\n+---@param opts vim.diagnostic.Opts.VirtualLines\n+local function render_virtual_lines(namespace, bufnr, diagnostics, opts)\n+  if not api.nvim_buf_is_loaded(bufnr) then\n+    return\n+  end\n+\n+  vim.validate('namespace', namespace, 'number')\n+  vim.validate('bufnr', bufnr, 'number')\n+  vim.validate('diagnostics', diagnostics, vim.islist, 'a list of diagnostics')\n+  vim.validate('opts', opts, 'table', true)\n+\n+  table.sort(diagnostics, function(d1, d2)\n+    if d1.lnum == d2.lnum then\n+      return d1.col < d2.col\n+    else\n+      return d1.lnum < d2.lnum\n+    end\n+  end)\n+\n+  api.nvim_buf_clear_namespace(bufnr, namespace, 0, -1)\n+\n+  if not next(diagnostics) then\n+    return\n+  end\n+\n+  -- This loop reads each line, putting them into stacks with some extra data since\n+  -- rendering each line requires understanding what is beneath it.\n+  local ElementType = { Space = 1, Diagnostic = 2, Overlap = 3, Blank = 4 } ---@enum ElementType\n+  local line_stacks = {} ---@type table<integer, {[1]:ElementType, [2]:string|vim.diagnostic.Severity|vim.Diagnostic}[]>\n+  local prev_lnum = -1\n+  local prev_col = 0\n+  for _, diag in ipairs(diagnostics) do\n+    if not line_stacks[diag.lnum] then\n+      line_stacks[diag.lnum] = {}\n+    end\n+\n+    local stack = line_stacks[diag.lnum]\n+\n+    if diag.lnum ~= prev_lnum then\n+      table.insert(stack, {\n+        ElementType.Space,\n+        string.rep(' ', distance_between_cols(bufnr, diag.lnum, 0, diag.col)),\n+      })\n+    elseif diag.col ~= prev_col then\n+      table.insert(stack, {\n+        ElementType.Space,\n+        string.rep(\n+          ' ',\n+          -- +1 because indexing starts at 0 in one API but at 1 in the other.\n+          -- -1 for non-first lines, since the previous column was already drawn.\n+          distance_between_cols(bufnr, diag.lnum, prev_col + 1, diag.col) - 1\n+        ),\n+      })\n+    else\n+      table.insert(stack, { ElementType.Overlap, diag.severity })\n+    end\n+\n+    if diag.message:find('^%s*$') then\n+      table.insert(stack, { ElementType.Blank, diag })\n+    else\n+      table.insert(stack, { ElementType.Diagnostic, diag })\n+    end\n+\n+    prev_lnum, prev_col = diag.lnum, diag.col\n+  end\n+\n+  local chars = {\n+    cross = '┼',\n+    horizontal = '─',\n+    horizontal_up = '┴',\n+    up_right = '└',\n+    vertical = '│',\n+    vertical_right = '├',\n+  }\n+\n+  for lnum, stack in pairs(line_stacks) do\n+    local virt_lines = {}\n+\n+    -- Note that we read in the order opposite to insertion.\n+    for i = #stack, 1, -1 do\n+      if stack[i][1] == ElementType.Diagnostic then\n+        local diagnostic = stack[i][2]\n+        local left = {} ---@type {[1]:string, [2]:string}\n+        local overlap = false\n+        local multi = false\n+\n+        -- Iterate the stack for this line to find elements on the left.\n+        for j = 1, i - 1 do\n+          local type = stack[j][1]\n+          local data = stack[j][2]\n+          if type == ElementType.Space then\n+            if multi then\n+              ---@cast data string\n+              table.insert(left, {\n+                string.rep(chars.horizontal, data:len()),\n+                virtual_lines_highlight_map[diagnostic.severity],\n+              })\n+            else\n+              table.insert(left, { data, '' })\n+            end\n+          elseif type == ElementType.Diagnostic then\n+            -- If an overlap follows this line, don't add an extra column.\n+            if stack[j + 1][1] ~= ElementType.Overlap then\n+              table.insert(left, { chars.vertical, virtual_lines_highlight_map[data.severity] })\n+            end\n+            overlap = false\n+          elseif type == ElementType.Blank then\n+            if multi then\n+              table.insert(\n+                left,\n+                { chars.horizontal_up, virtual_lines_highlight_map[data.severity] }\n+              )\n+            else\n+              table.insert(left, { chars.up_right, virtual_lines_highlight_map[data.severity] })\n+            end\n+            multi = true\n+          elseif type == ElementType.Overlap then\n+            overlap = true\n+          end\n+        end\n+\n+        local center_char ---@type string\n+        if overlap and multi then\n+          center_char = chars.cross\n+        elseif overlap then\n+          center_char = chars.vertical_right\n+        elseif multi then\n+          center_char = chars.horizontal_up\n+        else\n+          center_char = chars.up_right\n+        end\n+        local center = {\n+          {\n+            string.format('%s%s', center_char, string.rep(chars.horizontal, 4) .. ' '),\n+            virtual_lines_highlight_map[diagnostic.severity],\n+          },\n+        }\n+\n+        -- We can draw on the left side if and only if:\n+        -- a. Is the last one stacked this line.\n+        -- b. Has enough space on the left.\n+        -- c. Is just one line.\n+        -- d. Is not an overlap.\n+        local msg ---@type string\n+        if diagnostic.code then\n+          msg = string.format('%s: %s', diagnostic.code, diagnostic.message)\n+        else\n+          msg = diagnostic.message\n+        end\n+        for msg_line in msg:gmatch('([^\\n]+)') do\n+          local vline = {}\n+          vim.list_extend(vline, left)\n+          vim.list_extend(vline, center)\n+          vim.list_extend(vline, { { msg_line, virtual_lines_highlight_map[diagnostic.severity] } })\n+\n+          table.insert(virt_lines, vline)\n+\n+          -- Special-case for continuation lines:\n+          if overlap then\n+            center = {\n+              { chars.vertical, virtual_lines_highlight_map[diagnostic.severity] },\n+              { '     ', '' },\n+            }\n+          else\n+            center = { { '      ', '' } }\n+          end\n+        end\n+      end\n+    end\n+\n+    api.nvim_buf_set_extmark(bufnr, namespace, lnum, 0, { virt_lines = virt_lines })\n+  end\n+end\n+\n+---@param diagnostics vim.Diagnostic[]\n+---@param namespace integer\n+---@param bufnr integer\n+---@param opts vim.diagnostic.Opts.VirtualLines\n+local function render_current_line(diagnostics, namespace, bufnr, opts)\n+  local line_diagnostics = {}\n+  local lnum = api.nvim_win_get_cursor(0)[1] - 1\n+\n+  for _, diag in ipairs(diagnostics) do\n+    if (lnum == diag.lnum) or (diag.end_lnum and lnum >= diag.lnum and lnum <= diag.end_lnum) then\n+      table.insert(line_diagnostics, diag)\n+    end\n+  end\n+\n+  render_virtual_lines(namespace, bufnr, line_diagnostics, opts)\n+end\n+\n+M.handlers.virtual_lines = {\n+  show = function(namespace, bufnr, diagnostics, opts)\n+    vim.validate('namespace', namespace, 'number')\n+    vim.validate('bufnr', bufnr, 'number')\n+    vim.validate('diagnostics', diagnostics, vim.islist, 'a list of diagnostics')\n+    vim.validate('opts', opts, 'table', true)\n+\n+    bufnr = vim._resolve_bufnr(bufnr)\n+    opts = opts or {}\n+\n+    if not vim.api.nvim_buf_is_loaded(bufnr) then\n+      return\n+    end\n+\n+    local ns = M.get_namespace(namespace)\n+    if not ns.user_data.virt_lines_ns then\n+      ns.user_data.virt_lines_ns =\n+        api.nvim_create_namespace(string.format('%s/diagnostic/virtual_lines', ns.name))",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1914205977",
            "id": 1914205977,
            "in_reply_to_id": 1912810198,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5yGHcZ",
            "original_commit_id": "3a24222d3462fba0c00aa4320cf55ca1946c7c11",
            "original_line": 1845,
            "original_position": 264,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2548727999,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1914205977/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-14T03:53:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1914205977",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1920413866"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920413866"
                }
            },
            "author_association": "MEMBER",
            "body": "This should go in the \"New Features\" section, not the Breaking Changes section",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-17T16:08:57Z",
            "diff_hunk": "@@ -70,6 +70,8 @@ DIAGNOSTICS\n   the \"severity_sort\" option.\n • Diagnostics are filtered by severity before being passed to a diagnostic\n   handler |diagnostic-handlers|.\n+• A \"virtual_lines\" diagnostic handler was added to render diagnostics using\n+  virtual lines below the respective code.",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1920413866",
            "id": 1920413866,
            "line": 79,
            "node_id": "PRRC_kwDOAPphoM5ydzCq",
            "original_commit_id": "90340b690b02d037eb6ee88064e5a8e794b8c37a",
            "original_line": 79,
            "original_position": 5,
            "original_start_line": 73,
            "path": "runtime/doc/news.txt",
            "position": 6,
            "pull_request_review_id": 2559393614,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920413866/reactions"
            },
            "side": "RIGHT",
            "start_line": 78,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-17T16:08:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920413866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1920429924"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920429924"
                }
            },
            "author_association": "MEMBER",
            "body": "I think the current interface is more akin to inlay hints, so default `false` makes more sense.\r\n\r\n(If and how this is wired up to the \"show diagnostic\" and \"next diagnostic\" functions is a different -- follow-up -- question.)\r\n",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-17T16:20:05Z",
            "diff_hunk": "@@ -228,6 +229,12 @@ end\n --- See |nvim_buf_set_extmark()|.\n --- @field virt_text_hide? boolean\n \n+--- @class vim.diagnostic.Opts.VirtualLines\n+---\n+--- Only show diagnostics for the current line.\n+--- (default: `true`)",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1920429924",
            "id": 1920429924,
            "line": 235,
            "node_id": "PRRC_kwDOAPphoM5yd29k",
            "original_commit_id": "90340b690b02d037eb6ee88064e5a8e794b8c37a",
            "original_line": 235,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 15,
            "pull_request_review_id": 2559420504,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920429924/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-01-17T16:20:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920429924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31959#discussion_r1920487523"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31959"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920487523"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh my bad, I just looked for the diagnostics section when adding this bullet.",
            "commit_id": "7977da95bb9b7d8a649dfb102913a64fc1504715",
            "created_at": "2025-01-17T17:02:44Z",
            "diff_hunk": "@@ -70,6 +70,8 @@ DIAGNOSTICS\n   the \"severity_sort\" option.\n • Diagnostics are filtered by severity before being passed to a diagnostic\n   handler |diagnostic-handlers|.\n+• A \"virtual_lines\" diagnostic handler was added to render diagnostics using\n+  virtual lines below the respective code.",
            "html_url": "https://github.com/neovim/neovim/pull/31959#discussion_r1920487523",
            "id": 1920487523,
            "in_reply_to_id": 1920413866,
            "line": 79,
            "node_id": "PRRC_kwDOAPphoM5yeFBj",
            "original_commit_id": "90340b690b02d037eb6ee88064e5a8e794b8c37a",
            "original_line": 79,
            "original_position": 5,
            "original_start_line": 73,
            "path": "runtime/doc/news.txt",
            "position": 6,
            "pull_request_review_id": 2559514878,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920487523/reactions"
            },
            "side": "RIGHT",
            "start_line": 78,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-01-17T17:02:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1920487523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I know it's a bit early to talk about defaults, but the main feature I would like to build with that would be to show (all) diagnostics for the current line (only), possibly with a toggle. (Not saying that needs to be out-of-the-box, but it would be nice to keep this use case in mind.) I also think that we should switch \"show diagnostics\" to virtual lines instead of floats as I think that would be _less_ intrusive and allow showing more context.\r\n\r\nTo see why virtual lines are exciting, here's a screenshot from Helix (kudos to them):\r\n![image](https://github.com/user-attachments/assets/6c5672b0-ce41-4f53-868d-a2831658d42a)\r\n\r\nThis may look a bit fancy for core, but note how you can see at a glance where exactly each diagnostic refers to on the line. With multiple diagnostics on a line, that's always been a point of friction with virtual text and floats. (Also note the `hint` diagnostic on the first line, which remains virtual text.)",
            "created_at": "2025-01-11T10:18:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585194156",
            "id": 2585194156,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aFu6s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585194156/reactions"
            },
            "updated_at": "2025-01-11T10:19:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585194156",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The latest version of lsp_lines implements `only_current_line`, so you should be able to use the whole implementation as a starting point.\r\n\r\nPersonally, I map `<leader>l` to toggle virtual_lines. But I wouldn't provide a mapping out of the box; it's probably best to provide usage and setup recommendations in the docs, and let users pick a mapping of their liking. Especially since some will want to do multiple actions on the same mapping (e.g.: toggle virtual_text for other lines and toggle virtual_lines for the current line).\r\n\r\n@clason: The current implementation in lsp_lines looks extremely similar to your screenshot of helix (I wonder if they took inspiration from lsp_lines, or if it's simply a naturally convergent design):\r\n\r\n![image](https://github.com/user-attachments/assets/aa7bd86a-e05b-4163-8f8f-47eeacd38d4b)\r\n\r\nTo achieve the same result from your screenshot, you will also need a feature to \"hide virtual_text for current line\". This can be implemented independently of this virtual lines.",
            "created_at": "2025-01-11T17:43:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585354157",
            "id": 2585354157,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aGV-t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585354157/reactions"
            },
            "updated_at": "2025-01-11T17:47:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585354157",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
                "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
                "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhyNotHugo",
                "id": 730811,
                "login": "WhyNotHugo",
                "node_id": "MDQ6VXNlcjczMDgxMQ==",
                "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
                "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
                "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhyNotHugo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @clason: The current implementation in lsp_lines looks extremely similar to your screenshot of helix (I wonder if they took inspiration from lsp_lines, or if it's simply a naturally convergent design):\r\n\r\n🤔 \r\n\r\nYes, these are two different questions: \r\n1. Adding support for showing diagnostics in virtual lines as a diagnostic handler.\r\n2. Wiring up and exposing as diagnostic UX.\r\n\r\nWe should focus on 1. for now and leave 2. as a separate discussion. (Personally, I'd like if virtual lines replaced the float for the `show_diagnostic` function, but that's for later.)\r\n\r\n",
            "created_at": "2025-01-11T17:47:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585355311",
            "id": 2585355311,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aGWQv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585355311/reactions"
            },
            "updated_at": "2025-01-11T17:51:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585355311",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The question came up of lsp-lines' license: As far as we understand it, it's compatible with Apache 2.0 so we could include it (provided we keep the current license text, e.g., in a header of a new Lua module), but it would make things simpler if you explicitly gave permission to include the (adapted) code under Neovim's own Apache 2.0 license. Not a deal-breaker either way.",
            "created_at": "2025-01-11T17:50:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585355902",
            "id": 2585355902,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aGWZ-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585355902/reactions"
            },
            "updated_at": "2025-01-11T17:50:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585355902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "You have my explicit permission to redistribute my work on lsp_lines.nvim under the Apache 2.0 licence.\r\n\r\nPlease do note that other contributors have collaborated to the project.",
            "created_at": "2025-01-11T17:53:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585356939",
            "id": 2585356939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aGWqL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 6,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585356939/reactions"
            },
            "updated_at": "2025-01-11T17:53:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585356939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
                "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
                "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhyNotHugo",
                "id": 730811,
                "login": "WhyNotHugo",
                "node_id": "MDQ6VXNlcjczMDgxMQ==",
                "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
                "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
                "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhyNotHugo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Noted, but your general willingness is the most important question. We can follow up with the others if we care sufficiently once this is done.",
            "created_at": "2025-01-11T17:58:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585358027",
            "id": 2585358027,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aGW7L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585358027/reactions"
            },
            "updated_at": "2025-01-11T17:58:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585358027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@WhyNotHugo perhaps it's obvious, but how is https://github.com/neovim/neovim/pull/30070 meant to ease the implementation of `lsp_lines`?",
            "created_at": "2025-01-11T23:46:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585481770",
            "id": 2585481770,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aG1Iq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585481770/reactions"
            },
            "updated_at": "2025-01-11T23:46:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585481770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'll publish this so that we can inaugurate the bikeshedding ceremony <s>but note that I'm still missing tests</s> _added some initial tests_.",
            "created_at": "2025-01-11T23:51:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585482761",
            "id": 2585482761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aG1YJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585482761/reactions"
            },
            "updated_at": "2025-01-12T22:28:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585482761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Against this. Please don’t do this. Most people switch from IDEs to Vim/Neovim because it is lightweight. Don’t let Neovim continue down the path of becoming bloated. This kind of UI is not needed by everyone, so please don’t force it into the core. Of course, there may be options to turn it on or off by default, but keep in mind that Neovim is becoming more bloated with each release. Helix lacks a robust plugin ecosystem, so they had to implement such features internally. Neovim, on the other hand, already has a mature and excellent plugin ecosystem.",
            "created_at": "2025-01-12T04:34:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585582928",
            "id": 2585582928,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aHN1Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 4,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585582928/reactions"
            },
            "updated_at": "2025-01-12T11:07:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585582928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @WhyNotHugo perhaps it's obvious, but how is #30070 meant to ease the implementation of `lsp_lines`?\r\n\r\nhttps://todo.sr.ht/~whynothugo/lsp_lines.nvim/3",
            "created_at": "2025-01-12T09:56:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585666510",
            "id": 2585666510,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aHiPO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585666510/reactions"
            },
            "updated_at": "2025-01-12T09:56:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585666510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
                "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
                "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhyNotHugo",
                "id": 730811,
                "login": "WhyNotHugo",
                "node_id": "MDQ6VXNlcjczMDgxMQ==",
                "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
                "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
                "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhyNotHugo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > @WhyNotHugo perhaps it's obvious, but how is #30070 meant to ease the implementation of `lsp_lines`?\r\n> \r\n> https://todo.sr.ht/~whynothugo/lsp_lines.nvim/3\r\n\r\nOhh so it looks like now that https://github.com/neovim/neovim/pull/30070 went it, this should be automagically supported.",
            "created_at": "2025-01-12T17:06:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2585836217",
            "id": 2585836217,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6aILq5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 3,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585836217/reactions"
            },
            "updated_at": "2025-01-12T17:06:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2585836217",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * Having both active at the same time would be ... noisy\r\n\r\nAs @WhyNotHugo mentioned above, some people (including myself) might be interested in having `virtual_lines` only for the current line and `virtual_text` for the rest. I would also like to be able to toggle `virtual_lines` only, but not `virtual_text`.\r\n\r\n> * No new hl groups\r\n\r\nI think this is a con (previous discussion [here](https://github.com/neovim/neovim/pull/31959#discussion_r1913084967)).\r\n\r\n> * Could later consider a dynamic/best-fit style that uses either lines or text depending on the diagnostic length\r\n\r\nGiven that `virtual_text` already allows formatting the diagnostic, the length is slightly irrelevant here IMO since it can always be truncated there.\r\n",
            "created_at": "2025-01-14T21:19:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2591123223",
            "id": 2591123223,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6acWcX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2591123223/reactions"
            },
            "updated_at": "2025-01-14T21:19:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2591123223",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nit on the commit message: should be `feat(diagnostic)`, not `feat(lsp)`",
            "created_at": "2025-01-17T16:13:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2598701293",
            "id": 2598701293,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a5Qjt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2598701293/reactions"
            },
            "updated_at": "2025-01-17T16:13:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2598701293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "From Matrix: Make sure I disable the handler by default. cc @gpanders ",
            "created_at": "2025-01-17T17:00:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2598793681",
            "id": 2598793681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a5nHR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2598793681/reactions"
            },
            "updated_at": "2025-01-17T17:00:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2598793681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Some diagnostics can be very long, e.g. from rust-analyzer:\r\n\r\n![image](https://github.com/user-attachments/assets/98b926a8-2756-49c3-b02b-8b1e41dbacd0)\r\n\r\nWe should probably have a `max_lines` configuration that truncates the number of virtual lines that are added (with something like `and N more lines` as the last line). The full message can still be seen with `open_float`.\r\n\r\nThis should probably be set to something low by default, like 3.",
            "created_at": "2025-01-17T21:43:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2599265475",
            "id": 2599265475,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a7aTD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599265475/reactions"
            },
            "updated_at": "2025-01-17T21:43:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599265475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> We should probably have a max_lines configuration that truncates the number of virtual lines that are added (with something like and N more lines as the last line). The full message can still be seen with open_float.\r\n> \r\n> This should probably be set to something low by default, like 3.\r\n\r\n-1 If a long diagnostic is an problem, the handler can be [temporarily] disabled to hide them. The same is true if a single line has too many diagnostics.\r\n\r\nWe shouldn't truncate diagnostics by default (especially considering that this handler is disabled by default anyway).",
            "created_at": "2025-01-17T21:50:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2599272696",
            "id": 2599272696,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a7cD4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599272696/reactions"
            },
            "updated_at": "2025-01-17T21:50:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599272696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
                "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
                "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhyNotHugo",
                "id": 730811,
                "login": "WhyNotHugo",
                "node_id": "MDQ6VXNlcjczMDgxMQ==",
                "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
                "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
                "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhyNotHugo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We shouldn't truncate diagnostics by default (especially considering that this handler is disabled by default anyway).\r\n\r\nThen perhaps a knob to not show virtual lines _at all_ (instead of truncating) if there are more than `N` lines.\r\n\r\nI never want to see half my screen taken up by virt lines as in that example above. Frankly, I don't even really want to see more than one diagnostic as virtual lines. If there is that much information to display, I'd prefer to suppress the virtual lines and open the diagnostics in a floating window instead. People will have different opinions about this, but we should provide the flexibility to configure this to meet people's different needs.\r\n\r\nNote that the `virtual_text` handler already truncates diagnostics. It only shows the first diagnostic on a line, and even then it only shows the first line of that diagnostic. So it's not like this is unprecedented.",
            "created_at": "2025-01-17T21:59:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2599282984",
            "id": 2599282984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a7eko",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599282984/reactions"
            },
            "updated_at": "2025-01-17T21:59:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599282984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I never want to see half my screen taken up by virt lines as in that example above. Frankly, I don't even really want to see more than one diagnostic as virtual lines.\r\n\r\nI find this situation more useful that having to opt between truncating surrounding code (floating_text) or truncating diagnostics and showing only one (virtual_text).\r\n\r\nThat's the whole reason that virtual_lines came to be: as a way to read the entire diagnostic while not obstructing the surrounding code.\r\n\r\n> Then perhaps a knob to not show virtual lines at all (instead of truncating) if there are more than N lines.\r\n\r\nGenerally, I've found it more useful to manually toggle diagnostics. This is why the recommendation for lsp_lines was to set a convenient mapping to do this quickly. Sometimes I have 12 lines of diagnostics on screen and need to read them to understand what's up, but sometimes I have just 1 or 2 but don't care about them because I'm in the middle of some refactor.\r\n\r\nWith knobs such as \"hide lines if they are more than N\", the only way to read the whole diagnostic is to change this value of `N`.",
            "created_at": "2025-01-17T23:52:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2599385448",
            "id": 2599385448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a73lo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599385448/reactions"
            },
            "updated_at": "2025-01-17T23:52:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599385448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
                "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
                "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhyNotHugo",
                "id": 730811,
                "login": "WhyNotHugo",
                "node_id": "MDQ6VXNlcjczMDgxMQ==",
                "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
                "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
                "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhyNotHugo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry for the long message; couldn't figure out how to summarise that better.",
            "created_at": "2025-01-17T23:53:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2599385744",
            "id": 2599385744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a73qQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599385744/reactions"
            },
            "updated_at": "2025-01-17T23:53:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599385744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/730811?v=4",
                "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhyNotHugo/followers",
                "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhyNotHugo",
                "id": 730811,
                "login": "WhyNotHugo",
                "node_id": "MDQ6VXNlcjczMDgxMQ==",
                "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs",
                "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events",
                "repos_url": "https://api.github.com/users/WhyNotHugo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhyNotHugo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree with @WhyNotHugo regarding showing the full diagnostic.\r\n\r\n> Note that the `virtual_text` handler already truncates diagnostics. It only shows the first diagnostic on a line, and even then it only shows the first line of that diagnostic. So it's not like this is unprecedented.\r\n\r\nIssues like https://github.com/neovim/neovim/issues/16545 show that often people want to see more of the diagnostics, not a truncated version.\r\n\r\nIt will be hard to please everyone of course, but one can easily override the handler and pass diagnostics that have truncated messages.",
            "created_at": "2025-01-18T03:02:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2599490871",
            "id": 2599490871,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a8RU3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599490871/reactions"
            },
            "updated_at": "2025-01-18T03:02:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599490871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Sorry for the long message; couldn't figure out how to summarise that better.\r\n\r\nNot long at all, this was very well-put.",
            "created_at": "2025-01-18T03:38:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2599506899",
            "id": 2599506899,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6a8VPT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599506899/reactions"
            },
            "updated_at": "2025-01-18T03:38:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2599506899",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As agreed on Matrix, I've added a `format` option to let users figure out how to handle particularly verbose servers.",
            "created_at": "2025-01-19T23:54:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/31959#issuecomment-2601077081",
            "id": 2601077081,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
            "node_id": "IC_kwDOAPphoM6bCUlZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2601077081/reactions"
            },
            "updated_at": "2025-01-19T23:54:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2601077081",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31959/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31959/commits",
    "created_at": "2025-01-11T03:45:03Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31959.diff",
    "draft": false,
    "head": {
        "label": "MariaSolOs:diag-lines",
        "ref": "diag-lines",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/MariaSolOs/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/MariaSolOs/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/MariaSolOs/neovim/branches{/branch}",
            "clone_url": "https://github.com/MariaSolOs/neovim.git",
            "collaborators_url": "https://api.github.com/repos/MariaSolOs/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/MariaSolOs/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/MariaSolOs/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/MariaSolOs/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/MariaSolOs/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/MariaSolOs/neovim/contributors",
            "created_at": "2023-08-05T17:10:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/MariaSolOs/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/MariaSolOs/neovim/downloads",
            "events_url": "https://api.github.com/repos/MariaSolOs/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/MariaSolOs/neovim/forks",
            "full_name": "MariaSolOs/neovim",
            "git_commits_url": "https://api.github.com/repos/MariaSolOs/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/MariaSolOs/neovim/git/tags{/sha}",
            "git_url": "git://github.com/MariaSolOs/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/MariaSolOs/neovim/hooks",
            "html_url": "https://github.com/MariaSolOs/neovim",
            "id": 675070403,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/MariaSolOs/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/MariaSolOs/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/MariaSolOs/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/MariaSolOs/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/MariaSolOs/neovim/merges",
            "milestones_url": "https://api.github.com/repos/MariaSolOs/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKDzBww",
            "notifications_url": "https://api.github.com/repos/MariaSolOs/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/MariaSolOs/neovim/pulls{/number}",
            "pushed_at": "2025-01-20T23:29:19Z",
            "releases_url": "https://api.github.com/repos/MariaSolOs/neovim/releases{/id}",
            "size": 296693,
            "ssh_url": "git@github.com:MariaSolOs/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/MariaSolOs/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/MariaSolOs/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/MariaSolOs/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/MariaSolOs/neovim/subscription",
            "svn_url": "https://github.com/MariaSolOs/neovim",
            "tags_url": "https://api.github.com/repos/MariaSolOs/neovim/tags",
            "teams_url": "https://api.github.com/repos/MariaSolOs/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/MariaSolOs/neovim/git/trees{/sha}",
            "updated_at": "2025-01-11T02:45:51Z",
            "url": "https://api.github.com/repos/MariaSolOs/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7977da95bb9b7d8a649dfb102913a64fc1504715",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31959",
    "id": 2271781663,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31959",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "license statement, legal, redistribution",
            "id": 7997412355,
            "name": "license",
            "node_id": "LA_kwDOAPphoM8AAAAB3K7UAw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/license"
        }
    ],
    "locked": false,
    "merge_commit_sha": "d18a48126bfdd91a4f9562c4d57c654fac41a1c9",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6HaKMf",
    "number": 31959,
    "patch_url": "https://github.com/neovim/neovim/pull/31959.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31959/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7977da95bb9b7d8a649dfb102913a64fc1504715",
    "title": "feat(diagnostic): add a virtual_lines diagnostic handler",
    "updated_at": "2025-01-19T23:54:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31959",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
        "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
        "followers_url": "https://api.github.com/users/MariaSolOs/followers",
        "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
        "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MariaSolOs",
        "id": 62502207,
        "login": "MariaSolOs",
        "node_id": "MDQ6VXNlcjYyNTAyMjA3",
        "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
        "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
        "repos_url": "https://api.github.com/users/MariaSolOs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MariaSolOs",
        "user_view_type": "public"
    }
}