{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35827/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35827/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35827"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35827"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35827/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/dc8235c48c8be65659f75461d8cb185ab1941d0f"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6358,
            "forks_count": 6358,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 2001,
            "open_issues_count": 2001,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-10-14T02:23:27Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 347842,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 93440,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-10-14T02:23:32Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 93440,
            "watchers_count": 93440,
            "web_commit_signoff_required": false
        },
        "sha": "b4513442a158f416eac37cdfa9ba282f58372679",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This PR adds initial lockfile support to `vim.pack`. Resolves #34776.\r\n\r\nTL;DR (more details are in commit messages):\r\n\r\n- Add tracking of relevant data via on disk file. It is located at '$XDG_CONFIG_HOME/nvim/nvim-pack.lock' and is recommended to be put under version control (as the rest of the config). **Edit**: it was decided to go with 'nvim-pack-lock.json' as a name.\r\n\r\n    The file is read exactly once during an active session (for performance) and is updated (both in memory and on disk) only when needed.\r\n\r\n- Update several functions to use lockfile internally:\r\n    - `get()` takes `version` of non-active plugin from lockfile.\r\n    - `get()` always returns plugin's `rev` regardless of `opts.info` (as it now doesn't need Git CLI call).\r\n    - `update()` now updates all plugins by default, even non-active (because their `version` is now known).\r\n\r\n- Prefer using revision from lockfile when installing a plugin, instead of pulling latest according to `version`. This seems to be the most expected side effect of present lockfile.\r\n\r\nNotes:\r\n\r\n- **Important**. The lockfile name is 'nvim-pack.lock', which doesn't make it immediately obvious that it is a JSON file. It will be detected like one within Neovim, but not outside. Since the file needs to contain 'nvim-pack' and 'lock' somewhere in its name, I decided to go with current name. The alternative is 'nvim-pack-lock.json', but it might be too verbose. If it is deemed not, I'd rather go with it. So this requires executive decision.\r\n\r\n- The current implementation should work reliably when `vim.pack` is used as expected, but *might* be a bit brittle when it comes to unexpected situations. For example:\r\n\r\n    - Lockfile is manually edited or deleted entirely. It is explicitly documented to not do that. To further mitigate that, I plan to add `:checkhealth` support for lockfile also (#34777) which will contain suggestions on how to fix situations.\r\n    - There is an error in between state change and lockfile write. This doesn't seem likely based on the code, but not 100% sure.\r\n    - There are several Neovim instances that try to write to the same lockfile. Not sure how to mitigate this without much complications. I guess just saying \"please don't do that\" should be enough.\r\n\r\n- This PR does not contain all planned usages of lockfile data. I also plan to update `vim.pack.add()` to perform extra actions (#34771 and maybe ensuring installation of all plugins from lockfile), but those will probably require more discussions and this PR is already big enough.\r\n\r\n**Edit**: Several hours after posting I realized that I made a demo and forgot to post here :facepalm: Here it is:\r\n\r\nhttps://github.com/user-attachments/assets/58815610-16e4-4be0-a562-344953b61370",
    "closed_at": "2025-10-04T16:48:29Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2393308946"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393308946"
                }
            },
            "author_association": "MEMBER",
            "body": "I wonder if it should be explicit, i.e. `vim.pack.add(lockfile=...)`.\n\nI guess \"explicit\" might be painful UX, e.g. on a new system, the user would need to edit their config or run the command manually instead of just copying their Nvim config and launching `nvim`.",
            "commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "created_at": "2025-10-01T02:25:49Z",
            "diff_hunk": "@@ -221,6 +221,13 @@ Uses Git to manage plugins and requires present `git` executable of at least\n version 2.36. Target plugins should be Git repositories with versions as named\n tags following semver convention `v<major>.<minor>.<patch>`.\n \n+The latest state of all managed plugins is stored inside a *vim.pack-lockfile*\n+located at `$XDG_CONFIG_HOME/nvim/nvim-pack.lock`. It is a JSON file that is\n+used to persistently track data about plugins. Put it under version control\n+for a more robust config, as initial install prefers revision from the\n+lockfile instead of inferring from `version`. Should not be edited by hand or",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2393308946",
            "id": 2393308946,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6Opv8S",
            "original_commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "original_line": 228,
            "original_position": 8,
            "original_start_line": 227,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3287370942,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393308946/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-01T03:10:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393308946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2393316964"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393316964"
                }
            },
            "author_association": "MEMBER",
            "body": "(non-blocker) Is there a risk of conflicting writes from multiple Nvim instances? We don't necessarily need to recover from that, but detecting it (or handling read/write errors) and raising an informative error (which links to a help tag) helps us avoid \"weird glitch\" situations, and documents expectations.",
            "commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "created_at": "2025-10-01T02:34:01Z",
            "diff_hunk": "@@ -190,13 +198,72 @@ local function git_get_tags(cwd)\n   return tags == '' and {} or vim.split(tags, '\\n')\n end\n \n--- Plugin operations ----------------------------------------------------------\n+-- Lockfile -------------------------------------------------------------------\n \n --- @return string\n local function get_plug_dir()\n   return vim.fs.joinpath(vim.fn.stdpath('data'), 'site', 'pack', 'core', 'opt')\n end\n \n+--- @class (private) vim.pack.LockData\n+--- @field rev string Latest recorded revision.\n+--- @field src string Plugin source.\n+--- @field version? string|vim.VersionRange Plugin `version`, as supplied in `spec`.\n+\n+--- @class (private) vim.pack.Lock\n+--- @field plugins table<string, vim.pack.LockData> Map from plugin name to its lock data.\n+\n+--- @type vim.pack.Lock\n+local plugin_lock\n+\n+local function lock_get_path()\n+  return vim.fs.joinpath(vim.fn.stdpath('config'), 'nvim-pack.lock')\n+end\n+\n+local function lock_read()\n+  if plugin_lock then\n+    return\n+  end\n+  local fd = uv.fs_open(lock_get_path(), 'r', 438)\n+  if not fd then\n+    plugin_lock = { plugins = {} }\n+    return\n+  end\n+  local stat = assert(uv.fs_fstat(fd))\n+  local data = assert(uv.fs_read(fd, stat.size, 0))\n+  assert(uv.fs_close(fd))\n+  plugin_lock = vim.json.decode(data) --- @type vim.pack.Lock\n+\n+  -- Deserialize `version`\n+  for _, l_data in pairs(plugin_lock.plugins) do\n+    local version = l_data.version\n+    if type(version) == 'string' then\n+      l_data.version = version:match(\"^'(.+)'$\") or vim.version.range(version)\n+    end\n+  end\n+end\n+\n+local function lock_write()\n+  -- Serialize `version`\n+  local lock = vim.deepcopy(plugin_lock)\n+  for _, l_data in pairs(lock.plugins) do\n+    local version = l_data.version\n+    if version then\n+      l_data.version = type(version) == 'string' and (\"'%s'\"):format(version) or tostring(version)\n+    end\n+  end\n+\n+  local path = lock_get_path()\n+  vim.fn.mkdir(vim.fs.dirname(path), 'p')\n+  local fd = assert(uv.fs_open(path, 'w', 438))\n+\n+  local data = vim.json.encode(lock, { indent = '  ', sort_keys = true })\n+  assert(uv.fs_write(fd, data))\n+  assert(uv.fs_close(fd))",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2393316964",
            "id": 2393316964,
            "line": 264,
            "node_id": "PRRC_kwDOAPphoM6Opx5k",
            "original_commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "original_line": 264,
            "original_position": 99,
            "original_start_line": 258,
            "path": "runtime/lua/vim/pack.lua",
            "position": 112,
            "pull_request_review_id": 3287370942,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393316964/reactions"
            },
            "side": "RIGHT",
            "start_line": 260,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-01T03:10:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393316964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2393319089"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393319089"
                }
            },
            "author_association": "MEMBER",
            "body": "can use a lua `([==[ ... ]==]):format(...)` multiline comment which replaces `%s`. Or use serialization as your comment above hints.",
            "commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "created_at": "2025-10-01T02:36:22Z",
            "diff_hunk": "@@ -413,6 +430,117 @@ describe('vim.pack', function()\n       eq('plugindirs main', exec_lua('return require(\"plugindirs\")'))\n     end)\n \n+    it('creates lockfile', function()\n+      local helptags_rev = git_get_hash('HEAD', 'helptags')\n+      exec_lua(function()\n+        vim.pack.add({\n+          { src = repos_src.basic, version = 'some-tag' },\n+          { src = repos_src.defbranch, version = 'main' },\n+          { src = repos_src.helptags, version = helptags_rev },\n+          { src = repos_src.plugindirs },\n+          { src = repos_src.semver, version = vim.version.range('*') },\n+        })\n+      end)\n+\n+      local basic_rev = git_get_hash('some-tag', 'basic')\n+      local defbranch_rev = git_get_hash('main', 'defbranch')\n+      local plugindirs_rev = git_get_hash('HEAD', 'plugindirs')\n+      local semver_rev = git_get_hash('v1.0.0', 'semver')\n+\n+      -- Should properly format as indented JSON\n+      local ref_lockfile_lines = {\n+        '{',\n+        '  \"plugins\": {',\n+        '    \"basic\": {',\n+        '      \"rev\": \"' .. basic_rev .. '\",',\n+        '      \"src\": \"' .. repos_src.basic .. '\",',",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2393319089",
            "id": 2393319089,
            "line": 456,
            "node_id": "PRRC_kwDOAPphoM6Opyax",
            "original_commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "original_line": 456,
            "original_position": 65,
            "original_start_line": 455,
            "path": "test/functional/plugin/pack_spec.lua",
            "position": 65,
            "pull_request_review_id": 3287370942,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393319089/reactions"
            },
            "side": "RIGHT",
            "start_line": 455,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-01T03:10:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2393319089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2403948398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403948398"
                }
            },
            "author_association": "MEMBER",
            "body": "I've just tried several other approaches, but I really think that this is the best one, as it closely represents the structure while not having the count through all `%s` to see which one is represented by `format()` argument. Plus it allows comments and shorter.\r\n\r\nHere is a comparison:\r\n\r\n<details><summary>Current line list approach</summary>\r\n\r\n```lua\r\nlocal ref_lockfile_lines = {\r\n  '{',\r\n  '  \"plugins\": {',\r\n  '    \"basic\": {',\r\n  '      \"rev\": \"' .. basic_rev .. '\",',\r\n  '      \"src\": \"' .. repos_src.basic .. '\",',\r\n  -- Branch, tag, and commit should be serialized like `'value'` to be\r\n  -- distinguishable from version ranges\r\n  '      \"version\": \"\\'some-tag\\'\"',\r\n  '    },',\r\n  '    \"defbranch\": {',\r\n  '      \"rev\": \"' .. defbranch_rev .. '\",',\r\n  '      \"src\": \"' .. repos_src.defbranch .. '\",',\r\n  '      \"version\": \"\\'main\\'\"',\r\n  '    },',\r\n  '    \"helptags\": {',\r\n  '      \"rev\": \"' .. helptags_rev .. '\",',\r\n  '      \"src\": \"' .. repos_src.helptags .. '\",',\r\n  '      \"version\": \"\\'' .. helptags_rev .. '\\'\"',\r\n  '    },',\r\n  '    \"plugindirs\": {',\r\n  '      \"rev\": \"' .. plugindirs_rev .. '\",',\r\n  '      \"src\": \"' .. repos_src.plugindirs .. '\"',\r\n  -- Absent `version` should be missing and not autoresolved\r\n  '    },',\r\n  '    \"semver\": {',\r\n  '      \"rev\": \"' .. semver_rev .. '\",',\r\n  '      \"src\": \"' .. repos_src.semver .. '\",',\r\n  '      \"version\": \">=0.0.0\"',\r\n  '    }',\r\n  '  }',\r\n  '}',\r\n}\r\neq(ref_lockfile_lines, fn.readfile(get_lock_path()))\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>Alternative with <code>([[...]]):format(...)</code></summary>\r\n\r\n```lua\r\nlocal ref_lockfile_lines_2 = ([[\r\n  {\r\n    \"plugins\": {\r\n      \"basic\": {\r\n        \"rev\": \"%s\",\r\n        \"src\": \"%s\",\r\n        \"version\": \"'some-tag'\"\r\n      },\r\n      \"defbranch\": {\r\n        \"rev\": \"%s\",\r\n        \"src\": \"%s\",\r\n        \"version\": \"'main'\"\r\n      },\r\n      \"helptags\": {\r\n        \"rev\": \"%s\",\r\n        \"src\": \"%s\",\r\n        \"version\": \"'%s'\"\r\n      },\r\n      \"plugindirs\": {\r\n        \"rev\": \"%s\",\r\n        \"src\": \"%s\"\r\n      },\r\n      \"semver\": {\r\n        \"rev\": \"%s\",\r\n        \"src\": \"%s\",\r\n        \"version\": \">=0.0.0\"\r\n      }\r\n    }\r\n  }]]):format(\r\n  basic_rev,\r\n  repos_src.basic,\r\n  defbranch_rev,\r\n  repos_src.defbranch,\r\n  helptags_rev,\r\n  repos_src.helptags,\r\n  helptags_rev,\r\n  plugindirs_rev,\r\n  repos_src.plugindirs,\r\n  semver_rev,\r\n  repos_src.semver\r\n)\r\neq(vim.text.indent(0, ref_lockfile_lines_2), fn.readblob(get_lock_path()))\r\n```\r\n</details>\r\n\r\nShould I change it to the alternative?",
            "commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "created_at": "2025-10-04T12:32:01Z",
            "diff_hunk": "@@ -413,6 +430,117 @@ describe('vim.pack', function()\n       eq('plugindirs main', exec_lua('return require(\"plugindirs\")'))\n     end)\n \n+    it('creates lockfile', function()\n+      local helptags_rev = git_get_hash('HEAD', 'helptags')\n+      exec_lua(function()\n+        vim.pack.add({\n+          { src = repos_src.basic, version = 'some-tag' },\n+          { src = repos_src.defbranch, version = 'main' },\n+          { src = repos_src.helptags, version = helptags_rev },\n+          { src = repos_src.plugindirs },\n+          { src = repos_src.semver, version = vim.version.range('*') },\n+        })\n+      end)\n+\n+      local basic_rev = git_get_hash('some-tag', 'basic')\n+      local defbranch_rev = git_get_hash('main', 'defbranch')\n+      local plugindirs_rev = git_get_hash('HEAD', 'plugindirs')\n+      local semver_rev = git_get_hash('v1.0.0', 'semver')\n+\n+      -- Should properly format as indented JSON\n+      local ref_lockfile_lines = {\n+        '{',\n+        '  \"plugins\": {',\n+        '    \"basic\": {',\n+        '      \"rev\": \"' .. basic_rev .. '\",',\n+        '      \"src\": \"' .. repos_src.basic .. '\",',",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2403948398",
            "id": 2403948398,
            "in_reply_to_id": 2393319089,
            "line": 456,
            "node_id": "PRRC_kwDOAPphoM6PSVdu",
            "original_commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "original_line": 456,
            "original_position": 65,
            "original_start_line": 455,
            "path": "test/functional/plugin/pack_spec.lua",
            "position": 65,
            "pull_request_review_id": 3301810660,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403948398/reactions"
            },
            "side": "RIGHT",
            "start_line": 455,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-04T12:32:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403948398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2403954695"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403954695"
                }
            },
            "author_association": "MEMBER",
            "body": "I've tried to address this in notes of the [initial comment](https://github.com/neovim/neovim/pull/35827#issue-3430217333). There shouldn't be any read/write errors, just common problems with outdated cache. I.e. not up to date data which might affect `del()` and `get()`. I think `update()` should still work fine (at least with current code).\r\n\r\nMy suggested approach is to rely here on a `:checkhealth` which will tell if lockfile is outdated.\r\n\r\nMaybe also adding a note that whenever there is a change of plugin's state on disk, make sure to `:restart` all active instances? What would be the best way to add this?",
            "commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "created_at": "2025-10-04T12:45:26Z",
            "diff_hunk": "@@ -190,13 +198,72 @@ local function git_get_tags(cwd)\n   return tags == '' and {} or vim.split(tags, '\\n')\n end\n \n--- Plugin operations ----------------------------------------------------------\n+-- Lockfile -------------------------------------------------------------------\n \n --- @return string\n local function get_plug_dir()\n   return vim.fs.joinpath(vim.fn.stdpath('data'), 'site', 'pack', 'core', 'opt')\n end\n \n+--- @class (private) vim.pack.LockData\n+--- @field rev string Latest recorded revision.\n+--- @field src string Plugin source.\n+--- @field version? string|vim.VersionRange Plugin `version`, as supplied in `spec`.\n+\n+--- @class (private) vim.pack.Lock\n+--- @field plugins table<string, vim.pack.LockData> Map from plugin name to its lock data.\n+\n+--- @type vim.pack.Lock\n+local plugin_lock\n+\n+local function lock_get_path()\n+  return vim.fs.joinpath(vim.fn.stdpath('config'), 'nvim-pack.lock')\n+end\n+\n+local function lock_read()\n+  if plugin_lock then\n+    return\n+  end\n+  local fd = uv.fs_open(lock_get_path(), 'r', 438)\n+  if not fd then\n+    plugin_lock = { plugins = {} }\n+    return\n+  end\n+  local stat = assert(uv.fs_fstat(fd))\n+  local data = assert(uv.fs_read(fd, stat.size, 0))\n+  assert(uv.fs_close(fd))\n+  plugin_lock = vim.json.decode(data) --- @type vim.pack.Lock\n+\n+  -- Deserialize `version`\n+  for _, l_data in pairs(plugin_lock.plugins) do\n+    local version = l_data.version\n+    if type(version) == 'string' then\n+      l_data.version = version:match(\"^'(.+)'$\") or vim.version.range(version)\n+    end\n+  end\n+end\n+\n+local function lock_write()\n+  -- Serialize `version`\n+  local lock = vim.deepcopy(plugin_lock)\n+  for _, l_data in pairs(lock.plugins) do\n+    local version = l_data.version\n+    if version then\n+      l_data.version = type(version) == 'string' and (\"'%s'\"):format(version) or tostring(version)\n+    end\n+  end\n+\n+  local path = lock_get_path()\n+  vim.fn.mkdir(vim.fs.dirname(path), 'p')\n+  local fd = assert(uv.fs_open(path, 'w', 438))\n+\n+  local data = vim.json.encode(lock, { indent = '  ', sort_keys = true })\n+  assert(uv.fs_write(fd, data))\n+  assert(uv.fs_close(fd))",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2403954695",
            "id": 2403954695,
            "in_reply_to_id": 2393316964,
            "line": 264,
            "node_id": "PRRC_kwDOAPphoM6PSXAH",
            "original_commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "original_line": 264,
            "original_position": 99,
            "original_start_line": 258,
            "path": "runtime/lua/vim/pack.lua",
            "position": 112,
            "pull_request_review_id": 3301820826,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403954695/reactions"
            },
            "side": "RIGHT",
            "start_line": 260,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-04T12:45:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403954695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2403955473"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403955473"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think this is needed:\r\n\r\n- If user wants the initial install based on lockfile revision - treat lockfile as part of the config. Like add to VCS and have it present for the initial install.\r\n- If user doesn't want that - don't treat lockfile like part of the config. If it is not present on initial install, then `version` is used.",
            "commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "created_at": "2025-10-04T12:47:46Z",
            "diff_hunk": "@@ -221,6 +221,13 @@ Uses Git to manage plugins and requires present `git` executable of at least\n version 2.36. Target plugins should be Git repositories with versions as named\n tags following semver convention `v<major>.<minor>.<patch>`.\n \n+The latest state of all managed plugins is stored inside a *vim.pack-lockfile*\n+located at `$XDG_CONFIG_HOME/nvim/nvim-pack.lock`. It is a JSON file that is\n+used to persistently track data about plugins. Put it under version control\n+for a more robust config, as initial install prefers revision from the\n+lockfile instead of inferring from `version`. Should not be edited by hand or",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2403955473",
            "id": 2403955473,
            "in_reply_to_id": 2393308946,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6PSXMR",
            "original_commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "original_line": 228,
            "original_position": 8,
            "original_start_line": 227,
            "path": "runtime/doc/pack.txt",
            "position": 1,
            "pull_request_review_id": 3301822405,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403955473/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-04T12:47:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2403955473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2404087721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404087721"
                }
            },
            "author_association": "MEMBER",
            "body": "The `([[...]]):format(...)` looks more readable to me but no big deal.",
            "commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "created_at": "2025-10-04T16:42:43Z",
            "diff_hunk": "@@ -413,6 +430,117 @@ describe('vim.pack', function()\n       eq('plugindirs main', exec_lua('return require(\"plugindirs\")'))\n     end)\n \n+    it('creates lockfile', function()\n+      local helptags_rev = git_get_hash('HEAD', 'helptags')\n+      exec_lua(function()\n+        vim.pack.add({\n+          { src = repos_src.basic, version = 'some-tag' },\n+          { src = repos_src.defbranch, version = 'main' },\n+          { src = repos_src.helptags, version = helptags_rev },\n+          { src = repos_src.plugindirs },\n+          { src = repos_src.semver, version = vim.version.range('*') },\n+        })\n+      end)\n+\n+      local basic_rev = git_get_hash('some-tag', 'basic')\n+      local defbranch_rev = git_get_hash('main', 'defbranch')\n+      local plugindirs_rev = git_get_hash('HEAD', 'plugindirs')\n+      local semver_rev = git_get_hash('v1.0.0', 'semver')\n+\n+      -- Should properly format as indented JSON\n+      local ref_lockfile_lines = {\n+        '{',\n+        '  \"plugins\": {',\n+        '    \"basic\": {',\n+        '      \"rev\": \"' .. basic_rev .. '\",',\n+        '      \"src\": \"' .. repos_src.basic .. '\",',",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2404087721",
            "id": 2404087721,
            "in_reply_to_id": 2393319089,
            "line": 456,
            "node_id": "PRRC_kwDOAPphoM6PS3ep",
            "original_commit_id": "26decd63aea65d5c002ac62a06a344a2a839ef5c",
            "original_line": 456,
            "original_position": 65,
            "original_start_line": 455,
            "path": "test/functional/plugin/pack_spec.lua",
            "position": 65,
            "pull_request_review_id": 3302005154,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404087721/reactions"
            },
            "side": "RIGHT",
            "start_line": 455,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-04T16:42:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404087721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2404093651"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404093651"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm...",
            "commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "created_at": "2025-10-04T16:46:00Z",
            "diff_hunk": "@@ -413,6 +430,117 @@ describe('vim.pack', function()\n       eq('plugindirs main', exec_lua('return require(\"plugindirs\")'))\n     end)\n \n+    it('creates lockfile', function()\n+      local helptags_rev = git_get_hash('HEAD', 'helptags')\n+      exec_lua(function()\n+        vim.pack.add({\n+          { src = repos_src.basic, version = 'some-tag' },\n+          { src = repos_src.defbranch, version = 'main' },\n+          { src = repos_src.helptags, version = helptags_rev },\n+          { src = repos_src.plugindirs },\n+          { src = repos_src.semver, version = vim.version.range('*') },\n+        })\n+      end)\n+\n+      local basic_rev = git_get_hash('some-tag', 'basic')\n+      local defbranch_rev = git_get_hash('main', 'defbranch')\n+      local plugindirs_rev = git_get_hash('HEAD', 'plugindirs')\n+      local semver_rev = git_get_hash('v1.0.0', 'semver')\n+\n+      -- Should properly format as indented JSON\n+      local ref_lockfile_lines = {\n+        '{',\n+        '  \"plugins\": {',\n+        '    \"basic\": {',\n+        '      \"rev\": \"' .. basic_rev .. '\",',\n+        '      \"src\": \"' .. repos_src.basic .. '\",',\n+        -- Branch, tag, and commit should be serialized like `'value'` to be\n+        -- distinguishable from version ranges\n+        '      \"version\": \"\\'some-tag\\'\"',",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2404093651",
            "id": 2404093651,
            "line": 459,
            "node_id": "PRRC_kwDOAPphoM6PS47T",
            "original_commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "original_line": 459,
            "original_position": 68,
            "original_start_line": 457,
            "path": "test/functional/plugin/pack_spec.lua",
            "position": 68,
            "pull_request_review_id": 3302012715,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404093651/reactions"
            },
            "side": "RIGHT",
            "start_line": 457,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-10-04T16:46:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404093651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2404093973"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404093973"
                }
            },
            "author_association": "MEMBER",
            "body": "Ideally we would use a lockfile format that aligns with https://github.com/neovim/packspec/ , but I don't think it was discussed much there. Can revisit later.\r\n\r\nWe will need to document the lockfile format.",
            "commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "created_at": "2025-10-04T16:47:18Z",
            "diff_hunk": "@@ -413,6 +430,117 @@ describe('vim.pack', function()\n       eq('plugindirs main', exec_lua('return require(\"plugindirs\")'))\n     end)\n \n+    it('creates lockfile', function()\n+      local helptags_rev = git_get_hash('HEAD', 'helptags')\n+      exec_lua(function()\n+        vim.pack.add({\n+          { src = repos_src.basic, version = 'some-tag' },\n+          { src = repos_src.defbranch, version = 'main' },\n+          { src = repos_src.helptags, version = helptags_rev },\n+          { src = repos_src.plugindirs },\n+          { src = repos_src.semver, version = vim.version.range('*') },\n+        })\n+      end)\n+\n+      local basic_rev = git_get_hash('some-tag', 'basic')\n+      local defbranch_rev = git_get_hash('main', 'defbranch')\n+      local plugindirs_rev = git_get_hash('HEAD', 'plugindirs')\n+      local semver_rev = git_get_hash('v1.0.0', 'semver')\n+\n+      -- Should properly format as indented JSON\n+      local ref_lockfile_lines = {\n+        '{',\n+        '  \"plugins\": {',",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2404093973",
            "id": 2404093973,
            "line": 453,
            "node_id": "PRRC_kwDOAPphoM6PS5AV",
            "original_commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "original_line": 453,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/plugin/pack_spec.lua",
            "position": 62,
            "pull_request_review_id": 3302013051,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404093973/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-04T16:49:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404093973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35827#discussion_r2404094478"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35827"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404094478"
                }
            },
            "author_association": "MEMBER",
            "body": "I think the current approach does align. For `vim.pack` lockfile it just contains the \"plugins\" field. Which is not part of packspec. So no conflicts.",
            "commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "created_at": "2025-10-04T16:49:09Z",
            "diff_hunk": "@@ -413,6 +430,117 @@ describe('vim.pack', function()\n       eq('plugindirs main', exec_lua('return require(\"plugindirs\")'))\n     end)\n \n+    it('creates lockfile', function()\n+      local helptags_rev = git_get_hash('HEAD', 'helptags')\n+      exec_lua(function()\n+        vim.pack.add({\n+          { src = repos_src.basic, version = 'some-tag' },\n+          { src = repos_src.defbranch, version = 'main' },\n+          { src = repos_src.helptags, version = helptags_rev },\n+          { src = repos_src.plugindirs },\n+          { src = repos_src.semver, version = vim.version.range('*') },\n+        })\n+      end)\n+\n+      local basic_rev = git_get_hash('some-tag', 'basic')\n+      local defbranch_rev = git_get_hash('main', 'defbranch')\n+      local plugindirs_rev = git_get_hash('HEAD', 'plugindirs')\n+      local semver_rev = git_get_hash('v1.0.0', 'semver')\n+\n+      -- Should properly format as indented JSON\n+      local ref_lockfile_lines = {\n+        '{',\n+        '  \"plugins\": {',",
            "html_url": "https://github.com/neovim/neovim/pull/35827#discussion_r2404094478",
            "id": 2404094478,
            "in_reply_to_id": 2404093973,
            "line": 453,
            "node_id": "PRRC_kwDOAPphoM6PS5IO",
            "original_commit_id": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
            "original_line": 453,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/plugin/pack_spec.lua",
            "position": 62,
            "pull_request_review_id": 3302013508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404094478/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-10-04T16:49:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2404094478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Since the file needs to contain 'nvim-pack' and 'lock' somewhere in its name, I decided to go with current name\r\n\r\nDoes it really need to include 'nvim'? What about `pack-lock.json` or even without hyphen `packlock.json`. Or if `.json` extension isn't essential `pack.lock` feels pretty clean.\r\n\r\nJust my two cents.",
            "created_at": "2025-09-18T13:21:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3307429059",
            "id": 3307429059,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7FI1zD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3307429059/reactions"
            },
            "updated_at": "2025-09-18T13:21:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3307429059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Does it really need to include 'nvim'? What about `pack-lock.json` or even without hyphen `packlock.json`. Or if `.json` extension isn't essential `pack.lock` feels pretty clean.\r\n\r\nThe original chain of reasoning is as follows:\r\n- The plugin manager functions are put into `vim.pack` to have a nice \"`vim.pack.add` is a smarter `:packadd`\". It also has to be in `vim.xxx` namespace, as all Neovim's Lua functions go there.\r\n- It requires own names for buffer filetype and URI name prefix. The \"pack\" seems too expansive, the \"vim.pack\" implies that it comes from Vim, \"nvim.pack\" contains problematic dot. So \"nvim-pack\" it is for both for more consistency.\r\n- The log file is named \"nvim-pack.log\" also in favor of consistency with filetype and buffer names. Although I agree that 'nvim-' here might be redundant since it is placed in the Nvim specific directory.\r\n- So in favor of consistency, the lockfile is named 'nvim-pack.lock'.\r\n\r\nI am generally not really opposed to 'pack.lock' or 'pack-lock.json, but only if the log file is also renamed to 'pack.log'. Although inconsistency with filetype and buffer name is a bit annoying.",
            "created_at": "2025-09-18T16:52:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3308538035",
            "id": 3308538035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7FNEiz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3308538035/reactions"
            },
            "updated_at": "2025-09-18T16:52:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3308538035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I am generally not really opposed to 'pack.lock' or 'pack-lock.json, but only if the log file is also renamed to 'pack.log'.\r\n\r\nConsistency with the log file makes sense, but the 'nvim-' prefix feels like overhead, especially considering that no other log file has it.\r\n\r\n> Although inconsistency with filetype and buffer name is a bit annoying.\r\n\r\nThat's part of why I think it's worth considering to drop the 'nvim-' prefix to avoid ending up with something huge like `nvim-pack-lock.json`.",
            "created_at": "2025-09-18T17:06:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3308599580",
            "id": 3308599580,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7FNTkc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3308599580/reactions"
            },
            "updated_at": "2025-09-18T17:06:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3308599580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/101928759?v=4",
                "events_url": "https://api.github.com/users/skewb1k/events{/privacy}",
                "followers_url": "https://api.github.com/users/skewb1k/followers",
                "following_url": "https://api.github.com/users/skewb1k/following{/other_user}",
                "gists_url": "https://api.github.com/users/skewb1k/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/skewb1k",
                "id": 101928759,
                "login": "skewb1k",
                "node_id": "U_kgDOBhNPNw",
                "organizations_url": "https://api.github.com/users/skewb1k/orgs",
                "received_events_url": "https://api.github.com/users/skewb1k/received_events",
                "repos_url": "https://api.github.com/users/skewb1k/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/skewb1k/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/skewb1k/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/skewb1k",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Add tracking of relevant data via on disk file. It is located at '$XDG_CONFIG_HOME/nvim/nvim-pack.lock' and is recommended to be put under version control (as the rest of the config).\n\nI understand the intend of this (to make it easy for users to VC it), but it doesn't sit right to me to break the XDG spec for it. The lockfile is in no means configuration, but would fall under the data category. I would much rather see `$XDG_DATA_HOME/nvim/nvim-pack.lock` as default path, which can be configured or symlinked if configuration is out of the question. \n\nAlso, many dotfiles approaches allow for tracking files in the data dir too. For example the popular git --bare works just fine and I'm sure gnu stow would also work with this. ",
            "created_at": "2025-09-18T23:04:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3309959800",
            "id": 3309959800,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7FSfp4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 8,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3309959800/reactions"
            },
            "updated_at": "2025-09-18T23:04:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3309959800",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I understand the intend of this (to make it easy for users to VC it), but it doesn't sit right to me to break the XDG spec for it. The lockfile is in no means configuration, but would fall under the data category.\r\n\r\nI don't see this as breaking XDG specification, because it indeed is closer to configuration than data. The way I see it is that such lockfile contains information relevant to the config, in particular \"latest working revision\". The only difference is that it is managed automatically and not manually.\r\n\r\n> Also, many dotfiles approaches allow for tracking files in the data dir too. For example the popular git --bare works just fine and I'm sure gnu stow would also work with this.\r\n\r\nAlthough true, designing the default lockfile location around the idea of bare Git repositories is a bit far fetched. And putting `$XDG_DATA_DIR` under version control with `vim.pack` is not really advised, as it will track all plugin files directly.",
            "created_at": "2025-09-19T07:53:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3311052466",
            "id": 3311052466,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7FWqay",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 10,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3311052466/reactions"
            },
            "updated_at": "2025-09-19T07:53:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3311052466",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The way I see it is that such lockfile contains information relevant to the config, in particular \"latest working revision\". The only difference is that it is managed automatically and not manually.\n\nStill seems like data to me. The same could be said about plugins added by vim pack. They also \"configure\" the editor. E.g. I don't really care about locking the (few) plugins that I have and just follow the main branch. This is already encoded in my configuration by not specifying a `version` to the specs. I don't \"configure\" Nvim to checkout exactly commit abcdef of pluginX. \n\n> Although true, designing the default lockfile location around the idea of bare Git repositories is a bit far fetched.\n\nThat was not my point. My point is that currently the design is based on the assumption that it is important to put the lock file under version control and that therefore the XDG config directory is a better fit, which I think is the wrong way to decide where such a file should live. \n\nAnyway, that was my 2c. As long as it's configurable (or can be disabled) I'm fine with it. [of course not necessary for the initial implementation]\n\nTo end on a more positive note, Thanks for `vim.pack` and your careful design decisions around it. I love it already and am glad to finally ditch the external package managers :)",
            "created_at": "2025-09-19T08:15:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3311122654",
            "id": 3311122654,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7FW7je",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 8,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3311122654/reactions"
            },
            "updated_at": "2025-09-19T08:17:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3311122654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "How does it behave on multiple calls to vim.pack.add?\r\n\r\n```lua\r\nvim.pack.add({...})\r\n\r\nif vim.env.FOO then\r\n  vim.pack.add({...})\r\nend\r\n```\r\n\r\nI think it would be useful to call this out in the docs whether users are expected to call pack.add once or multiple times and how this may affect the lock file. Currently it is unclear whether it would override the lockfile or merge the plugins from both calls.",
            "created_at": "2025-09-29T15:58:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3347815457",
            "id": 3347815457,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7Hi5wh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3347815457/reactions"
            },
            "updated_at": "2025-09-29T15:58:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3347815457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5817809?v=4",
                "events_url": "https://api.github.com/users/antonk52/events{/privacy}",
                "followers_url": "https://api.github.com/users/antonk52/followers",
                "following_url": "https://api.github.com/users/antonk52/following{/other_user}",
                "gists_url": "https://api.github.com/users/antonk52/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/antonk52",
                "id": 5817809,
                "login": "antonk52",
                "node_id": "MDQ6VXNlcjU4MTc4MDk=",
                "organizations_url": "https://api.github.com/users/antonk52/orgs",
                "received_events_url": "https://api.github.com/users/antonk52/received_events",
                "repos_url": "https://api.github.com/users/antonk52/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/antonk52/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/antonk52/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/antonk52",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How does it behave on multiple calls to vim.pack.add?\r\n> ...\r\n> Currently it is unclear whether it would override the lockfile or merge the plugins from both calls.\r\n\r\nIt currently pretty much has nothing to do with a number of `vim.pack.add()` calls.\r\n\r\nLockfile contains \"the latest state of __all__ managed plugins\" (from the docs; emphasis mine). If any `vim.pack.add()` changes that information (currently only either by installing new plugin or by changing `version` of a particular plugin), then lockfile is updated to show that change.",
            "created_at": "2025-09-29T16:10:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3347863444",
            "id": 3347863444,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7HjFeU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3347863444/reactions"
            },
            "updated_at": "2025-09-29T16:10:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3347863444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Still seems like data to me. The same could be said about plugins added by vim pack.\r\n\r\nlockfiles generally are intended to be tracked in VCS, whereas plugins are not. The lockfile represents the plugin identity, the plugins themselves are the \"uncompressed\" state (data).\r\n\r\nHowever, we can always revisit if needed. \r\n\r\n",
            "created_at": "2025-10-01T02:20:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3354457430",
            "id": 3354457430,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7H8PVW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3354457430/reactions"
            },
            "updated_at": "2025-10-01T03:11:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3354457430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * Prepending Nvim-owned things with `nvim.` or `nvim-` is generally required wherever we share a namespace with non-Nvim things. (The default `$NVIM_LOG_FILE` actually should be renamed.)\r\n\r\nI have no particular preference about the name or extension here, but to be fair both `vim.pack` files (log and lock) are located in Nvim related directory. This might (or might not) be enough to be considered a separated enough namespace.\r\n\r\n---\r\n\r\nI'll address the review in a couple of days.",
            "created_at": "2025-10-01T10:56:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3355784554",
            "id": 3355784554,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7IBTVq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3355784554/reactions"
            },
            "updated_at": "2025-10-01T10:56:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3355784554",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> both `vim.pack` files (log and lock) are located in Nvim related directory\r\n\r\n? `vim.fn.stdpath('config')` is shared with all plugins. Not all files in there are Nvim-owned (i.e. core Nvim).",
            "created_at": "2025-10-01T14:10:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3356537533",
            "id": 3356537533,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7IELK9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3356537533/reactions"
            },
            "updated_at": "2025-10-01T14:10:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3356537533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > both `vim.pack` files (log and lock) are located in Nvim related directory\r\n> \r\n> ? `vim.fn.stdpath('config')` is shared with all plugins. Not all files in there are Nvim-owned (i.e. core Nvim).\r\n\r\nMy bad. I misunderstood \"with non-Nvim things\" as \"things that are not related to Neovim at all\" and not \"Neovim core\".\r\n\r\nYeah, making extra clear in the name that it is owned by Nvim is a good thing.",
            "created_at": "2025-10-01T15:36:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3357003502",
            "id": 3357003502,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7IF87u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3357003502/reactions"
            },
            "updated_at": "2025-10-01T15:36:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3357003502",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Pushed an update:\r\n- Rebased on latest `master`.\r\n- Renamed lockfile to 'nvim-pack-lock.json'.\r\n- Reworded lockfile recommendation to be more general \"For a more robust config treat lockfile like its part: put under version control, etc.\" instead of simply suggesting to put under version control.\r\n- Minor tweaks to example workflows.",
            "created_at": "2025-10-04T13:23:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3368223967",
            "id": 3368223967,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7IwwTf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368223967/reactions"
            },
            "updated_at": "2025-10-04T13:23:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368223967",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for merging!\r\n\r\nFor users who already use `vim.pack` prior to this PR, my recommended actions now is to `rm -rf ~/.local/share/nvim/site/pack/core/opt/` manually and reinstall all plugins (usually just restart Nvim). This should create a proper lockfile.",
            "created_at": "2025-10-04T16:50:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3368409955",
            "id": 3368409955,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7Ixdtj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 9,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368409955/reactions"
            },
            "updated_at": "2025-10-04T16:50:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368409955",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here is a sample lockfile entry \r\n```\r\n...\r\n    \"fidget.nvim\": {\r\n      \"rev\": \"3f54759\",\r\n      \"src\": \"https://github.com/j-hui/fidget.nvim\"\r\n    },\r\n...\r\n```\r\n\r\nThe git rev is just 7 characters. \r\n\r\nSince this file is not intended to be human edited should we use the the full git hash ?\r\n\r\nThis also prevents the (probably) rare situation where 7 characters of a git hash could mean more than 1 commit.",
            "created_at": "2025-10-05T05:09:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3368758243",
            "id": 3368758243,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7Iyyvj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368758243/reactions"
            },
            "updated_at": "2025-10-05T05:10:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368758243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/638477?v=4",
                "events_url": "https://api.github.com/users/sidkshatriya/events{/privacy}",
                "followers_url": "https://api.github.com/users/sidkshatriya/followers",
                "following_url": "https://api.github.com/users/sidkshatriya/following{/other_user}",
                "gists_url": "https://api.github.com/users/sidkshatriya/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sidkshatriya",
                "id": 638477,
                "login": "sidkshatriya",
                "node_id": "MDQ6VXNlcjYzODQ3Nw==",
                "organizations_url": "https://api.github.com/users/sidkshatriya/orgs",
                "received_events_url": "https://api.github.com/users/sidkshatriya/received_events",
                "repos_url": "https://api.github.com/users/sidkshatriya/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sidkshatriya/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sidkshatriya/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sidkshatriya",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The git rev is just 7 characters.\r\n> \r\n> Since this file is not intended to be human edited should we use the the full git hash ?\r\n> \r\n> This also prevents the (probably) rare situation where 7 characters of a git hash could mean more than 1 commit.\r\n\r\nA note: it is not restricted to 7 characters, is uses `--abbrev-commit` which should automatically decide which width is appropriate for the repo. For example, 'nvim-treesitter/nvim-treesitter' already uses 8 characters. It also can depend on Git config.\r\n\r\nI though about using full hash here, which is definitely the safer option. Here is the reasoning of why it doesn't:\r\n- It looks like a good idea to use the same revision string in both confirmation buffer and lockfile. The confirmation buffer uses abbreviated revision because it looks less intimidating to users.\r\n- The lockfile is recommended now to be used for freezing to a particular commit. Shorter strings look nicer in config.\r\n- It will add extra moving part to the code and tests.\r\n\r\nIf none of these concerns are reasonable (cc @justinmk), then changing `vim.pack` to *always* use full hash to indicate revision seems like a better idea.",
            "created_at": "2025-10-05T08:25:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3368857594",
            "id": 3368857594,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7IzK_6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368857594/reactions"
            },
            "updated_at": "2025-10-05T08:25:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368857594",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "The priority of a lockfile is to unambiguously indicate the commit of the various nvim plugins. The priority of the confirmation buffer is to be friendly to users.\r\n\r\nThese are separate concerns in my view -- neither should adjust to another.\r\n\r\nIn the confirmation buffer we can show the 7 character commit revision by default and when the cursor moves over these commits they could get expanded. This is an additional feature -- I understand.\r\n\r\nIn the meanwhile, when deciding to be safe/unambiguous or friendly I would personally choose safe.\r\n ",
            "created_at": "2025-10-05T09:26:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3368893820",
            "id": 3368893820,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7IzT18",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368893820/reactions"
            },
            "updated_at": "2025-10-05T09:26:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3368893820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/638477?v=4",
                "events_url": "https://api.github.com/users/sidkshatriya/events{/privacy}",
                "followers_url": "https://api.github.com/users/sidkshatriya/followers",
                "following_url": "https://api.github.com/users/sidkshatriya/following{/other_user}",
                "gists_url": "https://api.github.com/users/sidkshatriya/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sidkshatriya",
                "id": 638477,
                "login": "sidkshatriya",
                "node_id": "MDQ6VXNlcjYzODQ3Nw==",
                "organizations_url": "https://api.github.com/users/sidkshatriya/orgs",
                "received_events_url": "https://api.github.com/users/sidkshatriya/received_events",
                "repos_url": "https://api.github.com/users/sidkshatriya/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sidkshatriya/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sidkshatriya/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sidkshatriya",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If none of these concerns are reasonable (cc @justinmk), then changing `vim.pack` to _always_ use full hash to indicate revision seems like a better idea.\r\n\r\nI would suggest at least 12 chars, that was discussed on the git mailing list at some point as the sweet spot.",
            "created_at": "2025-10-05T15:31:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3369134167",
            "id": 3369134167,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7I0OhX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369134167/reactions"
            },
            "updated_at": "2025-10-05T15:31:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369134167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I would suggest at least 12 chars, that was discussed on the git mailing list at some point as the sweet spot.\r\n\r\nThat feels semi-random. There is either `git rev-list -1 --abbrev-commit HEAD` which returns automatically adjusted hash (like `98e3a571dd` in case of 'neovim/neovim'; which is already 10 characters) or `git rev-list -1 HEAD` for a full hash (like `98e3a571ddf4bfa02fbd98f547b75f5335b3766d`; 40 characters).\r\n\r\nI'll make a change to always use full hash everywhere (probably as part of [this one](https://github.com/neovim/neovim/pull/34919#issuecomment-3369164453); probably some time after one week). We can then see if this is too scary looking or not :)",
            "created_at": "2025-10-05T17:30:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3369203853",
            "id": 3369203853,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7I0fiN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369203853/reactions"
            },
            "updated_at": "2025-10-05T17:30:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369203853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> There is either `git rev-list -1 --abbrev-commit HEAD` which returns automatically adjusted hash\r\n\r\n`git rev-list -1 --abbrev-commit --abbrev=12 HEAD` also does so but sets the minimum to 12.",
            "created_at": "2025-10-05T17:59:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/35827#issuecomment-3369221068",
            "id": 3369221068,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
            "node_id": "IC_kwDOAPphoM7I0jvM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369221068/reactions"
            },
            "updated_at": "2025-10-05T17:59:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3369221068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35827/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35827/commits",
    "created_at": "2025-09-18T12:45:57Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35827.diff",
    "draft": false,
    "head": {
        "label": "echasnovski:pack-lockfile",
        "ref": "pack-lockfile",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/echasnovski/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/echasnovski/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/echasnovski/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/echasnovski/neovim/branches{/branch}",
            "clone_url": "https://github.com/echasnovski/neovim.git",
            "collaborators_url": "https://api.github.com/repos/echasnovski/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/echasnovski/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/echasnovski/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/echasnovski/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/echasnovski/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/echasnovski/neovim/contributors",
            "created_at": "2021-12-02T09:43:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/echasnovski/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/echasnovski/neovim/downloads",
            "events_url": "https://api.github.com/repos/echasnovski/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/echasnovski/neovim/forks",
            "full_name": "echasnovski/neovim",
            "git_commits_url": "https://api.github.com/repos/echasnovski/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/echasnovski/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/echasnovski/neovim/git/tags{/sha}",
            "git_url": "git://github.com/echasnovski/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/echasnovski/neovim/hooks",
            "html_url": "https://github.com/echasnovski/neovim",
            "id": 434162461,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/echasnovski/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/echasnovski/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/echasnovski/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/echasnovski/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/echasnovski/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/echasnovski/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/echasnovski/neovim/merges",
            "milestones_url": "https://api.github.com/repos/echasnovski/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGeDLHQ",
            "notifications_url": "https://api.github.com/repos/echasnovski/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/echasnovski/neovim/pulls{/number}",
            "pushed_at": "2025-10-10T14:15:46Z",
            "releases_url": "https://api.github.com/repos/echasnovski/neovim/releases{/id}",
            "size": 337379,
            "ssh_url": "git@github.com:echasnovski/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/echasnovski/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/echasnovski/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/echasnovski/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/echasnovski/neovim/subscription",
            "svn_url": "https://github.com/echasnovski/neovim",
            "tags_url": "https://api.github.com/repos/echasnovski/neovim/tags",
            "teams_url": "https://api.github.com/repos/echasnovski/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/echasnovski/neovim/git/trees{/sha}",
            "updated_at": "2025-10-10T14:15:54Z",
            "url": "https://api.github.com/repos/echasnovski/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "dc8235c48c8be65659f75461d8cb185ab1941d0f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35827",
    "id": 2840122126,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35827",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filetype detection, filetype.lua, ftplugins",
            "id": 3708202139,
            "name": "filetype",
            "node_id": "LA_kwDOAPphoM7dBqyb",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filetype"
        },
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 6664957181,
            "name": "ci:skip-news",
            "node_id": "LA_kwDOAPphoM8AAAABjUMs_Q",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:skip-news"
        },
        {
            "color": "bfd4f2",
            "default": false,
            "description": "vim.pack, start/opt packages, 'packpath'",
            "id": 8889050758,
            "name": "packages",
            "node_id": "LA_kwDOAPphoM8AAAACEdQmhg",
            "url": "https://api.github.com/repos/neovim/neovim/labels/packages"
        }
    ],
    "locked": false,
    "merge_commit_sha": "ea124068f246eeb5e436c1fc62c9379d9b936f15",
    "merged_at": "2025-10-04T16:48:29Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6pSNMO",
    "number": 35827,
    "patch_url": "https://github.com/neovim/neovim/pull/35827.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35827/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/dc8235c48c8be65659f75461d8cb185ab1941d0f",
    "title": "feat(vim.pack): lockfile support",
    "updated_at": "2025-10-13T15:19:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35827",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}