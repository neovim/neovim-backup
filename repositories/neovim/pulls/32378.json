{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32378/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32378/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/32378"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/32378"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32378/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/32378"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2f8ca1bad4b245533b6e57e7aba49b64d85687cc"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5856,
            "forks_count": 5856,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1849,
            "open_issues_count": 1849,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-02-11T02:06:45Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 307849,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 86062,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-02-11T02:12:27Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 86062,
            "watchers_count": 86062,
            "web_commit_signoff_required": false
        },
        "sha": "ac207c3ac20026baa2a4561f5365c2af6a38a357",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem:  The behavior of the visual search mappings aren't consistent with their normal mode counterparts.\r\n  - The count isn't considered\r\n  - Searching with an empty selection will match every character in the buffer\r\n  - Searching backwards only jumps back when the cursor is positioned at the start of the selection.\r\n\r\nSolution:\r\n  - Issue `n` `v:count1` times\r\n  - Error out and exit visual mode when the selection is empty\r\n  - Detect when the cursor is at the start of the selection, and adjust the count accordingly\r\n\r\nAlso, use the search register instead of the more error-prone approach of feeding the entire search string as an expression",
    "closed_at": "2025-02-09T21:23:30Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32378#discussion_r1948017335"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32378"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948017335"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe it's better to add `o` and `O` before the `<Esc>` to move cursor to the start of the selection?\r\n\r\nAnd to test for this you can remove the `o` in the tests.",
            "commit_id": "2f8ca1bad4b245533b6e57e7aba49b64d85687cc",
            "created_at": "2025-02-09T06:16:02Z",
            "diff_hunk": "@@ -32,27 +32,59 @@ do\n   ---\n   --- See |v_star-default| and |v_#-default|\n   do\n-    local function _visual_search(cmd)\n-      assert(cmd == '/' or cmd == '?')\n-      local chunks =\n-        vim.fn.getregion(vim.fn.getpos('.'), vim.fn.getpos('v'), { type = vim.fn.mode() })\n+    local function _visual_search(forward)\n+      assert(forward == 0 or forward == 1)\n+      local pos = vim.fn.getpos('.')\n+      local vpos = vim.fn.getpos('v')\n+      local mode = vim.fn.mode()\n+      local chunks = vim.fn.getregion(pos, vpos, { type = mode })\n       local esc_chunks = vim\n         .iter(chunks)\n         :map(function(v)\n-          return vim.fn.escape(v, cmd == '/' and [[/\\]] or [[?\\]])\n+          return vim.fn.escape(v, [[\\]])\n         end)\n         :totable()\n       local esc_pat = table.concat(esc_chunks, [[\\n]])\n-      local search_cmd = ([[%s\\V%s%s]]):format(cmd, esc_pat, '\\n')\n-      return '\\27' .. search_cmd\n+      if #esc_pat == 0 then\n+        vim.api.nvim_echo({ { 'E348: No string under cursor' } }, true, { err = true })\n+        return '<Esc>'\n+      end\n+      local search = [[\\V]] .. esc_pat\n+\n+      vim.fn.setreg('/', search)\n+      vim.fn.histadd('/', search)\n+      vim.v.searchforward = forward\n+\n+      -- The count has to be adjusted when searching backwards and the cursor\n+      -- isn't positioned at the beginning of the selection\n+      local count = vim.v.count1\n+      if\n+        forward == 0\n+        and (function()\n+          local _, line, col, _ = unpack(pos)\n+          local _, vline, vcol, _ = unpack(vpos)\n+          if line > vline then\n+            return true\n+          elseif mode == 'v' then\n+            return line == vline and col > vcol\n+          elseif mode == 'V' then\n+            return col ~= 1\n+          elseif mode == '\\22' then\n+            return col > vcol\n+          end\n+        end)()\n+      then\n+        count = count + 1\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32378#discussion_r1948017335",
            "id": 1948017335,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50HGK3",
            "original_commit_id": "4cff47e7c5cff63664c67158bd3cf55708cc3583",
            "original_line": 72,
            "original_position": 54,
            "original_start_line": 58,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2604128150,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32378",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948017335/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-09T06:16:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948017335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32378#discussion_r1948021075"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32378"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948021075"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That sounds like it would involve more logic, especially with `<C-V>` (since it would have to use different combinations of `o` and `O` for each of the three corners which aren't the top-left). Incrementing the count instead means all those cases can be collapsed into one.",
            "commit_id": "2f8ca1bad4b245533b6e57e7aba49b64d85687cc",
            "created_at": "2025-02-09T06:46:43Z",
            "diff_hunk": "@@ -32,27 +32,59 @@ do\n   ---\n   --- See |v_star-default| and |v_#-default|\n   do\n-    local function _visual_search(cmd)\n-      assert(cmd == '/' or cmd == '?')\n-      local chunks =\n-        vim.fn.getregion(vim.fn.getpos('.'), vim.fn.getpos('v'), { type = vim.fn.mode() })\n+    local function _visual_search(forward)\n+      assert(forward == 0 or forward == 1)\n+      local pos = vim.fn.getpos('.')\n+      local vpos = vim.fn.getpos('v')\n+      local mode = vim.fn.mode()\n+      local chunks = vim.fn.getregion(pos, vpos, { type = mode })\n       local esc_chunks = vim\n         .iter(chunks)\n         :map(function(v)\n-          return vim.fn.escape(v, cmd == '/' and [[/\\]] or [[?\\]])\n+          return vim.fn.escape(v, [[\\]])\n         end)\n         :totable()\n       local esc_pat = table.concat(esc_chunks, [[\\n]])\n-      local search_cmd = ([[%s\\V%s%s]]):format(cmd, esc_pat, '\\n')\n-      return '\\27' .. search_cmd\n+      if #esc_pat == 0 then\n+        vim.api.nvim_echo({ { 'E348: No string under cursor' } }, true, { err = true })\n+        return '<Esc>'\n+      end\n+      local search = [[\\V]] .. esc_pat\n+\n+      vim.fn.setreg('/', search)\n+      vim.fn.histadd('/', search)\n+      vim.v.searchforward = forward\n+\n+      -- The count has to be adjusted when searching backwards and the cursor\n+      -- isn't positioned at the beginning of the selection\n+      local count = vim.v.count1\n+      if\n+        forward == 0\n+        and (function()\n+          local _, line, col, _ = unpack(pos)\n+          local _, vline, vcol, _ = unpack(vpos)\n+          if line > vline then\n+            return true\n+          elseif mode == 'v' then\n+            return line == vline and col > vcol\n+          elseif mode == 'V' then\n+            return col ~= 1\n+          elseif mode == '\\22' then\n+            return col > vcol\n+          end\n+        end)()\n+      then\n+        count = count + 1\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/32378#discussion_r1948021075",
            "id": 1948021075,
            "in_reply_to_id": 1948017335,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM50HHFT",
            "original_commit_id": "4cff47e7c5cff63664c67158bd3cf55708cc3583",
            "original_line": 72,
            "original_position": 54,
            "original_start_line": 58,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2604132039,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32378",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948021075/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2025-02-09T06:47:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948021075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/60193883?v=4",
                "events_url": "https://api.github.com/users/neeshy/events{/privacy}",
                "followers_url": "https://api.github.com/users/neeshy/followers",
                "following_url": "https://api.github.com/users/neeshy/following{/other_user}",
                "gists_url": "https://api.github.com/users/neeshy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neeshy",
                "id": 60193883,
                "login": "neeshy",
                "node_id": "MDQ6VXNlcjYwMTkzODgz",
                "organizations_url": "https://api.github.com/users/neeshy/orgs",
                "received_events_url": "https://api.github.com/users/neeshy/received_events",
                "repos_url": "https://api.github.com/users/neeshy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neeshy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neeshy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neeshy",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32378#discussion_r1948039508"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32378"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948039508"
                }
            },
            "author_association": "NONE",
            "body": "Not sure if this is intended, but the usual * and # ones work on a word boundaries, adding < and > to the pattern, and the g* and g# variations do not, do we need to support visual g* and g# ?",
            "commit_id": "2f8ca1bad4b245533b6e57e7aba49b64d85687cc",
            "created_at": "2025-02-09T08:49:47Z",
            "diff_hunk": "@@ -32,27 +32,59 @@ do\n   ---\n   --- See |v_star-default| and |v_#-default|\n   do\n-    local function _visual_search(cmd)\n-      assert(cmd == '/' or cmd == '?')\n-      local chunks =\n-        vim.fn.getregion(vim.fn.getpos('.'), vim.fn.getpos('v'), { type = vim.fn.mode() })\n+    local function _visual_search(forward)\n+      assert(forward == 0 or forward == 1)\n+      local pos = vim.fn.getpos('.')\n+      local vpos = vim.fn.getpos('v')\n+      local mode = vim.fn.mode()\n+      local chunks = vim.fn.getregion(pos, vpos, { type = mode })\n       local esc_chunks = vim\n         .iter(chunks)\n         :map(function(v)\n-          return vim.fn.escape(v, cmd == '/' and [[/\\]] or [[?\\]])\n+          return vim.fn.escape(v, [[\\]])\n         end)\n         :totable()\n       local esc_pat = table.concat(esc_chunks, [[\\n]])\n-      local search_cmd = ([[%s\\V%s%s]]):format(cmd, esc_pat, '\\n')\n-      return '\\27' .. search_cmd\n+      if #esc_pat == 0 then\n+        vim.api.nvim_echo({ { 'E348: No string under cursor' } }, true, { err = true })\n+        return '<Esc>'\n+      end\n+      local search = [[\\V]] .. esc_pat\n+\n+      vim.fn.setreg('/', search)\n+      vim.fn.histadd('/', search)\n+      vim.v.searchforward = forward\n+\n+      -- The count has to be adjusted when searching backwards and the cursor\n+      -- isn't positioned at the beginning of the selection\n+      local count = vim.v.count1\n+      if\n+        forward == 0\n+        and (function()\n+          local _, line, col, _ = unpack(pos)\n+          local _, vline, vcol, _ = unpack(vpos)\n+          if line > vline then\n+            return true\n+          elseif mode == 'v' then\n+            return line == vline and col > vcol\n+          elseif mode == 'V' then\n+            return col ~= 1\n+          elseif mode == '\\22' then\n+            return col > vcol\n+          end\n+        end)()\n+      then\n+        count = count + 1\n+      end\n+      return '<Esc>' .. count .. 'n'\n     end\n \n     vim.keymap.set('x', '*', function()",
            "html_url": "https://github.com/neovim/neovim/pull/32378#discussion_r1948039508",
            "id": 1948039508,
            "line": 76,
            "node_id": "PRRC_kwDOAPphoM50HLlU",
            "original_commit_id": "4cff47e7c5cff63664c67158bd3cf55708cc3583",
            "original_line": 76,
            "original_position": 58,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 52,
            "pull_request_review_id": 2604153241,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32378",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948039508/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-09T08:49:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948039508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/32378#discussion_r1948166584"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/32378"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948166584"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think it makes sense to not use word boundaries since visual `*`/`#` is much more deliberate (you see the boundaries of the selection before you search) than normal mode `*`/`#`.",
            "commit_id": "2f8ca1bad4b245533b6e57e7aba49b64d85687cc",
            "created_at": "2025-02-09T18:37:25Z",
            "diff_hunk": "@@ -32,27 +32,59 @@ do\n   ---\n   --- See |v_star-default| and |v_#-default|\n   do\n-    local function _visual_search(cmd)\n-      assert(cmd == '/' or cmd == '?')\n-      local chunks =\n-        vim.fn.getregion(vim.fn.getpos('.'), vim.fn.getpos('v'), { type = vim.fn.mode() })\n+    local function _visual_search(forward)\n+      assert(forward == 0 or forward == 1)\n+      local pos = vim.fn.getpos('.')\n+      local vpos = vim.fn.getpos('v')\n+      local mode = vim.fn.mode()\n+      local chunks = vim.fn.getregion(pos, vpos, { type = mode })\n       local esc_chunks = vim\n         .iter(chunks)\n         :map(function(v)\n-          return vim.fn.escape(v, cmd == '/' and [[/\\]] or [[?\\]])\n+          return vim.fn.escape(v, [[\\]])\n         end)\n         :totable()\n       local esc_pat = table.concat(esc_chunks, [[\\n]])\n-      local search_cmd = ([[%s\\V%s%s]]):format(cmd, esc_pat, '\\n')\n-      return '\\27' .. search_cmd\n+      if #esc_pat == 0 then\n+        vim.api.nvim_echo({ { 'E348: No string under cursor' } }, true, { err = true })\n+        return '<Esc>'\n+      end\n+      local search = [[\\V]] .. esc_pat\n+\n+      vim.fn.setreg('/', search)\n+      vim.fn.histadd('/', search)\n+      vim.v.searchforward = forward\n+\n+      -- The count has to be adjusted when searching backwards and the cursor\n+      -- isn't positioned at the beginning of the selection\n+      local count = vim.v.count1\n+      if\n+        forward == 0\n+        and (function()\n+          local _, line, col, _ = unpack(pos)\n+          local _, vline, vcol, _ = unpack(vpos)\n+          if line > vline then\n+            return true\n+          elseif mode == 'v' then\n+            return line == vline and col > vcol\n+          elseif mode == 'V' then\n+            return col ~= 1\n+          elseif mode == '\\22' then\n+            return col > vcol\n+          end\n+        end)()\n+      then\n+        count = count + 1\n+      end\n+      return '<Esc>' .. count .. 'n'\n     end\n \n     vim.keymap.set('x', '*', function()",
            "html_url": "https://github.com/neovim/neovim/pull/32378#discussion_r1948166584",
            "id": 1948166584,
            "in_reply_to_id": 1948039508,
            "line": 76,
            "node_id": "PRRC_kwDOAPphoM50Hqm4",
            "original_commit_id": "4cff47e7c5cff63664c67158bd3cf55708cc3583",
            "original_line": 76,
            "original_position": 58,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 52,
            "pull_request_review_id": 2604331885,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/32378",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948166584/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-02-09T18:37:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1948166584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/60193883?v=4",
                "events_url": "https://api.github.com/users/neeshy/events{/privacy}",
                "followers_url": "https://api.github.com/users/neeshy/followers",
                "following_url": "https://api.github.com/users/neeshy/following{/other_user}",
                "gists_url": "https://api.github.com/users/neeshy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neeshy",
                "id": 60193883,
                "login": "neeshy",
                "node_id": "MDQ6VXNlcjYwMTkzODgz",
                "organizations_url": "https://api.github.com/users/neeshy/orgs",
                "received_events_url": "https://api.github.com/users/neeshy/received_events",
                "repos_url": "https://api.github.com/users/neeshy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neeshy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neeshy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neeshy",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Removing the `o` from https://github.com/neovim/neovim/blob/ac207c3ac20026baa2a4561f5365c2af6a38a357/test/functional/editor/defaults_spec.lua#L142-L151 would cover that case, but doing so fails with: \r\n\r\n```\r\n$ TEST_FILTER='handle various chars properly' make functionaltest\r\n...\r\nFAILED   test/functional/editor/defaults_spec.lua @ 98: default key mappings Visual mode search mappings handle various chars properly\r\ntest/functional/editor/defaults_spec.lua:123: Row 1 did not match.\r\nExpected:\r\n  |*{3:testing <CR> /?\\!}1                                          |\r\n  |*{4:^testing <CR> /?\\!}2                                          |\r\n  |*{3:testing <CR> /?\\!}3                                          |\r\n  |*{3:testing <CR> /?\\!}4                                          |\r\n  |{1:~                                                           }|\r\n  |{1:~                                                           }|\r\n  |{2:[No Name] [+]                             2,1            All}|\r\n  |*/\\Vtesting <CR> \\/?\\\\!                    [2/4]             |\r\nActual:\r\n  |*{3:t}es{3:t}ing <CR> /?\\!1                                          |\r\n  |*{4:^t}es{3:t}ing <CR> /?\\!2                                          |\r\n  |*{3:t}es{3:t}ing <CR> /?\\!3                                          |\r\n  |*{3:t}es{3:t}ing <CR> /?\\!4                                          |\r\n  |{1:~                                                           }|\r\n  |{1:~                                                           }|\r\n  |{2:[No Name] [+]                             2,1            All}|\r\n  |*/\\Vt                                      [3/8]             |\r\n```\r\n\r\nWhich is bizarre; it only searches for the `t`. The same failure can be seen on master if you remove the `o`'s as well. So maybe it's an issue with the test framework?\r\n\r\n@zeertzjq do you know what could be causing this?",
            "created_at": "2025-02-09T20:03:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/32378#issuecomment-2646562631",
            "id": 2646562631,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32378",
            "node_id": "IC_kwDOAPphoM6dv1dH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646562631/reactions"
            },
            "updated_at": "2025-02-09T20:16:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646562631",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/60193883?v=4",
                "events_url": "https://api.github.com/users/neeshy/events{/privacy}",
                "followers_url": "https://api.github.com/users/neeshy/followers",
                "following_url": "https://api.github.com/users/neeshy/following{/other_user}",
                "gists_url": "https://api.github.com/users/neeshy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neeshy",
                "id": 60193883,
                "login": "neeshy",
                "node_id": "MDQ6VXNlcjYwMTkzODgz",
                "organizations_url": "https://api.github.com/users/neeshy/orgs",
                "received_events_url": "https://api.github.com/users/neeshy/received_events",
                "repos_url": "https://api.github.com/users/neeshy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neeshy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neeshy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neeshy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You could try:\r\n\r\n```\r\nn.feed('G0vf!')\r\nn.poke_eventloop()\r\nn.feed('#')\r\n```\r\n\r\n",
            "created_at": "2025-02-09T20:24:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/32378#issuecomment-2646571059",
            "id": 2646571059,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32378",
            "node_id": "IC_kwDOAPphoM6dv3gz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646571059/reactions"
            },
            "updated_at": "2025-02-09T20:24:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646571059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "OK, that works. Pushed.",
            "created_at": "2025-02-09T20:32:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/32378#issuecomment-2646573772",
            "id": 2646573772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32378",
            "node_id": "IC_kwDOAPphoM6dv4LM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646573772/reactions"
            },
            "updated_at": "2025-02-09T20:32:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2646573772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/60193883?v=4",
                "events_url": "https://api.github.com/users/neeshy/events{/privacy}",
                "followers_url": "https://api.github.com/users/neeshy/followers",
                "following_url": "https://api.github.com/users/neeshy/following{/other_user}",
                "gists_url": "https://api.github.com/users/neeshy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neeshy",
                "id": 60193883,
                "login": "neeshy",
                "node_id": "MDQ6VXNlcjYwMTkzODgz",
                "organizations_url": "https://api.github.com/users/neeshy/orgs",
                "received_events_url": "https://api.github.com/users/neeshy/received_events",
                "repos_url": "https://api.github.com/users/neeshy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neeshy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neeshy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neeshy",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32378/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/32378/commits",
    "created_at": "2025-02-09T03:50:57Z",
    "diff_url": "https://github.com/neovim/neovim/pull/32378.diff",
    "draft": false,
    "head": {
        "label": "neeshy:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neeshy/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neeshy/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neeshy/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neeshy/neovim/branches{/branch}",
            "clone_url": "https://github.com/neeshy/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neeshy/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neeshy/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neeshy/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neeshy/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neeshy/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neeshy/neovim/contributors",
            "created_at": "2025-02-09T00:12:34Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neeshy/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": true,
            "downloads_url": "https://api.github.com/repos/neeshy/neovim/downloads",
            "events_url": "https://api.github.com/repos/neeshy/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/neeshy/neovim/forks",
            "full_name": "neeshy/neovim",
            "git_commits_url": "https://api.github.com/repos/neeshy/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neeshy/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neeshy/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neeshy/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neeshy/neovim/hooks",
            "html_url": "https://github.com/neeshy/neovim",
            "id": 929611619,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neeshy/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neeshy/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neeshy/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neeshy/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neeshy/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neeshy/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neeshy/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neeshy/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDON2i_Yw",
            "notifications_url": "https://api.github.com/repos/neeshy/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/60193883?v=4",
                "events_url": "https://api.github.com/users/neeshy/events{/privacy}",
                "followers_url": "https://api.github.com/users/neeshy/followers",
                "following_url": "https://api.github.com/users/neeshy/following{/other_user}",
                "gists_url": "https://api.github.com/users/neeshy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neeshy",
                "id": 60193883,
                "login": "neeshy",
                "node_id": "MDQ6VXNlcjYwMTkzODgz",
                "organizations_url": "https://api.github.com/users/neeshy/orgs",
                "received_events_url": "https://api.github.com/users/neeshy/received_events",
                "repos_url": "https://api.github.com/users/neeshy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neeshy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neeshy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/neeshy",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neeshy/neovim/pulls{/number}",
            "pushed_at": "2025-02-09T20:32:36Z",
            "releases_url": "https://api.github.com/repos/neeshy/neovim/releases{/id}",
            "size": 300028,
            "ssh_url": "git@github.com:neeshy/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/neeshy/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neeshy/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neeshy/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neeshy/neovim/subscription",
            "svn_url": "https://github.com/neeshy/neovim",
            "tags_url": "https://api.github.com/repos/neeshy/neovim/tags",
            "teams_url": "https://api.github.com/repos/neeshy/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/neeshy/neovim/git/trees{/sha}",
            "updated_at": "2025-02-10T04:43:05Z",
            "url": "https://api.github.com/repos/neeshy/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "2f8ca1bad4b245533b6e57e7aba49b64d85687cc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/60193883?v=4",
            "events_url": "https://api.github.com/users/neeshy/events{/privacy}",
            "followers_url": "https://api.github.com/users/neeshy/followers",
            "following_url": "https://api.github.com/users/neeshy/following{/other_user}",
            "gists_url": "https://api.github.com/users/neeshy/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neeshy",
            "id": 60193883,
            "login": "neeshy",
            "node_id": "MDQ6VXNlcjYwMTkzODgz",
            "organizations_url": "https://api.github.com/users/neeshy/orgs",
            "received_events_url": "https://api.github.com/users/neeshy/received_events",
            "repos_url": "https://api.github.com/users/neeshy/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neeshy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neeshy/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/neeshy",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/32378",
    "id": 2324298516,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32378",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim defaults for options, colorscheme/theme, autocmds/events, etc.",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        }
    ],
    "locked": false,
    "merge_commit_sha": "59a171fd99a7452c8840eee55783fb6746994637",
    "merged_at": "2025-02-09T21:23:30Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6KifsU",
    "number": 32378,
    "patch_url": "https://github.com/neovim/neovim/pull/32378.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/32378/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2f8ca1bad4b245533b6e57e7aba49b64d85687cc",
    "title": "fix(defaults): improve visual search mappings",
    "updated_at": "2025-02-09T21:23:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/32378",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/60193883?v=4",
        "events_url": "https://api.github.com/users/neeshy/events{/privacy}",
        "followers_url": "https://api.github.com/users/neeshy/followers",
        "following_url": "https://api.github.com/users/neeshy/following{/other_user}",
        "gists_url": "https://api.github.com/users/neeshy/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/neeshy",
        "id": 60193883,
        "login": "neeshy",
        "node_id": "MDQ6VXNlcjYwMTkzODgz",
        "organizations_url": "https://api.github.com/users/neeshy/orgs",
        "received_events_url": "https://api.github.com/users/neeshy/received_events",
        "repos_url": "https://api.github.com/users/neeshy/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/neeshy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/neeshy/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/neeshy",
        "user_view_type": "public"
    }
}