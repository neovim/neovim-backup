{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35406/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35406/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/35406"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/35406"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35406/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/050202a0b09e0ff80ea869bb8332ec0a08dc08fb"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6275,
            "forks_count": 6275,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1988,
            "open_issues_count": 1988,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-08-25T23:24:21Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 339513,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 92240,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-08-26T02:19:53Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 92240,
            "watchers_count": 92240,
            "web_commit_signoff_required": false
        },
        "sha": "94677318655eb803fccef4409834b6b77e11282a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This function allows the Nvim core to write arbitrary data to a TTY connected to a UI's stdout.\r\n\r\nRef: https://github.com/neovim/neovim/pull/35176#discussion_r2255440205\r\n\r\ncc @justinmk \r\n",
    "closed_at": "2025-08-22T20:05:43Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2288826688"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288826688"
                }
            },
            "author_association": "MEMBER",
            "body": "I think `nvim_ui_write` fits. Even if it's unlikely to be useful for non-TTY UIs, it helps discoverability to use a `ui_` qualifier, and avoids a new `tty_` qualifier which I don't think should proliferate. The rest of the docstring clarifies its tty-specific purpose.\r\n\r\nThe event name can probably stay as `tty_write` since that's an implementation detail.\r\n\r\n```suggestion\r\nnvim_ui_write({content})                                   *nvim_tty_write()*\r\n```",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-20T17:19:43Z",
            "diff_hunk": "@@ -3535,6 +3535,17 @@ nvim_tabpage_set_win({tabpage}, {win})                *nvim_tabpage_set_win()*\n ==============================================================================\n UI Functions                                                          *api-ui*\n \n+nvim_tty_write({content})                                   *nvim_tty_write()*",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2288826688",
            "id": 2288826688,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IbLlA",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 3538,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 3137584317,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288826688/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T17:20:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288826688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2288842490"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288842490"
                }
            },
            "author_association": "MEMBER",
            "body": "We have `nvim_ui_term_event` which refers to the host terminal as `term`. We probably should have named that `nvim_ui_tty_event` I guess. Or we could name this `term_write`, but we have been pretty consistent about referring saying \"the terminal\" only when referring to `:terminal`, and \"the TUI\" when referring to the host-terminal. Though `tty` is a somewhat helpful clarification for low-level contexts like this and `stdout_tty`.\r\n\r\nObjections to naming this `ui_write` ? Or should `nvim_ui_term_event` be renamed to `nvim_ui_tty_event` ?",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-20T17:27:14Z",
            "diff_hunk": "@@ -276,6 +276,10 @@ the editor.\n \tto an internal buffer, this is the time to display the redrawn parts\n \tto the user.\n \n+[\"tty_write\", content] ~",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2288842490",
            "id": 2288842490,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IbPb6",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 279,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": null,
            "pull_request_review_id": 3137610264,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288842490/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T17:27:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288842490",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2288848109"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288848109"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: the events in this file are somewhat \"grouped\"; the global/generic events are near the top.",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-20T17:30:00Z",
            "diff_hunk": "@@ -175,6 +175,9 @@ void msg_ruler(Array content)\n void msg_history_show(Array entries, Boolean prev_cmd)\n   FUNC_API_SINCE(6) FUNC_API_REMOTE_ONLY;\n \n+void tty_write(String content)",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2288848109",
            "id": 2288848109,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IbQzt",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 178,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/api/ui_events.in.h",
            "position": null,
            "pull_request_review_id": 3137618295,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288848109/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T17:30:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288848109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2288851197"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288851197"
                }
            },
            "author_association": "MEMBER",
            "body": "Just for reference, why does it bypass the buffer? Isn't that how writes are sequenced?",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-20T17:31:20Z",
            "diff_hunk": "@@ -1533,6 +1533,19 @@ void tui_default_colors_set(TUIData *tui, Integer rgb_fg, Integer rgb_bg, Intege\n   invalidate(tui, 0, tui->grid.height, 0, tui->grid.width);\n }\n \n+/// Writes directly to the TTY, bypassing the buffer.\n+void tui_tty_write(TUIData *tui, String content)",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2288851197",
            "id": 2288851197,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IbRj9",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 1537,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/tui/tui.c",
            "position": null,
            "pull_request_review_id": 3137622370,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288851197/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T17:31:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2288851197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2289319684"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289319684"
                }
            },
            "author_association": "MEMBER",
            "body": "Whenever we flush the buffer we \"bracket\" it with a begin and end sequence (either the synchronized update sequences when `'termsync'` is enabled, or a hide/show cursor pair otherwise), which is a lot of unnecessary overhead for what this API is used for (writing control sequences directly, usually small ones). Bypassing the buffer lets us skip this overhead and lets the buffer be used just for the actual drawing/UI.\r\n\r\n>Isn't that how writes are sequenced?\r\n\r\nI don't think we need to worry about sequencing here, it's all in the same thread so there are no concurrency concerns. And even if we did write to the buffer, that doesn't stop someone from writing a move cursor sequence or something to mess up the UI if they wanted to.",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-20T21:17:19Z",
            "diff_hunk": "@@ -1533,6 +1533,19 @@ void tui_default_colors_set(TUIData *tui, Integer rgb_fg, Integer rgb_bg, Intege\n   invalidate(tui, 0, tui->grid.height, 0, tui->grid.width);\n }\n \n+/// Writes directly to the TTY, bypassing the buffer.\n+void tui_tty_write(TUIData *tui, String content)",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2289319684",
            "id": 2289319684,
            "in_reply_to_id": 2288851197,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IdD8E",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 1537,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/tui/tui.c",
            "position": null,
            "pull_request_review_id": 3138270315,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289319684/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T21:17:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289319684",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2289324127"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289324127"
                }
            },
            "author_association": "MEMBER",
            "body": "I considered `ui_write` but felt like this API is meaningless for UIs that don't have a TTY connected to their stdout.\r\n\r\nI'm not opposed to it. Just not sure what the use case is.\r\n\r\n**EDIT:** If we rename it `ui_write` is there any reason to only limit it to UIs with a TTY, or should we allow any UI to implement this?\r\n\r\n>Or should nvim_ui_term_event be renamed to nvim_ui_tty_event ?\r\n\r\nI don't feel strongly about this either way. One point in favor of `term_event` is consistency with `v:termresponse`, `TermResponse`, `TermRequest`, etc.",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-20T21:19:42Z",
            "diff_hunk": "@@ -276,6 +276,10 @@ the editor.\n \tto an internal buffer, this is the time to display the redrawn parts\n \tto the user.\n \n+[\"tty_write\", content] ~",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2289324127",
            "id": 2289324127,
            "in_reply_to_id": 2288842490,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IdFBf",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 279,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": null,
            "pull_request_review_id": 3138275970,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289324127/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T21:21:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289324127",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2289471607"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289471607"
                }
            },
            "author_association": "MEMBER",
            "body": "`nvim_ui_` APIs are usually for UIs to communicate information to the server, but this API works in the reverse direction.",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-20T22:59:11Z",
            "diff_hunk": "@@ -3535,6 +3535,17 @@ nvim_tabpage_set_win({tabpage}, {win})                *nvim_tabpage_set_win()*\n ==============================================================================\n UI Functions                                                          *api-ui*\n \n+nvim_tty_write({content})                                   *nvim_tty_write()*",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2289471607",
            "id": 2289471607,
            "in_reply_to_id": 2288826688,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IdpB3",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 3538,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 3138489488,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289471607/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-20T22:59:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289471607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2289667633"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289667633"
                }
            },
            "author_association": "MEMBER",
            "body": "That's a very good point. Though if we choose a different \"noun\", there is no guarantee that the direction will always be the same.\r\n\r\nActually, I just noticed `nvim_chan_send()`",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-21T01:46:56Z",
            "diff_hunk": "@@ -3535,6 +3535,17 @@ nvim_tabpage_set_win({tabpage}, {win})                *nvim_tabpage_set_win()*\n ==============================================================================\n UI Functions                                                          *api-ui*\n \n+nvim_tty_write({content})                                   *nvim_tty_write()*",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2289667633",
            "id": 2289667633,
            "in_reply_to_id": 2288826688,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IeY4x",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 3538,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 3138758869,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289667633/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-21T01:46:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289667633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2289668507"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289668507"
                }
            },
            "author_association": "MEMBER",
            "body": "> If we rename it `ui_write` is there any reason to only limit it to UIs with a TTY, or should we allow any UI to implement this?\r\n\r\nI think the door is open for that, though initially we can restrict it to `stdout_tty` UIs as you have done.",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-21T01:47:57Z",
            "diff_hunk": "@@ -276,6 +276,10 @@ the editor.\n \tto an internal buffer, this is the time to display the redrawn parts\n \tto the user.\n \n+[\"tty_write\", content] ~",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2289668507",
            "id": 2289668507,
            "in_reply_to_id": 2288842490,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IeZGb",
            "original_commit_id": "5d4e0b7c556d30ed2dbe5105df5d0409315a7df1",
            "original_line": 279,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api-ui-events.txt",
            "position": null,
            "pull_request_review_id": 3138759924,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289668507/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-21T01:47:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289668507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/35406#discussion_r2289670734"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/35406"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289670734"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nnvim_ui_send({data})                                     *nvim_ui_send()*\r\n```",
            "commit_id": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
            "created_at": "2025-08-21T01:50:01Z",
            "diff_hunk": "@@ -3660,6 +3660,17 @@ nvim_ui_try_resize_grid({grid}, {width}, {height})\n       • {width}   (`integer`) The new requested width.\n       • {height}  (`integer`) The new requested height.\n \n+nvim_ui_write({content})                                     *nvim_ui_write()*",
            "html_url": "https://github.com/neovim/neovim/pull/35406#discussion_r2289670734",
            "id": 2289670734,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM6IeZpO",
            "original_commit_id": "7502474314209e252e665e9cc2fc668b9525803a",
            "original_line": 3663,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 3138762690,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289670734/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-08-21T01:50:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2289670734",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I forgot about `nvim_chan_send()`. The docs for this should mention how this differs from `nvim_chan_send()`, cross-referencing will be very helpful.\r\n\r\nAnd probably we should name this `nvim_ui_send()` ",
            "created_at": "2025-08-21T01:49:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3208657228",
            "id": 3208657228,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM6_QDlM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3208657228/reactions"
            },
            "updated_at": "2025-08-21T01:49:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3208657228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The docs for this should mention how this differs from `nvim_chan_send()`\r\n\r\nAt least one difference is that this broadcasts to all TUIs, instead of just a single channel. What are the other differences?",
            "created_at": "2025-08-22T21:48:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3215763928",
            "id": 3215763928,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM6_rKnY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3215763928/reactions"
            },
            "updated_at": "2025-08-22T21:48:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3215763928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The docs for this should mention how this differs from `nvim_chan_send()`\r\n\r\nOops, forgot to do this.\r\n\r\n> At least one difference is that this broadcasts to all TUIs, instead of just a single channel. What are the other differences?\r\n\r\n`nvim_chan_send()` cannot send raw/arbitrary data to a UI, because `nvim_chan_send` only allows RPC messages over RPC channels. But even if it could, without a dedicated event the UI wouldn't know what to do with that data.",
            "created_at": "2025-08-22T23:31:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3215942455",
            "id": 3215942455,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM6_r2M3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3215942455/reactions"
            },
            "updated_at": "2025-08-22T23:31:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3215942455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just a drive-by comment, please feel free to ignore me: this API feels a bit weird/wrong to me. I feel like the UI protocol should not expect a TTY to be available (even if it isn't guaranteed) somewhere. I understand the goal of this PR was to enable the implementation of https://github.com/neovim/neovim/pull/35176 though - but I think the \"right\" solution would have been to enable lua plugins that run exclusively in the TUI, and then to write to the TUI's TTY from such a plugin (perhaps using a special-made TUI-only API to avoid inserting escape codes where they're not expected).\r\n\r\nOf course this solution would be a lot more work, and an okay solution that exists is better than a perfect solution that doesn't, so I'm not advocating for anything, just sharing the thoughts that went through my head when I saw the commits.\r\n\r\nAs always, thank you guy for all the time and energy you put in Neovim, I'm amazed it keeps on getting better after all these years (there has to be a ceiling at some point, right???).",
            "created_at": "2025-08-23T16:12:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3217145290",
            "id": 3217145290,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM6_wb3K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3217145290/reactions"
            },
            "updated_at": "2025-08-23T16:12:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3217145290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  I feel like the UI protocol should not expect a TTY to be available (even if it isn't guaranteed) somewhere.\r\n\r\nIt is a bit of a leaky abstraction. And the event doesn't even make sense for UIs without a connected TTY (this is why I named it `nvim_tty_write` initially). We could rename it back to that (or even `nvim__tty_write` to indicate it is \"private\"?) to make it clear that this is _not_ an abstraction, but a very specific function with a very specific purpose.\r\n\r\n> but I think the \"right\" solution would have been to enable lua plugins that run exclusively in the TUI, and then to write to the TUI's TTY from such a plugin\r\n\r\nI don't think we could allow any arbitrary plugin or Lua code to run in the TUI process, because the TUI shouldn't affect editor state. But I wonder if we could introduce something similar to `nvim_exec_lua` (`nvim_ui_exec_lua`?) for executing (a subset of) Lua code in the UI process. This Lua code wouldn't have the full power of most Lua plugins, but could at least do something as simple as `io.stdout:write` (which is the use case this PR is trying to address anyway).\r\n\r\nThough this would still only work with UIs that embed their own Lua runtime, so not sure how generalizable that is either...\r\n\r\nFor the specific case of https://github.com/neovim/neovim/pull/35176, I think the \"right\" long term solution is to introduce the concept of \"progress\" as its own UI event. But that still doesn't address the other cases where we need something like `nvim_ui_send`.",
            "created_at": "2025-08-23T17:11:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3217183391",
            "id": 3217183391,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM6_wlKf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3217183391/reactions"
            },
            "updated_at": "2025-08-23T17:11:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3217183391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> this API feels a bit weird/wrong to me.\r\n\r\n@glacambre 100% true, but I think it's better than the current situation where users are writing to `io.stdout`?\r\n\r\n> #35176 ... I think the \"right\" solution would have been to enable lua plugins that run exclusively in the TUI\r\n\r\nWouldn't the \"right\" solution be to introduce a `progress` event in the UI protocol? \r\n\r\n> I wonder if we could introduce something similar to `nvim_exec_lua` (`nvim_ui_exec_lua`?) for executing (a subset of) Lua code in the UI process.\r\n\r\nIt's an attractive idea but requires us to be prepared for a more complex debugging story. Would also be useful for \"remote ssh\" and other TUI events.\r\n\r\n\r\n> or even `nvim__tty_write` to indicate it is \"private\"?\r\n\r\nWe should never use underscore (private) functions for anything that we recommend to users (in docs or otherwise). That undermines the signal of \"private\".\r\n\r\n> (there has to be a ceiling at some point, right???)\r\n\r\nneverrr :D\r\n\r\n\r\n",
            "created_at": "2025-08-24T22:32:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3218420328",
            "id": 3218420328,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM6_1TJo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3218420328/reactions"
            },
            "updated_at": "2025-08-24T22:33:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3218420328",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">I don't think we could allow any arbitrary plugin or Lua code to run in the TUI process, because the TUI shouldn't affect editor state.\r\n\r\nI'm not sure I understand this part - GUIs can affect editor state, so why shouldn't the TUI be able to do that too? Perhaps I wasn't clear enough, but I'm not advocating for the entirety of existing (server) lua APIs to be made available, instead TUI-specific APIs would be available (and the goal of these APIs would mostly be to facilitate interacting with the server).\r\n\r\n>But I wonder if we could introduce something similar to nvim_exec_lua (nvim_ui_exec_lua?) for executing (a subset of) Lua code in the UI process. [...] Though this would still only work with UIs that embed their own Lua runtime, so not sure how generalizable that is either...\r\n\r\nI agree, I'm not a fan of this approach either, unless it takes the same approach other UIs use to expose functionnality to users (i.e. exposing functionalities users would call with `rpcrequest()`/`rpcnotify`, which should make it obvious that the feature being used might not be available in all UIs).\r\n\r\n>For the specific case of #35176, I think the \"right\" long term solution is to introduce the concept of \"progress\" as its own UI event. But that still doesn't address the other cases where we need something like nvim_ui_send.\r\n\r\nThis is what I thought at first too, and I even started mocking up something, but then I realized that this would just be worse than the current state of things where if a GUI is interested in displaying progress for something, it can just create its own LSPProgress autocommand and react to that (hence why I think it would be worthwhile to enable TUI plugins: they could create these LSPProgress autocommands and display progress without the server having to change at all).",
            "created_at": "2025-08-25T07:29:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3219148190",
            "id": 3219148190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM6_4E2e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3219148190/reactions"
            },
            "updated_at": "2025-08-25T07:30:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3219148190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> hence why I think it would be worthwhile to enable TUI plugins: they could create these LSPProgress autocommands and display progress without the server having to change at all).\r\n\r\nI don't agree with that sentence per se. Keeping everything in the server is ideal, it makes the system much easier to reason about.\r\n\r\nbtw we are adding a generalized `Progress` event and API in https://github.com/neovim/neovim/pull/34846 , does it have any implications on https://github.com/neovim/neovim/pull/35176 ?",
            "created_at": "2025-08-25T18:21:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3221295113",
            "id": 3221295113,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM7AARAJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221295113/reactions"
            },
            "updated_at": "2025-08-25T18:22:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221295113",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> btw we are adding a generalized Progress event and API in https://github.com/neovim/neovim/pull/34846 , does it have any implications on https://github.com/neovim/neovim/pull/35176 ?\r\n\r\nI suppose we'd just want to update the snippet to use the `Progress` event instead of `LspProgress`? Is #34846 going to add a progress UI event as well?",
            "created_at": "2025-08-25T18:48:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3221368605",
            "id": 3221368605,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM7AAi8d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221368605/reactions"
            },
            "updated_at": "2025-08-25T18:48:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221368605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is #34846 going to add a progress UI event as well?\r\n\r\nIt includes progress info in the existing `msg_show` UI event.",
            "created_at": "2025-08-25T18:51:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3221376173",
            "id": 3221376173,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM7AAkyt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221376173/reactions"
            },
            "updated_at": "2025-08-25T18:51:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221376173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Is #34846 going to add a progress UI event as well?\r\n> \r\n> It includes progress info in the existing `msg_show` UI event.\r\n\r\nIIUC the TUI doesn't receive these events today, so we'd be in the exact same position where the core would still need to send the escape sequences to the UI that need to be emitted.\r\n\r\nIf the TUI did receive the msg_show events we could emit the sequences directly to show the progress bar (controlled by an option).",
            "created_at": "2025-08-25T19:47:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3221532860",
            "id": 3221532860,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM7ABLC8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221532860/reactions"
            },
            "updated_at": "2025-08-25T19:47:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3221532860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> IIUC the TUI doesn't receive these events today\r\n\r\nNot sure why that would be, but that will change anyway after https://github.com/neovim/neovim/pull/35117",
            "created_at": "2025-08-26T02:16:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/35406#issuecomment-3222330420",
            "id": 3222330420,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
            "node_id": "IC_kwDOAPphoM7AENw0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222330420/reactions"
            },
            "updated_at": "2025-08-26T02:16:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3222330420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35406/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/35406/commits",
    "created_at": "2025-08-20T16:53:08Z",
    "diff_url": "https://github.com/neovim/neovim/pull/35406.diff",
    "draft": false,
    "head": {
        "label": "gpanders:push-oyxuzztyypwr",
        "ref": "push-oyxuzztyypwr",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2025-08-22T20:05:46Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 306069,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2025-01-11T19:57:11Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/35406",
    "id": 2760454632,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35406",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim defaults for options, colorscheme/theme, autocmds/events, etc.",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        }
    ],
    "locked": false,
    "merge_commit_sha": "586b1b2d9bcfdbc2a58a7a9c90e8f90e638173e7",
    "merged_at": "2025-08-22T20:05:43Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6kiTHo",
    "number": 35406,
    "patch_url": "https://github.com/neovim/neovim/pull/35406.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/35406/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/050202a0b09e0ff80ea869bb8332ec0a08dc08fb",
    "title": "feat(tui): add nvim_ui_send",
    "updated_at": "2025-08-26T02:16:09Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/35406",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    }
}