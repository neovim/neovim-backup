{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34388/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34388/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/34388"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/34388"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34388/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/34e540c773397709131546bdab3382286e9e236a"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 6116,
            "forks_count": 6116,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1969,
            "open_issues_count": 1969,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-06-10T00:47:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 327001,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 90210,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-06-10T02:19:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 90210,
            "watchers_count": 90210,
            "web_commit_signoff_required": false
        },
        "sha": "cb4559bc32049d2268ab002207bb7445027e9264",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "See https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_linkedEditingRange. Maybe some LSP experts can help point me in the right direction with some of the core logic, I don't fully trust myself with that :) \r\n\r\n[Screencast_20250608_191409.webm](https://github.com/user-attachments/assets/c29f0fe7-0325-4f38-a7e8-e4d7d90329f3)\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2135695080"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2135695080"
                }
            },
            "author_association": "MEMBER",
            "body": "I've noticed that undoing specifically adds an extra 1000ms to the test time, unsure why.",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-09T13:10:32Z",
            "diff_hunk": "@@ -0,0 +1,154 @@\n+local t = require('test.testutil')\n+local n = require('test.functional.testnvim')()\n+local t_lsp = require('test.functional.plugin.lsp.testutil')\n+\n+local eq = t.eq\n+local dedent = t.dedent\n+local exec_lua = n.exec_lua\n+local insert = n.insert\n+local feed = n.feed\n+\n+local clear_notrace = t_lsp.clear_notrace\n+local create_server_definition = t_lsp.create_server_definition\n+\n+describe('vim.lsp.linked_editing_range', function()\n+  local text = dedent([[\n+  hello\n+  hello]])\n+\n+  local response = [==[\n+{\"ranges\": [\n+  { \"start\": { \"line\": 0, \"character\": 0 }, \"end\": { \"line\": 0, \"character\": 5 } },\n+  { \"start\": { \"line\": 1, \"character\": 0 }, \"end\": { \"line\": 1, \"character\": 5 } }\n+]}\n+]==]\n+\n+  before_each(function()\n+    clear_notrace()\n+\n+    exec_lua(create_server_definition)\n+    exec_lua(function()\n+      _G.server = _G._create_server({\n+        capabilities = {\n+          linkedEditingRangeProvider = true,\n+        },\n+        handlers = {\n+          ['textDocument/linkedEditingRange'] = function(_, _, callback)\n+            callback(nil, vim.json.decode(response))\n+          end,\n+        },\n+      })\n+\n+      return vim.lsp.start({ name = 'dummy', cmd = _G.server.cmd })\n+    end)\n+\n+    insert(text)\n+  end)\n+\n+  describe('enable()', function()\n+    it('validation', function()\n+      t.matches(\n+        'enable: expected boolean, got table',\n+        t.pcall_err(exec_lua, function()\n+          --- @diagnostic disable-next-line:param-type-mismatch\n+          vim.lsp.linked_editing_range.enable({})\n+        end)\n+      )\n+      eq(\n+        false,\n+        exec_lua(function()\n+          return vim.lsp.linked_editing_range.is_enabled()\n+        end)\n+      )\n+      eq(\n+        true,\n+        exec_lua(function()\n+          vim.lsp.linked_editing_range.enable()\n+          return vim.lsp.linked_editing_range.is_enabled()\n+        end)\n+      )\n+      exec_lua(function()\n+        vim.lsp.linked_editing_range.enable(false)\n+      end)\n+      eq(\n+        false,\n+        exec_lua(function()\n+          return vim.lsp.linked_editing_range.is_enabled()\n+        end)\n+      )\n+    end)\n+  end)\n+\n+  describe('when enabled', function()\n+    it('initiates linked editing', function()\n+      exec_lua(function()\n+        local win = vim.api.nvim_get_current_win()\n+        vim.api.nvim_win_set_cursor(win, { 1, 0 })\n+        vim.lsp.linked_editing_range.enable()\n+      end)\n+      -- Deletion\n+      feed('ldw')\n+      eq(\n+        {\n+          'h',\n+          'h',\n+        },\n+        exec_lua(function()\n+          return vim.api.nvim_buf_get_lines(0, 0, -1, false)\n+        end)\n+      )\n+      -- Insertion\n+      feed('Apt<Esc>')\n+      eq(\n+        {\n+          'hpt',\n+          'hpt',\n+        },\n+        exec_lua(function()\n+          return vim.api.nvim_buf_get_lines(0, 0, -1, false)\n+        end)\n+      )\n+      -- Undo/redo\n+      feed('0xx')\n+      eq(\n+        {\n+          't',\n+          't',\n+        },\n+        exec_lua(function()\n+          return vim.api.nvim_buf_get_lines(0, 0, -1, false)\n+        end)\n+      )\n+      feed('u')",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2135695080",
            "id": 2135695080,
            "line": 122,
            "node_id": "PRRC_kwDOAPphoM5_TB7o",
            "original_commit_id": "cab191cb2b1879e0896e76049f33cda17667e984",
            "original_line": 122,
            "original_position": 122,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/linked_editing_range_spec.lua",
            "position": 122,
            "pull_request_review_id": 2910027164,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2135695080/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-09T13:10:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2135695080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136078149"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136078149"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe also `TextChangedP`?",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-09T16:54:34Z",
            "diff_hunk": "@@ -0,0 +1,199 @@\n+local util = require('vim.lsp.util')\n+local log = require('vim.lsp.log')\n+local ms = require('vim.lsp.protocol').Methods\n+local Range = require('vim.treesitter._range')\n+local api = vim.api\n+local M = {}\n+\n+---@class (private) vim.lsp.linked_editing_range.globalstate Global state for linked editing ranges\n+---@field enabled boolean Whether linked editing ranges are enabled\n+---@field word_pattern? string\n+---@field range_index? integer\n+---@type vim.lsp.linked_editing_range.globalstate\n+M.globalstate = {\n+  enabled = false,\n+}\n+\n+local globalstate = M.globalstate\n+\n+local augroup = api.nvim_create_augroup('nvim.lsp.linked_editing_range', {})\n+local ns = api.nvim_create_namespace('nvim.lsp.linked_editing_range')\n+\n+--- |lsp-handler| for the method `textDocument/linkedEditingRange`\n+--- Stores ranges globally, since they only make sense to track for the current buffer\n+---@param result lsp.LinkedEditingRanges\n+---@param ctx lsp.HandlerContext\n+---@private\n+function M.on_linkededitingrange(err, result, ctx)\n+  if err then\n+    log.error('linkededitingrange', err)\n+    return\n+  end\n+  local bufnr = assert(ctx.bufnr)\n+  api.nvim_buf_clear_namespace(0, ns, 0, -1)\n+  if\n+    util.buf_versions[bufnr] ~= ctx.version\n+    or not result\n+    or not api.nvim_buf_is_loaded(bufnr)\n+    or not globalstate.enabled\n+  then\n+    return\n+  end\n+\n+  local client_id = ctx.client_id\n+  local client = assert(vim.lsp.get_client_by_id(client_id))\n+\n+  local lines = api.nvim_buf_get_lines(bufnr, 0, -1, false)\n+  local curpos = api.nvim_win_get_cursor(0)\n+  local cursor_range = { curpos[1] - 1, curpos[2], curpos[1] - 1, curpos[2] }\n+  for i, range in ipairs(result.ranges) do\n+    local start_line = range.start.line\n+    local line = lines and lines[start_line + 1] or ''\n+    range.start.character =\n+      vim.str_byteindex(line, client.offset_encoding, range.start.character, false)\n+    local end_line = range['end'].line\n+    line = lines and lines[end_line + 1] or ''\n+    range['end'].character =\n+      vim.str_byteindex(line, client.offset_encoding, range['end'].character, false)\n+\n+    api.nvim_buf_set_extmark(bufnr, ns, start_line, range.start.character, {\n+      end_line = end_line,\n+      end_col = range['end'].character,\n+      hl_group = 'LspLinkedEditingRange',\n+      right_gravity = false,\n+      end_right_gravity = true,\n+    })\n+\n+    local range_tuple =\n+      { range.start.line, range.start.character, range['end'].line, range['end'].character }\n+    if Range.contains(range_tuple, cursor_range) then\n+      globalstate.range_index = i\n+    end\n+  end\n+\n+  if not globalstate.range_index then\n+    globalstate.enabled = false\n+  end\n+  -- TODO: Use the word pattern to determine if range content is valid\n+  globalstate.word_pattern = result.wordPattern\n+end\n+\n+--- Refresh linked editing ranges, only if we have attached clients that support it\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@param opts? vim.lsp.util._refresh.Opts Additional options to pass to util._refresh\n+---@private\n+local function _refresh(bufnr, opts)\n+  opts = opts or {}\n+  local win = api.nvim_get_current_win()\n+  opts['bufnr'] = bufnr\n+  local method = ms.textDocument_linkedEditingRange\n+  local clients = vim.lsp.get_clients({ bufnr = bufnr, method = method })\n+\n+  if #clients == 0 then\n+    return\n+  end\n+  -- TODO: Merge results from multiple clients?\n+  local client = clients[1]\n+  client:request(\n+    method,\n+    vim.lsp.util.make_position_params(win, client.offset_encoding),\n+    opts.handler,\n+    bufnr\n+  )\n+end\n+\n+--- Enable linked editing ranges for a buffer\n+local function _enable()\n+  if globalstate.enabled then\n+    return\n+  end\n+  globalstate.enabled = true\n+\n+  _refresh(0)\n+end\n+\n+api.nvim_create_autocmd({ 'TextChanged', 'TextChangedI' }, {",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136078149",
            "id": 2136078149,
            "line": 115,
            "node_id": "PRRC_kwDOAPphoM5_UfdF",
            "original_commit_id": "13934b059658c03e7b31de8b34b850a473822a91",
            "original_line": 115,
            "original_position": 115,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/linked_editing_range.lua",
            "position": 115,
            "pull_request_review_id": 2910659272,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136078149/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-09T16:54:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136078149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136698183"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136698183"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit:\r\n```suggestion\r\n    Enables or disables linked editing ranges.\r\n```",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:14:55Z",
            "diff_hunk": "@@ -2274,6 +2274,26 @@ is_enabled({bufnr})                      *vim.lsp.document_color.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.linked_editing_range            *lsp-linked_editing_range*\n+\n+enable({enable})                       *vim.lsp.linked_editing_range.enable()*\n+    Enables or disables linked editing ranges",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136698183",
            "id": 2136698183,
            "line": 2281,
            "node_id": "PRRC_kwDOAPphoM5_W21H",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 2281,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 8,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136698183/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136698183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136699137"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136699137"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe others will disagree but I can't think of why someone would want to toggle this. I do think we should keep `enable()` for API consistency, but I would lean towards killing `is_enabled()` (at least for the first iteration of the feature).",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:16:39Z",
            "diff_hunk": "@@ -2274,6 +2274,26 @@ is_enabled({bufnr})                      *vim.lsp.document_color.is_enabled()*\n         (`boolean`)\n \n \n+==============================================================================\n+Lua module: vim.lsp.linked_editing_range            *lsp-linked_editing_range*\n+\n+enable({enable})                       *vim.lsp.linked_editing_range.enable()*\n+    Enables or disables linked editing ranges\n+\n+    To \"toggle\", pass the inverse of `is_enabled()`: >lua",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136699137",
            "id": 2136699137,
            "line": 2283,
            "node_id": "PRRC_kwDOAPphoM5_W3EB",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 2283,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 10,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136699137/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136699137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136701904"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136701904"
                }
            },
            "author_association": "MEMBER",
            "body": "Instead of adding the handler here, we can just pass the `handler` in `client:request`.",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:20:39Z",
            "diff_hunk": "@@ -237,6 +237,11 @@ RCS[ms.textDocument_inlayHint] = function(...)\n   return vim.lsp.inlay_hint.on_inlayhint(...)\n end\n \n+--- @private\n+RCS[ms.textDocument_linkedEditingRange] = function(...)",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136701904",
            "id": 2136701904,
            "line": 241,
            "node_id": "PRRC_kwDOAPphoM5_W3vQ",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 241,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 5,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136701904/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136701904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136703076"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136703076"
                }
            },
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/33440/commits/269688773269356c3af306fa695782411f2d73dc might provide some insight on how to do it.",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:22:22Z",
            "diff_hunk": "@@ -237,6 +237,11 @@ RCS[ms.textDocument_inlayHint] = function(...)\n   return vim.lsp.inlay_hint.on_inlayhint(...)\n end\n \n+--- @private\n+RCS[ms.textDocument_linkedEditingRange] = function(...)",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136703076",
            "id": 2136703076,
            "in_reply_to_id": 2136701904,
            "line": 241,
            "node_id": "PRRC_kwDOAPphoM5_W4Bk",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 241,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 5,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136703076/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136703076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136703487"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136703487"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfunction M.on_linked_editing_range(err, result, ctx)\r\n```",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:22:59Z",
            "diff_hunk": "@@ -0,0 +1,199 @@\n+local util = require('vim.lsp.util')\n+local log = require('vim.lsp.log')\n+local ms = require('vim.lsp.protocol').Methods\n+local Range = require('vim.treesitter._range')\n+local api = vim.api\n+local M = {}\n+\n+---@class (private) vim.lsp.linked_editing_range.globalstate Global state for linked editing ranges\n+---@field enabled boolean Whether linked editing ranges are enabled\n+---@field word_pattern? string\n+---@field range_index? integer\n+---@type vim.lsp.linked_editing_range.globalstate\n+M.globalstate = {\n+  enabled = false,\n+}\n+\n+local globalstate = M.globalstate\n+\n+local augroup = api.nvim_create_augroup('nvim.lsp.linked_editing_range', {})\n+local ns = api.nvim_create_namespace('nvim.lsp.linked_editing_range')\n+\n+--- |lsp-handler| for the method `textDocument/linkedEditingRange`\n+--- Stores ranges globally, since they only make sense to track for the current buffer\n+---@param result lsp.LinkedEditingRanges\n+---@param ctx lsp.HandlerContext\n+---@private\n+function M.on_linkededitingrange(err, result, ctx)",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136703487",
            "id": 2136703487,
            "line": 27,
            "node_id": "PRRC_kwDOAPphoM5_W4H_",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 27,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/linked_editing_range.lua",
            "position": 27,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136703487/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136703487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136704047"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136704047"
                }
            },
            "author_association": "MEMBER",
            "body": "Also we should be able to make this a local function if we remove the handler in `handlers.lua`",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:23:46Z",
            "diff_hunk": "@@ -0,0 +1,199 @@\n+local util = require('vim.lsp.util')\n+local log = require('vim.lsp.log')\n+local ms = require('vim.lsp.protocol').Methods\n+local Range = require('vim.treesitter._range')\n+local api = vim.api\n+local M = {}\n+\n+---@class (private) vim.lsp.linked_editing_range.globalstate Global state for linked editing ranges\n+---@field enabled boolean Whether linked editing ranges are enabled\n+---@field word_pattern? string\n+---@field range_index? integer\n+---@type vim.lsp.linked_editing_range.globalstate\n+M.globalstate = {\n+  enabled = false,\n+}\n+\n+local globalstate = M.globalstate\n+\n+local augroup = api.nvim_create_augroup('nvim.lsp.linked_editing_range', {})\n+local ns = api.nvim_create_namespace('nvim.lsp.linked_editing_range')\n+\n+--- |lsp-handler| for the method `textDocument/linkedEditingRange`\n+--- Stores ranges globally, since they only make sense to track for the current buffer\n+---@param result lsp.LinkedEditingRanges\n+---@param ctx lsp.HandlerContext\n+---@private\n+function M.on_linkededitingrange(err, result, ctx)",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136704047",
            "id": 2136704047,
            "in_reply_to_id": 2136703487,
            "line": 27,
            "node_id": "PRRC_kwDOAPphoM5_W4Qv",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 27,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/linked_editing_range.lua",
            "position": 27,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136704047/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136704047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136704974"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136704974"
                }
            },
            "author_association": "MEMBER",
            "body": "Local functions are private by default.",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:24:57Z",
            "diff_hunk": "@@ -0,0 +1,199 @@\n+local util = require('vim.lsp.util')\n+local log = require('vim.lsp.log')\n+local ms = require('vim.lsp.protocol').Methods\n+local Range = require('vim.treesitter._range')\n+local api = vim.api\n+local M = {}\n+\n+---@class (private) vim.lsp.linked_editing_range.globalstate Global state for linked editing ranges\n+---@field enabled boolean Whether linked editing ranges are enabled\n+---@field word_pattern? string\n+---@field range_index? integer\n+---@type vim.lsp.linked_editing_range.globalstate\n+M.globalstate = {\n+  enabled = false,\n+}\n+\n+local globalstate = M.globalstate\n+\n+local augroup = api.nvim_create_augroup('nvim.lsp.linked_editing_range', {})\n+local ns = api.nvim_create_namespace('nvim.lsp.linked_editing_range')\n+\n+--- |lsp-handler| for the method `textDocument/linkedEditingRange`\n+--- Stores ranges globally, since they only make sense to track for the current buffer\n+---@param result lsp.LinkedEditingRanges\n+---@param ctx lsp.HandlerContext\n+---@private\n+function M.on_linkededitingrange(err, result, ctx)\n+  if err then\n+    log.error('linkededitingrange', err)\n+    return\n+  end\n+  local bufnr = assert(ctx.bufnr)\n+  api.nvim_buf_clear_namespace(0, ns, 0, -1)\n+  if\n+    util.buf_versions[bufnr] ~= ctx.version\n+    or not result\n+    or not api.nvim_buf_is_loaded(bufnr)\n+    or not globalstate.enabled\n+  then\n+    return\n+  end\n+\n+  local client_id = ctx.client_id\n+  local client = assert(vim.lsp.get_client_by_id(client_id))\n+\n+  local lines = api.nvim_buf_get_lines(bufnr, 0, -1, false)\n+  local curpos = api.nvim_win_get_cursor(0)\n+  local cursor_range = { curpos[1] - 1, curpos[2], curpos[1] - 1, curpos[2] }\n+  for i, range in ipairs(result.ranges) do\n+    local start_line = range.start.line\n+    local line = lines and lines[start_line + 1] or ''\n+    range.start.character =\n+      vim.str_byteindex(line, client.offset_encoding, range.start.character, false)\n+    local end_line = range['end'].line\n+    line = lines and lines[end_line + 1] or ''\n+    range['end'].character =\n+      vim.str_byteindex(line, client.offset_encoding, range['end'].character, false)\n+\n+    api.nvim_buf_set_extmark(bufnr, ns, start_line, range.start.character, {\n+      end_line = end_line,\n+      end_col = range['end'].character,\n+      hl_group = 'LspLinkedEditingRange',\n+      right_gravity = false,\n+      end_right_gravity = true,\n+    })\n+\n+    local range_tuple =\n+      { range.start.line, range.start.character, range['end'].line, range['end'].character }\n+    if Range.contains(range_tuple, cursor_range) then\n+      globalstate.range_index = i\n+    end\n+  end\n+\n+  if not globalstate.range_index then\n+    globalstate.enabled = false\n+  end\n+  -- TODO: Use the word pattern to determine if range content is valid\n+  globalstate.word_pattern = result.wordPattern\n+end\n+\n+--- Refresh linked editing ranges, only if we have attached clients that support it\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@param opts? vim.lsp.util._refresh.Opts Additional options to pass to util._refresh\n+---@private",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136704974",
            "id": 2136704974,
            "line": 84,
            "node_id": "PRRC_kwDOAPphoM5_W4fO",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 84,
            "original_position": 84,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/linked_editing_range.lua",
            "position": 84,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136704974/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136704974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136705379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136705379"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit: I think we like to use `not next(clients)` instead.",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:25:33Z",
            "diff_hunk": "@@ -0,0 +1,199 @@\n+local util = require('vim.lsp.util')\n+local log = require('vim.lsp.log')\n+local ms = require('vim.lsp.protocol').Methods\n+local Range = require('vim.treesitter._range')\n+local api = vim.api\n+local M = {}\n+\n+---@class (private) vim.lsp.linked_editing_range.globalstate Global state for linked editing ranges\n+---@field enabled boolean Whether linked editing ranges are enabled\n+---@field word_pattern? string\n+---@field range_index? integer\n+---@type vim.lsp.linked_editing_range.globalstate\n+M.globalstate = {\n+  enabled = false,\n+}\n+\n+local globalstate = M.globalstate\n+\n+local augroup = api.nvim_create_augroup('nvim.lsp.linked_editing_range', {})\n+local ns = api.nvim_create_namespace('nvim.lsp.linked_editing_range')\n+\n+--- |lsp-handler| for the method `textDocument/linkedEditingRange`\n+--- Stores ranges globally, since they only make sense to track for the current buffer\n+---@param result lsp.LinkedEditingRanges\n+---@param ctx lsp.HandlerContext\n+---@private\n+function M.on_linkededitingrange(err, result, ctx)\n+  if err then\n+    log.error('linkededitingrange', err)\n+    return\n+  end\n+  local bufnr = assert(ctx.bufnr)\n+  api.nvim_buf_clear_namespace(0, ns, 0, -1)\n+  if\n+    util.buf_versions[bufnr] ~= ctx.version\n+    or not result\n+    or not api.nvim_buf_is_loaded(bufnr)\n+    or not globalstate.enabled\n+  then\n+    return\n+  end\n+\n+  local client_id = ctx.client_id\n+  local client = assert(vim.lsp.get_client_by_id(client_id))\n+\n+  local lines = api.nvim_buf_get_lines(bufnr, 0, -1, false)\n+  local curpos = api.nvim_win_get_cursor(0)\n+  local cursor_range = { curpos[1] - 1, curpos[2], curpos[1] - 1, curpos[2] }\n+  for i, range in ipairs(result.ranges) do\n+    local start_line = range.start.line\n+    local line = lines and lines[start_line + 1] or ''\n+    range.start.character =\n+      vim.str_byteindex(line, client.offset_encoding, range.start.character, false)\n+    local end_line = range['end'].line\n+    line = lines and lines[end_line + 1] or ''\n+    range['end'].character =\n+      vim.str_byteindex(line, client.offset_encoding, range['end'].character, false)\n+\n+    api.nvim_buf_set_extmark(bufnr, ns, start_line, range.start.character, {\n+      end_line = end_line,\n+      end_col = range['end'].character,\n+      hl_group = 'LspLinkedEditingRange',\n+      right_gravity = false,\n+      end_right_gravity = true,\n+    })\n+\n+    local range_tuple =\n+      { range.start.line, range.start.character, range['end'].line, range['end'].character }\n+    if Range.contains(range_tuple, cursor_range) then\n+      globalstate.range_index = i\n+    end\n+  end\n+\n+  if not globalstate.range_index then\n+    globalstate.enabled = false\n+  end\n+  -- TODO: Use the word pattern to determine if range content is valid\n+  globalstate.word_pattern = result.wordPattern\n+end\n+\n+--- Refresh linked editing ranges, only if we have attached clients that support it\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@param opts? vim.lsp.util._refresh.Opts Additional options to pass to util._refresh\n+---@private\n+local function _refresh(bufnr, opts)\n+  opts = opts or {}\n+  local win = api.nvim_get_current_win()\n+  opts['bufnr'] = bufnr\n+  local method = ms.textDocument_linkedEditingRange\n+  local clients = vim.lsp.get_clients({ bufnr = bufnr, method = method })\n+\n+  if #clients == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136705379",
            "id": 2136705379,
            "line": 92,
            "node_id": "PRRC_kwDOAPphoM5_W4lj",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 92,
            "original_position": 92,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/linked_editing_range.lua",
            "position": 92,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136705379/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136705379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136705770"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136705770"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes :)",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:26:06Z",
            "diff_hunk": "@@ -0,0 +1,199 @@\n+local util = require('vim.lsp.util')\n+local log = require('vim.lsp.log')\n+local ms = require('vim.lsp.protocol').Methods\n+local Range = require('vim.treesitter._range')\n+local api = vim.api\n+local M = {}\n+\n+---@class (private) vim.lsp.linked_editing_range.globalstate Global state for linked editing ranges\n+---@field enabled boolean Whether linked editing ranges are enabled\n+---@field word_pattern? string\n+---@field range_index? integer\n+---@type vim.lsp.linked_editing_range.globalstate\n+M.globalstate = {\n+  enabled = false,\n+}\n+\n+local globalstate = M.globalstate\n+\n+local augroup = api.nvim_create_augroup('nvim.lsp.linked_editing_range', {})\n+local ns = api.nvim_create_namespace('nvim.lsp.linked_editing_range')\n+\n+--- |lsp-handler| for the method `textDocument/linkedEditingRange`\n+--- Stores ranges globally, since they only make sense to track for the current buffer\n+---@param result lsp.LinkedEditingRanges\n+---@param ctx lsp.HandlerContext\n+---@private\n+function M.on_linkededitingrange(err, result, ctx)\n+  if err then\n+    log.error('linkededitingrange', err)\n+    return\n+  end\n+  local bufnr = assert(ctx.bufnr)\n+  api.nvim_buf_clear_namespace(0, ns, 0, -1)\n+  if\n+    util.buf_versions[bufnr] ~= ctx.version\n+    or not result\n+    or not api.nvim_buf_is_loaded(bufnr)\n+    or not globalstate.enabled\n+  then\n+    return\n+  end\n+\n+  local client_id = ctx.client_id\n+  local client = assert(vim.lsp.get_client_by_id(client_id))\n+\n+  local lines = api.nvim_buf_get_lines(bufnr, 0, -1, false)\n+  local curpos = api.nvim_win_get_cursor(0)\n+  local cursor_range = { curpos[1] - 1, curpos[2], curpos[1] - 1, curpos[2] }\n+  for i, range in ipairs(result.ranges) do\n+    local start_line = range.start.line\n+    local line = lines and lines[start_line + 1] or ''\n+    range.start.character =\n+      vim.str_byteindex(line, client.offset_encoding, range.start.character, false)\n+    local end_line = range['end'].line\n+    line = lines and lines[end_line + 1] or ''\n+    range['end'].character =\n+      vim.str_byteindex(line, client.offset_encoding, range['end'].character, false)\n+\n+    api.nvim_buf_set_extmark(bufnr, ns, start_line, range.start.character, {\n+      end_line = end_line,\n+      end_col = range['end'].character,\n+      hl_group = 'LspLinkedEditingRange',\n+      right_gravity = false,\n+      end_right_gravity = true,\n+    })\n+\n+    local range_tuple =\n+      { range.start.line, range.start.character, range['end'].line, range['end'].character }\n+    if Range.contains(range_tuple, cursor_range) then\n+      globalstate.range_index = i\n+    end\n+  end\n+\n+  if not globalstate.range_index then\n+    globalstate.enabled = false\n+  end\n+  -- TODO: Use the word pattern to determine if range content is valid\n+  globalstate.word_pattern = result.wordPattern\n+end\n+\n+--- Refresh linked editing ranges, only if we have attached clients that support it\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@param opts? vim.lsp.util._refresh.Opts Additional options to pass to util._refresh\n+---@private\n+local function _refresh(bufnr, opts)\n+  opts = opts or {}\n+  local win = api.nvim_get_current_win()\n+  opts['bufnr'] = bufnr\n+  local method = ms.textDocument_linkedEditingRange\n+  local clients = vim.lsp.get_clients({ bufnr = bufnr, method = method })\n+\n+  if #clients == 0 then\n+    return\n+  end\n+  -- TODO: Merge results from multiple clients?",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136705770",
            "id": 2136705770,
            "line": 95,
            "node_id": "PRRC_kwDOAPphoM5_W4rq",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 95,
            "original_position": 95,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/linked_editing_range.lua",
            "position": 95,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136705770/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136705770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136706573"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136706573"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit: Remove the `_` from local functions. We use that prefix to skip docs for module methods, but we don't need to do that for local functions.",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:27:14Z",
            "diff_hunk": "@@ -0,0 +1,199 @@\n+local util = require('vim.lsp.util')\n+local log = require('vim.lsp.log')\n+local ms = require('vim.lsp.protocol').Methods\n+local Range = require('vim.treesitter._range')\n+local api = vim.api\n+local M = {}\n+\n+---@class (private) vim.lsp.linked_editing_range.globalstate Global state for linked editing ranges\n+---@field enabled boolean Whether linked editing ranges are enabled\n+---@field word_pattern? string\n+---@field range_index? integer\n+---@type vim.lsp.linked_editing_range.globalstate\n+M.globalstate = {\n+  enabled = false,\n+}\n+\n+local globalstate = M.globalstate\n+\n+local augroup = api.nvim_create_augroup('nvim.lsp.linked_editing_range', {})\n+local ns = api.nvim_create_namespace('nvim.lsp.linked_editing_range')\n+\n+--- |lsp-handler| for the method `textDocument/linkedEditingRange`\n+--- Stores ranges globally, since they only make sense to track for the current buffer\n+---@param result lsp.LinkedEditingRanges\n+---@param ctx lsp.HandlerContext\n+---@private\n+function M.on_linkededitingrange(err, result, ctx)\n+  if err then\n+    log.error('linkededitingrange', err)\n+    return\n+  end\n+  local bufnr = assert(ctx.bufnr)\n+  api.nvim_buf_clear_namespace(0, ns, 0, -1)\n+  if\n+    util.buf_versions[bufnr] ~= ctx.version\n+    or not result\n+    or not api.nvim_buf_is_loaded(bufnr)\n+    or not globalstate.enabled\n+  then\n+    return\n+  end\n+\n+  local client_id = ctx.client_id\n+  local client = assert(vim.lsp.get_client_by_id(client_id))\n+\n+  local lines = api.nvim_buf_get_lines(bufnr, 0, -1, false)\n+  local curpos = api.nvim_win_get_cursor(0)\n+  local cursor_range = { curpos[1] - 1, curpos[2], curpos[1] - 1, curpos[2] }\n+  for i, range in ipairs(result.ranges) do\n+    local start_line = range.start.line\n+    local line = lines and lines[start_line + 1] or ''\n+    range.start.character =\n+      vim.str_byteindex(line, client.offset_encoding, range.start.character, false)\n+    local end_line = range['end'].line\n+    line = lines and lines[end_line + 1] or ''\n+    range['end'].character =\n+      vim.str_byteindex(line, client.offset_encoding, range['end'].character, false)\n+\n+    api.nvim_buf_set_extmark(bufnr, ns, start_line, range.start.character, {\n+      end_line = end_line,\n+      end_col = range['end'].character,\n+      hl_group = 'LspLinkedEditingRange',\n+      right_gravity = false,\n+      end_right_gravity = true,\n+    })\n+\n+    local range_tuple =\n+      { range.start.line, range.start.character, range['end'].line, range['end'].character }\n+    if Range.contains(range_tuple, cursor_range) then\n+      globalstate.range_index = i\n+    end\n+  end\n+\n+  if not globalstate.range_index then\n+    globalstate.enabled = false\n+  end\n+  -- TODO: Use the word pattern to determine if range content is valid\n+  globalstate.word_pattern = result.wordPattern\n+end\n+\n+--- Refresh linked editing ranges, only if we have attached clients that support it\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@param opts? vim.lsp.util._refresh.Opts Additional options to pass to util._refresh\n+---@private\n+local function _refresh(bufnr, opts)\n+  opts = opts or {}\n+  local win = api.nvim_get_current_win()\n+  opts['bufnr'] = bufnr\n+  local method = ms.textDocument_linkedEditingRange\n+  local clients = vim.lsp.get_clients({ bufnr = bufnr, method = method })\n+\n+  if #clients == 0 then\n+    return\n+  end\n+  -- TODO: Merge results from multiple clients?\n+  local client = clients[1]\n+  client:request(\n+    method,\n+    vim.lsp.util.make_position_params(win, client.offset_encoding),\n+    opts.handler,\n+    bufnr\n+  )\n+end\n+\n+--- Enable linked editing ranges for a buffer\n+local function _enable()",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136706573",
            "id": 2136706573,
            "line": 106,
            "node_id": "PRRC_kwDOAPphoM5_W44N",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 106,
            "original_position": 106,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/linked_editing_range.lua",
            "position": 106,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136706573/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136706573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/34388#discussion_r2136707753"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/34388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136707753"
                }
            },
            "author_association": "MEMBER",
            "body": "Since there's no buffer-local state, I would just call this `state`.",
            "commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "created_at": "2025-06-10T00:28:53Z",
            "diff_hunk": "@@ -0,0 +1,199 @@\n+local util = require('vim.lsp.util')\n+local log = require('vim.lsp.log')\n+local ms = require('vim.lsp.protocol').Methods\n+local Range = require('vim.treesitter._range')\n+local api = vim.api\n+local M = {}\n+\n+---@class (private) vim.lsp.linked_editing_range.globalstate Global state for linked editing ranges\n+---@field enabled boolean Whether linked editing ranges are enabled\n+---@field word_pattern? string\n+---@field range_index? integer\n+---@type vim.lsp.linked_editing_range.globalstate\n+M.globalstate = {",
            "html_url": "https://github.com/neovim/neovim/pull/34388#discussion_r2136707753",
            "id": 2136707753,
            "line": 13,
            "node_id": "PRRC_kwDOAPphoM5_W5Kp",
            "original_commit_id": "34e540c773397709131546bdab3382286e9e236a",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/linked_editing_range.lua",
            "position": 13,
            "pull_request_review_id": 2911659510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136707753/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2025-06-10T00:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/2136707753",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34388/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/34388/commits",
    "created_at": "2025-06-09T02:18:22Z",
    "diff_url": "https://github.com/neovim/neovim/pull/34388.diff",
    "draft": false,
    "head": {
        "label": "ribru17:linked_editing",
        "ref": "linked_editing",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2025-06-09T17:24:01Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 320765,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2025-06-09T17:22:32Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "34e540c773397709131546bdab3382286e9e236a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/34388",
    "id": 2577182085,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34388",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e09998926a1e7aa28ddced4ae9642d139adb1ac8",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6ZnK2F",
    "number": 34388,
    "patch_url": "https://github.com/neovim/neovim/pull/34388.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/34388/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/34e540c773397709131546bdab3382286e9e236a",
    "title": "feat(lsp): support linked editing ranges",
    "updated_at": "2025-06-10T00:31:06Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/34388",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17",
        "user_view_type": "public"
    }
}