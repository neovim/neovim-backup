{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nNeovim fails to build with GCC 15.\nI've tested with master (b51110f4a11af114401e626cd4c1f1aec23e81c5), v0.10.3 and v0.10.2.\n\nThe following is a snippet from the build error message.\n```\nFAILED: src/nvim/CMakeFiles/nvim_bin.dir/api/window.c.o\n/usr/bin/cc -DHAVE_UNIBILIUM -DINCLUDE_GENERATED_DECLARATIONS -DUNIT_TESTING -D_GNU_SOURCE -Dnvim_bin_EXPORTS -I/home/bdas/neovim/build/src/nvim/auto -I/home/bdas/neovim/bui\nld/include -I/home/bdas/neovim/build/cmake.config -I/home/bdas/neovim/src -isystem /home/bdas/neovim/.deps/usr/include/luajit-2.1 -isystem /home/bdas/neovim/.deps/usr/includ\ne -O2 -g -Og -g -flto=auto -fno-fat-lto-objects -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wvla -Wdouble-promotion -\nWmissing-noreturn -Wmissing-format-attribute -Wmissing-prototypes -fsigned-char -fstack-protector-strong -Wno-conversion -fno-common -Wno-unused-result -Wimplicit-fallthroug\nh -fdiagnostics-color=always -MD -MT src/nvim/CMakeFiles/nvim_bin.dir/api/window.c.o -MF src/nvim/CMakeFiles/nvim_bin.dir/api/window.c.o.d -o src/nvim/CMakeFiles/nvim_bin.di\nr/api/window.c.o -c /home/bdas/neovim/src/nvim/api/window.c\n/home/bdas/neovim/src/nvim/api/window.c: In function ‘nvim_win_text_height’:\n/home/bdas/neovim/src/nvim/api/window.c:531:73: error: passing argument 4 of ‘normalize_index’ from incompatible pointer type [-Wincompatible-pointer-types]\n  531 |     start_lnum = (linenr_T)normalize_index(buf, opts->start_row, false, &oob);\n      |                                                                         ^~~~\n      |                                                                         |\n      |                                                                         _Bool *\nIn file included from /home/bdas/neovim/src/nvim/api/private/helpers.h:186,\n                 from /home/bdas/neovim/src/nvim/api/window.c:9:\n/home/bdas/neovim/build/include/api/private/helpers.h.generated.h:31:96: note: expected ‘unsigned int *’ but argument is of type ‘_Bool *’\n   31 | DLLEXPORT int64_t normalize_index(buf_T *buf, int64_t index, unsigned end_exclusive, unsigned *oob);\n      |                                                                                      ~~~~~~~~~~^~~\n/home/bdas/neovim/src/nvim/api/window.c:535:69: error: passing argument 4 of ‘normalize_index’ from incompatible pointer type [-Wincompatible-pointer-types]\n  535 |     end_lnum = (linenr_T)normalize_index(buf, opts->end_row, false, &oob);\n      |                                                                     ^~~~\n      |                                                                     |\n      |                                                                     _Bool *\n/home/bdas/neovim/build/include/api/private/helpers.h.generated.h:31:96: note: expected ‘unsigned int *’ but argument is of type ‘_Bool *’\n   31 | DLLEXPORT int64_t normalize_index(buf_T *buf, int64_t index, unsigned end_exclusive, unsigned *oob);\n      |                                                                                      ~~~~~~~~~~^~~\n[199/416] Building C object src/nvim/CMakeFiles/nvim_bin.dir/api/vim.c.o\n```\n\nComplete build log: https://gist.github.com/listout/03224ff371b149e3b8cdf0bde88564a7\n\n### Steps to reproduce\n\nUse a gcc 15 environment\ngit clone https://github.com/neovim/neovim.git\ncd neovim\nmake CMAKE_BUILD_TYPE=RelWithDebInfo CMAKE_INSTALL_PREFIX=$HOME/.local/nvim\n\n### Expected behavior\n\nBuilds successfully with GCC 15\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-1414+gb51110f4a1\n\n### Vim (not Nvim) behaves the same?\n\nno sure\n\n### Operating system/version\n\nGentoo with GCC 15\n\n### Terminal name/version\n\nalacritty\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nGit source",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "```\napi/private/helpers.h.generated.h:31:96: note: expected ‘unsigned int *’ but argument is of type ‘_Bool *’\n   31 | DLLEXPORT int64_t normalize_index(buf_T *buf, int64_t index, unsigned end_exclusive, unsigned *oob);\n```\n\ngcc 15 hasn't been released yet. This looks like some header issue, either a bug in gcc or your system. We declare the function as `bool *oob`: https://github.com/neovim/neovim/blob/fe7be7ae95d7627fc7e0f0cb7d778803ba2424d7/src/nvim/api/private/helpers.c#L462\n\nOr is our `src/nvim/generators/gen_declarations.lua` script generating the `unsigned *oob` declaration? When I open `build/include/api/private/helpers.h.generated.h` on my system, I see:\n\n```c\nDLLEXPORT int64_t normalize_index(buf_T *buf, int64_t index, _Bool end_exclusive, _Bool *oob);\n```\n\nWhat do you see?",
            "created_at": "2024-12-30T21:49:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/31723#issuecomment-2565947942",
            "id": 2565947942,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31723",
            "node_id": "IC_kwDOAPphoM6Y8UIm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565947942/reactions"
            },
            "updated_at": "2024-12-30T21:49:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565947942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't think it's a bug in GCC 15, but they switched to C23, which deprecated `_Bool` and introduced a real `bool` type.  So, the generated file should probably have the same signature and use `bool`",
            "created_at": "2024-12-30T22:30:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/31723#issuecomment-2565973130",
            "id": 2565973130,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31723",
            "node_id": "IC_kwDOAPphoM6Y8aSK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565973130/reactions"
            },
            "updated_at": "2024-12-30T22:30:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2565973130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> When I open `build/include/api/private/helpers.h.generated.h` on my system, I see:\n> \n> `DLLEXPORT int64_t normalize_index(buf_T *buf, int64_t index, _Bool end_exclusive, _Bool *oob);`\n> \n> What do you see?\n\nIt's same as yours Justin (on a gcc <15 system)\n",
            "created_at": "2024-12-31T17:24:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/31723#issuecomment-2566609801",
            "id": 2566609801,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31723",
            "node_id": "IC_kwDOAPphoM6Y-1uJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566609801/reactions"
            },
            "updated_at": "2024-12-31T18:14:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566609801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66715002?v=4",
                "events_url": "https://api.github.com/users/listout/events{/privacy}",
                "followers_url": "https://api.github.com/users/listout/followers",
                "following_url": "https://api.github.com/users/listout/following{/other_user}",
                "gists_url": "https://api.github.com/users/listout/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/listout",
                "id": 66715002,
                "login": "listout",
                "node_id": "MDQ6VXNlcjY2NzE1MDAy",
                "organizations_url": "https://api.github.com/users/listout/orgs",
                "received_events_url": "https://api.github.com/users/listout/received_events",
                "repos_url": "https://api.github.com/users/listout/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/listout/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/listout/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/listout",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> C23, which deprecated `_Bool` and introduced a real `bool`\n\nAha, that explains it.\n\nI found this[0], according to which\n\n> Several keywords in current C2x have weird spellings as reserved names that have ensured\n> backwards compatibility for existing code bases. As a reply to a previous paper in this\n> series, replacing the keywords\n\nAnd _Bool is included in that keyword list.\n\n[0]: https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2934.pdf",
            "created_at": "2024-12-31T17:30:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/31723#issuecomment-2566613667",
            "id": 2566613667,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31723",
            "node_id": "IC_kwDOAPphoM6Y-2qj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566613667/reactions"
            },
            "updated_at": "2024-12-31T17:30:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566613667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66715002?v=4",
                "events_url": "https://api.github.com/users/listout/events{/privacy}",
                "followers_url": "https://api.github.com/users/listout/followers",
                "following_url": "https://api.github.com/users/listout/following{/other_user}",
                "gists_url": "https://api.github.com/users/listout/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/listout",
                "id": 66715002,
                "login": "listout",
                "node_id": "MDQ6VXNlcjY2NzE1MDAy",
                "organizations_url": "https://api.github.com/users/listout/orgs",
                "received_events_url": "https://api.github.com/users/listout/received_events",
                "repos_url": "https://api.github.com/users/listout/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/listout/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/listout/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/listout",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk is the gen_declarations.lua dependent on GCC version some how. I get slightly different helpers.h.generated.h files with GCC 14 and GCC 15.\n\nGCC 14 version: https://gist.github.com/listout/96ccd27cbe2be49394be0049fd894880\n\nGCC 15 version: https://gist.github.com/listout/d3c1c4d7f2df30c3820da15573761581\n\nNotice the difference between declaration of `normalize_index`\n\n```diff\n@@ -12,8 +12,8 @@\n DLLEXPORT void try_enter(TryState *const tstate);\n DLLEXPORT void try_leave(const TryState *const tstate, Error *const err) FUNC_ATTR_NONNULL_ALL;\n DLLEXPORT Object dict_get_value(dict_T *dict, String key, Arena *arena, Error *err);\n-DLLEXPORT dictitem_T *dict_check_writable(dict_T *dict, String key, _Bool del, Error *err);\n-DLLEXPORT Object dict_set_var(dict_T *dict, String key, Object value, _Bool del, _Bool retval, Arena *arena, Error *err);\n+DLLEXPORT dictitem_T *dict_check_writable(dict_T *dict, String key, unsigned del, Error *err);\n+DLLEXPORT Object dict_set_var(dict_T *dict, String key, Object value, unsigned del, unsigned retval, Arena *arena, Error *err);\n DLLEXPORT buf_T *find_buffer_by_handle(Buffer buffer, Error *err);\n DLLEXPORT win_T *find_window_by_handle(Window window, Error *err);\n DLLEXPORT tabpage_T *find_tab_by_handle(Tabpage tabpage, Error *err);\n@@ -25,8 +25,8 @@\n DLLEXPORT String cstrn_as_string(char *str, size_t maxsize) FUNC_ATTR_NONNULL_ALL;\n DLLEXPORT String cstr_as_string(const char *str) FUNC_ATTR_PURE;\n DLLEXPORT String ga_take_string(garray_T *ga);\n-DLLEXPORT Array string_to_array(const String input, _Bool crlf, Arena *arena);\n-DLLEXPORT int64_t normalize_index(buf_T *buf, int64_t index, _Bool end_exclusive, _Bool *oob);\n+DLLEXPORT Array string_to_array(const String input, unsigned crlf, Arena *arena);\n+DLLEXPORT int64_t normalize_index(buf_T *buf, int64_t index, unsigned end_exclusive, unsigned *oob);\n DLLEXPORT String buf_get_text(buf_T *buf, int64_t lnum, int64_t start_col, int64_t end_col, Error *err);\n DLLEXPORT void api_free_string(String value);\n DLLEXPORT Array arena_array(Arena *arena, size_t max_size);\n@@ -44,18 +44,18 @@\n DLLEXPORT Dict copy_dict(Dict dict, Arena *arena);\n DLLEXPORT Object copy_object(Object obj, Arena *arena);\n DLLEXPORT void api_set_error(Error *err, ErrorType errType, const char *format, ...) FUNC_ATTR_NONNULL_ALL FUNC_ATTR_PRINTF(3, 4);\n-DLLEXPORT _Bool api_object_to_bool(Object obj, const char *what, _Bool nil_value, Error *err);\n+DLLEXPORT unsigned api_object_to_bool(Object obj, const char *what, unsigned nil_value, Error *err);\n DLLEXPORT int object_to_hl_id(Object obj, const char *what, Error *err);\n DLLEXPORT char *api_typename(ObjectType t);\n DLLEXPORT HlMessage parse_hl_msg(Array chunks, Error *err);\n-DLLEXPORT _Bool api_dict_to_keydict(void *retval, FieldHashfn hashy, Dict dict, Error *err);\n+DLLEXPORT unsigned api_dict_to_keydict(void *retval, FieldHashfn hashy, Dict dict, Error *err);\n DLLEXPORT Dict api_keydict_to_dict(void *value, KeySetLink *table, size_t max_size, Arena *arena);\n DLLEXPORT void api_luarefs_free_object(Object value);\n DLLEXPORT void api_luarefs_free_keydict(void *dict, KeySetLink *table);\n DLLEXPORT void api_luarefs_free_array(Array value);\n DLLEXPORT void api_luarefs_free_dict(Dict value);\n-DLLEXPORT _Bool set_mark(buf_T *buf, String name, Integer line, Integer col, Error *err);\n-DLLEXPORT const char *get_default_stl_hl(win_T *wp, _Bool use_winbar, int stc_hl_id);\n+DLLEXPORT unsigned set_mark(buf_T *buf, String name, Integer line, Integer col, Error *err);\n+DLLEXPORT const char *get_default_stl_hl(win_T *wp, unsigned use_winbar, int stc_hl_id);\n DLLEXPORT int find_sid(uint64_t channel_id);\n DLLEXPORT sctx_T api_set_sctx(uint64_t channel_id);\n-#include \"nvim/func_attr.h\"\n\\ No newline at end of file\n+#include \"nvim/func_attr.h\"\n```",
            "created_at": "2024-12-31T18:05:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/31723#issuecomment-2566632258",
            "id": 2566632258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31723",
            "node_id": "IC_kwDOAPphoM6Y-7NC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566632258/reactions"
            },
            "updated_at": "2024-12-31T18:13:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566632258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66715002?v=4",
                "events_url": "https://api.github.com/users/listout/events{/privacy}",
                "followers_url": "https://api.github.com/users/listout/followers",
                "following_url": "https://api.github.com/users/listout/following{/other_user}",
                "gists_url": "https://api.github.com/users/listout/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/listout",
                "id": 66715002,
                "login": "listout",
                "node_id": "MDQ6VXNlcjY2NzE1MDAy",
                "organizations_url": "https://api.github.com/users/listout/orgs",
                "received_events_url": "https://api.github.com/users/listout/received_events",
                "repos_url": "https://api.github.com/users/listout/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/listout/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/listout/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/listout",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> is the gen_declarations.lua dependent on GCC version some how. I get slightly different helpers.h.generated.h files with GCC 14 and GCC 15.\n\nyep, it reads some headers or macros from the system somewhere. Needs investigation to decide if our script needs a fix or if it's a gcc problem.",
            "created_at": "2024-12-31T19:13:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/31723#issuecomment-2566667376",
            "id": 2566667376,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31723",
            "node_id": "IC_kwDOAPphoM6Y_Dxw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566667376/reactions"
            },
            "updated_at": "2024-12-31T19:13:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566667376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Needs investigation to decide if our script needs a fix or if it's a gcc problem.\n\nLooks like the latter -- https://gcc.gnu.org/bugzilla/show_bug.cgi?id=117633",
            "created_at": "2025-01-02T00:58:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/31723#issuecomment-2567205930",
            "id": 2567205930,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31723",
            "node_id": "IC_kwDOAPphoM6ZBHQq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2567205930/reactions"
            },
            "updated_at": "2025-01-02T00:58:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2567205930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31723/comments",
    "created_at": "2024-12-25T08:44:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31723/events",
    "html_url": "https://github.com/neovim/neovim/issues/31723",
    "id": 2758637347,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        },
        {
            "color": "FEF2C0",
            "default": false,
            "description": "Needs a third-party / external change or fix",
            "id": 101945532,
            "name": "status:blocked-external",
            "node_id": "MDU6TGFiZWwxMDE5NDU1MzI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/status:blocked-external"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31723/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6kbXcj",
    "number": 31723,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31723/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31723/timeline",
    "title": "build fails with GCC 15",
    "updated_at": "2025-01-17T14:59:04Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31723",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/66715002?v=4",
        "events_url": "https://api.github.com/users/listout/events{/privacy}",
        "followers_url": "https://api.github.com/users/listout/followers",
        "following_url": "https://api.github.com/users/listout/following{/other_user}",
        "gists_url": "https://api.github.com/users/listout/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/listout",
        "id": 66715002,
        "login": "listout",
        "node_id": "MDQ6VXNlcjY2NzE1MDAy",
        "organizations_url": "https://api.github.com/users/listout/orgs",
        "received_events_url": "https://api.github.com/users/listout/received_events",
        "repos_url": "https://api.github.com/users/listout/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/listout/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/listout/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/listout",
        "user_view_type": "public"
    }
}