{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "# Problem\n\nMoving the cursor is a fundamental action in Nvim, and there are many different ways to do so, depending on context:\n\n- `vim.api.nvim_win_set_cursor()` or `vim.fn.cursor()` are the low level \"primitives\"\n- `vim.diagnostic.goto_next()` and `vim.diagnostic.goto_prev()` move between diagnostics\n- https://github.com/neovim/neovim/pull/24499 proposed a method for moving between tree-sitter nodes\n- `vim.lsp.util.jump_to_location` moves the cursor to a given position within a specific buffer\n\nhttps://github.com/neovim/neovim/pull/24499#issuecomment-1658752117 mentions an abstract `vim.goto()` or `vim.cursor()` function that accepts any arbitrary \"position\" and moves the cursor to that location.\n\nRelated: \n- https://github.com/neovim/neovim/issues/25509\n- https://github.com/neovim/neovim/pull/26745\n\n# Proposal\n\nWe cannot name the function `vim.goto()` because `goto` is a reserved keyword in LuaJIT. IMO `vim.cursor()` is not a great name because \"cursor\" is not a verb. So I propose `vim.jump()`: \"jump\" is a standard and common idiom in Vim terminology and is therefore already familiar with users.\n\n`vim.jump()` accepts a [Position](https://github.com/neovim/neovim/issues/25509) as an argument and moves the cursor to that location (as well as an optional buffer number to support jumping between buffers, to support the LSP use case? Or is the buffer number included in the `Position`?)\n\n`vim.jump()` can then be used for all of the use cases covered in the problem description:\n\n- As the go-to \"primitive\" for basic cursor movement:\n\n  ```lua\n  -- Jump to the beginning of a buffer\n  vim.jump({ 0, 0 })\n\n  -- Jump to the last line of a buffer\n  vim.jump({ -1, 0 })\n  ```\n\n- For use with `vim.diagnostic` and `vim.treesitter` APIs:\n\n  ```lua\n  -- Jump to next diagnostic, replaces vim.diagnostic.goto_next()\n  vim.jump(vim.diagnostic.next(1))\n\n  -- Jump to previous diagnostic, replaces vim.diagnostic.goto_prev()\n  vim.jump(vim.diagnostic.next(-1))\n\n  -- Jump to Tree-sitter node\n  local node = vim.treesitter.get_node()\n  vim.jump(node:pos())\n  ```\n\n- Could possibly be used to replace `vim.lsp.util.jump_to_location`, in service of https://github.com/neovim/neovim/issues/25272",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Just to bring up alternatives: `vim.go_to()` would be legal; `vim.move()` may work, too (but is worse than `jump` because it may apply to moving other things).",
            "created_at": "2023-12-28T14:32:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1871229567",
            "id": 1871229567,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5viLJ_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871229567/reactions"
            },
            "updated_at": "2023-12-28T14:35:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871229567",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> vim.jump() accepts a https://github.com/neovim/neovim/issues/25509 as an argument and moves the cursor to that location (as well as an optional buffer number to support jumping between buffers, to support the LSP use case? Or is the buffer number included in the Position?)\r\n\r\nI think we touched on optional fields in `vim.pos` (in the context of `byte`, as in `TSRange6`), where bufnr could live as well. But I feel that should be determined by general API considerations (\"how often do you need positions in _other_ buffers?\")",
            "created_at": "2023-12-28T14:35:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1871231519",
            "id": 1871231519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5viLof",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871231519/reactions"
            },
            "updated_at": "2023-12-28T14:35:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871231519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We cannot name the function vim.goto() because goto is a reserved keyword in LuaJIT. \r\n\r\nI don't think this is true. it is used as a keyword in statement contexts, but it is not actually reserved (because that would break 5.1 compat).",
            "created_at": "2023-12-30T20:58:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1872605654",
            "id": 1872605654,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5vnbHW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872605654/reactions"
            },
            "updated_at": "2023-12-30T20:58:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872605654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > We cannot name the function vim.goto() because goto is a reserved keyword in LuaJIT.\r\n> \r\n> I don't think this is true. it is used as a keyword in statement contexts, but it is not actually reserved (because that would break 5.1 compat).\r\n\r\nYes, my mistake. It's not LuaJIT that has a problem with `goto()`, but some of our tooling (`luacheck` in particular seems to run into a parse error when using `goto()`). Maybe we can work around this.",
            "created_at": "2023-12-31T18:51:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1873016112",
            "id": 1873016112,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5vo_Uw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873016112/reactions"
            },
            "updated_at": "2023-12-31T18:51:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873016112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`setpos()` is another option. I favor `vim.cursor()` since it's very clear, discoverable, and well-known; those are more important than english grammar (I actually wonder if english grammar ever matters, since we can define anything as a verb/noun/etc: what matters is our internal coherency).",
            "created_at": "2024-01-03T00:01:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1874702393",
            "id": 1874702393,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5vvbA5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874702393/reactions"
            },
            "updated_at": "2024-09-28T11:31:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874702393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I actually wonder if english grammar ever matters, since we can define anything as a verb/noun/etc: what matters is our internal coherency\r\n\r\nI very much think it matters. It's the most obnoxious thing in the world when software create their own cinematic universe and reinvent the dictionary for already well-established terms. It may unnecessarily raise the barrier for use due to the potential confusion it may cause.",
            "created_at": "2024-01-03T22:47:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1876074059",
            "id": 1876074059,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5v0p5L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1876074059/reactions"
            },
            "updated_at": "2024-09-28T11:31:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1876074059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> vim.jump() accepts a https://github.com/neovim/neovim/issues/25509 as an argument and moves the cursor to that location (as well as an optional buffer number to support jumping between buffers, to support the LSP use case? Or is the buffer number included in the Position?)\r\n\r\nShouldn't it take a _window_ number instead of a buffer number, given `nvim_win_set_cursor` operates on windows?\r\n\r\nAs for naming, I would just stick with `vim.cursor` as it makes the most sense/is likely what one would search for when trying to figure out how to move the cursor using Lua. Forcing everything to be verbs doesn't really make sense to me, especially given (at least some) existing modules (e.g. `vim.diagnostic`) don't follow this pattern any way.",
            "created_at": "2024-01-03T23:29:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1876107072",
            "id": 1876107072,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5v0x9A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1876107072/reactions"
            },
            "updated_at": "2024-01-03T23:29:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1876107072",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86065?v=4",
                "events_url": "https://api.github.com/users/yorickpeterse/events{/privacy}",
                "followers_url": "https://api.github.com/users/yorickpeterse/followers",
                "following_url": "https://api.github.com/users/yorickpeterse/following{/other_user}",
                "gists_url": "https://api.github.com/users/yorickpeterse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yorickpeterse",
                "id": 86065,
                "login": "yorickpeterse",
                "node_id": "MDQ6VXNlcjg2MDY1",
                "organizations_url": "https://api.github.com/users/yorickpeterse/orgs",
                "received_events_url": "https://api.github.com/users/yorickpeterse/received_events",
                "repos_url": "https://api.github.com/users/yorickpeterse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yorickpeterse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yorickpeterse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yorickpeterse",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > vim.jump() accepts a #25509 as an argument and moves the cursor to that location (as well as an optional buffer number to support jumping between buffers, to support the LSP use case? Or is the buffer number included in the Position?)\r\n> \r\n> Shouldn't it take a _window_ number instead of a buffer number, given `nvim_win_set_cursor` operates on windows?\r\n\r\nThe idea is that this API is a convenient way to move the “active cursor”, so it always operates on the current window. The buffer number argument means that the buffer in the current window changes. The concept is from the point of view of what the user wants to do (“put my cursor in this file on this line and column”). For use cases that need to move the cursor in a different window there is still `nvim_win_set_cursor` and friends. \r\n\r\n> As for naming, I would just stick with vim.cursor as it makes the most sense/is likely what one would search for when trying to figure out how to move the cursor using Lua. Forcing everything to be verbs doesn't really make sense to me, especially given (at least some) existing modules (e.g. vim.diagnostic) don't follow this pattern any way.\r\n\r\nNoun-functions imply that it returns a thing. Verb-functions imply that it does a thing. `vim.cursor()` is ambiguous: it could mean that it returns the cursor position, or it could move the cursor. Sticking to verbs is not an ideological point, it’s trying to match user expectations and minimize surprise/ambiguity. ",
            "created_at": "2024-01-04T01:17:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1876180355",
            "id": 1876180355,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5v1D2D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1876180355/reactions"
            },
            "updated_at": "2024-01-04T01:17:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1876180355",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@gpanders My bad, I thought `vim.cursor` was the _module_ and not a function, i.e. there would be something like `vim.cursor.move`, `vim.cursor.get`, etc; hence the suggestion to use `cursor` for the module name.",
            "created_at": "2024-01-04T14:00:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1877140299",
            "id": 1877140299,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5v4uNL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877140299/reactions"
            },
            "updated_at": "2024-01-04T14:00:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877140299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86065?v=4",
                "events_url": "https://api.github.com/users/yorickpeterse/events{/privacy}",
                "followers_url": "https://api.github.com/users/yorickpeterse/followers",
                "following_url": "https://api.github.com/users/yorickpeterse/following{/other_user}",
                "gists_url": "https://api.github.com/users/yorickpeterse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yorickpeterse",
                "id": 86065,
                "login": "yorickpeterse",
                "node_id": "MDQ6VXNlcjg2MDY1",
                "organizations_url": "https://api.github.com/users/yorickpeterse/orgs",
                "received_events_url": "https://api.github.com/users/yorickpeterse/received_events",
                "repos_url": "https://api.github.com/users/yorickpeterse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yorickpeterse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yorickpeterse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yorickpeterse",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "for reference https://github.com/neovim/neovim/pull/26745#pullrequestreview-2082322699\r\n\r\n> Looks like we've converged on \"jump\" as a name for navigation, based on `vim.diagnostic.jump()` and `vim.snippet.jump()`.\r\n\r\n\r\n\r\n\r\n",
            "created_at": "2024-09-28T11:31:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-2380609832",
            "id": 2380609832,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM6N5Tko",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2380609832/reactions"
            },
            "updated_at": "2024-09-28T11:33:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2380609832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Potential use-case from https://github.com/neovim/neovim/pull/30927 includes updating jumplist/tagstack \n\nAlso a point from recent discussion in chat:\n- Might need to support something like a `:getpos()` protocol, so you can compose with cases like `vim.jump(vim.diagnostic.get({ direction = 1 }))`, or `vim.jump(vim.lsp.buf.get_xy())` - for LSP it might be desirable to do lsp.Location offset decoding lazy, and a list might have mixed encodings. But it's unclear how well lsp methods would/will compose, given most are async",
            "created_at": "2024-10-24T11:49:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-2435060260",
            "id": 2435060260,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM6RJBIk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2435060260/reactions"
            },
            "updated_at": "2024-10-24T11:49:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2435060260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26782/comments",
    "created_at": "2023-12-28T14:30:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26782/events",
    "html_url": "https://github.com/neovim/neovim/issues/26782",
    "id": 2058506215,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 6993871329,
            "name": "jumps-navigation",
            "node_id": "LA_kwDOAPphoM8AAAABoN4B4Q",
            "url": "https://api.github.com/repos/neovim/neovim/labels/jumps-navigation"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26782/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM56sk_n",
    "number": 26782,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26782/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26782/timeline",
    "title": "vim.jump: interface for moving the cursor",
    "updated_at": "2025-01-17T15:27:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26782",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    }
}