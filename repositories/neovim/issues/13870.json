{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "- `nvim --version`: NVIM v0.4.4\r\n\r\nWhen doing recursive macros, you need a guard condition to exit the macro repetition. I usually create a guard by either failing search or checking I can't move the cursor further because of the end of the line/file, which triggers an error and therefore stops the execution. This however, forbids nested recursive macro execution.\r\n\r\nAn example:\r\nMacro №1: open a file at current line (from a file list) in a new tab, execute recursive macro №2, call macro №1.\r\nMacro №2: search for a pattern (recursion guard condition, which causes an error), fix it, call macro №2.\r\n\r\n#### Possible fix \r\nA possible fix I can think of right now would be creating a normal mode prefix command that would stop the last macro's execution without triggering an error, but this would require a stack for the macro execution, which I'm not sure is present.\r\n\r\nE.g. if `mg` would be the macro guard prefix, which would only stop last, not all macro execution, then `mg/pattern` would stop only the last macro upon a failing search.\r\n\r\n### Actual behaviour\r\n\r\nMacro №1 never recurses, because the guard of macro №2 stops all execution.\r\n\r\n### Expected behaviour\r\n\r\nMacro №1 recurses until its own guard triggers.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/13870/comments",
    "created_at": "2021-02-03T09:04:27Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/13870/events",
    "html_url": "https://github.com/neovim/neovim/issues/13870",
    "id": 800123997,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/13870/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4MDAxMjM5OTc=",
    "number": 13870,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/13870/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/13870/timeline",
    "title": "Recursive macro guard without triggering an error",
    "updated_at": "2025-01-17T16:00:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/13870",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/235147?v=4",
        "events_url": "https://api.github.com/users/siers/events{/privacy}",
        "followers_url": "https://api.github.com/users/siers/followers",
        "following_url": "https://api.github.com/users/siers/following{/other_user}",
        "gists_url": "https://api.github.com/users/siers/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/siers",
        "id": 235147,
        "login": "siers",
        "node_id": "MDQ6VXNlcjIzNTE0Nw==",
        "organizations_url": "https://api.github.com/users/siers/orgs",
        "received_events_url": "https://api.github.com/users/siers/received_events",
        "repos_url": "https://api.github.com/users/siers/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/siers/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/siers/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/siers",
        "user_view_type": "public"
    }
}