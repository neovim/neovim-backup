{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Neovim version (nvim -v)\n\n0.6.1\n\n### Vim (not Nvim) behaves the same?\n\nno, Vim 8.2.3995\n\n### Operating system/version\n\nDebian unstable/amd64\n\n### Terminal name/version\n\nNone (ssh localhost)\n\n### $TERM environment variable\n\ndumb\n\n### Installation\n\nDebian unstable\n\n### How to reproduce the issue\n\nssh localhost nvim --clean -e ~/.config/nvim/init.vim\r\n\" Look at the screen.\r\n:p\r\n\n\n### Expected behavior\n\nExpected rendering:\r\n\r\n```\r\n:p\r\n\" vim: set ts=2 sw=2 sts=2:\r\n```\r\n\r\nNeovim is line-buffered and does not start a UI or attempt to use complex cursor movements because `$TERM` is `dumb` and there is no TTY.  (It should not attempt to do those things even when `$TERM` is _not_ `dumb` because those are not appropriate for `ex` mode.) Like Vim (and `nvi -e`), ex mode can be used to edit a file without a TTY present.\r\n\r\nNote: `nvim -es` is not suitable for this because when there _is_ a TTY, it exits immediately instead of reading from the standard input.  Also, `vim -e` works just fine without `-s`.\r\n\r\nThis is actually difficult behavior to get right because ex mode is rarely used interactively, but it is extremely useful in an emergency or when a TTY is not available.  Vim previously did not line-buffer in this case, which I patched, and now it works as expected.\n\n### Actual behavior\n\nNotice that at the beginning, `:ntering Ex mode.  Type \"visual\" to go to Normal mode.` is printed.  That is, the message is printed and then the prompt is printed over it.  Then, after typing `:p`, the following appears on the screen:\r\n\r\n```\r\n:ptering Ex mode.  Type \"visual\" to go to Normal mode.\r\n\" vim: set ts=2 sw=2 sts=2:\r\n:\r\nEntering Ex mode.  Type \"visual\" to go to Normal mode.\r\n:p\r\n```\r\n\r\nIt appears that Neovim is trying to do some sort of redrawing of the screen or provide interactive line editing, but that's not going to work since there's no TTY.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Okay, I've looked into this some, and it appears that the difference here is that if the input is not a TTY, then Vim always sets silent mode when ex mode is set.  So the comparison in difference of behavior is between `nvim -es` and `vim -es`.  In that case, the problem appears to be that `nvim -es` _only_ works when standard input is not a TTY (the code to enable input is conditioned on a TTY being absent).\r\n\r\nSo I think the things that need to be done here are the following:\r\n\r\n* If we're in ex mode and there's no TTY, set silent mode.  Then we don't turn on the TUI and we don't try enable line editing on a dumb terminal.\r\n* Allow reading from standard input when `-es` is enabled even if it's a TTY.  If someone wants to use ex mode from the command line, we should let them.  Then the behavior is consistent.  This should also not affect batch mode invocations at all.\r\n\r\nI'm working on some patches for this and #16981 and I expect I'll have them in relatively soon.",
            "created_at": "2022-01-07T23:03:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/16982#issuecomment-1007806574",
            "id": 1007806574,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16982",
            "node_id": "IC_kwDOAPphoM48Eehu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1007806574/reactions"
            },
            "updated_at": "2022-01-07T23:03:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1007806574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/497054?v=4",
                "events_url": "https://api.github.com/users/bk2204/events{/privacy}",
                "followers_url": "https://api.github.com/users/bk2204/followers",
                "following_url": "https://api.github.com/users/bk2204/following{/other_user}",
                "gists_url": "https://api.github.com/users/bk2204/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bk2204",
                "id": 497054,
                "login": "bk2204",
                "node_id": "MDQ6VXNlcjQ5NzA1NA==",
                "organizations_url": "https://api.github.com/users/bk2204/orgs",
                "received_events_url": "https://api.github.com/users/bk2204/received_events",
                "repos_url": "https://api.github.com/users/bk2204/repos",
                "site_admin": true,
                "starred_url": "https://api.github.com/users/bk2204/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bk2204/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bk2204",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16982/comments",
    "created_at": "2022-01-07T20:17:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16982/events",
    "html_url": "https://github.com/neovim/neovim/issues/16982",
    "id": 1096639720,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "startup, shutdown, attach, detach",
            "id": 870629450,
            "name": "lifecycle",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lifecycle"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16982/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5BXWTo",
    "number": 16982,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16982/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16982/timeline",
    "title": "nvim -e attempts to redraw lines and provide line editing even though TERM is dumb",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:37:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16982",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/497054?v=4",
        "events_url": "https://api.github.com/users/bk2204/events{/privacy}",
        "followers_url": "https://api.github.com/users/bk2204/followers",
        "following_url": "https://api.github.com/users/bk2204/following{/other_user}",
        "gists_url": "https://api.github.com/users/bk2204/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bk2204",
        "id": 497054,
        "login": "bk2204",
        "node_id": "MDQ6VXNlcjQ5NzA1NA==",
        "organizations_url": "https://api.github.com/users/bk2204/orgs",
        "received_events_url": "https://api.github.com/users/bk2204/received_events",
        "repos_url": "https://api.github.com/users/bk2204/repos",
        "site_admin": true,
        "starred_url": "https://api.github.com/users/bk2204/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bk2204/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bk2204",
        "user_view_type": "public"
    }
}