{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nThe Neovim terminal ([nvim_terminal_emulator](https://neovim.io/doc/user/nvim_terminal_emulator.html)) is awesome. Combined with plugins such as [vim-slime](https://github.com/jpalardy/vim-slime), it enables powerful IDE-like functionality.\r\n\r\nI think the Nvim terminal would be even better if it allowed for a fully \"modifiable\" mode whereby the normal mode commands work inside the terminal buffer, more akin to the [Emacs terminal](https://www.gnu.org/software/emacs/manual/html_node/emacs/Terminal-emulator.html). Perhaps this could be implemented by \"separating\" the shell process from the Neovim terminal buffer in which it displayed, such that the buffer becomes more like a regular vim buffer (including normal mode commands) with the added feature that it is capable of sending anything typed into the prompt back to the shell process (automatically updating the buffer with any output).\r\n\r\nAs far as I know, the current Nvim terminal does not allow for any normal mode edits to the command prompt. For example, pressing `dw` in a terminal buffer will not work (if one has `:set modifiable`, then `dw` will work on any text *prior to the command prompt*, but not on the command prompt itself, where it is most needed). Likewise, the normal mode and terminal mode cursors are distinct, meaning that if I exit from terminal mode to normal mode, move the cursor backwards by a couple of words, and enter terminal mode again, the cursor will return to the position from which I exited terminal mode, essentially \"forgetting\" any movement that happened in normal mode. \r\n\r\nI do realize that I can activate vi mode in the terminal itself, and this is indeed my current workflow. However, this is suboptimal since it requires navigating through 2 different normal modes, the Nvim normal mode and the terminal vi normal mode, which are not exactly the same and can throw off one's muscle memory.\r\n\r\n### Expected behavior\r\n\r\nIt would be awesome if `:set modifiable` made the terminal behave more like any other Nvim buffer, with fully integrated normal and terminal modes. In other words, it should allow for arbitrary normal mode commands, including on the command prompt. So if I exit to normal mode, press `dw`, and return to terminal mode, a word should have been deleted. In addition, if I exit to normal mode, press `b`, and return to terminal mode, the cursor should now stand one word back from the original position (note this would allow effective navigation of the command prompt using plugins such as [easymotion](https://github.com/easymotion/vim-easymotion)). When in terminal mode, pressing Enter should still allow me to execute commands, and the buffer should automatically update with any new lines from the terminal output.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Linking to a similar proposal from a few years back: #8805",
            "created_at": "2023-05-16T01:41:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/23645#issuecomment-1548842646",
            "id": 1548842646,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23645",
            "node_id": "IC_kwDOAPphoM5cUXaW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1548842646/reactions"
            },
            "updated_at": "2023-05-16T01:41:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1548842646",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24964845?v=4",
                "events_url": "https://api.github.com/users/egr95/events{/privacy}",
                "followers_url": "https://api.github.com/users/egr95/followers",
                "following_url": "https://api.github.com/users/egr95/following{/other_user}",
                "gists_url": "https://api.github.com/users/egr95/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/egr95",
                "id": 24964845,
                "login": "egr95",
                "node_id": "MDQ6VXNlcjI0OTY0ODQ1",
                "organizations_url": "https://api.github.com/users/egr95/orgs",
                "received_events_url": "https://api.github.com/users/egr95/received_events",
                "repos_url": "https://api.github.com/users/egr95/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/egr95/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/egr95/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/egr95",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm still thinking the approach in https://github.com/neovim/neovim/issues/8805#issuecomment-409940181 might be best:\r\n\r\n> start with a basic adapter like:\r\n> \r\n> * copy the last line of the :terminal buffer to a new, temporary, editable floating window\r\n> * delete the shell prompt line: send `ctrl-u` or `<bs><bs><bs>...` (or `ctrl-c` in cmd.exe)\r\n>   * guess the shell prompt \"prefix\" by comparing the state after clearing the prompt line\r\n> * send the user's edited line back to the terminal job (shell)\r\n\r\n",
            "created_at": "2023-06-05T13:53:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/23645#issuecomment-1576850696",
            "id": 1576850696,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23645",
            "node_id": "IC_kwDOAPphoM5d_NUI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1576850696/reactions"
            },
            "updated_at": "2023-06-05T13:55:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1576850696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> [...] such that the buffer becomes more like a regular vim buffer (including normal mode commands)\r\n\r\nAll lines above the current prompt line are history, which is the output of commands that have been executed. So treating it as a regular Vim buffer would be a little strange since there is no point to change the log/output of sent commands. So I more like the way quoted by justinmk. (Except that I'm still thinking about whether making it a floating window would be necessary for users. For example, if I want to copy some text from an existing Vim buffer, then I cannot use `wincmd hjkl` to jump back to the floating window. `wincmd p` only works for the first jump.)\r\n\r\nRegarding editing the current (possibly multi-line) prompt for a terminal emulator, I fully support the idea.",
            "created_at": "2023-06-05T14:39:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/23645#issuecomment-1576931677",
            "id": 1576931677,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23645",
            "node_id": "IC_kwDOAPphoM5d_hFd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1576931677/reactions"
            },
            "updated_at": "2023-06-05T14:47:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1576931677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Agreed it would be much more important to enable normal-mode edits on the command prompt than on the history (the current Nvim terminal unfortunately only allowing for the latter but not the former).\r\n\r\nI am not familiar with the Nvim internals, but the approach proposed by justinmk seems very reasonable to me. Not sure if any additional tweaking would be needed in order to support multi-line commands as well.",
            "created_at": "2023-06-12T11:55:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/23645#issuecomment-1587181582",
            "id": 1587181582,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23645",
            "node_id": "IC_kwDOAPphoM5emngO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1587181582/reactions"
            },
            "updated_at": "2023-06-12T12:37:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1587181582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24964845?v=4",
                "events_url": "https://api.github.com/users/egr95/events{/privacy}",
                "followers_url": "https://api.github.com/users/egr95/followers",
                "following_url": "https://api.github.com/users/egr95/following{/other_user}",
                "gists_url": "https://api.github.com/users/egr95/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/egr95",
                "id": 24964845,
                "login": "egr95",
                "node_id": "MDQ6VXNlcjI0OTY0ODQ1",
                "organizations_url": "https://api.github.com/users/egr95/orgs",
                "received_events_url": "https://api.github.com/users/egr95/received_events",
                "repos_url": "https://api.github.com/users/egr95/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/egr95/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/egr95/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/egr95",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Adding a link to a plugin that I just came across, which provides a neat solution to some of the above issues: [term-edit.nvim](https://github.com/chomosuke/term-edit.nvim).",
            "created_at": "2023-07-23T02:59:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/23645#issuecomment-1646732268",
            "id": 1646732268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23645",
            "node_id": "IC_kwDOAPphoM5iJyPs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1646732268/reactions"
            },
            "updated_at": "2023-07-23T02:59:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1646732268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24964845?v=4",
                "events_url": "https://api.github.com/users/egr95/events{/privacy}",
                "followers_url": "https://api.github.com/users/egr95/followers",
                "following_url": "https://api.github.com/users/egr95/following{/other_user}",
                "gists_url": "https://api.github.com/users/egr95/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/egr95",
                "id": 24964845,
                "login": "egr95",
                "node_id": "MDQ6VXNlcjI0OTY0ODQ1",
                "organizations_url": "https://api.github.com/users/egr95/orgs",
                "received_events_url": "https://api.github.com/users/egr95/received_events",
                "repos_url": "https://api.github.com/users/egr95/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/egr95/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/egr95/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/egr95",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23645/comments",
    "created_at": "2023-05-16T01:08:49Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23645/events",
    "html_url": "https://github.com/neovim/neovim/issues/23645",
    "id": 1711051415,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23645/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5l_JKX",
    "number": 23645,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 14,
        "-1": 0,
        "confused": 0,
        "eyes": 5,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 19,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23645/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23645/timeline",
    "title": "Create a fully \"modifiable\" nvim terminal emulator (i.e., enable normal mode commands in terminal buffers)",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23645",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24964845?v=4",
        "events_url": "https://api.github.com/users/egr95/events{/privacy}",
        "followers_url": "https://api.github.com/users/egr95/followers",
        "following_url": "https://api.github.com/users/egr95/following{/other_user}",
        "gists_url": "https://api.github.com/users/egr95/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/egr95",
        "id": 24964845,
        "login": "egr95",
        "node_id": "MDQ6VXNlcjI0OTY0ODQ1",
        "organizations_url": "https://api.github.com/users/egr95/orgs",
        "received_events_url": "https://api.github.com/users/egr95/received_events",
        "repos_url": "https://api.github.com/users/egr95/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/egr95/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/egr95/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/egr95",
        "user_view_type": "public"
    }
}