{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I was using nvim to write a small python script.  I had another program watching the python script to run it when I wrote it to disk.  In addition, I had Syntastic installed and python support, but syntastic was temporarily set to not check (SyntasticCheckToggle off).\r\n\r\nWhen I updated the file, the script was run, but my memory was exhausted and the system hung.  After reboot, I found that not only was the file I wrote emtpy (size 0 bytes), but nvim offered me the option of recovering the file, but when I hit 'r', nvim reported that the recovery file was missing. \r\n\r\nCould this be the result of a race condition in the recovery file management where old recovery data is deleted before current recovery data is flushed to disk.  Double buffer solution?\r\n\r\n- `nvim --version`: NVIM v0.3.3\r\n- Operating system/version: Fedora 29\r\n- Terminal name/version: Gnome Terminal/TMUX\r\n- `$TERM`: tmux-256color\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\nSorry, I cannot reproduce this event, safely.\r\n\r\n### Actual behaviour\r\nRecover data is not available under some conditions that should be covered.\r\n\r\n### Expected behaviour\r\nUpdating recovery data should be atomic\r\n",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> When I updated the file, the script was run, but my memory was exhausted and the system hung. After reboot, I found that not only was the file I wrote emtpy (size 0 bytes)\r\n\r\n> Double buffer solution?\r\n\r\nWhen saving a file, Nvim uses the same \"write to temp file, then rename it\" logic as Vim. So I don't see how there could be a zero-byte file if it previously had more than zero bytes. \r\n\r\nYou could try `:set fsync` if you think this is really an issue related to Nvim. Sounds more like your filesystem got corrupted during the hang.\r\n\r\nAlso Nvim always uses fsync when `CursorHold` triggers swapfile-saving, regardless of whether the 'fsync' option is set.",
            "created_at": "2019-04-12T13:34:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-482576387",
            "id": 482576387,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjU3NjM4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482576387/reactions"
            },
            "updated_at": "2019-04-13T12:18:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482576387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hmm, that does not fit the evidence I just presented.  That is exactly what happend.  There was a swapfile, then after the crash, neovim reported it as empty.  I don't know why you are dismissing what nvim said.\r\n\r\nThe swapfile was empty, so that means nvim deleted it before ensuring it was flushed.  If nvim was using fsync on the swapfiles, which seems like the right thing to do, that could not have happened.  Do you agree?  I must have been deleted before the other file was synced.  Are you sure the order is executed?\r\n\r\nThere is no evidence that the filesystem was corrupted.  I mean, it was not corrupted.  The only file that was missing was this one.  I had 8 other nvim sessions and the only file that was lost was this one I just wrote.\r\n\r\nI don't understand your statements.  Can you help me understand?",
            "created_at": "2019-04-13T05:22:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-482777778",
            "id": 482777778,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mjc3Nzc3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482777778/reactions"
            },
            "updated_at": "2019-04-13T05:22:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482777778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/159714?v=4",
                "events_url": "https://api.github.com/users/PorcelainMouse/events{/privacy}",
                "followers_url": "https://api.github.com/users/PorcelainMouse/followers",
                "following_url": "https://api.github.com/users/PorcelainMouse/following{/other_user}",
                "gists_url": "https://api.github.com/users/PorcelainMouse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PorcelainMouse",
                "id": 159714,
                "login": "PorcelainMouse",
                "node_id": "MDQ6VXNlcjE1OTcxNA==",
                "organizations_url": "https://api.github.com/users/PorcelainMouse/orgs",
                "received_events_url": "https://api.github.com/users/PorcelainMouse/received_events",
                "repos_url": "https://api.github.com/users/PorcelainMouse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PorcelainMouse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PorcelainMouse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PorcelainMouse",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Did you try `:recover` on the file? Did it present more than one swapfile? If you delete the empty swapfile, does `:recover` show a different swapfile (e.g. with `.swo` extension instead of `.swp`)?\r\n\r\n- Did you possibly hit CTRL-C while the write was being performed?\r\n- Do you have 'backupcopy' enabled (the default)?\r\n- Do you have 'backup' enabled? \r\n- Do you have 'undofile' enabled (persistent undo)? If so, try `u` to \"undo\".\r\n- Is the file a symlink or hard link?\r\n- Does the directory have a temporary backup file in it? (ends with tilde, e.g. `foo.txt~`) This is the default behavior.\r\n\r\n",
            "created_at": "2019-04-13T11:06:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-482799550",
            "id": 482799550,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mjc5OTU1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482799550/reactions"
            },
            "updated_at": "2019-04-13T11:49:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482799550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related: https://github.com/neovim/neovim/issues/4547  https://github.com/neovim/neovim/issues/9611 https://github.com/vim/vim/issues/8879\r\n\r\nWe did not change Vim's logic related to this: https://github.com/neovim/neovim/blob/d08692a8246039b938b5645a6c01b4ff7f51671e/src/nvim/fileio.c#L2954-L2956\r\n\r\nhttps://github.com/neovim/neovim/blob/d08692a8246039b938b5645a6c01b4ff7f51671e/src/nvim/fileio.c#L3019\r\n\r\nThis patch with `nvim -u NORC foo.txt` shows that `:write` creates `foo.txt~` backup file:\r\n\r\n```diff\r\ndiff --git a/src/nvim/fileio.c b/src/nvim/fileio.c\r\nindex f662d94cb439..43c434418053 100644\r\n--- a/src/nvim/fileio.c\r\n+++ b/src/nvim/fileio.c\r\n@@ -2985,6 +2985,7 @@ nobackup:\r\n         }\r\n \r\n         if (backup != NULL) {\r\n+          ELOG(\"xxx backup=%s\", backup);\r\n           /*\r\n            * If we are not going to keep the backup file, don't\r\n            * delete an existing one, try to use another name.\r\n```\r\n\r\n> If nvim was using fsync on the swapfiles, which seems like the right thing to do, that could not have happened\r\n\r\nWhy would _not_ using fsync result in an empty file? The old contents should still be on disk. Unless...\r\n\r\n1. if the write of the new contents \"succeeded\", \r\n2. then `buf_write` deletes the temporary backup-file\r\n3. but fsync() wasn't called yet (default 'nofsync' only fsyncs on `CursorHold`)\r\n4. then the new \"successfully written\" buffer contents could be empty\r\n\r\nBut that still doesn't explain how the swapfile could be empty. `buf_write .. ml_preserve .. mf_sync` does not do any temp-then-rename procedure. So even if it wasn't fsync'd it should not be empty, the existing swapfile contents should be there.",
            "created_at": "2019-04-13T11:51:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-482802479",
            "id": 482802479,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MjgwMjQ3OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482802479/reactions"
            },
            "updated_at": "2021-09-19T15:31:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482802479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Cool, thanks all!  That really helps me understand this issue better.\r\n\r\nWhen I opened the file after the hang, I got a message from nvim about there being a recovery file and it asked me if I wanted to recover.  (Over the years, I have seen these messages many times, so I confess I do not remember the exact wording.)  But, when I selected the affirmative response to try to recover, I got another message that said the file was empty.\r\n\r\nNow, I do not see any. swp or .swo files in .local/hare/nvim/swap  *now*.  I assume that, given that nvim recognized there was an abnormal exit while editing that file, there must have been one when I first tried to recover that file.  But, it is not there, now.  When  I got the second error, I just quit and I haven't tried to re open that file until just now.  I opened the file and then tried :recover and got E305: no swap file found for <file>.\r\n\r\n> Did you try `:recover` on the file? Did it present more than one swapfile? If you delete the empty swapfile, does `:recover` show a different swapfile (e.g. with `.swo` extension instead of `.swp`)?\r\n\r\nNot before now.  I did just try and it says no swap file found.\r\n\r\n>     * Did you possibly hit CTRL-C while the write was being performed?\r\n\r\nNo, I'm pretty sure not.  I was watching python start executing and I hung very quickly.\r\n\r\n>     * Do you have 'backupcopy' enabled (the default)?\r\n\r\nNothing in my init.vim file mentions that option, so it should be default.\r\n\r\n>     * Do you have 'backup' enabled?\r\n\r\nNo.   I got this recommendation from some NVIM config guide I read  and forgot about it. Is this the problem?  My understanding is that this does not prevent the recovery files from working as normal.\r\n\r\n>     * Do you have 'undofile' enabled (persistent undo)? If so, try `u` to \"undo\".\r\n\r\nNo.  I forgot vim had that feature.  That is an idea to consider.\r\n\r\n>     * Is the file a symlink or hard link?\r\nNo.\r\n\r\n>     * Does the directory have a temporary backup file in it? (ends with tilde, e.g. `foo.txt~`) This is the default behavior.\r\n\r\nHmm, no.\r\n\r\n",
            "created_at": "2019-04-13T22:34:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-482895199",
            "id": 482895199,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Mjg5NTE5OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482895199/reactions"
            },
            "updated_at": "2019-04-13T22:34:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/482895199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/159714?v=4",
                "events_url": "https://api.github.com/users/PorcelainMouse/events{/privacy}",
                "followers_url": "https://api.github.com/users/PorcelainMouse/followers",
                "following_url": "https://api.github.com/users/PorcelainMouse/following{/other_user}",
                "gists_url": "https://api.github.com/users/PorcelainMouse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PorcelainMouse",
                "id": 159714,
                "login": "PorcelainMouse",
                "node_id": "MDQ6VXNlcjE1OTcxNA==",
                "organizations_url": "https://api.github.com/users/PorcelainMouse/orgs",
                "received_events_url": "https://api.github.com/users/PorcelainMouse/received_events",
                "repos_url": "https://api.github.com/users/PorcelainMouse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PorcelainMouse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PorcelainMouse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PorcelainMouse",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Is there any new info there that isn't already discussed above?\r\n\r\nThe disk I was on when it happened was **very** slow and old (thus unreliable) and I suspect it has a lot to do with it. In fact the crash might even be caused by the disk, in my case, though these are just wild hypothesis.\r\n\r\nSo I in an emergency I migrated to an SSD as my fix. I don't know if it will actually make a difference.",
            "created_at": "2019-12-28T17:59:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-569438610",
            "id": 569438610,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTQzODYxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/569438610/reactions"
            },
            "updated_at": "2021-09-11T13:59:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/569438610",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26231126?v=4",
                "events_url": "https://api.github.com/users/NilsIrl/events{/privacy}",
                "followers_url": "https://api.github.com/users/NilsIrl/followers",
                "following_url": "https://api.github.com/users/NilsIrl/following{/other_user}",
                "gists_url": "https://api.github.com/users/NilsIrl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/NilsIrl",
                "id": 26231126,
                "login": "NilsIrl",
                "node_id": "MDQ6VXNlcjI2MjMxMTI2",
                "organizations_url": "https://api.github.com/users/NilsIrl/orgs",
                "received_events_url": "https://api.github.com/users/NilsIrl/received_events",
                "repos_url": "https://api.github.com/users/NilsIrl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/NilsIrl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/NilsIrl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/NilsIrl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Although there is no undofile, there is still a swapfile.\r\n\r\nBut inspecting it reveals that it is mostly filled with 0s.\r\n\r\nFor anyone who wants it here it is:\r\n\r\n[swap.zip](https://github.com/neovim/neovim/files/4083106/swap.zip)\r\n\r\nBut it is almost only zero and there is no chance any kind of information is in it (apart from a bit of metadata)\r\n\r\nIt might be interesting to see how it got corrupted though.",
            "created_at": "2020-01-19T18:16:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-576030897",
            "id": 576030897,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjAzMDg5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/576030897/reactions"
            },
            "updated_at": "2021-09-11T13:59:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/576030897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26231126?v=4",
                "events_url": "https://api.github.com/users/NilsIrl/events{/privacy}",
                "followers_url": "https://api.github.com/users/NilsIrl/followers",
                "following_url": "https://api.github.com/users/NilsIrl/following{/other_user}",
                "gists_url": "https://api.github.com/users/NilsIrl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/NilsIrl",
                "id": 26231126,
                "login": "NilsIrl",
                "node_id": "MDQ6VXNlcjI2MjMxMTI2",
                "organizations_url": "https://api.github.com/users/NilsIrl/orgs",
                "received_events_url": "https://api.github.com/users/NilsIrl/received_events",
                "repos_url": "https://api.github.com/users/NilsIrl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/NilsIrl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/NilsIrl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/NilsIrl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Been having this quite regularly since I've been writing vulkan code that's causing my system fail catastrophically when I make a mistake with my awful code, every time it happens I run a pretty heavy risk of recently edited and saved files being \"emptied\". The file has certainly been saved, since it is compiled into a binary which is then, run, which crashes the system. (I suspect that chain of events is why I also do not have any swap file to recover).\r\nhttps://lwn.net/Articles/322823/\r\nCould this be related at all? I'm not familiar with any of this, but I've only been able to observe this on ext4.\r\nI'm going to see if the behavior persists at all with fsync enabled..\r\n\r\nGiven I'm having such a wonderfully easy time reproducing this, I can probably carry out any debugging that would help..",
            "created_at": "2020-06-02T11:06:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-637464642",
            "id": 637464642,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzQ2NDY0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/637464642/reactions"
            },
            "updated_at": "2020-06-02T11:08:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/637464642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3508156?v=4",
                "events_url": "https://api.github.com/users/Moggers/events{/privacy}",
                "followers_url": "https://api.github.com/users/Moggers/followers",
                "following_url": "https://api.github.com/users/Moggers/following{/other_user}",
                "gists_url": "https://api.github.com/users/Moggers/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Moggers",
                "id": 3508156,
                "login": "Moggers",
                "node_id": "MDQ6VXNlcjM1MDgxNTY=",
                "organizations_url": "https://api.github.com/users/Moggers/orgs",
                "received_events_url": "https://api.github.com/users/Moggers/received_events",
                "repos_url": "https://api.github.com/users/Moggers/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Moggers/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Moggers/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Moggers",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It is not safe with `fsync` option.\r\n\r\n```\r\n[pid 2484402] 12:57:09.714004 statx(AT_FDCWD, \".config/nvim/init.viz~\", AT_STATX_SYNC_AS_STAT, STATX_ALL, 0x7ffff05dfa40) = -1 ENOENT (No such file or directory) <0.000044>\r\n[pid 2484402] 12:57:09.714076 unlink(\".config/nvim/init.viz~\") = -1 ENOENT (No such file or directory) <0.000044>\r\n[pid 2484402] 12:57:09.714147 rename(\".config/nvim/init.vim\", \".config/nvim/init.viz~\") = 0 <0.000055>\r\n```\r\nIf it crashes here, the file is gone.\r\n```\r\n[pid 2484402] 12:57:09.714231 fsync(28) = 0 <0.001505>\r\n[pid 2484402] 12:57:09.715768 openat(AT_FDCWD, \".config/nvim/init.vim\", O_WRONLY|O_CREAT|O_TRUNC|O_CLOEXEC, 0640) = 27 <0.000078>\r\n```\r\nIf it crashes here, the file is 0 bytes.\r\n```\r\n[pid 2484402] 12:57:09.715916 write(27, \"\\\"blah\"..., 3919) = 3919 <0.000077>\r\n```\r\nIf it crashes here, the file is potentially incomplete.\r\n```\r\n[pid 2484402] 12:57:09.716053 fsync(27) = 0 <0.001525>\r\n```\r\nIf it crashes here, the file has incorrect permissions and/or ACLs.\r\n```\r\n[pid 2484402] 12:57:09.717610 statx(AT_FDCWD, \".config/nvim/init.vim\", AT_STATX_SYNC_AS_STAT, STATX_ALL, {stx_mask=STATX_ALL|STATX_MNT_ID, stx_blksize=4096, stx_attributes=0, stx_nlink=1, stx_uid=500, stx_gid=500, stx_mode=S_IFREG|0640, stx_ino=1156443083, stx_size=3919, stx_blocks=8, stx_attributes_mask=STATX_ATTR_IMMUTABLE|STATX_ATTR_APPEND|STATX_ATTR_NODUMP|STATX_ATTR_MOUNT_ROOT, stx_atime={tv_sec=1614686229, tv_nsec=714893635} /* 2021-03-02T12:57:09.714893635+0100 */, stx_btime={tv_sec=1614686229, tv_nsec=714893635} /* 2021-03-02T12:57:09.714893635+0100 */, stx_ctime={tv_sec=1614686229, tv_nsec=715893630} /* 2021-03-02T12:57:09.715893630+0100 */, stx_mtime={tv_sec=1614686229, tv_nsec=715893630} /* 2021-03-02T12:57:09.715893630+0100 */, stx_rdev_major=0, stx_rdev_minor=0, stx_dev_major=252, stx_dev_minor=0}) = 0 <0.000058>\r\n[pid 2484402] 12:57:09.717747 statx(AT_FDCWD, \".config/nvim/init.vim\", AT_STATX_SYNC_AS_STAT, STATX_ALL, {stx_mask=STATX_ALL|STATX_MNT_ID, stx_blksize=4096, stx_attributes=0, stx_nlink=1, stx_uid=500, stx_gid=500, stx_mode=S_IFREG|0640, stx_ino=1156443083, stx_size=3919, stx_blocks=8, stx_attributes_mask=STATX_ATTR_IMMUTABLE|STATX_ATTR_APPEND|STATX_ATTR_NODUMP|STATX_ATTR_MOUNT_ROOT, stx_atime={tv_sec=1614686229, tv_nsec=714893635} /* 2021-03-02T12:57:09.714893635+0100 */, stx_btime={tv_sec=1614686229, tv_nsec=714893635} /* 2021-03-02T12:57:09.714893635+0100 */, stx_ctime={tv_sec=1614686229, tv_nsec=715893630} /* 2021-03-02T12:57:09.715893630+0100 */, stx_mtime={tv_sec=1614686229, tv_nsec=715893630} /* 2021-03-02T12:57:09.715893630+0100 */, stx_rdev_major=0, stx_rdev_minor=0, stx_dev_major=252, stx_dev_minor=0}) = 0 <0.000043>\r\n[pid 2484402] 12:57:09.717860 close(27) = 0 <0.000049>\r\n```\r\nIf it crashes here, the file has potentially invalid mode.\r\n```\r\n[pid 2484402] 12:57:09.717930 chmod(\".config/nvim/init.vim\", 0100640) = 0 <0.000058>\r\n```\r\n\r\nA swap file does not help when the edited file was an important system config which is corrupted or missing on reboot.\r\n",
            "created_at": "2021-03-02T12:33:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-788876318",
            "id": 788876318,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODg3NjMxOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/788876318/reactions"
            },
            "updated_at": "2021-03-02T12:33:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/788876318",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3876865?v=4",
                "events_url": "https://api.github.com/users/Safari77/events{/privacy}",
                "followers_url": "https://api.github.com/users/Safari77/followers",
                "following_url": "https://api.github.com/users/Safari77/following{/other_user}",
                "gists_url": "https://api.github.com/users/Safari77/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Safari77",
                "id": 3876865,
                "login": "Safari77",
                "node_id": "MDQ6VXNlcjM4NzY4NjU=",
                "organizations_url": "https://api.github.com/users/Safari77/orgs",
                "received_events_url": "https://api.github.com/users/Safari77/received_events",
                "repos_url": "https://api.github.com/users/Safari77/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Safari77/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Safari77/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Safari77",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "It might be a good place to mention you can attempt recovering the files by looking for it in your block device. Some kind of combination of `grep` and `dd`. I managed to recover the file when this happened to me.\r\n\r\nRandom link that might explain it? https://spin.atomicobject.com/2010/08/18/undelete/",
            "created_at": "2021-03-30T20:00:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-810539331",
            "id": 810539331,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDUzOTMzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/810539331/reactions"
            },
            "updated_at": "2021-03-30T20:00:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/810539331",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26231126?v=4",
                "events_url": "https://api.github.com/users/NilsIrl/events{/privacy}",
                "followers_url": "https://api.github.com/users/NilsIrl/followers",
                "following_url": "https://api.github.com/users/NilsIrl/following{/other_user}",
                "gists_url": "https://api.github.com/users/NilsIrl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/NilsIrl",
                "id": 26231126,
                "login": "NilsIrl",
                "node_id": "MDQ6VXNlcjI2MjMxMTI2",
                "organizations_url": "https://api.github.com/users/NilsIrl/orgs",
                "received_events_url": "https://api.github.com/users/NilsIrl/received_events",
                "repos_url": "https://api.github.com/users/NilsIrl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/NilsIrl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/NilsIrl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/NilsIrl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi there, developer of [gocryptfs](https://github.com/rfjakob/gocryptfs) here, please trust that I know a thing or two about filesystems.\r\n\r\nI'm posting here because I received a [bug report](https://github.com/rfjakob/gocryptfs/issues/600) of data loss on gocryptfs, the user used neovim on the now-empty files, so I started digging.\r\n\r\nLet's cut straight to the root cause:\r\n\r\n> We did not change Vim's logic related to this\r\n\r\nAnd that is not true @justinmk. Here is what you changed: https://github.com/neovim/neovim/commit/9139bf81cf\r\n\r\n**What neovim does by default now is totally unsafe. You will lose the file content when your computer crashes up to 30 [4] seconds after you saved.**\r\n\r\nAnd I want to disagree slightly with @Safari77  in https://github.com/neovim/neovim/issues/9888#issuecomment-788876318 . Enabling fsync reduces the time window for data loss from 30 seconds to (usually, depends on system load) milliseconds. \r\n\r\nData Loss Mechanism\r\n----------------------\r\nWhat neovim does [1] is, assuming the file is called `foo`:\r\n\r\n1) Rename `foo` -> `foo~`\r\n2) Write content to `foo`\r\n3) Delete `foo~`\r\n\r\nThe problem is that without fsync, (2) is commited to disk 30 seconds after (3).\r\n\r\nBoth vim [2] and nano [3] do this:\r\n\r\n1) Rename `foo` -> `foo~`\r\n2) Write content to `foo`\r\n3) fsync `foo`\r\n4) Delete `foo~`\r\n\r\nThis guarantees that the data is on disk before you delete the backup copy.\r\n\r\nBut fsync takes too long\r\n---------------\r\n\r\nCommit https://github.com/neovim/neovim/commit/9139bf81cf , which disabled fsync in neovim, mentions that fsync takes too long. I see two options to fix that:\r\n\r\n1) Do steps (3) and (4) in a background thread\r\n2) Write to `foo.tmp` and rename over `foo`, dropping `foo~`\r\n\r\nReferences\r\n-----------\r\nstrace of a file save on various editors:\r\n\\[1]: [neovim](https://gist.github.com/rfjakob/61b4d5b10b1a0b30df749d12550400e3)\r\n\\[2]: [vim](https://gist.github.com/rfjakob/adc4726fef0b7108b17d2805db144090)\r\n\\[3]: [nano](https://gist.github.com/rfjakob/8b944ec7e8fbdd67b165215f81f5666c)\r\n\r\nExperiment how long it takes for a file to hit the disk on ext4:\r\n\\[4] [delayed allocation watch](https://gist.github.com/rfjakob/cbc7eae945551177b17c110b6874b8ad)",
            "created_at": "2021-09-11T10:18:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-917381701",
            "id": 917381701,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM42riJF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 11,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917381701/reactions"
            },
            "updated_at": "2021-09-11T10:18:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917381701",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/286847?v=4",
                "events_url": "https://api.github.com/users/rfjakob/events{/privacy}",
                "followers_url": "https://api.github.com/users/rfjakob/followers",
                "following_url": "https://api.github.com/users/rfjakob/following{/other_user}",
                "gists_url": "https://api.github.com/users/rfjakob/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rfjakob",
                "id": 286847,
                "login": "rfjakob",
                "node_id": "MDQ6VXNlcjI4Njg0Nw==",
                "organizations_url": "https://api.github.com/users/rfjakob/orgs",
                "received_events_url": "https://api.github.com/users/rfjakob/received_events",
                "repos_url": "https://api.github.com/users/rfjakob/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rfjakob/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rfjakob/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rfjakob",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Commit [9139bf8](https://github.com/neovim/neovim/commit/9139bf81cf) , which disabled fsync in neovim, mentions that fsync takes too long. I see two options to fix that:\r\n> \r\n> 1. Do steps (3) and (4) in a background thread\r\n> 2. Write to `foo.tmp` and rename over `foo`, dropping `foo~`\r\n\r\n(2) sounds good. Thanks, @rfjakob\r\n\r\n> > We did not change Vim's logic related to this\r\n> \r\n> And that is not true @justinmk. Here is what you changed: [9139bf8](https://github.com/neovim/neovim/commit/9139bf81cf)\r\n> \r\n> **What neovim does by default now is totally unsafe.**\r\n\r\n\r\nSee https://github.com/neovim/neovim/issues/9888#issuecomment-482802479 for my reasoning:\r\n\r\n> But that still doesn't explain how the swapfile could be empty. `buf_write .. ml_preserve .. mf_sync` does not do any temp-then-rename procedure. So even if it wasn't fsync'd it should not be empty, the existing swapfile contents should be there.\r\n\r\n",
            "created_at": "2021-09-11T11:07:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-917387904",
            "id": 917387904,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM42rjqA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917387904/reactions"
            },
            "updated_at": "2021-09-11T13:55:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917387904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ok! The sequence could look like this:\r\n\r\n1) Write `foo.tmp`\r\n2) Rename `foo.tmp` -> `foo`\r\n\r\nOn ext4 and Btrfs, this guarantees that `foo` contains either the old or the new data (but it will not be empty). And it also causes the new data to be flushed to disk \"quickly\" (immediately on Btrfs, [<1 second on ext4](https://gist.github.com/rfjakob/cbc7eae945551177b17c110b6874b8ad#file-delalloc_delay-txt-L82)).\r\n\r\nWhen the fsync option is active, you could add steps 3 and 4:\r\n\r\n3) fsync `foo`\r\n4) fsync the directory that contains `foo`\r\n\r\nThis guarantees that the new data is on disk immediately on all filesystems (xfs is notorious for delaying writes as long as it can to squeeze out a few % more performance, but fsync is not negotiable)",
            "created_at": "2021-09-11T12:48:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-917401933",
            "id": 917401933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM42rnFN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917401933/reactions"
            },
            "updated_at": "2021-09-11T12:48:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917401933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/286847?v=4",
                "events_url": "https://api.github.com/users/rfjakob/events{/privacy}",
                "followers_url": "https://api.github.com/users/rfjakob/followers",
                "following_url": "https://api.github.com/users/rfjakob/following{/other_user}",
                "gists_url": "https://api.github.com/users/rfjakob/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rfjakob",
                "id": 286847,
                "login": "rfjakob",
                "node_id": "MDQ6VXNlcjI4Njg0Nw==",
                "organizations_url": "https://api.github.com/users/rfjakob/orgs",
                "received_events_url": "https://api.github.com/users/rfjakob/received_events",
                "repos_url": "https://api.github.com/users/rfjakob/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rfjakob/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rfjakob/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rfjakob",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "btw why do you mention writing to `foo.tmp` instead of `foo~` ? \r\n\r\n> 1. Write `foo.tmp`\r\n> 2. Rename `foo.tmp` -> `foo`\r\n> \r\n> On ext4 and Btrfs, this guarantees that `foo` contains either the old or the new data (but it will not be empty).\r\n\r\nInteresting. Is that because the filesystem \"queues\" the operations?\r\n\r\n> And it also causes the new data to be flushed to disk \"quickly\" (immediately on Btrfs, [<1 second on ext4](https://gist.github.com/rfjakob/cbc7eae945551177b17c110b6874b8ad#file-delalloc_delay-txt-L82)).\r\n\r\nBut is that an implicit fsync? Or what's the difference?",
            "created_at": "2021-09-11T13:53:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-917411400",
            "id": 917411400,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM42rpZI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917411400/reactions"
            },
            "updated_at": "2021-09-11T14:00:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917411400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> btw why do you mention writing to foo.tmp instead of foo~ ?\r\n\r\nAs far as I see, `foo~` is the backup copy of the old content. It may be confusing to use the same name for the new content, so I chose `foo.tmp`. Maybe `foo.new` or something would be even better.\r\n\r\nAbout how the rename-overwrite case is different than fsync, the ext4 docs give some details\r\n(from https://manned.org/ext4.5). auto_da_alloc is the default, but it was not there from the start, and people lost lots of data, so Theodore Ts’o had to add it, reluctantly. You can feel how he does not like in the docs: \r\n```\r\n       auto_da_alloc|noauto_da_alloc\r\n              Many broken applications don't use fsync() when replacing existing\r\n              files via patterns such as\r\n\r\n              fd = open(\"foo.new\")/write(fd,...)/close(fd)/ rename(\"foo.new\",\r\n              \"foo\")\r\n\r\n              or worse yet\r\n\r\n              fd = open(\"foo\", O_TRUNC)/write(fd,...)/close(fd).\r\n\r\n              If auto_da_alloc is enabled, ext4 will detect the replace-via-\r\n              rename and replace-via-truncate patterns and force that any\r\n              delayed allocation blocks are allocated such that at the next\r\n              journal commit, in the default data=ordered mode, the data blocks\r\n              of the new file are forced to disk before the rename() operation\r\n              is committed.  This provides roughly the same level of guarantees\r\n              as ext3, and avoids the \"zero-length\" problem that can happen when\r\n              a system crashes before the delayed allocation blocks are forced\r\n              to disk.\r\n```\r\n\r\nBtrfs has it documented here: https://btrfs.wiki.kernel.org/index.php/FAQ#What_are_the_crash_guarantees_of_overwrite-by-rename.3F\r\n\r\nI was curious about how long the rename-overwrite takes and wrote https://github.com/rfjakob/save-a-file , and it does seem to be a lot faster than fsync, so it is NOT an implicit fsync. It's a weaker guarantee.",
            "created_at": "2021-09-11T18:47:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-917455408",
            "id": 917455408,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM42r0Iw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917455408/reactions"
            },
            "updated_at": "2021-09-11T18:47:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917455408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/286847?v=4",
                "events_url": "https://api.github.com/users/rfjakob/events{/privacy}",
                "followers_url": "https://api.github.com/users/rfjakob/followers",
                "following_url": "https://api.github.com/users/rfjakob/following{/other_user}",
                "gists_url": "https://api.github.com/users/rfjakob/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rfjakob",
                "id": 286847,
                "login": "rfjakob",
                "node_id": "MDQ6VXNlcjI4Njg0Nw==",
                "organizations_url": "https://api.github.com/users/rfjakob/orgs",
                "received_events_url": "https://api.github.com/users/rfjakob/received_events",
                "repos_url": "https://api.github.com/users/rfjakob/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rfjakob/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rfjakob/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rfjakob",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "PS: Thinking again about it, the fsync-enabled case should rather be in this order:\r\n\r\n1) Write `foo.tmp`\r\n2) fsync `foo.tmp`\r\n3) Rename `foo.tmp` -> `foo`\r\n4) fsync the directory that contains `foo`",
            "created_at": "2021-09-11T18:54:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-917456429",
            "id": 917456429,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM42r0Yt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917456429/reactions"
            },
            "updated_at": "2021-09-11T18:54:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/917456429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/286847?v=4",
                "events_url": "https://api.github.com/users/rfjakob/events{/privacy}",
                "followers_url": "https://api.github.com/users/rfjakob/followers",
                "following_url": "https://api.github.com/users/rfjakob/following{/other_user}",
                "gists_url": "https://api.github.com/users/rfjakob/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rfjakob",
                "id": 286847,
                "login": "rfjakob",
                "node_id": "MDQ6VXNlcjI4Njg0Nw==",
                "organizations_url": "https://api.github.com/users/rfjakob/orgs",
                "received_events_url": "https://api.github.com/users/rfjakob/received_events",
                "repos_url": "https://api.github.com/users/rfjakob/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rfjakob/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rfjakob/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rfjakob",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The point here is to say that 4 years and half ago, a severe bug inducing important data loss has been identified. A really simple mitigation of that bug has been described : changing the default of an existing option. If I understand correctly, this will only impact performances and might be negligible on most modern systems. \r\n\r\nWorst of all, the default was good before 2018 and was explicitly changed, introducing this bug. The move has been described by @rfjakob as \"totally unsafe\".\r\n\r\nYet, 4 years and a half later, absolutely nothing has changed and there’s not even a discussion about changing (lot of comments seem to be deleted).\r\n\r\nIt’s is quite perplexing because it is a really severe bug but a lot of affected people might not realize it is a neovim bug (and will not be there).  To have experienced it myself at couple of times (using each time my own comment to recover my data), it is not the kind of bug you experience, screenshot and discuss lightly. You don’t wait to be affected to care about it. People who ends in this thread are probably really angry or stressed because they spent a considerable amount of time wondering why a given file is empty. In fact, it could even render some systems unusable: imagine a sysadmin modifying a config file and rebooting immediately, realizing that the system doesn’t boot anymore or doesn’t connect to the network. How could he ever suspect neovim?\r\n\r\nAt some point, this starts to become more than a simple dataloss issue (which is already severe in itself), it becomes a problem of trust toward the project. If an my editor cannot guarantee that my data is safe, I’m highly concerned. But if the developers of the editors are aware they introduced the bug, are aware of the gravity of the problem, are aware that it is a simple revert but it looks like they don’t care at all for multiple years, how can I even trust them now or even in the future ?",
            "created_at": "2023-11-13T21:55:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-1809193839",
            "id": 1809193839,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM5r1htv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809193839/reactions"
            },
            "updated_at": "2023-11-14T11:05:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809193839",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1233155?v=4",
                "events_url": "https://api.github.com/users/ploum/events{/privacy}",
                "followers_url": "https://api.github.com/users/ploum/followers",
                "following_url": "https://api.github.com/users/ploum/following{/other_user}",
                "gists_url": "https://api.github.com/users/ploum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ploum",
                "id": 1233155,
                "login": "ploum",
                "node_id": "MDQ6VXNlcjEyMzMxNTU=",
                "organizations_url": "https://api.github.com/users/ploum/orgs",
                "received_events_url": "https://api.github.com/users/ploum/received_events",
                "repos_url": "https://api.github.com/users/ploum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ploum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ploum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ploum",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Complaints are cheap; PRs move things along. Consider being the change you want to see. (And if this free project doesn't suit your needs, pick another one. Pointing out issues is fine; turning it into a moral responsibility is not.)",
            "created_at": "2023-11-13T22:11:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-1809217020",
            "id": 1809217020,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM5r1nX8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809217020/reactions"
            },
            "updated_at": "2023-11-14T11:05:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809217020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> how can I even trust them now or even in the future ?\r\n\r\nI dropped the ball here. I was expecting to find a better solution here and never got around to it. I used Nvim on embedded devices that often had hard shutdowns and I never saw this issue. But [this analysis](https://github.com/neovim/neovim/issues/9888#issuecomment-917381701) added weight and gave a path forward.\r\n\r\nNow please keep comments useful, instead of repeating the same influencer tweet or whatever you're doing.",
            "created_at": "2023-11-13T23:35:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-1809302990",
            "id": 1809302990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM5r18XO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809302990/reactions"
            },
            "updated_at": "2023-11-13T23:43:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809302990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I’m sorry for the harsh tone. It was not needed.",
            "created_at": "2023-11-13T23:44:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-1809310630",
            "id": 1809310630,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM5r1-Om",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809310630/reactions"
            },
            "updated_at": "2023-11-13T23:44:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809310630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1233155?v=4",
                "events_url": "https://api.github.com/users/ploum/events{/privacy}",
                "followers_url": "https://api.github.com/users/ploum/followers",
                "following_url": "https://api.github.com/users/ploum/following{/other_user}",
                "gists_url": "https://api.github.com/users/ploum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ploum",
                "id": 1233155,
                "login": "ploum",
                "node_id": "MDQ6VXNlcjEyMzMxNTU=",
                "organizations_url": "https://api.github.com/users/ploum/orgs",
                "received_events_url": "https://api.github.com/users/ploum/received_events",
                "repos_url": "https://api.github.com/users/ploum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ploum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ploum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ploum",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Status\r\n\r\n- 'fsync' is now enabled by default: https://github.com/neovim/neovim/pull/26034\r\n    - The original motivation and reasoning for _disabling_ 'fsync' is here: https://github.com/neovim/neovim/pull/8304\r\n- Keeping this issue open to track [improvements](https://github.com/neovim/neovim/issues/9888#issuecomment-917381701) for the 'nofsync' case.\r\n    - Users still report 1s delay with 'fsync': https://github.com/neovim/neovim/pull/26034#issuecomment-1899635895\r\n\r\nDo not leave comments here unless you have new, useful information. I've deleted comments so that the actual discussion above can be found.",
            "created_at": "2023-11-14T11:00:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/9888#issuecomment-1809990028",
            "id": 1809990028,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9888",
            "node_id": "IC_kwDOAPphoM5r4kGM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809990028/reactions"
            },
            "updated_at": "2024-02-19T00:31:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809990028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 21,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/9888/comments",
    "created_at": "2019-04-12T05:35:34Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/9888/events",
    "html_url": "https://github.com/neovim/neovim/issues/9888",
    "id": 432394801,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 114040313,
            "name": "robustness",
            "node_id": "MDU6TGFiZWwxMTQwNDAzMTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/robustness"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "High-risk, potential for delicate/cascading effects",
            "id": 407247013,
            "name": "complexity:high",
            "node_id": "MDU6TGFiZWw0MDcyNDcwMTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:high"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "",
            "id": 606691254,
            "name": "has:plan",
            "node_id": "MDU6TGFiZWw2MDY2OTEyNTQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:plan"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/9888/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU0MzIzOTQ4MDE=",
    "number": 9888,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 9,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 9,
        "url": "https://api.github.com/repos/neovim/neovim/issues/9888/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/9888/timeline",
    "title": "'nofsync' may lose data (empty file + swapfile) after system crash",
    "updated_at": "2025-01-19T11:26:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/9888",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/159714?v=4",
        "events_url": "https://api.github.com/users/PorcelainMouse/events{/privacy}",
        "followers_url": "https://api.github.com/users/PorcelainMouse/followers",
        "following_url": "https://api.github.com/users/PorcelainMouse/following{/other_user}",
        "gists_url": "https://api.github.com/users/PorcelainMouse/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/PorcelainMouse",
        "id": 159714,
        "login": "PorcelainMouse",
        "node_id": "MDQ6VXNlcjE1OTcxNA==",
        "organizations_url": "https://api.github.com/users/PorcelainMouse/orgs",
        "received_events_url": "https://api.github.com/users/PorcelainMouse/received_events",
        "repos_url": "https://api.github.com/users/PorcelainMouse/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/PorcelainMouse/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PorcelainMouse/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/PorcelainMouse",
        "user_view_type": "public"
    }
}