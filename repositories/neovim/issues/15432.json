{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\n\nI don't think so.\n\n### Feature description\n\nHi there.\n\nI've been following the issues segment for quite a while, and even posted a few requests myself: [here](https://github.com/neovim/neovim/issues/11924#issuecomment-886088202), [here](https://github.com/neovim/neovim/issues/9342#issuecomment-894888992), and [here](https://github.com/neovim/neovim/issues/1435#issuecomment-670837497).\n\nThe thing is, I'm building a collection of plug-ins and since they are growing in number, I fear I won't be able to move forward with some ideas because of some limitations.\n\n# Limitation number 1 (global tabline)\n\nThis limitation only affects the looks in one the my plugins, but it may be important in the future for other ones. The plugin is called [Zoom](https://github.com/nvpm/nvpm) and it's nothing more than a distraction-free implementation. The thing is, Zoom gives support to another one of my plugins now call [nvpm](https://gitlab.com/nvpm/nvpm), which is gonna be broken down into more plugins soon. \n\nThe problem itself is regarding the fact that the tabline is unique to all buffers. The \"problem\" can be seen in the following screenshot:\n\n![zoom](https://user-images.githubusercontent.com/7888397/130158793-09723513-77de-4e2b-a040-ff5e5744abf0.png)\n\nYou can see that the tabline occupies the whole width of the screen, whereas the statusline is only local to the buffer in the middle. \n\nSolution I want: I want to be able to set the tabline to apear only on the focuses buffer (the one in the middle in the shot above). Moreover, the command-line is also global, and it would be perfect to have it occupy only the width of the focused buffer, right below the statusline.\n\n# Limitation number 2 (statusline on every buffer)\n\nI've described [here](https://github.com/neovim/neovim/issues/1435#issuecomment-670837497) that this would be perfect for a future implementation of splits, in my plugin now called nvpm. This plugin will be split into others, amongst them there will be one called `line`, which would then need this feature.\n\nSolution I want: I would love to be able to have more control over where to draw the statusline. For example, I'd like to set it in a specific position and also to set it's width. This way I would handle splits better in those plugins. It's a feature that I really want to implement, but I already know it's gonna be impossible.\n\nThis problem also affects the [zoom](https://github.com/nvpm/nvpm), because I'd also like to have the statuslines from the padding buffers to be canceled, because they consume part of the usable width and height. For now I'm only handling their highlighting to make them appear to have vanished, but they're still there.\n\n# Limitation number 3 (no mouse handling for statusline)\n\nI only knew this was an issue when I saw [this](https://github.com/neovim/neovim/issues/11924), and I'm not sure if it is already possible.\n\nThis would also improve and increase the use cases of some of my plugins. I'm preparing to implement a mouse event handling, and I fear to have this as a problem.\n\nSolution I want: to have mouse support for MouseClick, MouseScroll, and MouseHover (if possible) for both tab and status lines.\n\nI've thought of this use case to be in such a way that you gonna be able to do a lot just by moving the mouse around.\n\nWell, I hope I was clear enough. I also understand that there is currently 1.2k opened issues, so I'll definitely understand if I never get a reply for this. In any event, I appreciate any efforts on making this real.\n\nwith regards,\nItamar Soares\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Solution I want: to have mouse support for MouseClick, MouseScroll, and MouseHover (if possible) for both tab and status lines.\r\n\r\nNvim tabline supports mouse clicks: https://github.com/neovim/neovim/pull/3871 , via the `%@Func@` format. You found https://github.com/neovim/neovim/issues/11924 so I guess you know already :)\r\n\r\n`:help 'statusline'`  :\r\n```\r\n\t@ N   For 'tabline': start of execute function label. Use %X or %T to \r\n\t      end the label, e.g.: %10@SwitchBuffer@foo.c%X.  Clicking this \r\n\t      label runs specified function: in the example when clicking once \r\n\t      using left mouse button on \"foo.c\" \"SwitchBuffer(10, 1, 'l', \r\n\t      '    ')\" expression will be run.  Function receives the \r\n```\r\n\r\n> Moreover, the command-line is also global, and it would be perfect to have it occupy only the width of the focused buffer, right below the statusline.\r\n\r\nMaybe could be hacked with clever highlights. \r\n\r\nIf you want full control over the statusline, the current answer is to implement a custom UI. \r\n\r\n### Proposal\r\n\r\nInstead of adding more features to 'statusline',  it could optionally be driven by a user-defined floating window/buffer.",
            "created_at": "2021-08-20T01:56:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/15432#issuecomment-902370797",
            "id": 902370797,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15432",
            "node_id": "IC_kwDOAPphoM41yRXt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/902370797/reactions"
            },
            "updated_at": "2021-08-20T02:12:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/902370797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": ">You found #11924 so I guess you know already :)\n\nYeah I found. Since it still doesn't have support for the statusline as well, I'm afraid the use case I intend would be incomplete, so I won't even bother to implement it for now.\n\n>If you want full control over the statusline, the current answer is to implement a custom UI.\n\nI was thinking the same thing, but I was in denial. I couldn't believe I was gonna have to do this. But yeah, good point.\n\n>Proposal\nInstead of adding more features to 'statusline', it could optionally be driven by a user-defined floating window/buffer.\n\nYeah, I heard about those floating window/buffers somewhere, but I never really found it in the docs. Do you know where?\n\nBy the way - making use of this message - here is a shot of what I meant for the local tabline:\n\n![zoom2](https://user-images.githubusercontent.com/7888397/130173693-f344810c-2310-445d-ac19-c8f81428b3df.png)\n\nI'm faking a zoom mode with tmux panes around the pane in the middle. That's the same strategy I use in the [zoom](https://github.com/nvpm/nvpm) plug-in, but with Vim buffers instead of tmux panes.",
            "created_at": "2021-08-20T03:20:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/15432#issuecomment-902400486",
            "id": 902400486,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15432",
            "node_id": "IC_kwDOAPphoM41yYnm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/902400486/reactions"
            },
            "updated_at": "2025-04-01T03:36:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/902400486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7888397?v=4",
                "events_url": "https://api.github.com/users/iasj/events{/privacy}",
                "followers_url": "https://api.github.com/users/iasj/followers",
                "following_url": "https://api.github.com/users/iasj/following{/other_user}",
                "gists_url": "https://api.github.com/users/iasj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iasj",
                "id": 7888397,
                "login": "iasj",
                "node_id": "MDQ6VXNlcjc4ODgzOTc=",
                "organizations_url": "https://api.github.com/users/iasj/orgs",
                "received_events_url": "https://api.github.com/users/iasj/received_events",
                "repos_url": "https://api.github.com/users/iasj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iasj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iasj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iasj",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": ">Yeah, I heard about those floating window/buffers somewhere, but I never really found it in the docs. Do you know where?\r\n\r\nI think I found a [great tutorial on the matter](https://www.statox.fr/posts/2021/03/breaking_habits_floating_window/). No wonder I haven't found in the docs, for I was looking for tutorials using the string `:help float<tab>`. I'll definitely look into this.",
            "created_at": "2021-08-20T17:32:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/15432#issuecomment-902847883",
            "id": 902847883,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15432",
            "node_id": "IC_kwDOAPphoM410F2L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/902847883/reactions"
            },
            "updated_at": "2021-08-20T17:32:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/902847883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7888397?v=4",
                "events_url": "https://api.github.com/users/iasj/events{/privacy}",
                "followers_url": "https://api.github.com/users/iasj/followers",
                "following_url": "https://api.github.com/users/iasj/following{/other_user}",
                "gists_url": "https://api.github.com/users/iasj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iasj",
                "id": 7888397,
                "login": "iasj",
                "node_id": "MDQ6VXNlcjc4ODgzOTc=",
                "organizations_url": "https://api.github.com/users/iasj/orgs",
                "received_events_url": "https://api.github.com/users/iasj/received_events",
                "repos_url": "https://api.github.com/users/iasj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iasj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iasj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iasj",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": ">Instead of adding more features to 'statusline', it could optionally be driven by a user-defined floating window/buffer.\r\n\r\nDoesn't floating windows obscure/hide part of the buffer/window you have focused? Even if it just one line, it can get messy if you can not get to the bottom of your file",
            "created_at": "2022-05-16T09:57:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/15432#issuecomment-1127468169",
            "id": 1127468169,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15432",
            "node_id": "IC_kwDOAPphoM5DM8yJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1127468169/reactions"
            },
            "updated_at": "2022-05-16T09:58:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1127468169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2270425?v=4",
                "events_url": "https://api.github.com/users/danielo515/events{/privacy}",
                "followers_url": "https://api.github.com/users/danielo515/followers",
                "following_url": "https://api.github.com/users/danielo515/following{/other_user}",
                "gists_url": "https://api.github.com/users/danielo515/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/danielo515",
                "id": 2270425,
                "login": "danielo515",
                "node_id": "MDQ6VXNlcjIyNzA0MjU=",
                "organizations_url": "https://api.github.com/users/danielo515/orgs",
                "received_events_url": "https://api.github.com/users/danielo515/received_events",
                "repos_url": "https://api.github.com/users/danielo515/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/danielo515/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/danielo515/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/danielo515",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@danielo515 yes, we would need a new positioning mode to properly allocate space from the parent window with no occlusion",
            "created_at": "2022-05-16T10:03:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/15432#issuecomment-1127473531",
            "id": 1127473531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15432",
            "node_id": "IC_kwDOAPphoM5DM-F7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1127473531/reactions"
            },
            "updated_at": "2022-05-16T10:03:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1127473531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @danielo515 yes, we would need a new positioning mode to properly allocate space from the parent window with no occlusion\r\n\r\nThat sounds very interesting. If you allow that, that will open the possibility to have \"metadata/child\" windows in any position right? That may be awesome. Will those windows be attached to the parent one? Meaning I can move the parent window and they will move with it,or close the parent window and that will close the attached windows?\r\n",
            "created_at": "2022-05-17T06:29:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/15432#issuecomment-1128465882",
            "id": 1128465882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15432",
            "node_id": "IC_kwDOAPphoM5DQwXa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1128465882/reactions"
            },
            "updated_at": "2022-05-17T06:29:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1128465882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2270425?v=4",
                "events_url": "https://api.github.com/users/danielo515/events{/privacy}",
                "followers_url": "https://api.github.com/users/danielo515/followers",
                "following_url": "https://api.github.com/users/danielo515/following{/other_user}",
                "gists_url": "https://api.github.com/users/danielo515/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/danielo515",
                "id": 2270425,
                "login": "danielo515",
                "node_id": "MDQ6VXNlcjIyNzA0MjU=",
                "organizations_url": "https://api.github.com/users/danielo515/orgs",
                "received_events_url": "https://api.github.com/users/danielo515/received_events",
                "repos_url": "https://api.github.com/users/danielo515/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/danielo515/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/danielo515/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/danielo515",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15432/comments",
    "created_at": "2021-08-20T00:06:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/15432/events",
    "html_url": "https://github.com/neovim/neovim/issues/15432",
    "id": 975141519,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows, popups, hover",
            "id": 3234818716,
            "name": "floatwin",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/floatwin"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "tabline, winbar, statuscolumn",
            "id": 3385615828,
            "name": "statusline",
            "node_id": "LA_kwDOAPphoM7JzGXU",
            "url": "https://api.github.com/repos/neovim/neovim/labels/statusline"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/15432/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 708,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 636,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-04-07T10:13:12Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU5NzUxNDE1MTk=",
    "number": 15432,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 5,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/15432/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/15432/timeline",
    "title": "UI: more control over statusline, tabline",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-04-01T03:36:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/15432",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7888397?v=4",
        "events_url": "https://api.github.com/users/iasj/events{/privacy}",
        "followers_url": "https://api.github.com/users/iasj/followers",
        "following_url": "https://api.github.com/users/iasj/following{/other_user}",
        "gists_url": "https://api.github.com/users/iasj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/iasj",
        "id": 7888397,
        "login": "iasj",
        "node_id": "MDQ6VXNlcjc4ODgzOTc=",
        "organizations_url": "https://api.github.com/users/iasj/orgs",
        "received_events_url": "https://api.github.com/users/iasj/received_events",
        "repos_url": "https://api.github.com/users/iasj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/iasj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/iasj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/iasj",
        "user_view_type": "public"
    }
}