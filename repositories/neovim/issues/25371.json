{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nConsider the following Go code where `foo` takes two parameters\r\n\r\n**NOTE**: This is relevant to other LSPs as well.\r\n\r\n```go\r\npackage main\r\n\r\nfunc main() {\r\n\tfoo(\"hello\")\r\n\t//         ^ There is no way for me to visually recognize that the error is from here\r\n}\r\n\r\nfunc foo(a, b string) {}\r\n```\r\n\r\nSo I think this is related to the fact that in the output of `vim.diagnostic.get()`, which is included at the bottom of this textbox, `lnum` equals `end_lnum` and `col` equals `end_col`. Therefore the highlighting is omitted.\r\n\r\n```\r\n{ {\r\n    bufnr = 1,\r\n    code = \"WrongArgCount\",\r\n    col = 12,\r\n    end_col = 12,\r\n    end_lnum = 3,\r\n    lnum = 3,\r\n    message = \"not enough arguments in call to foo\\n\\thave (string)\\n\\twant (string, string)\",\r\n    namespace = 7,\r\n    severity = 1,\r\n    source = \"compiler\",\r\n    user_data = {\r\n      lsp = {\r\n        code = \"WrongArgCount\",\r\n        codeDescription = {\r\n          href = \"https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#WrongArgCount\"\r\n        }\r\n      }\r\n    }\r\n  } }\r\n```\n\n### Steps to reproduce\n\n1. Setup a language server with [nvim-lspconfig](https://github.com/neovim/nvim-lspconfig).\r\n2. Make an error that is only applied to a single character (e.g. missing function parameter).\r\n\r\n```lua\r\nfor name, url in pairs{\r\n  -- ADD PLUGINS _NECESSARY_ TO REPRODUCE THE ISSUE, e.g:\r\n  -- some_plugin = 'https://github.com/author/plugin.nvim'\r\n  lspconfig = \"https://github.com/neovim/nvim-lspconfig\",\r\n} do\r\n  local install_path = vim.fn.fnamemodify('nvim_issue/'..name, ':p')\r\n  if vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\r\n  end\r\n  vim.opt.runtimepath:append(install_path)\r\nend\r\n\r\n-- ADD INIT.LUA SETTINGS THAT IS _NECESSARY_ FOR REPRODUCING THE ISSUE\r\n\r\n-- IMPORTANT: you need to have gopls installed\r\n-- NOTE: it is also possible with other language servers\r\nrequire('lspconfig').gopls.setup({})\r\n```\n\n### Expected behavior\n\nI expect that parenthesis to be highlighted with `DiagnosticUnderlineError` like other LSP errors.\n\n### Neovim version (nvim -v)\n\nv0.10.0-dev+1187-g5331d5772\n\n### Vim (not Nvim) behaves the same?\n\nvim does not have diagnostics\n\n### Operating system/version\n\nFedora Linux 38 (Workstation Edition)\n\n### Terminal name/version\n\nkitty 0.29.2\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nagriffis/neovim-nightly dnf copr plugin",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "this should work\r\n\r\n```diff\r\ndiff --git a/runtime/lua/vim/diagnostic.lua b/runtime/lua/vim/diagnostic.lua\r\nindex b8d3906b7..362e206b8 100644\r\n--- a/runtime/lua/vim/diagnostic.lua\r\n+++ b/runtime/lua/vim/diagnostic.lua\r\n@@ -961,7 +961,10 @@ M.handlers.underline = {\r\n         underline_ns,\r\n         higroup,\r\n         { diagnostic.lnum, diagnostic.col },\r\n-        { diagnostic.end_lnum, diagnostic.end_col },\r\n+        {\r\n+          diagnostic.end_lnum,\r\n+          diagnostic.end_col == diagnostic.col and diagnostic.end_col + 1 or diagnostic.end_col,\r\n+        },\r\n         { priority = vim.highlight.priorities.diagnostics }\r\n       )\r\n     end\r\n```",
            "created_at": "2023-09-26T10:54:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/25371#issuecomment-1735298435",
            "id": 1735298435,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25371",
            "node_id": "IC_kwDOAPphoM5nbo2D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1735298435/reactions"
            },
            "updated_at": "2023-09-26T10:54:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1735298435",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This sounds like an issue with the language server. It looks like it's reporting start == end. At least on a quick glance the code that converts the LSP result looks correct. We can't just guess a different boundary ",
            "created_at": "2023-09-26T17:16:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/25371#issuecomment-1735963675",
            "id": 1735963675,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25371",
            "node_id": "IC_kwDOAPphoM5neLQb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1735963675/reactions"
            },
            "updated_at": "2023-09-26T17:17:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1735963675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I guess it is a problem with the `vim.diagnostic` API.\r\n\r\nAccording to the docs of `diagnostic-structure`, the only required keys are `lnum`, `col`, and `message`. So one would expect running the following code would highlight a single character:\r\n\r\n```lua\r\nlocal ns = vim.api.nvim_create_namespace(\"example\")\r\n\r\nvim.diagnostic.set(ns, 0, {\r\n    {\r\n        lnum = 26,\r\n        col = 5,\r\n        message = \"Hello\",\r\n    }\r\n}, {})\r\n```\r\n\r\nHowever, it doesn't. To get it working though, you need to add the `end_col` key and set it to `col+1`, which is `6` in this case. (btw the default value for `end_col` is whatever `col` happens to be)\r\n\r\nSo I think the API should check if `col` and `end_col` are the same and if so, change the indices properly. (something like what @glepnir mentioned)",
            "created_at": "2023-09-28T10:03:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/25371#issuecomment-1738852014",
            "id": 1738852014,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25371",
            "node_id": "IC_kwDOAPphoM5npMau",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1738852014/reactions"
            },
            "updated_at": "2023-09-28T10:03:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1738852014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/91974155?v=4",
                "events_url": "https://api.github.com/users/utilyre/events{/privacy}",
                "followers_url": "https://api.github.com/users/utilyre/followers",
                "following_url": "https://api.github.com/users/utilyre/following{/other_user}",
                "gists_url": "https://api.github.com/users/utilyre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/utilyre",
                "id": 91974155,
                "login": "utilyre",
                "node_id": "U_kgDOBXtqCw",
                "organizations_url": "https://api.github.com/users/utilyre/orgs",
                "received_events_url": "https://api.github.com/users/utilyre/received_events",
                "repos_url": "https://api.github.com/users/utilyre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/utilyre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/utilyre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/utilyre",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25371/comments",
    "created_at": "2023-09-26T09:04:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25371/events",
    "html_url": "https://github.com/neovim/neovim/issues/25371",
    "id": 1913047254,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25371/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5yBsjW",
    "number": 25371,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25371/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25371/timeline",
    "title": "`DiagnosticUnderline*` highlights don't show up when LSP sets `col`/`lnum` and `end_col`/`end_lnum` the same",
    "updated_at": "2025-01-19T11:32:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25371",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/91974155?v=4",
        "events_url": "https://api.github.com/users/utilyre/events{/privacy}",
        "followers_url": "https://api.github.com/users/utilyre/followers",
        "following_url": "https://api.github.com/users/utilyre/following{/other_user}",
        "gists_url": "https://api.github.com/users/utilyre/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/utilyre",
        "id": 91974155,
        "login": "utilyre",
        "node_id": "U_kgDOBXtqCw",
        "organizations_url": "https://api.github.com/users/utilyre/orgs",
        "received_events_url": "https://api.github.com/users/utilyre/received_events",
        "repos_url": "https://api.github.com/users/utilyre/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/utilyre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/utilyre/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/utilyre",
        "user_view_type": "public"
    }
}