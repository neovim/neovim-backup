{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n### Summary\n\nAfter updating to Flutter **3.35.3** (Dart **3.9.2**), I started encountering persistent LSP errors from the Dart language server (`dartls`) when editing Dart files in Neovim using the built-in LSP client.\n\nThe errors appear when:\n- Creating a new Dart file and typing (triggering LSP snippet completions),\n- Editing an existing file near the end (triggering LSP snippet completions).\n\n```\nLSP[dartls] An error occurred while handling textDocument/didChange notification\n```\n\nThis happens even in a minimal Neovim setup using only `nvim-lspconfig`.\n\n[Original issue in dart sdk repo](https://github.com/dart-lang/sdk/issues/61488)\n\nCC: @DanTup (Dart LSP developer who helped analyze this)\n\n---\n\n### Steps to Reproduce\n\n1. `flutter create test_did_change`\n2. Open `test_did_change/lib/main.dart`\n3. Begin typing at the end of the file to trigger the LSP snippet completion\n4. Create a new file `named new_file.dart`\n5. Begin typing in `new_file.dart` to trigger the LSP snippet completion\n\n---\n\n### Observed Behavior\n\nThe Dart LSP server logs errors during the `textDocument/didChange` notification. Based on analysis from the Dart LSP developer, Neovim's LSP client is sending malformed `didChange` notifications with incorrect text ranges.\n\nExamples of invalid behavior:\n\n[dart-lsp-log.txt](https://github.com/user-attachments/files/22331971/dart-lsp-log.txt)\n\n#### Insertions Treated Sequentially (Snippet Completion)\n```json\n{\n  \"text\": \"C\",\n  \"range\": { \"start\": { \"line\": 123, \"character\": 6 }, \"end\": { \"line\": 123, \"character\": 6 } }\n},\n{\n  \"text\": \"l\",\n  \"range\": { \"start\": { \"line\": 123, \"character\": 7 }, \"end\": { \"line\": 123, \"character\": 7 } }\n},\n...\n```\nEach character is inserted at a new offset, as if earlier insertions had already modified the buffer. But LSP spec requires all edits in a single `didChange` to apply to the original state of the document.\n\n### Relevant LSP Specification\n\n> When a client sends a `textDocument/didChange` notification, the ranges in `contentChanges` must all reference the same version of the document (before any of the edits are applied). Applying the changes in any order should result in the same document state.\n\nSee: [microsoft/language-server-protocol#888](https://github.com/microsoft/language-server-protocol/issues/888)\n\n---\n\n### Test Environment\n\n- NVIM v0.11.4\n  - Build type: RelWithDebInfo\n  - LuaJIT 2.1.1753364724\n- Flutter SDK: 3.35.3 (Dart 3.9.2)\n- LSP Client: Built-in `vim.lsp`, configured via `nvim-lspconfig`\n```lua\n        dartls = {\n          cmd = { \"dart\", \"language-server\", \"--protocol=lsp\" },\n          filetypes = { \"dart\" },\n          root_markers = { 'pubspec.yaml' },\n          init_options = {\n            onlyAnalyzeProjectsWithOpenFiles = true,\n            suggestFromUnimportedLibraries = false,\n            closingLabels = true,\n            outline = true,\n            flutterOutline = true,\n          },\n          settings = {\n            dart = {\n              analysisExcludedFolders = {\n                vim.fn.expand(\"$PUB_CACHE\"),\n                vim.fn.expand(\"$FLUTTER_ROOT\"),\n                vim.fn.expand(\"$XDG_DATA_HOME/dart\"),\n                vim.fn.expand(\"$XDG_CACHE_HOME/dart\"),\n              },\n              updateImportsOnRename = true,\n              completeFunctionCalls = true,\n              showTodos = true,\n            },\n          },\n          capabilities = require(\"cmp_nvim_lsp\").default_capabilities()\n        },\n\n```\n\n### Code example\n\n<details>\n<summary>main.dart</summary>\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  // This widget is the root of your application.\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      theme: ThemeData(\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n      ),\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({super.key, required this.title});\n\n  final String title;\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  int _counter = 0;\n\n  void _incrementCounter() {\n    setState(() {\n      _counter++;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n        title: Text(widget.title),\n      ),\n      body: Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            const Text('You have pushed the button this many times:'),\n            Text(\n              '$_counter',\n              style: Theme.of(context).textTheme.headlineMedium,\n            ),\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: _incrementCounter,\n        tooltip: 'Increment',\n        child: const Icon(Icons.add),\n      ), // This trailing comma makes auto-formatting nicer for build methods.\n    );\n  }\n}\n\nclass NewClassAtTheEndOfTheFile{\n  \n}\n```\n</details>\n\n<details>\n<summary>new_file.dart</summary>\n\n```dart\nclass NewClassInTheNewFile{\n  \n}\n``` \n</details>\n\n---\n\nPlease let me know if I can help provide logs, a reproducible config.\n\n\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\n```lua\nlocal pattern = 'dart'\nlocal cmd = { \"dart\", \"language-server\", \"--protocol=lsp\" }\n-- Add files/folders here that indicate the root of a project\nlocal root_markers = { 'pubspec.yaml' }\n-- Change to table with settings if required\nlocal settings = vim.empty_dict()\n\nvim.api.nvim_create_autocmd('FileType', {\n  pattern = pattern,\n  callback = function(args)\n    local match = vim.fs.find(root_markers, { path = args.file, upward = true })[1]\n    local root_dir = match and vim.fn.fnamemodify(match, ':p:h') or nil\n    vim.lsp.start({\n      name = 'bugged-ls',\n      cmd = cmd,\n      root_dir = root_dir,\n      settings = settings\n    })\n  end\n})\n```\n\n### Expected behavior\n\nThe client should:\n- Accumulate multiple text edits targeting the same document version,\n- Ensure all ranges are calculated based on the unmodified buffer,\n- Send a single `didChange` notification with all `contentChanges` referencing the original state.\n\n### Nvim version (nvim -v)\n\nv0.11.4\n\n### Language server name/version\n\nDart **3.9.2**\n\n### Operating system/version\n\nLinux arch 6.16.5-arch1-1\n\n### Log file\n\nhttps://github.com/user-attachments/files/22331971/dart-lsp-log.txt",
    "closed_at": "2025-09-23T01:17:15Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/79290581?v=4",
        "events_url": "https://api.github.com/users/lumpsoid/events{/privacy}",
        "followers_url": "https://api.github.com/users/lumpsoid/followers",
        "following_url": "https://api.github.com/users/lumpsoid/following{/other_user}",
        "gists_url": "https://api.github.com/users/lumpsoid/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lumpsoid",
        "id": 79290581,
        "login": "lumpsoid",
        "node_id": "MDQ6VXNlcjc5MjkwNTgx",
        "organizations_url": "https://api.github.com/users/lumpsoid/orgs",
        "received_events_url": "https://api.github.com/users/lumpsoid/received_events",
        "repos_url": "https://api.github.com/users/lumpsoid/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lumpsoid/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lumpsoid/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lumpsoid",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I apologise for the bad info. I had conflated `WorkspaceEdits` and `TextDocumentContentChangeEvent` which are handled differently (the former all describe locations in the original document, but the latter are applied sequentially).\n\nI've opened https://github.com/dart-lang/sdk/issues/61501 for the underlying issue, and don't believe there's anything wrong in Neovim here.",
            "created_at": "2025-09-15T12:38:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/35775#issuecomment-3291975796",
            "id": 3291975796,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35775",
            "node_id": "IC_kwDOAPphoM7EN5B0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3291975796/reactions"
            },
            "updated_at": "2025-09-15T12:38:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3291975796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1078012?v=4",
                "events_url": "https://api.github.com/users/DanTup/events{/privacy}",
                "followers_url": "https://api.github.com/users/DanTup/followers",
                "following_url": "https://api.github.com/users/DanTup/following{/other_user}",
                "gists_url": "https://api.github.com/users/DanTup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DanTup",
                "id": 1078012,
                "login": "DanTup",
                "node_id": "MDQ6VXNlcjEwNzgwMTI=",
                "organizations_url": "https://api.github.com/users/DanTup/orgs",
                "received_events_url": "https://api.github.com/users/DanTup/received_events",
                "repos_url": "https://api.github.com/users/DanTup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DanTup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DanTup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DanTup",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "to be clear, I will close this issue when the upstream one will be closed with any outcome and reflect it here.",
            "created_at": "2025-09-15T14:37:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/35775#issuecomment-3292518508",
            "id": 3292518508,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35775",
            "node_id": "IC_kwDOAPphoM7EP9hs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3292518508/reactions"
            },
            "updated_at": "2025-09-15T14:37:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3292518508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79290581?v=4",
                "events_url": "https://api.github.com/users/lumpsoid/events{/privacy}",
                "followers_url": "https://api.github.com/users/lumpsoid/followers",
                "following_url": "https://api.github.com/users/lumpsoid/following{/other_user}",
                "gists_url": "https://api.github.com/users/lumpsoid/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lumpsoid",
                "id": 79290581,
                "login": "lumpsoid",
                "node_id": "MDQ6VXNlcjc5MjkwNTgx",
                "organizations_url": "https://api.github.com/users/lumpsoid/orgs",
                "received_events_url": "https://api.github.com/users/lumpsoid/received_events",
                "repos_url": "https://api.github.com/users/lumpsoid/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lumpsoid/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lumpsoid/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lumpsoid",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Looks like dart has closed their issue",
            "created_at": "2025-09-22T15:09:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/35775#issuecomment-3319637667",
            "id": 3319637667,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35775",
            "node_id": "IC_kwDOAPphoM7F3aaj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3319637667/reactions"
            },
            "updated_at": "2025-09-22T15:09:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3319637667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6820998?v=4",
                "events_url": "https://api.github.com/users/XeroOl/events{/privacy}",
                "followers_url": "https://api.github.com/users/XeroOl/followers",
                "following_url": "https://api.github.com/users/XeroOl/following{/other_user}",
                "gists_url": "https://api.github.com/users/XeroOl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/XeroOl",
                "id": 6820998,
                "login": "XeroOl",
                "node_id": "MDQ6VXNlcjY4MjA5OTg=",
                "organizations_url": "https://api.github.com/users/XeroOl/orgs",
                "received_events_url": "https://api.github.com/users/XeroOl/received_events",
                "repos_url": "https://api.github.com/users/XeroOl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/XeroOl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/XeroOl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/XeroOl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yep, the fix landed in Dart and should also be in Flutter's master channel now. If you're able to test it out there, please let me know if you still see any issues.",
            "created_at": "2025-09-22T18:11:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/35775#issuecomment-3320610410",
            "id": 3320610410,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35775",
            "node_id": "IC_kwDOAPphoM7F7H5q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3320610410/reactions"
            },
            "updated_at": "2025-09-22T18:11:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3320610410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1078012?v=4",
                "events_url": "https://api.github.com/users/DanTup/events{/privacy}",
                "followers_url": "https://api.github.com/users/DanTup/followers",
                "following_url": "https://api.github.com/users/DanTup/following{/other_user}",
                "gists_url": "https://api.github.com/users/DanTup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DanTup",
                "id": 1078012,
                "login": "DanTup",
                "node_id": "MDQ6VXNlcjEwNzgwMTI=",
                "organizations_url": "https://api.github.com/users/DanTup/orgs",
                "received_events_url": "https://api.github.com/users/DanTup/received_events",
                "repos_url": "https://api.github.com/users/DanTup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DanTup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DanTup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DanTup",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "okay, because of the original issue is already closed, I will write here.\n\nTLDR: I have the same errors with the behavior I initially described.\n\ncurrent versions:\n```\n> dart --version\nDart SDK version: 3.9.2 (stable) (Wed Aug 27 03:49:40 2025 -0700) on \"linux_x64\"\n\n> flutter --version\nFlutter 3.35.4 • channel stable • https://github.com/flutter/flutter.git\nFramework • revision d693b4b9db (6 days ago) • 2025-09-16 14:27:41 +0000\nEngine • hash feee8ee8fb8b975dd9990f86d3bda11e6e75faf3 (revision c298091351) (7 days ago) • 2025-09-15 14:04:24.000Z\nTools • Dart 3.9.2 • DevTools 2.48.0\n\n> flutter upgrade\nFlutter is already up to date on channel stable\nFlutter 3.35.4 • channel stable • https://github.com/flutter/flutter.git\nFramework • revision d693b4b9db (6 days ago) • 2025-09-16 14:27:41 +0000\nEngine • hash feee8ee8fb8b975dd9990f86d3bda11e6e75faf3 (revision c298091351) (7 days ago) • 2025-09-15 14:04:24.000Z\nTools • Dart 3.9.2 • DevTools 2.48.0\n```\n\nmostly the same actions [as before](https://github.com/dart-lang/sdk/issues/61488#issuecomment-3291367336):\n1. `flutter create test_did_change`\n2. `cd test_did_change`\n3. `nvim .`\n4. opened `./lib/main.dart`\n5. triggered class snippet at the end of the main file\n6. got the same textDocument/didChange errors\n7. created and opened `./lib/new_file.dart`\n8. started typing, without triggering any completion/snippets\n9. got textDocument/didChange errors after the first couple of symbols were typed\n\nlogs: [instrumentation-log-dart.txt](https://github.com/user-attachments/files/22476549/instrumentation-log-dart.txt)\n\nneovim config (the same):\n```lua\n        dartls = {\n          cmd = { \"dart\", \"language-server\", \"--protocol=lsp\", \"--instrumentation-log-file=/<REDACTED>/instrumentation-log-dart.txt\" },\n          filetypes = { \"dart\" },\n          root_markers = { 'pubspec.yaml' },\n          init_options = {\n            onlyAnalyzeProjectsWithOpenFiles = true,\n            suggestFromUnimportedLibraries = false,\n            closingLabels = true,\n            outline = true,\n            flutterOutline = true,\n          },\n          settings = {\n            dart = {\n              analysisExcludedFolders = {\n                vim.fn.expand(\"$PUB_CACHE\"),\n                vim.fn.expand(\"$FLUTTER_ROOT\"),\n                vim.fn.expand(\"$XDG_DATA_HOME/dart\"),\n                vim.fn.expand(\"$XDG_CACHE_HOME/dart\"),\n              },\n              updateImportsOnRename = true,\n              completeFunctionCalls = true,\n              showTodos = true,\n            },\n          },\n        },\n\n```\n\nIf you need anything additional or in the specific way, I will try to help.\n\n<details>\n<summary>files after changes:</summary>\n\n<details>\n<summary>main.dart</summary>\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  // This widget is the root of your application.\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Flutter Demo',\n      theme: ThemeData(\n        // This is the theme of your application.\n        //\n        // TRY THIS: Try running your application with \"flutter run\". You'll see\n        // the application has a purple toolbar. Then, without quitting the app,\n        // try changing the seedColor in the colorScheme below to Colors.green\n        // and then invoke \"hot reload\" (save your changes or press the \"hot\n        // reload\" button in a Flutter-supported IDE, or press \"r\" if you used\n        // the command line to start the app).\n        //\n        // Notice that the counter didn't reset back to zero; the application\n        // state is not lost during the reload. To reset the state, use hot\n        // restart instead.\n        //\n        // This works for code too, not just values: Most code changes can be\n        // tested with just a hot reload.\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n      ),\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({super.key, required this.title});\n\n  // This widget is the home page of your application. It is stateful, meaning\n  // that it has a State object (defined below) that contains fields that affect\n  // how it looks.\n\n  // This class is the configuration for the state. It holds the values (in this\n  // case the title) provided by the parent (in this case the App widget) and\n  // used by the build method of the State. Fields in a Widget subclass are\n  // always marked \"final\".\n\n  final String title;\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  int _counter = 0;\n\n  void _incrementCounter() {\n    setState(() {\n      // This call to setState tells the Flutter framework that something has\n      // changed in this State, which causes it to rerun the build method below\n      // so that the display can reflect the updated values. If we changed\n      // _counter without calling setState(), then the build method would not be\n      // called again, and so nothing would appear to happen.\n      _counter++;\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // This method is rerun every time setState is called, for instance as done\n    // by the _incrementCounter method above.\n    //\n    // The Flutter framework has been optimized to make rerunning build methods\n    // fast, so that you can just rebuild anything that needs updating rather\n    // than having to individually change instances of widgets.\n    return Scaffold(\n      appBar: AppBar(\n        // TRY THIS: Try changing the color here to a specific color (to\n        // Colors.amber, perhaps?) and trigger a hot reload to see the AppBar\n        // change color while the other colors stay the same.\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n        // Here we take the value from the MyHomePage object that was created by\n        // the App.build method, and use it to set our appbar title.\n        title: Text(widget.title),\n      ),\n      body: Center(\n        // Center is a layout widget. It takes a single child and positions it\n        // in the middle of the parent.\n        child: Column(\n          // Column is also a layout widget. It takes a list of children and\n          // arranges them vertically. By default, it sizes itself to fit its\n          // children horizontally, and tries to be as tall as its parent.\n          //\n          // Column has various properties to control how it sizes itself and\n          // how it positions its children. Here we use mainAxisAlignment to\n          // center the children vertically; the main axis here is the vertical\n          // axis because Columns are vertical (the cross axis would be\n          // horizontal).\n          //\n          // TRY THIS: Invoke \"debug painting\" (choose the \"Toggle Debug Paint\"\n          // action in the IDE, or press \"p\" in the console), to see the\n          // wireframe for each widget.\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: <Widget>[\n            const Text('You have pushed the button this many times:'),\n            Text(\n              '$_counter',\n              style: Theme.of(context).textTheme.headlineMedium,\n            ),\n          ],\n        ),\n      ),\n      floatingActionButton: FloatingActionButton(\n        onPressed: _incrementCounter,\n        tooltip: 'Increment',\n        child: const Icon(Icons.add),\n      ), // This trailing comma makes auto-formatting nicer for build methods.\n    );\n  }\n}\n\nclass Something {\n  \n}\n\n```\n</details>\n\n<details>\n<summary>new_file.dart</summary>\n\n```dart\nsjdlkfdsjlf\nksjdflkdsjf\nkjslkdfjldskjf\n\n```\n</details>\n</details>\n\n**UPD**: added instrumentation logs",
            "created_at": "2025-09-22T19:44:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/35775#issuecomment-3321155697",
            "id": 3321155697,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35775",
            "node_id": "IC_kwDOAPphoM7F9NBx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3321155697/reactions"
            },
            "updated_at": "2025-09-22T19:50:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3321155697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79290581?v=4",
                "events_url": "https://api.github.com/users/lumpsoid/events{/privacy}",
                "followers_url": "https://api.github.com/users/lumpsoid/followers",
                "following_url": "https://api.github.com/users/lumpsoid/following{/other_user}",
                "gists_url": "https://api.github.com/users/lumpsoid/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lumpsoid",
                "id": 79290581,
                "login": "lumpsoid",
                "node_id": "MDQ6VXNlcjc5MjkwNTgx",
                "organizations_url": "https://api.github.com/users/lumpsoid/orgs",
                "received_events_url": "https://api.github.com/users/lumpsoid/received_events",
                "repos_url": "https://api.github.com/users/lumpsoid/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lumpsoid/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lumpsoid/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lumpsoid",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@lumpsoid it looks like you're on Flutter's stable channel, but the fix is only currently in the master channel.",
            "created_at": "2025-09-22T20:09:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/35775#issuecomment-3321304949",
            "id": 3321304949,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35775",
            "node_id": "IC_kwDOAPphoM7F9xd1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3321304949/reactions"
            },
            "updated_at": "2025-09-22T20:09:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3321304949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1078012?v=4",
                "events_url": "https://api.github.com/users/DanTup/events{/privacy}",
                "followers_url": "https://api.github.com/users/DanTup/followers",
                "following_url": "https://api.github.com/users/DanTup/following{/other_user}",
                "gists_url": "https://api.github.com/users/DanTup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DanTup",
                "id": 1078012,
                "login": "DanTup",
                "node_id": "MDQ6VXNlcjEwNzgwMTI=",
                "organizations_url": "https://api.github.com/users/DanTup/orgs",
                "received_events_url": "https://api.github.com/users/DanTup/received_events",
                "repos_url": "https://api.github.com/users/DanTup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DanTup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DanTup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DanTup",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@DanTup Oh right, that's what I missed. \n\nChanged to the master channel\n```\nflutter --version\nFlutter 3.37.0-1.0.pre-227 • channel master • https://github.com/flutter/flutter.git\nFramework • revision a92ec1c185 (3 hours ago) • 2025-09-22 14:47:10 -0700\nEngine • hash 27b24ceef0343da907c9d97d148488ddc71880c2 (revision c0e7d716c5) (2 hours ago) • 2025-09-22 20:14:02.000Z\nTools • Dart 3.10.0 (build 3.10.0-227.0.dev) • DevTools 2.50.0\n```\n\nHave no errors with the same routine.\n\nThanks for your work! Sorry for confusion.\nMuch love ❤️",
            "created_at": "2025-09-23T01:17:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/35775#issuecomment-3322048690",
            "id": 3322048690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35775",
            "node_id": "IC_kwDOAPphoM7GAnCy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3322048690/reactions"
            },
            "updated_at": "2025-09-23T01:17:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3322048690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79290581?v=4",
                "events_url": "https://api.github.com/users/lumpsoid/events{/privacy}",
                "followers_url": "https://api.github.com/users/lumpsoid/followers",
                "following_url": "https://api.github.com/users/lumpsoid/following{/other_user}",
                "gists_url": "https://api.github.com/users/lumpsoid/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lumpsoid",
                "id": 79290581,
                "login": "lumpsoid",
                "node_id": "MDQ6VXNlcjc5MjkwNTgx",
                "organizations_url": "https://api.github.com/users/lumpsoid/orgs",
                "received_events_url": "https://api.github.com/users/lumpsoid/received_events",
                "repos_url": "https://api.github.com/users/lumpsoid/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lumpsoid/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lumpsoid/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lumpsoid",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@lumpsoid no problem, thank you for testing and confirming! 🙂",
            "created_at": "2025-09-23T06:36:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/35775#issuecomment-3322617752",
            "id": 3322617752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35775",
            "node_id": "IC_kwDOAPphoM7GCx-Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3322617752/reactions"
            },
            "updated_at": "2025-09-23T06:36:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3322617752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1078012?v=4",
                "events_url": "https://api.github.com/users/DanTup/events{/privacy}",
                "followers_url": "https://api.github.com/users/DanTup/followers",
                "following_url": "https://api.github.com/users/DanTup/following{/other_user}",
                "gists_url": "https://api.github.com/users/DanTup/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DanTup",
                "id": 1078012,
                "login": "DanTup",
                "node_id": "MDQ6VXNlcjEwNzgwMTI=",
                "organizations_url": "https://api.github.com/users/DanTup/orgs",
                "received_events_url": "https://api.github.com/users/DanTup/received_events",
                "repos_url": "https://api.github.com/users/DanTup/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DanTup/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DanTup/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DanTup",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35775/comments",
    "created_at": "2025-09-15T11:23:32Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35775/events",
    "html_url": "https://github.com/neovim/neovim/issues/35775",
    "id": 3417522201,
    "issue_dependencies_summary": {
        "blocked_by": 0,
        "blocking": 0,
        "total_blocked_by": 0,
        "total_blocking": 0
    },
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "Needs a third-party / external change or fix",
            "id": 101945532,
            "name": "status:blocked-external",
            "node_id": "MDU6TGFiZWwxMDE5NDU1MzI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/status:blocked-external"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35775/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7Ls0AZ",
    "number": 35775,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35775/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35775/timeline",
    "title": "LSP: dart `textDocument/didChange` Notifications Sent with Incorrect Ranges",
    "type": null,
    "updated_at": "2025-09-23T06:36:09Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35775",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/79290581?v=4",
        "events_url": "https://api.github.com/users/lumpsoid/events{/privacy}",
        "followers_url": "https://api.github.com/users/lumpsoid/followers",
        "following_url": "https://api.github.com/users/lumpsoid/following{/other_user}",
        "gists_url": "https://api.github.com/users/lumpsoid/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lumpsoid",
        "id": 79290581,
        "login": "lumpsoid",
        "node_id": "MDQ6VXNlcjc5MjkwNTgx",
        "organizations_url": "https://api.github.com/users/lumpsoid/orgs",
        "received_events_url": "https://api.github.com/users/lumpsoid/received_events",
        "repos_url": "https://api.github.com/users/lumpsoid/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lumpsoid/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lumpsoid/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lumpsoid",
        "user_view_type": "public"
    }
}