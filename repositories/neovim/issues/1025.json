{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Quoting `:help cw`:\n\n> If you prefer \"cw\" to include the space after a word, use this mapping: >\n>     :map cw dwi\n\nThat makes me love vim, because that makes so much sense. Make a new command just by simply combining a few others!\n\nThen comes what makes me not so happy about vim anymore. The above mapping does not work with <kbd>.</kbd> repeat, because only the `i` part of the command will be repeated. That’s not what you expect as a user. Especially since undo works as expected.\n\nInstead, we have to write like 20 lines of vimscript to accomplish what we want (https://github.com/ap/vim-you-keep-using-that-word).\n\nSimilarly, after playing back a macro I’d also expect the _whole macro_ to be repeated.\n\nIt’s a shame that something like https://github.com/tpope/vim-repeat needs to exist.\n\nCould neovim possibly sometime in the future repeat the whole last command, instead of just the last part of it?\n\n<bountysource-plugin>\n\n---\n\nWant to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/3460140-better-repeat?utm_campaign=plugin&utm_content=tracker%2F461131&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F461131&utm_medium=issues&utm_source=github).\n</bountysource-plugin>\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> Similarly, after playing back a macro I’d also expect the whole macro to be repeated\n\nYou mean you want to repeat macros with `.`? I dunno, many people find the distinction useful: If I replay a macro I don't want it clobbering my `.` repeat. But you could accomplish this fairly easily by something like this (from memory; not tested):\n\n```\nnnoremap @q :<c-u>call repeat#set(\"@q\")<cr>@q\n```\n\n> It’s a shame that something like https://github.com/tpope/vim-repeat needs to exist.\n\nIt's probably reasonable for that to be baked-in somehow, but the plugin works so well that I don't see why that would be a high priority (am I missing something?). We can simply include vim-repeat plugin as part of Neovim's shipped defaults.\n\n> Could neovim possibly sometime in the future repeat the whole last command, instead of just the last part of it?\n\nDefine \"last command\".\n\nI've thought a lot about this myself, but it's not so simple to predictably extend the definition of an _atomic edit_ without breaking existing behavior that one perhaps takes for granted. I do, however, think there is room for a _new_ concept: something like a \"secondary repeat\", that is: \"repeat the last _atomic motion_\". Then that could be combined with the last \"atomic edit\" for a mega-repeat. \n\nFor example, let's say \"repeat last atomic motion\" is mapped to `<space>`. Then consider the following sequence:\n\n```\ndwi\n```\n\nHere the last atomic motion[1] is `dw` and the last atomic edit is `i`. To repeat the motion, one would press `<space>`. To repeat the motion _and_ the edit, press `<space>.`. Thereafter, `.` repeats the entire thing. \n\nThis might be half-baked, I haven't actually made a prototype or anything. But the key point is that I think we could gain a lot more by thinking about a new, lightweight way of composing motions with edits, rather than just overloading `.` with more cases.\n\n[1] **edit:** I was super tired when I wrote this; `dw` is of course not a \"motion\" :)\n",
            "created_at": "2014-08-03T07:06:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-50983723",
            "id": 50983723,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTgzNzIz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50983723/reactions"
            },
            "updated_at": "2014-08-03T14:13:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50983723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You mean you want to repeat macros with `.`?\n\nYes.\n\n> If I replay a macro I don't want it clobbering my `.` repeat.\n\nReplaying a macro already clobbers the `.` repeat—with the useless last command of the macro.\n\n> am I missing something?\n\nYes, the point is to be able to so easily create your own commands. I want to write `:map cw dwi`, not `:map cw :<c-u>call repeat#set(\"dwi\")<cr>dwi`. (I have no idea if that last mapping actually work, but you get the picture.)\n\n> Define \"last command\".\n\nThe thing that `u` would undo—does that make sense?\n",
            "created_at": "2014-08-03T11:22:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-50987970",
            "id": 50987970,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg3OTcw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50987970/reactions"
            },
            "updated_at": "2014-08-03T11:22:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50987970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2142817?v=4",
                "events_url": "https://api.github.com/users/lydell/events{/privacy}",
                "followers_url": "https://api.github.com/users/lydell/followers",
                "following_url": "https://api.github.com/users/lydell/following{/other_user}",
                "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lydell",
                "id": 2142817,
                "login": "lydell",
                "node_id": "MDQ6VXNlcjIxNDI4MTc=",
                "organizations_url": "https://api.github.com/users/lydell/orgs",
                "received_events_url": "https://api.github.com/users/lydell/received_events",
                "repos_url": "https://api.github.com/users/lydell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lydell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "How to set up a simple mapping so that it can be repeated using the dot command:\nhttp://vimcasts.org/episodes/creating-repeatable-mappings-with-repeat-vim/\n\nThe custom mapping can be reverted with a single undo as well.\n",
            "created_at": "2014-08-03T11:54:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-50988576",
            "id": 50988576,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg4NTc2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50988576/reactions"
            },
            "updated_at": "2014-08-03T11:54:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50988576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4105701?v=4",
                "events_url": "https://api.github.com/users/mykola-hrebenyuk/events{/privacy}",
                "followers_url": "https://api.github.com/users/mykola-hrebenyuk/followers",
                "following_url": "https://api.github.com/users/mykola-hrebenyuk/following{/other_user}",
                "gists_url": "https://api.github.com/users/mykola-hrebenyuk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mykola-hrebenyuk",
                "id": 4105701,
                "login": "mykola-hrebenyuk",
                "node_id": "MDQ6VXNlcjQxMDU3MDE=",
                "organizations_url": "https://api.github.com/users/mykola-hrebenyuk/orgs",
                "received_events_url": "https://api.github.com/users/mykola-hrebenyuk/received_events",
                "repos_url": "https://api.github.com/users/mykola-hrebenyuk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mykola-hrebenyuk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mykola-hrebenyuk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mykola-hrebenyuk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the great video! What I want is that it should work so by default.\n\nDoes anyone ever think that `.` repeat is useful when it just happens to repeat the last command of something? I mean, could anyone give an example on how they use that?\n",
            "created_at": "2014-08-03T12:04:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-50988770",
            "id": 50988770,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTg4Nzcw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50988770/reactions"
            },
            "updated_at": "2014-08-03T12:04:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50988770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2142817?v=4",
                "events_url": "https://api.github.com/users/lydell/events{/privacy}",
                "followers_url": "https://api.github.com/users/lydell/followers",
                "following_url": "https://api.github.com/users/lydell/following{/other_user}",
                "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lydell",
                "id": 2142817,
                "login": "lydell",
                "node_id": "MDQ6VXNlcjIxNDI4MTc=",
                "organizations_url": "https://api.github.com/users/lydell/orgs",
                "received_events_url": "https://api.github.com/users/lydell/received_events",
                "repos_url": "https://api.github.com/users/lydell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lydell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Replaying a macro already clobbers the . repeat—with the useless last command of the macro.\n\nYou're right, that's useless. I think that would be worth changing experimentally, I can't imagine that many plugins or users depend on that behavior.\n\n> Yes, the point is to be able to so easily create your own commands. I want to write `:map cw dwi`, not `:map cw :<c-u>call repeat#set(\"dwi\")<cr>dwi.`\n\nIt seems like you are talking about the special case of insert-mode. You want the last insert to be combined with the previous edit as a single atomic edit. This could break a lot of plugins, I think. What do you think about the idea of a new \"composing\" command as I described above (albeit with an incorrect example)?\n\n> > Define \"last command\".\n> \n> The thing that u would undo—does that make sense?\n\n`u` doesn't undo the `dw` in `dwi{text}`. You would need `uu`.\n",
            "created_at": "2014-08-03T14:30:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-50991887",
            "id": 50991887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTkxODg3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50991887/reactions"
            },
            "updated_at": "2014-08-03T14:31:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50991887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> It seems like you are talking about the special case of insert-mode.\n\nNo. Take the example from the video that was linked to above: `nmap cp xp`. <kbd>.</kbd> should then repeat both `x` and `p` as one command.\n\n> `u` doesn't undo the `dw` in `dwi{text}`\n\nStrange, a single `u` _does_ undo both `dw` an `i` for me!\n",
            "created_at": "2014-08-03T17:45:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-50997319",
            "id": 50997319,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTk3MzE5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50997319/reactions"
            },
            "updated_at": "2014-08-03T17:45:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50997319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2142817?v=4",
                "events_url": "https://api.github.com/users/lydell/events{/privacy}",
                "followers_url": "https://api.github.com/users/lydell/followers",
                "following_url": "https://api.github.com/users/lydell/following{/other_user}",
                "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lydell",
                "id": 2142817,
                "login": "lydell",
                "node_id": "MDQ6VXNlcjIxNDI4MTc=",
                "organizations_url": "https://api.github.com/users/lydell/orgs",
                "received_events_url": "https://api.github.com/users/lydell/received_events",
                "repos_url": "https://api.github.com/users/lydell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lydell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Strange, a single u does undo both dw an i for me!\n\nDid you enter text, in insert mode?\n",
            "created_at": "2014-08-03T18:57:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-50999337",
            "id": 50999337,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTk5MzM3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50999337/reactions"
            },
            "updated_at": "2014-08-03T18:57:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50999337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Actually I am starting to agree with you. Mapped batches are the same thing as macros, and should be treated as atomic.\n",
            "created_at": "2014-08-03T19:00:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-50999428",
            "id": 50999428,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTk5NDI4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50999428/reactions"
            },
            "updated_at": "2014-08-03T19:00:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/50999428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I agree with the idea that . should repeat the last \"mapped command\" rather than atomic command. This means repeating the entire last action that the user actively performed, no matter how many commands it  actually runs behind the scenes. This would improve behaviour in the \"dwi\" case, and also would allow . repeat to automatically \"do the right thing\" with plugin and function invocation.\n\nPerhaps the idea of an \"atomic\" command could be adapted to mean last \"entire executed command mapping\" for both . repeat AND undo states. Under this model, if we assume `nnoremap cw dwi` is set, then using cw would allow proper . repeat AND a `u` undoes the whole thing, whereas entering dwi manually would count as two actions, `dw` and `i`, therefore `.`  or `u` only affect the last `i`.\n\nSomething to think about.\n",
            "created_at": "2015-04-19T06:20:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-94243823",
            "id": 94243823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDk0MjQzODIz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/94243823/reactions"
            },
            "updated_at": "2015-04-19T06:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/94243823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6439644?v=4",
                "events_url": "https://api.github.com/users/ChrisPenner/events{/privacy}",
                "followers_url": "https://api.github.com/users/ChrisPenner/followers",
                "following_url": "https://api.github.com/users/ChrisPenner/following{/other_user}",
                "gists_url": "https://api.github.com/users/ChrisPenner/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ChrisPenner",
                "id": 6439644,
                "login": "ChrisPenner",
                "node_id": "MDQ6VXNlcjY0Mzk2NDQ=",
                "organizations_url": "https://api.github.com/users/ChrisPenner/orgs",
                "received_events_url": "https://api.github.com/users/ChrisPenner/received_events",
                "repos_url": "https://api.github.com/users/ChrisPenner/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ChrisPenner/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ChrisPenner/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ChrisPenner",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Just for the record, `@@` command repeats the last macro.\n\nAs for the better repeat suggestions, I do agree this is a field that is worth exploring. Maybe by changing core or maybe by including something like tpope`s vim-repeat in default runtime. Care must be taken for backwards compatibility problems, though.\n",
            "created_at": "2015-04-19T08:40:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-94252086",
            "id": 94252086,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDk0MjUyMDg2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/94252086/reactions"
            },
            "updated_at": "2015-04-19T08:40:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/94252086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/135757?v=4",
                "events_url": "https://api.github.com/users/elmart/events{/privacy}",
                "followers_url": "https://api.github.com/users/elmart/followers",
                "following_url": "https://api.github.com/users/elmart/following{/other_user}",
                "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elmart",
                "id": 135757,
                "login": "elmart",
                "node_id": "MDQ6VXNlcjEzNTc1Nw==",
                "organizations_url": "https://api.github.com/users/elmart/orgs",
                "received_events_url": "https://api.github.com/users/elmart/received_events",
                "repos_url": "https://api.github.com/users/elmart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elmart",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also related is that if you're like me and always write both delimters of quotes and parens immediately after each other, follwed by moving the cursor back one char to type the contents between those delimiters, it's a bummer that you can't repeat that. For example, `cE''<left>text` does not yield `'text'` if I try to repeat that edit somewhere else; instead it only yields `text`. This happens really often to me. I have even started to learn to remember not to type that way when I know in advance that I want to repeat my edit!\n\n(I use a non-standard keyboard where the arrow keys are very convenient to reach, so the use of `<left>` is no problem to me.)\n",
            "created_at": "2015-04-19T09:29:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-94256226",
            "id": 94256226,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDk0MjU2MjI2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/94256226/reactions"
            },
            "updated_at": "2015-04-19T09:29:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/94256226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2142817?v=4",
                "events_url": "https://api.github.com/users/lydell/events{/privacy}",
                "followers_url": "https://api.github.com/users/lydell/followers",
                "following_url": "https://api.github.com/users/lydell/following{/other_user}",
                "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lydell",
                "id": 2142817,
                "login": "lydell",
                "node_id": "MDQ6VXNlcjIxNDI4MTc=",
                "organizations_url": "https://api.github.com/users/lydell/orgs",
                "received_events_url": "https://api.github.com/users/lydell/received_events",
                "repos_url": "https://api.github.com/users/lydell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lydell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hrmm. Default behaviour would be nice, but how could we distinguish between commands we want repeated and ones we don't? For example, I don't want `.` to repeat my last `:NerdTree` command, or repeat my mappings for `:w` or `:bd`. We'd need a way to explicitly opt in for mapped batch repeat.\n\nHere's are two ideas:\n\n``` vim\n\" Option 1: Overload [v,n...](nore)map with a three argument version to explicitly opt in:\nnnoremap repeat cw dwi\n\" or\nnnoremap . cw dwi\n\n\" Option 2: perhaps add a new mapping keyword 'rmap'\n\" ('r' for 'repeat' though it should cause 'undo' to act on the full mapping as well)\nrnnoremap cw dwi\n```\n\nI like the three argument syntax, but this would break lots of plugins and existing mappings since vim treats everything after the second space as part of the mapping. \n\nI recommend the rmap keyword option because it clearly distinguishes that this is new behaviour, and will actually throw an error in vim rather than just silently doing wonky stuff. It also maintains complete back compatibility with plugins, but allows users to opt-in for their own mappings. \n\nOne could even do things like `rnoremap @@ @@` to make `@@` dot-repeatable, though honestly I'd prefer if the @ macro commands were all just made dot-repeated (and undoable) by default.\n\nUsing the rmap also provides the best compatibility (and least work) for plugin maintainers. If their plugin defines mappings they can use a block along the lines of:\n\n``` vim\nif has('nvim')\n    rnnoremap cw dwi\nelse\n    nnoremap cw dwi\nendif \n```\n\nOR they can just expose `<Plug>` mappings for the user to explicitly remap using rmap or map however they prefer.\n",
            "created_at": "2015-04-19T16:13:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-94291482",
            "id": 94291482,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDk0MjkxNDgy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/94291482/reactions"
            },
            "updated_at": "2015-04-19T19:09:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/94291482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6439644?v=4",
                "events_url": "https://api.github.com/users/ChrisPenner/events{/privacy}",
                "followers_url": "https://api.github.com/users/ChrisPenner/followers",
                "following_url": "https://api.github.com/users/ChrisPenner/following{/other_user}",
                "gists_url": "https://api.github.com/users/ChrisPenner/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ChrisPenner",
                "id": 6439644,
                "login": "ChrisPenner",
                "node_id": "MDQ6VXNlcjY0Mzk2NDQ=",
                "organizations_url": "https://api.github.com/users/ChrisPenner/orgs",
                "received_events_url": "https://api.github.com/users/ChrisPenner/received_events",
                "repos_url": "https://api.github.com/users/ChrisPenner/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ChrisPenner/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ChrisPenner/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ChrisPenner",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> For example, `cE''<left>text` does not yield `'text'` if I try to repeat that edit somewhere else; instead it only yields `text`\n\n@lydell There's a patch on vim_dev I would like to add to Neovim:\n\nhttps://groups.google.com/d/msg/vim_use/klj6nlDOriI/QKVrXswKTb4J\n\nIt adds `i_CTRL-G_U_<left>` to allow arrow-key movement (within the same line) without breaking undo/redo/repeat.\n",
            "created_at": "2015-04-22T22:35:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-95357329",
            "id": 95357329,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1MzU3MzI5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/95357329/reactions"
            },
            "updated_at": "2015-04-22T22:35:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/95357329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "That patch sounds awesome! (EDIT: If somebody stumbles upon this, there is a PR for that patch: #3306.)\n\nNow, bringing up my “let `.` repeat what `u` would undo” comment again, here is a thing to try out:\n1. Run `vim -u NONE`\n2. Enter some text: press `ione two<esc>`\n3. Add the “consistent cw” mapping: press `:map cw dwi`\n4. Go to the beginning of the line: press `^`\n5. Try out cw: press `cwfoo<esc>`\n6. Note how the line now is `footwo` as expected.\n7. Undo our change: press `u`\n8. Note how both the `i` and the `dw` of our `cw` mapping was undone! (The line is now `one two` again.)\n\nThe above is great! Wouldn’t it then make sense to say that `.` should also repeat “what `u` would undo”? That wouldn’t introduce the conflicts @ChrisPenner brought up either (I think?).\n",
            "created_at": "2015-04-23T19:26:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-95692401",
            "id": 95692401,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDk1NjkyNDAx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/95692401/reactions"
            },
            "updated_at": "2015-10-25T14:10:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/95692401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2142817?v=4",
                "events_url": "https://api.github.com/users/lydell/events{/privacy}",
                "followers_url": "https://api.github.com/users/lydell/followers",
                "following_url": "https://api.github.com/users/lydell/following{/other_user}",
                "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lydell",
                "id": 2142817,
                "login": "lydell",
                "node_id": "MDQ6VXNlcjIxNDI4MTc=",
                "organizations_url": "https://api.github.com/users/lydell/orgs",
                "received_events_url": "https://api.github.com/users/lydell/received_events",
                "repos_url": "https://api.github.com/users/lydell/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lydell",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not sure if I should make a new topic for this, but the consensus seems to be that `.` leaves... well... _some_ to be desired. Now since the nature of these desires clearly differ quite a lot depending on the user, we have some insight into why vanilla vim's dot never became more powerful, and this is why we are where we are with it. \n\nI would advocate against changing the behavior (however slight) unless there is a configurable option to at least bring exact old behavior back. It would be a bit of a faux pas to implement a plugin that depended on `.` behavior, but I already have a binding I use a lot in my vimrc that does exactly that! (It calls `:normal! .j` or `:normal! .n` depending on `v:hlsearch`)\n\nThat being said, lumping arrow key movements into the dot action would simply be unmitigated _awesome_, and i couldn't argue against that.\n\nI really like the connection that has been made to the undo-tree actions, and also I have noticed that many clever plugins are able to do a thing called \"undo gluing\" where arbitrary sequences can be \"told\" somehow (I'm not familiar with the guts of how this is done) to all get undone with one `u`. One example of this is the really cool plugin https://github.com/t9md/vim-textmanip.\n\nMy suggestions are\n- Not to necessarily go all the way and just _replace_ `.` with \"repeat what `u` would undo\", make \"repeat what `u` would undo\" as a new, more flexible repetition command that users have the choice of mapping to `.`\n- Whether done with `.` or the concept of the \"last undo item\", **track the changes in a stack going backward**. This will allow full manipulation power parity with macros while eliminating the crucial barrier to entry of macros in that you have to explicitly mark the location where your macro starts. I don't care what kind of kludgy interface I have to wade through to re-construct the start point of my macro, I want to not have to explicitly mark it out, or resort to awful techniques like dumping a register containing a macro into the buffer in order to edit it in order to get the macro to do the right thing.\n\nFor me at least, constructing macros takes **at minimum** the amount of time it takes to just execute the task 5 to 10 times. So I can only realistically justify macrobuilding if I know a job has to be repeated 20 or more times (while it might take slightly longer to do it 15x, the cognitive load is much lower).\n",
            "created_at": "2015-05-15T21:40:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-102531531",
            "id": 102531531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjUzMTUzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/102531531/reactions"
            },
            "updated_at": "2015-05-15T21:52:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/102531531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hrmm, I like the idea of creating either a new command (How about `g.`? So far as I know it's not taken...correct me on this)\nOther possibility is an option like `set dotrepeat=undo`. Both of these maintain back-compatibility.\n\n> That being said, lumping arrow key movements into the dot action would simply be unmitigated \n> awesome, and i couldn't argue against that.\n\nI'm not sure what you mean by that exactly, I think we'd want to be careful about that, if `.` repeats every action, it get's useless pretty quick, having a separate command for repeating the last 'motion' (like `n` `}` `*` `<C-f>` etc...) would be pretty cool though.\n\nRight now my vote would be for a `g.` command. The semantics of WHAT exactly it would repeat is still a little fuzzy though.\n",
            "created_at": "2015-05-17T03:34:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-102732690",
            "id": 102732690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjczMjY5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/102732690/reactions"
            },
            "updated_at": "2015-05-17T03:34:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/102732690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6439644?v=4",
                "events_url": "https://api.github.com/users/ChrisPenner/events{/privacy}",
                "followers_url": "https://api.github.com/users/ChrisPenner/followers",
                "following_url": "https://api.github.com/users/ChrisPenner/following{/other_user}",
                "gists_url": "https://api.github.com/users/ChrisPenner/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ChrisPenner",
                "id": 6439644,
                "login": "ChrisPenner",
                "node_id": "MDQ6VXNlcjY0Mzk2NDQ=",
                "organizations_url": "https://api.github.com/users/ChrisPenner/orgs",
                "received_events_url": "https://api.github.com/users/ChrisPenner/received_events",
                "repos_url": "https://api.github.com/users/ChrisPenner/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ChrisPenner/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ChrisPenner/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ChrisPenner",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, yes the semantics of the \"arrow-key exception\" are fuzzy, certainly. And, yeah, it only covers a small subset of potential things that one may want to be remembered. I just mean that it happens pretty often (I make a change that spans a few characters that I skip over with arrow keys, but the `.` is interrupted by an arrow keypress).\n",
            "created_at": "2015-05-17T05:42:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-102749915",
            "id": 102749915,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjc0OTkxNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/102749915/reactions"
            },
            "updated_at": "2015-05-17T05:42:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/102749915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Completely agree with the idea of adding this functionality as a new option like ChrisPenner's `set dotrepeat=undo` idea, or a new command that the user may remap to `.`. It's quite cumbersome to have to add a vim-repeat call to every macro if you want `.` to repeat the whole thing. Completely replacing it might not be best, as backward compatibility needs to be considered, but the default behavior of `.` certainly leaves a lot to be desired.",
            "created_at": "2021-05-24T08:34:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-846880563",
            "id": 846880563,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0Njg4MDU2Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/846880563/reactions"
            },
            "updated_at": "2021-05-25T22:11:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/846880563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43142209?v=4",
                "events_url": "https://api.github.com/users/luiz00martins/events{/privacy}",
                "followers_url": "https://api.github.com/users/luiz00martins/followers",
                "following_url": "https://api.github.com/users/luiz00martins/following{/other_user}",
                "gists_url": "https://api.github.com/users/luiz00martins/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luiz00martins",
                "id": 43142209,
                "login": "luiz00martins",
                "node_id": "MDQ6VXNlcjQzMTQyMjA5",
                "organizations_url": "https://api.github.com/users/luiz00martins/orgs",
                "received_events_url": "https://api.github.com/users/luiz00martins/received_events",
                "repos_url": "https://api.github.com/users/luiz00martins/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luiz00martins/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luiz00martins/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luiz00martins",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I'm not sure what you mean by that exactly, I think we'd want to be careful about that, if `.` repeats every action, it get's useless pretty quick, having a separate command for repeating the last 'motion' (like `n` `}` `*` `<C-f>` etc...) would be pretty cool though.\r\n\r\nYeah what I mean is that with the new \"enhanced repeat\" (we can call it `g.`) that one of the features we can add to it is that movements done with e.g. arrow keys inside of insert mode could be replicated. For example if you type `iabc<left><left>def<esc>` you have entered `adefbc`, but when you hit `.` at this point it will simply insert `def`. I'd like it to insert `adefbc`, and specifically not just to make it insert `adefbc` but rather perform the actual `iabc<left><left>def`. ",
            "created_at": "2021-05-24T14:31:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-847082446",
            "id": 847082446,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzA4MjQ0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/847082446/reactions"
            },
            "updated_at": "2021-05-24T14:31:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/847082446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> example if you type `iabc<left><left>def<esc>` you have entered `adefbc`, but when you hit `.` at this point it will simply insert `def`. I'd like it to insert `adefbc`, and specifically not just to make it insert `adefbc` but rather perform the actual `iabc<left><left>def`.\r\n\r\nYou can already do that, with: `<C-g>U`\r\n```vim\r\ninoremap <Left>  <C-g>U<Left>\r\ninoremap <Right> <C-g>U<Right>\r\n```\r\n\r\nSee: https://github.com/bew/dotfiles/blob/2d39f424a3d3d150f700c724228048ca302e93e3/nvim/mappings.vim#L109-L114\r\n\r\n---\r\nRepeat motion (universal for f, {, |, gj, etc...), is definitely something I wanted to have a few times already 👍\r\n",
            "created_at": "2021-05-24T15:47:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-847139148",
            "id": 847139148,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzEzOTE0OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 1,
                "hooray": 2,
                "laugh": 1,
                "rocket": 1,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/847139148/reactions"
            },
            "updated_at": "2021-05-24T15:50:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/847139148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "You can repeat `f` and `t` using `;` and `,`",
            "created_at": "2023-01-26T16:15:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-1405250966",
            "id": 1405250966,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "IC_kwDOAPphoM5Twm2W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1405250966/reactions"
            },
            "updated_at": "2023-01-26T16:15:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1405250966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/90276965?v=4",
                "events_url": "https://api.github.com/users/ad-chaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/ad-chaos/followers",
                "following_url": "https://api.github.com/users/ad-chaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/ad-chaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ad-chaos",
                "id": 90276965,
                "login": "ad-chaos",
                "node_id": "MDQ6VXNlcjkwMjc2OTY1",
                "organizations_url": "https://api.github.com/users/ad-chaos/orgs",
                "received_events_url": "https://api.github.com/users/ad-chaos/received_events",
                "repos_url": "https://api.github.com/users/ad-chaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ad-chaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ad-chaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ad-chaos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi folks. I wanted to drop a link to this nice 30 year old paper. http://www.pitecan.com/papers/CHI94/CHI94.pdf\n\nIt improves a bit on my main idea up above. I think all (n)vim is missing is always recording actions at a low level, but it should be easy to add. Then this can be trivially implemented in a plugin.",
            "created_at": "2024-04-19T10:36:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/1025#issuecomment-2066300506",
            "id": 2066300506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1025",
            "node_id": "IC_kwDOAPphoM57KT5a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066300506/reactions"
            },
            "updated_at": "2024-04-19T10:36:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066300506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1542910?v=4",
                "events_url": "https://api.github.com/users/unphased/events{/privacy}",
                "followers_url": "https://api.github.com/users/unphased/followers",
                "following_url": "https://api.github.com/users/unphased/following{/other_user}",
                "gists_url": "https://api.github.com/users/unphased/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/unphased",
                "id": 1542910,
                "login": "unphased",
                "node_id": "MDQ6VXNlcjE1NDI5MTA=",
                "organizations_url": "https://api.github.com/users/unphased/orgs",
                "received_events_url": "https://api.github.com/users/unphased/received_events",
                "repos_url": "https://api.github.com/users/unphased/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/unphased/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/unphased/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/unphased",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 22,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/1025/comments",
    "created_at": "2014-08-03T06:22:43Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/1025/events",
    "html_url": "https://github.com/neovim/neovim/issues/1025",
    "id": 39364479,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1471818957,
            "name": "multicursor",
            "node_id": "MDU6TGFiZWwxNDcxODE4OTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/multicursor"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/1025/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUzOTM2NDQ3OQ==",
    "number": 1025,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 10,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 10,
        "url": "https://api.github.com/repos/neovim/neovim/issues/1025/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/1025/timeline",
    "title": "Better repeat",
    "updated_at": "2025-01-17T16:19:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/1025",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2142817?v=4",
        "events_url": "https://api.github.com/users/lydell/events{/privacy}",
        "followers_url": "https://api.github.com/users/lydell/followers",
        "following_url": "https://api.github.com/users/lydell/following{/other_user}",
        "gists_url": "https://api.github.com/users/lydell/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lydell",
        "id": 2142817,
        "login": "lydell",
        "node_id": "MDQ6VXNlcjIxNDI4MTc=",
        "organizations_url": "https://api.github.com/users/lydell/orgs",
        "received_events_url": "https://api.github.com/users/lydell/received_events",
        "repos_url": "https://api.github.com/users/lydell/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lydell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lydell/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lydell",
        "user_view_type": "public"
    }
}