{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "This is an extremely sporadic crash with SIGSEGV with no specific repro at this time. I'm on a system that doesn't do automatic core dumps, so it was a nightmare getting the backtrace.\r\n\r\n```gdb\r\nThread 1 \"nvim\" received signal SIGSEGV, Segmentation fault.\r\n0x00000000004776b4 in build_stl_str_hl (wp=0x4, out=<optimized out>, outlen=<optimized out>,\r\n    fmt=0x2d33420 \"%{lightline#link()}%#LightlineLeft_active_0#%( %{lightline#mode()} %)%{(&paste)?\\\"|\\\":\\\"\\\"}%( %{&paste?\\\"PASTE\\\":\\\"\\\"} %)%#LightlineLeft_active_0_1#%#LightlineLeft_active_1#%( %R %)%{(&readonly)&&(1||(&modifi\"..., use_sandbox=<optimized out>, fillchar=<optimized out>, maxwidth=215,\r\n    hltab=0x7fffc91e1d88, tabtab=0x7fffc91e1d80) at ../src/nvim/buffer.c:4507\r\n4507            char_u *start = stl_items[stl_separator_locations[i]].start;\r\n(gdb) bt\r\n#0  0x00000000004776b4 in build_stl_str_hl (wp=0x4, out=<optimized out>, outlen=<optimized out>,\r\n    fmt=0x2d33420 \"%{lightline#link()}%#LightlineLeft_active_0#%( %{lightline#mode()} %)%{(&paste)?\\\"|\\\":\\\"\\\"}%( %{&paste?\\\"PASTE\\\":\\\"\\\"} %)%#LightlineLeft_active_0_1#%#LightlineLeft_active_1#%( %R %)%{(&readonly)&&(1||(&modifi\"..., use_sandbox=<optimized out>, fillchar=<optimized out>, maxwidth=215,\r\n    hltab=0x7fffc91e1d88, tabtab=0x7fffc91e1d80) at ../src/nvim/buffer.c:4507\r\n#1  0x00000000005faaa0 in win_redr_custom (wp=<optimized out>, draw_ruler=<optimized out>) at ../src/nvim/screen.c:5270\r\n#2  0x00000000005faf7b in redraw_custom_statusline (wp=<optimized out>) at ../src/nvim/screen.c:5086\r\n#3  showruler (always=<optimized out>) at ../src/nvim/screen.c:7090\r\n#4  0x0000000000498fd2 in ins_redraw (ready=<optimized out>) at ../src/nvim/edit.c:1509\r\n#5  0x000000000048fbbf in insert_check (state=0x7fffc91e2ec8) at ../src/nvim/edit.c:619\r\n#6  0x0000000000639661 in state_enter (s=0x7fffc91e2ec8) at ../src/nvim/state.c:28\r\n#7  0x000000000048e980 in insert_enter (s=0x7fffc91e2ec8) at ../src/nvim/edit.c:484\r\n#8  edit (cmdchar=<optimized out>, startln=<optimized out>, count=<optimized out>) at ../src/nvim/edit.c:1404\r\n#9  0x00000000005890f2 in invoke_edit (cap=0x7fffc91e3080, repl=0, cmd=105, startln=0) at ../src/nvim/normal.c:7694\r\n#10 nv_edit (cap=0x7fffc91e3080) at ../src/nvim/normal.c:7666\r\n#11 0x0000000000586a63 in normal_execute (state=0x7fffc91e2ff8, key=<optimized out>) at ../src/nvim/normal.c:1142\r\n#12 0x0000000000639680 in state_enter (s=0x7fffc91e2ff8) at ../src/nvim/state.c:69\r\n#13 0x0000000000580520 in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at ../src/nvim/normal.c:463\r\n#14 0x000000000054da81 in main (argc=<optimized out>, argv=<optimized out>) at ../src/nvim/main.c:562\r\n```\r\n\r\nCrash is clearly triggered by a bug in lightline, but obviously no VimL plugin should be able to crash the editor. \r\nI haven't changed any status line integration/configuration on my end in years but lightline [has been seeing some updates](https://github.com/itchyny/lightline.vim/commits/master). This was observed on at least both 28a0f6b17 and bfed67e00 if not earlier.\r\n\r\nThe status line at the time of the crash (before the bad update):\r\n![image](https://user-images.githubusercontent.com/606923/103367727-7a6ff800-4a8b-11eb-8f5c-1071184b3b74.png)\r\n\r\nI was in insert mode but may have been switching out of it (can't remember), no PASTE,  no READONLY.\r\n\r\nThe problem line is line 4507:\r\n\r\nhttps://github.com/neovim/neovim/blob/52163c66b936c21f00832af19fb438b6db6f9766/src/nvim/buffer.c#L4504-L4519\r\n\r\nThe full `fmt` value:\r\n\r\n```\r\nfmt%{lightline#link()}%#LightlineLeft_active_0#%( %{lightline#mode()} %)%{(&paste)?\"|\":\"\"}%( %{&paste?\"PASTE\":\"\"} %)%#LightlineLeft_active_0_1#%#LightlineLeft_active_1#%( %R %)%{(&readonly)&&(1||(&modified||!&modifiable))?\"|\":\"\"}%( %t %)%{(&modified||!&modifiable)?\"|\":\"\"}%( %M %)%#LightlineLeft_active_1_2#%#LightlineLeft_active_2#%( %{LightlineNeomake()} %)%#LightlineLeft_active_2_3#%#LightlineLeft_active_3#%( %{SpinnerText()} %)%#LightlineLeft_active_3_4#%#LightlineMiddle_active#%=%#LightlineRight_active_3_4#%#LightlineRight_active_3#%#LightlineRight_active_2_3#%#LightlineRight_active_2#%( %{&ff} %)%{1||1?\"|\":\"\"}%( %{&fenc!=#\"\"?&fenc:&enc} %)%{1?\"|\":\"\"}%( %{&ft!=#\"\"?&ft:\"no ft\"} %)%#LightlineRight_active_1_2#%#LightlineRight_active_1#%( %3p%% %)%#LightlineRight_active_0_1#%#LightlineRight_active_0#%( %3l:%-2v %)\r\n```\r\n\r\n`num_separators` is 32, but they seem to be both out-of-order and out-of-bounds\r\n\r\n```\r\nstl_separator_locations[0] = 27\r\nstl_separator_locations[1] = 0\r\nstl_separator_locations[2] = 1769170037\r\nstl_separator_locations[3] = 1633889839 \r\n...\r\n```\r\n\r\nThe 3rd entry (`stl_separator_locations[2]`) is unsurprisingly what triggers `SIGSEGV`. I don't know what `itemcnt` is (`stl_items_len` is 67), but it definitely isn't that high.\r\n\r\nMy guess is that the problem isn't actually here but rather higher up. First thought was truncation resulting in incorrect (negative) start index, but `width` is only 38 while `maxwidth` is 215.\r\n\r\n- `nvim --version`:\r\n```\r\nNVIM v0.5.0-dev+980-g28a0f6b17\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.0-beta3\r\nCompilation: /usr/local/bin/ccc -march=native -msse4a -mavx2 -mfma -msha -g -O2 -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wmissing-prototypes -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fno-common -fdiagnostics-color=always -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -DMIN_LOG_LEVEL=3 -I/mnt/d/rand/neovim/build/config -I/mnt/d/rand/neovim/src -I/mnt/d/rand/neovim/.deps/usr/include -I/usr/include -I/mnt/d/rand/neovim/build/src/nvim/auto -I/mnt/d/rand/neovim/build/include\r\nCompiled by mqudsi@Blitzkrieg\r\n\r\nFeatures: +acl +iconv +tui\r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/local/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```\r\n- `vim -u DEFAULTS` (version: ) behaves differently? n/a\r\n- Operating system/version: WSLv1 but n/a\r\n- Terminal name/version: conhost\r\n- `$TERM`: xterm-256color\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\nunknown",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "This seems weird:\r\n\r\n```\r\nstl_separator_locations[0] = 27\r\nstl_separator_locations[1] = 0\r\n```\r\n\r\nsince directly before using this array there is this https://github.com/neovim/neovim/blob/52163c66b936c21f00832af19fb438b6db6f9766/src/nvim/buffer.c#L4490-L4498\r\n\r\nso i would at least expect `stl_separator_locations[i] <= i`.\r\n\r\nSince `stl_separator_locations` is a static variable: could there maybe a race condition with changing \r\nstatus lines, where `stl_separator_locations` get reallocated while at line 4507?",
            "created_at": "2021-01-02T12:33:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/13645#issuecomment-753468354",
            "id": 753468354,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13645",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ2ODM1NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753468354/reactions"
            },
            "updated_at": "2021-01-02T12:35:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753468354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17451647?v=4",
                "events_url": "https://api.github.com/users/MichaHoffmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaHoffmann/followers",
                "following_url": "https://api.github.com/users/MichaHoffmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaHoffmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaHoffmann",
                "id": 17451647,
                "login": "MichaHoffmann",
                "node_id": "MDQ6VXNlcjE3NDUxNjQ3",
                "organizations_url": "https://api.github.com/users/MichaHoffmann/orgs",
                "received_events_url": "https://api.github.com/users/MichaHoffmann/received_events",
                "repos_url": "https://api.github.com/users/MichaHoffmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaHoffmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaHoffmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaHoffmann",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thatâ€™s my suspicion as well after trying to reproduce it a few times more with some (inconsistent) luck. It seems to happen when carrying out certain operations - other than simple inserts - in quick succession, eg via macros or keybindings. ",
            "created_at": "2021-01-02T19:56:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/13645#issuecomment-753522177",
            "id": 753522177,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13645",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzUyMjE3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753522177/reactions"
            },
            "updated_at": "2021-01-02T19:56:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753522177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4",
                "events_url": "https://api.github.com/users/mqudsi/events{/privacy}",
                "followers_url": "https://api.github.com/users/mqudsi/followers",
                "following_url": "https://api.github.com/users/mqudsi/following{/other_user}",
                "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mqudsi",
                "id": 606923,
                "login": "mqudsi",
                "node_id": "MDQ6VXNlcjYwNjkyMw==",
                "organizations_url": "https://api.github.com/users/mqudsi/orgs",
                "received_events_url": "https://api.github.com/users/mqudsi/received_events",
                "repos_url": "https://api.github.com/users/mqudsi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mqudsi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Could you tell how you reproduce it ( at least infrequently ) ? Maybe i can help with finding a reproduction/testcase.",
            "created_at": "2021-01-02T20:52:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/13645#issuecomment-753528174",
            "id": 753528174,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13645",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzUyODE3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753528174/reactions"
            },
            "updated_at": "2021-01-02T20:52:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753528174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17451647?v=4",
                "events_url": "https://api.github.com/users/MichaHoffmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaHoffmann/followers",
                "following_url": "https://api.github.com/users/MichaHoffmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaHoffmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaHoffmann",
                "id": 17451647,
                "login": "MichaHoffmann",
                "node_id": "MDQ6VXNlcjE3NDUxNjQ3",
                "organizations_url": "https://api.github.com/users/MichaHoffmann/orgs",
                "received_events_url": "https://api.github.com/users/MichaHoffmann/received_events",
                "repos_url": "https://api.github.com/users/MichaHoffmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaHoffmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaHoffmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaHoffmann",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "My configuration [is here](https://github.com/mqudsi/nvim-config); I've found it to repro when exiting insert mode, making selections, moving moving blocks of code around (delete and paste from register). I don't have a good repro and it still takes some time to get it to happen.",
            "created_at": "2021-01-03T22:14:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/13645#issuecomment-753683634",
            "id": 753683634,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13645",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzY4MzYzNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753683634/reactions"
            },
            "updated_at": "2021-01-03T22:14:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753683634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4",
                "events_url": "https://api.github.com/users/mqudsi/events{/privacy}",
                "followers_url": "https://api.github.com/users/mqudsi/followers",
                "following_url": "https://api.github.com/users/mqudsi/following{/other_user}",
                "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mqudsi",
                "id": 606923,
                "login": "mqudsi",
                "node_id": "MDQ6VXNlcjYwNjkyMw==",
                "organizations_url": "https://api.github.com/users/mqudsi/orgs",
                "received_events_url": "https://api.github.com/users/mqudsi/received_events",
                "repos_url": "https://api.github.com/users/mqudsi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mqudsi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Update: It doesn't seem to be a race condition, as I placed an assertion to trigger if the function was called with a differing or same thread id and it didn't trigger before it segfaulted.",
            "created_at": "2021-01-03T22:33:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/13645#issuecomment-753685904",
            "id": 753685904,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13645",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzY4NTkwNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753685904/reactions"
            },
            "updated_at": "2021-01-03T22:33:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753685904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4",
                "events_url": "https://api.github.com/users/mqudsi/events{/privacy}",
                "followers_url": "https://api.github.com/users/mqudsi/followers",
                "following_url": "https://api.github.com/users/mqudsi/following{/other_user}",
                "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mqudsi",
                "id": 606923,
                "login": "mqudsi",
                "node_id": "MDQ6VXNlcjYwNjkyMw==",
                "organizations_url": "https://api.github.com/users/mqudsi/orgs",
                "received_events_url": "https://api.github.com/users/mqudsi/received_events",
                "repos_url": "https://api.github.com/users/mqudsi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mqudsi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I wasnt able to reproduce yet; could you try to remove the `static` and free the arrays at the end of the method? ( hoping that that does not break everything )",
            "created_at": "2021-01-03T22:51:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/13645#issuecomment-753687781",
            "id": 753687781,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13645",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzY4Nzc4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753687781/reactions"
            },
            "updated_at": "2021-01-03T22:51:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753687781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17451647?v=4",
                "events_url": "https://api.github.com/users/MichaHoffmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaHoffmann/followers",
                "following_url": "https://api.github.com/users/MichaHoffmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaHoffmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaHoffmann",
                "id": 17451647,
                "login": "MichaHoffmann",
                "node_id": "MDQ6VXNlcjE3NDUxNjQ3",
                "organizations_url": "https://api.github.com/users/MichaHoffmann/orgs",
                "received_events_url": "https://api.github.com/users/MichaHoffmann/received_events",
                "repos_url": "https://api.github.com/users/MichaHoffmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaHoffmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaHoffmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaHoffmann",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If the function isn't entered recursively or by another thread, then the static should have no bearing?\r\n\r\n\r\n```diff\r\ndiff --git a/src/nvim/buffer.c b/src/nvim/buffer.c\r\nindex 93a03986e..01a6c3d0c 100644\r\n--- a/src/nvim/buffer.c\r\n+++ b/src/nvim/buffer.c\r\n@@ -3429,7 +3429,9 @@ typedef enum {\r\n   kNumBaseHexadecimal = 16\r\n } NumberBase;\r\n \r\n-\r\n+#include <sys/types.h>\r\n+#include <unistd.h>\r\n+#include <sys/syscall.h>\r\n /// Build a string from the status line items in \"fmt\".\r\n /// Return length of string in screen cells.\r\n ///\r\n@@ -3473,6 +3475,17 @@ int build_stl_str_hl(\r\n   static stl_hlrec_t *stl_hltab = NULL;\r\n   static StlClickRecord *stl_tabtab = NULL;\r\n   static int *stl_separator_locations = NULL;\r\n+  static pid_t thread_id = -1;\r\n+\r\n+  pid_t new_thread_id = (pid_t) syscall(__NR_gettid);\r\n+  if (thread_id == -1) {\r\n+    thread_id = new_thread_id;\r\n+  } else if (new_thread_id == thread_id) {\r\n+    assert(0 && \"Detected recursive build_stl_str_hl call!\\n\");\r\n+  } else {\r\n+    assert(0 && \"Detected race condition in build_stl_str_hl!\\n\");\r\n+  }\r\n+\r\n \r\n #define TMPLEN 70\r\n   char_u buf_tmp[TMPLEN];\r\n@@ -4580,6 +4593,8 @@ int build_stl_str_hl(\r\n     curwin->w_redr_type = save_redr_type;\r\n   }\r\n \r\n+  thread_id = -1;\r\n+\r\n   return width;\r\n }\r\n \r\n```",
            "created_at": "2021-01-04T00:23:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/13645#issuecomment-753699024",
            "id": 753699024,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13645",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzY5OTAyNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753699024/reactions"
            },
            "updated_at": "2021-01-04T00:23:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753699024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4",
                "events_url": "https://api.github.com/users/mqudsi/events{/privacy}",
                "followers_url": "https://api.github.com/users/mqudsi/followers",
                "following_url": "https://api.github.com/users/mqudsi/following{/other_user}",
                "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mqudsi",
                "id": 606923,
                "login": "mqudsi",
                "node_id": "MDQ6VXNlcjYwNjkyMw==",
                "organizations_url": "https://api.github.com/users/mqudsi/orgs",
                "received_events_url": "https://api.github.com/users/mqudsi/received_events",
                "repos_url": "https://api.github.com/users/mqudsi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mqudsi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Both threads could simultaniously be inside the `if (thread_id == -1)` i guess. But it seems unlikely! Sorry i'm out of ideas otherwise!",
            "created_at": "2021-01-04T18:02:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/13645#issuecomment-754125207",
            "id": 754125207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13645",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDEyNTIwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/754125207/reactions"
            },
            "updated_at": "2021-01-04T18:07:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/754125207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/17451647?v=4",
                "events_url": "https://api.github.com/users/MichaHoffmann/events{/privacy}",
                "followers_url": "https://api.github.com/users/MichaHoffmann/followers",
                "following_url": "https://api.github.com/users/MichaHoffmann/following{/other_user}",
                "gists_url": "https://api.github.com/users/MichaHoffmann/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MichaHoffmann",
                "id": 17451647,
                "login": "MichaHoffmann",
                "node_id": "MDQ6VXNlcjE3NDUxNjQ3",
                "organizations_url": "https://api.github.com/users/MichaHoffmann/orgs",
                "received_events_url": "https://api.github.com/users/MichaHoffmann/received_events",
                "repos_url": "https://api.github.com/users/MichaHoffmann/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MichaHoffmann/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MichaHoffmann/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MichaHoffmann",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/13645/comments",
    "created_at": "2020-12-30T17:42:27Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/13645/events",
    "html_url": "https://github.com/neovim/neovim/issues/13645",
    "id": 776564370,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "tabline, winbar, statuscolumn",
            "id": 3385615828,
            "name": "statusline",
            "node_id": "LA_kwDOAPphoM7JzGXU",
            "url": "https://api.github.com/repos/neovim/neovim/labels/statusline"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/13645/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3NzY1NjQzNzA=",
    "number": 13645,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/13645/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/13645/timeline",
    "title": "SIGSEGV in build_stl_str_h",
    "updated_at": "2025-01-19T11:44:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/13645",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/606923?v=4",
        "events_url": "https://api.github.com/users/mqudsi/events{/privacy}",
        "followers_url": "https://api.github.com/users/mqudsi/followers",
        "following_url": "https://api.github.com/users/mqudsi/following{/other_user}",
        "gists_url": "https://api.github.com/users/mqudsi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mqudsi",
        "id": 606923,
        "login": "mqudsi",
        "node_id": "MDQ6VXNlcjYwNjkyMw==",
        "organizations_url": "https://api.github.com/users/mqudsi/orgs",
        "received_events_url": "https://api.github.com/users/mqudsi/received_events",
        "repos_url": "https://api.github.com/users/mqudsi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mqudsi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mqudsi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mqudsi",
        "user_view_type": "public"
    }
}