{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm working on a plugin for debugging functionality and trying to optimize some of the code paths. One problem we have is that there doesn't seem to be a way to load a buffer to a window and then run autocommands on it as if the user opened the buffer themselves.\r\n\r\nGiven a sequence of steps\r\n* user triggers event with window 2 selected\r\n* plugin calls `nvim_win_set_buf` for window 1 with some other buffer\r\n\r\nyou get a raw buffer loaded into window 1 with no syntax highlighting and no autocommands ran for other plugins that might depend on it. So the work around I've used is\r\n\r\n    target_window.buffer = new_buffer\r\n    previous_window = vim.current.window\r\n    vim.current.window = target_window\r\n    vim.command(\"doauto SomeAutocmd\")\r\n    vim.current.window = previous_window\r\n\r\nClearly this is a clumsy workaround. Something along the lines of\r\n\r\n    target_window.buffer = new_buffer\r\n    vim.api.run_autocommand(\"BufEnter\", target_window.buffer)\r\n\r\nwould be much nicer.",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12656790?v=4",
        "events_url": "https://api.github.com/users/lanza/events{/privacy}",
        "followers_url": "https://api.github.com/users/lanza/followers",
        "following_url": "https://api.github.com/users/lanza/following{/other_user}",
        "gists_url": "https://api.github.com/users/lanza/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lanza",
        "id": 12656790,
        "login": "lanza",
        "node_id": "MDQ6VXNlcjEyNjU2Nzkw",
        "organizations_url": "https://api.github.com/users/lanza/orgs",
        "received_events_url": "https://api.github.com/users/lanza/received_events",
        "repos_url": "https://api.github.com/users/lanza/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lanza/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lanza/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lanza",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> a way to load a buffer to a window and then run autocommands on it as if the user opened the buffer themselves.\r\n\r\n`vim.command()` runs autocmds. E.g. `vim.command('edit ...')` \r\n\r\nI don't understand the request. Are you looking for an alternative to `:doautocmd` ? It sounds more like you expect `vim.current.window` to invoke autocmds. The alternative is to use Ex commands (`vim.command()`) or VimL functions (`vim.call()`).\r\n\r\n`nvim_win_set_buf()` intentionally avoids side-effects. There are already numerous ways to do things with side-effects (autocmds).",
            "created_at": "2019-05-27T09:16:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-496143111",
            "id": 496143111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjE0MzExMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496143111/reactions"
            },
            "updated_at": "2023-11-15T20:27:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496143111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Wouldn't `win_execute` (in vim docs but not yet implemented) solve the problem? Or I guess it could be called `nvim_win_command` in nvim API.",
            "created_at": "2019-05-27T15:17:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-496244606",
            "id": 496244606,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjI0NDYwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496244606/reactions"
            },
            "updated_at": "2019-05-27T15:17:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496244606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I did a bit of testing. The issue seems to be with when a buffer is added to the buffer list and not loaded. When `nvim_win_set_buf` is called on such an unloaded buffer, the buffer is loaded without the autocmds associated with _loading_ being run, like filetype, syntax etc. When the buffer is later visited in another window using `edit {bufname}` the buffer is already considered loaded and such the autocmds is not run then either. \r\n\r\nI think `nvim_win_set_buf` should run the standard autocmds like `FileType` when loading an unloaded buffer. Visiting an previously unvisited buffer is per definition a side-effecty operation in vim, loading a buffer using API should not try to avoid it.",
            "created_at": "2019-05-27T15:31:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-496248205",
            "id": 496248205,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjI0ODIwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496248205/reactions"
            },
            "updated_at": "2019-05-27T15:31:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496248205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I did a bit of testing. The issue seems to be with when a buffer is added to the buffer list and not loaded. When nvim_win_set_buf is called on such an unloaded buffer, the buffer is loaded without the autocmds associated with loading being run, like filetype, syntax etc. When the buffer is later visited in another window using edit {bufname} the buffer is already considered loaded and such the autocmds is not run then either.\r\n\r\n> I think nvim_win_set_buf should run the standard autocmds like FileType when loading an unloaded buffer. Visiting an previously unvisited buffer is per definition a side-effecty operation in vim, loading a buffer using API should not try to avoid it.\r\n\r\nYes, the seems like a better assessment of the situation than I made. Thanks for the clarification!\r\n\r\n\"zero side effects\" doesn't seem to be the right goal. It should have all the effects that follow the autocmd based lifecycle that vim normally uses. You didn't enter buffer so it shouldn't send `BufEnter` but you did read a file so it should run `FileReadCmd`. ",
            "created_at": "2019-05-27T18:40:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-496283052",
            "id": 496283052,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjI4MzA1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496283052/reactions"
            },
            "updated_at": "2023-11-15T20:22:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496283052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12656790?v=4",
                "events_url": "https://api.github.com/users/lanza/events{/privacy}",
                "followers_url": "https://api.github.com/users/lanza/followers",
                "following_url": "https://api.github.com/users/lanza/following{/other_user}",
                "gists_url": "https://api.github.com/users/lanza/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lanza",
                "id": 12656790,
                "login": "lanza",
                "node_id": "MDQ6VXNlcjEyNjU2Nzkw",
                "organizations_url": "https://api.github.com/users/lanza/orgs",
                "received_events_url": "https://api.github.com/users/lanza/received_events",
                "repos_url": "https://api.github.com/users/lanza/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lanza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lanza/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lanza",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> \"zero side effects\" doesn't seem to be the right goal. It should have all the effects that follow the autocmd based lifecycle that vim normally uses. You didn't enter buffer so it shouldn't send BufEnter but you did read a file so it should run FileReadCmd.\r\n\r\nYes, that is what I meant.",
            "created_at": "2019-05-27T19:11:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-496288076",
            "id": 496288076,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjI4ODA3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496288076/reactions"
            },
            "updated_at": "2019-05-27T19:11:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/496288076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The same issue also exists with `nvim_open_win` with unloaded file buffer: \r\n```\r\n\" or any existing file with expected ft detection\r\nlet b = bufadd(\"CMakeLists.txt\") \r\ncall nvim_open_win(b, v:false, {'width': 50, 'height': 5, 'relative': 'editor', 'row': 5, 'col': 5, 'style': 'minimal' })\r\n```\r\nThe filetype is not detected and loaded then either (reported by @tracyone on gitter).\r\n\r\nThis (and `nvim_win_set_buf`) should execute the `BufRead` (or `BufNewFile`) and `FileType` autocmds, but still not `BufEnter` or `WinEnter`.",
            "created_at": "2019-10-03T08:57:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-537854497",
            "id": 537854497,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzg1NDQ5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/537854497/reactions"
            },
            "updated_at": "2019-10-03T08:57:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/537854497",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "nothing need to be done with nvim_open_win, but the the ` bufadd（）` should be fixed.",
            "created_at": "2019-10-04T01:55:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-538196330",
            "id": 538196330,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzODE5NjMzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/538196330/reactions"
            },
            "updated_at": "2019-10-04T01:55:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/538196330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13142418?v=4",
                "events_url": "https://api.github.com/users/wsdjeg/events{/privacy}",
                "followers_url": "https://api.github.com/users/wsdjeg/followers",
                "following_url": "https://api.github.com/users/wsdjeg/following{/other_user}",
                "gists_url": "https://api.github.com/users/wsdjeg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wsdjeg",
                "id": 13142418,
                "login": "wsdjeg",
                "node_id": "MDQ6VXNlcjEzMTQyNDE4",
                "organizations_url": "https://api.github.com/users/wsdjeg/orgs",
                "received_events_url": "https://api.github.com/users/wsdjeg/received_events",
                "repos_url": "https://api.github.com/users/wsdjeg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wsdjeg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wsdjeg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wsdjeg",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> nothing need to be done with nvim_open_win, but the the bufadd（） should be fixed.\r\n\r\nWhat do you base this on? I don't think anything is wrong with `bufadd()`, this works well:\r\n```\r\nlet b = bufadd(\"CMakeLists.txt\") \r\nsplit | execute \"b \".b\r\n```\r\nftdetect and FileType is done when the buffer is first loaded. If this happens in `nvim_win_set_buf` or `nvim_win_open` it still need to be done.\r\n",
            "created_at": "2019-10-04T07:33:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-538281373",
            "id": 538281373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzODI4MTM3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/538281373/reactions"
            },
            "updated_at": "2019-10-04T07:33:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/538281373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Instead of adding a new bug report, I guess the following (wrong?) behavior of neovim is an effect of that issue:\r\n\r\n`:e minimal.yaml`\r\n`vnew | r ++edit #`\r\n\r\nAccording to the vim documentation, *The effect [of ++edit] is that the 'fileformat', 'fileencoding', 'bomb', etc. options are set to what has been detected for \"filename\". \r\n\r\nSo if this issue is the reason for this behavior, it is a regression too. If not, I'll file a new issue.",
            "created_at": "2020-03-02T14:28:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-593428874",
            "id": 593428874,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzQyODg3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/593428874/reactions"
            },
            "updated_at": "2020-03-02T14:28:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/593428874",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/160382?v=4",
                "events_url": "https://api.github.com/users/the42/events{/privacy}",
                "followers_url": "https://api.github.com/users/the42/followers",
                "following_url": "https://api.github.com/users/the42/following{/other_user}",
                "gists_url": "https://api.github.com/users/the42/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/the42",
                "id": 160382,
                "login": "the42",
                "node_id": "MDQ6VXNlcjE2MDM4Mg==",
                "organizations_url": "https://api.github.com/users/the42/orgs",
                "received_events_url": "https://api.github.com/users/the42/received_events",
                "repos_url": "https://api.github.com/users/the42/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/the42/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/the42/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/the42",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What's the right mental model for the current semantics of `nvim_win_set_buf` re: side-effects that do and don't happen? And with the changes planned to address this issue and https://github.com/neovim/neovim/issues/13201, what will the right mental model be for its future side-effect semantics?",
            "created_at": "2022-11-28T03:17:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-1328482047",
            "id": 1328482047,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "IC_kwDOAPphoM5PLwb_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1328482047/reactions"
            },
            "updated_at": "2022-11-28T03:17:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1328482047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> with the changes planned to address this issue and #13201, what will the right mental model be for its future side-effect semantics?\r\n\r\nI think it makes sense for _all_ buffer-related API functions (except `nvim_buf_is_loaded` and maybe `nvim_buf_is_valid`) to ensure the buffer is loaded, because the _common case_ is that plugins expect that. In the performance-sensitive, uncommon case, plugins can check `nvim_buf_is_loaded` to avoid implicitly loading a buffer.",
            "created_at": "2023-11-15T20:26:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-1813211322",
            "id": 1813211322,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "IC_kwDOAPphoM5sE2i6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1813211322/reactions"
            },
            "updated_at": "2023-11-15T20:26:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1813211322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "took a gander at this, hopefully this covers all the relevant cases #26666",
            "created_at": "2023-12-19T22:44:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-1863574892",
            "id": 1863574892,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "IC_kwDOAPphoM5vE-Vs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1863574892/reactions"
            },
            "updated_at": "2023-12-19T22:44:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1863574892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11444352?v=4",
                "events_url": "https://api.github.com/users/UsamaHameed/events{/privacy}",
                "followers_url": "https://api.github.com/users/UsamaHameed/followers",
                "following_url": "https://api.github.com/users/UsamaHameed/following{/other_user}",
                "gists_url": "https://api.github.com/users/UsamaHameed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/UsamaHameed",
                "id": 11444352,
                "login": "UsamaHameed",
                "node_id": "MDQ6VXNlcjExNDQ0MzUy",
                "organizations_url": "https://api.github.com/users/UsamaHameed/orgs",
                "received_events_url": "https://api.github.com/users/UsamaHameed/received_events",
                "repos_url": "https://api.github.com/users/UsamaHameed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/UsamaHameed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/UsamaHameed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/UsamaHameed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I recently tracked down an opaque error in a popular plugin that may be related to this issue. You can read more about it here: https://github.com/akinsho/bufferline.nvim/pull/928\r\n\r\nSuffice to say, I wonder if this issue may extend beyond just functions on the buffer to getters/setters on the buffer such as `buflisted` as well. Maybe someone with more Neovim expertise could chime in around whether or not that's possible.",
            "created_at": "2024-06-20T08:45:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-2180146301",
            "id": 2180146301,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "IC_kwDOAPphoM6B8mR9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180146301/reactions"
            },
            "updated_at": "2024-06-20T08:45:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180146301",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/709042?v=4",
                "events_url": "https://api.github.com/users/prettymuchbryce/events{/privacy}",
                "followers_url": "https://api.github.com/users/prettymuchbryce/followers",
                "following_url": "https://api.github.com/users/prettymuchbryce/following{/other_user}",
                "gists_url": "https://api.github.com/users/prettymuchbryce/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prettymuchbryce",
                "id": 709042,
                "login": "prettymuchbryce",
                "node_id": "MDQ6VXNlcjcwOTA0Mg==",
                "organizations_url": "https://api.github.com/users/prettymuchbryce/orgs",
                "received_events_url": "https://api.github.com/users/prettymuchbryce/received_events",
                "repos_url": "https://api.github.com/users/prettymuchbryce/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prettymuchbryce/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prettymuchbryce/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prettymuchbryce",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I will try to revisit https://github.com/neovim/neovim/pull/26666 this week",
            "created_at": "2024-06-20T12:48:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/10070#issuecomment-2180587744",
            "id": 2180587744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10070",
            "node_id": "IC_kwDOAPphoM6B-SDg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180587744/reactions"
            },
            "updated_at": "2024-06-20T12:48:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2180587744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/10070/comments",
    "created_at": "2019-05-27T08:23:50Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/10070/events",
    "html_url": "https://github.com/neovim/neovim/issues/10070",
    "id": 448727949,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, self-contained. Do NOT ask \"can I work on this\", just read CONTRIBUTING.md",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "",
            "id": 606691254,
            "name": "has:plan",
            "node_id": "MDU6TGFiZWw2MDY2OTEyNTQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:plan"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/10070/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU0NDg3Mjc5NDk=",
    "number": 10070,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/10070/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/10070/timeline",
    "title": "API: all buffer-related functions should ensure buffer is loaded",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/10070",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12656790?v=4",
        "events_url": "https://api.github.com/users/lanza/events{/privacy}",
        "followers_url": "https://api.github.com/users/lanza/followers",
        "following_url": "https://api.github.com/users/lanza/following{/other_user}",
        "gists_url": "https://api.github.com/users/lanza/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lanza",
        "id": 12656790,
        "login": "lanza",
        "node_id": "MDQ6VXNlcjEyNjU2Nzkw",
        "organizations_url": "https://api.github.com/users/lanza/orgs",
        "received_events_url": "https://api.github.com/users/lanza/received_events",
        "repos_url": "https://api.github.com/users/lanza/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lanza/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lanza/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lanza",
        "user_view_type": "public"
    }
}