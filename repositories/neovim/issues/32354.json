{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nFor example a doc test on a function of a parametrized impl block and the run the codelens action may result in an error message (\"The system cannot find the file specified\" on Windows 11)\n\nThis is caused by the generic type in the path of the test name that is passed without escaping or quoting. Both Linux and Windows interpret as an input and output redirect.\n\n```rust\nmod demo {\n    use std::fmt::Display;\n\n    pub struct Demo<D: Display> {\n        inner: D,\n    }\n\n    impl<D: Display> Demo<D> {\n        pub fn new(inner: D) -> Self {\n            Self { inner }\n        }\n\n        /// This doc test will not work, due to missing quotes around test path.\n        ///\n        /// ```\n        /// let y = 42;\n        /// assert_eq!( y, 42 );\n        /// ```\n        pub fn demonstrate(&self) -> String {\n            self.inner.to_string()\n        }\n    }\n}\n\nfn main() {\n    let d = demo::Demo::new(\"world\");\n    println!(\"Hello {}\", d.demonstrate());\n}\n```\n\nExecuting the code lens action at the demonstrate function will try to execute:\n\n```bash\ncargo test --doc --package rustsample --all-features -- demo::Demo<D>::demonstrate --show-output\n```\n\nThis should be:\n\n```bash\ncargo test --doc --package rustsample --all-features -- \"demo::Demo<D>::demonstrate\" --show-output\n```\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\n1. start nvim with the above source file\n2. navigate to the line #13 (the first line of the doc test)\n3. execute: `:lua vim.lsp.codelens.run()`\n\n\n### Expected behavior\n\n_No response_\n\n### Nvim version (nvim -v)\n\nv0.10.4\n\n### Language server name/version\n\nrust-analyzer 1.84.1 (e71f9a9a 2025-01-27)\n\n### Operating system/version\n\nMicrosoft Windows 11 Pro, 10.0.26100 Build 26100\n\n### Log file\n\n_No response_",
    "closed_at": "2025-02-10T19:31:45Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Do you use any client side rust extensions? \nCode lens can't spawn cargo processes with stock functionality. \n\nThey only contain LSP commands which are either\n- server command - which are limited to certain file modifications (edits, create, delete, ...)\n- client commands - these can spawn processes but neovim core only contains a registry. Implementations are done outside because so far no concrete client commands are defined in the specification",
            "created_at": "2025-02-07T11:36:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/32354#issuecomment-2642690599",
            "id": 2642690599,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32354",
            "node_id": "IC_kwDOAPphoM6dhEIn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2642690599/reactions"
            },
            "updated_at": "2025-02-07T13:12:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2642690599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for your response. I do indeed use LazyVim plus extra plugins to have a fully functional Rust IDE. As an end-user, I have no idea which one of them spawns the Cargo command.\n\nStill, in the end, this client plugin will have to call something like execCommand or so to perform the desired action. At this level, shouldn't parameters be sanitized by Vim to not conflict with OS special characters like &, |, <, >, and / or \\",
            "created_at": "2025-02-10T18:52:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/32354#issuecomment-2648946282",
            "id": 2648946282,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32354",
            "node_id": "IC_kwDOAPphoM6d47Zq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2648946282/reactions"
            },
            "updated_at": "2025-02-10T18:52:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2648946282",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2477593?v=4",
                "events_url": "https://api.github.com/users/HaKr/events{/privacy}",
                "followers_url": "https://api.github.com/users/HaKr/followers",
                "following_url": "https://api.github.com/users/HaKr/following{/other_user}",
                "gists_url": "https://api.github.com/users/HaKr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HaKr",
                "id": 2477593,
                "login": "HaKr",
                "node_id": "MDQ6VXNlcjI0Nzc1OTM=",
                "organizations_url": "https://api.github.com/users/HaKr/orgs",
                "received_events_url": "https://api.github.com/users/HaKr/received_events",
                "repos_url": "https://api.github.com/users/HaKr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HaKr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HaKr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HaKr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The sanitization would have to be done by the plugin.",
            "created_at": "2025-02-10T19:31:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/32354#issuecomment-2649043513",
            "id": 2649043513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32354",
            "node_id": "IC_kwDOAPphoM6d5TI5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2649043513/reactions"
            },
            "updated_at": "2025-02-10T19:31:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2649043513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32354/comments",
    "created_at": "2025-02-06T15:16:41Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32354/events",
    "html_url": "https://github.com/neovim/neovim/issues/32354",
    "id": 2835818057,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32354/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6pByZJ",
    "number": 32354,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32354/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32354/timeline",
    "title": "LSP: rust-analyzer runs cargo without quotes around parameters, but these may contain < and > characters due to generic types",
    "updated_at": "2025-02-10T19:31:46Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32354",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2477593?v=4",
        "events_url": "https://api.github.com/users/HaKr/events{/privacy}",
        "followers_url": "https://api.github.com/users/HaKr/followers",
        "following_url": "https://api.github.com/users/HaKr/following{/other_user}",
        "gists_url": "https://api.github.com/users/HaKr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/HaKr",
        "id": 2477593,
        "login": "HaKr",
        "node_id": "MDQ6VXNlcjI0Nzc1OTM=",
        "organizations_url": "https://api.github.com/users/HaKr/orgs",
        "received_events_url": "https://api.github.com/users/HaKr/received_events",
        "repos_url": "https://api.github.com/users/HaKr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/HaKr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/HaKr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/HaKr",
        "user_view_type": "public"
    }
}