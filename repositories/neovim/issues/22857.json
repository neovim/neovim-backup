{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nThe current API is not as well-typed it could be. This is an issue when attempting to automatically generate ergonomic API clients for strongly statically typed languages.\r\n\r\nHere are a few examples:\r\n- \"nvim_get_autocmds\":\r\n  + Current: \"parameters\": [ [ \"Dictionary\", \"opts\" ] ], \"return_type\": \"Array\",\r\n  + Improve: \"parameters\": [ [ \"Dictionary\", \"opts\" ] ], \"return_type\": \"ArrayOf(Dictionary)\"\r\n- \"nvim_exec_lua\":\r\n  + Current: \"parameters\": [ [ \"String\", \"code\" ], [ \"Array\", \"args\" ] ], \"return_type\": \"Object\"\r\n  + Improve: \"parameters\": [ [ \"String\", \"code\" ], [ \"ArrayOf(Object)\", \"args\" ] ], \"return_type\": \"Object\"\r\n- \"nvim_echo\":\r\n  + Current: \"parameters\": [ [ \"Array\", \"chunks\" ], [ \"Boolean\", \"history\" ], [ \"Dictionary\", \"opts\" ] ], \"return_type\": \"void\"\r\n  + Improve: \"parameters\": [ [ \"ArrayOf(ArrayOf(String, 2))\", \"chunks\" ], [ \"Boolean\", \"history\" ], [ \"Dictionary\", \"opts\" ] ], \"return_type\": \"void\"\r\n- \"nvim_get_proc\":\r\n  + Current: \"parameters\": [ [ \"Integer\", \"pid\" ] ], \"return_type\": \"Object\",\r\n  + Improve: \"parameters\": [ [ \"Integer\", \"pid\" ] ], \"return_type\": \"Dictionary\",\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "how is `ArrayOf(Object)` distinct from just `Array` ?",
            "created_at": "2023-04-01T21:10:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1493123718",
            "id": 1493123718,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5Y_0KG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493123718/reactions"
            },
            "updated_at": "2023-04-01T21:10:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493123718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I haven't seen `Array` described as an alias to `ArrayOf(Object)` anywhere in the user documentation, but if it is, that's fine with me :).",
            "created_at": "2023-04-02T05:56:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1493231994",
            "id": 1493231994,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5ZAOl6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493231994/reactions"
            },
            "updated_at": "2023-04-02T05:56:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493231994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@glacambre but what would the difference have been in the first place? The documentation doesn't need to describe a type  which _doesn't yet exist_. if you want to introduce it, you have to tell us what it should mean.",
            "created_at": "2023-04-02T09:19:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1493276050",
            "id": 1493276050,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5ZAZWS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493276050/reactions"
            },
            "updated_at": "2023-04-02T09:27:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493276050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@bfredl The reason I stumbled on this is that when I started writing my parser generator, I only handled the cases that used ArrayOf, because the documentation only mentionned that:\r\n```\r\n- Container types may be decorated with type/size constraints, e.g. ArrayOf(Buffer) or ArrayOf(Integer, 2).\r\n```\r\n\r\nI now realize that my previous message was unclear: I'm not advocating for documenting `Array` as an alias of `Array(Object)` - what I meant with \"if it is, that's fine with me\" was that I'm okay with being `Array` being an alias to `ArrayOf(Object)`. I can remove this example from the list of examples I gave if you want :).",
            "created_at": "2023-04-02T12:55:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1493324607",
            "id": 1493324607,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5ZAlM_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493324607/reactions"
            },
            "updated_at": "2023-04-02T12:55:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493324607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The basic types are documented earlier in |api-types| (very tersely, the idea is they map 1:1 to the categories of msgpack base types. this could be made clearer I guess). Constraints are _optional_ and doesn't change the representation of the value (neither in C nor in msgpack). ",
            "created_at": "2023-04-02T13:40:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1493336689",
            "id": 1493336689,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5ZAoJx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493336689/reactions"
            },
            "updated_at": "2023-04-02T13:40:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493336689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@glacambre can you add `nvim_load_context` to your list? It reports a return type of `Object`, but it seems to [always return `Nil`](https://github.com/neovim/neovim/blob/ae9654dd7336e263e18ca7da4a40a25ec684002d/src/nvim/api/vim.c#L1371). I think its return type should be marked void.",
            "created_at": "2023-04-15T18:40:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1509924492",
            "id": 1509924492,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5Z_56M",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509924492/reactions"
            },
            "updated_at": "2023-04-15T18:40:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509924492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Another example is `nvim_notify`, which also appears to only return `Nil` - more specifically, it [returns the result of `vim.notify`](https://github.com/neovim/neovim/blob/ae9654dd7336e263e18ca7da4a40a25ec684002d/src/nvim/api/vim.c#L471), which [doesn't have a `return` statement](https://github.com/neovim/neovim/blob/9e86f473e0f4e21c5f40bf990c53194d593a0f9f/runtime/lua/vim/_editor.lua#L511-L519).",
            "created_at": "2023-04-15T21:07:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1509969422",
            "id": 1509969422,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5aAE4O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509969422/reactions"
            },
            "updated_at": "2023-04-15T21:07:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509969422",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm also curious whether the `command` parameter for `nvim_create_user_command` and `nvim_buf_create_user_command` should be typed as `String` instead of `Object`, as it looks like for remote clients the only option is to provide a replacement command to invoke -- the Lua function version can only be provided when called from Lua. My assumption here is that `--api-info` is not relevant for Lua plugins.",
            "created_at": "2023-04-17T01:33:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1510570534",
            "id": 1510570534,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5aCXom",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1510570534/reactions"
            },
            "updated_at": "2023-04-17T01:33:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1510570534",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm new to Teal and currently working on making a PR to a plugin that enforces its use for contributing. However, I'm encountering errors when trying to use the `nvim_get_autocmds` and `nvim_clear_autocmds` functions. The version of Neovim I'm using is **master**, and my **TL_VERSION** is **0.14.1**.\r\n\r\nHere's the errors I'm getting:\r\n```bash\r\ninvalid key 'nvim_get_autocmds' in record 'api' of type api\r\ninvalid key 'nvim_clear_autocmds' in record 'api' of type api\r\n```\r\nI'm eager to resolve this issue and successfully execute `tl build` without encountering any errors. I'm considering contributing to Neovim to improve the typing of these functions. Are there any resources or references you could recommend that would help me understand the topic better?\r\n\r\nAlternatively, if there is a Teal-specific approach to handle this error until a resolution is found, I would appreciate any guidance on how to proceed. Although I understand that the latter may not be the ideal solution, I'm still open to exploring it.\r\n\r\nBy contributing to Neovim, I hope to extend my involvement beyond the plugin ecosystem. Any advice or suggestions you can provide would be highly appreciated.",
            "created_at": "2023-05-19T10:22:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1554358937",
            "id": 1554358937,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5cpaKZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554358937/reactions"
            },
            "updated_at": "2023-05-19T10:27:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554358937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/123820099?v=4",
                "events_url": "https://api.github.com/users/lnc3l0t/events{/privacy}",
                "followers_url": "https://api.github.com/users/lnc3l0t/followers",
                "following_url": "https://api.github.com/users/lnc3l0t/following{/other_user}",
                "gists_url": "https://api.github.com/users/lnc3l0t/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lnc3l0t",
                "id": 123820099,
                "login": "lnc3l0t",
                "node_id": "U_kgDOB2FYQw",
                "organizations_url": "https://api.github.com/users/lnc3l0t/orgs",
                "received_events_url": "https://api.github.com/users/lnc3l0t/received_events",
                "repos_url": "https://api.github.com/users/lnc3l0t/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lnc3l0t/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lnc3l0t/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lnc3l0t",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This issue has nothing to do with Teal",
            "created_at": "2023-05-19T10:27:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1554364478",
            "id": 1554364478,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5cpbg-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554364478/reactions"
            },
            "updated_at": "2023-05-19T10:27:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554364478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry I was mislead. I will research more about my problem. Thank you for the feedback, and also for your work, @lewis6991. You have been an inspiration to me and have been one of the motivation for me to contribute to nvim plugins. It may not have been a good start with my noob question, but everyone has to start somewhere.",
            "created_at": "2023-05-19T19:50:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/22857#issuecomment-1555157397",
            "id": 1555157397,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22857",
            "node_id": "IC_kwDOAPphoM5csdGV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555157397/reactions"
            },
            "updated_at": "2023-05-19T19:50:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555157397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/123820099?v=4",
                "events_url": "https://api.github.com/users/lnc3l0t/events{/privacy}",
                "followers_url": "https://api.github.com/users/lnc3l0t/followers",
                "following_url": "https://api.github.com/users/lnc3l0t/following{/other_user}",
                "gists_url": "https://api.github.com/users/lnc3l0t/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lnc3l0t",
                "id": 123820099,
                "login": "lnc3l0t",
                "node_id": "U_kgDOB2FYQw",
                "organizations_url": "https://api.github.com/users/lnc3l0t/orgs",
                "received_events_url": "https://api.github.com/users/lnc3l0t/received_events",
                "repos_url": "https://api.github.com/users/lnc3l0t/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lnc3l0t/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lnc3l0t/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lnc3l0t",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/22857/comments",
    "created_at": "2023-04-01T17:49:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/22857/events",
    "html_url": "https://github.com/neovim/neovim/issues/22857",
    "id": 1650576713,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/22857/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5iYc1J",
    "number": 22857,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/22857/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/22857/timeline",
    "title": "API Info: some functions are incorrectly typed",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:38:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/22857",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
        "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
        "followers_url": "https://api.github.com/users/glacambre/followers",
        "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
        "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glacambre",
        "id": 11534587,
        "login": "glacambre",
        "node_id": "MDQ6VXNlcjExNTM0NTg3",
        "organizations_url": "https://api.github.com/users/glacambre/orgs",
        "received_events_url": "https://api.github.com/users/glacambre/received_events",
        "repos_url": "https://api.github.com/users/glacambre/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glacambre",
        "user_view_type": "public"
    }
}