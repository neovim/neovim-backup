{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "- `nvim --version`:\r\n```\r\nNVIM v0.3.0\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.0.5\r\nCompilation: C:/msys64/mingw64/bin/gcc.exe -Wconversion -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -O2 -g -DMI\r\nN_LOG_LEVEL=3 -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wimplicit-fallthrough\r\n -D__USE_MINGW_ANSI_STDIO -D_WIN32_WINNT=0x0600 -Wvla -fdiagnostics-color=auto -Wno-array-bounds -DINCLUDE_GENERATED_DEC\r\nLARATIONS -IC:/projects/neovim/build/config -IC:/projects/neovim/src -IC:/projects/neovim/.deps/usr/include -IC:/msys64/\r\nmingw64/include -IC:/projects/neovim/build/src/nvim/auto -IC:/projects/neovim/build/include\r\nCompiled by appveyor@APPVYR-WIN\r\n\r\n\r\nFeatures: -acl +iconv -jemalloc +tui\r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM\\sysinit.vim\"\r\n  fall-back for $VIM: \"C:/Program Files (x86)/nvim/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```\r\n- Operating system/version: Windows 10 Pro 1703 15063.1115\r\n- Terminal name/version:\r\n- `$TERM`:\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\n```\r\nnvim -u NORC\r\n:q\r\n```\r\n\r\n### Actual behaviour\r\n![nvime138repro](https://user-images.githubusercontent.com/2086176/41547037-614b1a5a-72dc-11e8-8d70-e1ed595e3d9e.gif)\r\n\r\n### Expected behaviour\r\nClose without error.\r\n",
    "closed_at": null,
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
        "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
        "followers_url": "https://api.github.com/users/ZyX-I/followers",
        "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
        "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ZyX-I",
        "id": 322097,
        "login": "ZyX-I",
        "node_id": "MDQ6VXNlcjMyMjA5Nw==",
        "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
        "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
        "repos_url": "https://api.github.com/users/ZyX-I/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ZyX-I",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is the expected behaviour if you somehow generated all temporary files. You should’ve had a bunch of errors explaining why those temporary files could not be renamed to replace the `main.shada` file before having this error. On linux that would be most likely some permission issue (e.g. `main.shada` was created by root so Neovim could not overwrite it), not sure about Windows. You must remove `main.shada`, rename most recent of the temporary files to `main.shada`, remove other temporary files and solve the issue that caused generation of temporary files.",
            "created_at": "2018-06-18T22:34:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-398216623",
            "id": 398216623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODIxNjYyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 2,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/398216623/reactions"
            },
            "updated_at": "2018-06-18T22:34:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/398216623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Think this can also happen when /home partition runs out of space.",
            "created_at": "2020-11-08T12:37:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-723571809",
            "id": 723571809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzU3MTgwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/723571809/reactions"
            },
            "updated_at": "2020-11-08T12:37:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/723571809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4551018?v=4",
                "events_url": "https://api.github.com/users/laur89/events{/privacy}",
                "followers_url": "https://api.github.com/users/laur89/followers",
                "following_url": "https://api.github.com/users/laur89/following{/other_user}",
                "gists_url": "https://api.github.com/users/laur89/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/laur89",
                "id": 4551018,
                "login": "laur89",
                "node_id": "MDQ6VXNlcjQ1NTEwMTg=",
                "organizations_url": "https://api.github.com/users/laur89/orgs",
                "received_events_url": "https://api.github.com/users/laur89/received_events",
                "repos_url": "https://api.github.com/users/laur89/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/laur89/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/laur89/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/laur89",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Related #11955. Temporary fix is to manually delete `N` oldest and empty files in `/home/user/.local/share/nvim/shada`.",
            "created_at": "2022-03-28T06:45:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-1080261597",
            "id": 1080261597,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM5AY3vd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1080261597/reactions"
            },
            "updated_at": "2022-03-28T06:45:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1080261597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45873379?v=4",
                "events_url": "https://api.github.com/users/tejasvi/events{/privacy}",
                "followers_url": "https://api.github.com/users/tejasvi/followers",
                "following_url": "https://api.github.com/users/tejasvi/following{/other_user}",
                "gists_url": "https://api.github.com/users/tejasvi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tejasvi",
                "id": 45873379,
                "login": "tejasvi",
                "node_id": "MDQ6VXNlcjQ1ODczMzc5",
                "organizations_url": "https://api.github.com/users/tejasvi/orgs",
                "received_events_url": "https://api.github.com/users/tejasvi/received_events",
                "repos_url": "https://api.github.com/users/tejasvi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tejasvi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tejasvi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tejasvi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@dundargoc Just experienced this issue recently. Is deleting the  files mentioned in previous comments still a good temp fix?\r\n\r\n`.local/share/nvim/shada/main.shada.tmp.X files exist, cannot write ShaDa file!`",
            "created_at": "2022-08-11T14:14:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-1212047536",
            "id": 1212047536,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM5IPmCw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212047536/reactions"
            },
            "updated_at": "2022-08-11T14:15:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212047536",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5202527?v=4",
                "events_url": "https://api.github.com/users/kaykhan/events{/privacy}",
                "followers_url": "https://api.github.com/users/kaykhan/followers",
                "following_url": "https://api.github.com/users/kaykhan/following{/other_user}",
                "gists_url": "https://api.github.com/users/kaykhan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kaykhan",
                "id": 5202527,
                "login": "kaykhan",
                "node_id": "MDQ6VXNlcjUyMDI1Mjc=",
                "organizations_url": "https://api.github.com/users/kaykhan/orgs",
                "received_events_url": "https://api.github.com/users/kaykhan/received_events",
                "repos_url": "https://api.github.com/users/kaykhan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kaykhan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kaykhan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kaykhan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "In Windows, the path to delete the `shada` files is:\r\n```\r\n~AppData\\Local\\nvim-data\\shada\r\n```\r\n\r\nMeaning that, if your username is `Example`, then:\r\n```\r\nC:\\Users\\Example\\AppData\\Local\\nvim-data\\shada\r\n```\r\n\r\nYou can also access the folder in Windows file explorer using `%LOCALAPPDATA%`:\r\n```\r\n%LOCALAPPDATA%/nvim-data/shada\r\n```\r\n\r\n---\r\n\r\nFor what it's worth sharing, I experience this a lot with [vscode-neovim](https://github.com/vscode-neovim/vscode-neovim) extension.",
            "created_at": "2023-07-29T08:54:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-1656643933",
            "id": 1656643933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM5ivmFd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 10,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656643933/reactions"
            },
            "updated_at": "2023-07-29T08:54:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656643933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67554982?v=4",
                "events_url": "https://api.github.com/users/mohammadxali/events{/privacy}",
                "followers_url": "https://api.github.com/users/mohammadxali/followers",
                "following_url": "https://api.github.com/users/mohammadxali/following{/other_user}",
                "gists_url": "https://api.github.com/users/mohammadxali/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mohammadxali",
                "id": 67554982,
                "login": "mohammadxali",
                "node_id": "MDQ6VXNlcjY3NTU0OTgy",
                "organizations_url": "https://api.github.com/users/mohammadxali/orgs",
                "received_events_url": "https://api.github.com/users/mohammadxali/received_events",
                "repos_url": "https://api.github.com/users/mohammadxali/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mohammadxali/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mohammadxali/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mohammadxali",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am on Windows 11 and I have had to clear out my shada files 3 times in the last couple weeks as they would fill up with a-z tmp and then stop writing at all. @justinmk unfortunately I cannot provide useful logs because I opened up my log file and it has 44,000 lines in it! It appears most of them are treesitter highlighter errors. On this note, is there a good way to purge the log file? should I just delete the contents and let it start writing to an empty file? thanks.",
            "created_at": "2024-02-23T23:37:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-1962138138",
            "id": 1962138138,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM5089oa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1962138138/reactions"
            },
            "updated_at": "2024-02-23T23:37:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1962138138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "So I checked my folder, and everything looks writable just fine, but having lots of files changed at the same time with same size is looking odd.\r\n```sh\r\n❯ echo $UID\r\n1000\r\n❯ ls -ahln ~/.local/state/nvim/shada\r\ntotal 640K\r\ndrwx------ 1 1000 1000  880 Jan 28 21:52 .\r\ndrwx------ 1 1000 1000   32 Jan 18  2023 ..\r\n-rw------- 1 1000 1000  28K Jan 28 21:31 main.shada\r\n-rw------- 1 1000 1000  48K Jun 25  2023 main.shada.bak\r\n-rw------- 1 1000 1000  14K Jun 25  2023 main.shada.tmp.a\r\n-rw------- 1 1000 1000  13K Jun 26  2023 main.shada.tmp.b\r\n-rw------- 1 1000 1000  13K Jun 26  2023 main.shada.tmp.c\r\n-rw------- 1 1000 1000  13K Jun 26  2023 main.shada.tmp.d\r\n-rw------- 1 1000 1000  13K Jun 27  2023 main.shada.tmp.e\r\n-rw------- 1 1000 1000  13K Jun 27  2023 main.shada.tmp.f\r\n-rw------- 1 1000 1000  13K Jun 27  2023 main.shada.tmp.g\r\n-rw------- 1 1000 1000  33K Jan  9 02:23 main.shada.tmp.h\r\n-rw------- 1 1000 1000  52K Jan 26 09:41 main.shada.tmp.i\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.j\r\n-rw------- 1 1000 1000  52K Jan 26 09:41 main.shada.tmp.k\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.l\r\n-rw------- 1 1000 1000  52K Jan 26 09:41 main.shada.tmp.m\r\n-rw------- 1 1000 1000  52K Jan 26 09:41 main.shada.tmp.n\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.o\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.p\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.q\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.r\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.s\r\n-rw------- 1 1000 1000    0 Jan 28 21:52 main.shada.tmp.t\r\n-rw------- 1 1000 1000  52K Jan 26 09:41 main.shada.tmp.u\r\n-rw------- 1 1000 1000  52K Jan 26 09:41 main.shada.tmp.v\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.w\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.x\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.y\r\n-rw------- 1 1000 1000 9.1K Jan 26 09:41 main.shada.tmp.z\r\n❯ date\r\nFri 08 Mar 2024 15:46:55 EAT\r\n```\r\n\r\nUnfortunately when I reproduce the error absolutely nothing appears in the log:\r\n```sh\r\n❯ tail -f log\r\nWRN 2024-03-02T10:00:22.055 nvim.1144312.0 ga_set_growsize:61: trying to set an invalid ga_growsize: 0\r\nWRN 2024-03-02T10:24:56.496 nvim.1174612.0 ga_set_growsize:61: trying to set an invalid ga_growsize: 0\r\nWRN 2024-03-02T10:30:37.141 nvim.1182470.0 ga_set_growsize:61: trying to set an invalid ga_growsize: 0\r\nERR 2024-03-02T12:26:23.583 nvim.1334296.0 os_set_cloexec:495: Failed to get flags on descriptor 3: Bad file descriptor\r\nERR 2024-03-02T12:26:48.090 nvim.1335121.0 os_set_cloexec:495: Failed to get flags on descriptor 3: Bad file descriptor\r\nERR 2024-03-02T13:55:21.771 nvim.1394598.0 os_set_cloexec:495: Failed to get flags on descriptor 3: Bad file descriptor\r\nWRN 2024-03-05T17:16:32.712 nvim.531511.0 ga_set_growsize:61: trying to set an invalid ga_growsize: 0\r\nWRN 2024-03-05T17:17:32.621 nvim.532698.0 ga_set_growsize:61: trying to set an invalid ga_growsize: 0\r\nERR 2024-03-08T11:47:24.411 nvim.164830.0 os_set_cloexec:495: Failed to get flags on descriptor 3: Bad file descriptor\r\nWRN 2024-03-08T15:32:39.812 nvim.191136.0 ga_set_growsize:61: trying to set an invalid ga_growsize: 0\r\n```\r\n\r\nSo why is nvim not deleting the oldest ones by itself?",
            "created_at": "2024-03-08T12:49:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-1985637540",
            "id": 1985637540,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM52Wmyk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1985637540/reactions"
            },
            "updated_at": "2024-03-08T12:49:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1985637540",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13354331?v=4",
                "events_url": "https://api.github.com/users/xeruf/events{/privacy}",
                "followers_url": "https://api.github.com/users/xeruf/followers",
                "following_url": "https://api.github.com/users/xeruf/following{/other_user}",
                "gists_url": "https://api.github.com/users/xeruf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xeruf",
                "id": 13354331,
                "login": "xeruf",
                "node_id": "MDQ6VXNlcjEzMzU0MzMx",
                "organizations_url": "https://api.github.com/users/xeruf/orgs",
                "received_events_url": "https://api.github.com/users/xeruf/received_events",
                "repos_url": "https://api.github.com/users/xeruf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xeruf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xeruf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xeruf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm running Windows 10 and I periodically install the latest development prerelease using the zip. A while after upgrading the first time (just extracting the zip over the existing installation) the same error appeared in my neovim instance when closing the editor:\r\n\r\n`E138: main.shada.tmp.X files exist, cannot write ShaDa file!\" on close`\r\n\r\nI did a :checkhealth and found the following error:\r\n```\r\n- $VIMRUNTIME: C:\\Tools\\neovim\\nvim-win64\\share/nvim/runtime\r\n- ERROR Found old files in $VIMRUNTIME (this can cause weird behavior):\r\n\tC:\\Tools\\neovim\\nvim-win64\\share/nvim/runtime/plugin/health.vim\r\n\tC:\\Tools\\neovim\\nvim-win64\\share/nvim/runtime/autoload/health/provider.vim\r\n\r\n- ADVICE:\r\n\t- Delete the $VIMRUNTIME directory (or uninstall Nvim), then reinstall Nvim.\r\n```\r\n\r\n---\r\n\r\n# Solution:\r\n- Remove all _main.shada.tmp.X_ files.\r\n- Copy the existing _main.shada_ to _main.shada-copy_\r\n- Remove the original _main.shada_ and rename the _main.shada-copy_ back to _main.shada_\r\n- Remove the folder C:\\Tools\\neovim\\nvim-win64\\share\\nvim\\runtime\r\n- Install the latest neovim (prerelease for me) over the existing installation. (extract and replace all files)\r\n\r\n---\r\n\r\n# My thoughts\r\n\r\nI tested it with starting and closing neovim a few times while having an eye on the _shada_ folder. The main.shada file would be changed and no temp files were left after neovim was closed\r\n\r\nI think it's actually an user error and not a bug. The checkhealth clearly states that an unclean runtime can lead to unexpected behaviour. \r\n\r\nHope I could help.",
            "created_at": "2024-03-20T14:42:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2009738570",
            "id": 2009738570,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM53yi1K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009738570/reactions"
            },
            "updated_at": "2024-03-20T14:42:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009738570",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43034898?v=4",
                "events_url": "https://api.github.com/users/sevi-kun/events{/privacy}",
                "followers_url": "https://api.github.com/users/sevi-kun/followers",
                "following_url": "https://api.github.com/users/sevi-kun/following{/other_user}",
                "gists_url": "https://api.github.com/users/sevi-kun/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sevi-kun",
                "id": 43034898,
                "login": "sevi-kun",
                "node_id": "MDQ6VXNlcjQzMDM0ODk4",
                "organizations_url": "https://api.github.com/users/sevi-kun/orgs",
                "received_events_url": "https://api.github.com/users/sevi-kun/received_events",
                "repos_url": "https://api.github.com/users/sevi-kun/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sevi-kun/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sevi-kun/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sevi-kun",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@sevi-kun thank you for your help and details! But for me this is not my issue. My health check is clean and when I reinstall nvim nightly I do not see any issues. It happens randomly at different times. Sometimes within a day or two, other times is fine for a couple weeks and then something fills up the temp shada files.",
            "created_at": "2024-03-21T06:32:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2011310796",
            "id": 2011310796,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM534irM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2011310796/reactions"
            },
            "updated_at": "2024-03-21T06:32:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2011310796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This as a cronjob could provide a decent workaround - deleting the oldest shada files beyond the count of 20:\r\n\r\n    find $XDG_STATE_HOME/nvim/shada -type f -printf '%T+ %p\\n' | sort -r | tail +20 | awk '{print $2}' | xargs -r rm\r\n\r\nThough I am kind of shocked how such an annoying and seemingly simple to fix bug (just overwrite the oldest one automatically?) has stayed open for so many years...",
            "created_at": "2024-04-08T05:21:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2041886480",
            "id": 2041886480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM55tLcQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2041886480/reactions"
            },
            "updated_at": "2024-04-08T05:21:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2041886480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13354331?v=4",
                "events_url": "https://api.github.com/users/xeruf/events{/privacy}",
                "followers_url": "https://api.github.com/users/xeruf/followers",
                "following_url": "https://api.github.com/users/xeruf/following{/other_user}",
                "gists_url": "https://api.github.com/users/xeruf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xeruf",
                "id": 13354331,
                "login": "xeruf",
                "node_id": "MDQ6VXNlcjEzMzU0MzMx",
                "organizations_url": "https://api.github.com/users/xeruf/orgs",
                "received_events_url": "https://api.github.com/users/xeruf/received_events",
                "repos_url": "https://api.github.com/users/xeruf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xeruf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xeruf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xeruf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Seeing this as well. `Microsoft Windows 10 Pro Version 10.0.19045 Build 19045`\r\n## NVIM logs (`:edit $NVIM_LOG_FILE`):\r\n```\r\nERR 2024-06-14T14:58:17.264 nvim.19784.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\G0yKJS\\\r\nERR 2024-06-14T14:58:34.258 nvim.19784.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\BkDQ6o\\\r\nERR 2024-06-14T14:59:25.616 nvim.4728.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\IdnE3n\\\r\nERR 2024-06-14T16:21:03.962 nvim.22336.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\MevqdW\\\r\nERR 2024-06-14T16:46:07.112 nvim.13360.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\mrVPOS\\\r\nERR 2024-06-14T16:48:23.375 nvim.13360.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\dy7zai\\\r\nERR 2024-06-14T16:48:45.983 nvim.15828.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\RTtW4x\\\r\nERR 2024-06-14T16:50:17.194 nvim.22344.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\YFYJwX\\\r\nERR 2024-06-17T11:02:40.258 nvim.22348.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\eokUnf\\\r\nERR 2024-06-17T11:02:43.253 nvim.22348.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\71lvCe\\\r\nERR 2024-06-17T11:02:57.390 nvim.22348.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\E9SJYB\\\r\nERR 2024-06-17T11:02:58.673 nvim.22348.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\5eR0qQ\\\r\nERR 2024-06-17T15:09:00.192 nvim.24468.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\vVSOZt\\\r\nERR 2024-06-17T15:44:46.418 nvim.24468.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\2D2sCS\\\r\nERR 2024-06-17T15:44:48.575 nvim.24468.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\ktFkMq\\\r\nERR 2024-06-17T15:44:49.975 nvim.24468.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\u3VmDI\\\r\nERR 2024-06-17T15:54:12.300 nvim.24468.0/c vim_gettempdir:3494: tempdir disappeared (antivirus or broken cleanup job?): C:\\Users\\XXXX\\AppData\\Local\\Temp\\nvim.0\\vrE38V\\\r\n```\r\n\r\nMaybe something to do with my antivirus? I'm running `Cybereason NGAV` as well as `Trend Micro Apex One`",
            "created_at": "2024-06-18T00:01:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2174652995",
            "id": 2174652995,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6BnpJD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174652995/reactions"
            },
            "updated_at": "2024-06-18T00:01:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174652995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66931618?v=4",
                "events_url": "https://api.github.com/users/wcheek/events{/privacy}",
                "followers_url": "https://api.github.com/users/wcheek/followers",
                "following_url": "https://api.github.com/users/wcheek/following{/other_user}",
                "gists_url": "https://api.github.com/users/wcheek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wcheek",
                "id": 66931618,
                "login": "wcheek",
                "node_id": "MDQ6VXNlcjY2OTMxNjE4",
                "organizations_url": "https://api.github.com/users/wcheek/orgs",
                "received_events_url": "https://api.github.com/users/wcheek/received_events",
                "repos_url": "https://api.github.com/users/wcheek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wcheek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wcheek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wcheek",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "So yet another solution to this problem is a command to delete all of your 'tmp' shada files, I created the following:\r\n```lua\r\nvim.api.nvim_create_user_command(\"ClearShada\", function()\r\n        local shada_path = vim.fn.expand(vim.fn.stdpath('data') .. \"/shada\")\r\n        local files = vim.fn.glob(shada_path .. \"/*\", false, true)\r\n        local all_success = 0\r\n        for _, file in ipairs(files) do\r\n            local file_name = vim.fn.fnamemodify(file, \":t\")\r\n            if file_name == \"main.shada\" then\r\n                -- skip your main.shada file\r\n                goto continue\r\n            end\r\n            local success = vim.fn.delete(file)\r\n            all_success = all_success + success\r\n            if success ~= 0 then\r\n                vim.notify(\"Couldn't delete file '\" .. file_name .. \"'\", vim.log.levels.WARN)\r\n            end\r\n            ::continue::\r\n        end\r\n        if all_success == 0 then\r\n            vim.print(\"Successfully deleted all temporary shada files\")\r\n        end\r\n    end,\r\n    { desc = \"Clears all the .tmp shada files\" }\r\n)\r\n```\r\nThis would be maybe even better when turned into an appropriate autocmd that listens in on the right event type to delete these files.\r\n\r\nNote that I only use this on windows, as I never had any issues with these files on linux.",
            "created_at": "2024-06-18T15:34:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2176399196",
            "id": 2176399196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6BuTdc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2176399196/reactions"
            },
            "updated_at": "2024-06-18T15:34:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2176399196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/94313592?v=4",
                "events_url": "https://api.github.com/users/BinaryFly/events{/privacy}",
                "followers_url": "https://api.github.com/users/BinaryFly/followers",
                "following_url": "https://api.github.com/users/BinaryFly/following{/other_user}",
                "gists_url": "https://api.github.com/users/BinaryFly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BinaryFly",
                "id": 94313592,
                "login": "BinaryFly",
                "node_id": "U_kgDOBZ8ceA",
                "organizations_url": "https://api.github.com/users/BinaryFly/orgs",
                "received_events_url": "https://api.github.com/users/BinaryFly/received_events",
                "repos_url": "https://api.github.com/users/BinaryFly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BinaryFly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BinaryFly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BinaryFly",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Since it is implied how to do file system watches on Windows as next step:\r\n- https://powershell.one/tricks/filesystem/filesystemwatcher\r\n- https://superuser.com/questions/226828/how-to-monitor-a-folder-and-trigger-a-command-line-action-when-a-file-is-created\r\n- in lua for windows file system via winapi lua bindings https://github.com/stevedonovan/winapi with https://stevedonovan.github.io/winapi/api.html#watch_for_file_changes\r\n\r\nAfaiu, this does not capture all events like permission changes and listing who is listening to file changes, but it should be a good first start.\r\n\r\nA more advanced look would be a complete system runtime trace via ETW and/or WPF or https://github.com/google/UIforETW, but one would need a meaningful filter and reproduction.\r\n\r\nMy first idea would be that vim/neovim does not use posix semantics for file operations and some stuff is not happening in time, so vim/neovim gives up on renaming/deletion. One possible cause could here be that locking was removed at some point for better perf, but this is very speculative.",
            "created_at": "2024-06-18T20:45:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2176941108",
            "id": 2176941108,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6BwXw0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2176941108/reactions"
            },
            "updated_at": "2024-06-18T20:46:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2176941108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13089667?v=4",
                "events_url": "https://api.github.com/users/matu3ba/events{/privacy}",
                "followers_url": "https://api.github.com/users/matu3ba/followers",
                "following_url": "https://api.github.com/users/matu3ba/following{/other_user}",
                "gists_url": "https://api.github.com/users/matu3ba/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matu3ba",
                "id": 13089667,
                "login": "matu3ba",
                "node_id": "MDQ6VXNlcjEzMDg5NjY3",
                "organizations_url": "https://api.github.com/users/matu3ba/orgs",
                "received_events_url": "https://api.github.com/users/matu3ba/received_events",
                "repos_url": "https://api.github.com/users/matu3ba/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matu3ba/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matu3ba/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matu3ba",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Status\r\n\r\nLooks like all reports here are about Windows, which suggests this is ~~[antivirus related](https://github.com/neovim/neovim/issues/8587#issuecomment-2174652995)~~ [Windows is denying writes](https://github.com/neovim/neovim/issues/8587#issuecomment-2321759369).\r\n\r\nNext step is to think about a way to deal with this.\r\n\r\nDon't need more comments confirming the issue, unless you have new information not already mentioned above.",
            "created_at": "2024-08-30T15:22:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2321598659",
            "id": 2321598659,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6KYMjD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321598659/reactions"
            },
            "updated_at": "2024-08-30T16:01:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321598659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk thanks for the update. I can confirm I am a Windows user but I do not believe it is antivirus related. For me it seems to be when I have multiple instances of Neovim open in different terminal tabs. For example I often have my nvim config cwd open in neovim to tweak my plugins / config stuff as well as my Obsidian vault cwd for notes and then often the project / code I am working on. Having 2 or 3 instances of nvim running each in their own cwd is pretty common for me and it seems that when I am more actively switching between the 2 or 3 instances and \"doing stuff\" in each of them, that seems to be when my shada temp files fill-up (A-Z).\r\n\r\nHope this helps. Let me know if you have any questions.",
            "created_at": "2024-08-30T15:46:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2321717811",
            "id": 2321717811,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6KYpoz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321717811/reactions"
            },
            "updated_at": "2024-08-30T15:46:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321717811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Status\r\n\r\n> when I have multiple instances of Neovim open ... actively switching and \"doing stuff\" in each of them, that seems to be when my shada temp files fill-up (A-Z).\r\n\r\nProbably Windows doesn't allow Nvim \"B\" to write to `shada.A` also open in Nvim \"A\", so Nvim \"B\" works around this by creating `shada.B`. And this keeps happening because the files are always open and Windows is always denying writes by multiple processes, so new files keep getting created.\r\n\r\nMaybe Nvim needs to release a file handle somewhere. Or the logic should be made less stupid.",
            "created_at": "2024-08-30T15:59:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2321759369",
            "id": 2321759369,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6KYzyJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321759369/reactions"
            },
            "updated_at": "2024-08-30T16:19:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321759369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Probably Windows doesn't allow Nvim \"B\" to write to `shada.A` also open in Nvim \"A\", so Nvim \"B\" works around this by creating `shada.B`. And this keeps happening because the files are always open and Windows is always denying writes by multiple processes, so new files keep getting created.\n\n@justinmk as a lifetime windows user, that sounds exactly like a windows thing that could be happening 🤣 🤦🏻‍♂️ I think you are spot on.\n\nA question I have though is, what are supposed to happen to those tmp shada files a-z? My assumption is they should be \"cleaning themselves up\" once nvim processes are released (when I close out of neovim). Is that an incorrect assumption?",
            "created_at": "2024-08-30T16:23:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2321855245",
            "id": 2321855245,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6KZLMN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321855245/reactions"
            },
            "updated_at": "2024-08-30T16:23:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321855245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> what are supposed to happen to those tmp shada files a-z? My assumption is they should be \"cleaning themselves up\" once nvim processes are released\r\n\r\nThat's where (in theory) the logic could be smarter. It would require Nvim to scan all the tmp files and check if other Nvim processes are using them, then merge them somehow.\r\n\r\nBut that's pretty clumsy (another hack on top of the existing hack), I hope we can find a simpler and more reliable approach.",
            "created_at": "2024-08-30T16:39:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2321935499",
            "id": 2321935499,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6KZeyL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321935499/reactions"
            },
            "updated_at": "2024-08-30T16:40:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321935499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Btw, in case this helps, I just checked and I was filled up again haha... as you can see from the timestamps, if I am in full work mode I have to clear these out every few days. So much that I created a keymap to open my Shada folder to check so I can delete them every once in a while.\r\n\r\n![image](https://github.com/user-attachments/assets/1e1d8e10-7aa1-4b0c-9c63-ecc072d55442)\r\n\r\nIgnore the fact that the timestamps do not totally lineup with the sort order of A-Z... that is because when this happens I typically delete the tmp files from previous days but leave whatever ones were created that same day (just in case they are needed for some reason)... mainly though I don't know really how the tmp files work so I just try not to delete them all \"just in case\" haha.",
            "created_at": "2024-08-30T16:40:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2321938404",
            "id": 2321938404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6KZffk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321938404/reactions"
            },
            "updated_at": "2024-08-30T16:42:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321938404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > what are supposed to happen to those tmp shada files a-z? My assumption is they should be \"cleaning themselves up\" once nvim processes are released\r\n> \r\n> That's where (in theory) the logic could be smarter. It would require Nvim to scan all the tmp files and check if other Nvim processes are using them, then merge them somehow.\r\n> \r\n> But that's pretty clumsy (another hack on top of the existing hack), I hope we can find a simpler and more reliable approach.\r\n\r\nCool. Thanks for the transparency. Makes sense. So basically you are saying \"the whole process is a bit fragile as it is, so it is not surprising there are issues like this. But instead of putting a bandaid approach which will just make things more fragile, a new approach should be determined that will make the entire process/feature more reliable.\" Is that fair enough interpretation?\r\n\r\nAlso happy to provide testing or to have ideas bounced off me if that would help down the road. Just let me know and keep me posted. I track my \"subscribed to\" issues fairly frequently so any updates that come here I will see.\r\n\r\nThanks for your time and efforts as always!",
            "created_at": "2024-08-30T16:47:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2321954074",
            "id": 2321954074,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6KZjUa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321954074/reactions"
            },
            "updated_at": "2024-08-30T16:47:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2321954074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "This deletes all tmp files when closing Neovim.\n```lua\nvim.api.nvim_create_autocmd('QuitPre', {\n  callback = function()\n    os.execute('del /Q \"C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\nvim-data\\\\shada\\\\main.shada.tmp.*\"')\n  end,\n})\n```\n\n**Are these `main.shada.tmp` files saved to be deleted?** Thanks.",
            "created_at": "2024-10-26T07:31:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2439415252",
            "id": 2439415252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6RZoXU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439415252/reactions"
            },
            "updated_at": "2024-10-26T07:33:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439415252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/63406944?v=4",
                "events_url": "https://api.github.com/users/DasGandlaf/events{/privacy}",
                "followers_url": "https://api.github.com/users/DasGandlaf/followers",
                "following_url": "https://api.github.com/users/DasGandlaf/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasGandlaf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DasGandlaf",
                "id": 63406944,
                "login": "DasGandlaf",
                "node_id": "MDQ6VXNlcjYzNDA2OTQ0",
                "organizations_url": "https://api.github.com/users/DasGandlaf/orgs",
                "received_events_url": "https://api.github.com/users/DasGandlaf/received_events",
                "repos_url": "https://api.github.com/users/DasGandlaf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DasGandlaf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasGandlaf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DasGandlaf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "FYI I had posted this as a comment to the PR #30872 because of the details around memfiles and events running during nvim quit/exit. But it is probably appropriate to share it here since this issue is still active.\n\nComment link here: https://github.com/neovim/neovim/pull/30872#issuecomment-2439420120\n\nHere is the content:\n\nJust commenting here as an fyi as it was something I finally tracked down earlier today (potential hunch) and it also seemed to relate to swap / shada files (and I saw other reports of similar hunches online). That is that sometimes when I quit neovim with `:qa` it exits to my terminal but the screen stays \"painted\" with the neovim buffers I had on screen last and I have to do a \"clear\" in my terminal.\n\nToday I finally got some ideas on it and in my testing it happened most often when:\n\n1. Had shada tmp files full.\n2. Interestingly enough my main shada file got pretty large (500kb) and stopped updating even after I cleared the temp files out.\n3. This is more subjective, but it seemed to happen more often when using a loaded mini.session (plugin) saved session which has a \"auto write / save session on exit\" feature.\n\nIt seems like this could be related as when I deleted my main shada file that was growing larger and seemed \"stuck\", it stopped happening (nvim staying rendered / painted after quit) for the time being.\n\nFor mini.sessions it could make sense based on the details in this PR that something is happening \"weirdly\" during quit when the sessions are getting auto saves. I presume it is hooking into events during exit, and from the sounds of this PR, that could definitely be relevant here and explain some of my \"problems\".",
            "created_at": "2024-10-26T14:40:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2439605814",
            "id": 2439605814,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6RaW42",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439605814/reactions"
            },
            "updated_at": "2024-10-26T14:41:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439605814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk I saw this comment here https://github.com/neovim/neovim/pull/30872#issuecomment-2424968517 about whether that PR is the cause of the shada file issues discussed here. Is this something you believe may be fixed and could close out this issue? If so, folks here could test out nvim nightly and see if their shada issues are resolved (I will be doing that and will report back).",
            "created_at": "2024-10-26T14:45:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2439606953",
            "id": 2439606953,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6RaXKp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439606953/reactions"
            },
            "updated_at": "2024-10-26T14:45:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439606953",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Good news so far! I did a lot of stuff yesterday that would typically create a bunch of the temporary shada files, but after installing the nightly updates with the #30872 PR, I have zero temp shada files! Just the main shada. So hoping 🤞 that this fixed the problems here!",
            "created_at": "2024-10-27T14:19:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2440042836",
            "id": 2440042836,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6RcBlU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 2,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2440042836/reactions"
            },
            "updated_at": "2024-10-27T14:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2440042836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk I don't know if I ever asked this but what is the role of the `main.shada.tmp.X` temp files? Are they supposed to get \"merged\" back into the `main.shada` file at some point? Or are they just there so neovim doesn't throw an error (so there is something else to write to)?\n\nTLDR: what should we do with the tmp files? Leave them? or can/should we delete them? or is there anything we can/should do to get them to \"merge\" back into the main shada?",
            "created_at": "2024-10-30T16:22:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2447706080",
            "id": 2447706080,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6R5Qfg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2447706080/reactions"
            },
            "updated_at": "2024-10-31T11:01:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2447706080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> what is the role of the `main.shada.tmp.X` temp files?\n\nThey are simply a worst-case fallback to avoid data loss when Vim/Nvim cannot write to the configured shada file.\n\n> Are they supposed to get \"merged\" back into the `main.shada` file at some point?\n\n[Worth considering](https://github.com/neovim/neovim/issues/8587#issuecomment-2321935499), but not implemented yet.",
            "created_at": "2024-10-31T11:00:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2449582874",
            "id": 2449582874,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6SAasa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449582874/reactions"
            },
            "updated_at": "2024-10-31T11:00:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2449582874",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ok @justinmk after using nvim for a bit after the changes, the good news is that the tmp shada issues is much better. Happening less for sure. But there is still a problem. The only thing I can point to is that it seems to happen mostly when I use mini.sessions (which auto saves session on vim exit). I have tried and tried to nail it down because it does not happen all the time, but it seems that after a long-ish session without exiting vim (an hour or two), the tmp shada issue happens and then if I reload that session, it will keep doing it until I start a fresh session. So something is causing the issue and I'm wondering if it's a timing thing? The longer the session the more stuff the session tracks and so maybe on vim exit it takes longer to save the session and the fix to make sure shada waits long enough on exit is not waiting long enough for the session to save? Just throwing out hunches that hopefully may help. Copying @echasnovski to see if has any potential ideas or has heard this reported at all with mini.sessions.\n\nLet me know if you have any questions or can think of something you'd like me to test.",
            "created_at": "2024-11-08T04:36:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2463749625",
            "id": 2463749625,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6S2dX5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2463749625/reactions"
            },
            "updated_at": "2024-11-08T04:38:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2463749625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Copying [@echasnovski](https://github.com/echasnovski) to see if has any potential ideas or has heard this reported at all with mini.sessions.\n\nNo, I have not. The related thing that 'mini.sessions' does is executing `:mksession! path/to/file` on `VimLeavePre` event. I *think* you should be able to reproduce similar behavior without 'mini.sessions' and only with this type of autocommand. And I don't really have access to Windows machine, so can not confirm or deny this, unfortunately.",
            "created_at": "2024-11-08T09:01:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2464172699",
            "id": 2464172699,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6S4Eqb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464172699/reactions"
            },
            "updated_at": "2024-11-08T09:01:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464172699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ok @justinmk I made a little more progress on figuring out what the heck is going on. I am not able to create a reliable repro (I can reproduce it often but not really a good consistent / concise way to provide reproduction steps other than explanation below). It seems to come down to filepath formats (as usual with windows problems 😉 ) and specifically it seems to \"bug out\" (create a temp shada and also leave the last nvim screen \"painted\" in the terminal like described here: ~https://github.com/neovim/neovim/issues/25033~ https://github.com/neovim/neovim/issues/30175) when absolute paths as forward slashes are stored / saved to the shada based on how a buffer was opened in neovim (and seemingly a number of other related potential causes). See below how this `one.lua` file has forward slashes while `two.lua` has windows style double backslashes.\n\n![Image](https://github.com/user-attachments/assets/9aabb265-0bcb-48e3-b310-c7d5ad46d17b)\n\nOften times it seems that the \"forward slashes\" paths get in there when using things like `oldfiles` and lsp goto defs / refs etc. to open files (like with Telescope). Also when using different LSP file renaming plugins / code (to use things like `'workspace/didRenameFiles'` and `'workspace/willRenameFiles'` to apply import and require statement updates to update other files) as well as when renaming / moving a file/buffer that is currently listed, plugins will try to reload/refresh the buffer/file with the new path, and this issue can occur from that. Basically all the different ways files/buffers can be opened and how many different ways paths can be used / formatted (e.g., absolute vs relative paths, forward slashes with `vim.fs.normalize()`, double backslashes with `vim.uv.fs_realpath()` etc.)\n\nLastly these kinds of things can occur if you open a file that is not in your `cwd` as it seems to store the file path in the shada file with an absolute path and forward slashes.\n\nTLDR: in my recent investigations, every time I get the tmp shada issue, I have compared the buffer list / session info with the main.shada and track it down to a buffer open where the `Local mark with timestamp` entry (like in my screenshot) is all forward slashes instead of double backslashes. But given there will be several entries for each buffer/file, testing scenarios and determinations is not cut and dry.\n\np.s. one more thing I THINK I have noticed / determined is that these issues seem to occur more often when our main.shada file is larger as opposed to fresh / new. Could just be more file paths stored which increases the surface area, but I have a hunch that something about the larger shada (more stuff) is also playing a factor.\n\ncc @echasnovski .... as you mentioned above, I believe mini.sessions \"seems\" related to the issue, but as you pointed out, likely is just because saving sessions allows for cause of this issue because your buffer list of listed buffers grows and then eventually triggers this issue when restoring a session and then closing nvim.\n\n**EDIT (additional FYI)**: One thing that makes this difficult to reliably reproduce is that there are many ways you can open / load / restore etc. a buffer / file where it seems to \"fix itself\" and update the shada to use the appropriate path (often when a buffer gets opened as a relative path to the cwd, it seems to be the cleanest and seems to most of the time update the shada with a nice \"clean\" path that does not cause the issues). Point is, it can be hard to reproduce because when reloading via session or re-opening the buffer or opening multiple times, many things can seemingly \"clean up\" the way the path is stored in the shada.",
            "created_at": "2024-12-02T16:41:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2512093449",
            "id": 2512093449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6Vu4EJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512093449/reactions"
            },
            "updated_at": "2024-12-02T18:34:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512093449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "cc @folke as I am curious if you have heard similar things reported from lazyvim and your recent snacks.nvim, especially with your lazy utils for lsp and snacks `rename()` / `on_rename_file()` etc. (I see you do quite a bit with trying to \"normalize\" paths)? And if you have gotten to the bottom of any of this in the past or have any additional findings to add?",
            "created_at": "2024-12-02T16:49:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2512140041",
            "id": 2512140041,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6VvDcJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512140041/reactions"
            },
            "updated_at": "2024-12-02T16:49:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512140041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've noticed this myself when testing on Windows only. Never looked into it, since I don't use Windows.\n\nfyi: you can use paths with forward slashes on Windows since forever ago. There's really no need anymore to use backward slashes on Windows.",
            "created_at": "2024-12-02T16:57:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2512158580",
            "id": 2512158580,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6VvH90",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512158580/reactions"
            },
            "updated_at": "2024-12-02T16:57:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512158580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> fyi: you can use paths with forward slashes on Windows since forever ago. There's really no need anymore to use backward slashes on Windows.\n\nyes, agreed, and that is the way I had gotten used to trying to do things for windows and why I use `vim.fs.normalize()` most the time, BUT the issue is that these forward slashes seem to be a problem with the shada file and/or how the shada data is normalized / saved on vim exit and/or how the bufferlist uses it to reload files / jumplist / change list etc. data from the shada. Does that make sense @folke ?\n\nI guess what I am trying to say is that it seems like the shada file \"needs\" windows paths with double backslashes (not saying it is correct but seems to be the best I can determine that is causing these issues).",
            "created_at": "2024-12-02T17:01:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2512167524",
            "id": 2512167524,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6VvKJk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512167524/reactions"
            },
            "updated_at": "2024-12-02T17:01:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512167524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Internally, Nvim should use `/` slashes everywhere, except at \"presentation\" layers. That work is still pending. See https://github.com/neovim/neovim/issues/25033#issuecomment-1715407131",
            "created_at": "2024-12-02T17:25:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2512225100",
            "id": 2512225100,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6VvYNM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512225100/reactions"
            },
            "updated_at": "2024-12-02T17:26:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512225100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Internally, Nvim should use `/` slashes everywhere, except at \"presentation\" layers. That work is still pending.\n\n@justinmk any ideas why the cause of the windows tmp shada issue or \"crash\" (as others have described it) would seem to happen actually because of forward slashes in the shada local mark data for a currently listed buffer (like my screenshot shows above for `one.lua`)?\n\nAs an fyi, when opening a buffer on windows using relative path from cwd (seems to be the \"cleanest\" way vim tries to load buffers), the shada always stores those with double backslashes as with `two.lua` example in my screenshot (which is majority of my shada file).",
            "created_at": "2024-12-02T17:39:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2512255765",
            "id": 2512255765,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6VvfsV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512255765/reactions"
            },
            "updated_at": "2024-12-02T17:39:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512255765",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "From what I can tell, it seems as if somewhere in the shada file \"process\" (saving, merging, whatever) it is actually expecting double backslashes for Windows paths instead of forward slashes. At least for some piece of the process... and when a listed buffer has forward slashed paths in the shada file during vim exit, it seems to \"crash\" (exit early, or whatever you want to call it) as even the tmp shada files, if you open them up, you will see they just suddenly end, getting cutoff in the middle of a random part of the shada file.\n\nI am a novice when it comes to the proper debugging / logging in neovim so if anyone has instructions on how I could get more information of what is happening, please provide and I will run it as I have several saved backed up shada files that reproduce the issue on my end.\n\nIf possible, it would be great to have verbosity to the level of identifying which \"line\" (part) of the shada file save/merge process on vim exit it is failing at.",
            "created_at": "2024-12-02T18:41:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2512402940",
            "id": 2512402940,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6VwDn8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512402940/reactions"
            },
            "updated_at": "2024-12-02T18:44:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512402940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "As a follow up to my findings above, over the past couple days I have used an autocmd to always check the buffer name and if not loaded as a \"relative path\" to the cwd, then I set the bufname to relative path by simply grabbing the full absolute path and remove the cwd path string from it (leaving relative path left). I then run vim.cmd(\"edit\") as it seems that it is best way to ensure the buffer gets loaded / sets the bufname to the relative path and then saves to shada accordingly.\n\nWhen set as relative path, shada saves file marks as absolute path with windows double backslashes (as described in my earlier comments above) which is how it seems the shada handles the best (as opposed to front slashes).\n\nOver the past 2 days I have had absolutely zero nvim crashes on close (leaving terminal painted as last nvim screen on exit) and zero temp shada creations! To put into perspective, I would say I would typically have 1 or 2 shada \"incidents\" per hour (when doing heavy nvim usage) historically.\n\nThis seems to be the main culprit of the windows shada tmp file and \"crashing\" issues based on my findings!",
            "created_at": "2024-12-04T09:44:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2516715002",
            "id": 2516715002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6WAgX6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2516715002/reactions"
            },
            "updated_at": "2024-12-04T09:44:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2516715002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I am a novice when it comes to the proper debugging / logging in neovim so if anyone has instructions on how I could get more information of what is happening, please provide and I will run it as I have several saved backed up shada files that reproduce the issue on my end.\n\n@justinmk do you know the best way to try and get debug logs to provide when reproducing the crash / tmp shada on exit? I want to provide logs to hopefully help the team identify the exact culprit :) thanks! 😊 ",
            "created_at": "2024-12-04T09:49:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2516728257",
            "id": 2516728257,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6WAjnB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2516728257/reactions"
            },
            "updated_at": "2024-12-04T09:49:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2516728257",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Debug build (not RelWithDebInfo) will log at highest level in `$NVIM_LOG_FILE`. This will produce extremely large log files.",
            "created_at": "2024-12-04T12:58:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2517279216",
            "id": 2517279216,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6WCqHw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2517279216/reactions"
            },
            "updated_at": "2024-12-04T12:58:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2517279216",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Debug build (not RelWithDebInfo) will log at highest level in `$NVIM_LOG_FILE`. This will produce extremely large log files.\n\nDo I need to start nvim with setting any sort of log level? Or does the debug build type automatically trace at the highest log level? I read some things by other people mentioning setting logging to a `trace` level, but I am not sure that is accurate or relevant to trying to debug by building from source a debug build?",
            "created_at": "2024-12-05T02:01:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2518922809",
            "id": 2518922809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6WI7Y5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2518922809/reactions"
            },
            "updated_at": "2024-12-05T04:34:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2518922809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk ok I managed to build from source a debug build and recorded a regular successful shada update and nvim exit, and comparatively a repro of the shada tmp file (crash) issue on exit! I also confirmed further my hunch above by reproducing this simply by opening a file/buffer and running the following on it (used a simple `BufWinEnter` autocmd) to force loading of it with absolute path and forward slashes (which in turn saves the file mark for that buffer to the shada with forward slashes instead of double backslashes and for whatever reason then starts causing crashes).\n\n```lua\nlocal bufname = vim.fn.bufname(bufnr)\nlocal norm_path = vim.fs.normalize(vim.uv.fs_realpath(bufname) or bufname)\nvim.api.nvim_set_current_buf(bufnr)\nvim.api.nvim_buf_set_name(bufnr, norm_path)\nvim.cmd('e')\n```\n\nThen on exit, when shada closes and tries to save, the crash happens (sometimes have to re-open and close again to get the crash). Below are the details!\n\n### Screenshot 1: Debug logs for successful nvim exit (Left) vs shada \"crash\" issue (Right)\n\nDetails to note:\n- First several lines (~20 lines) in both logs (Red outline box 1) are identical as nvim starts to exit\n- Red outline box 2 shows five additional lines on Left (successful log) that never occur in Right log (crash)\n- Additionally in Red outline box 2, this is where the debug crash dialog pops up in Windows (see screenshot 2 below)\n- You will notice there is 1 additional line in the Right log, just before the crash, referencing `log_notify`. This is a line the Left log does not have and I am assuming may be the debug crash dialog pop up.\n- Complete log files:\n    - Successful (left side) log: [nvim-debug-shada-success.log](https://github.com/user-attachments/files/18018169/nvim-debug-shada-success.log)\n    - Crash (right side) log: [nvim-debug-shada-crash-1.log](https://github.com/user-attachments/files/18018181/nvim-debug-shada-crash-1.log)\n\n![Image](https://github.com/user-attachments/assets/f6373975-58c2-401f-8515-d85a6d780634)\n\n### Screenshot 2: Debug \"crash\" popup when exiting vim with `:qa` and `shada` causing crash (and a `main.shada.tmp.X` file is created)\n\n\n\n![Image](https://github.com/user-attachments/assets/ab4b8d79-459d-43b6-ac8d-a7dec43462cc)\n\n\n\nLet me know if this helps and/or if there is some \"in-app\" Neovim logging I can/should turn on (`:verbose` etc.) that will show necessary detail for what is actually happening during the vim exit events etc.?",
            "created_at": "2024-12-05T06:22:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2519283531",
            "id": 2519283531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6WKTdL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2519283531/reactions"
            },
            "updated_at": "2024-12-05T06:22:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2519283531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "FYI this (Label 1 in screenshot) was the result of my autocmd described above, forcing to load the `foo.lua` file buffer with absolute path forward slashes and the resulting entries in the `shada` file which causes the crash on close if that buffer `foo.lua` is open when leaving neovim.\n\nYou can see at Label 2, for `mini-clue.lua`, it shows example of the usual way the `shada` stores filepaths on Windows (double backslashes).\n\n![Image](https://github.com/user-attachments/assets/5e3e9700-5c97-466e-9bf9-246f75298b05)\n",
            "created_at": "2024-12-05T06:36:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2519324049",
            "id": 2519324049,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6WKdWR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2519324049/reactions"
            },
            "updated_at": "2024-12-05T06:36:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2519324049",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I experience the same today on Mac. Also use mini.sessions and on quit see the same error. Works fine after deleting the 'shada' folder completely with all the inner files for the third time. ",
            "created_at": "2024-12-08T06:01:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2525435035",
            "id": 2525435035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6WhxSb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2525435035/reactions"
            },
            "updated_at": "2025-01-03T17:52:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2525435035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3739695?v=4",
                "events_url": "https://api.github.com/users/pavelbrilliant/events{/privacy}",
                "followers_url": "https://api.github.com/users/pavelbrilliant/followers",
                "following_url": "https://api.github.com/users/pavelbrilliant/following{/other_user}",
                "gists_url": "https://api.github.com/users/pavelbrilliant/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pavelbrilliant",
                "id": 3739695,
                "login": "pavelbrilliant",
                "node_id": "MDQ6VXNlcjM3Mzk2OTU=",
                "organizations_url": "https://api.github.com/users/pavelbrilliant/orgs",
                "received_events_url": "https://api.github.com/users/pavelbrilliant/received_events",
                "repos_url": "https://api.github.com/users/pavelbrilliant/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pavelbrilliant/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pavelbrilliant/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pavelbrilliant",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I experience the same today on Mac. Also use mini.sessions and on quit see the same error. Works fine after deleting the 'shada' folder completely with all the inner files for the third time.\n\n@pavelbrilliant interesting... I believe this is the first time it has been reported for Mac! 🤔 \n\nHave you noticed this happening in the past? Or is this the first time it has happened for you?",
            "created_at": "2024-12-09T01:54:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2526620496",
            "id": 2526620496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6WmStQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2526620496/reactions"
            },
            "updated_at": "2024-12-09T01:54:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2526620496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@GitMurf I'm a nearly fresh nvim user, so it was the first time when this happened to me. MacOS Sonoma 14.5, Intel-based, kickstart-nvim latest available as of the date of my previous post. ",
            "created_at": "2024-12-24T21:02:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2561449376",
            "id": 2561449376,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6YrJ2g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2561449376/reactions"
            },
            "updated_at": "2024-12-24T21:02:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2561449376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3739695?v=4",
                "events_url": "https://api.github.com/users/pavelbrilliant/events{/privacy}",
                "followers_url": "https://api.github.com/users/pavelbrilliant/followers",
                "following_url": "https://api.github.com/users/pavelbrilliant/following{/other_user}",
                "gists_url": "https://api.github.com/users/pavelbrilliant/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pavelbrilliant",
                "id": 3739695,
                "login": "pavelbrilliant",
                "node_id": "MDQ6VXNlcjM3Mzk2OTU=",
                "organizations_url": "https://api.github.com/users/pavelbrilliant/orgs",
                "received_events_url": "https://api.github.com/users/pavelbrilliant/received_events",
                "repos_url": "https://api.github.com/users/pavelbrilliant/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pavelbrilliant/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pavelbrilliant/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pavelbrilliant",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hey, @GitMurf, thanks for your work!\n\nSo what is the situation here? I don't quite follow. Simply put, what should I do to prevent these crashes? I have a `BufWinEnter` autocmd, is what I am doing here correct?\n```lua\nvim.api.nvim_create_autocmd('BufWinEnter', {\n  group = vim.api.nvim_create_augroup('set-absolute-file-path', { clear = true }),\n  callback = function()\n    local current_path = vim.fn.expand('%:p')\n    local adjusted_path = adjust_path(current_path) -- Sets path to double backslash\n\n    if current_path ~= adjusted_path then\n      vim.cmd('edit ' .. adjusted_path)\n    end\n  end,\n})\n```\n\nI think I might be misunderstanding something?\n\nI appreciate your help!",
            "created_at": "2025-01-07T18:23:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2575959627",
            "id": 2575959627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6ZigZL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575959627/reactions"
            },
            "updated_at": "2025-01-07T22:11:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2575959627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/63406944?v=4",
                "events_url": "https://api.github.com/users/DasGandlaf/events{/privacy}",
                "followers_url": "https://api.github.com/users/DasGandlaf/followers",
                "following_url": "https://api.github.com/users/DasGandlaf/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasGandlaf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DasGandlaf",
                "id": 63406944,
                "login": "DasGandlaf",
                "node_id": "MDQ6VXNlcjYzNDA2OTQ0",
                "organizations_url": "https://api.github.com/users/DasGandlaf/orgs",
                "received_events_url": "https://api.github.com/users/DasGandlaf/received_events",
                "repos_url": "https://api.github.com/users/DasGandlaf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DasGandlaf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasGandlaf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DasGandlaf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> So what is the situation here? I don't quite follow. Simply put, what should I do to prevent these crashes? I have a `BufWinEnter` autocmd, is what I am doing here correct?\n\nThis whole situation is a bit messy so just keep that in mind. My solution below does not always work and can sometimes do some weird things when you are opening a file in diff mode for example. So you may have to tweak to your config. Below is the base of what I use but I have several corner case conditionals in my actual implementation that only pertain to my config (you may have to add for your self as well as they come up).\n\nOddly enough the seemingly best way for Neovim to \"properly\" save the file paths to the shada is when you make sure files (bufnames) are loaded as relative path to the CWD. So that is what my solution tries to do.\n\nLet me know if you have any questions and good luck! Hopefully this gets solved by core neovim at some point but for now I have been fairly successful using this.\n\n```lua\n---@param bufnr number\nlocal open_file_buf_relative_path = function(bufnr)\n  local bufname = vim.fn.bufname(bufnr)\n  -- if bufname starts with c: or ~ then its a full path and want to open relative\n  if bufname:sub(1, 2):lower() == 'c:' or bufname:sub(1, 1) == '~' then\n    local cwd = vim.uv.cwd() or '.'\n    local root = vim.fs.normalize(vim.uv.fs_realpath(cwd) or '.') .. '/'\n    local norm_path = vim.fs.normalize(vim.uv.fs_realpath(bufname) or bufname)\n    if norm_path:find(root, 1, true) ~= 1 then\n      -- NOTE: not changing if not part of root path (cwd)\n      root = ''\n    end\n    if root == '' or root == nil then\n      return\n    end\n    local relative_path = norm_path:sub(#root + 1)\n    vim.schedule(function()\n      vim.notify('Setting buffer name to relative path: ' .. relative_path .. ' FROM: ' .. bufname .. ' - for bufnr: ' .. bufnr)\n      if vim.bo[bufnr].modified then\n        vim.notify('Buffer is modified, saving before setting relative path: ' .. bufname)\n        vim.api.nvim_set_current_buf(bufnr)\n        vim.cmd('w')\n        vim.api.nvim_buf_set_name(bufnr, relative_path)\n        vim.cmd('e')\n      else\n        vim.api.nvim_set_current_buf(bufnr)\n        vim.api.nvim_buf_set_name(bufnr, relative_path)\n        vim.cmd('e')\n      end\n    end)\n  end\nend\n\nvim.api.nvim_create_autocmd({\n  'BufWinEnter',\n  'BufWritePost',\n}, {\n  pattern = '*',\n  callback = function(event)\n    open_file_buf_relative_path(event.buf)\n  end,\n})\n```",
            "created_at": "2025-01-07T19:09:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2576033560",
            "id": 2576033560,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6ZiycY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2576033560/reactions"
            },
            "updated_at": "2025-01-07T19:09:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2576033560",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "While trying to write a new config from scratch I got the crash to happen consistently, got a debug build going to check the logs and haven't noticed anything of note that GitMurf hasn't mentioned [here](https://github.com/neovim/neovim/issues/8587#issuecomment-2519283531).\n\nI tried attaching the visual studio debugger to see if it finds anything, and every time it stops at that `abort()` call on line 68 in `map_key_impl.c.h`, and with the same call stack.\n\n![Image](https://github.com/user-attachments/assets/c730236f-1aed-444e-ad24-bbde9bcf0b6f) ![Image](https://github.com/user-attachments/assets/3ea4e0da-9e44-4312-bfce-75ebf6a6d551)\n\nI don't know C and this is my first time messing with a debugger, if there's anything else i can look for and share some pointers would be greatly appreciated. Really hoping this helps to get closer to the root of this as it's always been an issue for me.",
            "created_at": "2025-01-09T20:20:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2581176616",
            "id": 2581176616,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6Z2aEo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2581176616/reactions"
            },
            "updated_at": "2025-01-09T20:20:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2581176616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67888720?v=4",
                "events_url": "https://api.github.com/users/koffydrop/events{/privacy}",
                "followers_url": "https://api.github.com/users/koffydrop/followers",
                "following_url": "https://api.github.com/users/koffydrop/following{/other_user}",
                "gists_url": "https://api.github.com/users/koffydrop/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/koffydrop",
                "id": 67888720,
                "login": "koffydrop",
                "node_id": "MDQ6VXNlcjY3ODg4NzIw",
                "organizations_url": "https://api.github.com/users/koffydrop/orgs",
                "received_events_url": "https://api.github.com/users/koffydrop/received_events",
                "repos_url": "https://api.github.com/users/koffydrop/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/koffydrop/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/koffydrop/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/koffydrop",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I made a debug build of Neovim 0.10.3, and used the debugger to break on the crash. This is what happens AFAIK:\n\ntldr: When writing shada, buffer local file marks from an old shada file is added to a FileMarks hashmap. When adding a hashmap entry, the entire hashmap is rehashed. In the rehash function, it expects the hashmap to be zeroed out beforehand. Sometimes it is not zeroed out, that's when the crash happens.\n\nIf you have any ideas @justinmk, that would be awesome. I've written a tldr for you.\n\nCrash happens [here](https://github.com/neovim/neovim/blob/a4f575abd85e734340ee303daace1a63e5ca9782/src/nvim/map_key_impl.c.h#L62) at `abort`: \n```C\n/// Rebuild hash from keys[] array \n/// \n/// set->h.hash must be allocated and empty before&alling! \nvoid KEY_NAME(mh_rehash_)(SET_TYPE *set) \n{ \n  for (uint32_t k = 0; k < set->h.n_keys; k++) { \n    uint32_t idx = KEY_NAME(mh_find_bucket_)(set, set->keys[k], true); \n    // there must be tombstones when we do a rehash \n    if (!mh_is_empty((&set->h), idx)) { \n      abort(); \n    } \n    set->h.hash[idx] = k + 1; \n  } \n  set->h.n_occupied = set->h.size = set->h.n_keys; \n} \n```\n\n\nAlso @GitMurf https://github.com/neovim/neovim/issues/8587#issuecomment-2519283531 Are you sure this crash happens because of the slash issue? If you can verify, that would be helpful.\n\n<details>\n\n<summary>Detailed explanation</summary>\n\nWhen shada file is being written, a `WriteMergerState` struct is allocated. This holds a hashmap of struct `FileMarks`.\n\nThe hashmap is similarly implemented as a dynamic array of pointers, pointing to the allocated hashmap values.\n\nIn the function `shada_read_when_writing`, AFAIK an existing shada file is read. Now it iterates through every item in the existing shada file.\n\nWhen iterating, it checks if the item is of type `kSDItemLocalMark` (a buffer local mark). If yes, this mark is added into the FileMarks hashmap of the WriteMergerState.\n\nWhen new hashmap items are added, `void KEY_NAME()` is called. This function rehashes the entire hashmap. It expects the passed hashmap pointers from index `0` to index `h.n_keys` to be set to 0. This is what the check `!mh_is_empty()` is for. If that is not the case, the crash happens.\n\nFor some reason, when I break with the debugger when the crash happens, the values are NOT zeroed out.\n\nI can't (yet) identify a code path where the values are not zeroed out. They should be, yet they are not.\n\nI have no experience in Neovim's code-base, so take everything I've said with a grain of salt.\n\n</details>",
            "created_at": "2025-01-14T02:04:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/8587#issuecomment-2588629091",
            "id": 2588629091,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8587",
            "node_id": "IC_kwDOAPphoM6aS1hj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2588629091/reactions"
            },
            "updated_at": "2025-01-14T02:37:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2588629091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/63406944?v=4",
                "events_url": "https://api.github.com/users/DasGandlaf/events{/privacy}",
                "followers_url": "https://api.github.com/users/DasGandlaf/followers",
                "following_url": "https://api.github.com/users/DasGandlaf/following{/other_user}",
                "gists_url": "https://api.github.com/users/DasGandlaf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DasGandlaf",
                "id": 63406944,
                "login": "DasGandlaf",
                "node_id": "MDQ6VXNlcjYzNDA2OTQ0",
                "organizations_url": "https://api.github.com/users/DasGandlaf/orgs",
                "received_events_url": "https://api.github.com/users/DasGandlaf/received_events",
                "repos_url": "https://api.github.com/users/DasGandlaf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DasGandlaf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DasGandlaf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DasGandlaf",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 48,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/8587/comments",
    "created_at": "2018-06-18T15:51:20Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/8587/events",
    "html_url": "https://github.com/neovim/neovim/issues/8587",
    "id": 333329446,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 109461219,
            "name": "platform:windows",
            "node_id": "MDU6TGFiZWwxMDk0NjEyMTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:windows"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "",
            "id": 606691254,
            "name": "has:plan",
            "node_id": "MDU6TGFiZWw2MDY2OTEyNTQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:plan"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "save/restore editor state: shada, context, ctx",
            "id": 4449264023,
            "name": "editor-state",
            "node_id": "LA_kwDOAPphoM8AAAABCTJhlw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/editor-state"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/8587/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 0,
        "created_at": "2024-05-16T14:11:54Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/43",
        "id": 11063573,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/43/labels",
        "node_id": "MI_kwDOAPphoM4AqNEV",
        "number": 43,
        "open_issues": 32,
        "state": "open",
        "title": "0.12",
        "updated_at": "2025-02-02T00:25:39Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/43"
    },
    "node_id": "MDU6SXNzdWUzMzMzMjk0NDY=",
    "number": 8587,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 22,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 22,
        "url": "https://api.github.com/repos/neovim/neovim/issues/8587/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/8587/timeline",
    "title": "Windows: \"E138: main.shada.tmp.X files exist, cannot write ShaDa\" on close",
    "updated_at": "2025-02-02T00:10:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/8587",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2086176?v=4",
        "events_url": "https://api.github.com/users/jcjolley/events{/privacy}",
        "followers_url": "https://api.github.com/users/jcjolley/followers",
        "following_url": "https://api.github.com/users/jcjolley/following{/other_user}",
        "gists_url": "https://api.github.com/users/jcjolley/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jcjolley",
        "id": 2086176,
        "login": "jcjolley",
        "node_id": "MDQ6VXNlcjIwODYxNzY=",
        "organizations_url": "https://api.github.com/users/jcjolley/orgs",
        "received_events_url": "https://api.github.com/users/jcjolley/received_events",
        "repos_url": "https://api.github.com/users/jcjolley/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jcjolley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jcjolley/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jcjolley",
        "user_view_type": "public"
    }
}