{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "- Neovim version: Any\n- Operating system: Any\n- Terminal emulator: Any\n### Actual behaviour\n\nNeoVIM allows itself to be controlled over an insecure interface (unauthenticated TCP socket).  This is a potential arbitrary code execution exploit.\n### Expected behaviour\n\nNeoVIM does not itself to be controlled over an insecure interface.\n\nThis can be done in a couple ways:\n- do not allow TCP sockets, only AF_UNIX sockets (but this does not work on Windows)\n- cryptographic authentication of all messages\n\nI prefer the second approach _if it is implemented correctly_.  My preferred solution:\n- create a temporary file, read/write only to current user, no access to others\n- obtain cryptographically secure random bytes from OS using libsodium\n- write key to temporary file\n- use this key to authenticate all communication using Blake2b or SHA2-HMAC.\n- ensure that the first message sent by the client is authenticated, but contains no secrets (to prevent another process from impersonating the server).\n- rudely close the connection if an unauthenticated message is detected.\n\nNote that none of this is necessary if a Unix domain socket in a secure directory is used.\n\nI am also assuming that NeoVIM has no business listening on anything but the loopback interface.  If remote control is desired, then a simple program that can be used as an SSH shell should be used.\n### Steps to reproduce\n- Launch NeoVIM and tell it to bind to a socket, then have a different user control it via the socket.\n- Get pwnd.\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "While listening on TCP is a true security risk(nowadays even web apps can open local tcp sockets), by default neovim only listens on UNIX socket(named pipe on windows), so this is not so bad. If the user explicitly opens a tcp socket, then he must know what he's doing right?\n",
            "created_at": "2016-03-12T00:34:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-195616666",
            "id": 195616666,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTYxNjY2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/195616666/reactions"
            },
            "updated_at": "2016-03-12T00:34:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/195616666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "True but if you need secure (as in confidential/authenticated) remote TCP connections to neovim you really should use existing tools like ssh or stunnel, instead of implementing them here.\n\nSidenote: in recent versions of ssh you can forward unix domain sockets, so you dont even need to open a tcp socket.\n",
            "created_at": "2016-03-13T16:26:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-195989754",
            "id": 195989754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTk4OTc1NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/195989754/reactions"
            },
            "updated_at": "2016-03-13T16:26:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/195989754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@tarruda think about this scenario: you're running service X and neovim on one box; service X runs on its own account, doesn't have access to other processes, or files, it's got no OS access apart from networking.\n\nNow someone compromises service X. They have free access to your account via loopback to neovim.\n\nNot having any kind of authentication (even a pre-shared token in a file) definitely expands the scope for exploitation.\n",
            "created_at": "2016-03-14T05:24:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-196149309",
            "id": 196149309,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjE0OTMwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196149309/reactions"
            },
            "updated_at": "2016-03-14T05:24:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196149309",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/188063?v=4",
                "events_url": "https://api.github.com/users/viraptor/events{/privacy}",
                "followers_url": "https://api.github.com/users/viraptor/followers",
                "following_url": "https://api.github.com/users/viraptor/following{/other_user}",
                "gists_url": "https://api.github.com/users/viraptor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/viraptor",
                "id": 188063,
                "login": "viraptor",
                "node_id": "MDQ6VXNlcjE4ODA2Mw==",
                "organizations_url": "https://api.github.com/users/viraptor/orgs",
                "received_events_url": "https://api.github.com/users/viraptor/received_events",
                "repos_url": "https://api.github.com/users/viraptor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/viraptor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/viraptor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/viraptor",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think that NeoVIM should remove the ability to use TCP sockets unless a\nstrong means of cryptographic authentication is used, such as HMAC.\nOn Mar 11, 2016 7:35 PM, \"Thiago de Arruda\" notifications@github.com\nwrote:\n\n> While listening on TCP is a true security risk(nowadays even web apps can\n> open local tcp sockets), by default neovim only listens on UNIX\n> socket(named pipe on windows), so this is not so bad. If the user\n> explicitly opens a tcp socket, then he must know what he's doing right?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/neovim/neovim/issues/4443#issuecomment-195616666.\n",
            "created_at": "2016-03-14T17:21:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-196420838",
            "id": 196420838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyMDgzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196420838/reactions"
            },
            "updated_at": "2023-01-02T20:50:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196420838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6395399?v=4",
                "events_url": "https://api.github.com/users/DemiMarie/events{/privacy}",
                "followers_url": "https://api.github.com/users/DemiMarie/followers",
                "following_url": "https://api.github.com/users/DemiMarie/following{/other_user}",
                "gists_url": "https://api.github.com/users/DemiMarie/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DemiMarie",
                "id": 6395399,
                "login": "DemiMarie",
                "node_id": "MDQ6VXNlcjYzOTUzOTk=",
                "organizations_url": "https://api.github.com/users/DemiMarie/orgs",
                "received_events_url": "https://api.github.com/users/DemiMarie/received_events",
                "repos_url": "https://api.github.com/users/DemiMarie/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DemiMarie/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DemiMarie/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DemiMarie",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think this should be added to the `todo` milestone, since we need to concentrate on other areas at the moment.\n",
            "created_at": "2016-03-14T17:27:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-196423437",
            "id": 196423437,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyMzQzNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196423437/reactions"
            },
            "updated_at": "2023-01-02T20:50:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196423437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/972014?v=4",
                "events_url": "https://api.github.com/users/mhinz/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhinz/followers",
                "following_url": "https://api.github.com/users/mhinz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhinz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhinz",
                "id": 972014,
                "login": "mhinz",
                "node_id": "MDQ6VXNlcjk3MjAxNA==",
                "organizations_url": "https://api.github.com/users/mhinz/orgs",
                "received_events_url": "https://api.github.com/users/mhinz/received_events",
                "repos_url": "https://api.github.com/users/mhinz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhinz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhinz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhinz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, if the security difference between a unix and a TCP socket boils down to authentication, you can get (about) the same thing by using the X11 approach: Have a 0700-masked file (~/.Xauthority) that contains some data, and use that (once) to authenticate new connections (using a HMAC).\n\nTo avoid oracle attacks, the IP addresses and port numbers would have to be mixed in too, though.\n\nAnother way would be full-blown SSL - but that means generating (a) private key(s) and certificates, and might not be worth the bother. For encryption across a LAN SSH is much better suited.\n",
            "created_at": "2016-08-03T05:18:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-237142079",
            "id": 237142079,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzE0MjA3OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/237142079/reactions"
            },
            "updated_at": "2016-08-03T05:18:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/237142079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Doing this securely with TCP sockets requires challenge-response\nauthentication of both parties — I send you a large secure random number\n(128+ bits) and you need to HMAC it, then I HMAC a random number you send\nme.  This is different from X because the X server is trusted by its\nclients, while we need to make sure both client and server are\nauthenticated.\n\nOn Aug 3, 2016 1:19 AM, \"Philipp Marek\" notifications@github.com wrote:\n\n> Well, if the security difference between a unix and a TCP socket boils\n> down to authentication, you can get (about) the same thing by using the X11\n> approach: Have a 0700-masked file (~/.Xauthority) that contains some data,\n> and use that (once) to authenticate new connections (using a HMAC).\n> \n> To avoid oracle attacks, the IP addresses and port numbers would have to\n> be mixed in too, though.\n> \n> Another way would be full-blown SSL - but that means generating (a)\n> private key(s) and certificates, and might not be worth the bother. For\n> encryption across a LAN SSH is much better suited.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/neovim/neovim/issues/4443#issuecomment-237142079, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AGGWB5yn18eleRu1zj3f6Q-GIlLiGCY0ks5qcCTQgaJpZM4HvKJj\n> .\n",
            "created_at": "2016-08-03T16:49:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-237295324",
            "id": 237295324,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzI5NTMyNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/237295324/reactions"
            },
            "updated_at": "2016-08-03T16:49:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/237295324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6395399?v=4",
                "events_url": "https://api.github.com/users/DemiMarie/events{/privacy}",
                "followers_url": "https://api.github.com/users/DemiMarie/followers",
                "following_url": "https://api.github.com/users/DemiMarie/following{/other_user}",
                "gists_url": "https://api.github.com/users/DemiMarie/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/DemiMarie",
                "id": 6395399,
                "login": "DemiMarie",
                "node_id": "MDQ6VXNlcjYzOTUzOTk=",
                "organizations_url": "https://api.github.com/users/DemiMarie/orgs",
                "received_events_url": "https://api.github.com/users/DemiMarie/received_events",
                "repos_url": "https://api.github.com/users/DemiMarie/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/DemiMarie/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DemiMarie/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/DemiMarie",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> This is different from X because the X server is trusted by its clients, while we need to make sure both client and server are authenticated.\n> Well, I would argue that we've got the same (privileged) server (containing all the buffers == data) and the (untrusted) clients (receiving/passing keystrokes, more or less), so unidirectional authentication could be enough.\n\nOf course, having the same code path in both directions (send a challenge, receive a challenge, answer peer's challenge, receive peer's answer, verify it) is just as free ;)\n",
            "created_at": "2016-08-03T17:53:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-237315131",
            "id": 237315131,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzMxNTEzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/237315131/reactions"
            },
            "updated_at": "2016-08-03T17:53:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/237315131",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "We can use TLS with minimal user intervention. This way, we can use existing libraries without having to write all of the tedious crypto ourselves.\n1. We automatically generate a private key and self signed certificate into two 0700 masked files  in `$XDG_DATA_HOME/nvim/pki`.\n2. The server presents the self signed certificate to the client.\n3. The client presents the self signed certificate to the server.\n4. Both the server and client have verified that they both have access to the private key.\n\nThen we can add a few options so that people can provide paths to their own certificates/keys in case they want different certificates for servers and clients or whatever setup they desire.\n",
            "created_at": "2016-08-13T14:05:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-239622521",
            "id": 239622521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTYyMjUyMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239622521/reactions"
            },
            "updated_at": "2016-08-13T14:28:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239622521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Moving my suggestion from #20723 here.\r\n\r\nI wonder if channel info structure (returned with `vim_get_chan_info`) should be extended with various security info, such as token info, remote server name, IP address, etc...?\r\n\r\nThis would open various interesting possibilities. For example, address filtering could be implemented by adding custom logic in `ChanOpen` event, that would check where the conenction is coming from and `chanclose` it if the address does not match white/black list.",
            "created_at": "2022-10-18T18:26:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-1282833926",
            "id": 1282833926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "IC_kwDOAPphoM5Mdn4G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1282833926/reactions"
            },
            "updated_at": "2022-10-18T18:26:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1282833926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8959819?v=4",
                "events_url": "https://api.github.com/users/j-xella/events{/privacy}",
                "followers_url": "https://api.github.com/users/j-xella/followers",
                "following_url": "https://api.github.com/users/j-xella/following{/other_user}",
                "gists_url": "https://api.github.com/users/j-xella/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/j-xella",
                "id": 8959819,
                "login": "j-xella",
                "node_id": "MDQ6VXNlcjg5NTk4MTk=",
                "organizations_url": "https://api.github.com/users/j-xella/orgs",
                "received_events_url": "https://api.github.com/users/j-xella/received_events",
                "repos_url": "https://api.github.com/users/j-xella/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/j-xella/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/j-xella/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/j-xella",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For reference, related emacs feature: https://www.gnu.org/software/emacs/manual/html_node/emacs/TCP-Emacs-server.html\r\n\r\n> To retain some control over which users can talk to an Emacs server over TCP sockets, the emacsclient program must send an authorization key to the server. This key is normally randomly generated by the Emacs server. This is the recommended mode of operation.\r\n\r\n",
            "created_at": "2023-01-02T20:52:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/4443#issuecomment-1369197533",
            "id": 1369197533,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4443",
            "node_id": "IC_kwDOAPphoM5RnEvd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1369197533/reactions"
            },
            "updated_at": "2023-01-02T20:52:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1369197533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/4443/comments",
    "created_at": "2016-03-12T00:16:32Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/4443/events",
    "html_url": "https://github.com/neovim/neovim/issues/4443",
    "id": 140323679,
    "labels": [
        {
            "color": "F9D0C4",
            "default": false,
            "description": "security or privacy implications",
            "id": 97680355,
            "name": "security",
            "node_id": "MDU6TGFiZWw5NzY4MDM1NQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/security"
        },
        {
            "color": "F3A62E",
            "default": false,
            "description": "community: Google Summer of Code project",
            "id": 834483397,
            "name": "gsoc",
            "node_id": "MDU6TGFiZWw4MzQ0ODMzOTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gsoc"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/4443/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUxNDAzMjM2Nzk=",
    "number": 4443,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/4443/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/4443/timeline",
    "title": "TCP authentication token",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:38:04Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/4443",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6395399?v=4",
        "events_url": "https://api.github.com/users/DemiMarie/events{/privacy}",
        "followers_url": "https://api.github.com/users/DemiMarie/followers",
        "following_url": "https://api.github.com/users/DemiMarie/following{/other_user}",
        "gists_url": "https://api.github.com/users/DemiMarie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/DemiMarie",
        "id": 6395399,
        "login": "DemiMarie",
        "node_id": "MDQ6VXNlcjYzOTUzOTk=",
        "organizations_url": "https://api.github.com/users/DemiMarie/orgs",
        "received_events_url": "https://api.github.com/users/DemiMarie/received_events",
        "repos_url": "https://api.github.com/users/DemiMarie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/DemiMarie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DemiMarie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/DemiMarie",
        "user_view_type": "public"
    }
}