{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWhen a highlighter is started using `vim.treesitter.start()` and then subsequently the underlying query is modified using something like `disable_pattern` the highlighter will end up in a state where it is showing \"old\" highlights until the buffer is modified.\n\nI have no idea if there is a practical solution to this. Ideally it would be possible to detect changes when it is the same query object in both cases, but completely understandable if that's not the case.\n\nIf there's any suggestions for something I could do when calling `disable_pattern` to make the changes propagate that would also be really helpful.\n\nAs an example:\n\n- `minimal.lua`\n\n```lua\nvim.opt.conceallevel = 2\n\nvim.api.nvim_set_hl(0, '@markup.heading.1.markdown', { bg = 'red' })\n\nlocal function disable_patterns()\n    local query = vim.treesitter.query.get('markdown', 'highlights').query\n    -- (atx_heading\n    --   (atx_h1_marker)) @markup.heading.1\n    query:disable_pattern(3)\n    -- (fenced_code_block\n    --   (fenced_code_block_delimiter) @markup.raw.block\n    --   (#set! conceal \"\")\n    --   (#set! conceal_lines \"\"))\n    query:disable_pattern(17)\n    -- (fenced_code_block\n    --   (info_string\n    --     (language) @label\n    --     (#set! conceal \"\")\n    --     (#set! conceal_lines \"\")))\n    query:disable_pattern(18)\nend\n\nvim.api.nvim_create_autocmd('FileType', {\n    pattern = 'markdown',\n    callback = function()\n        vim.treesitter.start()\n        vim.defer_fn(disable_patterns, 500)\n    end,\n})\n```\n\n- `test.md`\n\n````\n# Heading\n\n```python\nprint(\"Hello\")\nprint(\"Hello\")\nprint(\"Hello\")\n```\n````\n\n- Output of `nvim --clean -u minimal.lua test.md`\n\n<img width=\"289\" height=\"194\" alt=\"actual\" src=\"https://github.com/user-attachments/assets/2ac711e7-75f1-4c3e-a3c4-486230ec2499\" />\n\n- The output shows the header in red and conceals the fenced code block delimiters so it is showing the results of highlighting with the disabled patterns still enabled.\n\n### Expected behavior\n\nAfter moving around the buffer (and making a modification to remove the concealed lines) the highlighter ends in the \"expected\" state where everything is highlighted according to the current query:\n\n<img width=\"289\" height=\"194\" alt=\"expected\" src=\"https://github.com/user-attachments/assets/609bac72-ccfa-4f66-9d17-b0b18a9dc9b3\" />",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`disable_pattern` is a low-level API, so using it properly requires extra handling -- which isn't to say that we can't expose additional (low-level) API to make this easier. As a simple workaround, doesn't `vim.api.nvim__redraw()` after the `disable_pattern` call work?\n\nLong-term, your use case should be handled by 1. `@noconceal` and 2. buffer-local queries, which are on the roadmap.",
            "created_at": "2025-08-06T07:59:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/35180#issuecomment-3157960036",
            "id": 3157960036,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35180",
            "node_id": "IC_kwDOAPphoM68OqVk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3157960036/reactions"
            },
            "updated_at": "2025-08-06T07:59:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3157960036",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "`vim.api.nvim__redraw()` solves some of the inconsistencies, but not all. Unless I'm calling it incorrectly:\n\n```lua\n...\n    query:disable_pattern(18)\n    vim.api.nvim__redraw({ valid = false })\n...\n```\n\nIt updates the heading color, so it is no longer red. However it does not fix the concealed lines, those remain hidden until a buffer edit is made:\n\n<img width=\"289\" height=\"194\" alt=\"redraw\" src=\"https://github.com/user-attachments/assets/8d3656c0-1aa6-4644-963a-ea180b899807\" />\n\nLooking briefly at the highlighting code it might have to do with all the additional state being tracked for concealed lines which only gets recomputed when text change.\n\nI'll keep an eye out for the longer term features to land, thanks for the info!\n\nFeel free to close the issue, doesn't seem like there's anything actionable to do here.",
            "created_at": "2025-08-06T18:42:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/35180#issuecomment-3161205272",
            "id": 3161205272,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35180",
            "node_id": "IC_kwDOAPphoM68bCoY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3161205272/reactions"
            },
            "updated_at": "2025-08-06T18:42:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3161205272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52591095?v=4",
                "events_url": "https://api.github.com/users/MeanderingProgrammer/events{/privacy}",
                "followers_url": "https://api.github.com/users/MeanderingProgrammer/followers",
                "following_url": "https://api.github.com/users/MeanderingProgrammer/following{/other_user}",
                "gists_url": "https://api.github.com/users/MeanderingProgrammer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MeanderingProgrammer",
                "id": 52591095,
                "login": "MeanderingProgrammer",
                "node_id": "MDQ6VXNlcjUyNTkxMDk1",
                "organizations_url": "https://api.github.com/users/MeanderingProgrammer/orgs",
                "received_events_url": "https://api.github.com/users/MeanderingProgrammer/received_events",
                "repos_url": "https://api.github.com/users/MeanderingProgrammer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MeanderingProgrammer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MeanderingProgrammer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MeanderingProgrammer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does https://github.com/neovim/neovim/pull/35057 help with this or unrelated?",
            "created_at": "2025-08-07T03:01:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/35180#issuecomment-3162252602",
            "id": 3162252602,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35180",
            "node_id": "IC_kwDOAPphoM68fCU6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162252602/reactions"
            },
            "updated_at": "2025-08-07T03:01:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162252602",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Unfortunately not, I pulled the change and tested it out to make sure, same behavior persists.\n\nI did dive deeper into the highlighting code and found the cause of the current behavior.\n\nMost `extmarks` created for highlighting are `ephemeral`, so re-created on each redraw cycle: \n\nhttps://github.com/neovim/neovim/blob/5f9f7064622cda25ac5d34f8b5a0c10248181489/runtime/lua/vim/treesitter/highlighter.lua#L429\n\nWith `conceal_lines` `extmarks` however that's not the case:\n\nhttps://github.com/neovim/neovim/blob/5f9f7064622cda25ac5d34f8b5a0c10248181489/runtime/lua/vim/treesitter/highlighter.lua#L445\n\nSo the only time concealed lines get removed is when `nvim_buf_clear_namespace` is called, which is either when the highlighter is destroyed or as part of the `on_bytes` treesitter callback. Which explains why they only get removed after a change to the buffer occurs and why the other highlights are fixed after calling `nvim__redraw`.\n\nIdeally it would be possible to detect that a previously concealed line no longer has the `conceal_lines` metadata associated with it and the `extmark` could be deleted. Or if `conceal_lines` `extmarks` could also be ephemeral.",
            "created_at": "2025-08-07T06:19:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/35180#issuecomment-3162662031",
            "id": 3162662031,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/35180",
            "node_id": "IC_kwDOAPphoM68gmSP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162662031/reactions"
            },
            "updated_at": "2025-08-07T06:19:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3162662031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/52591095?v=4",
                "events_url": "https://api.github.com/users/MeanderingProgrammer/events{/privacy}",
                "followers_url": "https://api.github.com/users/MeanderingProgrammer/followers",
                "following_url": "https://api.github.com/users/MeanderingProgrammer/following{/other_user}",
                "gists_url": "https://api.github.com/users/MeanderingProgrammer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MeanderingProgrammer",
                "id": 52591095,
                "login": "MeanderingProgrammer",
                "node_id": "MDQ6VXNlcjUyNTkxMDk1",
                "organizations_url": "https://api.github.com/users/MeanderingProgrammer/orgs",
                "received_events_url": "https://api.github.com/users/MeanderingProgrammer/received_events",
                "repos_url": "https://api.github.com/users/MeanderingProgrammer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MeanderingProgrammer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MeanderingProgrammer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MeanderingProgrammer",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/35180/comments",
    "created_at": "2025-08-06T04:41:19Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/35180/events",
    "html_url": "https://github.com/neovim/neovim/issues/35180",
    "id": 3295159940,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/35180/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM7EaCaE",
    "number": 35180,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/35180/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/35180/timeline",
    "title": "Clear highlighter state when the query is modified",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-08-07T06:19:52Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/35180",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/52591095?v=4",
        "events_url": "https://api.github.com/users/MeanderingProgrammer/events{/privacy}",
        "followers_url": "https://api.github.com/users/MeanderingProgrammer/followers",
        "following_url": "https://api.github.com/users/MeanderingProgrammer/following{/other_user}",
        "gists_url": "https://api.github.com/users/MeanderingProgrammer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MeanderingProgrammer",
        "id": 52591095,
        "login": "MeanderingProgrammer",
        "node_id": "MDQ6VXNlcjUyNTkxMDk1",
        "organizations_url": "https://api.github.com/users/MeanderingProgrammer/orgs",
        "received_events_url": "https://api.github.com/users/MeanderingProgrammer/received_events",
        "repos_url": "https://api.github.com/users/MeanderingProgrammer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MeanderingProgrammer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MeanderingProgrammer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MeanderingProgrammer",
        "user_view_type": "public"
    }
}