{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\n`ModeChanged` is not triggered after custom textobject ends executing but before custom `g@` operator ('operatorfunc') starts executing, although there is a mode change.\n\n### Steps to reproduce\n\n1. Create the following 'init.vim':\n\n    ```vim\n    let g:log = []\n    au ModeChanged *:* let g:log = g:log + [{ 'state': 'ModeChanged', 'from_mode': v:event.old_mode, 'to_mode': v:event.new_mode }]\n\n    function Textobject()\n      let g:log = g:log + [{ 'state': 'before normal!', 'mode': mode(1) }]\n      normal! V\n      let g:log = g:log + [{ 'state': 'after normal!',  'mode': mode(1) }]\n    endfunction\n\n    onoremap io <Cmd>call Textobject()<CR>\n\n    function Operator(mode)\n      let g:log = g:log + [{ 'state': 'inside operator', 'mode': mode(1) }]\n    endfunction\n\n    function MakeOperator()\n      set operatorfunc=Operator\n      return 'g@'\n    endfunction\n\n    nnoremap <expr> gs MakeOperator()\n    ```\n2. `nvim --clean -u init.vim`\n3. Type `gs` followed by `io`.\n4. Execute `:echo g:log`. It shows the following list (see \"PROBLEM\" comment for actual problem):\n\n    ```vim\n    [\n      \" Starting to execute `gs` operator\n      { 'state': 'ModeChanged', 'from_mode': 'n', 'to_mode': 'no' },\n\n      \" Executing `io` textobject ends in 'V' mode (as expected)\n      { 'state': 'before normal!', 'mode': 'no' },\n      { 'state': 'ModeChanged', 'from_mode': 'no', 'to_mode': 'n' },\n      { 'state': 'ModeChanged', 'from_mode': 'n', 'to_mode': 'V' },\n      { 'state': 'after normal!', 'mode': 'V' },\n\n      \" PROBLEM: At the start of operator the mode is \"n\" but \"ModeChanged\" has not yet triggered\n      { 'state': 'inside operator', 'mode': 'n' },\n      { 'state': 'ModeChanged', 'from_mode': 'V', 'to_mode': 'n' },\n\n      \" Result of pressing `:echo g:log`\n      { 'state': 'ModeChanged', 'from_mode': 'n', 'to_mode': 'c' },\n      { 'state': 'ModeChanged', 'from_mode': 'c', 'to_mode': 'n' }\n    ]\n    ```\n\n### Expected behavior\n\n'ModeChanged' can be triggered after custom textobject ends execution but before 'operatorfunc' starts its execution.\n\nThis is relevant/important, because:\n- Using visual selection in Operator-pending is pretty common. For example, [built-in comment textobject](https://github.com/neovim/neovim/blob/77be44563acb64a481d48f45c8dbbfca2d7db415/runtime/lua/vim/_comment.lua#L255) uses this.\n- Having something like `vim.cmd('noautocmd normal! ...')` inside 'operatorfunc' blocks the `ModeChanged V:n` event which can cause problems. For example, with the suggested documented way of [toggling relative numbers](https://github.com/neovim/neovim/blob/77be44563acb64a481d48f45c8dbbfca2d7db415/runtime/doc/autocmd.txt#L769-L770) this will lead to not toggling back.\n\n------\n\nVim (9.1.1065) doesn't show this behavior. Instead, it omits many of the 'ModeChanged' events and results in the following `echo g:log`:\n\n```vim\n[\n  { 'state': 'ModeChanged', 'from_mode': 'n',  'to_mode': 'no' },\n  { 'state': 'ModeChanged', 'from_mode': 'no', 'to_mode': 'n' },\n  { 'state': 'ModeChanged', 'from_mode': 'n',  'to_mode': 'c' },\n  { 'state': 'ModeChanged', 'from_mode': 'c',  'to_mode': 'n' }\n]\n```\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-dev-1680+g77be44563a\n\n### Vim (not Nvim) behaves the same?\n\nNo\n\n### Operating system/version\n\nEndeavourOS Linux x86_64, 6.12.10-arch1-1\n\n### Terminal name/version\n\nGhostty 1.1.0-arch\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nFrom source",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I get exactly the same behavior as Nvim in Vim 9.1.1065 with `set nocompatible`.",
            "created_at": "2025-02-03T00:47:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/32300#issuecomment-2629667552",
            "id": 2629667552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32300",
            "node_id": "IC_kwDOAPphoM6cvYrg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629667552/reactions"
            },
            "updated_at": "2025-02-03T00:49:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2629667552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I get exactly the same behavior as Nvim in Vim 9.1.1065 with `set nocompatible`.\n\nYes, indeed, my bad. I remember trying it interactively but it didn't change the behavior for some reason.",
            "created_at": "2025-02-03T10:18:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/32300#issuecomment-2630521198",
            "id": 2630521198,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32300",
            "node_id": "IC_kwDOAPphoM6cypFu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2630521198/reactions"
            },
            "updated_at": "2025-02-03T10:18:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2630521198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32300/comments",
    "created_at": "2025-02-02T18:55:27Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32300/events",
    "html_url": "https://github.com/neovim/neovim/issues/32300",
    "id": 2825955413,
    "labels": [
        {
            "color": "F9D0C4",
            "default": false,
            "description": "wrong behavior inherited from vim",
            "id": 154310492,
            "name": "bug-vim",
            "node_id": "MDU6TGFiZWwxNTQzMTA0OTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-vim"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "upstream issue that must be fixed in Vim first",
            "id": 2639399975,
            "name": "needs:vim-patch",
            "node_id": "MDU6TGFiZWwyNjM5Mzk5OTc1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:vim-patch"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "text objects, normal commands",
            "id": 5826986707,
            "name": "normal-mode",
            "node_id": "LA_kwDOAPphoM8AAAABW1DC0w",
            "url": "https://api.github.com/repos/neovim/neovim/labels/normal-mode"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32300/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6ocKhV",
    "number": 32300,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32300/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32300/timeline",
    "title": "`ModeChanged` is not triggered between textobject and 'opratorfunc', but mode has changed",
    "updated_at": "2025-02-03T10:18:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32300",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}