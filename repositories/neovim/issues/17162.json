{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Neovim version (nvim -v)\r\n\r\nNVIM v0.7.0-dev+908-g431915fe6 (also happens in 0.6.0)\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNo, Vim 8.2.4051 works as expected\r\n\r\n### Operating system/version\r\n\r\nUbuntu 20.04\r\n\r\n### Terminal name/version\r\n\r\nkitty 0.23.1\r\n\r\n### $TERM environment variable\r\n\r\nxterm-kitty\r\n\r\n### Installation\r\n\r\nappImage\r\n\r\n### How to reproduce the issue\r\n\r\nWhen help file is updated outside of current Neovim instance, `:helptags ALL` updates tags but doesn't update previously loaded help buffer (even if unlisted). This situation arises frequently if help file was generated automatically and leads to inability to see updates right away.\r\n\r\nThe following assumes Unix-like system:\r\n1. Create file `~/doc/my_help.txt` with the following content: `*test-tag-manual*`.\r\n2. Run `nvim --clean -u NONE`.\r\n3. `:set rtp=~`.\r\n4. `:helptags ALL` (this should generate `tags` file in `~/doc`).\r\n5. `:h test-tag-manual` (this should open window with `~/doc/my_help.txt`).\r\n6. `:q` (close window with help file; this makes its buffer unlisted).\r\n    6.1 If want to see that everything works when help buffer is wiped out, run `:%bwipe`.\r\n7. Outside of currently running Neovim instance update `~/doc/my_help.txt` to be `*test-tag-manual-new*`.\r\n8. `:helptags ALL` (this should regenerate `tags` file).\r\n9. `:h test-tag-manual-new` (should recognize as valid tag; tab-completion works).\r\n10. See error `E434: Can't find tag pattern.`. Help file opened with previous tag. Updates to current one if run `:edit`.\r\n\r\n### Expected behavior\r\n\r\nAll help pages are reloaded after `:helptags ALL` to be aligned with `tags` files.\r\n\r\n### Actual behavior\r\n\r\n`E434: Can't find tag pattern.` is given and previous version of help file is shown.\r\n\r\nHere are animations of behavior. Left pain is \"current Neovim instance\", top-right - another instance of Neovim to update help file \"outside of current instance\", top-left - watching `~/doc/tags` file to see that it actually updates.\r\n\r\n<details> <summary>Actual usage which gives error</summary>\r\n\r\n![neovim_helptags-all-issue](https://user-images.githubusercontent.com/24854248/150551379-43ab5ae9-a771-4d85-a89d-62a868da637f.gif)\r\n\r\n</details>\r\n\r\n<details> <summary>Usage with wiped out help buffer without error</summary>\r\n\r\n![neovim_helptags-all-issue_bwipeout](https://user-images.githubusercontent.com/24854248/150551405-6a485177-1df5-4a77-95e6-0adca39275bb.gif)\r\n\r\n</details>\r\n\r\n<details> <summary>Vim behavior without error</summary>\r\n\r\n![neovim-helptags-all-issue_vim](https://user-images.githubusercontent.com/24854248/150551442-c0ee09e9-65ed-40fd-b691-4591291ff726.gif)\r\n\r\n</details>",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "If buffer is listed (`:h buflisted()`) or not is not relevant here. This is  just the value of `:h 'buflisted'` option and nothing more. What really matters, if buffer is loaded (`:h bufloaded()`) or not.\r\nCurrently Neovim (unlike Vim) defaults to `set hidden`. For this reason plain `:q` (unlike, say, `:q!`) leaves buffer contents loaded in RAM. So,\r\n\r\n1. It really applies to both Vim and Neovim. The seeming difference is only due to option setting. \r\n2. The actual point is that help buffers are not \"checktimed\".\r\n\r\nNot sure if it is a real problem, though. After all, help is a special buffer. It is not supposed to be edited just like that.",
            "created_at": "2022-01-21T21:46:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/17162#issuecomment-1018887663",
            "id": 1018887663,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17162",
            "node_id": "IC_kwDOAPphoM48uv3v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1018887663/reactions"
            },
            "updated_at": "2022-01-21T21:46:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1018887663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35012635?v=4",
                "events_url": "https://api.github.com/users/matveyt/events{/privacy}",
                "followers_url": "https://api.github.com/users/matveyt/followers",
                "following_url": "https://api.github.com/users/matveyt/following{/other_user}",
                "gists_url": "https://api.github.com/users/matveyt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matveyt",
                "id": 35012635,
                "login": "matveyt",
                "node_id": "MDQ6VXNlcjM1MDEyNjM1",
                "organizations_url": "https://api.github.com/users/matveyt/orgs",
                "received_events_url": "https://api.github.com/users/matveyt/received_events",
                "repos_url": "https://api.github.com/users/matveyt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matveyt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matveyt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matveyt",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Aha, thanks for the insight!\r\n\r\nMy use case is that I have annotations in Lua code which are autoconverted into help file. So the desired workflow is: update annotation, regenerate (involves `helptags`), look at output. At the moment there is an extra step with going to buffer with help file and executing `:e`, which is kind of inconvenient. And I also noticed that `checktime` didn't quite work.\r\n\r\nWell, thanks to digging deeper into this topic, I managed to solve my particular problem with this workflow by making automated extra step for detecting buffer with particular help file (if exists) and essentially executing `vim.api.nvim_buf_call(buf_id, function() vim.cmd('edit') end)` (slightly simplified). But this still seems like a counter-intuitive behavior: help tags are up to date but can't be used to show help. So I can't really decide if this should be closed or not.",
            "created_at": "2022-01-22T10:18:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/17162#issuecomment-1019160222",
            "id": 1019160222,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17162",
            "node_id": "IC_kwDOAPphoM48vyae",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1019160222/reactions"
            },
            "updated_at": "2022-01-22T10:18:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1019160222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17162/comments",
    "created_at": "2022-01-21T15:18:53Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/17162/events",
    "html_url": "https://github.com/neovim/neovim/issues/17162",
    "id": 1110584035,
    "labels": [
        {
            "color": "F9D0C4",
            "default": false,
            "description": "wrong behavior inherited from vim",
            "id": 154310492,
            "name": "bug-vim",
            "node_id": "MDU6TGFiZWwxNTQzMTA0OTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-vim"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/17162/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5CMirj",
    "number": 17162,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/17162/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/17162/timeline",
    "title": "`helptags ALL` doesn't reload previously loaded help buffer",
    "updated_at": "2025-01-19T11:50:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/17162",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}