{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWith the below source file, between neovim 0.6 and neovim 0.11 something changed in the legacy python implementation so that the`vim.funcs.match` call with a NULL byte in it newly raised an exception.\r\n\r\nNot entirely sure what the should/shouldn't choice is here, but it worked before and doesn't work now so raising the bug.\r\nIf nothing else it's for visibility and I can link this in the patch where I update my plugin.\r\n\n\n### Steps to reproduce\n\nnvim --clean test.vim\r\n(Where test.vim contains the below)\r\n`:source %`\r\nObserve NvimError on second python call.\r\n```\r\npython3 import vim\r\nif has('nvim')\r\n\tpython3 print(vim.funcs.match('\\x01hello', '.hello'))\r\n\t\" Newly raises python exception.\r\n\tpython3 print(vim.funcs.match('\\x00hello', '.hello'))\r\nelse\r\n\tpython3 print(vim.Function('match')('\\x01hello', '.hello'))\r\n\t\" Original vim (version 9.1 with patches 1-80) complains about embedded NULL byte.\r\n\t\" ... However ... at the same time original vim converts NULL bytes to\r\n\t\" newline characters when returning from external channels, so there's\r\n\t\" precedence for not handling NULL bytes in original vim scripting.\r\n\tpython3 print(vim.Function('match')('\\x00hello', '.hello'))\r\nendif\r\n\r\necho match(\"\\x01hello\", '.hello')\r\n\" Does not crash, but also does not match.\r\necho match(\"\\x00hello\", '.hello')\r\n\r\n\"  NVIM v0.11.0-dev-422+g3c803483a\r\n\"  Build type: RelWithDebInfo\r\n\"  LuaJIT 2.1.1720049189\r\n\"  Run \":verbose version\" for more info\r\n\r\n\" With older version ... result matches for python and vimL versions.\r\n\" NVIM v0.6.1\r\n\" Build type: Debug\r\n\" LuaJIT 2.1.0-beta3\r\n\" Compilation: /usr/bin/cc -DNVIM_TS_HAS_SET_MATCH_LIMIT -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wmissing-prototypes -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fno-common -fdiagnostics-color=always -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -DMIN_LOG_LEVEL=1 -I/home/matthew/repos/neovim/build/config -I/home/matthew/repos/neovim/src -I/home/matthew/repos/neovim/.deps/usr/include -I/usr/include -I/home/matthew/repos/neovim/build/src/nvim/auto -I/home/matthew/repos/neovim/build/include\r\n```\n\n### Expected behavior\n\nDoes not raise NvimError.\n\n### Neovim version (nvim -v)\n\nv0.11.0-dev-422+g3c803483a\n\n### Vim (not Nvim) behaves the same?\n\nNo -- version of vim tested is 9.1 with patches 1-80\n\n### Operating system/version\n\nUbuntu 24.04\n\n### Terminal name/version\n\nXTerm(390)\n\n### $TERM environment variable\n\nscreen-256color\n\n### Installation\n\nBuild from repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29855/comments",
    "created_at": "2024-07-25T14:31:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29855/events",
    "html_url": "https://github.com/neovim/neovim/issues/29855",
    "id": 2430126270,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "",
            "id": 109899557,
            "name": "vimscript",
            "node_id": "MDU6TGFiZWwxMDk4OTk1NTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vimscript"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29855/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Q2Mi-",
    "number": 29855,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29855/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29855/timeline",
    "title": "Python legacy vim interface newly raises exception on string with NULL character",
    "updated_at": "2025-01-19T11:19:29Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29855",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4070620?v=4",
        "events_url": "https://api.github.com/users/hardenedapple/events{/privacy}",
        "followers_url": "https://api.github.com/users/hardenedapple/followers",
        "following_url": "https://api.github.com/users/hardenedapple/following{/other_user}",
        "gists_url": "https://api.github.com/users/hardenedapple/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hardenedapple",
        "id": 4070620,
        "login": "hardenedapple",
        "node_id": "MDQ6VXNlcjQwNzA2MjA=",
        "organizations_url": "https://api.github.com/users/hardenedapple/orgs",
        "received_events_url": "https://api.github.com/users/hardenedapple/received_events",
        "repos_url": "https://api.github.com/users/hardenedapple/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hardenedapple/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hardenedapple/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hardenedapple",
        "user_view_type": "public"
    }
}