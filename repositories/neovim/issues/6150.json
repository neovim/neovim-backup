{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Currently there are only two types of errors: Exception and Validation and translated exception text, but many languages like Python are supposed to translate them into something own: e.g. when indexing buffer it is expected that invalid index is IndexError, invalid buffer is something like ValueError and “Line index is too high” is TypeError. But with the current code it is clearly not possible to do such translation because one does not know what text will be received. Thus I suggest that\r\n\r\n1. Variant 1\r\n\r\n   1. Error messages are part of the API. Any change (including typo fixes) to the text is considered to be incompatible.\r\n   2. Messages which my potentially be truncated (e.g. like “Key \"%s\" doesn't exist”) must be written in a form `{identifier}: {data}`, e.g. `Key doesn't exist: %s`. `api_set_error` should contain an assert which checks that either `vim_snprintf()` was able to fit text into the message field or text ends with `%s` and there are no other `%…` atoms except `%%`. (Currently used `snprintf()` is not guaranteed to return sane length on some systems.)\r\n   3. No errors are translated.\r\n\r\n2. Variant 2\r\n\r\n   1. Exception messages are replaced or start with an identifier which are unique per function: e.g. `locked`, `lengthy`, `missing` for dict_set_value. Make it categorized to avoid confusion with other functions: `dict/locked`, `dict/lengthy`, … Identifiers must not be translated, must be a separate argument to `api_set_error` even if messages are kept and it would be logical if CI checked that no identifier is repeated twice. Identifiers are considered to be a part of the API.\r\n   2. If messages are chosen to be kept then they may be translated and are not a part of the API (except for the fact of their presence in reply).\r\n\r\nAdditionally error types are retired: I have no idea what these two types may be useful for in the current state and there is no documentation where I would expect it to live (i.e. api/private/defs.h should have at least some pointer or ag should be able to find documentation for `\\bk?ErrorType`, but neither is the case), so I assume that enough developers had already put some semi-random exception types to the code. Even if they are not retired there must be easily accessible documentation explaining WTF is the difference between Exception and Validation and all occurrences of api_set_error must be revisited to check conformance.\r\n\r\nI think that it is better to agree on this soon but this is not too urgent to be included in the `0.2`, so I selected `0.3` milestone. Note that current python client is not compatible with Vim in case scripts are written using EAFP principle: e.g.\r\n\r\n```Python\r\ntry:\r\n    cached_value = vim.vars['cached_value']\r\nexcept KeyError:\r\n    vim.vars['cached_value'] = cached_value = compute_value()\r\n```\r\n\r\nis not going to work because it emits NvimError.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "API errors are not end-user errors, and no one is going to translate them.\r\n\r\nI suggest we do **Variant 1**, but also:\r\n\r\n> identifier which are unique per function: e.g. locked, lengthy, missing for dict_set_value. Make it categorized to avoid confusion with other functions: dict/locked, dict/lengthy, …\r\n\r\nWe could use the ErrorType enum to define the ids. One advantage of using the enum is that it prevents accidental \"collisions\" (different errors using the same id).\r\n\r\n```c\r\ntypedef enum {\r\n  kErrorTypeNone = -1,\r\n  kErrorTypeException,\r\n  kErrorTypeValidation,\r\n  kErrorTypeDict_Locked,\r\n  kErrorTypeDict_TooLong,\r\n  ...\r\n} ErrorType;\r\n```\r\n\r\nThat data is already sent in the API metadata, see `init_error_type_metadata()`.\r\n\r\n    'error_types': { 'Validation': {'id': 1}, 'Exception': {'id': 0}, 'Foo': {'id': 2}, ... }",
            "created_at": "2017-04-23T15:04:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/6150#issuecomment-296449473",
            "id": 296449473,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6150",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjQ0OTQ3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/296449473/reactions"
            },
            "updated_at": "2017-04-23T15:04:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/296449473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "OTOH, putting that stuff in the API metadata bloats the metadata with info is rarely needed. Perhaps it isn't needed in the metadata, instead there can be a passive API lookup function:\r\n\r\n    Dictionary nvim_get_error(Integer error_id)",
            "created_at": "2017-04-23T15:10:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/6150#issuecomment-296449865",
            "id": 296449865,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6150",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjQ0OTg2NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/296449865/reactions"
            },
            "updated_at": "2017-04-23T15:10:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/296449865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Why not send whatever data along with the actual error? We should minimize round-trips before amount of data.",
            "created_at": "2017-04-23T15:23:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/6150#issuecomment-296450732",
            "id": 296450732,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6150",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjQ1MDczMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/296450732/reactions"
            },
            "updated_at": "2017-04-23T15:23:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/296450732",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Currently we send error message and id. So perhaps no extra functionality is needed, only a decision on other items above.",
            "created_at": "2017-04-23T16:01:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/6150#issuecomment-296453255",
            "id": 296453255,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6150",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjQ1MzI1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/296453255/reactions"
            },
            "updated_at": "2017-04-23T16:01:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/296453255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/6150/comments",
    "created_at": "2017-02-20T22:10:39Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/6150/events",
    "html_url": "https://github.com/neovim/neovim/issues/6150",
    "id": 208992912,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/6150/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 686,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 635,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-21T00:09:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUyMDg5OTI5MTI=",
    "number": 6150,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/6150/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/6150/timeline",
    "title": "API: Do not translate errors; add more error \"types\"",
    "updated_at": "2025-01-19T13:50:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/6150",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
        "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
        "followers_url": "https://api.github.com/users/ZyX-I/followers",
        "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
        "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ZyX-I",
        "id": 322097,
        "login": "ZyX-I",
        "node_id": "MDQ6VXNlcjMyMjA5Nw==",
        "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
        "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
        "repos_url": "https://api.github.com/users/ZyX-I/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ZyX-I",
        "user_view_type": "public"
    }
}