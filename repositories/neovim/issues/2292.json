{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I use fish as a default shell, but sh as my shell for vim scripts because many of the plugins I use assume the standard sh syntax. fish does work, actually very well, with `:terminal`.\n\nAccording to [one SO answer](http://stackoverflow.com/questions/11059067/what-is-the-nix-command-to-view-a-users-default-login-shell), the login shell can be obtained by running\n\n``` bash\n$ getent passwd $LOGNAME | cut -d: -f7\n```\n\n...and for Mac, [another SO answer](http://stackoverflow.com/questions/16375519/how-to-get-default-shell) recommended the same, but using this:\n\n``` bash\n$ grep ^$(id -un): /etc/passwd | cut -d : -f 7-\n```\n\nalthough the `^$(id -un)` syntax isn't fish-compatible and `grep` may output more than one username.\n",
    "closed_at": "2025-05-10T08:44:08Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "That's nice for scripts, but there are better ways for C programs. For example, [here](https://github.com/linuxmint/gnome-apps/blob/master/gnome-terminal/src/eggshell.c) you can see how gnome-terminal determines the user's default shell.\n",
            "created_at": "2015-03-29T19:27:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87460524",
            "id": 87460524,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDYwNTI0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87460524/reactions"
            },
            "updated_at": "2015-03-29T19:27:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87460524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2418402?v=4",
                "events_url": "https://api.github.com/users/HarmtH/events{/privacy}",
                "followers_url": "https://api.github.com/users/HarmtH/followers",
                "following_url": "https://api.github.com/users/HarmtH/following{/other_user}",
                "gists_url": "https://api.github.com/users/HarmtH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HarmtH",
                "id": 2418402,
                "login": "HarmtH",
                "node_id": "MDQ6VXNlcjI0MTg0MDI=",
                "organizations_url": "https://api.github.com/users/HarmtH/orgs",
                "received_events_url": "https://api.github.com/users/HarmtH/received_events",
                "repos_url": "https://api.github.com/users/HarmtH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HarmtH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HarmtH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HarmtH",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I do not agree. Like Vim NeoVim uses `SHELL` environment variable for `&shell` which is [defined](http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap08.html) as\n\n> This variable shall represent a pathname of the user's _preferred command language interpreter_. If this interpreter does not conform to the Shell Command Language in the Shell and Utilities volume of IEEE Std 1003.1-2001, Chapter 2, Shell Command Language, utilities may behave differently from those described in IEEE Std 1003.1-2001.\n\n. `fish` does not alter the value of `$SHELL` and it is also explicitly mentioned that interpreter is expected to be POSIX-conformant.\n\nLogin shell is completely irrelevant and may even be set to `/sbin/nologin` so that only things like `sudo` or `ssh` with explicit command may be used to run something. If NeoVim was using entry from /etc/passwd it would not be able to run shell commands under some not uncommon circumstances.\n",
            "created_at": "2015-03-29T20:12:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87467637",
            "id": 87467637,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDY3NjM3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87467637/reactions"
            },
            "updated_at": "2015-03-29T20:12:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87467637",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I am wrong about `/sbin/nologin`: it disables `ssh` (as well as anything not in `/etc/shells`).\n",
            "created_at": "2015-03-29T20:17:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87468666",
            "id": 87468666,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDY4NjY2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87468666/reactions"
            },
            "updated_at": "2015-03-29T20:22:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87468666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "But this does not disable `sudo`.\n",
            "created_at": "2015-03-29T20:21:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87469093",
            "id": 87469093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDY5MDkz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87469093/reactions"
            },
            "updated_at": "2015-03-29T20:21:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87469093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@HarmtH said:\n\n> here you can see how gnome-terminal determines the user's default shell.\n\nthat seems reasonable, and it would solve my issue.\n\n@ZyX-I \n\n> fish does not alter the value of $SHELL \n\nIt does for me, and I checked my configuration--I don't manually set it at all.\n\n> and it is also explicitly mentioned that interpreter is expected to be POSIX-conformant.\n\nTrue, but that begs the question: why not use bash or zsh? Plain ol' sh is fast, small, and I never need all the fancier features for vim plugins. Even if nvim used `$SHELL` instead, and I manually set `$SHELL` to zsh for compliance, that would be an improvement since I don't want zsh being spawned all the time.\n\nMy point is just that nvim's `shell` and the shell spawned by `:terminal` should be allowed to differ.\n",
            "created_at": "2015-03-29T20:48:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87474193",
            "id": 87474193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDc0MTkz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87474193/reactions"
            },
            "updated_at": "2015-03-29T20:48:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87474193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Diffing makes more sense, I thought you want `&shell` to be login shell.\n\n> It does for me, and I checked my configuration--I don't manually set it at all.\n\nfish-2.1.1 (Gentoo amd64) and 2.1.1-1200-g793784c do not do this, config is just\n\n``` Fish\n#fish_vi_mode\nset fish_function_path \"$HOME/.vam/powerline/powerline/bindings/fish\" $fish_function_path\npowerline-setup\n\n# vim: ft=fish\n```\n\nNote that fish has such annoying thing as universal variable. If you ever made `SHELL` universal and set it to `/bin/fish` it will continue to be set to `/bin/fish` in new shells up until you set it to something else. This is “super useful” for testing (which is the main reason I have fish installed in first place) and commonly led to an unexpected behaviour. I am not much familiar with fish to remember how exactly you need to set `SHELL` to make the result exported if `SHELL` is already a universal variable.\n",
            "created_at": "2015-03-29T21:12:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87480448",
            "id": 87480448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDgwNDQ4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87480448/reactions"
            },
            "updated_at": "2015-03-29T21:12:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87480448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I would though say that `:terminal`-specific non-`&shell` value should only be used for empty terminal commands since `:terminal` is suggested to be used in scripts like fugitive. Non-empty commands should be run with `&shell`.\n",
            "created_at": "2015-03-29T21:14:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87481620",
            "id": 87481620,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDgxNjIw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87481620/reactions"
            },
            "updated_at": "2015-03-29T21:15:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87481620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Would using `$SHELL` be good enough? Or are you asking for another set of `'shell'`, `'shellcmdflag'`, etc. options? \n",
            "created_at": "2015-03-29T21:30:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87484556",
            "id": 87484556,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDg0NTU2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87484556/reactions"
            },
            "updated_at": "2015-03-29T21:30:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87484556",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yeah, I said login shell referencing the discussion on gitter. `$SHELL` would be good for me.\n\n> I would though say that :terminal-specific non-&shell value should only be used for empty terminal commands since :terminal is suggested to be used in scripts like fugitive\n\nMight some users find that confusing? For example, simple commands like `ls **` behave differently in bash than fish, and not at all in `sh`. With fish, prints the relative path of everything in the path's subdirectories, while bash prints directories with a list of files under each one. I think it's reasonable to expect `:terminal | cmd` to behave exactly like `:terminal cmd`.\n\nI think `ls` is a good use-case too because when it detects that stdout is not a PTY, it doesn't produce an easy-to-read table.\n",
            "created_at": "2015-03-29T22:56:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87492838",
            "id": 87492838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDkyODM4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87492838/reactions"
            },
            "updated_at": "2015-03-29T22:56:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87492838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another thing we need to do is start the shell with the login flag which seems to be the default behavior in tmux and also avoids problems like scrambled `PATH` variable as reported in gitter.\n\nDo all shells use the -l flag to specify that it should start as a login shell?\n",
            "created_at": "2015-03-30T00:00:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87499372",
            "id": 87499372,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDk5Mzcy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87499372/reactions"
            },
            "updated_at": "2015-03-30T00:00:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87499372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tarruda AFAIK most common and forced convention is prepending a HYPHENMINUS to the shell name: e.g. `su` runs shell as `-su`. This is also how sudo works:\n\n```\n2243  execve(\"/usr/bin/sudo\", [\"sudo\", \"--login\", \"--user\", \"zyx\"], [/* 70 vars */]) = 0\n2244  execve(\"/bin/zsh\", [\"-zsh\"], [/* 16 vars */]) = 0\n…\n```\n\n(note: no `-l` or `--login`).\n",
            "created_at": "2015-03-30T05:07:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87547795",
            "id": 87547795,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTQ3Nzk1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87547795/reactions"
            },
            "updated_at": "2015-03-30T05:07:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87547795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Might some users find that confusing? For example, simple commands like ls *\\* behave differently in bash than fish, and not at all in sh. With fish, prints the relative path of everything in the path's subdirectories, while bash prints directories with a list of files under each one. I think it's reasonable to expect :terminal | cmd to behave exactly like :terminal cmd.\n\nNo, it is not. `:exe 'terminal' | call feedkeys(\"cmd\\n\")` (`:terminal | cmd` will not do what I guess you meant at all) will run shell in interactive mode, `terminal cmd` will run something like `shell, \"-c\", cmd`. It is _already_ a big difference because aliases are not used in this case.\n\nThe main reason I am suggesting what I am suggesting is that scripts are expected to run `:terminal` now under some circumstances. This means they will use `execute 'terminal command' shellescape(arg1, 1) shellescape(arg2, 1) …` and `shellescape()` escapes its value for `&shell`. It is also possible that scripts will use command substitution which differs in different shells, but I think this is much unlikely.\n\nOr, instead of this `termescape()` function is needed which is like `shellescape(, 1)`, but for shell used by `:terminal`.\n",
            "created_at": "2015-03-30T05:22:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87551469",
            "id": 87551469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTUxNDY5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87551469/reactions"
            },
            "updated_at": "2015-03-30T05:22:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87551469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I’m in favor of using `$SHELL` rather than `&shell` as the default `:terminal` command, for the same reasons as @splinterofchaos. Since `&shell` defaults to `$SHELL` anyway, the behavior would be identical for most users.\n",
            "created_at": "2015-03-30T09:53:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87618388",
            "id": 87618388,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjE4Mzg4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87618388/reactions"
            },
            "updated_at": "2015-09-14T12:23:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87618388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3199732?v=4",
                "events_url": "https://api.github.com/users/Grimy/events{/privacy}",
                "followers_url": "https://api.github.com/users/Grimy/followers",
                "following_url": "https://api.github.com/users/Grimy/following{/other_user}",
                "gists_url": "https://api.github.com/users/Grimy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Grimy",
                "id": 3199732,
                "login": "Grimy",
                "node_id": "MDQ6VXNlcjMxOTk3MzI=",
                "organizations_url": "https://api.github.com/users/Grimy/orgs",
                "received_events_url": "https://api.github.com/users/Grimy/received_events",
                "repos_url": "https://api.github.com/users/Grimy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Grimy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Grimy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Grimy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think having a seperate variable which also defaults to $SHELL would be nice, when :term is run without arguments.\n\nOn the note of login shells, I dont think Neovim should start a login shell, at least not by default. Login shells are meant to be run after, as the name suggests, a login. For example after logging in with 'ssh' or 'login'. At least in gnome-terminal it is an option to run as a login shell, which is off by default.\n",
            "created_at": "2015-03-30T10:16:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87623048",
            "id": 87623048,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NjIzMDQ4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87623048/reactions"
            },
            "updated_at": "2015-03-30T10:17:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87623048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2418402?v=4",
                "events_url": "https://api.github.com/users/HarmtH/events{/privacy}",
                "followers_url": "https://api.github.com/users/HarmtH/followers",
                "following_url": "https://api.github.com/users/HarmtH/following{/other_user}",
                "gists_url": "https://api.github.com/users/HarmtH/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HarmtH",
                "id": 2418402,
                "login": "HarmtH",
                "node_id": "MDQ6VXNlcjI0MTg0MDI=",
                "organizations_url": "https://api.github.com/users/HarmtH/orgs",
                "received_events_url": "https://api.github.com/users/HarmtH/received_events",
                "repos_url": "https://api.github.com/users/HarmtH/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HarmtH/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HarmtH/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HarmtH",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> The main reason I am suggesting what I am suggesting is that scripts are expected to run :terminal now under some circumstances. This means they will use execute 'terminal command' shellescape(arg1, 1) shellescape(arg2, 1) … and shellescape() escapes its value for &shell.\n\nThat's a good point... Script writers will assume standard sh syntax, which `$SHELL` may not be. Still, to get the benefits of a color terminal and PTY, which the old uses of `&shell` never needed, we could either recommend that `&shell` be a full-featured color shell or add some new config points.\n\nWe could make a `&tshell` or `&terminalshell` config and also a `tshellescape()` function or add another extra argument to `shellescape()`, allowing command shells, terminal shells, and `$SHELL` to differ independently. I'm not sure at this point whether that would introduce too much complexity, and more commands might require adaptation as well.\n\nFinally, we'd then have the shell spawned by `:terminal` with no command, which could use `$SHELL`.\n\nIt rubs me the wrong way that at any point, we might have three different shells launched in three different ways and for different reasons, but I'm not sure this would actually cause any problems. Thoughts?\n",
            "created_at": "2015-03-30T16:34:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87743671",
            "id": 87743671,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzQzNjcx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87743671/reactions"
            },
            "updated_at": "2015-03-30T16:34:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87743671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For a script launching a specific command, rather than relying on `shellescape()` wouldn't it be simpler to just launch the process using the argv-list like with `jobstart` ? (at least when globbing, shell substitution etc is not required) \n",
            "created_at": "2015-03-30T17:10:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-87753859",
            "id": 87753859,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3NzUzODU5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87753859/reactions"
            },
            "updated_at": "2015-03-30T17:10:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87753859",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "What are these scripts that everyone keeps talking about? surely shell scripts should include their preferred interpreter in the hashbang (#!) and nvim should follow suit for the context of that script.\n\nPS. sorry for being all necro\n",
            "created_at": "2015-09-14T11:38:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-140046077",
            "id": 140046077,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDA0NjA3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140046077/reactions"
            },
            "updated_at": "2015-09-14T11:38:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140046077",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/982109?v=4",
                "events_url": "https://api.github.com/users/wrigleyster/events{/privacy}",
                "followers_url": "https://api.github.com/users/wrigleyster/followers",
                "following_url": "https://api.github.com/users/wrigleyster/following{/other_user}",
                "gists_url": "https://api.github.com/users/wrigleyster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wrigleyster",
                "id": 982109,
                "login": "wrigleyster",
                "node_id": "MDQ6VXNlcjk4MjEwOQ==",
                "organizations_url": "https://api.github.com/users/wrigleyster/orgs",
                "received_events_url": "https://api.github.com/users/wrigleyster/received_events",
                "repos_url": "https://api.github.com/users/wrigleyster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wrigleyster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wrigleyster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wrigleyster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What are these scripts that everyone keeps talking about?\n\nPlugins. Many vim plugins that use `:!` internally completely break down when `&shell` is not a POSIX shell. \n",
            "created_at": "2015-09-14T12:26:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-140054558",
            "id": 140054558,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDA1NDU1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140054558/reactions"
            },
            "updated_at": "2015-09-14T12:26:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140054558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3199732?v=4",
                "events_url": "https://api.github.com/users/Grimy/events{/privacy}",
                "followers_url": "https://api.github.com/users/Grimy/followers",
                "following_url": "https://api.github.com/users/Grimy/following{/other_user}",
                "gists_url": "https://api.github.com/users/Grimy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Grimy",
                "id": 3199732,
                "login": "Grimy",
                "node_id": "MDQ6VXNlcjMxOTk3MzI=",
                "organizations_url": "https://api.github.com/users/Grimy/orgs",
                "received_events_url": "https://api.github.com/users/Grimy/received_events",
                "repos_url": "https://api.github.com/users/Grimy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Grimy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Grimy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Grimy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "sounds to me like those plugins aught to be fixed to use `:!sh -c` instead. `&shell` is for interactive use, it makes no sense to use it as the interpreter of scripts\n",
            "created_at": "2015-09-15T13:03:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-140381095",
            "id": 140381095,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDM4MTA5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140381095/reactions"
            },
            "updated_at": "2015-09-15T13:03:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140381095",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/982109?v=4",
                "events_url": "https://api.github.com/users/wrigleyster/events{/privacy}",
                "followers_url": "https://api.github.com/users/wrigleyster/followers",
                "following_url": "https://api.github.com/users/wrigleyster/following{/other_user}",
                "gists_url": "https://api.github.com/users/wrigleyster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wrigleyster",
                "id": 982109,
                "login": "wrigleyster",
                "node_id": "MDQ6VXNlcjk4MjEwOQ==",
                "organizations_url": "https://api.github.com/users/wrigleyster/orgs",
                "received_events_url": "https://api.github.com/users/wrigleyster/received_events",
                "repos_url": "https://api.github.com/users/wrigleyster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wrigleyster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wrigleyster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wrigleyster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I do not like the complexity of some solutions. My opinion is that:\n1. `&shell` and friends must be used each time NeoVim wants anything launched in shell.\n2. `&shell` defaults to `$SHELL` on *nix, but this is the only place where `$SHELL` is used. Defaults are OS-dependent.\n3. Script writers are supposed to run `termopen([cmd, arg…])`, `system([cmd, arg…])`, `jobstart([cmd, arg…])` (needs a clear alternative to `:!`). This should be documented in the coding standard and enforced on every runtime file in core.\n4. It is supposed that for each function that takes an argv list `func(shellescape(cmd).' '.shellescape(arg)…)` should do nearly the same thing as using argv list. This is neither checked nor enforced though.\n5. It is supposed that for each command `exe 'nvimcmd' shellescape(cmd, 1) shellescape(arg, 1)…` should do nearly the same thing as the equivalent function with argv list if any. Again neither checked nor enforced.\n6. If we ever have a VimL linter, using `func(string)` and `nvimcmd string`/`exe 'nvimcmd' string` is a warning, `string` containing any character not wrapped with `shellescape()` and not matching `[[:alnum:]\\x20]` is an error.\n7. `&shell` is _never_ assumed to be a POSIX shell. It is also _not_ assumed that there _is_ a POSIX shell somewhere available. Only assumptions made are the behaviours of `shellescape()` (and `:S` modifier) (with proper other &shell options) and space and ASCII alphanumeric characters outside of `shellescape()`. Reason: Windows users may have no POSIX shell at all on their systems.\n\nNote: `&shell` is _indeed_ for interactive use. But I cannot say I never used `system()` in the interactive session, not to mention `!`, `read !` or `write !`.\n\n@wrigleyster You must not assume `sh` is available or is in PATH. There is also Windows. If script writers need scripts to be portable across systems assuming used commands are available and do what expected they write it in VimL using 3. If they target *nix and need specifically POSIX shell scripts they write a separate file with shebang `#!/bin/sh` and executable bit in VCS. Lengthy code inside a string in VimL without normal line wrapping or multiline string capabilities looks ugly.\n\n---\n\nAnd let me highlight again: what is the equivalent for `!` that uses argv list? `jobstart` with functions that call `echon` in on_stdout/err callbacks + some message in on_exit callback?\n",
            "created_at": "2015-09-15T19:09:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-140504677",
            "id": 140504677,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDUwNDY3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140504677/reactions"
            },
            "updated_at": "2015-09-15T19:09:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140504677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@ZyX-I you misunderstand me. My point was: It is the responsibility of the **script writer** to ensure that commands are interpreted correctly, not the responsibility of vim. Said in other words: if a script breaks because `&shell` has an unexpected value, that is a bug in the script, not in vim.\n\nI am not sure I understand all of your points, but I think we are of the same mind.\n",
            "created_at": "2015-09-15T22:51:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-140572550",
            "id": 140572550,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDU3MjU1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140572550/reactions"
            },
            "updated_at": "2015-09-15T22:51:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140572550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/982109?v=4",
                "events_url": "https://api.github.com/users/wrigleyster/events{/privacy}",
                "followers_url": "https://api.github.com/users/wrigleyster/followers",
                "following_url": "https://api.github.com/users/wrigleyster/following{/other_user}",
                "gists_url": "https://api.github.com/users/wrigleyster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wrigleyster",
                "id": 982109,
                "login": "wrigleyster",
                "node_id": "MDQ6VXNlcjk4MjEwOQ==",
                "organizations_url": "https://api.github.com/users/wrigleyster/orgs",
                "received_events_url": "https://api.github.com/users/wrigleyster/received_events",
                "repos_url": "https://api.github.com/users/wrigleyster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wrigleyster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wrigleyster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wrigleyster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@wrigleyster I agree that it is script writers responsibility to ensure that commands are interpreted correctly, I only highlighted some reasonable assumptions that may be used if script writer for some reason chooses to use shell in place of argv list. But using `sh -c` explicitly is almost always the wrong way to do this: “those plugins” ought to be fixed by porting their scripts to VimL.\n",
            "created_at": "2015-09-15T22:59:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-140575960",
            "id": 140575960,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDU3NTk2MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140575960/reactions"
            },
            "updated_at": "2015-09-15T22:59:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140575960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "because there still seems to be debate over the correct handling of this ( #4422 )\n\nnote that the following quotes are from multiple folks upstream in this discussion\n\n> Many vim plugins that use :! internally completely break down when &shell is not a POSIX shell.\n\nwhy would you expect a plugin that's dependent upon a particular environment to work outside of that environment? no-one should expect a plugin that requires posix compliance to work in a non-posix environment. The problem here is NOT that the plugin breaks. The problem is that the plugin creator failed to document its requirements OR the installer failed to read them. \n\n> It rubs me the wrong way that at any point, we might have three different shells launched in three different ways and for different reasons, but I'm not sure this would actually cause any problems. Thoughts?\n\nMaybe i misunderstood your intent, but why would you expect someone who works in shell x all day to have vim open a terminal that resulted in shell y to be happy? All their aliases will be gone, all their functions will be gone, the internal scripting language will be different and usage will degrade dramatically. \n\n> My point was: It is the responsibility of the script writer to ensure that commands are interpreted correctly, not the responsibility of vim.\n\nyes, 1000 times yes. \n\n> True, but that begs the question: why not use bash or zsh?\n\nWhy not use emacs? The answer is pretty much the same: \"Because X does a damn good job and I like the features it provides me\" Just because _you're_ happy with the limitations/features of zsh and bash doesn't mean everyone else is. \n",
            "created_at": "2016-03-16T21:22:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-197554573",
            "id": 197554573,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzU1NDU3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/197554573/reactions"
            },
            "updated_at": "2016-03-16T21:22:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/197554573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2829?v=4",
                "events_url": "https://api.github.com/users/masukomi/events{/privacy}",
                "followers_url": "https://api.github.com/users/masukomi/followers",
                "following_url": "https://api.github.com/users/masukomi/following{/other_user}",
                "gists_url": "https://api.github.com/users/masukomi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/masukomi",
                "id": 2829,
                "login": "masukomi",
                "node_id": "MDQ6VXNlcjI4Mjk=",
                "organizations_url": "https://api.github.com/users/masukomi/orgs",
                "received_events_url": "https://api.github.com/users/masukomi/received_events",
                "repos_url": "https://api.github.com/users/masukomi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/masukomi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/masukomi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/masukomi",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I hit this problem myself while trying to run external programs on Windows but using GitBash as the terminal. I know this discussion is about what the default should be but here is a workaround for now.\r\n\r\n* Running `:Term` sets the shell to bash and runs `terminal`\r\n* When terminal opens it sets the shell back to `cmd.exe`\r\n* `cabbrev` then just allows you to use `:term` instead of typing `:Term`\r\n\r\n```\r\ncommand! Term :set shell=/Tools/Git/bin/bash.exe|:term\r\nautocmd TermOpen * :set shell=cmd.exe\r\n:cabbrev term <c-r>=(getcmdtype()==':' && getcmdpos()==1 ? 'Term' : 'term')<CR>\r\n```\r\n\r\nI hope someone finds this useful.",
            "created_at": "2018-05-28T15:56:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-392560647",
            "id": 392560647,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU2MDY0Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/392560647/reactions"
            },
            "updated_at": "2018-05-28T16:00:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/392560647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34678?v=4",
                "events_url": "https://api.github.com/users/PhilT/events{/privacy}",
                "followers_url": "https://api.github.com/users/PhilT/followers",
                "following_url": "https://api.github.com/users/PhilT/following{/other_user}",
                "gists_url": "https://api.github.com/users/PhilT/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PhilT",
                "id": 34678,
                "login": "PhilT",
                "node_id": "MDQ6VXNlcjM0Njc4",
                "organizations_url": "https://api.github.com/users/PhilT/orgs",
                "received_events_url": "https://api.github.com/users/PhilT/received_events",
                "repos_url": "https://api.github.com/users/PhilT/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PhilT/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PhilT/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PhilT",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This issue hasn't seen real activity in nearly a decade and the overall sentiment seems to be summarised with:\n\n> For a script launching a specific command, rather than relying on `shellescape()` wouldn't it be simpler to just launch the process using the argv-list like with `jobstart` ? (at least when globbing, shell substitution etc is not required) \n\nand\n\n> My point was: It is the responsibility of the script writer to ensure that commands are interpreted correctly, not the responsibility of vim.\n\nClosing.\n\n",
            "created_at": "2025-05-10T08:44:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/2292#issuecomment-2868643514",
            "id": 2868643514,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2292",
            "node_id": "IC_kwDOAPphoM6q_Aa6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868643514/reactions"
            },
            "updated_at": "2025-05-10T08:44:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2868643514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 25,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/2292/comments",
    "created_at": "2015-03-29T19:08:10Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/2292/events",
    "html_url": "https://github.com/neovim/neovim/issues/2292",
    "id": 65085737,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/2292/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 277,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 320,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2025-05-10T14:46:06Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU2NTA4NTczNw==",
    "number": 2292,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/2292/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/2292/timeline",
    "title": ":terminal should not use &shell",
    "type": null,
    "updated_at": "2025-05-10T08:44:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/2292",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
        "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
        "followers_url": "https://api.github.com/users/splinterofchaos/followers",
        "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
        "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/splinterofchaos",
        "id": 38515,
        "login": "splinterofchaos",
        "node_id": "MDQ6VXNlcjM4NTE1",
        "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
        "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
        "repos_url": "https://api.github.com/users/splinterofchaos/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/splinterofchaos",
        "user_view_type": "public"
    }
}