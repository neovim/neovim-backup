{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders",
            "user_view_type": "public"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI use nvim as pager like this:\n`nvim 63<&0 </dev/null -u NONE -i NONE --cmd \"term cat /dev/fd/63 && sleep 1000\"--cmd \"lua require[[pager]]($1, $2, $3)\"`. This is useful in kitty since it can pipe scrollback buffer to nvim.\n\nAfter https://github.com/neovim/neovim/commit/35e5307af25785ac90bd00f913fc0df5cf962db3: piping kitty scrollback buffer to nvim make it hang. And this only happened when I use `fish` (maybe since it wrap its prompt with osc 133).\n\n### Steps to reproduce\n\n~`bash repro.sh`:~\n\nRun this in a interactive bash:\n```sh\nnvim 63< <(python -c \"print('\\x1b]133;;\\x07' + $LINES *'\\n', end='')\") </dev/null -u NONE -i NONE +\"term cat /dev/fd/63\" +\"lua vim.wait(100)\"\n```\n\nbacktrace:\n```\n#0 multiqueue_remove at ../neovim/src/nvim/event/multiqueue.c:223\n#1 multiqueue_process_events at ../neovim/src/nvim/event/multiqueue.c:147\n#2 nlua_wait at ../neovim/src/nvim/lua/executor.c:500\n#3 lj_BC_FUNCC\n#4 lua_pcall at lj_api.c:1151\n#5 nlua_pcall at ../neovim/src/nvim/lua/executor.c:182\n#6 nlua_typval_exec  at ../neovim/src/nvim/lua/executor.c:1463\n#7 ex_lua at ../neovim/src/nvim/lua/executor.c:1682\n#8 execute_cmd0\n    at ../neovim/src/nvim/ex_docmd.c:1714\n#9 do_one_cmd at ../neovim/src/nvim/ex_docmd.c:2358\n#10 do_cmdline at ../neovim/src/nvim/ex_docmd.c:669\n#11 exe_commands at ../neovim/src/nvim/main.c:1898\n#12 main at ../neovim/src/nvim/main.c:582\n```\n\n### Expected behavior\n\nnvim shouldn't hang.\n\n### Nvim version (nvim -v)\n\nhttps://github.com/neovim/neovim/commit/35e5307af25785ac90bd00f913fc0df5cf962db3\n\n### Vim (not Nvim) behaves the same?\n\nNo\n\n### Operating system/version\n\nLinux arch 6.13.5-zen1-1-zen\n\n### Terminal name/version\n\nkitty 0.39.0\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nbuilt from source",
    "closed_at": "2025-03-07T18:16:40Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "It seems that using `source` in an interactive bash is necessary to reproduce the issue. Otherwise the `$LINES` variable is not defined.",
            "created_at": "2025-03-06T12:10:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/32753#issuecomment-2703670410",
            "id": 2703670410,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32753",
            "node_id": "IC_kwDOAPphoM6hJryK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2703670410/reactions"
            },
            "updated_at": "2025-03-06T12:10:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2703670410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It is stuck in an infinite loop here:\n\n```c\n  if (term->sb_pending > 0) {\n    // Don't emit the event while there is pending scrollback because we need\n    // the buffer contents to be fully updated. If this is the case, re-schedule\n    // the event.\n    multiqueue_put(main_loop.events, emit_termrequest, term, sequence, (void *)sequence_length,\n                   pending_send, (void *)(intptr_t)row, (void *)(intptr_t)col);\n    return;\n  }\n```\n\n`emit_termrequest` keeps putting itself back on the event loop, and the event loop is cycling forever calling it over and over again.\n\nWhat I am trying to understand is why the terminal refresh timer callback isn't being called. The refresh timer ought to execute, which refreshes the scrollback and cleares `term->sb_pending`, which should allow `emit_termrequest` to proceed.",
            "created_at": "2025-03-06T15:47:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/32753#issuecomment-2704233215",
            "id": 2704233215,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32753",
            "node_id": "IC_kwDOAPphoM6hL1L_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2704233215/reactions"
            },
            "updated_at": "2025-03-06T15:47:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2704233215",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This fixes the issue. Still trying to understand the root cause to make sure it's the _right_ fix.\n\n```diff\ndiff --git a/src/nvim/terminal.c b/src/nvim/terminal.c\nindex 8300b536e2..542e1384fb 100644\n--- a/src/nvim/terminal.c\n+++ b/src/nvim/terminal.c\n@@ -221,12 +221,18 @@\n   int col = (int)(intptr_t)argv[5];\n \n   if (term->sb_pending > 0) {\n-    // Don't emit the event while there is pending scrollback because we need\n-    // the buffer contents to be fully updated. If this is the case, re-schedule\n-    // the event.\n-    multiqueue_put(main_loop.events, emit_termrequest, term, sequence, (void *)sequence_length,\n-                   pending_send, (void *)(intptr_t)row, (void *)(intptr_t)col);\n-    return;\n+    // When there is pending scrollback the line number from the event may not\n+    // yet be valid. If the terminal buffer is the current buffer then refresh\n+    // the scrollback immediately. Otherwise, reschedule the event and try\n+    // again.\n+    buf_T *buf = handle_get_buffer(term->buf_handle);\n+    if (buf == curbuf) {\n+      refresh_scrollback(term, buf);\n+    } else {\n+      multiqueue_put(main_loop.events, emit_termrequest, term, sequence, (void *)sequence_length,\n+                     pending_send, (void *)(intptr_t)row, (void *)(intptr_t)col);\n+      return;\n+    }\n   }\n \n   set_vim_var_string(VV_TERMREQUEST, sequence, (ptrdiff_t)sequence_length);\n```",
            "created_at": "2025-03-06T15:48:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/32753#issuecomment-2704235696",
            "id": 2704235696,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32753",
            "node_id": "IC_kwDOAPphoM6hL1yw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2704235696/reactions"
            },
            "updated_at": "2025-03-06T15:48:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2704235696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">What I am trying to understand is why the terminal refresh timer callback isn't being called.\n\nI think this is because of `LOOP_PROCESS_EVENTS_UNTIL` in `vim.wait`. It is only processing events from the `main_loop.events` multiqueue and is not turning the main libuv event loop, so the timer is never firing.\n\n**EDIT:** It is not the `LOOP_PROCESS_EVENTS` macro, but the `multiqueue_process_events` function that is stuck. It tries to drain all events from the queue, but the event is adding itself back, so it never finishes draining.\n\nSo `emit_termrequest` should not be putting itself back onto the same queue it was executed from. The right solution then is to schedule itself back onto the main event loop (maybe by using another timer, or by doing it in the `refresh_timer_cb`).",
            "created_at": "2025-03-06T15:55:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/32753#issuecomment-2704252885",
            "id": 2704252885,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/32753",
            "node_id": "IC_kwDOAPphoM6hL5_V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2704252885/reactions"
            },
            "updated_at": "2025-03-06T16:03:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2704252885",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/32753/comments",
    "created_at": "2025-03-06T11:52:58Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/32753/events",
    "html_url": "https://github.com/neovim/neovim/issues/32753",
    "id": 2900194597,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "f9d0c4",
            "default": false,
            "description": "wrong behavior that was introduced in a previous commit (please bisect)",
            "id": 619474658,
            "name": "bug-regression",
            "node_id": "MDU6TGFiZWw2MTk0NzQ2NTg=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-regression"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue has been tracked to a specific commit",
            "id": 1481421490,
            "name": "has:bisected",
            "node_id": "MDU6TGFiZWwxNDgxNDIxNDkw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:bisected"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/32753/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 226,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 30,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-03-10T21:49:00Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "I_kwDOAPphoM6s3XUl",
    "number": 32753,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/32753/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/32753/timeline",
    "title": "nvim hang in `vim.wait` when `cat file | nvim 63<&0 </dev/null +\"term cat /dev/fd/63\"`",
    "updated_at": "2025-03-07T18:16:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/32753",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/91544758?v=4",
        "events_url": "https://api.github.com/users/phanen/events{/privacy}",
        "followers_url": "https://api.github.com/users/phanen/followers",
        "following_url": "https://api.github.com/users/phanen/following{/other_user}",
        "gists_url": "https://api.github.com/users/phanen/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/phanen",
        "id": 91544758,
        "login": "phanen",
        "node_id": "U_kgDOBXTctg",
        "organizations_url": "https://api.github.com/users/phanen/orgs",
        "received_events_url": "https://api.github.com/users/phanen/received_events",
        "repos_url": "https://api.github.com/users/phanen/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/phanen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phanen/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/phanen",
        "user_view_type": "public"
    }
}