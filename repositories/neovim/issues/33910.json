{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nObserved on Alpine Linux edge [x86_x64](https://gitlab.alpinelinux.org/alpine/aports/-/jobs/1843019) when building neovim 0.11.1 package:\n\n```\nFAILED   test/functional/treesitter/fold_spec.lua @ 720: treesitter foldexpr doesn't open folds that are not touched\ntest/functional/treesitter/fold_spec.lua:761: Row 1 did not match.\nExpected:\n  |*{1:-}^t1                                     |\n  |*{1:-}# h2                                   |\n  |*{1:│}t2                                     |\n  |{3:~                                       }|\n  |{3:~                                       }|\n  |{3:~                                       }|\n  |{3:~                                       }|\n  |1 line less; before #2  {MATCH:.*}|\nActual:\n  |*{1: }^t1                                     |\n  |*{1:+}{2:+--  2 lines: # h2·····················}|\n  |*{3:~                                       }|\n  |{3:~                                       }|\n  |{3:~                                       }|\n  |{3:~                                       }|\n  |{3:~                                       }|\n  |1 line less; before #2  0 seconds ago   |\nTo print the expect() call that would assert the current screen state, use\nscreen:snapshot_util(). In case of non-deterministic failures, use\nscreen:redraw_debug() to show all intermediate screen states.\nSnapshot:\nscreen:expect([[\n  {1: }^t1                                     |\n  {1:+}{2:+--  2 lines: # h2·····················}|\n  {3:~                                       }|*5\n  1 line less; before #2  0 seconds ago   |\n]])\nstack traceback:\n\ttest/functional/ui/screen.lua:852: in function '_wait'\n\ttest/functional/ui/screen.lua:517: in function 'expect'\n\ttest/functional/treesitter/fold_spec.lua:761: in function <test/functional/treesitter/fold_spec.lua:720>\n```\n\n### Steps to reproduce\n\n```sh\nbuild() {\n\tlocal cmakeoptions=\n\tcase \"$CARCH\" in\n\t\tppc64le | riscv64 | s390x | loongarch64) cmakeoptions=\"-DPREFER_LUA=ON\" ;;\n\tesac\n\n\t# DCI_BUILD: See https://github.com/neovim/neovim/issues/22932\n\tcmake -B build -G Ninja \\\n\t\t-DCMAKE_BUILD_TYPE=MinSizeRel \\\n\t\t-DCMAKE_INSTALL_PREFIX=/usr \\\n\t\t-DCMAKE_INSTALL_LIBDIR=lib \\\n\t\t-DENABLE_LTO=TRUE \\\n\t\t-DCMAKE_VERBOSE_MAKEFILE=TRUE \\\n\t\t-DCI_BUILD=OFF \\\n\t\t-DENABLE_TRANSLATIONS=ON \\\n\t\t$cmakeoptions\n\tcmake --build build\n}\n\ncheck() {\n\t# Required by the unit tests but not set on the Alpine GitLab CI.\n\texport USER=\"$(id -un)\"\n\n\t# Without this, the temp directory for the tests exceeds the sun_path\n\t# buffer in sockaddr_un, causing test failures due to path trunctation.\n\texport XDG_RUNTIME_DIR=/tmp\n\n\t# Needed to ensure that neovim finds the tree-parser grammars.\n\tln -Tfs /usr/lib/tree-sitter \"$builddir\"/runtime/parser\n\n\texport TEST_TIMEOUT=12000\n\n\tmsg \"Running unit tests\"\n\tcmake --build build --target unittest\n\n\t# The functional tests are known to fail on 32-bit arches.\n\t# See: https://github.com/neovim/neovim/issues/32230\n\tcase \"$CARCH\" in\n\tarm*|x86) return ;;\n\tesac\n\n\texport TEST_SKIP_FRAGILE=1\n\t# fails on x86_64\n\texport BUSTED_ARGS=\"--filter-out quitting.swapfile.dialog.on.startup\"\n\t# TODO: report upstream\n\tBUSTED_ARGS=\"$BUSTED_ARGS --filter-out TUI.forwards\"\n\tBUSTED_ARGS=\"$BUSTED_ARGS --filter-out TUI.supports.undercurl\"\n\t# https://github.com/neovim/neovim/issues/33908\n\tBUSTED_ARGS=\"$BUSTED_ARGS --filter-out diff.mode.overlapped.diff.blocks\"\n\n\tmsg \"Running functional tests\"\n\tcmake --build build --target functionaltest\n}\n```\n\n### Expected behavior\n\ntest pass\n\n### Nvim version (nvim -v)\n\n0.11.1\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nAlpine Linux edge\n\n### Terminal name/version\n\ndont know. happens in CI\n\n### $TERM environment variable\n\ndont know. happens in CI\n\n### Installation\n\nuse abuild to build alpine package from source",
    "closed_at": "2025-05-10T08:31:35Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> dont know. happens in CI\n\nYou're giving us preciously little to work on. If you don't have an Alpine system where you can run the tests manually, we can't help you. Is the failure deterministic? Is there a timing problem? Some tests are fragile.\n\n(Make sure all tree-sitter parsers are built and installed correctly -- and \"correctly\" means the exact versions we specify. Some of the versions in your log look very wrong.)",
            "created_at": "2025-05-08T14:24:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/33910#issuecomment-2863259167",
            "id": 2863259167,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33910",
            "node_id": "IC_kwDOAPphoM6qqd4f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863259167/reactions"
            },
            "updated_at": "2025-05-08T14:28:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863259167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is a known flaky test, also on our own CI: https://github.com/neovim/neovim/actions/runs/14802695725/job/41564923338?pr=33770#step:10:9709.",
            "created_at": "2025-05-08T14:30:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/33910#issuecomment-2863276239",
            "id": 2863276239,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33910",
            "node_id": "IC_kwDOAPphoM6qqiDP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863276239/reactions"
            },
            "updated_at": "2025-05-08T14:30:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863276239",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This is a known flaky test, also on our own CI: \n\nMaybe add a  `skip_fragile` similar to 84910773140b9a82bc78c577db5b2c7779cc1a36?",
            "created_at": "2025-05-08T14:38:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/33910#issuecomment-2863301208",
            "id": 2863301208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33910",
            "node_id": "IC_kwDOAPphoM6qqoJY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863301208/reactions"
            },
            "updated_at": "2025-05-08T14:38:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2863301208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66357?v=4",
                "events_url": "https://api.github.com/users/ncopa/events{/privacy}",
                "followers_url": "https://api.github.com/users/ncopa/followers",
                "following_url": "https://api.github.com/users/ncopa/following{/other_user}",
                "gists_url": "https://api.github.com/users/ncopa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ncopa",
                "id": 66357,
                "login": "ncopa",
                "node_id": "MDQ6VXNlcjY2MzU3",
                "organizations_url": "https://api.github.com/users/ncopa/orgs",
                "received_events_url": "https://api.github.com/users/ncopa/received_events",
                "repos_url": "https://api.github.com/users/ncopa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ncopa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ncopa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ncopa",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33910/comments",
    "created_at": "2025-05-08T14:22:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33910/events",
    "html_url": "https://github.com/neovim/neovim/issues/33910",
    "id": 3049166575,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 110418643,
            "name": "test",
            "node_id": "MDU6TGFiZWwxMTA0MTg2NDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/test"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "packaging and distributing Nvim to users",
            "id": 124686703,
            "name": "distribution",
            "node_id": "MDU6TGFiZWwxMjQ2ODY3MDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/distribution"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33910/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM61vpbv",
    "number": 33910,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33910/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33910/timeline",
    "title": "test \"treesitter foldexpr doesn't open folds that are not touched\" fails on Alpine Linux CI",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-10T08:31:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33910",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/66357?v=4",
        "events_url": "https://api.github.com/users/ncopa/events{/privacy}",
        "followers_url": "https://api.github.com/users/ncopa/followers",
        "following_url": "https://api.github.com/users/ncopa/following{/other_user}",
        "gists_url": "https://api.github.com/users/ncopa/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ncopa",
        "id": 66357,
        "login": "ncopa",
        "node_id": "MDQ6VXNlcjY2MzU3",
        "organizations_url": "https://api.github.com/users/ncopa/orgs",
        "received_events_url": "https://api.github.com/users/ncopa/received_events",
        "repos_url": "https://api.github.com/users/ncopa/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ncopa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ncopa/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ncopa",
        "user_view_type": "public"
    }
}