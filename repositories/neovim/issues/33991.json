{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nNo easy way to detect treesitter parsing errors in the current buffer*\n\n\n*You could add a highlights.scm query that highlights the whole ERROR node, but this doesn't come with the goodies that diagnostics provide.\n\n### Expected behavior\n\nDiagnostics are incredibly useful for quickly identifying syntax errors in code buffers, but \ncurrently diagnostics are often limited to LSP diagnostics. Not all filetypes having LSP servers available, or users might not have these external programs installed.\n\nTreesitter is another valuable addition to the Nvim toolset that provides context-aware highlighting, but there is currently no clear way to show where the TS parser fails to parse the buffers contents. For some filetypes, having a LSP would be overkill (think sshconfig or other config files), but a TS parser exists and can easily point to syntax errors.\n\nIt would be valuable to display TS parse errors as diagnostics to easily spot syntax errors without LSP.\n\nThis idea is originally proposed in this [reddit thread](https://www.reddit.com/r/neovim/comments/1ir069p/treesitter_diagnostics/) and I have been using and enjoying it for some months now. Their implementation is less than 100 LOC.\n\nI understand that this can get a bit noisy with certain TS parsers (I noticed the vimscript parser is often wrong for example), so I would propose to make it opt-in, and possible to disable per-filetype / per-parser.\n\nRelated:\n- #13959 sounds similar, but wants to expose actual errors that happen during parsing instead of exposing the ERROR node via Nvims diagnostics.\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Let me get this right: you want tree-sitter parsing errors _for arbitrary languages_?\n\nThis only makes sense if you want to develop tree-sitter parsers -- in which case there are better tools available. \n\nOtherwise this will be _very_ noisy while typing. \n\n(Using treesitter as an \"LSP at home\" is not a good idea, since the vast majority of parsers are deliberately not strict. That is one of the first tips given to grammar writers: Be permissive, don't worry about incorrect code, the goal is syntax highlighting not linting.)",
            "created_at": "2025-05-12T19:25:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/33991#issuecomment-2873746288",
            "id": 2873746288,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33991",
            "node_id": "IC_kwDOAPphoM6rSeNw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2873746288/reactions"
            },
            "updated_at": "2025-05-12T19:25:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2873746288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh, and ERROR nodes _are_ parsing errors, there is no other thing. They are often not where the actual error is, but where tree-sitter finally throws up its hands and sulks. \n\nOn the other hand, there is _misparsing_ where the parser successfully returns a syntax tree but it's not the one you want. But those are the syntax errors you most want to catch...",
            "created_at": "2025-05-12T19:26:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/33991#issuecomment-2873748201",
            "id": 2873748201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/33991",
            "node_id": "IC_kwDOAPphoM6rSerp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2873748201/reactions"
            },
            "updated_at": "2025-05-12T19:31:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2873748201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/33991/comments",
    "created_at": "2025-05-12T18:45:25Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/33991/events",
    "html_url": "https://github.com/neovim/neovim/issues/33991",
    "id": 3057832644,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/33991/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM62QtLE",
    "number": 33991,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/33991/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/33991/timeline",
    "title": "Treesitter errors as diagnostics",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-05-12T19:31:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/33991",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
        "events_url": "https://api.github.com/users/yochem/events{/privacy}",
        "followers_url": "https://api.github.com/users/yochem/followers",
        "following_url": "https://api.github.com/users/yochem/following{/other_user}",
        "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yochem",
        "id": 23235841,
        "login": "yochem",
        "node_id": "MDQ6VXNlcjIzMjM1ODQx",
        "organizations_url": "https://api.github.com/users/yochem/orgs",
        "received_events_url": "https://api.github.com/users/yochem/received_events",
        "repos_url": "https://api.github.com/users/yochem/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yochem",
        "user_view_type": "public"
    }
}