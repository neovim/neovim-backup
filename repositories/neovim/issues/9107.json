{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "```vim\r\nfunction! F(...) dict\r\n  echom string(a:000).', '.string(self)\r\n  echom string(s:opts)\r\nendfunction\r\n\r\nlet opts = {}\r\nlet opts.stdout_buffered = 1\r\nlet opts.stderr_buffered = 1\r\nlet opts.on_exit = function('F')\r\n\" let opts.on_stdout = function('F')\r\n\" let opts.on_stderr = function('F')\r\nlet opts.pty = 1\r\n\r\nlet s:opts = opts\r\n\r\nlet job = jobstart(['cat', '/dev/stdin'], opts)\r\n\" let job = jobstart(['echo', '/dev/stdin'], s:opts)\r\ncall jobsend(job, ['foo'])\r\ncall jobclose(job, 'stdin')\r\n```\r\n\r\nRunning this with `nvim -u t-dev-stdin-buffered.vim` will cause the job to not being closed/stopped.\r\n\r\nThe log says:\r\n\r\n> INFO  2018-10-11T15:56:16.756 28066 channel_create_event:208: new channel 3 (…/t-dev-stdin-buffered.vim:16) : {\"id\": 3, \"mode\": \"bytes\", \"stream\": \"job\", \"pty\": \"/dev/pts/25\"}\r\n> INFO  2018-10-11T15:56:16.824 28066 main:590: starting main loop\r\n\r\nCalling `jobstop(job)` then says:\r\n> INFO  2018-10-11T15:56:57.007 28066 on_process_exit:385: exited: pid=28067 status=1 stoptime=0\r\n\r\nNVIM v0.3.2-671-g384770556",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This happens without buffered output also already:\r\n```vim\r\nfunction! F(...) dict\r\n  echom string(a:000).', '.string(self)\r\n  echom string(s:opts)\r\nendfunction\r\n\r\nlet opts = {}\r\nlet opts.pty = 1\r\nlet opts.on_exit = function('F')\r\n\r\nlet s:opts = opts\r\n\r\nlet job = jobstart(['cat', '/dev/stdin'], opts)\r\ncall jobclose(job, 'stdin')\r\n```\r\n",
            "created_at": "2018-10-11T14:05:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428968330",
            "id": 428968330,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk2ODMzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428968330/reactions"
            },
            "updated_at": "2018-10-11T14:07:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428968330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah, it seems to be caused by not connecting `stdout` (not using `let opts.on_stdout = function('F')`), and not handling/reading `stdout` with buffered output correctly.",
            "created_at": "2018-10-11T14:10:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428970112",
            "id": 428970112,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk3MDExMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428970112/reactions"
            },
            "updated_at": "2018-10-11T14:10:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428970112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Manually sending SIGHUP makes it work, but the exit code will be 1 then:\r\n\r\n```vim\r\nfunction! F(...) dict\r\n  echom string(a:000).', '.string(self)\r\n  echom string(s:opts)\r\nendfunction\r\n\r\nlet opts = {}\r\nlet opts.stdout_buffered = 1\r\nlet opts.stderr_buffered = 1\r\nlet opts.on_exit = function('F')\r\n\" let opts.on_stdout = function('F')\r\n\" let opts.on_stderr = function('F')\r\nlet opts.pty = 1\r\n\r\nlet s:opts = opts\r\n\r\nlet job = jobstart(['cat', '/dev/stdin'], opts)\r\n\" let job = jobstart(['echo', '/dev/stdin'], s:opts)\r\ncall jobsend(job, ['foo'])\r\ncall jobclose(job, 'stdin')\r\n\r\ncall system('kill -SIGHUP '.jobpid(job))\r\n```\r\n\r\nLog:\r\n```\r\nINFO  2018-10-11T16:11:46.964 32436 channel_create_event:208: new channel 3 (…/t-dev-stdin-buffered.vim:16) : {\"id\": 3, \"mode\": \"bytes\", \"stream\": \"job\", \"pty\": \"/dev/pts/25\"}\r\nINFO  2018-10-11T16:11:46.967 32436 on_process_exit:385: exited: pid=32437 status=1 stoptime=0\r\nINFO  2018-10-11T16:11:46.967 32436 on_process_exit:385: exited: pid=32438 status=0 stoptime=0\r\nINFO  2018-10-11T16:11:47.009 32436 main:590: starting main loop\r\n```\r\n\r\n`:mess`:\r\n```\r\n[3, 1, 'exit'], {'stdout_buffered': 1, 'on_exit': function('F'), 'stderr_buffered': 1, 'stdou\r\nt': ['foo'], 'pty': 1}\r\n```\r\n",
            "created_at": "2018-10-11T14:13:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428971205",
            "id": 428971205,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk3MTIwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428971205/reactions"
            },
            "updated_at": "2018-10-11T14:13:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428971205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "And with `pty=1` it appears to get `stdin` on `stdout`?!\r\n\r\nThe following will have \"foo\" on \"stdout\", but not \"sbb\"?!\r\n\r\n```vim\r\nfunction! F(...) dict\r\n  echom string(a:000).', '.string(self)\r\nendfunction\r\n\r\nlet opts = {}\r\nlet opts.on_exit = function('F')\r\nlet opts.on_stdout = function('F')\r\nlet opts.on_stderr = function('F')\r\nlet opts.pty = 1\r\n\r\nlet job = jobstart(['rot13'], opts)\r\ncall jobsend(job, ['foo'])\r\ncall jobclose(job, 'stdin')\r\n```\r\n\r\n`:mess`:\r\n```\r\n[3, ['foo'], 'stdout'], {'on_exit': function('F'), 'on_stdout': function('F'), 'on_stderr': f\r\nunction('F'), 'pty': 1}\r\n```\r\n\r\nBisected this one to fee367a74 - /cc @bfredl",
            "created_at": "2018-10-11T14:32:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428978241",
            "id": 428978241,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk3ODI0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428978241/reactions"
            },
            "updated_at": "2018-10-11T14:56:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428978241",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Pty means stdin and stdout is the same fd. Use ctrl-d `\\x04` to signal end of input to the child process. ",
            "created_at": "2018-10-11T14:57:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428987725",
            "id": 428987725,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk4NzcyNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428987725/reactions"
            },
            "updated_at": "2018-10-11T14:57:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428987725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah.\r\n\r\n> Use ctrl-d \\x04 to signal end of input to the child process.\r\n\r\nWouldn't that be what `jobclose(job, 'stdin')` should do then?\r\n\r\nAs for the previous comment.. using `jobsend(job, nr2char(4))` then makes it stop, but it will have both \"foo\" and \"sbb\" on stdout then.\r\nBut that reflects the \"stdin and stdout is the same fd\" then.\r\n\r\nIt looks like \"pty\" and \"stdin\" cannot be used then together, right?",
            "created_at": "2018-10-11T15:11:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428993190",
            "id": 428993190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk5MzE5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428993190/reactions"
            },
            "updated_at": "2018-10-11T15:11:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428993190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What I wanted to achieve is having `/dev/stdin` (for hadolint) available, which appears to only be available with `pty=1`.",
            "created_at": "2018-10-11T15:13:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428993801",
            "id": 428993801,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk5MzgwMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428993801/reactions"
            },
            "updated_at": "2018-10-11T15:13:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428993801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Wouldn't that be what jobclose(job, 'stdin') should do then?\r\n\r\nNo, because it doesn't close the (bidirectional) pty. It just finishes the current/next `read()` command the child process  does. Just as when you type CTRL-D at `cat`, it either finishes the current input without NL or exists `cat` if there is no pending input, but it doesn't (necessarily) close the terminal window but allows it to return to the shell.\r\n\r\n> As for the previous comment.. using jobsend(job, nr2char(4)) then makes it stop, but it will have both \"foo\" and \"sbb\" on stdout then.\r\n\r\nYes. Compare what happens if you run `rot13` in a terminal window.\r\n\r\nThe pty could be configured to (1) not wait for NL or CTRL-D and (2) not echo the input back. A `stty` call should do this, I'll get back to it.\r\n\r\n> What I wanted to achieve is having /dev/stdin (for hadolint) available, which appears to only be available with pty=1.\r\n\r\nThis is an unfortunate limitation. Only a subset of linux IPC is reified as \"real\" filenames that `/dev/stdin` can link to. ",
            "created_at": "2018-10-11T15:20:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428996805",
            "id": 428996805,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk5NjgwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428996805/reactions"
            },
            "updated_at": "2018-10-11T15:21:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428996805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ok, thanks for the explanation!\r\n\r\nUsing `let maker = {'exe': 'sh', 'args': ['-s', '-c', \"stty -echo; tr o 0\"]}` and `sleep 1` before `jobsend()` (for stdin) will not echo it.",
            "created_at": "2018-10-11T15:24:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428998091",
            "id": 428998091,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk5ODA5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428998091/reactions"
            },
            "updated_at": "2018-10-11T15:24:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428998091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Indeed. I think it was discussed sometime in the past (in Gitter?) to add some pty flags to `jobstart()` options, which should do this without needing to shell out.",
            "created_at": "2018-10-11T15:27:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-428999411",
            "id": 428999411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk5OTQxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428999411/reactions"
            },
            "updated_at": "2018-10-11T15:27:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428999411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This will turn off echo by default, which appears to be sensible, isn't it?\r\n\r\n```diff\r\ndiff --git i/src/nvim/os/pty_process_unix.c w/src/nvim/os/pty_process_unix.c\r\nindex bafbfe1e4..a55f1e59d 100644\r\n--- i/src/nvim/os/pty_process_unix.c\r\n+++ w/src/nvim/os/pty_process_unix.c\r\n@@ -57,6 +57,7 @@ int pty_process_spawn(PtyProcess *ptyproc)\r\n   if (!termios_default.c_cflag) {\r\n     // TODO(jkeyes): We could pass NULL to forkpty() instead ...\r\n     init_termios(&termios_default);\r\n+    termios_default.c_lflag &= ~(ECHO);\r\n   }\r\n \r\n   int status = 0;  // zero or negative error code (libuv convention)\r\n```\r\n\r\nHow is \"not wait for NL or CTRL-D\" configured?  (appear to be related to `ICANON`, but without this the job never finishes then)\r\nAlso some generic function like `cfmakeraw` might be sensible?",
            "created_at": "2018-10-11T16:15:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429018513",
            "id": 429018513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTAxODUxMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429018513/reactions"
            },
            "updated_at": "2018-10-11T16:20:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429018513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This will turn off echo by default, which appears to be sensible, isn't it?\r\n\r\nWhy not leave the system defaults to their expected values and letting the user configure it if needed? Creating a set of nvim special defaults just adds yet a layer of arbitrary decisions an API user is expected to know about _in addition to_ knowing how PTY:s work in general, and knowing what the child does. Note as PTY childs can change these settings (as stty does), so a nvim default does not guarantee that these behaviours are disabled. It just means knowledge of PTY default behavior is suddenly invalid when working with nvim (or conversery, someone using nvim as the first PTY master interface will get the wrong impression of the defaults).",
            "created_at": "2018-10-11T17:29:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429046126",
            "id": 429046126,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA0NjEyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429046126/reactions"
            },
            "updated_at": "2018-10-11T17:32:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429046126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, that was only meant as some \"this works in this case\" patch - likely it would also affect `:term` in this case?!\r\n\r\nAnyway, isn't `init_termios` biased anyway already?\r\nhttps://github.com/neovim/neovim/blob/384770556ba02433904baf78f499b9bb48010040/src/nvim/os/pty_process_unix.c#L186-L239",
            "created_at": "2018-10-11T17:49:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429053664",
            "id": 429053664,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA1MzY2NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429053664/reactions"
            },
            "updated_at": "2018-10-11T17:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429053664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It might be, but in general the intention seems to be the expected behavior an ordinary terminal (standard echo behavior, cooked mode, standard key values), perhaps paper over some differences between different systems, but not to create nvim-specific behaviors as far as I can see.",
            "created_at": "2018-10-11T18:02:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429058845",
            "id": 429058845,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA1ODg0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429058845/reactions"
            },
            "updated_at": "2018-10-11T18:03:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429058845",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also we use the \"inherited\" termios settings, `init_termios` is a fallback.",
            "created_at": "2018-10-11T19:24:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429086828",
            "id": 429086828,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA4NjgyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429086828/reactions"
            },
            "updated_at": "2018-10-11T19:25:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429086828",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ">> What I wanted to achieve is having /dev/stdin (for hadolint) available, which appears to only be available with pty=1.\r\n\r\n> This is an unfortunate limitation. Only a subset of linux IPC is reified as \"real\" filenames that /dev/stdin can link to.\r\n\r\nWhere is this done?\r\nHow can this be simulated, e.g. to test `hadolint` outside of Neovim with this? (https://github.com/hadolint/hadolint/issues/273)",
            "created_at": "2018-10-11T23:11:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429152041",
            "id": 429152041,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTE1MjA0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429152041/reactions"
            },
            "updated_at": "2018-10-11T23:11:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429152041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Where is this done?\r\n\r\n`/dev/stdin` links to `/proc/self/fd/0`, and the later is a link set by the kernel, but not always to a real file name, for example:\r\n\r\n```\r\n% echo x | ls -l /proc/self/fd/\r\ntotal 0\r\nlr-x------ 1 bjorn bjorn 64 Oct 12 09:01 0 -> 'pipe:[49863]'\r\nlrwx------ 1 bjorn bjorn 64 Oct 12 09:01 1 -> /dev/pts/1\r\nlrwx------ 1 bjorn bjorn 64 Oct 12 09:01 2 -> /dev/pts/1\r\nlr-x------ 1 bjorn bjorn 64 Oct 12 09:01 3 -> /proc/2019/fd\r\n```\r\nso anything like `cat filename| hadolint ...` should work to emulate the same situation (but not `hadolint /dev/stdin < filename`, because this will open the file directly and thus give the real file name).\r\n\r\nAdding a `-` argument as in the linked issue would be the proper solution.",
            "created_at": "2018-10-12T07:08:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429227268",
            "id": 429227268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTIyNzI2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429227268/reactions"
            },
            "updated_at": "2018-10-12T07:08:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429227268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks again!\r\n\r\n> `cat filename| hadolint ...`\r\n\r\nThat unfortunately does not work (directly) when using a wrapper script to run hadolint in a Docker image (`exec /usr/bin/docker run --rm -i hadolint/hadolint hadolint \"${@:--}\"`).",
            "created_at": "2018-10-12T11:29:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429294778",
            "id": 429294778,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTI5NDc3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429294778/reactions"
            },
            "updated_at": "2018-10-12T11:29:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429294778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Why not? does the container not contain bash or similar shell?",
            "created_at": "2018-10-12T12:03:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429302888",
            "id": 429302888,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTMwMjg4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429302888/reactions"
            },
            "updated_at": "2018-10-12T12:03:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429302888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The file to be linted is outside of Docker.\r\nWhat appears to work though is using a mount to get the file into the container instead of using stdin:\r\n`/usr/bin/docker run --rm -i -v $PWD:/mnt hadolint/hadolint hadolint /mnt/Dockerfile`\r\nBut I think fixing hadolint itself to not require the pseudo file would be the best.",
            "created_at": "2018-10-12T12:24:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429307809",
            "id": 429307809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTMwNzgwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429307809/reactions"
            },
            "updated_at": "2018-10-12T12:24:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429307809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The point here was to answer the question \"How can this be simulated, e.g. to test hadolint outside of Neovim with this?\", not solving the actual issue. But if that's still a question, `cat filename| /usr/bin/docker ...` I guess should work for this.",
            "created_at": "2018-10-12T12:32:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429309768",
            "id": 429309768,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTMwOTc2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429309768/reactions"
            },
            "updated_at": "2018-10-12T12:32:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429309768",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah.. with `cat Dockerfile | hadolint -` `/dev/stdin` is available though.  I've thought that it would be related to how Neovim spawns the job, and could be simluated by some terminal option etc.\r\nI think it is fine for now, and I'll wait to feedback on the hadolint issue to use the fd directly.",
            "created_at": "2018-10-12T12:53:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-429315347",
            "id": 429315347,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTMxNTM0Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429315347/reactions"
            },
            "updated_at": "2018-10-12T12:53:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429315347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Gave it a shot in https://github.com/neovim/neovim/pull/10557.",
            "created_at": "2019-07-20T23:15:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-513505858",
            "id": 513505858,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzUwNTg1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/513505858/reactions"
            },
            "updated_at": "2019-07-20T23:15:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/513505858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I was trying to put together a way to pipe my buffer into a binary and render the result in a terminal, but turns out not being able to control the echo ruins the use case, so I'm pretty excited about this issue! :)\r\n\r\nMy specific usecase (not dissimilar to the examples mentioned above):\r\n\r\n```vim\r\nlet bufid = bufnr('%') | new | let id = termopen('mdcat') | call chansend(id, getbufline(bufid, 1, '$') + [\"\\r\", \"\\004\"])\r\n```\r\n\r\nmdcat takes some markdown and renders it using a bunch of ansi escape codes in a terminal. Right now I get the stdin echo prefacing mdcat's output which is unfortunate and difficult to work around. Tried to do all kinds of `stty -echo` trickery, but wasn't able to make it work nicely. Of course one could save it as a file and pass the path, but that's no fun! :)\r\n",
            "created_at": "2020-09-04T20:10:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/9107#issuecomment-687357883",
            "id": 687357883,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9107",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzM1Nzg4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/687357883/reactions"
            },
            "updated_at": "2020-09-04T20:10:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/687357883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6292?v=4",
                "events_url": "https://api.github.com/users/shazow/events{/privacy}",
                "followers_url": "https://api.github.com/users/shazow/followers",
                "following_url": "https://api.github.com/users/shazow/following{/other_user}",
                "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shazow",
                "id": 6292,
                "login": "shazow",
                "node_id": "MDQ6VXNlcjYyOTI=",
                "organizations_url": "https://api.github.com/users/shazow/orgs",
                "received_events_url": "https://api.github.com/users/shazow/received_events",
                "repos_url": "https://api.github.com/users/shazow/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shazow/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shazow",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 24,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/9107/comments",
    "created_at": "2018-10-11T14:02:02Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/9107/events",
    "html_url": "https://github.com/neovim/neovim/issues/9107",
    "id": 369136687,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/9107/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUzNjkxMzY2ODc=",
    "number": 9107,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/9107/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/9107/timeline",
    "title": "pty: add options to control input buffering and echo",
    "type": {
        "color": "blue",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "A request, idea, or new functionality",
        "id": 597167,
        "is_enabled": true,
        "name": "Enhancement",
        "node_id": "IT_kwDOAGK_Pc4ACRyv",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:59:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/9107",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
        "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
        "followers_url": "https://api.github.com/users/blueyed/followers",
        "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
        "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/blueyed",
        "id": 9766,
        "login": "blueyed",
        "node_id": "MDQ6VXNlcjk3NjY=",
        "organizations_url": "https://api.github.com/users/blueyed/orgs",
        "received_events_url": "https://api.github.com/users/blueyed/received_events",
        "repos_url": "https://api.github.com/users/blueyed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/blueyed",
        "user_view_type": "public"
    }
}