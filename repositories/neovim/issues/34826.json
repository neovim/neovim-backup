{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI alse get  completion.lua\n┗━━Undefined global vim. 52:30:10 Lua Diagnostics. undefined-global warning \n\n```\nlocal function on_attach(client, bufnr)\n\tif client.server_capabilities.semanticTokensProvider then\n\t\tclient.server_capabilities.semanticTokensProvider = nil\n\tend\n\tclient.server_capabilities.documentFormattingProvider = false\n\tclient.server_capabilities.documentFormattingRangeProvider = false\nend\n\n\n\nreturn {\n\t-- Mason-LSPConfig (closes some gaps that exist between mason.nvim and lspconfig)\n\t{\n\t\t\"williamboman/mason-lspconfig.nvim\",\n\t \tdependencies = { {\n\t\t\t\"williamboman/mason.nvim\",\n\t\t\topts = {},\n\t\t} }, -- LSP Manager\n\t\topts = {\n\t\t\t-- -- A list of servers to automatically install if they're not already installed. Example: { \"rust_analyzer@nightly\", \"lua_ls\" }\n\t\t\tensure_installed = { \"clangd\", \"lua_ls\", \"pyright\", \"ts_ls\" },\n\t\t\t-- Whether servers that are set up (via lspconfig) should be automatically installed if they're not already installed.\n\t\t\t-- This setting has no relation with the `ensure_installed` setting.\n\t\t\tautomatic_installation = true,\n\t\t\thandlers = {\n\t\t\t\t-- default handler\n\t\t\t\tfunction(server_name)\n\t\t\t\t\tlocal capabilities = require(\"cmp_nvim_lsp\").default_capabilities()\n\t\t\t\t\trequire(\"lspconfig\")[server_name].setup({\n\t\t\t\t\t\t-- cmp_nvim_lsp closes some gaps between nvim-cmp and nvim-lspconfig\n\t\t\t\t\t\t-- Add cmp_nvim_lsp capabilities settings to lspconfig\n\t\t\t\t\t\t-- This should be executed before you configure any language server\n\t\t\t\t\t\tcapabilities = capabilities,\n\t\t\t\t\t\ton_attach = on_attach,\n\t\t\t\t\t})\n\t\t\t\tend,\n\n\t\t\t\t-- custom handler\n\t\t\t\t-- note that custom handler overwrite default handler\n\t\t\t\t-- which means default handler's logic is not work for lsp server with custom handler\n\t\t\t\tclangd = function()\n\t\t\t\t\tlocal function switch_source_header_splitcmd(bufnr, splitcmd)\n\t\t\t\t\t\tbufnr = require(\"lspconfig\").util.validate_bufnr(bufnr)\n\t\t\t\t\t\tlocal clangd_client = require(\"lspconfig\").util.get_active_client_by_name(bufnr, \"clangd\")\n\t\t\t\t\t\tlocal params = { uri = vim.uri_from_bufnr(bufnr) }\n\t\t\t\t\t\tif clangd_client then\n\t\t\t\t\t\t\tclangd_client.request(\"textDocument/switchSourceHeader\", params, function(err, result)\n\t\t\t\t\t\t\t\tif err then\n\t\t\t\t\t\t\t\t\terror(tostring(err))\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\tif not result then\n\t\t\t\t\t\t\t\t\tvim.notify(\n\t\t\t\t\t\t\t\t\t\t\"Corresponding file can’t be determined\",\n\t\t\t\t\t\t\t\t\t\tvim.log.levels.ERROR,\n\t\t\t\t\t\t\t\t\t\t{ title = \"LSP Error!\" }\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\tvim.api.nvim_command(splitcmd .. \" \" .. vim.uri_to_fname(result))\n\t\t\t\t\t\t\tend)\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvim.notify(\n\t\t\t\t\t\t\t\t\"Method textDocument/switchSourceHeader is not supported by any active server on this buffer\",\n\t\t\t\t\t\t\t\tvim.log.levels.ERROR,\n\t\t\t\t\t\t\t\t{ title = \"LSP Error!\" }\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\n\t\t\t\t\tlocal capabilities = require(\"cmp_nvim_lsp\").default_capabilities()\n\t\t\t\t\trequire(\"lspconfig\").clangd.setup({\n\t\t\t\t\t\tfiletypes = { \"c\", \"cpp\", \"objc\", \"objcpp\", \"cuda\" },\n\t\t\t\t\t\troot_dir = function(fname)\n\t\t\t\t\t\t\treturn require(\"lspconfig.util\").root_pattern(\n\t\t\t\t\t\t\t\t\".clangd\",\n\t\t\t\t\t\t\t\t\".clang-tidy\",\n\t\t\t\t\t\t\t\t\".clang-format\",\n\t\t\t\t\t\t\t\t\"compile_commands.json\",\n\t\t\t\t\t\t\t\t\"compile_flags.txt\",\n\t\t\t\t\t\t\t\t\"configure.ac\" -- AutoTools\n\t\t\t\t\t\t\t)(fname) or vim.fs.dirname(vim.fs.find(\".git\", { path = fname, upward = true })[1])\n\t\t\t\t\t\tend,\n\n\t\t\t\t\t\tcapabilities = vim.tbl_deep_extend(\n\t\t\t\t\t\t\t\"keep\",\n\t\t\t\t\t\t\t{ offsetEncoding = { \"utf-16\", \"utf-8\" } },\n\t\t\t\t\t\t\tcapabilities\n\t\t\t\t\t\t),\n\t\t\t\t\t\tsingle_file_support = true,\n\t\t\t\t\t\tcmd = {\n\t\t\t\t\t\t\t\"/usr/bin/clangd\",\n\t\t\t\t\t\t\t\"--j=12\",\n\t\t\t\t\t\t\t\"--enable-config\",\n\t\t\t\t\t\t\t\"--background-index\",\n\t\t\t\t\t\t\t\"--clang-tidy\",\n\t\t\t\t\t\t\t\"--clang-tidy-checks=*\",\n\t\t\t\t\t\t\t\"--all-scopes-completion\",\n\t\t\t\t\t\t\t\"--completion-style=detailed\",\n\t\t\t\t\t\t\t\"--header-insertion-decorators\",\n\t\t\t\t\t\t\t\"--header-insertion=iwyu\",\n\t\t\t\t\t\t\t\"--limit-references=3000\",\n\t\t\t\t\t\t\t\"--limit-results=350\",\n\t\t\t\t\t\t\t\"--pch-storage=disk\",\n\t\t\t\t\t\t\t\"--pretty\",\n\t\t\t\t\t\t\t\"--inlay-hints\",\n\t\t\t\t\t\t\t\"--compile-commands-dir=/data/zenonzhang/QQMail\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton_attach = on_attach,\n\t\t\t\t\t\tcommands = {\n\t\t\t\t\t\t\tClangdSwitchSourceHeader = {\n\t\t\t\t\t\t\t\tfunction()\n\t\t\t\t\t\t\t\t\tswitch_source_header_splitcmd(0, \"edit\")\n\t\t\t\t\t\t\t\tend,\n\t\t\t\t\t\t\t\tdescription = \"Open source/header in current buffer\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tClangdSwitchSourceHeaderVSplit = {\n\t\t\t\t\t\t\t\tfunction()\n\t\t\t\t\t\t\t\t\tswitch_source_header_splitcmd(0, \"vsplit\")\n\t\t\t\t\t\t\t\tend,\n\t\t\t\t\t\t\t\tdescription = \"Open source/header in a new vsplit\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tClangdSwitchSourceHeaderSplit = {\n\t\t\t\t\t\t\t\tfunction()\n\t\t\t\t\t\t\t\t\tswitch_source_header_splitcmd(0, \"split\")\n\t\t\t\t\t\t\t\tend,\n\t\t\t\t\t\t\t\tdescription = \"Open source/header in a new split\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t-- gh: go to header\n\t\t\t\t\t\tvim.keymap.set(\n\t\t\t\t\t\t\t\"n\",\n\t\t\t\t\t\t\t\"gh\",\n\t\t\t\t\t\t\t\"<cmd>ClangdSwitchSourceHeader<CR>\",\n\t\t\t\t\t\t\t{ desc = \"go to class file header\" }\n\t\t\t\t\t\t),\n\t\t\t\t\t})\n\t\t\t\tend,\n\n\t\t\t\tlua_ls = function()\n\t\t\t\t\tlocal capabilities = require(\"cmp_nvim_lsp\").default_capabilities()\n\t\t\t\t\trequire(\"lspconfig\").lua_ls.setup({\n\t\t\t\t\t\tcapabilities = capabilities,\n\t\t\t\t\t\tsettings = {\n\t\t\t\t\t\t\tLua = {\n\t\t\t\t\t\t\t\truntime = { version = \"LuaJIT\" },\n\t\t\t\t\t\t\t\tdiagnostics = {\n\t\t\t\t\t\t\t\t\tglobals = { \"vim\" },\n\t\t\t\t\t\t\t\t\tdisable = { \"different-requires\", \"undefined-field\" },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tworkspace = {\n\t\t\t\t\t\t\t\t\tlibrary = {\n\t\t\t\t\t\t\t\t\t\tvim.fn.expand(\"$VIMRUNTIME/lua\"),\n\t\t\t\t\t\t\t\t\t\tvim.fn.expand(\"$VIMRUNTIME/lua/vim/lsp\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmaxPreload = 100000,\n\t\t\t\t\t\t\t\t\tpreloadFileSize = 10000,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\thint = { enable = true, setType = true },\n\t\t\t\t\t\t\t\tformat = { enable = true },\n\t\t\t\t\t\t\t\ttelemetry = { enable = false },\n\t\t\t\t\t\t\t\tsemantic = { enable = false },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\tend,\n\t\t\t},\n\t\t},\n\t},\n\n\t-- LSPConfig (Neovim LSP Client)\n\t{\n\t\t\"neovim/nvim-lspconfig\",\n\t\tevent = { \"BufReadPre\", \"BufNewFile\" },\n\t\tdependencies = { \"williamboman/mason-lspconfig.nvim\", \"hrsh7th/cmp-nvim-lsp\" },\n\t\tconfig = function()\n\t\t\tvim.lsp.set_log_level(\"ERROR\")\n\n\t\t\t_G._toggle_inlayhint = function()\n\t\t\t\tlocal is_enabled = vim.lsp.inlay_hint.is_enabled()\n\t\t\t\tvim.lsp.inlay_hint.enable(not is_enabled)\n\t\t\t\tvim.notify(\n\t\t\t\t\t(is_enabled and \"Inlay hint disabled successfully\" or \"Inlay hint enabled successfully\"),\n\t\t\t\t\tvim.log.levels.INFO,\n\t\t\t\t\t{ title = \"LSP Inlay Hint\" }\n\t\t\t\t)\n\t\t\tend\n\t\t\tvim.keymap.set(\"n\", \"<leader>lh\", _G._toggle_inlayhint, { desc = \"Toggle Inlay Hints\" })\n\t\tend,\n\t},\n\n```\n\n### Steps to reproduce\n\nnvim\n\n### Expected behavior\n\nClangdSwitchSourceHeader work\n\n### Nvim version (nvim -v)\n\n❯ nvim -v NVIM v0.11.2 Build type: Release LuaJIT 2.1.1741730670 Run \"nvim -V1 -v\" for more info\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nlinux\n\n### Terminal name/version\n\niterm2\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nrepo",
    "closed_at": "2025-07-07T13:26:47Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Is there any evidence that this is Neovim's fault? Please report this to lspconfig first.",
            "created_at": "2025-07-07T13:25:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/34826#issuecomment-3045136918",
            "id": 3045136918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34826",
            "node_id": "IC_kwDOAPphoM61gRoW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3045136918/reactions"
            },
            "updated_at": "2025-07-07T13:25:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3045136918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/151506788?v=4",
                "events_url": "https://api.github.com/users/Zevan770/events{/privacy}",
                "followers_url": "https://api.github.com/users/Zevan770/followers",
                "following_url": "https://api.github.com/users/Zevan770/following{/other_user}",
                "gists_url": "https://api.github.com/users/Zevan770/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Zevan770",
                "id": 151506788,
                "login": "Zevan770",
                "node_id": "U_kgDOCQfPZA",
                "organizations_url": "https://api.github.com/users/Zevan770/orgs",
                "received_events_url": "https://api.github.com/users/Zevan770/received_events",
                "repos_url": "https://api.github.com/users/Zevan770/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Zevan770/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Zevan770/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Zevan770",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "was renamed to `:LspClangdSwitchSourceHeader`\n\ndocumented at `:help lspconfig-commands`\n\nand unrelated to core Nvim...",
            "created_at": "2025-07-07T13:26:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/34826#issuecomment-3045144344",
            "id": 3045144344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34826",
            "node_id": "IC_kwDOAPphoM61gTcY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3045144344/reactions"
            },
            "updated_at": "2025-07-07T13:26:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3045144344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> was renamed to `:LspClangdSwitchSourceHeader`\n> \n> documented at `:help lspconfig-commands`\n> \n> and unrelated to core Nvim...\n\nthanks！ How can I  remove  completion.lua\n┗━━Undefined global vim. 52:30:10 Lua Diagnostics. undefined-global warning",
            "created_at": "2025-07-07T13:43:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/34826#issuecomment-3045227151",
            "id": 3045227151,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/34826",
            "node_id": "IC_kwDOAPphoM61gnqP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3045227151/reactions"
            },
            "updated_at": "2025-07-07T13:43:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/3045227151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/110723979?v=4",
                "events_url": "https://api.github.com/users/Elite-zx/events{/privacy}",
                "followers_url": "https://api.github.com/users/Elite-zx/followers",
                "following_url": "https://api.github.com/users/Elite-zx/following{/other_user}",
                "gists_url": "https://api.github.com/users/Elite-zx/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Elite-zx",
                "id": 110723979,
                "login": "Elite-zx",
                "node_id": "U_kgDOBpmDiw",
                "organizations_url": "https://api.github.com/users/Elite-zx/orgs",
                "received_events_url": "https://api.github.com/users/Elite-zx/received_events",
                "repos_url": "https://api.github.com/users/Elite-zx/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Elite-zx/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Elite-zx/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Elite-zx",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/34826/comments",
    "created_at": "2025-07-07T13:08:51Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/34826/events",
    "html_url": "https://github.com/neovim/neovim/issues/34826",
    "id": 3208975571,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as usage questions",
            "id": 77997478,
            "name": "closed:question",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:question"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/34826/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6_RRTT",
    "number": 34826,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/34826/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/34826/timeline",
    "title": "lsp config in 0.10.4 not work in 0.11.2: ClangdSwitchSourceHeader not work",
    "type": null,
    "updated_at": "2025-07-07T13:43:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/34826",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/110723979?v=4",
        "events_url": "https://api.github.com/users/Elite-zx/events{/privacy}",
        "followers_url": "https://api.github.com/users/Elite-zx/followers",
        "following_url": "https://api.github.com/users/Elite-zx/following{/other_user}",
        "gists_url": "https://api.github.com/users/Elite-zx/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Elite-zx",
        "id": 110723979,
        "login": "Elite-zx",
        "node_id": "U_kgDOBpmDiw",
        "organizations_url": "https://api.github.com/users/Elite-zx/orgs",
        "received_events_url": "https://api.github.com/users/Elite-zx/received_events",
        "repos_url": "https://api.github.com/users/Elite-zx/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Elite-zx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Elite-zx/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Elite-zx",
        "user_view_type": "public"
    }
}