{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Describe the bug\n\nUse `typescript-language-server` and  `vim.lsp.buf.code_action` returns wrong code actions \r\nI think`vim.lsp.buf.code_action` parameter diagnostics should be filtered by col. \r\nThe related code isï¼š\r\nhttps://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp/buf.lua#L765\r\n\n\n### Steps to reproduce\n\n1. add a ts file like  that\r\n```typescript\r\nfunction a(x/**cursor here**/) {\r\n  console.log(x)\r\n}\r\nexport const b = 1\r\n```\r\n2. put the cursor at parameter x\r\n3. execute vim.lsp.buf.code_action\r\n4. the code action list has item ` Remove unused declaration for: 'x'`\n\n### Expected behavior\n\nthe code action list has not ` Remove unused declaration for: 'x'`\n\n### Neovim version (nvim -v)\n\nNVIM v0.9.0-dev-7ef5e363d-dirty\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nwindows wsl2\n\n### Terminal name/version\n\nwindow terminal 1.15\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nbuild from repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "i am not sure what design of there . but i think you can do it at local . get diagnostic at cursor and pass it to context.  I am not test these code . write in github :)\r\n\r\n```lua\r\nlocal function get_diagnostic_at_cursor()\r\n  local cur_buf = api.nvim_get_current_buf()\r\n  local line, col = unpack(api.nvim_win_get_cursor(0))\r\n  local entrys = diagnostic.get(cur_buf, { lnum = line - 1 })\r\n  local res = {}\r\n  for _, v in pairs(entrys) do\r\n    if v.col <= col and v.end_col >= col then\r\n      table.insert(res, {\r\n        code = v.code,\r\n        message = v.message,\r\n        range = {\r\n          ['start'] = {\r\n            character = v.col,\r\n            line = v.lnum,\r\n          },\r\n          ['end'] = {\r\n            character = v.end_col,\r\n            line = v.end_lnum,\r\n          },\r\n        },\r\n        severity = v.severity,\r\n        source = v.source or nil,\r\n      })\r\n    end\r\n  end\r\n  return res\r\nend\r\n\r\nvim.lsp.buf.code_action({\r\n context = {\r\n      diagnostics = get_diagnostic_at_cursor()\r\n}})\r\n```",
            "created_at": "2023-01-24T14:39:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-1402056008",
            "id": 1402056008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM5Tka1I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1402056008/reactions"
            },
            "updated_at": "2023-01-24T14:40:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1402056008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> i am not sure what design of there . but i think you can do it at local . get diagnostic at cursor and pass it to context. I am not test these code . write in github :)\r\n> \r\n> ```lua\r\n> local function get_diagnostic_at_cursor()\r\n>   local cur_buf = api.nvim_get_current_buf()\r\n>   local line, col = unpack(api.nvim_win_get_cursor(0))\r\n>   local entrys = diagnostic.get(cur_buf, { lnum = line - 1 })\r\n>   local res = {}\r\n>   for _, v in pairs(entrys) do\r\n>     if v.col <= col and v.end_col >= col then\r\n>       table.insert(res, {\r\n>         code = v.code,\r\n>         message = v.message,\r\n>         range = {\r\n>           ['start'] = {\r\n>             character = v.col,\r\n>             line = v.lnum,\r\n>           },\r\n>           ['end'] = {\r\n>             character = v.end_col,\r\n>             line = v.end_lnum,\r\n>           },\r\n>         },\r\n>         severity = v.severity,\r\n>         source = v.source or nil,\r\n>       })\r\n>     end\r\n>   end\r\n>   return res\r\n> end\r\n> \r\n> vim.lsp.buf.code_action({\r\n>  context = {\r\n>       diagnostics = get_diagnostic_at_cursor()\r\n> }})\r\n> ```\r\n\r\nThis code work well",
            "created_at": "2023-01-24T14:52:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-1402075784",
            "id": 1402075784,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM5TkfqI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1402075784/reactions"
            },
            "updated_at": "2025-03-02T22:24:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1402075784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24446852?v=4",
                "events_url": "https://api.github.com/users/zhoudaxia2016/events{/privacy}",
                "followers_url": "https://api.github.com/users/zhoudaxia2016/followers",
                "following_url": "https://api.github.com/users/zhoudaxia2016/following{/other_user}",
                "gists_url": "https://api.github.com/users/zhoudaxia2016/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zhoudaxia2016",
                "id": 24446852,
                "login": "zhoudaxia2016",
                "node_id": "MDQ6VXNlcjI0NDQ2ODUy",
                "organizations_url": "https://api.github.com/users/zhoudaxia2016/orgs",
                "received_events_url": "https://api.github.com/users/zhoudaxia2016/received_events",
                "repos_url": "https://api.github.com/users/zhoudaxia2016/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zhoudaxia2016/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zhoudaxia2016/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zhoudaxia2016",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I would love to try this out as a new contributor! :)",
            "created_at": "2023-02-23T01:06:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-1441095891",
            "id": 1441095891,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM5V5WDT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1441095891/reactions"
            },
            "updated_at": "2023-02-24T20:52:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1441095891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20521966?v=4",
                "events_url": "https://api.github.com/users/ryand67/events{/privacy}",
                "followers_url": "https://api.github.com/users/ryand67/followers",
                "following_url": "https://api.github.com/users/ryand67/following{/other_user}",
                "gists_url": "https://api.github.com/users/ryand67/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ryand67",
                "id": 20521966,
                "login": "ryand67",
                "node_id": "MDQ6VXNlcjIwNTIxOTY2",
                "organizations_url": "https://api.github.com/users/ryand67/orgs",
                "received_events_url": "https://api.github.com/users/ryand67/received_events",
                "repos_url": "https://api.github.com/users/ryand67/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ryand67/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ryand67/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ryand67",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ryand67 no permission needed. Do take a look at [CONTRIBUTING.md](https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md) though",
            "created_at": "2023-02-24T20:51:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-1444463916",
            "id": 1444463916,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM5WGMUs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1444463916/reactions"
            },
            "updated_at": "2023-02-24T20:51:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1444463916",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I messed around and wrote a patch to incorporate this function into vim.buf.lsp and call it by default, but, in a current version, I am unable to reproduce: column based behaviour is present by default. attaching a minimal repro env\r\n\r\ndockerfile:\r\n```dockerfile\r\nFROM debian:bookworm\r\n\r\nWORKDIR '/test'\r\nRUN apt update\r\nRUN apt install -y git ninja-build gettext libtool-bin cmake g++ pkg-config unzip curl npm nodejs gnutls-bin\r\nRUN npm install -g typescript-language-server typescript\r\nRUN git clone https://github.com/neovim/neovim.git\r\nRUN bash -c \"pushd neovim; make\"\r\nADD ./nvim-mnml /root/.config/nvim\r\nADD ./test.ts /test/test.ts\r\n```\r\n\r\nnvim-mnml/init.lua:\r\n```lua\r\nvim.lsp.start({\r\n  name = 'tsserver',\r\n  cmd = {'typescript-language-server', '--stdio'},\r\n  root_dir = vim.fs.dirname(),\r\n})\r\n\r\nvim.keymap.set('n', '<Leader>a', function()vim.lsp.buf_attach_client(0,1)end)\r\n\r\nvim.api.nvim_create_autocmd('LspAttach', {\r\n  callback = function(args)\r\n    vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\r\n    vim.keymap.set('n', '<Leader>a', vim.lsp.buf.code_action, { buffer = args.buf })\r\n  end,\r\n})\r\n```\r\n\r\ntest.ts:\r\n```typescript\r\nfunction a(x/**cursor here**/) {\r\n  console.log(x)\r\n}\r\nexport const b = 1\r\n```\r\n\r\nI'm less sure -why- it currently works correctly, but, it does. \r\n`docker build --tag nvim-test . ;docker run -t -i nvim-test bash -c 'cd neovim/runtime/lua; /test/neovim/build/bin/nvim /test/test.ts'` to drop into a test env, Leader-a to attach, and then again to run code actions. Leader should naturally be backslash.\r\n\r\nedit: i can naturally push the patch if that's useful, lmao, but, seems inadvisable\r\n\r\nsecond edit: i guess it could be a wsl thing somehow? that seems bonkers tho, and not worth fixing nvim side",
            "created_at": "2023-04-02T21:32:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-1493445024",
            "id": 1493445024,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM5ZBCmg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493445024/reactions"
            },
            "updated_at": "2023-04-02T21:45:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493445024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6333434?v=4",
                "events_url": "https://api.github.com/users/to-json/events{/privacy}",
                "followers_url": "https://api.github.com/users/to-json/followers",
                "following_url": "https://api.github.com/users/to-json/following{/other_user}",
                "gists_url": "https://api.github.com/users/to-json/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/to-json",
                "id": 6333434,
                "login": "to-json",
                "node_id": "MDQ6VXNlcjYzMzM0MzQ=",
                "organizations_url": "https://api.github.com/users/to-json/orgs",
                "received_events_url": "https://api.github.com/users/to-json/received_events",
                "repos_url": "https://api.github.com/users/to-json/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/to-json/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/to-json/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/to-json",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "followup: the current `code_action` impl uses the deprecated `get_line_diagnostics` and wants a rewrite for that reason anyway, so i might just do that, buuut that involves essentially rewriting `get_line_diagnostics` in the `buf` namespace in terms of `diagnostic.get`. is  that actually the desired outcome of deprecating `get_line_diagnostics`? the other thought i had, since `get` currently takes a `line`, was to amend it to also take a `col` or `cursor`. given that I don't actually understand the choice to deprecate the helper api, gonna hold on that a moment until this issue gets feedback",
            "created_at": "2023-04-02T21:51:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-1493448278",
            "id": 1493448278,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM5ZBDZW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493448278/reactions"
            },
            "updated_at": "2023-04-02T21:51:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1493448278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6333434?v=4",
                "events_url": "https://api.github.com/users/to-json/events{/privacy}",
                "followers_url": "https://api.github.com/users/to-json/followers",
                "following_url": "https://api.github.com/users/to-json/following{/other_user}",
                "gists_url": "https://api.github.com/users/to-json/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/to-json",
                "id": 6333434,
                "login": "to-json",
                "node_id": "MDQ6VXNlcjYzMzM0MzQ=",
                "organizations_url": "https://api.github.com/users/to-json/orgs",
                "received_events_url": "https://api.github.com/users/to-json/received_events",
                "repos_url": "https://api.github.com/users/to-json/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/to-json/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/to-json/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/to-json",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Seems like it should get diagnostics not only exactly at cursor position, but also diagnostics which \"cover\" cursor position, if diagnostic is multiline",
            "created_at": "2023-09-14T05:10:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-1718773010",
            "id": 1718773010,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM5mcmUS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718773010/reactions"
            },
            "updated_at": "2023-09-14T05:10:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718773010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Why does this matter? What's wrong with showing diagnostics from the whole line? It is not common to have more than a few diagnostics for a given line. And it can be useful to see diagnostics on current line without having to navigate to the exact column.",
            "created_at": "2025-03-02T22:24:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-2692939194",
            "id": 2692939194,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM6ggv26",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2692939194/reactions"
            },
            "updated_at": "2025-03-02T22:24:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2692939194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is not about (showing) diagnostics but about (triggering) code actions. Different thing. Even if you want to see all diagnostics, you (very reasonably) want to be able to be more selective in triggering buffer edits.",
            "created_at": "2025-03-02T22:26:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/21985#issuecomment-2692939939",
            "id": 2692939939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21985",
            "node_id": "IC_kwDOAPphoM6ggwCj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2692939939/reactions"
            },
            "updated_at": "2025-03-02T22:27:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2692939939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21985/comments",
    "created_at": "2023-01-24T14:23:28Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/21985/events",
    "html_url": "https://github.com/neovim/neovim/issues/21985",
    "id": 1555083336,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, self-contained. Do NOT ask \"can I work on this\", just read CONTRIBUTING.md",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "",
            "id": 606691254,
            "name": "has:plan",
            "node_id": "MDU6TGFiZWw2MDY2OTEyNTQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:plan"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/21985/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 701,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 634,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-03-02T19:20:00Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5csLBI",
    "number": 21985,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/21985/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/21985/timeline",
    "title": "vim.lsp.buf.code_action should get diagnostics at cursor, not line",
    "updated_at": "2025-03-02T22:27:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/21985",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24446852?v=4",
        "events_url": "https://api.github.com/users/zhoudaxia2016/events{/privacy}",
        "followers_url": "https://api.github.com/users/zhoudaxia2016/followers",
        "following_url": "https://api.github.com/users/zhoudaxia2016/following{/other_user}",
        "gists_url": "https://api.github.com/users/zhoudaxia2016/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zhoudaxia2016",
        "id": 24446852,
        "login": "zhoudaxia2016",
        "node_id": "MDQ6VXNlcjI0NDQ2ODUy",
        "organizations_url": "https://api.github.com/users/zhoudaxia2016/orgs",
        "received_events_url": "https://api.github.com/users/zhoudaxia2016/received_events",
        "repos_url": "https://api.github.com/users/zhoudaxia2016/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zhoudaxia2016/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zhoudaxia2016/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zhoudaxia2016",
        "user_view_type": "public"
    }
}