{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "- `nvim --version`: 0.2.0\r\n- Vim (version: ) behaves differently? 8.0.0197\r\n- Operating system/version: Debian GNU/Linux\r\n\r\n### Actual behaviour\r\n`call feedkeys('a', 'x!')`, in `Test_cursorhold_insert`, causes nvim to exit when stdin is `/dev/null`.\r\n\r\n<details>\r\n<summary>Stack trace when <code>read_error_exit()</code>is called</summary>\r\n\r\n```\r\n(gdb) bt\r\n#0  os_inchar (buf=buf@entry=0x7ffff5507f3a \"\", maxlen=maxlen@entry=71, ms=ms@entry=0, tb_change_cnt=tb_change_cnt@entry=9) at ./src/nvim/os/input.c:137\r\n#1  0x00005555556672c4 in inchar (buf=0x7ffff5507f3a \"\", maxlen=215, wait_time=0, tb_change_cnt=9)at ./src/nvim/getchar.c:2423\r\n#2  0x00005555556690d1 in vgetorpeek (advance=0) at ./src/nvim/getchar.c:2243\r\n#3  0x000055555566a160 in char_avail () at ./src/nvim/getchar.c:1567\r\n#4  0x00005555555d575c in insert_check (state=0x7fffffff9570) at ./src/nvim/edit.c:540\r\n#5  0x0000555555741f8b in state_enter (s=s@entry=0x7fffffff9570) at ./src/nvim/state.c:25\r\n#6  0x00005555555d61c0 in insert_enter (s=0x7fffffff9570) at ./src/nvim/edit.c:458\r\n#7  edit (cmdchar=<optimized out>, startln=<optimized out>, count=1) at ./src/nvim/edit.c:1335\r\n#8  0x00005555556a9010 in invoke_edit (repl=<optimized out>, cmd=<optimized out>, startln=<optimized out>, cap=<optimized out>, cap=<optimized out>) at ./src/nvim/normal.c:7520\r\n#9  0x00005555556b5157 in normal_execute (state=state@entry=0x7fffffff9690, key=<optimized out>) at ./src/nvim/normal.c:1137\r\n#10 0x00005555556b6166 in normal_cmd (oap=oap@entry=0x7fffffff97d0, toplevel=toplevel@entry=true) at ./src/nvim/normal.c:7935\r\n#11 0x0000555555636e06 in exec_normal (was_typed=was_typed@entry=true) at ./src/nvim/ex_docmd.c:8166\r\n#12 0x00005555555bc78a in nvim_feedkeys (keys=..., mode=..., escape_csi=escape_csi@entry=true) at ./src/nvim/api/vim.c:114\r\n#13 0x00005555555ef916 in f_feedkeys (argvars=0x7fffffff9be0, rettv=<optimized out>, fptr=<optimized out>) at ./src/nvim/eval.c:8252\r\n#14 0x00005555555fae6f in call_func (funcname=funcname@entry=0x7ffff550c3c0 \"feedkeys\", len=len@entry=8, rettv=rettv@entry=0x7fffffff9df0, argcount_in=argcount_in@entry=2, argvars_in=argvars_in@entry=0x7fffffff9be0, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffff9ddc, evaluate=true, partial=0x0, selfdict_in=0x0) at ./src/nvim/eval.c:6389\r\n#15 0x00005555555ffbcf in get_func_tv (name=name@entry=0x7ffff550c3c0 \"feedkeys\", len=8, rettv=rettv@entry=0x7fffffff9df0, arg=arg@entry=0x7fffffff9de0, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffff9ddc, evaluate=1, partial=0x0, selfdict=0x0) at ./src/nvim/eval.c:6129\r\n#16 0x0000555555604567 in ex_call (eap=0x7fffffffa030) at ./src/nvim/eval.c:2760\r\n#17 0x0000555555639694 in do_one_cmd (cookie=0x7ffff54d5800, fgetline=0x5555555fc6c0 <get_func_line>, cstack=0x7fffffffa1c0, flags=7, cmdlinep=0x7fffffff9f80) at ./src/nvim/ex_docmd.c:2240\r\n#18 do_cmdline (cmdline=cmdline@entry=0x0, fgetline=fgetline@entry=0x5555555fc6c0 <get_func_line>,cookie=cookie@entry=0x7ffff54d5800, flags=flags@entry=7) at ./src/nvim/ex_docmd.c:606\r\n#19 0x00005555555f9fdc in call_user_func (fp=fp@entry=0x7ffff5444480, argcount=argcount@entry=0, argvars=argvars@entry=0x7fffffffacf0, rettv=rettv@entry=0x7fffffffaf00, firstline=firstline@entry=1,lastline=lastline@entry=1, selfdict=<optimized out>) at ./src/nvim/eval.c:21089\r\n#20 0x00005555555fab67 in call_func (funcname=funcname@entry=0x7ffff5534480 \"Test_cursorhold_insert\", len=len@entry=22, rettv=rettv@entry=0x7fffffffaf00, argcount_in=argcount_in@entry=0, argvars_in=argvars_in@entry=0x7fffffffacf0, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffffaeec, evaluate=true, partial=0x0, selfdict_in=0x0) at ./src/nvim/eval.c:6374\r\n#21 0x00005555555ffbcf in get_func_tv (name=name@entry=0x7ffff5534480 \"Test_cursorhold_insert\", len=22, rettv=rettv@entry=0x7fffffffaf00, arg=arg@entry=0x7fffffffaef0, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffffaeec, evaluate=1, partial=0x0, selfdict=0x0) at ./src/nvim/eval.c:6129\r\n#22 0x0000555555604567 in ex_call (eap=0x7fffffffb140) at ./src/nvim/eval.c:2760\r\n#23 0x0000555555639694 in do_one_cmd (cookie=0x7ffff54d5000, fgetline=0x5555555fc6c0 <get_func_line>, cstack=0x7fffffffb2d0, flags=3, cmdlinep=0x7fffffffb090) at ./src/nvim/ex_docmd.c:2240\r\n#24 do_cmdline (cmdline=<optimized out>, fgetline=0x5555555fc6c0 <get_func_line>, cookie=0x7ffff54d5000, flags=flags@entry=3) at ./src/nvim/ex_docmd.c:606\r\n#25 0x0000555555602f04 in ex_execute (eap=0x7fffffffba90) at ./src/nvim/eval.c:19302\r\n#26 0x0000555555639694 in do_one_cmd (cookie=0x7ffff54d5000, fgetline=0x5555555fc6c0 <get_func_line>, cstack=0x7fffffffbc20, flags=7, cmdlinep=0x7fffffffb9e0) at ./src/nvim/ex_docmd.c:2240\r\n#27 do_cmdline (cmdline=cmdline@entry=0x0, fgetline=fgetline@entry=0x5555555fc6c0 <get_func_line>,cookie=cookie@entry=0x7ffff54d5000, flags=flags@entry=7) at ./src/nvim/ex_docmd.c:606\r\n#28 0x00005555555f9fdc in call_user_func (fp=fp@entry=0x7ffff5501240, argcount=argcount@entry=1, argvars=argvars@entry=0x7fffffffc750, rettv=rettv@entry=0x7fffffffc960, firstline=firstline@entry=1,lastline=lastline@entry=1, selfdict=<optimized out>) at ./src/nvim/eval.c:21089\r\n#29 0x00005555555fab67 in call_func (funcname=funcname@entry=0x7ffff550c200 \"RunTheTest\", len=len@entry=10, rettv=rettv@entry=0x7fffffffc960, argcount_in=argcount_in@entry=1, argvars_in=argvars_in@entry=0x7fffffffc750, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffffc94c, evaluate=true, partial=0x0, selfdict_in=0x0) at ./src/nvim/eval.c:6374\r\n#30 0x00005555555ffbcf in get_func_tv (name=name@entry=0x7ffff550c200 \"RunTheTest\", len=10, rettv=rettv@entry=0x7fffffffc960, arg=arg@entry=0x7fffffffc950, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffffc94c, evaluate=1, partial=0x0, selfdict=0x0) at ./src/nvim/eval.c:6129\r\n#31 0x0000555555604567 in ex_call (eap=0x7fffffffcba0) at ./src/nvim/eval.c:2760\r\n#32 0x0000555555639694 in do_one_cmd (cookie=0x7fffffffcb40, fgetline=0x555555631c60 <get_loop_line>, cstack=0x7fffffffcd30, flags=7, cmdlinep=0x7fffffffcaf0) at ./src/nvim/ex_docmd.c:2240\r\n#33 do_cmdline (cmdline=cmdline@entry=0x7ffff54cf400 \"\\\" This script is sourced while editing the .vim file with the tests.\", fgetline=fgetline@entry=0x55555562cc90 <getsourceline>, cookie=cookie@entry=0x7fffffffd310, flags=flags@entry=7) at ./src/nvim/ex_docmd.c:606\r\n#34 0x000055555562d2e6 in do_source (fname=fname@entry=0x7ffff5437ba3 \"runtest.vim\", check_other=check_other@entry=0, is_vimrc=is_vimrc@entry=0) at ./src/nvim/ex_cmds2.c:2935\r\n#35 0x000055555562dd4c in cmd_source (fname=0x7ffff5437ba3 \"runtest.vim\", eap=<optimized out>) at ./src/nvim/ex_cmds2.c:2680\r\n#36 0x0000555555639694 in do_one_cmd (cookie=0x0, fgetline=0x0, cstack=0x7fffffffd710, flags=10, cmdlinep=0x7fffffffd4d0) at ./src/nvim/ex_docmd.c:2240\r\n#37 do_cmdline (cmdline=<optimized out>, fgetline=0x0, cookie=0x0, flags=10) at ./src/nvim/ex_docmd.c:606\r\n#38 0x00005555555ac576 in exe_commands (parmp=0x7fffffffdce0) at ./src/nvim/main.c:1633\r\n#39 main (argc=<optimized out>, argv=<optimized out>) at ./src/nvim/main.c:508\r\n```\r\n\r\n</details>\r\n\r\n### Expected behaviour\r\nnvim gracefully handles getting EOF from stdin (common during testing).\r\n\r\n### Steps to reproduce using `nvim -u NORC`\r\n\r\n```\r\nmake -B -C src/nvim/testdir test_autocmd.res </dev/null\r\n```\r\n\r\nI'm always able to reproduce this when building Neovim inside of [sbuild], which is preventing me from uploading 0.2.0 to Debian.  When manually trying to reproduce it using the above make command, it works fine on some systems but fails on others.  Not quite sure why, on some systems, it fails in sbuild but works manually.\r\n\r\nVim has some [code] to handle a similar situation, but in that case it's calling `fill_input_buf(FALSE);` which causes it to return from the function before calling `read_error_exit();`.\r\n\r\n[sbuild]: https://wiki.debian.org/sbuild\r\n[code]: https://github.com/vim/vim/blob/2a0b06def49198aef45ef173f524a638a700f9c9/src/ui.c#L1855-L1878",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmm, commented out those parts of test_autocmd.vim and now I'm seeing similar issues.\r\n\r\n---\r\n* test_hlsearch.vim\r\n\r\n<details>\r\n<summary>Stacktrace</summary>\r\n\r\n```\r\n(gdb) bt\r\n#0  os_inchar (buf=buf@entry=0x555555a0dca0 <typebuf_init> \"\", maxlen=maxlen@entry=88, ms=ms@entry=0, tb_change_cnt=tb_change_cnt@entry=1) at ../src/nvim/os/input.c:137\r\n#1  0x0000555555667974 in inchar (buf=0x555555a0dca0 <typebuf_init> \"\", maxlen=264, wait_time=0, tb_change_cnt=1) at ../src/nvim/getchar.c:2423\r\n#2  0x0000555555669781 in vgetorpeek (advance=0) at ../src/nvim/getchar.c:2243\r\n#3  0x000055555566a7d9 in vpeekc_any () at ../src/nvim/getchar.c:1552\r\n#4  0x00005555555ecb25 in f_getchar (argvars=0x7fffffff9bb0, rettv=0x7fffffff9dc0, fptr=<optimized out>) at ../src/nvim/eval.c:9303\r\n#5  0x00005555555fb54e in call_func (funcname=funcname@entry=0x7ffff54114b8 \"getchar\", len=len@entry=7, rettv=rettv@entry=0x7fffffff9dc0, argcount_in=argcount_in@entry=1, argvars_in=argvars_in@entry=0x7fffffff9bb0, argv_func=argv_func@entry=0x0, firstline=5, lastline=5, doesrange=0x7fffffff9dac, evaluate=true, partial=0x0, selfdict_in=0x0) at ../src/nvim/eval.c:6389\r\n#6  0x00005555556002af in get_func_tv (name=name@entry=0x7ffff54114b8 \"getchar\", len=7, rettv=rettv@entry=0x7fffffff9dc0, arg=arg@entry=0x7fffffff9db0, firstline=firstline@entry=5, lastline=lastline@entry=5, doesrange=0x7fffffff9dac, evaluate=1, partial=0x0, selfdict=0x0) at ../src/nvim/eval.c:6129\r\n#7  0x0000555555604c47 in ex_call (eap=0x7fffffffa000) at ../src/nvim/eval.c:2760\r\n#8  0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d5800, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffa190, flags=7, cmdlinep=0x7fffffff9f50) at ../src/nvim/ex_docmd.c:2240\r\n#9  do_cmdline (cmdline=cmdline@entry=0x0, fgetline=fgetline@entry=0x5555555fcda0 <get_func_line>, cookie=cookie@entry=0x7ffff54d5800, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#10 0x00005555555fa80c in call_user_func (fp=fp@entry=0x7ffff5501300, argcount=argcount@entry=0, argvars=argvars@entry=0x7fffffffacc0, rettv=rettv@entry=0x7fffffffaed0, firstline=firstline@entry=1, lastline=lastline@entry=1, selfdict=<optimized out>) at ../src/nvim/eval.c:21089\r\n#11 0x00005555555fb521 in call_func (funcname=funcname@entry=0x7ffff5437590 \"Test_hlsearch\", len=len@entry=13, rettv=rettv@entry=0x7fffffffaed0, argcount_in=argcount_in@entry=0, argvars_in=argvars_in@entry=0x7fffffffacc0, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffffaebc, evaluate=true, partial=0x0, selfdict_in=0x0) at ../src/nvim/eval.c:6374\r\n#12 0x00005555556002af in get_func_tv (name=name@entry=0x7ffff5437590 \"Test_hlsearch\", len=13, rettv=rettv@entry=0x7fffffffaed0, arg=arg@entry=0x7fffffffaec0, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffffaebc, evaluate=1, partial=0x0, selfdict=0x0) at ../src/nvim/eval.c:6129\r\n#13 0x0000555555604c47 in ex_call (eap=0x7fffffffb110) at ../src/nvim/eval.c:2760\r\n#14 0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d5000, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffb2a0, flags=3, cmdlinep=0x7fffffffb060) at ../src/nvim/ex_docmd.c:2240\r\n#15 do_cmdline (cmdline=<optimized out>, fgetline=0x5555555fcda0 <get_func_line>, cookie=0x7ffff54d5000, flags=flags@entry=3) at ../src/nvim/ex_docmd.c:606\r\n#16 0x00005555556035e4 in ex_execute (eap=0x7fffffffba60) at ../src/nvim/eval.c:19302\r\n#17 0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d5000, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffbbf0, flags=7, cmdlinep=0x7fffffffb9b0) at ../src/nvim/ex_docmd.c:2240\r\n#18 do_cmdline (cmdline=cmdline@entry=0x0, fgetline=fgetline@entry=0x5555555fcda0 <get_func_line>, cookie=cookie@entry=0x7ffff54d5000, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#19 0x00005555555fa80c in call_user_func (fp=fp@entry=0x7ffff5501240, argcount=argcount@entry=1, argvars=argvars@entry=0x7fffffffc720, rettv=rettv@entry=0x7fffffffc930, firstline=firstline@entry=1, lastline=lastline@entry=1, selfdict=<optimized out>) at ../src/nvim/eval.c:21089\r\n#20 0x00005555555fb521 in call_func (funcname=funcname@entry=0x7ffff5437570 \"RunTheTest\", len=len@entry=10, rettv=rettv@entry=0x7fffffffc930, argcount_in=argcount_in@entry=1, argvars_in=argvars_in@entry=0x7fffffffc720, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffffc91c, evaluate=true, partial=0x0, selfdict_in=0x0) at ../src/nvim/eval.c:6374\r\n#21 0x00005555556002af in get_func_tv (name=name@entry=0x7ffff5437570 \"RunTheTest\", len=10, rettv=rettv@entry=0x7fffffffc930, arg=arg@entry=0x7fffffffc920, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffffc91c, evaluate=1, partial=0x0, selfdict=0x0) at ../src/nvim/eval.c:6129\r\n#22 0x0000555555604c47 in ex_call (eap=0x7fffffffcb70) at ../src/nvim/eval.c:2760\r\n#23 0x0000555555639e0c in do_one_cmd (cookie=0x7fffffffcb10, fgetline=0x555555632340 <get_loop_line>, cstack=0x7fffffffcd00, flags=7, cmdlinep=0x7fffffffcac0) at ../src/nvim/ex_docmd.c:2240\r\n#24 do_cmdline (cmdline=cmdline@entry=0x7ffff54cf400 \"\\\" This script is sourced while editing the .vim file with the tests.\", fgetline=fgetline@entry=0x55555562d370 <getsourceline>, cookie=cookie@entry=0x7fffffffd2e0, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#25 0x000055555562d9c6 in do_source (fname=fname@entry=0x7ffff5437ba3 \"runtest.vim\", check_other=check_other@entry=0, is_vimrc=is_vimrc@entry=0) at ../src/nvim/ex_cmds2.c:2935\r\n#26 0x000055555562e42c in cmd_source (fname=0x7ffff5437ba3 \"runtest.vim\", eap=<optimized out>) at ../src/nvim/ex_cmds2.c:2680\r\n#27 0x0000555555639e0c in do_one_cmd (cookie=0x0, fgetline=0x0, cstack=0x7fffffffd6e0, flags=10, cmdlinep=0x7fffffffd4a0) at ../src/nvim/ex_docmd.c:2240\r\n#28 do_cmdline (cmdline=<optimized out>, fgetline=0x0, cookie=0x0, flags=10) at ../src/nvim/ex_docmd.c:606\r\n#29 0x00005555555ad0b6 in exe_commands (parmp=0x7fffffffdcb0) at ../src/nvim/main.c:1633\r\n#30 main (argc=<optimized out>, argv=<optimized out>) at ../src/nvim/main.c:508\r\n```\r\n\r\n</details>\r\n\r\n---\r\n* test_normal.vim\r\n\r\n<details>\r\n<summary>Stacktrace</summary>\r\n\r\n```\r\n#0  os_inchar (buf=buf@entry=0x7ffff550857c \"\", maxlen=maxlen@entry=71, ms=ms@entry=0, tb_change_cnt=tb_change_cnt@entry=85) at ../src/nvim/os/input.c:137\r\n#1  0x0000555555667974 in inchar (buf=0x7ffff550857c \"\", maxlen=215, wait_time=0, tb_change_cnt=85) at ../src/nvim/getchar.c:2423\r\n#2  0x0000555555669781 in vgetorpeek (advance=0) at ../src/nvim/getchar.c:2243\r\n#3  0x000055555566a810 in char_avail () at ../src/nvim/getchar.c:1567\r\n#4  0x00005555556af0df in add_to_showcmd (c=<optimized out>) at ../src/nvim/normal.c:3362\r\n#5  0x00005555556b55ab in normal_get_additional_char (s=0x7fffffff9660) at ../src/nvim/normal.c:702\r\n#6  normal_execute (state=state@entry=0x7fffffff9660, key=<optimized out>) at ../src/nvim/normal.c:1087\r\n#7  0x00005555556b6826 in normal_cmd (oap=oap@entry=0x7fffffff97a0, toplevel=toplevel@entry=true) at ../src/nvim/normal.c:7935\r\n#8  0x00005555556374e6 in exec_normal (was_typed=was_typed@entry=true) at ../src/nvim/ex_docmd.c:8166\r\n#9  0x00005555555bd2ca in nvim_feedkeys (keys=..., mode=..., escape_csi=escape_csi@entry=true) at ../src/nvim/api/vim.c:114\r\n#10 0x00005555555eff46 in f_feedkeys (argvars=0x7fffffff9bb0, rettv=<optimized out>, fptr=<optimized out>) at ../src/nvim/eval.c:8252\r\n#11 0x00005555555fb54e in call_func (funcname=funcname@entry=0x7ffff5437d60 \"feedkeys\", len=len@entry=8, rettv=rettv@entry=0x7fffffff9dc0, argcount_in=argcount_in@entry=2, argvars_in=argvars_in@entry=0x7fffffff9bb0, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffff9dac, evaluate=true, partial=0x0, selfdict_in=0x0) at ../src/nvim/eval.c:6389\r\n#12 0x00005555556002af in get_func_tv (name=name@entry=0x7ffff5437d60 \"feedkeys\", len=8, rettv=rettv@entry=0x7fffffff9dc0, arg=arg@entry=0x7fffffff9db0, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffff9dac, evaluate=1, partial=0x0, selfdict=0x0) at ../src/nvim/eval.c:6129\r\n#13 0x0000555555604c47 in ex_call (eap=0x7fffffffa000) at ../src/nvim/eval.c:2760\r\n#14 0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d5800, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffa190, flags=7, cmdlinep=0x7fffffff9f50) at ../src/nvim/ex_docmd.c:2240\r\n#15 do_cmdline (cmdline=cmdline@entry=0x0, fgetline=fgetline@entry=0x5555555fcda0 <get_func_line>, cookie=cookie@entry=0x7ffff54d5800, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#16 0x00005555555fa80c in call_user_func (fp=fp@entry=0x7ffff54473c0, argcount=argcount@entry=0, argvars=argvars@entry=0x7fffffffacc0, rettv=rettv@entry=0x7fffffffaed0, firstline=firstline@entry=1, lastline=lastline@entry=1, selfdict=<optimized out>) at ../src/nvim/eval.c:21089\r\n#17 0x00005555555fb521 in call_func (funcname=funcname@entry=0x7ffff5590f20 \"Test_normal50_commandline\", len=len@entry=25, rettv=rettv@entry=0x7fffffffaed0, argcount_in=argcount_in@entry=0, argvars_in=argvars_in@entry=0x7fffffffacc0, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffffaebc, evaluate=true, partial=0x0, selfdict_in=0x0) at ../src/nvim/eval.c:6374\r\n#18 0x00005555556002af in get_func_tv (name=name@entry=0x7ffff5590f20 \"Test_normal50_commandline\", len=25, rettv=rettv@entry=0x7fffffffaed0, arg=arg@entry=0x7fffffffaec0, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffffaebc, evaluate=1, partial=0x0, selfdict=0x0) at ../src/nvim/eval.c:6129\r\n#19 0x0000555555604c47 in ex_call (eap=0x7fffffffb110) at ../src/nvim/eval.c:2760\r\n#20 0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d5000, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffb2a0, flags=3, cmdlinep=0x7fffffffb060) at ../src/nvim/ex_docmd.c:2240\r\n#21 do_cmdline (cmdline=<optimized out>, fgetline=0x5555555fcda0 <get_func_line>, cookie=0x7ffff54d5000, flags=flags@entry=3) at ../src/nvim/ex_docmd.c:606\r\n#22 0x00005555556035e4 in ex_execute (eap=0x7fffffffba60) at ../src/nvim/eval.c:19302\r\n#23 0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d5000, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffbbf0, flags=7, cmdlinep=0x7fffffffb9b0) at ../src/nvim/ex_docmd.c:2240\r\n#24 do_cmdline (cmdline=cmdline@entry=0x0, fgetline=fgetline@entry=0x5555555fcda0 <get_func_line>, cookie=cookie@entry=0x7ffff54d5000, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#25 0x00005555555fa80c in call_user_func (fp=fp@entry=0x7ffff5501240, argcount=argcount@entry=1, argvars=argvars@entry=0x7fffffffc720, rettv=rettv@entry=0x7fffffffc930, firstline=firstline@entry=1, lastline=lastline@entry=1, selfdict=<optimized out>) at ../src/nvim/eval.c:21089\r\n#26 0x00005555555fb521 in call_func (funcname=funcname@entry=0x7ffff5541ed0 \"RunTheTest\", len=len@entry=10, rettv=rettv@entry=0x7fffffffc930, argcount_in=argcount_in@entry=1, argvars_in=argvars_in@entry=0x7fffffffc720, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffffc91c, evaluate=true, partial=0x0, selfdict_in=0x0) at ../src/nvim/eval.c:6374\r\n#27 0x00005555556002af in get_func_tv (name=name@entry=0x7ffff5541ed0 \"RunTheTest\", len=10, rettv=rettv@entry=0x7fffffffc930, arg=arg@entry=0x7fffffffc920, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffffc91c, evaluate=1, partial=0x0, selfdict=0x0) at ../src/nvim/eval.c:6129\r\n#28 0x0000555555604c47 in ex_call (eap=0x7fffffffcb70) at ../src/nvim/eval.c:2760\r\n#29 0x0000555555639e0c in do_one_cmd (cookie=0x7fffffffcb10, fgetline=0x555555632340 <get_loop_line>, cstack=0x7fffffffcd00, flags=7, cmdlinep=0x7fffffffcac0) at ../src/nvim/ex_docmd.c:2240\r\n#30 do_cmdline (cmdline=cmdline@entry=0x7ffff54cf400 \"\\\" This script is sourced while editing the .vim file with the tests.\", fgetline=fgetline@entry=0x55555562d370 <getsourceline>, cookie=cookie@entry=0x7fffffffd2e0, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#31 0x000055555562d9c6 in do_source (fname=fname@entry=0x7ffff5437bb3 \"runtest.vim\", check_other=check_other@entry=0, is_vimrc=is_vimrc@entry=0) at ../src/nvim/ex_cmds2.c:2935\r\n#32 0x000055555562e42c in cmd_source (fname=0x7ffff5437bb3 \"runtest.vim\", eap=<optimized out>) at ../src/nvim/ex_cmds2.c:2680\r\n#33 0x0000555555639e0c in do_one_cmd (cookie=0x0, fgetline=0x0, cstack=0x7fffffffd6e0, flags=10, cmdlinep=0x7fffffffd4a0) at ../src/nvim/ex_docmd.c:2240\r\n#34 do_cmdline (cmdline=<optimized out>, fgetline=0x0, cookie=0x0, flags=10) at ../src/nvim/ex_docmd.c:606\r\n#35 0x00005555555ad0b6 in exe_commands (parmp=0x7fffffffdcb0) at ../src/nvim/main.c:1633\r\n#36 main (argc=<optimized out>, argv=<optimized out>) at ../src/nvim/main.c:508\r\n```\r\n\r\n</details>\r\n\r\n---\r\n* test_source_utf8.vim via test_alot.vim\r\n\r\n<details>\r\n<summary>Stacktrace</summary>\r\n\r\n```\r\n#0  os_inchar (buf=buf@entry=0x7ffff5507cbb \"\", maxlen=maxlen@entry=71, ms=ms@entry=0, tb_change_cnt=tb_change_cnt@entry=2177) at ../src/nvim/os/input.c:137\r\n#1  0x0000555555667974 in inchar (buf=0x7ffff5507cbb \"\", maxlen=215, wait_time=0, tb_change_cnt=2177) at ../src/nvim/getchar.c:2423\r\n#2  0x0000555555669781 in vgetorpeek (advance=0) at ../src/nvim/getchar.c:2243\r\n#3  0x000055555566a724 in openscript (name=<optimized out>, directly=<optimized out>) at ../src/nvim/getchar.c:1283\r\n#4  0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d9000, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffa190, flags=7, cmdlinep=0x7fffffff9f50) at ../src/nvim/ex_docmd.c:2240\r\n#5  do_cmdline (cmdline=cmdline@entry=0x0, fgetline=fgetline@entry=0x5555555fcda0 <get_func_line>, cookie=cookie@entry=0x7ffff54d9000, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#6  0x00005555555fa80c in call_user_func (fp=fp@entry=0x7ffff5503a00, argcount=argcount@entry=0, argvars=argvars@entry=0x7fffffffacc0, rettv=rettv@entry=0x7fffffffaed0, firstline=firstline@entry=1, lastline=lastline@entry=1, selfdict=<optimized out>) at ../src/nvim/eval.c:21089\r\n#7  0x00005555555fb521 in call_func (funcname=funcname@entry=0x7ffff262d3a0 \"Test_source_utf8\", len=len@entry=16, rettv=rettv@entry=0x7fffffffaed0, argcount_in=argcount_in@entry=0, argvars_in=argvars_in@entry=0x7fffffffacc0, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffffaebc, evaluate=true, partial=0x0, selfdict_in=0x0) at ../src/nvim/eval.c:6374\r\n#8  0x00005555556002af in get_func_tv (name=name@entry=0x7ffff262d3a0 \"Test_source_utf8\", len=16, rettv=rettv@entry=0x7fffffffaed0, arg=arg@entry=0x7fffffffaec0, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffffaebc, evaluate=1, partial=0x0, selfdict=0x0) at ../src/nvim/eval.c:6129\r\n#9  0x0000555555604c47 in ex_call (eap=0x7fffffffb110) at ../src/nvim/eval.c:2760\r\n#10 0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d5000, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffb2a0, flags=3, cmdlinep=0x7fffffffb060) at ../src/nvim/ex_docmd.c:2240\r\n#11 do_cmdline (cmdline=<optimized out>, fgetline=0x5555555fcda0 <get_func_line>, cookie=0x7ffff54d5000, flags=flags@entry=3) at ../src/nvim/ex_docmd.c:606\r\n#12 0x00005555556035e4 in ex_execute (eap=0x7fffffffba60) at ../src/nvim/eval.c:19302\r\n#13 0x0000555555639e0c in do_one_cmd (cookie=0x7ffff54d5000, fgetline=0x5555555fcda0 <get_func_line>, cstack=0x7fffffffbbf0, flags=7, cmdlinep=0x7fffffffb9b0) at ../src/nvim/ex_docmd.c:2240\r\n#14 do_cmdline (cmdline=cmdline@entry=0x0, fgetline=fgetline@entry=0x5555555fcda0 <get_func_line>, cookie=cookie@entry=0x7ffff54d5000, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#15 0x00005555555fa80c in call_user_func (fp=fp@entry=0x7ffff5501240, argcount=argcount@entry=1, argvars=argvars@entry=0x7fffffffc720, rettv=rettv@entry=0x7fffffffc930, firstline=firstline@entry=1, lastline=lastline@entry=1, selfdict=<optimized out>) at ../src/nvim/eval.c:21089\r\n#16 0x00005555555fb521 in call_func (funcname=funcname@entry=0x7ffff5590760 \"RunTheTest\", len=len@entry=10, rettv=rettv@entry=0x7fffffffc930, argcount_in=argcount_in@entry=1, argvars_in=argvars_in@entry=0x7fffffffc720, argv_func=argv_func@entry=0x0, firstline=1, lastline=1, doesrange=0x7fffffffc91c, evaluate=true, partial=0x0, selfdict_in=0x0) at ../src/nvim/eval.c:6374\r\n#17 0x00005555556002af in get_func_tv (name=name@entry=0x7ffff5590760 \"RunTheTest\", len=10, rettv=rettv@entry=0x7fffffffc930, arg=arg@entry=0x7fffffffc920, firstline=firstline@entry=1, lastline=lastline@entry=1, doesrange=0x7fffffffc91c, evaluate=1, partial=0x0, selfdict=0x0) at ../src/nvim/eval.c:6129\r\n#18 0x0000555555604c47 in ex_call (eap=0x7fffffffcb70) at ../src/nvim/eval.c:2760\r\n#19 0x0000555555639e0c in do_one_cmd (cookie=0x7fffffffcb10, fgetline=0x555555632340 <get_loop_line>, cstack=0x7fffffffcd00, flags=7, cmdlinep=0x7fffffffcac0) at ../src/nvim/ex_docmd.c:2240\r\n#20 do_cmdline (cmdline=cmdline@entry=0x7ffff54cf400 \"\\\" This script is sourced while editing the .vim file with the tests.\", fgetline=fgetline@entry=0x55555562d370 <getsourceline>, cookie=cookie@entry=0x7fffffffd2e0, flags=flags@entry=7) at ../src/nvim/ex_docmd.c:606\r\n#21 0x000055555562d9c6 in do_source (fname=fname@entry=0x7ffff5437bb3 \"runtest.vim\", check_other=check_other@entry=0, is_vimrc=is_vimrc@entry=0) at ../src/nvim/ex_cmds2.c:2935\r\n#22 0x000055555562e42c in cmd_source (fname=0x7ffff5437bb3 \"runtest.vim\", eap=<optimized out>) at ../src/nvim/ex_cmds2.c:2680\r\n#23 0x0000555555639e0c in do_one_cmd (cookie=0x0, fgetline=0x0, cstack=0x7fffffffd6e0, flags=10, cmdlinep=0x7fffffffd4a0) at ../src/nvim/ex_docmd.c:2240\r\n#24 do_cmdline (cmdline=<optimized out>, fgetline=0x0, cookie=0x0, flags=10) at ../src/nvim/ex_docmd.c:606\r\n#25 0x00005555555ad0b6 in exe_commands (parmp=0x7fffffffdcb0) at ../src/nvim/main.c:1633\r\n#26 main (argc=<optimized out>, argv=<optimized out>) at ../src/nvim/main.c:508\r\n```\r\n\r\n</details>",
            "created_at": "2017-07-26T04:37:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/6794#issuecomment-317945240",
            "id": 317945240,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6794",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzk0NTI0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/317945240/reactions"
            },
            "updated_at": "2017-07-26T04:37:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/317945240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/vim/vim/commit/91d348abfc0d7ac9b5b19cde0112de8ae4335602 may be a clue.",
            "created_at": "2017-07-31T00:14:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/6794#issuecomment-318940230",
            "id": 318940230,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6794",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxODk0MDIzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/318940230/reactions"
            },
            "updated_at": "2017-07-31T00:14:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/318940230",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The problem description there is leaving a bit out.  It takes more than just stdin to be `/dev/null` to trigger that, since `no_console_input()` also checks `isatty(2)` (full description on [vim-dev](https://groups.google.com/d/msg/vim_dev/_a9DYXDuZ1I/Mb2c3lUbBgAJ)).\r\n\r\nThat being said, I've been wondering if there are any practical scenarios in which this problem would be encountered.  If not, I've been contemplating porting the tests to lua.",
            "created_at": "2017-07-31T00:21:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/6794#issuecomment-318940644",
            "id": 318940644,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6794",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxODk0MDY0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/318940644/reactions"
            },
            "updated_at": "2017-07-31T00:21:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/318940644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Alternatively, we add some moral equivalent of `--not-a-term`.",
            "created_at": "2017-07-31T00:25:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/6794#issuecomment-318940838",
            "id": 318940838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6794",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxODk0MDgzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/318940838/reactions"
            },
            "updated_at": "2017-07-31T00:25:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/318940838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "    make -B -C src/nvim/testdir test_autocmd.res </dev/null\r\n\r\n@jamessan That seems to pass for me on ubuntu. Maybe this was accidentally fixed by the recent changes to stdin handling?",
            "created_at": "2018-06-24T21:58:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/6794#issuecomment-399790709",
            "id": 399790709,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6794",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc5MDcwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/399790709/reactions"
            },
            "updated_at": "2018-06-24T21:58:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/399790709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's because I changed the tests to use `--headless` in https://github.com/neovim/neovim/pull/7104.",
            "created_at": "2018-06-24T22:10:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/6794#issuecomment-399791375",
            "id": 399791375,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6794",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc5MTM3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/399791375/reactions"
            },
            "updated_at": "2018-06-24T22:10:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/399791375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/6794/comments",
    "created_at": "2017-05-23T01:57:25Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/6794/events",
    "html_url": "https://github.com/neovim/neovim/issues/6794",
    "id": 230566209,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 396626349,
            "name": "input",
            "node_id": "MDU6TGFiZWwzOTY2MjYzNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/input"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/6794/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 726,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 630,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-07-07T03:51:31Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUyMzA1NjYyMDk=",
    "number": 6794,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/6794/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/6794/timeline",
    "title": "feedkeys(.., 'x!') causes nvim to exit when stdin is /dev/null",
    "type": {
        "color": "red",
        "created_at": "2024-01-25T10:10:19Z",
        "description": "An unexpected problem or behavior",
        "id": 597163,
        "is_enabled": true,
        "name": "Bug",
        "node_id": "IT_kwDOAGK_Pc4ACRyr",
        "updated_at": "2024-07-26T10:12:30Z"
    },
    "updated_at": "2025-07-02T08:37:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/6794",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
        "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
        "followers_url": "https://api.github.com/users/jamessan/followers",
        "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
        "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jamessan",
        "id": 112971,
        "login": "jamessan",
        "node_id": "MDQ6VXNlcjExMjk3MQ==",
        "organizations_url": "https://api.github.com/users/jamessan/orgs",
        "received_events_url": "https://api.github.com/users/jamessan/received_events",
        "repos_url": "https://api.github.com/users/jamessan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jamessan",
        "user_view_type": "public"
    }
}